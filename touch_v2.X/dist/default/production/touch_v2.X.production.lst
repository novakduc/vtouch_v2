

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 19 01:00:02 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=4,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=4,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	text146,global,reloc=4,class=CODE,delta=1
   170                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   171                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   172  0000                     
   173                           ; Version 2.10
   174                           ; Generated 31/07/2019 GMT
   175                           ; 
   176                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F57K42 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207  0000                     
   208 ;;_mode	offset	0
   209 ;;_channel	offset=-1 (param)
   210 ;;_s	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_data	offset=-1 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_i	offset	0
   217 ;;_lp_speed	offset	0
   218 ;;_new	offset=-4 (param)
   219 ;;_bn	offset=-5 (param)
   220 ;;_slow	offset=-6 (param)
   221 ;;_chan	offset=-1 (param)
   222 ;;_to_what	offset=-2 (param)
   223 ;;_u	offset	0
   224 ;;_s	offset=-2 (param)
   225 ;;_index	offset=-1 (param)
   226 ;;_arg	offset	0
   227 ;;_exp	offset	4
   228 ;;_sign	offset=-1 (param)
   229 ;;_val	offset=-5 (param)
   230 ;;_flipper	offset=-1 (param)
   231 ;;_f	offset	0
   232 ;;_ap	offset	6
   233 ;;_s	offset=-3 (param)
   234 ;;_fmt	offset=-5 (param)
   235 ;;_line	offset=-1 (param)
   236 ;;_vterm	offset=-2 (param)
   237 ;;_numMilliseconds	offset=-2 (param)
   238 ;;_vterm	offset=-1 (param)
   239 ;;_r	offset=-1 (param)
   240 ;;_c	offset=-2 (param)
   241 ;;_strPtr	offset=-4 (param)
   242 ;;_strPtr	offset=-1 (param)
   243 ;;_delay	offset=-4 (param)
   244 ;;_strPtr	offset=-2 (param)
   245 ;;__this	offset=-2 (param)
   246 ;;_clearBuffer	offset=-3 (param)
   247 ;;_s	offset	0
   248 ;;_k	offset	2
   249 ;;_dest	offset=-2 (param)
   250 ;;_c	offset=-4 (param)
   251 ;;_n	offset=-6 (param)
   252 ;;_ap	offset	0
   253 ;;_fmt	offset=-3 (param)
   254 ;;_cfmt	offset	0
   255 ;;_fp	offset=-2 (param)
   256 ;;_fmt	offset=-4 (param)
   257 ;;_ap	offset=-6 (param)
   258 ;;_vfpfcnvrt$4250	offset	0
   259 ;;_vfpfcnvrt$4261	offset	2
   260 ;;_vfpfcnvrt$4249	offset	4
   261 ;;_llu	offset	6
   262 ;;_ll	offset	14
   263 ;;_f	offset	22
   264 ;;_ct	offset	26
   265 ;;_cp	offset	29
   266 ;;_c	offset	31
   267 ;;_fp	offset=-2 (param)
   268 ;;_fmt	offset=-4 (param)
   269 ;;_ap	offset=-6 (param)
   270 ;;_xtoa$4235	offset	0
   271 ;;_xtoa$4234	offset	2
   272 ;;_n	offset	4
   273 ;;_c	offset	12
   274 ;;_i	offset	14
   275 ;;_w	offset	16
   276 ;;_p	offset	18
   277 ;;_fp	offset=-2 (param)
   278 ;;_d	offset=-10 (param)
   279 ;;_x	offset=-11 (param)
   280 ;;_toupper$4919	offset	0
   281 ;;_c	offset=-2 (param)
   282 ;;_c	offset=-2 (param)
   283 ;;_c	offset=-2 (param)
   284 ;;_n	offset	0
   285 ;;_i	offset	8
   286 ;;_w	offset	10
   287 ;;_p	offset	12
   288 ;;_fp	offset=-2 (param)
   289 ;;_d	offset=-10 (param)
   290 ;;_counter	offset	0
   291 ;;_dividend	offset=-8 (param)
   292 ;;_divisor	offset=-16 (param)
   293 ;;_quotient	offset	0
   294 ;;_counter	offset	8
   295 ;;_dividend	offset=-8 (param)
   296 ;;_divisor	offset=-16 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4207	offset	0
   311 ;;_efgtoa$4206	offset	2
   312 ;;_efgtoa$4205	offset	4
   313 ;;_efgtoa$4201	offset	6
   314 ;;_efgtoa$4197	offset	8
   315 ;;_efgtoa$4196	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$4904	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_b	offset=-4 (param)
   355 ;;_a	offset=-8 (param)
   356 ;;_grs	offset	0
   357 ;;_bexp	offset	1
   358 ;;_aexp	offset	2
   359 ;;_signs	offset	3
   360 ;;_b	offset=-4 (param)
   361 ;;_a	offset=-8 (param)
   362 ;;_f1	offset=-4 (param)
   363 ;;_prod	offset	0
   364 ;;_grs	offset	4
   365 ;;_temp	offset	8
   366 ;;_bexp	offset	10
   367 ;;_aexp	offset	11
   368 ;;_sign	offset	12
   369 ;;_b	offset=-4 (param)
   370 ;;_a	offset=-8 (param)
   371 ;;_ff1	offset=-4 (param)
   372 ;;_ff2	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_grs	offset	0
   376 ;;_rem	offset	4
   377 ;;_new_exp	offset	8
   378 ;;_aexp	offset	10
   379 ;;_bexp	offset	11
   380 ;;_sign	offset	12
   381 ;;_b	offset=-4 (param)
   382 ;;_a	offset=-8 (param)
   383 ;;_sign	offset	0
   384 ;;_counter	offset	1
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_quotient	offset	0
   388 ;;_sign	offset	2
   389 ;;_counter	offset	3
   390 ;;_dividend	offset=-2 (param)
   391 ;;_divisor	offset=-4 (param)
   392 ;;_dtoa$4173	offset	0
   393 ;;_n	offset	2
   394 ;;_i	offset	10
   395 ;;_s	offset	12
   396 ;;_w	offset	14
   397 ;;_p	offset	16
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_a	offset=-2 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	8
   407 ;;_counter	offset	9
   408 ;;_dividend	offset=-8 (param)
   409 ;;_divisor	offset=-16 (param)
   410 ;;_w	offset	0
   411 ;;_fp	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_w	offset	0
   414 ;;_i	offset	2
   415 ;;_fp	offset=-2 (param)
   416 ;;_buf	offset=-4 (param)
   417 ;;_p	offset=-6 (param)
   418 ;;_a	offset	0
   419 ;;_s	offset=-2 (param)
   420 ;;_i	offset	0
   421 ;;_c	offset	2
   422 ;;_s	offset=-2 (param)
   423 ;;_fp	offset=-4 (param)
   424 ;;_c	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-1 (param)
   427 ;;__this	offset=-2 (param)
   428 ;;_c	offset=-3 (param)
   429 ;;_atoi$4757	offset	0
   430 ;;_atoi$4755	offset	2
   431 ;;_atoi$4756	offset	4
   432 ;;_n	offset	5
   433 ;;_neg	offset	7
   434 ;;_s	offset=-2 (param)
   435 ;;_isspace$4795	offset	0
   436 ;;_c	offset=-2 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_vterm	offset=-1 (param)
   439 ;;_new_response_info	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_level	offset=-2 (param)
   442 ;;_dutyValue	offset=-2 (param)
   443 ;;_timer	offset=-1 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_count	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_timerVal	offset=-2 (param)
   458 ;;_channel	offset=-1 (param)
   459 ;;_i	offset	0
   460                           
   461                           	psect	idataBANK0
   462  01863C                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _R
   466  01863C  0000               	dw	0
   467  01863E  0000               	dw	0
   468  018640  0000               	dw	0
   469  018642  0000               	dw	0
   470  018644  0000               	dw	0
   471  018646  0000               	dw	0
   472  018648  0000               	dw	0
   473  01864A  0000               	dw	0
   474  01864C  0000               	dw	0
   475  01864E  0000               	dw	0
   476  018650  0000               	dw	0
   477  018652  0000               	dw	0
   478  018654  0000               	dw	0
   479  018656  0000               	dw	0
   480  018658  0000               	dw	0
   481  01865A  0000               	dw	0
   482  01865C  0F5B               	dw	3931
   483  01865E  0F88               	dw	3976
   484  018660  00                 	db	0
   485  018661  0000               	dw	0
   486  018663  00                 	db	0
   487                           
   488                           ;initializer for stoa@F1166
   489  018664  28                 	db	40
   490  018665  6E                 	db	110
   491  018666  75                 	db	117
   492  018667  6C                 	db	108
   493  018668  6C                 	db	108
   494  018669  29                 	db	41
   495  01866A  00                 	db	0
   496                           
   497                           ;initializer for _port_data
   498  01866B  FF                 	db	255
   499  01866C  00                 	db	0
   500  01866D  FF                 	db	255
   501  01866E  00                 	db	0
   502  01866F  FF                 	db	255
   503  018670  00                 	db	0
   504  018671  FF                 	db	255
   505  018672  00                 	db	0
   506  018673  FF                 	db	255
   507  018674  00                 	db	0
   508  018675  FF                 	db	255
   509  018676  00                 	db	0
   510  018677  FF                 	db	255
   511  018678  00                 	db	0
   512  018679  FF                 	db	255
   513  01867A  00                 	db	0
   514                           
   515                           	psect	idataBANK1
   516  0176D8                     __pidataBANK1:
   517                           	opt callstack 0
   518                           
   519                           ;initializer for _V
   520  0176D8  00                 	db	0
   521  0176D9  00                 	db	0
   522  0176DA  00                 	db	0
   523  0176DB  00                 	db	0
   524  0176DC  00                 	db	0
   525  0176DD  00                 	db	0
   526  0176DE  00                 	db	0
   527  0176DF  00                 	db	0
   528  0176E0  00                 	db	0
   529  0176E1  00                 	db	0
   530  0176E2  00                 	db	0
   531  0176E3  00                 	db	0
   532  0176E4  00                 	db	0
   533  0176E5  00                 	db	0
   534  0176E6  00                 	db	0
   535  0176E7  00                 	db	0
   536  0176E8  00                 	db	0
   537  0176E9  00                 	db	0
   538  0176EA  00                 	db	0
   539  0176EB  00                 	db	0
   540  0176EC  00                 	db	0
   541  0176ED  00                 	db	0
   542  0176EE  00                 	db	0
   543  0176EF  00                 	db	0
   544  0176F0  00                 	db	0
   545  0176F1  00                 	db	0
   546  0176F2  00                 	db	0
   547  0176F3  00                 	db	0
   548  0176F4  00                 	db	0
   549  0176F5  00                 	db	0
   550  0176F6  00                 	db	0
   551  0176F7  00                 	db	0
   552  0176F8  00                 	db	0
   553  0176F9  00                 	db	0
   554  0176FA  00                 	db	0
   555  0176FB  00                 	db	0
   556  0176FC  00                 	db	0
   557  0176FD  00                 	db	0
   558  0176FE  00                 	db	0
   559  0176FF  00                 	db	0
   560  017700  00                 	db	0
   561  017701  00                 	db	0
   562  017702  00                 	db	0
   563  017703  00                 	db	0
   564  017704  00                 	db	0
   565  017705  00                 	db	0
   566  017706  00                 	db	0
   567  017707  00                 	db	0
   568  017708  00                 	db	0
   569  017709  00                 	db	0
   570  01770A  00                 	db	0
   571  01770B  00                 	db	0
   572  01770C  00                 	db	0
   573  01770D  00                 	db	0
   574  01770E  00                 	db	0
   575  01770F  00                 	db	0
   576  017710  00                 	db	0
   577  017711  00                 	db	0
   578  017712  00                 	db	0
   579  017713  00                 	db	0
   580  017714  00                 	db	0
   581  017715  00                 	db	0
   582  017716  00                 	db	0
   583  017717  00                 	db	0
   584  017718  00                 	db	0
   585  017719  00                 	db	0
   586  01771A  00                 	db	0
   587  01771B  00                 	db	0
   588  01771C  00                 	db	0
   589  01771D  00                 	db	0
   590  01771E  00                 	db	0
   591  01771F  00                 	db	0
   592  017720  00                 	db	0
   593  017721  00                 	db	0
   594  017722  00                 	db	0
   595  017723  00                 	db	0
   596  017724  00                 	db	0
   597  017725  00                 	db	0
   598  017726  00                 	db	0
   599  017727  00                 	db	0
   600  017728  00                 	db	0
   601  017729  00                 	db	0
   602  01772A  00                 	db	0
   603  01772B  00                 	db	0
   604  01772C  00                 	db	0
   605  01772D  00                 	db	0
   606  01772E  00                 	db	0
   607  01772F  00                 	db	0
   608  017730  00                 	db	0
   609  017731  00                 	db	0
   610  017732  00                 	db	0
   611  017733  00                 	db	0
   612  017734  00                 	db	0
   613  017735  00                 	db	0
   614  017736  00                 	db	0
   615  017737  00                 	db	0
   616  017738  00                 	db	0
   617  017739  00                 	db	0
   618  01773A  00                 	db	0
   619  01773B  00                 	db	0
   620  01773C  00                 	db	0
   621  01773D  00                 	db	0
   622  01773E  00                 	db	0
   623  01773F  00                 	db	0
   624  017740  00                 	db	0
   625  017741  00                 	db	0
   626  017742  00                 	db	0
   627  017743  00                 	db	0
   628  017744  00                 	db	0
   629  017745  00                 	db	0
   630  017746  00                 	db	0
   631  017747  00                 	db	0
   632  017748  00                 	db	0
   633  017749  00                 	db	0
   634  01774A  00                 	db	0
   635  01774B  00                 	db	0
   636  01774C  00                 	db	0
   637  01774D  00                 	db	0
   638  01774E  00                 	db	0
   639  01774F  00                 	db	0
   640  017750  00                 	db	0
   641  017751  00                 	db	0
   642  017752  00                 	db	0
   643  017753  00                 	db	0
   644  017754  00                 	db	0
   645  017755  00                 	db	0
   646  017756  00                 	db	0
   647  017757  00                 	db	0
   648  017758  00                 	db	0
   649  017759  0000               	dw	0
   650  01775B  0000               	dw	0
   651  01775D  0000               	dw	0
   652  01775F  0000               	dw	0
   653  017761  00                 	db	0
   654  017762  00                 	db	0
   655  017763  00                 	db	0
   656  017764  00                 	db	0
   657  017765  00                 	db	0
   658  017766  00                 	db	0
   659  017767  0000               	dw	0
   660  017769  0000               	dw	0
   661  01776B  0000               	dw	0
   662  01776D  0000               	dw	0
   663  01776F  0000               	dw	0
   664  017771  0000               	dw	0
   665  017773  00                 	db	0
   666  017774  00                 	db	0
   667  017775  00                 	db	0
   668  017776  00                 	db	0
   669  017777  00                 	db	0
   670  017778  00                 	db	0
   671  017779  00                 	db	0
   672  01777A  00                 	db	0
   673  01777B  00                 	db	0
   674  01777C  00                 	db	0
   675  01777D  0000               	dw	0
   676  01777F  0000               	dw	0
   677  017781  2D                 	db	45
   678  017782  00                 	db	0
   679  017783  0000               	dw	0
   680  017785  0000               	dw	0
   681  017787  0000               	dw	0
   682  017789  0000               	dw	0
   683  01778B  0000               	dw	0
   684  01778D  0000               	dw	0
   685  01778F  0000               	dw	0
   686  017791  0000               	dw	0
   687                           
   688                           	psect	mediumconst
   689  00FE50                     __pmediumconst:
   690                           	opt callstack 0
   691  00FE50  00                 	db	0
   692  00FE51                     _T:
   693                           	opt callstack 0
   694  00FE51  63                 	db	99
   695  00FE52  6F                 	db	111
   696  00FE53  6D                 	db	109
   697  00FE54  6D                 	db	109
   698  00FE55  61                 	db	97
   699  00FE56  6E                 	db	110
   700  00FE57  64                 	db	100
   701  00FE58  73                 	db	115
   702  00FE59  20                 	db	32
   703  00FE5A  31                 	db	49
   704  00FE5B  00                 	db	0
   705  00FE5C  00                 	db	0
   706  00FE5D  00                 	db	0
   707  00FE5E  00                 	db	0
   708  00FE5F  00                 	db	0
   709  00FE60  00                 	db	0
   710  00FE61  00                 	db	0
   711  00FE62  00                 	db	0
   712  00FE63  64                 	db	100
   713  00FE64  69                 	db	105
   714  00FE65  73                 	db	115
   715  00FE66  70                 	db	112
   716  00FE67  6C                 	db	108
   717  00FE68  61                 	db	97
   718  00FE69  79                 	db	121
   719  00FE6A  73                 	db	115
   720  00FE6B  20                 	db	32
   721  00FE6C  31                 	db	49
   722  00FE6D  00                 	db	0
   723  00FE6E  00                 	db	0
   724  00FE6F  00                 	db	0
   725  00FE70  00                 	db	0
   726  00FE71  00                 	db	0
   727  00FE72  00                 	db	0
   728  00FE73  00                 	db	0
   729  00FE74  00                 	db	0
   730  00FE75  63                 	db	99
   731  00FE76  6F                 	db	111
   732  00FE77  6D                 	db	109
   733  00FE78  6D                 	db	109
   734  00FE79  61                 	db	97
   735  00FE7A  6E                 	db	110
   736  00FE7B  64                 	db	100
   737  00FE7C  73                 	db	115
   738  00FE7D  20                 	db	32
   739  00FE7E  32                 	db	50
   740  00FE7F  00                 	db	0
   741  00FE80  00                 	db	0
   742  00FE81  00                 	db	0
   743  00FE82  00                 	db	0
   744  00FE83  00                 	db	0
   745  00FE84  00                 	db	0
   746  00FE85  00                 	db	0
   747  00FE86  00                 	db	0
   748  00FE87  64                 	db	100
   749  00FE88  69                 	db	105
   750  00FE89  73                 	db	115
   751  00FE8A  70                 	db	112
   752  00FE8B  6C                 	db	108
   753  00FE8C  61                 	db	97
   754  00FE8D  79                 	db	121
   755  00FE8E  73                 	db	115
   756  00FE8F  20                 	db	32
   757  00FE90  32                 	db	50
   758  00FE91  00                 	db	0
   759  00FE92  00                 	db	0
   760  00FE93  00                 	db	0
   761  00FE94  00                 	db	0
   762  00FE95  00                 	db	0
   763  00FE96  00                 	db	0
   764  00FE97  00                 	db	0
   765  00FE98  00                 	db	0
   766  00FE99  63                 	db	99
   767  00FE9A  6F                 	db	111
   768  00FE9B  6D                 	db	109
   769  00FE9C  6D                 	db	109
   770  00FE9D  61                 	db	97
   771  00FE9E  6E                 	db	110
   772  00FE9F  64                 	db	100
   773  00FEA0  73                 	db	115
   774  00FEA1  20                 	db	32
   775  00FEA2  33                 	db	51
   776  00FEA3  00                 	db	0
   777  00FEA4  00                 	db	0
   778  00FEA5  00                 	db	0
   779  00FEA6  00                 	db	0
   780  00FEA7  00                 	db	0
   781  00FEA8  00                 	db	0
   782  00FEA9  00                 	db	0
   783  00FEAA  00                 	db	0
   784  00FEAB  64                 	db	100
   785  00FEAC  69                 	db	105
   786  00FEAD  73                 	db	115
   787  00FEAE  70                 	db	112
   788  00FEAF  6C                 	db	108
   789  00FEB0  61                 	db	97
   790  00FEB1  79                 	db	121
   791  00FEB2  73                 	db	115
   792  00FEB3  20                 	db	32
   793  00FEB4  33                 	db	51
   794  00FEB5  00                 	db	0
   795  00FEB6  00                 	db	0
   796  00FEB7  00                 	db	0
   797  00FEB8  00                 	db	0
   798  00FEB9  00                 	db	0
   799  00FEBA  00                 	db	0
   800  00FEBB  00                 	db	0
   801  00FEBC  00                 	db	0
   802  00FEBD  63                 	db	99
   803  00FEBE  6F                 	db	111
   804  00FEBF  6D                 	db	109
   805  00FEC0  6D                 	db	109
   806  00FEC1  61                 	db	97
   807  00FEC2  6E                 	db	110
   808  00FEC3  64                 	db	100
   809  00FEC4  73                 	db	115
   810  00FEC5  20                 	db	32
   811  00FEC6  34                 	db	52
   812  00FEC7  00                 	db	0
   813  00FEC8  00                 	db	0
   814  00FEC9  00                 	db	0
   815  00FECA  00                 	db	0
   816  00FECB  00                 	db	0
   817  00FECC  00                 	db	0
   818  00FECD  00                 	db	0
   819  00FECE  00                 	db	0
   820  00FECF  64                 	db	100
   821  00FED0  69                 	db	105
   822  00FED1  73                 	db	115
   823  00FED2  70                 	db	112
   824  00FED3  6C                 	db	108
   825  00FED4  61                 	db	97
   826  00FED5  79                 	db	121
   827  00FED6  73                 	db	115
   828  00FED7  20                 	db	32
   829  00FED8  34                 	db	52
   830  00FED9  00                 	db	0
   831  00FEDA  00                 	db	0
   832  00FEDB  00                 	db	0
   833  00FEDC  00                 	db	0
   834  00FEDD  00                 	db	0
   835  00FEDE  00                 	db	0
   836  00FEDF  00                 	db	0
   837  00FEE0  00                 	db	0
   838  00FEE1                     __end_of_T:
   839                           	opt callstack 0
   840  0000                     _IVTADL	set	14493
   841  0000                     _IVTADH	set	14494
   842  0000                     _IVTADU	set	14495
   843  0000                     _PIR4bits	set	14756
   844  0000                     _PIE8bits	set	14744
   845  0000                     _PIR8bits	set	14760
   846  0000                     _SCANPR	set	14839
   847  0000                     _DMA2PR	set	14836
   848  0000                     _DMA1PR	set	14835
   849  0000                     _MAINPR	set	14834
   850  0000                     _ISRPR	set	14833
   851  0000                     _PIE2bits	set	14738
   852  0000                     _PIR2bits	set	14754
   853  0000                     _PIE9bits	set	14745
   854  0000                     _PIR9bits	set	14761
   855  0000                     _PIE6bits	set	14742
   856  0000                     _PIE3bits	set	14739
   857  0000                     _PMD7	set	14791
   858  0000                     _PMD6	set	14790
   859  0000                     _PMD5	set	14789
   860  0000                     _PMD4	set	14788
   861  0000                     _PMD3	set	14787
   862  0000                     _PMD2	set	14786
   863  0000                     _PMD1	set	14785
   864  0000                     _PMD0	set	14784
   865  0000                     _OSCTUNE	set	14814
   866  0000                     _OSCFRQ	set	14815
   867  0000                     _OSCEN	set	14813
   868  0000                     _OSCCON3	set	14811
   869  0000                     _OSCCON1	set	14809
   870  0000                     _IPR8bits	set	14728
   871  0000                     _IPR9bits	set	14729
   872  0000                     _IPR5bits	set	14725
   873  0000                     _IPR1bits	set	14721
   874  0000                     _IPR3bits	set	14723
   875  0000                     _IPR6bits	set	14726
   876  0000                     _IPR2bits	set	14722
   877  0000                     _PIE5bits	set	14741
   878  0000                     _PIE1bits	set	14737
   879  0000                     _PIR5bits	set	14757
   880  0000                     _PIR1bits	set	14753
   881  0000                     _PLLR	set	118496
   882  0000                     _SPI1SDIPPS	set	15071
   883  0000                     _U1RXPPS	set	15077
   884  0000                     _RC6PPS	set	14870
   885  0000                     _RC5PPS	set	14869
   886  0000                     _INT1PPS	set	15041
   887  0000                     _RD1PPS	set	14873
   888  0000                     _INT0PPS	set	15040
   889  0000                     _RC3PPS	set	14867
   890  0000                     _RB6PPS	set	14862
   891  0000                     _SPI1SCKPPS	set	15070
   892  0000                     _U2RXPPS	set	15080
   893  0000                     _SLRCONF	set	14995
   894  0000                     _SLRCONE	set	14979
   895  0000                     _SLRCOND	set	14963
   896  0000                     _SLRCONC	set	14947
   897  0000                     _SLRCONB	set	14931
   898  0000                     _SLRCONA	set	14915
   899  0000                     _ODCOND	set	14962
   900  0000                     _ODCONC	set	14946
   901  0000                     _ODCONB	set	14930
   902  0000                     _ODCONA	set	14914
   903  0000                     _ODCONF	set	14994
   904  0000                     _ODCONE	set	14978
   905  0000                     _WPUC	set	14945
   906  0000                     _WPUA	set	14913
   907  0000                     _WPUB	set	14929
   908  0000                     _WPUE	set	14977
   909  0000                     _WPUF	set	14993
   910  0000                     _WPUD	set	14961
   911  0000                     _ANSELA	set	14912
   912  0000                     _ANSELF	set	14992
   913  0000                     _ANSELE	set	14976
   914  0000                     _ANSELB	set	14928
   915  0000                     _ANSELC	set	14944
   916  0000                     _ANSELD	set	14960
   917  0000                     _DMA2SSA	set	15321
   918  0000                     _DMA1SSA	set	15353
   919  0000                     _DMA2DSZ	set	15310
   920  0000                     _DMA2SSZ	set	15319
   921  0000                     _DMA2DSA	set	15312
   922  0000                     _DMA1DSZ	set	15342
   923  0000                     _DMA1SSZ	set	15351
   924  0000                     _DMA1DSA	set	15344
   925  0000                     _DMA1CON0bits	set	15356
   926  0000                     _DMA1CON1bits	set	15357
   927  0000                     _DMA2CON0	set	15324
   928  0000                     _DMA2AIRQ	set	15326
   929  0000                     _DMA2SIRQ	set	15327
   930  0000                     _DMA2CON1	set	15325
   931  0000                     _DMA1CON0	set	15356
   932  0000                     _DMA1AIRQ	set	15358
   933  0000                     _DMA1SIRQ	set	15359
   934  0000                     _DMA1CON1	set	15357
   935  0000                     _CLKRCON	set	15589
   936  0000                     _CLKRCLK	set	15590
   937  0000                     _SPI1INTFbits	set	15642
   938  0000                     _SPI1RXB	set	15632
   939  0000                     _SPI1TXB	set	15633
   940  0000                     _SPI1TCNTL	set	15634
   941  0000                     _SPI1CON0	set	15636
   942  0000                     _SPI1CLK	set	15644
   943  0000                     _SPI1BAUD	set	15641
   944  0000                     _SPI1CON2	set	15638
   945  0000                     _SPI1CON1	set	15637
   946  0000                     _U2RXB	set	15824
   947  0000                     _U2TXB	set	15826
   948  0000                     _U2ERRIE	set	15842
   949  0000                     _U2ERRIR	set	15841
   950  0000                     _U2UIR	set	15840
   951  0000                     _U2FIFO	set	15839
   952  0000                     _U2BRGH	set	15838
   953  0000                     _U2BRGL	set	15837
   954  0000                     _U2CON2	set	15836
   955  0000                     _U2CON1	set	15835
   956  0000                     _U2CON0	set	15834
   957  0000                     _U2P3L	set	15832
   958  0000                     _U2P2L	set	15830
   959  0000                     _U2P1L	set	15828
   960  0000                     _U1RXB	set	15848
   961  0000                     _U1TXB	set	15850
   962  0000                     _U1ERRIE	set	15866
   963  0000                     _U1ERRIR	set	15865
   964  0000                     _U1UIR	set	15864
   965  0000                     _U1FIFO	set	15863
   966  0000                     _U1BRGH	set	15862
   967  0000                     _U1BRGL	set	15861
   968  0000                     _U1CON2	set	15860
   969  0000                     _U1CON1	set	15859
   970  0000                     _U1CON0	set	15858
   971  0000                     _U1P3H	set	15857
   972  0000                     _U1P3L	set	15856
   973  0000                     _U1P2H	set	15855
   974  0000                     _U1P2L	set	15854
   975  0000                     _U1P1H	set	15853
   976  0000                     _U1P1L	set	15852
   977  0000                     _FVRCON	set	16065
   978  0000                     _ADFLTRL	set	16102
   979  0000                     _ADFLTRH	set	16103
   980  0000                     _ADCON0bits	set	16120
   981  0000                     _ADCON0	set	16120
   982  0000                     _ADCLK	set	16127
   983  0000                     _ADACT	set	16126
   984  0000                     _ADREF	set	16125
   985  0000                     _ADSTAT	set	16124
   986  0000                     _ADCON3	set	16123
   987  0000                     _ADCON2	set	16122
   988  0000                     _ADCON1	set	16121
   989  0000                     _ADPREH	set	16119
   990  0000                     _ADPREL	set	16118
   991  0000                     _ADCAP	set	16117
   992  0000                     _ADACQH	set	16116
   993  0000                     _ADACQL	set	16115
   994  0000                     _ADPCH	set	16113
   995  0000                     _ADRPT	set	16108
   996  0000                     _ADACCU	set	16106
   997  0000                     _ADSTPTH	set	16101
   998  0000                     _ADSTPTL	set	16100
   999  0000                     _ADUTHH	set	16097
  1000  0000                     _ADUTHL	set	16096
  1001  0000                     _ADLTHH	set	16095
  1002  0000                     _ADLTHL	set	16094
  1003  0000                     _CCPTMRS1bits	set	16223
  1004  0000                     _LATCbits	set	16316
  1005  0000                     _LATDbits	set	16317
  1006  0000                     _PORTBbits	set	16331
  1007  0000                     _T2CON	set	16300
  1008  0000                     _T2TMR	set	16298
  1009  0000                     _T2PR	set	16299
  1010  0000                     _T2RST	set	16303
  1011  0000                     _T2HLT	set	16301
  1012  0000                     _T2CLKCON	set	16302
  1013  0000                     _PWM8DCL	set	16224
  1014  0000                     _PWM8DCH	set	16225
  1015  0000                     _PWM8CON	set	16226
  1016  0000                     _LATEbits	set	16318
  1017  0000                     _T5CONbits	set	16282
  1018  0000                     _T5CON	set	16282
  1019  0000                     _TMR5L	set	16280
  1020  0000                     _TMR5H	set	16281
  1021  0000                     _T5CLK	set	16285
  1022  0000                     _T5GATE	set	16284
  1023  0000                     _T5GCON	set	16283
  1024  0000                     _T6CON	set	16276
  1025  0000                     _T6TMR	set	16274
  1026  0000                     _T6PR	set	16275
  1027  0000                     _T6RST	set	16279
  1028  0000                     _T6HLT	set	16277
  1029  0000                     _T6CLKCON	set	16278
  1030  0000                     _TRISD	set	16325
  1031  0000                     _TRISC	set	16324
  1032  0000                     _TRISB	set	16323
  1033  0000                     _TRISA	set	16322
  1034  0000                     _TRISF	set	16327
  1035  0000                     _TRISE	set	16326
  1036  0000                     _LATC	set	16316
  1037  0000                     _LATB	set	16315
  1038  0000                     _LATF	set	16319
  1039  0000                     _LATA	set	16314
  1040  0000                     _LATD	set	16317
  1041  0000                     _LATE	set	16318
  1042  0000                     _IVTLOCKbits	set	16340
  1043  0000                     _IVTLOCK	set	16340
  1044  0000                     _INTCON0bits	set	16338
  1045  0000                     _GIE	set	130711
  1046  00FEE1                     
  1047                           ; BSR set to: 57
  1048  00FEE1  20                 	db	32
  1049  00FEE2  4D                 	db	77	;'M'
  1050  00FEE3  65                 	db	101	;'e'
  1051  00FEE4  73                 	db	115	;'s'
  1052  00FEE5  67                 	db	103	;'g'
  1053  00FEE6  20                 	db	32
  1054  00FEE7  25                 	db	37
  1055  00FEE8  64                 	db	100	;'d'
  1056  00FEE9  20                 	db	32
  1057  00FEEA  53                 	db	83	;'S'
  1058  00FEEB  74                 	db	116	;'t'
  1059  00FEEC  61                 	db	97	;'a'
  1060  00FEED  63                 	db	99	;'c'
  1061  00FEEE  6B                 	db	107	;'k'
  1062  00FEEF  20                 	db	32
  1063  00FEF0  25                 	db	37
  1064  00FEF1  64                 	db	100	;'d'
  1065  00FEF2  20                 	db	32
  1066  00FEF3  20                 	db	32
  1067  00FEF4  20                 	db	32
  1068  00FEF5  20                 	db	32
  1069  00FEF6  20                 	db	32
  1070  00FEF7  20                 	db	32
  1071  00FEF8  00                 	db	0
  1072  00FEF9                     STR_27:
  1073                           
  1074                           ; BSR set to: 57
  1075  00FEF9  20                 	db	32
  1076  00FEFA  20                 	db	32
  1077  00FEFB  20                 	db	32
  1078  00FEFC  20                 	db	32
  1079  00FEFD  20                 	db	32
  1080  00FEFE  20                 	db	32
  1081  00FEFF  20                 	db	32
  1082  00FF00  20                 	db	32
  1083  00FF01  20                 	db	32
  1084  00FF02  20                 	db	32
  1085  00FF03  20                 	db	32
  1086  00FF04  20                 	db	32
  1087  00FF05  20                 	db	32
  1088  00FF06  20                 	db	32
  1089  00FF07  20                 	db	32
  1090  00FF08  20                 	db	32
  1091  00FF09  20                 	db	32
  1092  00FF0A  20                 	db	32
  1093  00FF0B  00                 	db	0
  1094  00FF0C                     STR_17:
  1095                           
  1096                           ; BSR set to: 57
  1097  00FF0C  48                 	db	72	;'H'
  1098  00FF0D  45                 	db	69	;'E'
  1099  00FF0E  4C                 	db	76	;'L'
  1100  00FF0F  50                 	db	80	;'P'
  1101  00FF10  20                 	db	32
  1102  00FF11  25                 	db	37
  1103  00FF12  73                 	db	115	;'s'
  1104  00FF13  20                 	db	32
  1105  00FF14  20                 	db	32
  1106  00FF15  20                 	db	32
  1107  00FF16  20                 	db	32
  1108  00FF17  20                 	db	32
  1109  00FF18  20                 	db	32
  1110  00FF19  20                 	db	32
  1111  00FF1A  20                 	db	32
  1112  00FF1B  20                 	db	32
  1113  00FF1C  20                 	db	32
  1114  00FF1D  20                 	db	32
  1115  00FF1E  00                 	db	0
  1116  00FF1F                     
  1117                           ; BSR set to: 57
  1118  00FF1F  44                 	db	68	;'D'
  1119  00FF20  49                 	db	73	;'I'
  1120  00FF21  53                 	db	83	;'S'
  1121  00FF22  50                 	db	80	;'P'
  1122  00FF23  4C                 	db	76	;'L'
  1123  00FF24  41                 	db	65	;'A'
  1124  00FF25  59                 	db	89	;'Y'
  1125  00FF26  20                 	db	32
  1126  00FF27  25                 	db	37
  1127  00FF28  73                 	db	115	;'s'
  1128  00FF29  20                 	db	32
  1129  00FF2A  20                 	db	32
  1130  00FF2B  20                 	db	32
  1131  00FF2C  20                 	db	32
  1132  00FF2D  20                 	db	32
  1133  00FF2E  20                 	db	32
  1134  00FF2F  20                 	db	32
  1135  00FF30  20                 	db	32
  1136  00FF31  00                 	db	0
  1137  00FF32                     STR_11:
  1138                           
  1139                           ; BSR set to: 57
  1140  00FF32  25                 	db	37
  1141  00FF33  64                 	db	100	;'d'
  1142  00FF34  20                 	db	32
  1143  00FF35  25                 	db	37
  1144  00FF36  32                 	db	50	;'2'
  1145  00FF37  2E                 	db	46
  1146  00FF38  34                 	db	52	;'4'
  1147  00FF39  66                 	db	102	;'f'
  1148  00FF3A  2C                 	db	44
  1149  00FF3B  20                 	db	32
  1150  00FF3C  25                 	db	37
  1151  00FF3D  6C                 	db	108	;'l'
  1152  00FF3E  75                 	db	117	;'u'
  1153  00FF3F  20                 	db	32
  1154  00FF40  20                 	db	32
  1155  00FF41  20                 	db	32
  1156  00FF42  23                 	db	35
  1157  00FF43  00                 	db	0
  1158  00FF44                     STR_8:
  1159                           
  1160                           ; BSR set to: 57
  1161  00FF44  20                 	db	32
  1162  00FF45  56                 	db	86	;'V'
  1163  00FF46  54                 	db	84	;'T'
  1164  00FF47  45                 	db	69	;'E'
  1165  00FF48  52                 	db	82	;'R'
  1166  00FF49  4D                 	db	77	;'M'
  1167  00FF4A  20                 	db	32
  1168  00FF4B  23                 	db	35
  1169  00FF4C  32                 	db	50	;'2'
  1170  00FF4D  20                 	db	32
  1171  00FF4E  20                 	db	32
  1172  00FF4F  20                 	db	32
  1173  00FF50  20                 	db	32
  1174  00FF51  20                 	db	32
  1175  00FF52  20                 	db	32
  1176  00FF53  20                 	db	32
  1177  00FF54  00                 	db	0
  1178  00FF55                     STR_4:
  1179                           
  1180                           ; BSR set to: 57
  1181  00FF55  20                 	db	32
  1182  00FF56  4E                 	db	78	;'N'
  1183  00FF57  53                 	db	83	;'S'
  1184  00FF58  41                 	db	65	;'A'
  1185  00FF59  53                 	db	83	;'S'
  1186  00FF5A  50                 	db	80	;'P'
  1187  00FF5B  4F                 	db	79	;'O'
  1188  00FF5C  4F                 	db	79	;'O'
  1189  00FF5D  4B                 	db	75	;'K'
  1190  00FF5E  20                 	db	32
  1191  00FF5F  20                 	db	32
  1192  00FF60  20                 	db	32
  1193  00FF61  20                 	db	32
  1194  00FF62  20                 	db	32
  1195  00FF63  20                 	db	32
  1196  00FF64  20                 	db	32
  1197  00FF65  00                 	db	0
  1198  00FF66                     STR_1:
  1199                           
  1200                           ; BSR set to: 57
  1201  00FF66  20                 	db	32
  1202  00FF67  4D                 	db	77	;'M'
  1203  00FF68  42                 	db	66	;'B'
  1204  00FF69  4D                 	db	77	;'M'
  1205  00FF6A  43                 	db	67	;'C'
  1206  00FF6B  20                 	db	32
  1207  00FF6C  53                 	db	83	;'S'
  1208  00FF6D  4F                 	db	79	;'O'
  1209  00FF6E  4C                 	db	76	;'L'
  1210  00FF6F  41                 	db	65	;'A'
  1211  00FF70  52                 	db	82	;'R'
  1212  00FF71  4D                 	db	77	;'M'
  1213  00FF72  4F                 	db	79	;'O'
  1214  00FF73  4E                 	db	78	;'N'
  1215  00FF74  20                 	db	32
  1216  00FF75  20                 	db	32
  1217  00FF76  00                 	db	0
  1218  00FF77                     STR_5:
  1219                           
  1220                           ; BSR set to: 57
  1221  00FF77  20                 	db	32
  1222  00FF78  53                 	db	83	;'S'
  1223  00FF79  45                 	db	69	;'E'
  1224  00FF7A  51                 	db	81	;'Q'
  1225  00FF7B  55                 	db	85	;'U'
  1226  00FF7C  45                 	db	69	;'E'
  1227  00FF7D  4E                 	db	78	;'N'
  1228  00FF7E  43                 	db	67	;'C'
  1229  00FF7F  45                 	db	69	;'E'
  1230  00FF80  20                 	db	32
  1231  00FF81  54                 	db	84	;'T'
  1232  00FF82  45                 	db	69	;'E'
  1233  00FF83  53                 	db	83	;'S'
  1234  00FF84  54                 	db	84	;'T'
  1235  00FF85  20                 	db	32
  1236  00FF86  20                 	db	32
  1237  00FF87  00                 	db	0
  1238  00FF88                     STR_21:
  1239                           
  1240                           ; BSR set to: 57
  1241  00FF88  76                 	db	118	;'v'
  1242  00FF89  74                 	db	116	;'t'
  1243  00FF8A  65                 	db	101	;'e'
  1244  00FF8B  72                 	db	114	;'r'
  1245  00FF8C  6D                 	db	109	;'m'
  1246  00FF8D  20                 	db	32
  1247  00FF8E  25                 	db	37
  1248  00FF8F  78                 	db	120	;'x'
  1249  00FF90  3A                 	db	58	;':'
  1250  00FF91  25                 	db	37
  1251  00FF92  78                 	db	120	;'x'
  1252  00FF93  20                 	db	32
  1253  00FF94  20                 	db	32
  1254  00FF95  20                 	db	32
  1255  00FF96  00                 	db	0
  1256  00FF97                     STR_2:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FF97  20                 	db	32
  1260  00FF98  56                 	db	86	;'V'
  1261  00FF99  65                 	db	101	;'e'
  1262  00FF9A  72                 	db	114	;'r'
  1263  00FF9B  73                 	db	115	;'s'
  1264  00FF9C  69                 	db	105	;'i'
  1265  00FF9D  6F                 	db	111	;'o'
  1266  00FF9E  6E                 	db	110	;'n'
  1267  00FF9F  20                 	db	32
  1268  00FFA0  25                 	db	37
  1269  00FFA1  73                 	db	115	;'s'
  1270  00FFA2  20                 	db	32
  1271  00FFA3  20                 	db	32
  1272  00FFA4  20                 	db	32
  1273  00FFA5  00                 	db	0
  1274  00FFA6                     STR_9:
  1275                           
  1276                           ; BSR set to: 57
  1277  00FFA6  25                 	db	37
  1278  00FFA7  64                 	db	100	;'d'
  1279  00FFA8  20                 	db	32
  1280  00FFA9  25                 	db	37
  1281  00FFAA  32                 	db	50	;'2'
  1282  00FFAB  2E                 	db	46
  1283  00FFAC  34                 	db	52	;'4'
  1284  00FFAD  66                 	db	102	;'f'
  1285  00FFAE  20                 	db	32
  1286  00FFAF  20                 	db	32
  1287  00FFB0  20                 	db	32
  1288  00FFB1  23                 	db	35
  1289  00FFB2  00                 	db	0
  1290  00FFB3                     STR_15:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FFB3  4E                 	db	78	;'N'
  1294  00FFB4  6F                 	db	111	;'o'
  1295  00FFB5  76                 	db	118	;'v'
  1296  00FFB6  20                 	db	32
  1297  00FFB7  31                 	db	49	;'1'
  1298  00FFB8  38                 	db	56	;'8'
  1299  00FFB9  20                 	db	32
  1300  00FFBA  32                 	db	50	;'2'
  1301  00FFBB  30                 	db	48	;'0'
  1302  00FFBC  31                 	db	49	;'1'
  1303  00FFBD  39                 	db	57	;'9'
  1304  00FFBE  00                 	db	0
  1305  00FFBF                     STR_19:
  1306                           
  1307                           ; BSR set to: 57
  1308  00FFBF  25                 	db	37
  1309  00FFC0  73                 	db	115	;'s'
  1310  00FFC1  20                 	db	32
  1311  00FFC2  20                 	db	32
  1312  00FFC3  20                 	db	32
  1313  00FFC4  20                 	db	32
  1314  00FFC5  20                 	db	32
  1315  00FFC6  20                 	db	32
  1316  00FFC7  20                 	db	32
  1317  00FFC8  00                 	db	0
  1318  00FFC9                     STR_16:
  1319                           
  1320                           ; BSR set to: 57
  1321  00FFC9  31                 	db	49	;'1'
  1322  00FFCA  36                 	db	54	;'6'
  1323  00FFCB  3A                 	db	58	;':'
  1324  00FFCC  32                 	db	50	;'2'
  1325  00FFCD  34                 	db	52	;'4'
  1326  00FFCE  3A                 	db	58	;':'
  1327  00FFCF  30                 	db	48	;'0'
  1328  00FFD0  35                 	db	53	;'5'
  1329  00FFD1  00                 	db	0
  1330  00FFD2                     STR_3:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FFD2  30                 	db	48	;'0'
  1334  00FFD3  2E                 	db	46
  1335  00FFD4  39                 	db	57	;'9'
  1336  00FFD5  33                 	db	51	;'3'
  1337  00FFD6  00                 	db	0
  1338  00FFD7                     STR_34:
  1339                           
  1340                           ; BSR set to: 57
  1341  00FFD7  49                 	db	73	;'I'
  1342  00FFD8  4E                 	db	78	;'N'
  1343  00FFD9  46                 	db	70	;'F'
  1344  00FFDA  00                 	db	0
  1345  00FFDB                     STR_38:
  1346                           
  1347                           ; BSR set to: 57
  1348  00FFDB  4E                 	db	78	;'N'
  1349  00FFDC  41                 	db	65	;'A'
  1350  00FFDD  4E                 	db	78	;'N'
  1351  00FFDE  00                 	db	0
  1352  00FFDF                     STR_35:
  1353                           
  1354                           ; BSR set to: 57
  1355  00FFDF  69                 	db	105	;'i'
  1356  00FFE0  6E                 	db	110	;'n'
  1357  00FFE1  66                 	db	102	;'f'
  1358  00FFE2  00                 	db	0
  1359  00FFE3                     STR_39:
  1360                           
  1361                           ; BSR set to: 57
  1362  00FFE3  6E                 	db	110	;'n'
  1363  00FFE4  61                 	db	97	;'a'
  1364  00FFE5  6E                 	db	110	;'n'
  1365  00FFE6  00                 	db	0
  1366  00FFE7                     STR_65:
  1367                           
  1368                           ; BSR set to: 57
  1369  00FFE7  6C                 	db	108	;'l'
  1370  00FFE8  58                 	db	88	;'X'
  1371  00FFE9  00                 	db	0
  1372  00FFEA                     STR_42:
  1373                           
  1374                           ; BSR set to: 57
  1375  00FFEA  6C                 	db	108	;'l'
  1376  00FFEB  64                 	db	100	;'d'
  1377  00FFEC  00                 	db	0
  1378  00FFED                     STR_51:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FFED  6C                 	db	108	;'l'
  1382  00FFEE  66                 	db	102	;'f'
  1383  00FFEF  00                 	db	0
  1384  00FFF0                     STR_46:
  1385                           
  1386                           ; BSR set to: 57
  1387  00FFF0  6C                 	db	108	;'l'
  1388  00FFF1  69                 	db	105	;'i'
  1389  00FFF2  00                 	db	0
  1390  00FFF3                     STR_56:
  1391                           
  1392                           ; BSR set to: 57
  1393  00FFF3  6C                 	db	108	;'l'
  1394  00FFF4  75                 	db	117	;'u'
  1395  00FFF5  00                 	db	0
  1396  00FFF6                     STR_61:
  1397                           
  1398                           ; BSR set to: 57
  1399  00FFF6  6C                 	db	108	;'l'
  1400  00FFF7  78                 	db	120	;'x'
  1401  00FFF8  00                 	db	0
  1402  00FFF9                     STR_13:
  1403                           
  1404                           ; BSR set to: 57
  1405  00FFF9  25                 	db	37
  1406  00FFFA  63                 	db	99	;'c'
  1407  00FFFB  00                 	db	0
  1408  00FFFC                     STR_12:
  1409                           
  1410                           ; BSR set to: 57
  1411  00FFFC  25                 	db	37
  1412  00FFFD  73                 	db	115	;'s'
  1413  00FFFE  00                 	db	0
  1414  0000                     
  1415                           ; #config settings
  1416  00FFFF  00                 	db	0	; dummy byte at the end
  1417  0000                     
  1418                           	psect	cinit
  1419  01754E                     __pcinit:
  1420                           	opt callstack 0
  1421  01754E                     start_initialization:
  1422                           	opt callstack 0
  1423  01754E                     __initialization:
  1424                           	opt callstack 0
  1425                           
  1426                           ; Initialize objects allocated to BANK1 (187 bytes)
  1427                           ; load TBLPTR registers with __pidataBANK1
  1428  01754E  0ED8               	movlw	low __pidataBANK1
  1429  017550  6EF6               	movwf	tblptrl,c
  1430  017552  0E76               	movlw	high __pidataBANK1
  1431  017554  6EF7               	movwf	tblptrh,c
  1432  017556  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1433  017558  6EF8               	movwf	tblptru,c
  1434  01755A  EE00  F100         	lfsr	0,__pdataBANK1
  1435  01755E  EE20 F0BB          	lfsr	2,187
  1436  017562                     copy_data0:
  1437  017562  0009               	tblrd		*+
  1438  017564  006F FFD7 FFEE     	movff	tablat,postinc0
  1439  01756A  50DD               	movf	postdec2,w,c
  1440  01756C  50D9               	movf	fsr2l,w,c
  1441  01756E  E1F9               	bnz	copy_data0
  1442                           
  1443                           ; Initialize objects allocated to BANK0 (63 bytes)
  1444                           ; load TBLPTR registers with __pidataBANK0
  1445  017570  0E3C               	movlw	low __pidataBANK0
  1446  017572  6EF6               	movwf	tblptrl,c
  1447  017574  0E86               	movlw	high __pidataBANK0
  1448  017576  6EF7               	movwf	tblptrh,c
  1449  017578  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1450  01757A  6EF8               	movwf	tblptru,c
  1451  01757C  EE00  F0A3         	lfsr	0,__pdataBANK0
  1452  017580  EE20 F03F          	lfsr	2,63
  1453  017584                     copy_data1:
  1454  017584  0009               	tblrd		*+
  1455  017586  006F FFD7 FFEE     	movff	tablat,postinc0
  1456  01758C  50DD               	movf	postdec2,w,c
  1457  01758E  50D9               	movf	fsr2l,w,c
  1458  017590  E1F9               	bnz	copy_data1
  1459                           
  1460                           ; Clear objects allocated to BANK6 (255 bytes)
  1461  017592  EE01  F200         	lfsr	0,__pbssBANK6
  1462  017596  EE20 F0FF          	lfsr	2,255
  1463  01759A                     clear_0:
  1464  01759A  6AEE               	clrf	postinc0,c
  1465  01759C  50DD               	movf	postdec2,w,c
  1466  01759E  50D9               	movf	fsr2l,w,c
  1467  0175A0  E1FC               	bnz	clear_0
  1468  0175A2  50DA               	movf	fsr2h,w,c
  1469  0175A4  E1FA               	bnz	clear_0
  1470                           
  1471                           ; Clear objects allocated to BANK5 (255 bytes)
  1472  0175A6  EE01  F100         	lfsr	0,__pbssBANK5
  1473  0175AA  EE20 F0FF          	lfsr	2,255
  1474  0175AE                     clear_1:
  1475  0175AE  6AEE               	clrf	postinc0,c
  1476  0175B0  50DD               	movf	postdec2,w,c
  1477  0175B2  50D9               	movf	fsr2l,w,c
  1478  0175B4  E1FC               	bnz	clear_1
  1479  0175B6  50DA               	movf	fsr2h,w,c
  1480  0175B8  E1FA               	bnz	clear_1
  1481                           
  1482                           ; Clear objects allocated to BANK4 (218 bytes)
  1483  0175BA  EE01  F000         	lfsr	0,__pbssBANK4
  1484  0175BE  0EDA               	movlw	218
  1485  0175C0                     clear_2:
  1486  0175C0  6AEE               	clrf	postinc0,c
  1487  0175C2  06E8               	decf	wreg,f,c
  1488  0175C4  E1FD               	bnz	clear_2
  1489                           
  1490                           ; Clear objects allocated to BANK3 (198 bytes)
  1491  0175C6  EE00  F300         	lfsr	0,__pbssBANK3
  1492  0175CA  0EC6               	movlw	198
  1493  0175CC                     clear_3:
  1494  0175CC  6AEE               	clrf	postinc0,c
  1495  0175CE  06E8               	decf	wreg,f,c
  1496  0175D0  E1FD               	bnz	clear_3
  1497                           
  1498                           ; Clear objects allocated to BANK2 (252 bytes)
  1499  0175D2  EE00  F200         	lfsr	0,__pbssBANK2
  1500  0175D6  0EFC               	movlw	252
  1501  0175D8                     clear_4:
  1502  0175D8  6AEE               	clrf	postinc0,c
  1503  0175DA  06E8               	decf	wreg,f,c
  1504  0175DC  E1FD               	bnz	clear_4
  1505                           
  1506                           ; Clear objects allocated to BANK1 (64 bytes)
  1507  0175DE  EE00  F1BB         	lfsr	0,__pbssBANK1
  1508  0175E2  0E40               	movlw	64
  1509  0175E4                     clear_5:
  1510  0175E4  6AEE               	clrf	postinc0,c
  1511  0175E6  06E8               	decf	wreg,f,c
  1512  0175E8  E1FD               	bnz	clear_5
  1513                           
  1514                           ; Clear objects allocated to BANK0 (67 bytes)
  1515  0175EA  EE00  F060         	lfsr	0,__pbssBANK0
  1516  0175EE  0E43               	movlw	67
  1517  0175F0                     clear_6:
  1518  0175F0  6AEE               	clrf	postinc0,c
  1519  0175F2  06E8               	decf	wreg,f,c
  1520  0175F4  E1FD               	bnz	clear_6
  1521                           
  1522                           ; Clear objects allocated to COMRAM (52 bytes)
  1523  0175F6  EE00  F001         	lfsr	0,__pbssCOMRAM
  1524  0175FA  0E34               	movlw	52
  1525  0175FC                     clear_7:
  1526  0175FC  6AEE               	clrf	postinc0,c
  1527  0175FE  06E8               	decf	wreg,f,c
  1528  017600  E1FD               	bnz	clear_7
  1529                           
  1530                           ;
  1531                           ; Setup IVTBASE
  1532                           ;
  1533  017602  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1534  017604  6ED5               	movwf	213,c
  1535  017606  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1536  017608  6ED6               	movwf	214,c
  1537  01760A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1538  01760C  6ED7               	movwf	215,c
  1539  01760E                     end_of_initialization:
  1540                           	opt callstack 0
  1541  01760E                     __end_of__initialization:
  1542                           	opt callstack 0
  1543  01760E  0100               	movlb	0
  1544  017610  EFAB  F0A0         	goto	_main	;jump to C main() function
  1545                           
  1546                           	psect	bssCOMRAM
  1547  000001                     __pbssCOMRAM:
  1548                           	opt callstack 0
  1549  000001                     _TMR6_InterruptHandler:
  1550                           	opt callstack 0
  1551  000001                     	ds	3
  1552  000004                     _ADCC_ADTI_InterruptHandler:
  1553                           	opt callstack 0
  1554  000004                     	ds	3
  1555  000007                     _ADCC_ADI_InterruptHandler:
  1556                           	opt callstack 0
  1557  000007                     	ds	3
  1558  00000A                     _UART1_TxInterruptHandler:
  1559                           	opt callstack 0
  1560  00000A                     	ds	3
  1561  00000D                     _UART1_RxInterruptHandler:
  1562                           	opt callstack 0
  1563  00000D                     	ds	3
  1564  000010                     _UART2_TxInterruptHandler:
  1565                           	opt callstack 0
  1566  000010                     	ds	3
  1567  000013                     _UART2_RxInterruptHandler:
  1568                           	opt callstack 0
  1569  000013                     	ds	3
  1570  000016                     _INT1_InterruptHandler:
  1571                           	opt callstack 0
  1572  000016                     	ds	3
  1573  000019                     _INT0_InterruptHandler:
  1574                           	opt callstack 0
  1575  000019                     	ds	3
  1576  00001C                     _nout:
  1577                           	opt callstack 0
  1578  00001C                     	ds	2
  1579  00001E                     _width:
  1580                           	opt callstack 0
  1581  00001E                     	ds	2
  1582  000020                     _prec:
  1583                           	opt callstack 0
  1584  000020                     	ds	2
  1585  000022                     _flags:
  1586                           	opt callstack 0
  1587  000022                     	ds	2
  1588  000024                     TMR5_ISR@CountCallBack:
  1589                           	opt callstack 0
  1590  000024                     	ds	2
  1591  000026                     _timer5ReloadVal:
  1592                           	opt callstack 0
  1593  000026                     	ds	2
  1594  000028                     _mode_sw:
  1595                           	opt callstack 0
  1596  000028                     	ds	1
  1597  000029                     _uart2RxCount:
  1598                           	opt callstack 0
  1599  000029                     	ds	1
  1600  00002A                     _uart2RxTail:
  1601                           	opt callstack 0
  1602  00002A                     	ds	1
  1603  00002B                     _uart2RxHead:
  1604                           	opt callstack 0
  1605  00002B                     	ds	1
  1606  00002C                     _uart2TxBufferRemaining:
  1607                           	opt callstack 0
  1608  00002C                     	ds	1
  1609  00002D                     _uart2TxTail:
  1610                           	opt callstack 0
  1611  00002D                     	ds	1
  1612  00002E                     _uart2TxHead:
  1613                           	opt callstack 0
  1614  00002E                     	ds	1
  1615  00002F                     _uart1RxCount:
  1616                           	opt callstack 0
  1617  00002F                     	ds	1
  1618  000030                     _uart1RxTail:
  1619                           	opt callstack 0
  1620  000030                     	ds	1
  1621  000031                     _uart1RxHead:
  1622                           	opt callstack 0
  1623  000031                     	ds	1
  1624  000032                     _uart1TxBufferRemaining:
  1625                           	opt callstack 0
  1626  000032                     	ds	1
  1627  000033                     _uart1TxTail:
  1628                           	opt callstack 0
  1629  000033                     	ds	1
  1630  000034                     _uart1TxHead:
  1631                           	opt callstack 0
  1632  000034                     	ds	1
  1633                           
  1634                           	psect	bssBANK0
  1635  000060                     __pbssBANK0:
  1636                           	opt callstack 0
  1637  000060                     _tickCount:
  1638                           	opt callstack 0
  1639  000060                     	ds	24
  1640  000078                     _spi_link:
  1641                           	opt callstack 0
  1642  000078                     	ds	12
  1643  000084                     floorf@F524:
  1644                           	opt callstack 0
  1645  000084                     	ds	4
  1646  000088                     ___fpclassifyf@F463:
  1647                           	opt callstack 0
  1648  000088                     	ds	4
  1649  00008C                     _utctime:
  1650                           	opt callstack 0
  1651  00008C                     	ds	4
  1652  000090                     wdtdelay@dcount:
  1653                           	opt callstack 0
  1654  000090                     	ds	4
  1655  000094                     _P:
  1656                           	opt callstack 0
  1657  000094                     	ds	4
  1658  000098                     _TMR5_InterruptHandler:
  1659                           	opt callstack 0
  1660  000098                     	ds	3
  1661  00009B                     _seed:
  1662                           	opt callstack 0
  1663  00009B                     	ds	8
  1664                           
  1665                           	psect	dataBANK0
  1666  0000A3                     __pdataBANK0:
  1667                           	opt callstack 0
  1668  0000A3                     _R:
  1669                           	opt callstack 0
  1670  0000A3                     	ds	40
  1671  0000CB                     stoa@F1166:
  1672                           	opt callstack 0
  1673  0000CB                     	ds	7
  1674  0000D2                     _port_data:
  1675                           	opt callstack 0
  1676  0000D2                     	ds	16
  1677                           
  1678                           	psect	bssBANK1
  1679  0001BB                     __pbssBANK1:
  1680                           	opt callstack 0
  1681  0001BB                     lp_filter@smooth:
  1682                           	opt callstack 0
  1683  0001BB                     	ds	64
  1684                           
  1685                           	psect	dataBANK1
  1686  000100                     __pdataBANK1:
  1687                           	opt callstack 0
  1688  000100                     _V:
  1689                           	opt callstack 0
  1690  000100                     	ds	187
  1691                           
  1692                           	psect	bssBANK2
  1693  000200                     __pbssBANK2:
  1694                           	opt callstack 0
  1695  000200                     _C:
  1696                           	opt callstack 0
  1697  000200                     	ds	108
  1698  00026C                     _uart1TxBuffer:
  1699                           	opt callstack 0
  1700  00026C                     	ds	64
  1701  0002AC                     _dbuf:
  1702                           	opt callstack 0
  1703  0002AC                     	ds	80
  1704                           
  1705                           	psect	bssBANK3
  1706  000300                     __pbssBANK3:
  1707                           	opt callstack 0
  1708  000300                     _uart2TxBuffer:
  1709                           	opt callstack 0
  1710  000300                     	ds	64
  1711  000340                     _ring_buf2:
  1712                           	opt callstack 0
  1713  000340                     	ds	67
  1714  000383                     _ring_buf1:
  1715                           	opt callstack 0
  1716  000383                     	ds	67
  1717                           
  1718                           	psect	bssBANK4
  1719  000400                     __pbssBANK4:
  1720                           	opt callstack 0
  1721  000400                     _D:
  1722                           	opt callstack 0
  1723  000400                     	ds	218
  1724                           
  1725                           	psect	bssBANK5
  1726  000500                     __pbssBANK5:
  1727                           	opt callstack 0
  1728  000500                     _uart1RxBuffer:
  1729                           	opt callstack 0
  1730  000500                     	ds	255
  1731                           
  1732                           	psect	bssBANK6
  1733  000600                     __pbssBANK6:
  1734                           	opt callstack 0
  1735  000600                     _uart2RxBuffer:
  1736                           	opt callstack 0
  1737  000600                     	ds	255
  1738                           
  1739                           	psect	cstackBANK0
  1740  0000E2                     __pcstackBANK0:
  1741                           	opt callstack 0
  1742  0000E2                     ??_TMR6_ISR:
  1743                           
  1744                           ; 1 bytes @ 0x0
  1745  0000E2                     	ds	1
  1746  0000E3                     ??_TMR5_ISR:
  1747                           
  1748                           ; 1 bytes @ 0x1
  1749  0000E3                     	ds	4
  1750                           
  1751                           	psect	cstackCOMRAM
  1752  000055                     __pcstackCOMRAM:
  1753                           	opt callstack 0
  1754  000055                     ??_ADCC_ISR:
  1755  000055                     
  1756                           ; 1 bytes @ 0x0
  1757  000055                     	ds	1
  1758  000056                     ??_ADCC_ThresholdISR:
  1759                           
  1760                           ; 1 bytes @ 0x1
  1761  000056                     	ds	5
  1762                           
  1763 ;;
  1764 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1765 ;;
  1766 ;; *************** function _main *****************
  1767 ;; Defined at:
  1768 ;;		line 147 in file "main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  mode            1  [STACK] enum E17005
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1  [STACK] void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels required when called:   19
  1788 ;; This function calls:
  1789 ;;		_SYSTEM_Initialize
  1790 ;;		_StartTimer
  1791 ;;		_TimerDone
  1792 ;;		_WaitMs
  1793 ;;		_check_adc_scan
  1794 ;;		_check_help
  1795 ;;		_clear_adc_scan
  1796 ;;		_convert_adc_data
  1797 ;;		_eaDogM_WriteCommand
  1798 ;;		_get_raw_result
  1799 ;;		_get_vterm_ptr
  1800 ;;		_init_display
  1801 ;;		_mode_lamp_dim
  1802 ;;		_set_display_info
  1803 ;;		_set_vterm
  1804 ;;		_sprintf
  1805 ;;		_srand
  1806 ;;		_start_adc_scan
  1807 ;;		_update_lcd
  1808 ;; This function is called by:
  1809 ;;		Startup code after reset
  1810 ;; This function uses a reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text0
  1814  014156                     __ptext0:
  1815                           	opt callstack 0
  1816  014156                     _main:
  1817                           	opt callstack 0
  1818                           
  1819                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1820  014156  52E6               	movf	postinc1,f,c
  1821                           
  1822                           ;main.c: 149:  UI_STATES mode;;main.c: 152:  SYSTEM_Initialize();
  1823                           
  1824                           ;incstack = 0
  1825  014158  EC52  F0C2         	call	_SYSTEM_Initialize	;wreg free
  1826                           
  1827                           ; BSR set to: 60
  1828                           ;main.c: 155:  (INTCON0bits.GIEH = 1);
  1829  01415C  8ED2               	bsf	210,7,c	;volatile
  1830                           
  1831                           ; BSR set to: 60
  1832                           ;main.c: 158:  (INTCON0bits.GIEL = 1);
  1833  01415E  8CD2               	bsf	210,6,c	;volatile
  1834                           
  1835                           ; BSR set to: 60
  1836                           ;main.c: 160:  V.ui_state = UI_STATE_INIT;
  1837  014160  0101               	movlb	1	; () banked
  1838  014162  6B00               	clrf	_V& (0+255),b	;volatile
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 165:  WaitMs(300);
  1842  014164  0E2C               	movlw	44
  1843  014166  6EE6               	movwf	postinc1,c
  1844  014168  0E01               	movlw	1
  1845  01416A  6EE6               	movwf	postinc1,c
  1846  01416C  EC94  F0C3         	call	_WaitMs	;wreg free
  1847                           
  1848                           ;main.c: 166:  if (PORTBbits.RB0) {
  1849  014170  A0CB               	btfss	203,0,c	;volatile
  1850  014172  D004               	goto	l10386
  1851                           
  1852                           ;main.c: 167:   mode = UI_STATE_HOST;
  1853                           ;stkvar	_mode @ sp[(-1)+0]
  1854  014174  0EFF               	movlw	-1
  1855  014176  6AE3               	clrf	plusw1,c
  1856  014178  2AE3               	incf	plusw1,f,c
  1857                           
  1858                           ;main.c: 168:  } else {
  1859  01417A  D004               	goto	l10388
  1860  01417C                     l10386:
  1861                           
  1862                           ;main.c: 169:   mode = UI_STATE_LOG;
  1863                           ;stkvar	_mode @ sp[(-1)+0]
  1864  01417C  0EFF               	movlw	-1
  1865  01417E  6AE3               	clrf	plusw1,c
  1866  014180  80E3               	bsf	plusw1,0,c
  1867  014182  82E3               	bsf	plusw1,1,c	;indir
  1868  014184                     l10388:
  1869                           
  1870                           ;main.c: 172:  if (mode == UI_STATE_HOST) {
  1871                           ;stkvar	_mode @ sp[(-1)+0]
  1872  014184  0EFF               	movlw	-1
  1873  014186  04E3               	decf	plusw1,w,c
  1874  014188  A4D8               	btfss	status,2,c
  1875  01418A  D007               	goto	l1242
  1876                           
  1877                           ;main.c: 173:   do { LATDbits.LATD0 = 1; } while(0);
  1878  01418C  80BD               	bsf	189,0,c	;volatile
  1879                           
  1880                           ;main.c: 174:   V.mode_pwm = 70;
  1881  01418E  0E00               	movlw	0
  1882  014190  0101               	movlb	1	; () banked
  1883  014192  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1884  014194  0E46               	movlw	70
  1885  014196  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1886                           
  1887                           ;main.c: 175:  } else {
  1888  014198  D004               	goto	l10392
  1889  01419A                     l1242:
  1890  01419A  90BD               	bcf	189,0,c	;volatile
  1891                           
  1892                           ;main.c: 177:   V.mode_pwm = 0;
  1893  01419C  0101               	movlb	1	; () banked
  1894  01419E  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1895  0141A0  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1896  0141A2                     l10392:
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;main.c: 179:  mode_lamp_dim(V.mode_pwm);
  1900  0141A2  0060  F657  FFE6   	movff	_V+149,postinc1
  1901  0141A8  0060  F65B  FFE6   	movff	_V+150,postinc1
  1902  0141AE  ECED  F0C6         	call	_mode_lamp_dim	;wreg free
  1903  0141B2  D0CE               	goto	l10434
  1904  0141B4                     l10394:
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;main.c: 190:    init_display();
  1908  0141B4  ECC8  F0B9         	call	_init_display	;wreg free
  1909                           
  1910                           ; BSR set to: 61
  1911                           ;main.c: 191:    eaDogM_WriteCommand(0b00001100);
  1912  0141B8  0E0C               	movlw	12
  1913  0141BA  6EE6               	movwf	postinc1,c
  1914  0141BC  EC41  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 193:    V.ui_state = mode;
  1918                           ;stkvar	_mode @ sp[(-1)+0]
  1919  0141C0  0EFF               	movlw	-1
  1920  0141C2  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 194:    srand(1957);
  1924  0141C8  0EA5               	movlw	165
  1925  0141CA  6EE6               	movwf	postinc1,c
  1926  0141CC  0E07               	movlw	7
  1927  0141CE  6EE6               	movwf	postinc1,c
  1928  0141D0  ECCA  F0C3         	call	_srand	;wreg free
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 195:    set_vterm(0);
  1932  0141D4  0E00               	movlw	0
  1933  0141D6  6EE6               	movwf	postinc1,c
  1934  0141D8  ECC4  F0C6         	call	_set_vterm	;wreg free
  1935                           
  1936                           ; BSR set to: 4
  1937                           ;main.c: 196:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1938  0141DC  0E66               	movlw	low STR_1
  1939  0141DE  6EE6               	movwf	postinc1,c
  1940  0141E0  0EFF               	movlw	high STR_1
  1941  0141E2  6EE6               	movwf	postinc1,c
  1942  0141E4  0E00               	movlw	0
  1943  0141E6  6EE6               	movwf	postinc1,c
  1944  0141E8  0E00               	movlw	0
  1945  0141EA  6EE6               	movwf	postinc1,c
  1946  0141EC  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  1947  0141F0  0060  F0D7  FFE6   	movff	btemp,postinc1
  1948  0141F6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1949  0141FC  0E04               	movlw	4
  1950  0141FE  6EE6               	movwf	postinc1,c
  1951  014200  EC43  F0B9         	call	_sprintf	;wreg free
  1952                           
  1953                           ;main.c: 197:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.93");
  1954  014204  0ED2               	movlw	low STR_3
  1955  014206  6EE6               	movwf	postinc1,c
  1956  014208  0EFF               	movlw	high STR_3
  1957  01420A  6EE6               	movwf	postinc1,c
  1958  01420C  0E97               	movlw	low STR_2
  1959  01420E  6EE6               	movwf	postinc1,c
  1960  014210  0EFF               	movlw	high STR_2
  1961  014212  6EE6               	movwf	postinc1,c
  1962  014214  0E00               	movlw	0
  1963  014216  6EE6               	movwf	postinc1,c
  1964  014218  0E01               	movlw	1
  1965  01421A  6EE6               	movwf	postinc1,c
  1966  01421C  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  1967  014220  0060  F0D7  FFE6   	movff	btemp,postinc1
  1968  014226  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1969  01422C  0E06               	movlw	6
  1970  01422E  6EE6               	movwf	postinc1,c
  1971  014230  EC43  F0B9         	call	_sprintf	;wreg free
  1972                           
  1973                           ;main.c: 198:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1974  014234  0E55               	movlw	low STR_4
  1975  014236  6EE6               	movwf	postinc1,c
  1976  014238  0EFF               	movlw	high STR_4
  1977  01423A  6EE6               	movwf	postinc1,c
  1978  01423C  0E00               	movlw	0
  1979  01423E  6EE6               	movwf	postinc1,c
  1980  014240  0E02               	movlw	2
  1981  014242  6EE6               	movwf	postinc1,c
  1982  014244  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  1983  014248  0060  F0D7  FFE6   	movff	btemp,postinc1
  1984  01424E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1985  014254  0E04               	movlw	4
  1986  014256  6EE6               	movwf	postinc1,c
  1987  014258  EC43  F0B9         	call	_sprintf	;wreg free
  1988                           
  1989                           ;main.c: 199:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1990  01425C  0E77               	movlw	low STR_5
  1991  01425E  6EE6               	movwf	postinc1,c
  1992  014260  0EFF               	movlw	high STR_5
  1993  014262  6EE6               	movwf	postinc1,c
  1994  014264  0E02               	movlw	2
  1995  014266  6EE6               	movwf	postinc1,c
  1996  014268  0E00               	movlw	0
  1997  01426A  6EE6               	movwf	postinc1,c
  1998  01426C  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  1999  014270  0060  F0D7  FFE6   	movff	btemp,postinc1
  2000  014276  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2001  01427C  0E04               	movlw	4
  2002  01427E  6EE6               	movwf	postinc1,c
  2003  014280  EC43  F0B9         	call	_sprintf	;wreg free
  2004                           
  2005                           ;main.c: 200:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.93");
  2006  014284  0ED2               	movlw	low STR_3
  2007  014286  6EE6               	movwf	postinc1,c
  2008  014288  0EFF               	movlw	high STR_3
  2009  01428A  6EE6               	movwf	postinc1,c
  2010  01428C  0E97               	movlw	low STR_2
  2011  01428E  6EE6               	movwf	postinc1,c
  2012  014290  0EFF               	movlw	high STR_2
  2013  014292  6EE6               	movwf	postinc1,c
  2014  014294  0E02               	movlw	2
  2015  014296  6EE6               	movwf	postinc1,c
  2016  014298  0E01               	movlw	1
  2017  01429A  6EE6               	movwf	postinc1,c
  2018  01429C  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  2019  0142A0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2020  0142A6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2021  0142AC  0E06               	movlw	6
  2022  0142AE  6EE6               	movwf	postinc1,c
  2023  0142B0  EC43  F0B9         	call	_sprintf	;wreg free
  2024                           
  2025                           ;main.c: 201:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2026  0142B4  0E44               	movlw	low STR_8
  2027  0142B6  6EE6               	movwf	postinc1,c
  2028  0142B8  0EFF               	movlw	high STR_8
  2029  0142BA  6EE6               	movwf	postinc1,c
  2030  0142BC  0E02               	movlw	2
  2031  0142BE  6EE6               	movwf	postinc1,c
  2032  0142C0  0E02               	movlw	2
  2033  0142C2  6EE6               	movwf	postinc1,c
  2034  0142C4  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  2035  0142C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2036  0142CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2037  0142D4  0E04               	movlw	4
  2038  0142D6  6EE6               	movwf	postinc1,c
  2039  0142D8  EC43  F0B9         	call	_sprintf	;wreg free
  2040                           
  2041                           ;main.c: 202:    update_lcd(0);
  2042  0142DC  0E00               	movlw	0
  2043  0142DE  6EE6               	movwf	postinc1,c
  2044  0142E0  ECBC  F0B8         	call	_update_lcd	;wreg free
  2045                           
  2046                           ;main.c: 203:    WaitMs(3000);
  2047  0142E4  0EB8               	movlw	184
  2048  0142E6  6EE6               	movwf	postinc1,c
  2049  0142E8  0E0B               	movlw	11
  2050  0142EA  6EE6               	movwf	postinc1,c
  2051  0142EC  EC94  F0C3         	call	_WaitMs	;wreg free
  2052                           
  2053                           ;main.c: 204:    StartTimer(TMR_DISPLAY, 250);
  2054  0142F0  0EFA               	movlw	250
  2055  0142F2  6EE6               	movwf	postinc1,c
  2056  0142F4  0E00               	movlw	0
  2057  0142F6  6EE6               	movwf	postinc1,c
  2058  0142F8  0E0A               	movlw	10
  2059  0142FA  6EE6               	movwf	postinc1,c
  2060  0142FC  EC3E  F0C3         	call	_StartTimer	;wreg free
  2061                           
  2062                           ;main.c: 205:    StartTimer(TMR_ADC, 500);
  2063  014300  0EF4               	movlw	244
  2064  014302  6EE6               	movwf	postinc1,c
  2065  014304  0E01               	movlw	1
  2066  014306  6EE6               	movwf	postinc1,c
  2067  014308  0E01               	movlw	1
  2068  01430A  6EE6               	movwf	postinc1,c
  2069  01430C  EC3E  F0C3         	call	_StartTimer	;wreg free
  2070                           
  2071                           ;main.c: 206:    StartTimer(TMR_INFO, 3000);
  2072  014310  0EB8               	movlw	184
  2073  014312  6EE6               	movwf	postinc1,c
  2074  014314  0E0B               	movlw	11
  2075  014316  6EE6               	movwf	postinc1,c
  2076  014318  0E07               	movlw	7
  2077  01431A  6EE6               	movwf	postinc1,c
  2078  01431C  EC3E  F0C3         	call	_StartTimer	;wreg free
  2079                           
  2080                           ;main.c: 207:    StartTimer(TMR_FLIPPER, 1500);
  2081  014320  0EDC               	movlw	220
  2082  014322  6EE6               	movwf	postinc1,c
  2083  014324  0E05               	movlw	5
  2084  014326  6EE6               	movwf	postinc1,c
  2085  014328  0E0B               	movlw	11
  2086  01432A  6EE6               	movwf	postinc1,c
  2087  01432C  EC3E  F0C3         	call	_StartTimer	;wreg free
  2088                           
  2089                           ;main.c: 208:    StartTimer(TMR_HELPDIS, 3000);
  2090  014330  0EB8               	movlw	184
  2091  014332  6EE6               	movwf	postinc1,c
  2092  014334  0E0B               	movlw	11
  2093  014336  6EE6               	movwf	postinc1,c
  2094  014338  0E09               	movlw	9
  2095  01433A  6EE6               	movwf	postinc1,c
  2096  01433C  EC3E  F0C3         	call	_StartTimer	;wreg free
  2097                           
  2098                           ;main.c: 210:    start_adc_scan();
  2099  014340  ECB0  F0BF         	call	_start_adc_scan	;wreg free
  2100                           
  2101                           ;main.c: 212:    break;
  2102  014344  D01C               	goto	l10436
  2103  014346                     l1250:
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;main.c: 218:    P.SYSTEM_STABLE = 1;
  2107  014346  0100               	movlb	0	; () banked
  2108  014348  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2109                           
  2110                           ;main.c: 219:    break;
  2111  01434A  D019               	goto	l10436
  2112  01434C                     l1252:
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;main.c: 222:    V.ui_state = UI_STATE_INIT;
  2116  01434C  6B00               	clrf	_V& (0+255),b	;volatile
  2117                           
  2118                           ;main.c: 223:    break;
  2119  01434E  D017               	goto	l10436
  2120  014350                     l10434:
  2121  014350  0101               	movlb	1	; () banked
  2122  014352  5100               	movf	_V& (0+255),w,b	;volatile
  2123  014354  6E3F               	movwf	(btemp+10)^0,c
  2124  014356  6A40               	clrf	(btemp+11)^0,c
  2125                           
  2126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2127                           ; Switch size 1, requested type "simple"
  2128                           ; Number of cases is 1, Range of values is 0 to 0
  2129                           ; switch strategies available:
  2130                           ; Name         Instructions Cycles
  2131                           ; simple_byte            4     3 (average)
  2132                           ;	Chosen strategy is simple_byte
  2133  014358  5040               	movf	(btemp+11)^0,w,c
  2134  01435A  0A00               	xorlw	0	; case 0
  2135  01435C  A4D8               	btfss	status,2,c
  2136  01435E  D7F6               	goto	l1252
  2137                           
  2138                           ; BSR set to: 1
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 5, Range of values is 0 to 5
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte           16     9 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145  014360  503F               	movf	(btemp+10)^0,w,c
  2146  014362  0A00               	xorlw	0	; case 0
  2147  014364  B4D8               	btfsc	status,2,c
  2148  014366  D726               	goto	l10394
  2149  014368  0A01               	xorlw	1	; case 1
  2150  01436A  B4D8               	btfsc	status,2,c
  2151  01436C  D008               	goto	l10436
  2152  01436E  0A02               	xorlw	2	; case 3
  2153  014370  B4D8               	btfsc	status,2,c
  2154  014372  D005               	goto	l10436
  2155  014374  0A07               	xorlw	7	; case 4
  2156  014376  B4D8               	btfsc	status,2,c
  2157  014378  D7E6               	goto	l1250
  2158  01437A  0A01               	xorlw	1	; case 5
  2159  01437C  D7E7               	goto	l1252
  2160  01437E                     l10436:
  2161                           
  2162                           ;main.c: 226:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2163  01437E  0E01               	movlw	1
  2164  014380  6EE6               	movwf	postinc1,c
  2165  014382  EC05  F0C6         	call	_TimerDone	;wreg free
  2166  014386  5035               	movf	btemp^0,w,c
  2167  014388  B4D8               	btfsc	status,2,c
  2168  01438A  D013               	goto	l10448
  2169  01438C  EC89  F0C7         	call	_check_adc_scan	;wreg free
  2170  014390  5035               	movf	btemp^0,w,c
  2171  014392  B4D8               	btfsc	status,2,c
  2172  014394  D00E               	goto	l10448
  2173                           
  2174                           ;main.c: 230:    convert_adc_data();
  2175  014396  EC09  F0BF         	call	_convert_adc_data	;wreg free
  2176                           
  2177                           ;main.c: 234:    clear_adc_scan();
  2178  01439A  EC91  F0C7         	call	_clear_adc_scan	;wreg free
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 235:    start_adc_scan();
  2182  01439E  ECB0  F0BF         	call	_start_adc_scan	;wreg free
  2183                           
  2184                           ;main.c: 236:    StartTimer(TMR_ADC, 500);
  2185  0143A2  0EF4               	movlw	244
  2186  0143A4  6EE6               	movwf	postinc1,c
  2187  0143A6  0E01               	movlw	1
  2188  0143A8  6EE6               	movwf	postinc1,c
  2189  0143AA  0E01               	movlw	1
  2190  0143AC  6EE6               	movwf	postinc1,c
  2191  0143AE  EC3E  F0C3         	call	_StartTimer	;wreg free
  2192  0143B2                     l10448:
  2193                           
  2194                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2195                           
  2196                           ;main.c: 239:   if (V.ticks) {
  2197  0143B2  0E0A               	movlw	10
  2198  0143B4  6EE6               	movwf	postinc1,c
  2199  0143B6  EC05  F0C6         	call	_TimerDone	;wreg free
  2200  0143BA  5035               	movf	btemp^0,w,c
  2201  0143BC  B4D8               	btfsc	status,2,c
  2202  0143BE  D0A1               	goto	l10466
  2203                           
  2204                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2205  0143C0  0E09               	movlw	9
  2206  0143C2  6EE6               	movwf	postinc1,c
  2207  0143C4  EC05  F0C6         	call	_TimerDone	;wreg free
  2208  0143C8  5035               	movf	btemp^0,w,c
  2209  0143CA  B4D8               	btfsc	status,2,c
  2210  0143CC  D004               	goto	l10456
  2211                           
  2212                           ;main.c: 245:     set_display_info(DIS_STR);
  2213  0143CE  0E00               	movlw	0
  2214  0143D0  6EE6               	movwf	postinc1,c
  2215  0143D2  EC7A  F0C6         	call	_set_display_info	;wreg free
  2216  0143D6                     l10456:
  2217                           
  2218                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2219  0143D6  0060  F803  FFE6   	movff	_C,postinc1
  2220  0143DC  0060  F807  FFE6   	movff	_C+1,postinc1
  2221  0143E2  0060  F80B  FFE6   	movff	_C+2,postinc1
  2222  0143E8  0060  F80F  FFE6   	movff	_C+3,postinc1
  2223  0143EE  0E00               	movlw	0
  2224  0143F0  6EE6               	movwf	postinc1,c
  2225  0143F2  EC6B  F0C6         	call	_get_raw_result	;wreg free
  2226  0143F6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2227  0143FC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2228  014402  0EA6               	movlw	low STR_9
  2229  014404  6EE6               	movwf	postinc1,c
  2230  014406  0EFF               	movlw	high STR_9
  2231  014408  6EE6               	movwf	postinc1,c
  2232  01440A  0E00               	movlw	0
  2233  01440C  6EE6               	movwf	postinc1,c
  2234  01440E  0E00               	movlw	0
  2235  014410  6EE6               	movwf	postinc1,c
  2236  014412  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  2237  014416  0060  F0D7  FFE6   	movff	btemp,postinc1
  2238  01441C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2239  014422  0E0A               	movlw	10
  2240  014424  6EE6               	movwf	postinc1,c
  2241  014426  EC43  F0B9         	call	_sprintf	;wreg free
  2242                           
  2243                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2244  01442A  0060  F813  FFE6   	movff	_C+4,postinc1
  2245  014430  0060  F817  FFE6   	movff	_C+5,postinc1
  2246  014436  0060  F81B  FFE6   	movff	_C+6,postinc1
  2247  01443C  0060  F81F  FFE6   	movff	_C+7,postinc1
  2248  014442  0E01               	movlw	1
  2249  014444  6EE6               	movwf	postinc1,c
  2250  014446  EC6B  F0C6         	call	_get_raw_result	;wreg free
  2251  01444A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2252  014450  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2253  014456  0EA6               	movlw	low STR_9
  2254  014458  6EE6               	movwf	postinc1,c
  2255  01445A  0EFF               	movlw	high STR_9
  2256  01445C  6EE6               	movwf	postinc1,c
  2257  01445E  0E00               	movlw	0
  2258  014460  6EE6               	movwf	postinc1,c
  2259  014462  0E01               	movlw	1
  2260  014464  6EE6               	movwf	postinc1,c
  2261  014466  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  2262  01446A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2263  014470  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2264  014476  0E0A               	movlw	10
  2265  014478  6EE6               	movwf	postinc1,c
  2266  01447A  EC43  F0B9         	call	_sprintf	;wreg free
  2267                           
  2268                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2269  01447E  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2270  014484  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2271  01448A  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2272  014490  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2273  014496  0060  F823  FFE6   	movff	_C+8,postinc1
  2274  01449C  0060  F827  FFE6   	movff	_C+9,postinc1
  2275  0144A2  0060  F82B  FFE6   	movff	_C+10,postinc1
  2276  0144A8  0060  F82F  FFE6   	movff	_C+11,postinc1
  2277  0144AE  0E02               	movlw	2
  2278  0144B0  6EE6               	movwf	postinc1,c
  2279  0144B2  EC6B  F0C6         	call	_get_raw_result	;wreg free
  2280  0144B6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2281  0144BC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2282  0144C2  0E32               	movlw	low STR_11
  2283  0144C4  6EE6               	movwf	postinc1,c
  2284  0144C6  0EFF               	movlw	high STR_11
  2285  0144C8  6EE6               	movwf	postinc1,c
  2286  0144CA  0E00               	movlw	0
  2287  0144CC  6EE6               	movwf	postinc1,c
  2288  0144CE  0E02               	movlw	2
  2289  0144D0  6EE6               	movwf	postinc1,c
  2290  0144D2  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  2291  0144D6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2292  0144DC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2293  0144E2  0E0E               	movlw	14
  2294  0144E4  6EE6               	movwf	postinc1,c
  2295  0144E6  EC43  F0B9         	call	_sprintf	;wreg free
  2296                           
  2297                           ;main.c: 250:    StartTimer(TMR_DISPLAY, 250);
  2298  0144EA  0EFA               	movlw	250
  2299  0144EC  6EE6               	movwf	postinc1,c
  2300  0144EE  0E00               	movlw	0
  2301  0144F0  6EE6               	movwf	postinc1,c
  2302  0144F2  0E0A               	movlw	10
  2303  0144F4  6EE6               	movwf	postinc1,c
  2304  0144F6  EC3E  F0C3         	call	_StartTimer	;wreg free
  2305                           
  2306                           ;main.c: 251:    update_lcd(0);
  2307  0144FA  0E00               	movlw	0
  2308  0144FC  6EE6               	movwf	postinc1,c
  2309  0144FE  ECBC  F0B8         	call	_update_lcd	;wreg free
  2310  014502                     l10466:
  2311                           
  2312                           ;main.c: 257:   check_help(V.flipper);
  2313  014502  0101               	movlb	1	; () banked
  2314  014504  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2315  014506  6EE6               	movwf	postinc1,c
  2316  014508  EC56  F0AF         	call	_check_help	;wreg free
  2317                           
  2318                           ;main.c: 262:   if (V.set_sequ) {
  2319  01450C  0101               	movlb	1	; () banked
  2320  01450E  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2321  014510  D71F               	goto	l10434
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;main.c: 263:    if (TimerDone(TMR_INFO)) {
  2325  014512  0E07               	movlw	7
  2326  014514  6EE6               	movwf	postinc1,c
  2327  014516  EC05  F0C6         	call	_TimerDone	;wreg free
  2328  01451A  5035               	movf	btemp^0,w,c
  2329  01451C  B4D8               	btfsc	status,2,c
  2330  01451E  D00B               	goto	l10478
  2331                           
  2332                           ;main.c: 264:     V.set_sequ = 0;
  2333  014520  0101               	movlb	1	; () banked
  2334  014522  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;main.c: 265:     set_vterm(0);
  2338  014524  0E00               	movlw	0
  2339  014526  6EE6               	movwf	postinc1,c
  2340  014528  ECC4  F0C6         	call	_set_vterm	;wreg free
  2341                           
  2342                           ; BSR set to: 4
  2343                           ;main.c: 266:     update_lcd(0);
  2344  01452C  0E00               	movlw	0
  2345  01452E  6EE6               	movwf	postinc1,c
  2346  014530  ECBC  F0B8         	call	_update_lcd	;wreg free
  2347                           
  2348                           ;main.c: 267:    } else {
  2349  014534  D70D               	goto	l10434
  2350  014536                     l10478:
  2351                           
  2352                           ;main.c: 268:     set_vterm(2);
  2353  014536  0E02               	movlw	2
  2354  014538  6EE6               	movwf	postinc1,c
  2355  01453A  ECC4  F0C6         	call	_set_vterm	;wreg free
  2356                           
  2357                           ; BSR set to: 4
  2358                           ;main.c: 269:     update_lcd(2);
  2359  01453E  0E02               	movlw	2
  2360  014540  6EE6               	movwf	postinc1,c
  2361  014542  ECBC  F0B8         	call	_update_lcd	;wreg free
  2362  014546  D704               	goto	l10434
  2363  014548                     __end_of_main:
  2364                           	opt callstack 0
  2365                           
  2366 ;; *************** function _start_adc_scan *****************
  2367 ;; Defined at:
  2368 ;;		line 33 in file "daq.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1  [STACK] _Bool 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/4
  2379 ;;		On exit  : 1/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    7
  2389 ;; This function calls:
  2390 ;;		_ADCC_DischargeSampleCapacitor
  2391 ;;		_ADCC_SetADIInterruptHandler
  2392 ;;		_ADCC_SetADTIInterruptHandler
  2393 ;;		_ADCC_StartConversion
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text1
  2400  017F60                     __ptext1:
  2401                           	opt callstack 0
  2402  017F60                     _start_adc_scan:
  2403                           	opt callstack 23
  2404                           
  2405                           ;daq.c: 35:  if (R.done)
  2406                           
  2407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2408                           ;incstack = 0
  2409  017F60  0100               	movlb	0	; () banked
  2410  017F62  51CA               	movf	(_R+39)& (0+255),w,b	;volatile
  2411  017F64  A4D8               	btfss	status,2,c
  2412  017F66  0012               	return	
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;daq.c: 38:  R.scan_index = 0;
  2416  017F68  6BC7               	clrf	(_R+36)& (0+255),b	;volatile
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2420  017F6A  013A               	movlb	58	; () banked
  2421  017F6C  5140               	movf	64,w,b	;volatile
  2422  017F6E  006E F940  F035    	movff	14928,btemp	;volatile
  2423  017F74  6A36               	clrf	(btemp+1)^0,c
  2424  017F76  0060  F0D4  F036   	movff	btemp,btemp+1
  2425  017F7C  6A35               	clrf	btemp^0,c
  2426  017F7E  2635               	addwf	btemp^0,f,c
  2427  017F80  0E00               	movlw	0
  2428  017F82  2236               	addwfc	(btemp+1)^0,f,c
  2429  017F84  0E77               	movlw	119
  2430  017F86  1435               	andwf	btemp^0,w,c
  2431  017F88  0100               	movlb	0	; () banked
  2432  017F8A  6FC8               	movwf	(_R+37)& (0+255),b	;volatile
  2433  017F8C  0E3C               	movlw	60
  2434  017F8E  1436               	andwf	(btemp+1)^0,w,c
  2435  017F90  6FC9               	movwf	(_R+38)& (0+255),b	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2439  017F92  0E12               	movlw	low _adc_int_handler
  2440  017F94  6EE6               	movwf	postinc1,c
  2441  017F96  0E8D               	movlw	high _adc_int_handler
  2442  017F98  6EE6               	movwf	postinc1,c
  2443  017F9A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2444  017F9C  6EE6               	movwf	postinc1,c
  2445  017F9E  EC8E  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2446                           
  2447                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2448  017FA2  0E2E               	movlw	low _adc_int_t_handler
  2449  017FA4  6EE6               	movwf	postinc1,c
  2450  017FA6  0E7A               	movlw	high _adc_int_t_handler
  2451  017FA8  6EE6               	movwf	postinc1,c
  2452  017FAA  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2453  017FAC  6EE6               	movwf	postinc1,c
  2454  017FAE  EC7A  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2455                           
  2456                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2457  017FB2  EC7D  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2458                           
  2459                           ; BSR set to: 62
  2460                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2461  017FB6  0100               	movlb	0	; () banked
  2462  017FB8  51C7               	movf	(_R+36)& (0+255),w,b	;volatile
  2463  017FBA  0B0F               	andlw	15
  2464  017FBC  6EE6               	movwf	postinc1,c
  2465  017FBE  EC30  F0C7         	call	_ADCC_StartConversion	;wreg free
  2466                           
  2467                           ; BSR set to: 62
  2468  017FC2  82BE               	bsf	190,1,c	;volatile
  2469                           
  2470                           ; BSR set to: 62
  2471  017FC4  84BE               	bsf	190,2,c	;volatile
  2472                           
  2473                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2474  017FC6  0012               	return		;funcret
  2475  017FC8                     __end_of_start_adc_scan:
  2476                           	opt callstack 0
  2477                           
  2478 ;; *************** function _ADCC_StartConversion *****************
  2479 ;; Defined at:
  2480 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  channel         1  [STACK] enum E16136
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1  [STACK] void 
  2487 ;; Registers used:
  2488 ;;		fsr1l, fsr1h
  2489 ;; Tracked objects:
  2490 ;;		On entry : 3F/0
  2491 ;;		On exit  : 3F/3E
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_start_adc_scan
  2505 ;;		_adc_int_t_handler
  2506 ;; This function uses a reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text2
  2510  018E60                     __ptext2:
  2511                           	opt callstack 0
  2512  018E60                     _ADCC_StartConversion:
  2513                           	opt callstack 6
  2514                           
  2515                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2516                           ;stkvar	_channel @ sp[(0)+-1]
  2517                           
  2518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2519                           ;incstack = 0
  2520  018E60  0EFF               	movlw	-1
  2521  018E62  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2522                           
  2523                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2524  018E68  013E               	movlb	62	; () banked
  2525  018E6A  8FF8               	bsf	248,7,b	;volatile
  2526                           
  2527                           ; BSR set to: 62
  2528                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2529  018E6C  81F8               	bsf	248,0,b	;volatile
  2530                           
  2531                           ; BSR set to: 62
  2532                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2533  018E6E  52E5               	movf	postdec1,f,c
  2534  018E70  0012               	return		;funcret
  2535  018E72                     __end_of_ADCC_StartConversion:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2539 ;; Defined at:
  2540 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1  [STACK] void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 3F/3E
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    6
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_start_adc_scan
  2565 ;;		_adc_int_t_handler
  2566 ;; This function uses a reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text3
  2570  018EFA                     __ptext3:
  2571                           	opt callstack 0
  2572  018EFA                     _ADCC_DischargeSampleCapacitor:
  2573                           	opt callstack 6
  2574                           
  2575                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2576                           
  2577                           ; BSR set to: 62
  2578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2579                           ;incstack = 0
  2580  018EFA  0E3B               	movlw	59
  2581  018EFC  013E               	movlb	62	; () banked
  2582  018EFE  6FF1               	movwf	241,b	;volatile
  2583                           
  2584                           ; BSR set to: 62
  2585                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2586  018F00  0012               	return		;funcret
  2587  018F02                     __end_of_ADCC_DischargeSampleCapacitor:
  2588                           	opt callstack 0
  2589                           
  2590 ;; *************** function _srand *****************
  2591 ;; Defined at:
  2592 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  s               2  [STACK] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1  [STACK] void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2601 ;; Tracked objects:
  2602 ;;		On entry : 3F/0
  2603 ;;		On exit  : 3F/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    6
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text4
  2621  018794                     __ptext4:
  2622                           	opt callstack 0
  2623  018794                     _srand:
  2624                           	opt callstack 24
  2625                           
  2626                           ;stkvar	_s @ sp[(0)+-2]
  2627                           
  2628                           ; BSR set to: 62
  2629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2630                           ;incstack = 0
  2631  018794  0EFE               	movlw	-2
  2632  018796  50E3               	movf	plusw1,w,c
  2633  018798  0FFF               	addlw	255
  2634  01879A  6E3F               	movwf	(btemp+10)^0,c
  2635  01879C  0EFF               	movlw	-1
  2636  01879E  006F FF8C  F040    	movff	plusw1,btemp+11
  2637  0187A4  0EFF               	movlw	255
  2638  0187A6  2240               	addwfc	(btemp+11)^0,f,c
  2639  0187A8  0060  F0FC  F09B   	movff	btemp+10,_seed
  2640  0187AE  0060  F100  F09C   	movff	btemp+11,_seed+1
  2641  0187B4  0100               	movlb	0	; () banked
  2642  0187B6  6B9D               	clrf	(_seed+2)& (0+255),b
  2643  0187B8  6B9E               	clrf	(_seed+3)& (0+255),b
  2644  0187BA  6B9F               	clrf	(_seed+4)& (0+255),b
  2645  0187BC  6BA0               	clrf	(_seed+5)& (0+255),b
  2646  0187BE  6BA1               	clrf	(_seed+6)& (0+255),b
  2647  0187C0  6BA2               	clrf	(_seed+7)& (0+255),b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2651  0187C2  52E5               	movf	postdec1,f,c
  2652  0187C4  52E5               	movf	postdec1,f,c
  2653  0187C6  0012               	return		;funcret
  2654  0187C8                     __end_of_srand:
  2655                           	opt callstack 0
  2656                           
  2657 ;; *************** function _init_display *****************
  2658 ;; Defined at:
  2659 ;;		line 37 in file "eadog.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1  [STACK] void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/1
  2670 ;;		On exit  : 3F/3D
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    8
  2680 ;; This function calls:
  2681 ;;		_ringBufS_init
  2682 ;;		_send_lcd_cmd
  2683 ;;		_send_lcd_cmd_long
  2684 ;;		_wdtdelay
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text5
  2691  017390                     __ptext5:
  2692                           	opt callstack 0
  2693  017390                     _init_display:
  2694                           	opt callstack 22
  2695                           
  2696                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2697                           
  2698                           ; BSR set to: 0
  2699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2700                           ;incstack = 0
  2701  017390  0E83               	movlw	low _ring_buf1
  2702  017392  0100               	movlb	0	; () banked
  2703  017394  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2704  017396  0E03               	movlw	high _ring_buf1
  2705  017398  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2706                           
  2707                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2708  01739A  0E40               	movlw	low _ring_buf2
  2709  01739C  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2710  01739E  0E03               	movlw	high _ring_buf2
  2711  0173A0  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2715  0173A2  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2716  0173A8  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2717  0173AE  ECC6  F0C4         	call	_ringBufS_init	;wreg free
  2718                           
  2719                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2720  0173B2  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2721  0173B8  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2722  0173BE  ECC6  F0C4         	call	_ringBufS_init	;wreg free
  2723                           
  2724                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2725  0173C2  84BE               	bsf	190,2,c	;volatile
  2726  0173C4  84BC               	bsf	188,2,c	;volatile
  2727                           
  2728                           ;eadog.c: 46:  wdtdelay(350000);
  2729  0173C6  0E30               	movlw	48
  2730  0173C8  6EE6               	movwf	postinc1,c
  2731  0173CA  0E57               	movlw	87
  2732  0173CC  6EE6               	movwf	postinc1,c
  2733  0173CE  0E05               	movlw	5
  2734  0173D0  6EE6               	movwf	postinc1,c
  2735  0173D2  0E00               	movlw	0
  2736  0173D4  6EE6               	movwf	postinc1,c
  2737  0173D6  EC3C  F0C1         	call	_wdtdelay	;wreg free
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2741  0173DA  0E39               	movlw	57
  2742  0173DC  6EE6               	movwf	postinc1,c
  2743  0173DE  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2747  0173E2  0E1D               	movlw	29
  2748  0173E4  6EE6               	movwf	postinc1,c
  2749  0173E6  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2753  0173EA  0E50               	movlw	80
  2754  0173EC  6EE6               	movwf	postinc1,c
  2755  0173EE  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2759  0173F2  0E6C               	movlw	108
  2760  0173F4  6EE6               	movwf	postinc1,c
  2761  0173F6  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2765  0173FA  0E76               	movlw	118
  2766  0173FC  6EE6               	movwf	postinc1,c
  2767  0173FE  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2771  017402  0E38               	movlw	56
  2772  017404  6EE6               	movwf	postinc1,c
  2773  017406  EC9E  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2777  01740A  0E0F               	movlw	15
  2778  01740C  6EE6               	movwf	postinc1,c
  2779  01740E  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2783  017412  0E01               	movlw	1
  2784  017414  6EE6               	movwf	postinc1,c
  2785  017416  EC9E  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2789  01741A  0E02               	movlw	2
  2790  01741C  6EE6               	movwf	postinc1,c
  2791  01741E  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2795  017422  0E06               	movlw	6
  2796  017424  6EE6               	movwf	postinc1,c
  2797  017426  ECB2  F0C4         	call	_send_lcd_cmd	;wreg free
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;eadog.c: 57:  wdtdelay(30);
  2801  01742A  0E1E               	movlw	30
  2802  01742C  6EE6               	movwf	postinc1,c
  2803  01742E  0E00               	movlw	0
  2804  017430  6EE6               	movwf	postinc1,c
  2805  017432  0E00               	movlw	0
  2806  017434  6EE6               	movwf	postinc1,c
  2807  017436  0E00               	movlw	0
  2808  017438  6EE6               	movwf	postinc1,c
  2809  01743A  EC3C  F0C1         	call	_wdtdelay	;wreg free
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2813  01743E  0E02               	movlw	2
  2814  017440  013D               	movlb	61	; () banked
  2815  017442  6F16               	movwf	22,b	;volatile
  2816                           
  2817                           ; BSR set to: 61
  2818                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2819  017444  0E40               	movlw	64
  2820  017446  6F15               	movwf	21,b	;volatile
  2821                           
  2822                           ; BSR set to: 61
  2823                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2824  017448  0E83               	movlw	131
  2825  01744A  6F14               	movwf	20,b	;volatile
  2826                           
  2827                           ; BSR set to: 61
  2828                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2829  01744C  931A               	bcf	26,1,b	;volatile
  2830                           
  2831                           ; BSR set to: 61
  2832                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2833  01744E  0E3F               	movlw	-193
  2834  017450  013B               	movlb	59	; () banked
  2835  017452  17FD               	andwf	253,f,b	;volatile
  2836                           
  2837                           ; BSR set to: 59
  2838                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2839  017454  9BFD               	bcf	253,5,b	;volatile
  2840                           
  2841                           ; BSR set to: 59
  2842                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2843  017456  51FD               	movf	253,w,b	;volatile
  2844  017458  0BF9               	andlw	-7
  2845  01745A  0902               	iorlw	2
  2846  01745C  6FFD               	movwf	253,b	;volatile
  2847                           
  2848                           ; BSR set to: 59
  2849                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2850  01745E  0EE7               	movlw	-25
  2851  017460  17FD               	andwf	253,f,b	;volatile
  2852                           
  2853                           ; BSR set to: 59
  2854                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2855  017462  81FD               	bsf	253,0,b	;volatile
  2856                           
  2857                           ; BSR set to: 59
  2858                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2859  017464  0E83               	movlw	low _ring_buf1
  2860  017466  6FF9               	movwf	249,b	;volatile
  2861  017468  0E03               	movlw	high _ring_buf1
  2862  01746A  6FFA               	movwf	250,b	;volatile
  2863  01746C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2864  01746E  6FFB               	movwf	251,b	;volatile
  2865                           
  2866                           ; BSR set to: 59
  2867                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2868  017470  9BFC               	bcf	252,5,b	;volatile
  2869                           
  2870                           ; BSR set to: 59
  2871                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2872  017472  013D               	movlb	61	; () banked
  2873  017474  831A               	bsf	26,1,b	;volatile
  2874                           
  2875                           ; BSR set to: 61
  2876                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2877  017476  94BE               	bcf	190,2,c	;volatile
  2878                           
  2879                           ; BSR set to: 61
  2880                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2881  017478  0012               	return		;funcret
  2882  01747A                     __end_of_init_display:
  2883                           	opt callstack 0
  2884                           
  2885 ;; *************** function _send_lcd_cmd_long *****************
  2886 ;; Defined at:
  2887 ;;		line 114 in file "eadog.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  cmd             1  [STACK] const unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1  [STACK] void 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2896 ;; Tracked objects:
  2897 ;;		On entry : 3F/0
  2898 ;;		On exit  : 3F/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    7
  2908 ;; This function calls:
  2909 ;;		_SPI1_Exchange8bit
  2910 ;;		_wdtdelay
  2911 ;; This function is called by:
  2912 ;;		_init_display
  2913 ;; This function uses a reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text6
  2917  01893C                     __ptext6:
  2918                           	opt callstack 0
  2919  01893C                     _send_lcd_cmd_long:
  2920                           	opt callstack 22
  2921                           
  2922                           ; BSR set to: 61
  2923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2924                           ;incstack = 0
  2925                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2926  01893C  92BC               	bcf	188,1,c	;volatile
  2927                           
  2928                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2929  01893E  94BC               	bcf	188,2,c	;volatile
  2930                           
  2931                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2932                           ;stkvar	_cmd @ sp[(0)+-1]
  2933  018940  0EFF               	movlw	-1
  2934  018942  50E3               	movf	plusw1,w,c
  2935  018944  6EE6               	movwf	postinc1,c
  2936  018946  EC5C  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  2937                           
  2938                           ; BSR set to: 57
  2939                           ;eadog.c: 119:  wdtdelay(800);
  2940  01894A  0E20               	movlw	32
  2941  01894C  6EE6               	movwf	postinc1,c
  2942  01894E  0E03               	movlw	3
  2943  018950  6EE6               	movwf	postinc1,c
  2944  018952  0E00               	movlw	0
  2945  018954  6EE6               	movwf	postinc1,c
  2946  018956  0E00               	movlw	0
  2947  018958  6EE6               	movwf	postinc1,c
  2948  01895A  EC3C  F0C1         	call	_wdtdelay	;wreg free
  2949                           
  2950                           ; BSR set to: 0
  2951  01895E  82BC               	bsf	188,1,c	;volatile
  2952                           
  2953                           ; BSR set to: 0
  2954                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2955  018960  52E5               	movf	postdec1,f,c
  2956  018962  0012               	return		;funcret
  2957  018964                     __end_of_send_lcd_cmd_long:
  2958                           	opt callstack 0
  2959                           
  2960 ;; *************** function _send_lcd_cmd *****************
  2961 ;; Defined at:
  2962 ;;		line 102 in file "eadog.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  cmd             1  [STACK] const unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1  [STACK] void 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2971 ;; Tracked objects:
  2972 ;;		On entry : 3F/0
  2973 ;;		On exit  : 3F/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    7
  2983 ;; This function calls:
  2984 ;;		_SPI1_Exchange8bit
  2985 ;;		_wdtdelay
  2986 ;; This function is called by:
  2987 ;;		_init_display
  2988 ;; This function uses a reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text7
  2992  018964                     __ptext7:
  2993                           	opt callstack 0
  2994  018964                     _send_lcd_cmd:
  2995                           	opt callstack 22
  2996                           
  2997                           ; BSR set to: 0
  2998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2999                           ;incstack = 0
  3000                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3001  018964  92BC               	bcf	188,1,c	;volatile
  3002                           
  3003                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3004  018966  94BC               	bcf	188,2,c	;volatile
  3005                           
  3006                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3007                           ;stkvar	_cmd @ sp[(0)+-1]
  3008  018968  0EFF               	movlw	-1
  3009  01896A  50E3               	movf	plusw1,w,c
  3010  01896C  6EE6               	movwf	postinc1,c
  3011  01896E  EC5C  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3012                           
  3013                           ; BSR set to: 57
  3014                           ;eadog.c: 107:  wdtdelay(30);
  3015  018972  0E1E               	movlw	30
  3016  018974  6EE6               	movwf	postinc1,c
  3017  018976  0E00               	movlw	0
  3018  018978  6EE6               	movwf	postinc1,c
  3019  01897A  0E00               	movlw	0
  3020  01897C  6EE6               	movwf	postinc1,c
  3021  01897E  0E00               	movlw	0
  3022  018980  6EE6               	movwf	postinc1,c
  3023  018982  EC3C  F0C1         	call	_wdtdelay	;wreg free
  3024                           
  3025                           ; BSR set to: 0
  3026  018986  82BC               	bsf	188,1,c	;volatile
  3027                           
  3028                           ; BSR set to: 0
  3029                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3030  018988  52E5               	movf	postdec1,f,c
  3031  01898A  0012               	return		;funcret
  3032  01898C                     __end_of_send_lcd_cmd:
  3033                           	opt callstack 0
  3034                           
  3035 ;; *************** function _SPI1_Exchange8bit *****************
  3036 ;; Defined at:
  3037 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  data            1  [STACK] unsigned char 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1  [STACK] unsigned char 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 3F/39
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    6
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_send_lcd_cmd
  3062 ;;		_send_lcd_cmd_long
  3063 ;; This function uses a reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text8
  3067  018CB8                     __ptext8:
  3068                           	opt callstack 0
  3069  018CB8                     _SPI1_Exchange8bit:
  3070                           	opt callstack 22
  3071                           
  3072                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3073                           
  3074                           ; BSR set to: 0
  3075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3076                           ;incstack = 0
  3077  018CB8  0E01               	movlw	1
  3078  018CBA  013D               	movlb	61	; () banked
  3079  018CBC  6F12               	movwf	18,b	;volatile
  3080                           
  3081                           ; BSR set to: 61
  3082                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3083                           ;stkvar	_data @ sp[(0)+-1]
  3084  018CBE  0EFF               	movlw	-1
  3085  018CC0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3086  018CC6                     l835:
  3087                           
  3088                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3089  018CC6  0139               	movlb	57	; () banked
  3090  018CC8  A9A2               	btfss	162,4,b	;volatile
  3091  018CCA  D7FD               	goto	l835
  3092                           
  3093                           ; BSR set to: 57
  3094                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3095  018CCC  006F F440  F035    	movff	15632,btemp	;volatile
  3096                           
  3097                           ; BSR set to: 57
  3098                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3099  018CD2  52E5               	movf	postdec1,f,c
  3100  018CD4  0012               	return		;funcret
  3101  018CD6                     __end_of_SPI1_Exchange8bit:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _ringBufS_init *****************
  3105 ;; Defined at:
  3106 ;;		line 22 in file "ringbufs.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  _this           2  [STACK] PTR volatile struct ring
  3109 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1  [STACK] void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    7
  3128 ;; This function calls:
  3129 ;;		_memset
  3130 ;; This function is called by:
  3131 ;;		_init_display
  3132 ;; This function uses a reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text9
  3136  01898C                     __ptext9:
  3137                           	opt callstack 0
  3138  01898C                     _ringBufS_init:
  3139                           	opt callstack 22
  3140                           
  3141                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3142                           
  3143                           ; BSR set to: 57
  3144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3145                           ;incstack = 0
  3146  01898C  0E43               	movlw	67
  3147  01898E  6EE6               	movwf	postinc1,c
  3148  018990  0E00               	movlw	0
  3149  018992  6EE6               	movwf	postinc1,c
  3150  018994  0E00               	movlw	0
  3151  018996  6EE6               	movwf	postinc1,c
  3152  018998  0E00               	movlw	0
  3153  01899A  6EE6               	movwf	postinc1,c
  3154                           
  3155                           ;stkvar	__this @ sp[(-4)+-2]
  3156  01899C  0EFA               	movlw	-6
  3157  01899E  006F FF8F FFE6     	movff	plusw1,postinc1
  3158  0189A4  006F FF8F FFE6     	movff	plusw1,postinc1
  3159  0189AA  ECD7  F0A7         	call	_memset	;wreg free
  3160                           
  3161                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3162  0189AE  52E5               	movf	postdec1,f,c
  3163  0189B0  52E5               	movf	postdec1,f,c
  3164  0189B2  0012               	return		;funcret
  3165  0189B4                     __end_of_ringBufS_init:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _eaDogM_WriteCommand *****************
  3169 ;; Defined at:
  3170 ;;		line 160 in file "eadog.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  cmd             1  [STACK] const unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1  [STACK] void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3179 ;; Tracked objects:
  3180 ;;		On entry : 3F/3D
  3181 ;;		On exit  : 3F/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   16
  3191 ;; This function calls:
  3192 ;;		_send_lcd_cmd_dma
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text10
  3199  018E82                     __ptext10:
  3200                           	opt callstack 0
  3201  018E82                     _eaDogM_WriteCommand:
  3202                           	opt callstack 14
  3203                           
  3204                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3205                           ;stkvar	_cmd @ sp[(0)+-1]
  3206                           
  3207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3208                           ;incstack = 0
  3209  018E82  0EFF               	movlw	-1
  3210  018E84  50E3               	movf	plusw1,w,c
  3211  018E86  6EE6               	movwf	postinc1,c
  3212  018E88  EC96  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  3213                           
  3214                           ; BSR set to: 0
  3215                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3216  018E8C  52E5               	movf	postdec1,f,c
  3217  018E8E  0012               	return		;funcret
  3218  018E90                     __end_of_eaDogM_WriteCommand:
  3219                           	opt callstack 0
  3220                           
  3221 ;; *************** function _convert_adc_data *****************
  3222 ;; Defined at:
  3223 ;;		line 37 in file "mbmc.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  i               1  [STACK] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1  [STACK] void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/4
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    9
  3244 ;; This function calls:
  3245 ;;		_conv_raw_result
  3246 ;;		_lp_filter
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text11
  3253  017E12                     __ptext11:
  3254                           	opt callstack 0
  3255  017E12                     _convert_adc_data:
  3256                           	opt callstack 0
  3257                           
  3258                           ; BSR set to: 0
  3259                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3260  017E12  52E6               	movf	postinc1,f,c
  3261                           
  3262                           ;mbmc.c: 39:  uint8_t i = 0;
  3263                           ;stkvar	_i @ sp[(-1)+0]
  3264                           
  3265                           ;incstack = 0
  3266  017E14  0EFF               	movlw	-1
  3267  017E16  6AE3               	clrf	plusw1,c
  3268  017E18                     l8958:
  3269                           
  3270                           ;mbmc.c: 43:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3271  017E18  0E01               	movlw	1
  3272  017E1A  6EE6               	movwf	postinc1,c
  3273                           
  3274                           ;stkvar	_i @ sp[(-2)+0]
  3275  017E1C  0EFE               	movlw	-2
  3276  017E1E  50E3               	movf	plusw1,w,c
  3277  017E20  6EE6               	movwf	postinc1,c
  3278  017E22  0E01               	movlw	1
  3279  017E24  6EE6               	movwf	postinc1,c
  3280                           
  3281                           ;stkvar	_i @ sp[(-4)+0]
  3282  017E26  0EFC               	movlw	-4
  3283  017E28  50E3               	movf	plusw1,w,c
  3284  017E2A  6EE6               	movwf	postinc1,c
  3285  017E2C  ECEB  F098         	call	_conv_raw_result	;wreg free
  3286  017E30  0060  F0D7  FFE6   	movff	btemp,postinc1
  3287  017E36  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3288  017E3C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3289  017E42  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3290  017E48  EC61  F0B1         	call	_lp_filter	;wreg free
  3291                           
  3292                           ;stkvar	_i @ sp[(-1)+0]
  3293  017E4C  0EFF               	movlw	-1
  3294  017E4E  50E3               	movf	plusw1,w,c
  3295  017E50  0D04               	mullw	4
  3296  017E52  0E00               	movlw	low _C
  3297  017E54  24F3               	addwf	243,w,c
  3298  017E56  6ED9               	movwf	fsr2l,c
  3299  017E58  0E02               	movlw	high _C
  3300  017E5A  20F4               	addwfc	prodh,w,c
  3301  017E5C  6EDA               	movwf	fsr2h,c
  3302  017E5E  0060  F0D7  FFDE   	movff	btemp,postinc2
  3303  017E64  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3304  017E6A  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3305  017E70  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3306                           
  3307                           ;mbmc.c: 47:  } while (++i < 16);
  3308                           ;stkvar	_i @ sp[(-1)+0]
  3309  017E76  0EFF               	movlw	-1
  3310  017E78  2AE3               	incf	plusw1,f,c
  3311  017E7A  0EFF               	movlw	-1
  3312  017E7C  006F FF8C  F035    	movff	plusw1,btemp
  3313  017E82  0E0F               	movlw	15
  3314  017E84  6435               	cpfsgt	btemp^0,c
  3315  017E86  D7C8               	goto	l8958
  3316                           
  3317                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3318  017E88  52E5               	movf	postdec1,f,c
  3319  017E8A  0012               	return		;funcret
  3320  017E8C                     __end_of_convert_adc_data:
  3321                           	opt callstack 0
  3322                           
  3323 ;; *************** function _lp_filter *****************
  3324 ;; Defined at:
  3325 ;;		line 15 in file "mbmc.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  new             4  [STACK] const float 
  3328 ;;  bn              1  [STACK] const unsigned char 
  3329 ;;  slow            1  [STACK] const char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  lp_speed        4  [STACK] float 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  4  [STACK] float 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/4
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    8
  3348 ;; This function calls:
  3349 ;;		___fladd
  3350 ;;		___flmul
  3351 ;;		___flsub
  3352 ;; This function is called by:
  3353 ;;		_convert_adc_data
  3354 ;; This function uses a reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text12
  3358  0162C2                     __ptext12:
  3359                           	opt callstack 0
  3360  0162C2                     _lp_filter:
  3361                           	opt callstack 0
  3362                           
  3363                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3364  0162C2  52E6               	movf	postinc1,f,c
  3365  0162C4  52E6               	movf	postinc1,f,c
  3366  0162C6  52E6               	movf	postinc1,f,c
  3367  0162C8  52E6               	movf	postinc1,f,c
  3368                           
  3369                           ;mbmc.c: 15: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 16: {;mbmc.c: 17:  static float smooth[16];;mbmc.c: 18:  float lp_speed;;mbmc.c: 20: 
      +                           if (bn >= 16)
  3370                           ;stkvar	_bn @ sp[(-4)+-5]
  3371                           
  3372                           ;incstack = 0
  3373  0162CA  0EF7               	movlw	-9
  3374  0162CC  006F FF8C  F035    	movff	plusw1,btemp
  3375  0162D2  0E0F               	movlw	15
  3376  0162D4  6435               	cpfsgt	btemp^0,c
  3377  0162D6  D011               	goto	l8750
  3378  0162D8                     u8610:
  3379                           
  3380                           ;mbmc.c: 21:   return new;
  3381                           ;stkvar	_new @ sp[(-4)+-4]
  3382  0162D8  0EF8               	movlw	-8
  3383  0162DA  006F FF8C  F035    	movff	plusw1,btemp
  3384  0162E0  0EF9               	movlw	-7
  3385  0162E2  006F FF8C  F036    	movff	plusw1,btemp+1
  3386  0162E8  0EFA               	movlw	-6
  3387  0162EA  006F FF8C  F037    	movff	plusw1,btemp+2
  3388  0162F0  0EFB               	movlw	-5
  3389  0162F2  006F FF8C  F038    	movff	plusw1,btemp+3
  3390  0162F8  D0BF               	goto	l1699
  3391  0162FA                     l8750:
  3392                           
  3393                           ;mbmc.c: 23:  if (slow == (-1)) {
  3394                           ;stkvar	_slow @ sp[(-4)+-6]
  3395  0162FA  0EF6               	movlw	-10
  3396  0162FC  28E3               	incf	plusw1,w,c
  3397  0162FE  A4D8               	btfss	status,2,c
  3398  016300  D012               	goto	l8758
  3399                           
  3400                           ;mbmc.c: 24:   smooth[bn] = 0.0;
  3401                           ;stkvar	_bn @ sp[(-4)+-5]
  3402  016302  0EF7               	movlw	-9
  3403  016304  50E3               	movf	plusw1,w,c
  3404  016306  0D04               	mullw	4
  3405  016308  0EBB               	movlw	low lp_filter@smooth
  3406  01630A  24F3               	addwf	243,w,c
  3407  01630C  6ED9               	movwf	fsr2l,c
  3408  01630E  0E01               	movlw	high lp_filter@smooth
  3409  016310  20F4               	addwfc	prodh,w,c
  3410  016312  6EDA               	movwf	fsr2h,c
  3411  016314  0E00               	movlw	0
  3412  016316  6EDE               	movwf	postinc2,c
  3413  016318  0E00               	movlw	0
  3414  01631A  6EDE               	movwf	postinc2,c
  3415  01631C  0E00               	movlw	0
  3416  01631E  6EDE               	movwf	postinc2,c
  3417  016320  0E00               	movlw	0
  3418  016322  6EDD               	movwf	postdec2,c
  3419  016324  D7D9               	goto	u8610
  3420  016326                     l8758:
  3421                           
  3422                           ;mbmc.c: 28:  if (slow) {
  3423                           ;stkvar	_slow @ sp[(-4)+-6]
  3424  016326  0EF6               	movlw	-10
  3425  016328  50E3               	movf	plusw1,w,c
  3426  01632A  B4D8               	btfsc	status,2,c
  3427  01632C  D008               	goto	l8762
  3428                           
  3429                           ;mbmc.c: 29:   lp_speed = 0.066;
  3430  01632E  0E02               	movlw	2
  3431  016330  6E3D               	movwf	(btemp+8)^0,c
  3432  016332  0E2B               	movlw	43
  3433  016334  6E3E               	movwf	(btemp+9)^0,c
  3434  016336  0E87               	movlw	135
  3435  016338  6E3F               	movwf	(btemp+10)^0,c
  3436  01633A  0E3D               	movlw	61
  3437  01633C  D007               	goto	L1
  3438  01633E                     l8762:
  3439                           
  3440                           ;mbmc.c: 31:   lp_speed = 0.125;
  3441  01633E  0E00               	movlw	0
  3442  016340  6E3D               	movwf	(btemp+8)^0,c
  3443  016342  0E00               	movlw	0
  3444  016344  6E3E               	movwf	(btemp+9)^0,c
  3445  016346  0E00               	movlw	0
  3446  016348  6E3F               	movwf	(btemp+10)^0,c
  3447  01634A  0E3E               	movlw	62
  3448  01634C                     L1:
  3449  01634C  6E40               	movwf	(btemp+11)^0,c
  3450                           
  3451                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3452  01634E  0EFC               	movlw	-4
  3453  016350  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3454  016356  0EFD               	movlw	-3
  3455  016358  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3456  01635E  0EFE               	movlw	-2
  3457  016360  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3458  016366  0EFF               	movlw	-1
  3459  016368  0060  F103  FFE3   	movff	btemp+11,plusw1
  3460                           
  3461                           ;mbmc.c: 34:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3462                           ;stkvar	_bn @ sp[(-4)+-5]
  3463  01636E  0EF7               	movlw	-9
  3464  016370  50E3               	movf	plusw1,w,c
  3465  016372  0D04               	mullw	4
  3466  016374  0EBB               	movlw	low lp_filter@smooth
  3467  016376  24F3               	addwf	243,w,c
  3468  016378  6ED9               	movwf	fsr2l,c
  3469  01637A  0E01               	movlw	high lp_filter@smooth
  3470  01637C  20F4               	addwfc	prodh,w,c
  3471  01637E  6EDA               	movwf	fsr2h,c
  3472  016380  006F FF7B FFE6     	movff	postinc2,postinc1
  3473  016386  006F FF7B FFE6     	movff	postinc2,postinc1
  3474  01638C  006F FF7B FFE6     	movff	postinc2,postinc1
  3475  016392  006F FF7B FFE6     	movff	postinc2,postinc1
  3476                           
  3477                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3478  016398  0EF8               	movlw	-8
  3479  01639A  006F FF8F FFE6     	movff	plusw1,postinc1
  3480  0163A0  006F FF8F FFE6     	movff	plusw1,postinc1
  3481  0163A6  006F FF8F FFE6     	movff	plusw1,postinc1
  3482  0163AC  006F FF8F FFE6     	movff	plusw1,postinc1
  3483                           
  3484                           ;stkvar	_bn @ sp[(-12)+-5]
  3485  0163B2  0EEF               	movlw	-17
  3486  0163B4  50E3               	movf	plusw1,w,c
  3487  0163B6  0D04               	mullw	4
  3488  0163B8  0EBB               	movlw	low lp_filter@smooth
  3489  0163BA  24F3               	addwf	243,w,c
  3490  0163BC  6ED9               	movwf	fsr2l,c
  3491  0163BE  0E01               	movlw	high lp_filter@smooth
  3492  0163C0  20F4               	addwfc	prodh,w,c
  3493  0163C2  6EDA               	movwf	fsr2h,c
  3494  0163C4  006F FF7B FFE6     	movff	postinc2,postinc1
  3495  0163CA  006F FF7B FFE6     	movff	postinc2,postinc1
  3496  0163D0  006F FF7B FFE6     	movff	postinc2,postinc1
  3497  0163D6  006F FF7B FFE6     	movff	postinc2,postinc1
  3498                           
  3499                           ;stkvar	_new @ sp[(-16)+-4]
  3500  0163DC  0EEC               	movlw	-20
  3501  0163DE  006F FF8F FFE6     	movff	plusw1,postinc1
  3502  0163E4  006F FF8F FFE6     	movff	plusw1,postinc1
  3503  0163EA  006F FF8F FFE6     	movff	plusw1,postinc1
  3504  0163F0  006F FF8F FFE6     	movff	plusw1,postinc1
  3505  0163F6  EC0C  F0C2         	call	___flsub	;wreg free
  3506  0163FA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3507  016400  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3508  016406  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3509  01640C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3510  016412  ECF8  F090         	call	___flmul	;wreg free
  3511  016416  0060  F0D7  FFE6   	movff	btemp,postinc1
  3512  01641C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3513  016422  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3514  016428  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3515  01642E  EC0D  F095         	call	___fladd	;wreg free
  3516                           
  3517                           ;stkvar	_bn @ sp[(-4)+-5]
  3518  016432  0EF7               	movlw	-9
  3519  016434  50E3               	movf	plusw1,w,c
  3520  016436  0D04               	mullw	4
  3521  016438  0EBB               	movlw	low lp_filter@smooth
  3522  01643A  24F3               	addwf	243,w,c
  3523  01643C  6ED9               	movwf	fsr2l,c
  3524  01643E  0E01               	movlw	high lp_filter@smooth
  3525  016440  20F4               	addwfc	prodh,w,c
  3526  016442  6EDA               	movwf	fsr2h,c
  3527  016444  0060  F0D7  FFDE   	movff	btemp,postinc2
  3528  01644A  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3529  016450  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3530  016456  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3531  01645C  52DD               	movf	postdec2,f,c
  3532  01645E  52DD               	movf	postdec2,f,c
  3533  016460  006F FF78  F035    	movff	postinc2,btemp
  3534  016466  006F FF78  F036    	movff	postinc2,btemp+1
  3535  01646C  006F FF78  F037    	movff	postinc2,btemp+2
  3536  016472  006F FF78  F038    	movff	postinc2,btemp+3
  3537  016478                     l1699:
  3538                           
  3539                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3540  016478  0EF6               	movlw	246
  3541  01647A  26E1               	addwf	fsr1l,f,c
  3542  01647C  0EFF               	movlw	255
  3543  01647E  22E2               	addwfc	fsr1h,f,c
  3544  016480  0012               	return		;funcret
  3545  016482                     __end_of_lp_filter:
  3546                           	opt callstack 0
  3547                           
  3548 ;; *************** function _conv_raw_result *****************
  3549 ;; Defined at:
  3550 ;;		line 80 in file "daq.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  chan            1  [STACK] const enum E16136
  3553 ;;  to_what         1  [STACK] const enum E16198
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  4  [STACK] float 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/4
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    8
  3572 ;; This function calls:
  3573 ;;		___fldiv
  3574 ;;		___flmul
  3575 ;;		___flsub
  3576 ;;		___xxtofl
  3577 ;;		_get_raw_result
  3578 ;;		_nanf
  3579 ;; This function is called by:
  3580 ;;		_convert_adc_data
  3581 ;; This function uses a reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text13
  3585  0131D6                     __ptext13:
  3586                           	opt callstack 0
  3587  0131D6                     _conv_raw_result:
  3588                           	opt callstack 21
  3589                           
  3590                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3591                           ;stkvar	_chan @ sp[(0)+-1]
  3592                           
  3593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3594                           ;incstack = 0
  3595  0131D6  0EFF               	movlw	-1
  3596  0131D8  006F FF8C  F040    	movff	plusw1,btemp+11
  3597  0131DE  0E77               	movlw	119
  3598  0131E0  6E3D               	movwf	(btemp+8)^0,c
  3599  0131E2  0E3C               	movlw	60
  3600  0131E4  6E3E               	movwf	(btemp+9)^0,c
  3601  0131E6  2A40               	incf	(btemp+11)^0,f,c
  3602  0131E8  D003               	goto	u8494
  3603  0131EA                     u8495:
  3604  0131EA  343E               	rlcf	(btemp+9)^0,w,c
  3605  0131EC  323E               	rrcf	(btemp+9)^0,f,c
  3606  0131EE  323D               	rrcf	(btemp+8)^0,f,c
  3607  0131F0                     u8494:
  3608  0131F0  2E40               	decfsz	(btemp+11)^0,f,c
  3609  0131F2  D7FB               	goto	u8495
  3610  0131F4  B03D               	btfsc	(btemp+8)^0,0,c
  3611  0131F6  D29F               	goto	l8734
  3612                           
  3613                           ;daq.c: 83:   return nanf("");
  3614  0131F8  0E0B               	movlw	low (STR_27+18)
  3615  0131FA  6EE6               	movwf	postinc1,c
  3616  0131FC  0EFF               	movlw	high (STR_27+18)
  3617  0131FE  6EE6               	movwf	postinc1,c
  3618  013200  EC7D  F0C0         	call	_nanf	;wreg free
  3619  013204  D2A8               	goto	l1654
  3620  013206                     l8686:
  3621                           
  3622                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3623                           ;stkvar	_chan @ sp[(0)+-1]
  3624  013206  0EFF               	movlw	-1
  3625  013208  006F FF8C  F040    	movff	plusw1,btemp+11
  3626  01320E  0E03               	movlw	3
  3627  013210  6E3D               	movwf	(btemp+8)^0,c
  3628  013212  0E00               	movlw	0
  3629  013214  6E3E               	movwf	(btemp+9)^0,c
  3630  013216  2A40               	incf	(btemp+11)^0,f,c
  3631  013218  D003               	goto	u8514
  3632  01321A                     u8515:
  3633  01321A  343E               	rlcf	(btemp+9)^0,w,c
  3634  01321C  323E               	rrcf	(btemp+9)^0,f,c
  3635  01321E  323D               	rrcf	(btemp+8)^0,f,c
  3636  013220                     u8514:
  3637  013220  2E40               	decfsz	(btemp+11)^0,f,c
  3638  013222  D7FB               	goto	u8515
  3639  013224  A03D               	btfss	(btemp+8)^0,0,c
  3640  013226  D117               	goto	l8700
  3641                           
  3642                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3643                           ;stkvar	_chan @ sp[(0)+-1]
  3644  013228  0EFF               	movlw	-1
  3645  01322A  006F FF8C  F040    	movff	plusw1,btemp+11
  3646  013230  0E01               	movlw	1
  3647  013232  6E3D               	movwf	(btemp+8)^0,c
  3648  013234  0E00               	movlw	0
  3649  013236  6E3E               	movwf	(btemp+9)^0,c
  3650  013238  2A40               	incf	(btemp+11)^0,f,c
  3651  01323A  D003               	goto	u8534
  3652  01323C                     u8535:
  3653  01323C  343E               	rlcf	(btemp+9)^0,w,c
  3654  01323E  323E               	rrcf	(btemp+9)^0,f,c
  3655  013240  323D               	rrcf	(btemp+8)^0,f,c
  3656  013242                     u8534:
  3657  013242  2E40               	decfsz	(btemp+11)^0,f,c
  3658  013244  D7FB               	goto	u8535
  3659  013246  A03D               	btfss	(btemp+8)^0,0,c
  3660  013248  D083               	goto	l8696
  3661                           
  3662                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3663  01324A  0E00               	movlw	0
  3664  01324C  6EE6               	movwf	postinc1,c
  3665  01324E  0E00               	movlw	0
  3666  013250  6EE6               	movwf	postinc1,c
  3667  013252  0E7A               	movlw	122
  3668  013254  6EE6               	movwf	postinc1,c
  3669  013256  0E44               	movlw	68
  3670  013258  6EE6               	movwf	postinc1,c
  3671  01325A  0E9A               	movlw	154
  3672  01325C  6EE6               	movwf	postinc1,c
  3673  01325E  0ED9               	movlw	217
  3674  013260  6EE6               	movwf	postinc1,c
  3675  013262  0E0F               	movlw	15
  3676  013264  6EE6               	movwf	postinc1,c
  3677  013266  0E43               	movlw	67
  3678  013268  6EE6               	movwf	postinc1,c
  3679  01326A  0060  F30C  F03D   	movff	_R+32,btemp+8	;volatile
  3680  013270  0060  F310  F03E   	movff	_R+33,btemp+9	;volatile
  3681  013276  0E00               	movlw	0
  3682  013278  BE3E               	btfsc	(btemp+9)^0,7,c
  3683  01327A  0EFF               	movlw	255
  3684  01327C  6E3F               	movwf	(btemp+10)^0,c
  3685  01327E  6E40               	movwf	(btemp+11)^0,c
  3686  013280  0060  F0F7  FFE6   	movff	btemp+8,postinc1
  3687  013286  0060  F0FB  FFE6   	movff	btemp+9,postinc1
  3688  01328C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3689  013292  0060  F103  FFE6   	movff	btemp+11,postinc1
  3690  013298  0E01               	movlw	1
  3691  01329A  6EE6               	movwf	postinc1,c
  3692  01329C  EC5F  F0B0         	call	___xxtofl	;wreg free
  3693  0132A0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3694  0132A6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3695  0132AC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3696  0132B2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3697                           
  3698                           ;stkvar	_chan @ sp[(-12)+-1]
  3699  0132B8  0EF3               	movlw	-13
  3700  0132BA  50E3               	movf	plusw1,w,c
  3701  0132BC  6EE6               	movwf	postinc1,c
  3702  0132BE  EC6B  F0C6         	call	_get_raw_result	;wreg free
  3703  0132C2  0060  F0D4  F03F   	movff	btemp,btemp+10
  3704  0132C8  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3705  0132CE  503F               	movf	(btemp+10)^0,w,c
  3706  0132D0  6E39               	movwf	(btemp+4)^0,c
  3707  0132D2  5040               	movf	(btemp+11)^0,w,c
  3708  0132D4  6E3A               	movwf	(btemp+5)^0,c
  3709  0132D6  6A3B               	clrf	(btemp+6)^0,c
  3710  0132D8  6A3C               	clrf	(btemp+7)^0,c
  3711  0132DA  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3712  0132E0  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3713  0132E6  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3714  0132EC  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3715  0132F2  0E00               	movlw	0
  3716  0132F4  6EE6               	movwf	postinc1,c
  3717  0132F6  EC5F  F0B0         	call	___xxtofl	;wreg free
  3718  0132FA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3719  013300  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3720  013306  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3721  01330C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3722  013312  EC0C  F0C2         	call	___flsub	;wreg free
  3723  013316  0060  F0D7  FFE6   	movff	btemp,postinc1
  3724  01331C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3725  013322  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3726  013328  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3727  01332E  ECF8  F090         	call	___flmul	;wreg free
  3728  013332  0060  F0D7  FFE6   	movff	btemp,postinc1
  3729  013338  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3730  01333E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3731  013344  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3732  01334A  ECAE  F09B         	call	___fldiv	;wreg free
  3733  01334E  D203               	goto	l1654
  3734  013350                     l8696:
  3735                           
  3736                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3737  013350  0E00               	movlw	0
  3738  013352  6EE6               	movwf	postinc1,c
  3739  013354  0E00               	movlw	0
  3740  013356  6EE6               	movwf	postinc1,c
  3741  013358  0E7A               	movlw	122
  3742  01335A  6EE6               	movwf	postinc1,c
  3743  01335C  0E44               	movlw	68
  3744  01335E  6EE6               	movwf	postinc1,c
  3745  013360  0E66               	movlw	102
  3746  013362  6EE6               	movwf	postinc1,c
  3747  013364  0E66               	movlw	102
  3748  013366  6EE6               	movwf	postinc1,c
  3749  013368  0E70               	movlw	112
  3750  01336A  6EE6               	movwf	postinc1,c
  3751  01336C  0E42               	movlw	66
  3752  01336E  6EE6               	movwf	postinc1,c
  3753  013370  0060  F314  F03D   	movff	_R+34,btemp+8	;volatile
  3754  013376  0060  F318  F03E   	movff	_R+35,btemp+9	;volatile
  3755  01337C  0E00               	movlw	0
  3756  01337E  BE3E               	btfsc	(btemp+9)^0,7,c
  3757  013380  0EFF               	movlw	255
  3758  013382  6E3F               	movwf	(btemp+10)^0,c
  3759  013384  6E40               	movwf	(btemp+11)^0,c
  3760  013386  0060  F0F7  FFE6   	movff	btemp+8,postinc1
  3761  01338C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
  3762  013392  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3763  013398  0060  F103  FFE6   	movff	btemp+11,postinc1
  3764  01339E  0E01               	movlw	1
  3765  0133A0  6EE6               	movwf	postinc1,c
  3766  0133A2  EC5F  F0B0         	call	___xxtofl	;wreg free
  3767  0133A6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3768  0133AC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3769  0133B2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3770  0133B8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3771                           
  3772                           ;stkvar	_chan @ sp[(-12)+-1]
  3773  0133BE  0EF3               	movlw	-13
  3774  0133C0  50E3               	movf	plusw1,w,c
  3775  0133C2  6EE6               	movwf	postinc1,c
  3776  0133C4  EC6B  F0C6         	call	_get_raw_result	;wreg free
  3777  0133C8  0060  F0D4  F03F   	movff	btemp,btemp+10
  3778  0133CE  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3779  0133D4  503F               	movf	(btemp+10)^0,w,c
  3780  0133D6  6E39               	movwf	(btemp+4)^0,c
  3781  0133D8  5040               	movf	(btemp+11)^0,w,c
  3782  0133DA  6E3A               	movwf	(btemp+5)^0,c
  3783  0133DC  6A3B               	clrf	(btemp+6)^0,c
  3784  0133DE  6A3C               	clrf	(btemp+7)^0,c
  3785  0133E0  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3786  0133E6  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3787  0133EC  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3788  0133F2  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3789  0133F8  0E00               	movlw	0
  3790  0133FA  6EE6               	movwf	postinc1,c
  3791  0133FC  EC5F  F0B0         	call	___xxtofl	;wreg free
  3792  013400  0060  F0D7  FFE6   	movff	btemp,postinc1
  3793  013406  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3794  01340C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3795  013412  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3796  013418  EC0C  F0C2         	call	___flsub	;wreg free
  3797  01341C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3798  013422  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3799  013428  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3800  01342E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3801  013434  ECF8  F090         	call	___flmul	;wreg free
  3802  013438  0060  F0D7  FFE6   	movff	btemp,postinc1
  3803  01343E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3804  013444  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3805  01344A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3806  013450  ECAE  F09B         	call	___fldiv	;wreg free
  3807  013454  D180               	goto	l1654
  3808  013456                     l8700:
  3809                           
  3810                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3811                           ;stkvar	_chan @ sp[(0)+-1]
  3812  013456  0EFF               	movlw	-1
  3813  013458  006F FF8C  F040    	movff	plusw1,btemp+11
  3814  01345E  0E00               	movlw	0
  3815  013460  6E3D               	movwf	(btemp+8)^0,c
  3816  013462  0E08               	movlw	8
  3817  013464  6E3E               	movwf	(btemp+9)^0,c
  3818  013466  2A40               	incf	(btemp+11)^0,f,c
  3819  013468  D003               	goto	u8554
  3820  01346A                     u8555:
  3821  01346A  343E               	rlcf	(btemp+9)^0,w,c
  3822  01346C  323E               	rrcf	(btemp+9)^0,f,c
  3823  01346E  323D               	rrcf	(btemp+8)^0,f,c
  3824  013470                     u8554:
  3825  013470  2E40               	decfsz	(btemp+11)^0,f,c
  3826  013472  D7FB               	goto	u8555
  3827  013474  A03D               	btfss	(btemp+8)^0,0,c
  3828  013476  D008               	goto	l8708
  3829                           
  3830                           ;daq.c: 95:     return 25.0;
  3831  013478  0E00               	movlw	0
  3832  01347A  6E35               	movwf	btemp^0,c
  3833  01347C  0E00               	movlw	0
  3834  01347E  6E36               	movwf	(btemp+1)^0,c
  3835  013480  0EC8               	movlw	200
  3836  013482  6E37               	movwf	(btemp+2)^0,c
  3837  013484  0E41               	movlw	65
  3838  013486  D155               	goto	L2
  3839  013488                     l8708:
  3840                           
  3841                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3842  013488  0E00               	movlw	0
  3843  01348A  6EE6               	movwf	postinc1,c
  3844  01348C  0E00               	movlw	0
  3845  01348E  6EE6               	movwf	postinc1,c
  3846  013490  0E7A               	movlw	122
  3847  013492  6EE6               	movwf	postinc1,c
  3848  013494  0E44               	movlw	68
  3849  013496  6EE6               	movwf	postinc1,c
  3850  013498  0E00               	movlw	0
  3851  01349A  6EE6               	movwf	postinc1,c
  3852  01349C  0E00               	movlw	0
  3853  01349E  6EE6               	movwf	postinc1,c
  3854  0134A0  0E00               	movlw	0
  3855  0134A2  6EE6               	movwf	postinc1,c
  3856  0134A4  0E40               	movlw	64
  3857  0134A6  6EE6               	movwf	postinc1,c
  3858  0134A8  0E61               	movlw	97
  3859  0134AA  6EE6               	movwf	postinc1,c
  3860  0134AC  0E03               	movlw	3
  3861  0134AE  6EE6               	movwf	postinc1,c
  3862  0134B0  0E04               	movlw	4
  3863  0134B2  6EE6               	movwf	postinc1,c
  3864  0134B4  0E41               	movlw	65
  3865  0134B6  6EE6               	movwf	postinc1,c
  3866                           
  3867                           ;stkvar	_chan @ sp[(-12)+-1]
  3868  0134B8  0EF3               	movlw	-13
  3869  0134BA  50E3               	movf	plusw1,w,c
  3870  0134BC  6EE6               	movwf	postinc1,c
  3871  0134BE  EC6B  F0C6         	call	_get_raw_result	;wreg free
  3872  0134C2  0060  F0D4  F03F   	movff	btemp,btemp+10
  3873  0134C8  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3874  0134CE  503F               	movf	(btemp+10)^0,w,c
  3875  0134D0  6E39               	movwf	(btemp+4)^0,c
  3876  0134D2  5040               	movf	(btemp+11)^0,w,c
  3877  0134D4  6E3A               	movwf	(btemp+5)^0,c
  3878  0134D6  6A3B               	clrf	(btemp+6)^0,c
  3879  0134D8  6A3C               	clrf	(btemp+7)^0,c
  3880  0134DA  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3881  0134E0  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3882  0134E6  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3883  0134EC  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3884  0134F2  0E00               	movlw	0
  3885  0134F4  6EE6               	movwf	postinc1,c
  3886  0134F6  EC5F  F0B0         	call	___xxtofl	;wreg free
  3887  0134FA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3888  013500  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3889  013506  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3890  01350C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3891  013512  ECF8  F090         	call	___flmul	;wreg free
  3892  013516  0060  F0D7  FFE6   	movff	btemp,postinc1
  3893  01351C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3894  013522  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3895  013528  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3896  01352E  ECAE  F09B         	call	___fldiv	;wreg free
  3897  013532  0060  F0D7  FFE6   	movff	btemp,postinc1
  3898  013538  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3899  01353E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3900  013544  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3901  01354A  ECAE  F09B         	call	___fldiv	;wreg free
  3902  01354E  D103               	goto	l1654
  3903  013550                     l8712:
  3904                           
  3905                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3906                           ;stkvar	_chan @ sp[(0)+-1]
  3907  013550  0EFF               	movlw	-1
  3908  013552  006F FF8C  F040    	movff	plusw1,btemp+11
  3909  013558  0E03               	movlw	3
  3910  01355A  6E3D               	movwf	(btemp+8)^0,c
  3911  01355C  0E00               	movlw	0
  3912  01355E  6E3E               	movwf	(btemp+9)^0,c
  3913  013560  2A40               	incf	(btemp+11)^0,f,c
  3914  013562  D003               	goto	u8574
  3915  013564                     u8575:
  3916  013564  343E               	rlcf	(btemp+9)^0,w,c
  3917  013566  323E               	rrcf	(btemp+9)^0,f,c
  3918  013568  323D               	rrcf	(btemp+8)^0,f,c
  3919  01356A                     u8574:
  3920  01356A  2E40               	decfsz	(btemp+11)^0,f,c
  3921  01356C  D7FB               	goto	u8575
  3922  01356E  B03D               	btfsc	(btemp+8)^0,0,c
  3923  013570  D011               	goto	u8600
  3924                           
  3925                           ;stkvar	_chan @ sp[(0)+-1]
  3926  013572  0EFF               	movlw	-1
  3927  013574  006F FF8C  F040    	movff	plusw1,btemp+11
  3928  01357A  0E00               	movlw	0
  3929  01357C  6E3D               	movwf	(btemp+8)^0,c
  3930  01357E  0E08               	movlw	8
  3931  013580  6E3E               	movwf	(btemp+9)^0,c
  3932  013582  2A40               	incf	(btemp+11)^0,f,c
  3933  013584  D003               	goto	u8594
  3934  013586                     u8595:
  3935  013586  343E               	rlcf	(btemp+9)^0,w,c
  3936  013588  323E               	rrcf	(btemp+9)^0,f,c
  3937  01358A  323D               	rrcf	(btemp+8)^0,f,c
  3938  01358C                     u8594:
  3939  01358C  2E40               	decfsz	(btemp+11)^0,f,c
  3940  01358E  D7FB               	goto	u8595
  3941  013590  A03D               	btfss	(btemp+8)^0,0,c
  3942  013592  D064               	goto	l8720
  3943  013594                     u8600:
  3944                           
  3945                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  3946  013594  0E00               	movlw	0
  3947  013596  6EE6               	movwf	postinc1,c
  3948  013598  0E00               	movlw	0
  3949  01359A  6EE6               	movwf	postinc1,c
  3950  01359C  0E7A               	movlw	122
  3951  01359E  6EE6               	movwf	postinc1,c
  3952  0135A0  0E44               	movlw	68
  3953  0135A2  6EE6               	movwf	postinc1,c
  3954  0135A4  0E00               	movlw	0
  3955  0135A6  6EE6               	movwf	postinc1,c
  3956  0135A8  0E00               	movlw	0
  3957  0135AA  6EE6               	movwf	postinc1,c
  3958  0135AC  0E00               	movlw	0
  3959  0135AE  6EE6               	movwf	postinc1,c
  3960  0135B0  0E40               	movlw	64
  3961  0135B2  6EE6               	movwf	postinc1,c
  3962  0135B4  0E00               	movlw	0
  3963  0135B6  6EE6               	movwf	postinc1,c
  3964  0135B8  0E00               	movlw	0
  3965  0135BA  6EE6               	movwf	postinc1,c
  3966  0135BC  0EA0               	movlw	160
  3967  0135BE  6EE6               	movwf	postinc1,c
  3968  0135C0  0E3F               	movlw	63
  3969  0135C2  6EE6               	movwf	postinc1,c
  3970                           
  3971                           ;stkvar	_chan @ sp[(-12)+-1]
  3972  0135C4  0EF3               	movlw	-13
  3973  0135C6  50E3               	movf	plusw1,w,c
  3974  0135C8  6EE6               	movwf	postinc1,c
  3975  0135CA  EC6B  F0C6         	call	_get_raw_result	;wreg free
  3976  0135CE  0060  F0D4  F03F   	movff	btemp,btemp+10
  3977  0135D4  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3978  0135DA  503F               	movf	(btemp+10)^0,w,c
  3979  0135DC  6E39               	movwf	(btemp+4)^0,c
  3980  0135DE  5040               	movf	(btemp+11)^0,w,c
  3981  0135E0  6E3A               	movwf	(btemp+5)^0,c
  3982  0135E2  6A3B               	clrf	(btemp+6)^0,c
  3983  0135E4  6A3C               	clrf	(btemp+7)^0,c
  3984  0135E6  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3985  0135EC  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3986  0135F2  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3987  0135F8  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3988  0135FE  0E00               	movlw	0
  3989  013600  6EE6               	movwf	postinc1,c
  3990  013602  EC5F  F0B0         	call	___xxtofl	;wreg free
  3991  013606  0060  F0D7  FFE6   	movff	btemp,postinc1
  3992  01360C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3993  013612  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3994  013618  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3995  01361E  ECF8  F090         	call	___flmul	;wreg free
  3996  013622  0060  F0D7  FFE6   	movff	btemp,postinc1
  3997  013628  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3998  01362E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3999  013634  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4000  01363A  ECAE  F09B         	call	___fldiv	;wreg free
  4001  01363E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4002  013644  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4003  01364A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4004  013650  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4005  013656  ECAE  F09B         	call	___fldiv	;wreg free
  4006  01365A  D07D               	goto	l1654
  4007  01365C                     l8720:
  4008                           
  4009                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4010  01365C  0E00               	movlw	0
  4011  01365E  6EE6               	movwf	postinc1,c
  4012  013660  0E00               	movlw	0
  4013  013662  6EE6               	movwf	postinc1,c
  4014  013664  0E7A               	movlw	122
  4015  013666  6EE6               	movwf	postinc1,c
  4016  013668  0E44               	movlw	68
  4017  01366A  6EE6               	movwf	postinc1,c
  4018  01366C  0E00               	movlw	0
  4019  01366E  6EE6               	movwf	postinc1,c
  4020  013670  0E00               	movlw	0
  4021  013672  6EE6               	movwf	postinc1,c
  4022  013674  0E00               	movlw	0
  4023  013676  6EE6               	movwf	postinc1,c
  4024  013678  0E40               	movlw	64
  4025  01367A  6EE6               	movwf	postinc1,c
  4026  01367C  0E61               	movlw	97
  4027  01367E  6EE6               	movwf	postinc1,c
  4028  013680  0E03               	movlw	3
  4029  013682  6EE6               	movwf	postinc1,c
  4030  013684  0E04               	movlw	4
  4031  013686  6EE6               	movwf	postinc1,c
  4032  013688  0E41               	movlw	65
  4033  01368A  6EE6               	movwf	postinc1,c
  4034                           
  4035                           ;stkvar	_chan @ sp[(-12)+-1]
  4036  01368C  0EF3               	movlw	-13
  4037  01368E  50E3               	movf	plusw1,w,c
  4038  013690  6EE6               	movwf	postinc1,c
  4039  013692  EC6B  F0C6         	call	_get_raw_result	;wreg free
  4040  013696  0060  F0D4  F03F   	movff	btemp,btemp+10
  4041  01369C  0060  F0D8  F040   	movff	btemp+1,btemp+11
  4042  0136A2  503F               	movf	(btemp+10)^0,w,c
  4043  0136A4  6E39               	movwf	(btemp+4)^0,c
  4044  0136A6  5040               	movf	(btemp+11)^0,w,c
  4045  0136A8  6E3A               	movwf	(btemp+5)^0,c
  4046  0136AA  6A3B               	clrf	(btemp+6)^0,c
  4047  0136AC  6A3C               	clrf	(btemp+7)^0,c
  4048  0136AE  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  4049  0136B4  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  4050  0136BA  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  4051  0136C0  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  4052  0136C6  0E00               	movlw	0
  4053  0136C8  6EE6               	movwf	postinc1,c
  4054  0136CA  EC5F  F0B0         	call	___xxtofl	;wreg free
  4055  0136CE  0060  F0D7  FFE6   	movff	btemp,postinc1
  4056  0136D4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4057  0136DA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4058  0136E0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4059  0136E6  ECF8  F090         	call	___flmul	;wreg free
  4060  0136EA  0060  F0D7  FFE6   	movff	btemp,postinc1
  4061  0136F0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4062  0136F6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4063  0136FC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4064  013702  ECAE  F09B         	call	___fldiv	;wreg free
  4065  013706  0060  F0D7  FFE6   	movff	btemp,postinc1
  4066  01370C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4067  013712  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4068  013718  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4069  01371E  ECAE  F09B         	call	___fldiv	;wreg free
  4070  013722  D019               	goto	l1654
  4071  013724                     l8726:
  4072                           
  4073                           ;daq.c: 108:   return 0.0;
  4074  013724  0E00               	movlw	0
  4075  013726  6E35               	movwf	btemp^0,c
  4076  013728  0E00               	movlw	0
  4077  01372A  6E36               	movwf	(btemp+1)^0,c
  4078  01372C  0E00               	movlw	0
  4079  01372E  6E37               	movwf	(btemp+2)^0,c
  4080  013730  0E00               	movlw	0
  4081  013732                     L2:
  4082  013732  6E38               	movwf	(btemp+3)^0,c
  4083  013734  D010               	goto	l1654
  4084  013736                     l8734:
  4085                           
  4086                           ;stkvar	_to_what @ sp[(0)+-2]
  4087  013736  0EFE               	movlw	-2
  4088  013738  50E3               	movf	plusw1,w,c
  4089  01373A  6E3F               	movwf	(btemp+10)^0,c
  4090  01373C  6A40               	clrf	(btemp+11)^0,c
  4091                           
  4092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4093                           ; Switch size 1, requested type "simple"
  4094                           ; Number of cases is 1, Range of values is 0 to 0
  4095                           ; switch strategies available:
  4096                           ; Name         Instructions Cycles
  4097                           ; simple_byte            4     3 (average)
  4098                           ;	Chosen strategy is simple_byte
  4099  01373E  5040               	movf	(btemp+11)^0,w,c
  4100  013740  0A00               	xorlw	0	; case 0
  4101  013742  A4D8               	btfss	status,2,c
  4102  013744  D7EF               	goto	l8726
  4103                           
  4104                           ; Switch size 1, requested type "simple"
  4105                           ; Number of cases is 2, Range of values is 0 to 1
  4106                           ; switch strategies available:
  4107                           ; Name         Instructions Cycles
  4108                           ; simple_byte            7     4 (average)
  4109                           ;	Chosen strategy is simple_byte
  4110  013746  503F               	movf	(btemp+10)^0,w,c
  4111  013748  0A00               	xorlw	0	; case 0
  4112  01374A  B4D8               	btfsc	status,2,c
  4113  01374C  D55C               	goto	l8686
  4114  01374E  0A01               	xorlw	1	; case 1
  4115  013750  B4D8               	btfsc	status,2,c
  4116  013752  D6FE               	goto	l8712
  4117  013754  D7E7               	goto	l8726
  4118  013756                     l1654:
  4119                           
  4120                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4121  013756  52E5               	movf	postdec1,f,c
  4122  013758  52E5               	movf	postdec1,f,c
  4123  01375A  0012               	return		;funcret
  4124  01375C                     __end_of_conv_raw_result:
  4125                           	opt callstack 0
  4126                           
  4127 ;; *************** function _nanf *****************
  4128 ;; Defined at:
  4129 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  s               2  [STACK] PTR const unsigned char 
  4132 ;;		 -> STR_33(1), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  u               4  [STACK] struct .
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  4  [STACK] float 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/4
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    6
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_conv_raw_result
  4155 ;; This function uses a reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text14
  4159  0180FA                     __ptext14:
  4160                           	opt callstack 0
  4161  0180FA                     _nanf:
  4162                           	opt callstack 0
  4163                           
  4164                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4165  0180FA  52E6               	movf	postinc1,f,c
  4166  0180FC  52E6               	movf	postinc1,f,c
  4167  0180FE  52E6               	movf	postinc1,f,c
  4168  018100  52E6               	movf	postinc1,f,c
  4169                           
  4170                           ;incstack = 0
  4171  018102  0EFF               	movlw	255
  4172  018104  6E3D               	movwf	(btemp+8)^0,c
  4173  018106  0EFF               	movlw	255
  4174  018108  6E3E               	movwf	(btemp+9)^0,c
  4175  01810A  0EFF               	movlw	255
  4176  01810C  6E3F               	movwf	(btemp+10)^0,c
  4177  01810E  0E7F               	movlw	127
  4178  018110  6E40               	movwf	(btemp+11)^0,c
  4179                           
  4180                           ;stkvar	_u @ sp[(-4)+0]
  4181  018112  0EFC               	movlw	-4
  4182  018114  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4183  01811A  0EFD               	movlw	-3
  4184  01811C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4185  018122  0EFE               	movlw	-2
  4186  018124  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4187  01812A  0EFF               	movlw	-1
  4188  01812C  0060  F103  FFE3   	movff	btemp+11,plusw1
  4189                           
  4190                           ;stkvar	_u @ sp[(-4)+0]
  4191  018132  0EFC               	movlw	-4
  4192  018134  006F FF8C  F035    	movff	plusw1,btemp
  4193  01813A  0EFD               	movlw	-3
  4194  01813C  006F FF8C  F036    	movff	plusw1,btemp+1
  4195  018142  0EFE               	movlw	-2
  4196  018144  006F FF8C  F037    	movff	plusw1,btemp+2
  4197  01814A  0EFF               	movlw	-1
  4198  01814C  006F FF8C  F038    	movff	plusw1,btemp+3
  4199                           
  4200                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4201  018152  0EFA               	movlw	250
  4202  018154  26E1               	addwf	fsr1l,f,c
  4203  018156  0EFF               	movlw	255
  4204  018158  22E2               	addwfc	fsr1h,f,c
  4205  01815A  0012               	return		;funcret
  4206  01815C                     __end_of_nanf:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _get_raw_result *****************
  4210 ;; Defined at:
  4211 ;;		line 72 in file "daq.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  index           1  [STACK] const enum E16136
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2  [STACK] unsigned short 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/4
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    6
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;;		_conv_raw_result
  4237 ;; This function uses a reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text15
  4241  018CD6                     __ptext15:
  4242                           	opt callstack 0
  4243  018CD6                     _get_raw_result:
  4244                           	opt callstack 24
  4245                           
  4246                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4247                           ;stkvar	_index @ sp[(0)+-1]
  4248                           
  4249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4250                           ;incstack = 0
  4251  018CD6  0EFF               	movlw	-1
  4252  018CD8  50E3               	movf	plusw1,w,c
  4253  018CDA  0D02               	mullw	2
  4254  018CDC  50F3               	movf	243,w,c
  4255  018CDE  0FA3               	addlw	low _R
  4256  018CE0  6ED9               	movwf	fsr2l,c
  4257  018CE2  6ADA               	clrf	fsr2h,c
  4258  018CE4  006F FF78  F035    	movff	postinc2,btemp
  4259  018CEA  006F FF74  F036    	movff	postdec2,btemp+1
  4260                           
  4261                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4262  018CF0  52E5               	movf	postdec1,f,c
  4263  018CF2  0012               	return		;funcret
  4264  018CF4                     __end_of_get_raw_result:
  4265                           	opt callstack 0
  4266                           
  4267 ;; *************** function ___xxtofl *****************
  4268 ;; Defined at:
  4269 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  sign            1  [STACK] unsigned char 
  4272 ;;  val             4  [STACK] long 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  arg             4  [STACK] unsigned long 
  4275 ;;  exp             1  [STACK] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  4  [STACK] unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/4
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    6
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_conv_raw_result
  4296 ;; This function uses a reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text16
  4300  0160BE                     __ptext16:
  4301                           	opt callstack 0
  4302  0160BE                     ___xxtofl:
  4303                           	opt callstack 0
  4304                           
  4305                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4306  0160BE  0E05               	movlw	5
  4307  0160C0  26E1               	addwf	fsr1l,f,c
  4308  0160C2  0E00               	movlw	0
  4309  0160C4  22E2               	addwfc	fsr1h,f,c
  4310                           
  4311                           ;stkvar	_sign @ sp[(-5)+-1]
  4312                           
  4313                           ;incstack = 0
  4314  0160C6  0EFA               	movlw	-6
  4315  0160C8  50E3               	movf	plusw1,w,c
  4316  0160CA  B4D8               	btfsc	status,2,c
  4317  0160CC  D01D               	goto	l8158
  4318                           
  4319                           ;stkvar	_val @ sp[(-5)+-5]
  4320  0160CE  0EF9               	movlw	-7
  4321  0160D0  AEE3               	btfss	plusw1,7,c
  4322  0160D2  D01A               	goto	l8158
  4323                           
  4324                           ;stkvar	_val @ sp[(-5)+-5]
  4325  0160D4  0EF6               	movlw	-10
  4326  0160D6  006F FF8C  F03D    	movff	plusw1,btemp+8
  4327  0160DC  0EF7               	movlw	-9
  4328  0160DE  006F FF8C  F03E    	movff	plusw1,btemp+9
  4329  0160E4  0EF8               	movlw	-8
  4330  0160E6  006F FF8C  F03F    	movff	plusw1,btemp+10
  4331  0160EC  0EF9               	movlw	-7
  4332  0160EE  006F FF8C  F040    	movff	plusw1,btemp+11
  4333  0160F4  1E3D               	comf	(btemp+8)^0,f,c
  4334  0160F6  1E3E               	comf	(btemp+9)^0,f,c
  4335  0160F8  1E3F               	comf	(btemp+10)^0,f,c
  4336  0160FA  1E40               	comf	(btemp+11)^0,f,c
  4337  0160FC  2A3D               	incf	(btemp+8)^0,f,c
  4338  0160FE  0E00               	movlw	0
  4339  016100  223E               	addwfc	(btemp+9)^0,f,c
  4340  016102  223F               	addwfc	(btemp+10)^0,f,c
  4341  016104  2240               	addwfc	(btemp+11)^0,f,c
  4342  016106  D010               	goto	L3
  4343  016108                     l8158:
  4344                           
  4345                           ;stkvar	_val @ sp[(-5)+-5]
  4346  016108  0EF6               	movlw	-10
  4347  01610A  006F FF8C  F03D    	movff	plusw1,btemp+8
  4348  016110  0EF7               	movlw	-9
  4349  016112  006F FF8C  F03E    	movff	plusw1,btemp+9
  4350  016118  0EF8               	movlw	-8
  4351  01611A  006F FF8C  F03F    	movff	plusw1,btemp+10
  4352  016120  0EF9               	movlw	-7
  4353  016122  006F FF8C  F040    	movff	plusw1,btemp+11
  4354  016128                     L3:
  4355                           
  4356                           ;stkvar	_arg @ sp[(-5)+0]
  4357  016128  0EFB               	movlw	-5
  4358  01612A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4359  016130  0EFC               	movlw	-4
  4360  016132  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4361  016138  0EFD               	movlw	-3
  4362  01613A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4363  016140  0EFE               	movlw	-2
  4364  016142  0060  F103  FFE3   	movff	btemp+11,plusw1
  4365                           
  4366                           ;stkvar	_val @ sp[(-5)+-5]
  4367  016148  0EF6               	movlw	-10
  4368  01614A  50E3               	movf	plusw1,w,c
  4369  01614C  E113               	bnz	l8166
  4370  01614E  0EF7               	movlw	-9
  4371  016150  50E3               	movf	plusw1,w,c
  4372  016152  E110               	bnz	l8166
  4373  016154  0EF8               	movlw	-8
  4374  016156  50E3               	movf	plusw1,w,c
  4375  016158  E10D               	bnz	l8166
  4376  01615A  0EF9               	movlw	-7
  4377  01615C  50E3               	movf	plusw1,w,c
  4378  01615E  A4D8               	btfss	status,2,c
  4379  016160  D009               	goto	l8166
  4380  016162  0E00               	movlw	0
  4381  016164  6E35               	movwf	btemp^0,c
  4382  016166  0E00               	movlw	0
  4383  016168  6E36               	movwf	(btemp+1)^0,c
  4384  01616A  0E00               	movlw	0
  4385  01616C  6E37               	movwf	(btemp+2)^0,c
  4386  01616E  0E00               	movlw	0
  4387  016170  6E38               	movwf	(btemp+3)^0,c
  4388  016172  D0A2               	goto	l2669
  4389  016174                     l8166:
  4390  016174  0E96               	movlw	150
  4391  016176  6E40               	movwf	(btemp+11)^0,c
  4392                           
  4393                           ;stkvar	_exp @ sp[(-5)+4]
  4394  016178  0EFF               	movlw	-1
  4395  01617A  0060  F103  FFE3   	movff	btemp+11,plusw1
  4396  016180  D00B               	goto	l8170
  4397  016182                     l8168:
  4398                           
  4399                           ;stkvar	_exp @ sp[(-5)+4]
  4400  016182  0EFF               	movlw	-1
  4401  016184  2AE3               	incf	plusw1,f,c
  4402                           
  4403                           ;stkvar	_arg @ sp[(-5)+0]
  4404  016186  90D8               	bcf	status,0,c
  4405  016188  0EFE               	movlw	-2
  4406  01618A  32E3               	rrcf	plusw1,f,c
  4407  01618C  0EFD               	movlw	-3
  4408  01618E  32E3               	rrcf	plusw1,f,c
  4409  016190  0EFC               	movlw	-4
  4410  016192  32E3               	rrcf	plusw1,f,c
  4411  016194  0EFB               	movlw	-5
  4412  016196  32E3               	rrcf	plusw1,f,c
  4413  016198                     l8170:
  4414                           
  4415                           ;stkvar	_arg @ sp[(-5)+0]
  4416  016198  50E1               	movf	fsr1l,w,c
  4417  01619A  0FFB               	addlw	-5
  4418  01619C  6ED9               	movwf	fsr2l,c
  4419  01619E  50E2               	movf	fsr1h,w,c
  4420  0161A0  6EDA               	movwf	fsr2h,c
  4421  0161A2  0EFF               	movlw	255
  4422  0161A4  22DA               	addwfc	fsr2h,f,c
  4423  0161A6  52DE               	movf	postinc2,f,c
  4424  0161A8  52DE               	movf	postinc2,f,c
  4425  0161AA  52DE               	movf	postinc2,f,c
  4426  0161AC  0EFE               	movlw	254
  4427  0161AE  14DD               	andwf	postdec2,w,c
  4428  0161B0  B4D8               	btfsc	status,2,c
  4429  0161B2  D018               	goto	l8178
  4430  0161B4  D7E6               	goto	l8168
  4431  0161B6                     l8172:
  4432                           
  4433                           ;stkvar	_exp @ sp[(-5)+4]
  4434  0161B6  0EFF               	movlw	-1
  4435  0161B8  2AE3               	incf	plusw1,f,c
  4436                           
  4437                           ;stkvar	_arg @ sp[(-5)+0]
  4438  0161BA  50E1               	movf	fsr1l,w,c
  4439  0161BC  0FFB               	addlw	-5
  4440  0161BE  6ED9               	movwf	fsr2l,c
  4441  0161C0  50E2               	movf	fsr1h,w,c
  4442  0161C2  6EDA               	movwf	fsr2h,c
  4443  0161C4  0EFF               	movlw	255
  4444  0161C6  22DA               	addwfc	fsr2h,f,c
  4445  0161C8  2ADE               	incf	postinc2,f,c
  4446  0161CA  0E00               	movlw	0
  4447  0161CC  22DE               	addwfc	postinc2,f,c
  4448  0161CE  22DE               	addwfc	postinc2,f,c
  4449  0161D0  22DE               	addwfc	postinc2,f,c
  4450                           
  4451                           ;stkvar	_arg @ sp[(-5)+0]
  4452  0161D2  90D8               	bcf	status,0,c
  4453  0161D4  0EFE               	movlw	-2
  4454  0161D6  32E3               	rrcf	plusw1,f,c
  4455  0161D8  0EFD               	movlw	-3
  4456  0161DA  32E3               	rrcf	plusw1,f,c
  4457  0161DC  0EFC               	movlw	-4
  4458  0161DE  32E3               	rrcf	plusw1,f,c
  4459  0161E0  0EFB               	movlw	-5
  4460  0161E2  32E3               	rrcf	plusw1,f,c
  4461  0161E4                     l8178:
  4462                           
  4463                           ;stkvar	_arg @ sp[(-5)+0]
  4464  0161E4  50E1               	movf	fsr1l,w,c
  4465  0161E6  0FFB               	addlw	-5
  4466  0161E8  6ED9               	movwf	fsr2l,c
  4467  0161EA  50E2               	movf	fsr1h,w,c
  4468  0161EC  6EDA               	movwf	fsr2h,c
  4469  0161EE  0EFF               	movlw	255
  4470  0161F0  22DA               	addwfc	fsr2h,f,c
  4471  0161F2  52DE               	movf	postinc2,f,c
  4472  0161F4  52DE               	movf	postinc2,f,c
  4473  0161F6  52DE               	movf	postinc2,f,c
  4474  0161F8  0EFF               	movlw	255
  4475  0161FA  14DD               	andwf	postdec2,w,c
  4476  0161FC  B4D8               	btfsc	status,2,c
  4477  0161FE  D00C               	goto	l8182
  4478  016200  D7DA               	goto	l8172
  4479  016202                     l8180:
  4480                           
  4481                           ;stkvar	_exp @ sp[(-5)+4]
  4482  016202  0EFF               	movlw	-1
  4483  016204  06E3               	decf	plusw1,f,c
  4484                           
  4485                           ;stkvar	_arg @ sp[(-5)+0]
  4486  016206  90D8               	bcf	status,0,c
  4487  016208  0EFB               	movlw	-5
  4488  01620A  36E3               	rlcf	plusw1,f,c
  4489  01620C  0EFC               	movlw	-4
  4490  01620E  36E3               	rlcf	plusw1,f,c
  4491  016210  0EFD               	movlw	-3
  4492  016212  36E3               	rlcf	plusw1,f,c
  4493  016214  0EFE               	movlw	-2
  4494  016216  36E3               	rlcf	plusw1,f,c
  4495  016218                     l8182:
  4496                           
  4497                           ;stkvar	_arg @ sp[(-5)+0]
  4498  016218  0EFD               	movlw	-3
  4499  01621A  BEE3               	btfsc	plusw1,7,c
  4500  01621C  D007               	goto	u8320
  4501                           
  4502                           ;stkvar	_exp @ sp[(-5)+4]
  4503  01621E  0EFF               	movlw	-1
  4504  016220  006F FF8C  F035    	movff	plusw1,btemp
  4505  016226  0E02               	movlw	2
  4506  016228  6035               	cpfslt	btemp^0,c
  4507  01622A  D7EB               	goto	l8180
  4508  01622C                     u8320:
  4509                           
  4510                           ;stkvar	_exp @ sp[(-5)+4]
  4511  01622C  0EFF               	movlw	-1
  4512  01622E  B0E3               	btfsc	plusw1,0,c
  4513  016230  D002               	goto	l8190
  4514                           
  4515                           ;stkvar	_arg @ sp[(-5)+0]
  4516  016232  0EFD               	movlw	-3
  4517  016234  9EE3               	bcf	plusw1,7,c
  4518  016236                     l8190:
  4519                           
  4520                           ;stkvar	_exp @ sp[(-5)+4]
  4521  016236  50E1               	movf	fsr1l,w,c
  4522  016238  0FFF               	addlw	-1
  4523  01623A  6ED9               	movwf	fsr2l,c
  4524  01623C  50E2               	movf	fsr1h,w,c
  4525  01623E  6EDA               	movwf	fsr2h,c
  4526  016240  0EFF               	movlw	255
  4527  016242  22DA               	addwfc	fsr2h,f,c
  4528  016244  90D8               	bcf	status,0,c
  4529  016246  32DF               	rrcf	indf2,f,c
  4530                           
  4531                           ;stkvar	_exp @ sp[(-5)+4]
  4532  016248  0EFF               	movlw	-1
  4533  01624A  006F FF8C  F040    	movff	plusw1,btemp+11
  4534  016250  0060  F100  F039   	movff	btemp+11,btemp+4
  4535  016256  6A3A               	clrf	(btemp+5)^0,c
  4536  016258  6A3B               	clrf	(btemp+6)^0,c
  4537  01625A  6A3C               	clrf	(btemp+7)^0,c
  4538  01625C  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4539  016262  6A3B               	clrf	(btemp+6)^0,c
  4540  016264  6A3A               	clrf	(btemp+5)^0,c
  4541  016266  6A39               	clrf	(btemp+4)^0,c
  4542                           
  4543                           ;stkvar	_arg @ sp[(-5)+0]
  4544  016268  50E1               	movf	fsr1l,w,c
  4545  01626A  0FFB               	addlw	-5
  4546  01626C  6ED9               	movwf	fsr2l,c
  4547  01626E  50E2               	movf	fsr1h,w,c
  4548  016270  6EDA               	movwf	fsr2h,c
  4549  016272  0EFF               	movlw	255
  4550  016274  22DA               	addwfc	fsr2h,f,c
  4551  016276  5039               	movf	(btemp+4)^0,w,c
  4552  016278  12DE               	iorwf	postinc2,f,c
  4553  01627A  503A               	movf	(btemp+5)^0,w,c
  4554  01627C  12DE               	iorwf	postinc2,f,c
  4555  01627E  503B               	movf	(btemp+6)^0,w,c
  4556  016280  12DE               	iorwf	postinc2,f,c
  4557  016282  503C               	movf	(btemp+7)^0,w,c
  4558  016284  12DE               	iorwf	postinc2,f,c
  4559                           
  4560                           ;stkvar	_sign @ sp[(-5)+-1]
  4561  016286  0EFA               	movlw	-6
  4562  016288  50E3               	movf	plusw1,w,c
  4563  01628A  B4D8               	btfsc	status,2,c
  4564  01628C  D005               	goto	l8200
  4565                           
  4566                           ;stkvar	_val @ sp[(-5)+-5]
  4567  01628E  0EF9               	movlw	-7
  4568  016290  AEE3               	btfss	plusw1,7,c
  4569  016292  D002               	goto	l8200
  4570                           
  4571                           ;stkvar	_arg @ sp[(-5)+0]
  4572  016294  0EFE               	movlw	-2
  4573  016296  8EE3               	bsf	plusw1,7,c
  4574  016298                     l8200:
  4575                           
  4576                           ;stkvar	_arg @ sp[(-5)+0]
  4577  016298  0EFB               	movlw	-5
  4578  01629A  006F FF8C  F035    	movff	plusw1,btemp
  4579  0162A0  0EFC               	movlw	-4
  4580  0162A2  006F FF8C  F036    	movff	plusw1,btemp+1
  4581  0162A8  0EFD               	movlw	-3
  4582  0162AA  006F FF8C  F037    	movff	plusw1,btemp+2
  4583  0162B0  0EFE               	movlw	-2
  4584  0162B2  006F FF8C  F038    	movff	plusw1,btemp+3
  4585  0162B8                     l2669:
  4586                           
  4587                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4588  0162B8  0EF6               	movlw	246
  4589  0162BA  26E1               	addwf	fsr1l,f,c
  4590  0162BC  0EFF               	movlw	255
  4591  0162BE  22E2               	addwfc	fsr1h,f,c
  4592  0162C0  0012               	return		;funcret
  4593  0162C2                     __end_of___xxtofl:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function _clear_adc_scan *****************
  4597 ;; Defined at:
  4598 ;;		line 64 in file "daq.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1  [STACK] void 
  4605 ;; Registers used:
  4606 ;;		None
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/4
  4609 ;;		On exit  : 3F/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    6
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text17
  4627  018F22                     __ptext17:
  4628                           	opt callstack 0
  4629  018F22                     _clear_adc_scan:
  4630                           	opt callstack 24
  4631                           
  4632                           ;daq.c: 66:  R.done = 0;
  4633                           
  4634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4635                           ;incstack = 0
  4636  018F22  0100               	movlb	0	; () banked
  4637  018F24  6BCA               	clrf	(_R+39)& (0+255),b	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4641  018F26  0012               	return		;funcret
  4642  018F28                     __end_of_clear_adc_scan:
  4643                           	opt callstack 0
  4644                           
  4645 ;; *************** function _check_help *****************
  4646 ;; Defined at:
  4647 ;;		line 40 in file "mconfig.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  flipper         1  [STACK] const _Bool 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1  [STACK] void 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4656 ;; Tracked objects:
  4657 ;;		On entry : 3F/1
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:   18
  4668 ;; This function calls:
  4669 ;;		_StartTimer
  4670 ;;		_TimerDone
  4671 ;;		_display_help
  4672 ;;		_display_info
  4673 ;;		_get_vterm_ptr
  4674 ;;		_help_button
  4675 ;;		_mode_lamp_bright
  4676 ;;		_mode_lamp_dim
  4677 ;;		_set_display_info
  4678 ;;		_set_temp_display_help
  4679 ;;		_set_vterm
  4680 ;;		_sprintf
  4681 ;;		_update_lcd
  4682 ;;		_vterm_dump
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text18
  4689  015EAC                     __ptext18:
  4690                           	opt callstack 0
  4691  015EAC                     _check_help:
  4692                           	opt callstack 12
  4693                           
  4694                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4695                           
  4696                           ; BSR set to: 0
  4697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4698                           ;incstack = 0
  4699  015EAC  EC5C  F0C3         	call	_help_button	;wreg free
  4700  015EB0  5035               	movf	btemp^0,w,c
  4701  015EB2  B4D8               	btfsc	status,2,c
  4702  015EB4  D0D0               	goto	l10318
  4703  015EB6  EC81  F0C7         	call	_display_info	;wreg free
  4704  015EBA  0435               	decf	btemp^0,w,c
  4705  015EBC  B4D8               	btfsc	status,2,c
  4706  015EBE  D0CB               	goto	l10318
  4707                           
  4708                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4709  015EC0  0EDC               	movlw	220
  4710  015EC2  6EE6               	movwf	postinc1,c
  4711  015EC4  0E05               	movlw	5
  4712  015EC6  6EE6               	movwf	postinc1,c
  4713  015EC8  0E0B               	movlw	11
  4714  015ECA  6EE6               	movwf	postinc1,c
  4715  015ECC  EC3E  F0C3         	call	_StartTimer	;wreg free
  4716                           
  4717                           ;mconfig.c: 47:   if (V.debug)
  4718  015ED0  0101               	movlb	1	; () banked
  4719  015ED2  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4720                           
  4721                           ; BSR set to: 1
  4722                           ;mconfig.c: 48:    vterm_dump();
  4723  015ED4  EC7D  F0B6         	call	_vterm_dump	;wreg free
  4724                           
  4725                           ;mconfig.c: 50:   set_vterm(1);
  4726  015ED8  0E01               	movlw	1
  4727  015EDA  6EE6               	movwf	postinc1,c
  4728  015EDC  ECC4  F0C6         	call	_set_vterm	;wreg free
  4729                           
  4730                           ; BSR set to: 4
  4731                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4732  015EE0  EC81  F0C7         	call	_display_info	;wreg free
  4733  015EE4  5035               	movf	btemp^0,w,c
  4734  015EE6  6EE6               	movwf	postinc1,c
  4735  015EE8  EC39  F0C7         	call	_set_temp_display_help	;wreg free
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4739  015EEC  0E01               	movlw	1
  4740  015EEE  6EE6               	movwf	postinc1,c
  4741  015EF0  EC7A  F0C6         	call	_set_display_info	;wreg free
  4742                           
  4743                           ;mconfig.c: 53:   if (flipper) {
  4744                           ;stkvar	_flipper @ sp[(0)+-1]
  4745  015EF4  0EFF               	movlw	-1
  4746  015EF6  50E3               	movf	plusw1,w,c
  4747  015EF8  B4D8               	btfsc	status,2,c
  4748  015EFA  D019               	goto	l10306
  4749                           
  4750                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4751  015EFC  0EB3               	movlw	low STR_15
  4752  015EFE  6EE6               	movwf	postinc1,c
  4753  015F00  0EFF               	movlw	high STR_15
  4754  015F02  6EE6               	movwf	postinc1,c
  4755  015F04  0E0C               	movlw	low STR_17
  4756  015F06  6EE6               	movwf	postinc1,c
  4757  015F08  0EFF               	movlw	high STR_17
  4758  015F0A  6EE6               	movwf	postinc1,c
  4759  015F0C  0E01               	movlw	1
  4760  015F0E  6EE6               	movwf	postinc1,c
  4761  015F10  0E00               	movlw	0
  4762  015F12  6EE6               	movwf	postinc1,c
  4763  015F14  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  4764  015F18  0060  F0D7  FFE6   	movff	btemp,postinc1
  4765  015F1E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4766  015F24  0E06               	movlw	6
  4767  015F26  6EE6               	movwf	postinc1,c
  4768  015F28  EC43  F0B9         	call	_sprintf	;wreg free
  4769                           
  4770                           ;mconfig.c: 55:   } else {
  4771  015F2C  D018               	goto	l1554
  4772  015F2E                     l10306:
  4773                           
  4774                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4775  015F2E  0EC9               	movlw	low STR_16
  4776  015F30  6EE6               	movwf	postinc1,c
  4777  015F32  0EFF               	movlw	high STR_16
  4778  015F34  6EE6               	movwf	postinc1,c
  4779  015F36  0E0C               	movlw	low STR_17
  4780  015F38  6EE6               	movwf	postinc1,c
  4781  015F3A  0EFF               	movlw	high STR_17
  4782  015F3C  6EE6               	movwf	postinc1,c
  4783  015F3E  0E01               	movlw	1
  4784  015F40  6EE6               	movwf	postinc1,c
  4785  015F42  0E00               	movlw	0
  4786  015F44  6EE6               	movwf	postinc1,c
  4787  015F46  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  4788  015F4A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4789  015F50  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4790  015F56  0E06               	movlw	6
  4791  015F58  6EE6               	movwf	postinc1,c
  4792  015F5A  EC43  F0B9         	call	_sprintf	;wreg free
  4793  015F5E                     l1554:
  4794                           
  4795                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4796  015F5E  0101               	movlb	1	; () banked
  4797  015F60  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4798  015F62  32E8               	rrcf	wreg,f,c
  4799  015F64  32E8               	rrcf	wreg,f,c
  4800  015F66  0B03               	andlw	3
  4801  015F68  0D24               	mullw	36
  4802  015F6A  0E12               	movlw	18
  4803  015F6C  26F3               	addwf	243,f,c
  4804  015F6E  0E00               	movlw	0
  4805  015F70  22F4               	addwfc	244,f,c
  4806  015F72  0E51               	movlw	low _T
  4807  015F74  6E3F               	movwf	(btemp+10)^0,c
  4808  015F76  0EFE               	movlw	high _T
  4809  015F78  6E40               	movwf	(btemp+11)^0,c
  4810  015F7A  50F3               	movf	243,w,c
  4811  015F7C  263F               	addwf	(btemp+10)^0,f,c
  4812  015F7E  50F4               	movf	244,w,c
  4813  015F80  2240               	addwfc	(btemp+11)^0,f,c
  4814  015F82  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4815  015F88  0060  F103  FFE6   	movff	btemp+11,postinc1
  4816  015F8E  0EBF               	movlw	low STR_19
  4817  015F90  6EE6               	movwf	postinc1,c
  4818  015F92  0EFF               	movlw	high STR_19
  4819  015F94  6EE6               	movwf	postinc1,c
  4820  015F96  0E01               	movlw	1
  4821  015F98  6EE6               	movwf	postinc1,c
  4822  015F9A  0E01               	movlw	1
  4823  015F9C  6EE6               	movwf	postinc1,c
  4824  015F9E  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  4825  015FA2  0060  F0D7  FFE6   	movff	btemp,postinc1
  4826  015FA8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4827  015FAE  0E06               	movlw	6
  4828  015FB0  6EE6               	movwf	postinc1,c
  4829  015FB2  EC43  F0B9         	call	_sprintf	;wreg free
  4830                           
  4831                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4832  015FB6  0101               	movlb	1	; () banked
  4833  015FB8  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4834  015FBA  32E8               	rrcf	wreg,f,c
  4835  015FBC  32E8               	rrcf	wreg,f,c
  4836  015FBE  0B03               	andlw	3
  4837  015FC0  0D24               	mullw	36
  4838  015FC2  0E51               	movlw	low _T
  4839  015FC4  6E3F               	movwf	(btemp+10)^0,c
  4840  015FC6  0EFE               	movlw	high _T
  4841  015FC8  6E40               	movwf	(btemp+11)^0,c
  4842  015FCA  50F3               	movf	243,w,c
  4843  015FCC  263F               	addwf	(btemp+10)^0,f,c
  4844  015FCE  50F4               	movf	244,w,c
  4845  015FD0  2240               	addwfc	(btemp+11)^0,f,c
  4846  015FD2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4847  015FD8  0060  F103  FFE6   	movff	btemp+11,postinc1
  4848  015FDE  0EBF               	movlw	low STR_19
  4849  015FE0  6EE6               	movwf	postinc1,c
  4850  015FE2  0EFF               	movlw	high STR_19
  4851  015FE4  6EE6               	movwf	postinc1,c
  4852  015FE6  0E01               	movlw	1
  4853  015FE8  6EE6               	movwf	postinc1,c
  4854  015FEA  0E02               	movlw	2
  4855  015FEC  6EE6               	movwf	postinc1,c
  4856  015FEE  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  4857  015FF2  0060  F0D7  FFE6   	movff	btemp,postinc1
  4858  015FF8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4859  015FFE  0E06               	movlw	6
  4860  016000  6EE6               	movwf	postinc1,c
  4861  016002  EC43  F0B9         	call	_sprintf	;wreg free
  4862                           
  4863                           ;mconfig.c: 60:   V.help_id++;
  4864  016006  EE20  F19B         	lfsr	2,_V+155	;volatile
  4865  01600A  38DF               	swapf	223,w,c
  4866  01600C  6E40               	movwf	(btemp+11)^0,c
  4867  01600E  3240               	rrcf	(btemp+11)^0,f,c
  4868  016010  3040               	rrcf	(btemp+11)^0,w,c
  4869  016012  0B03               	andlw	3
  4870  016014  6E40               	movwf	(btemp+11)^0,c
  4871  016016  2A40               	incf	(btemp+11)^0,f,c
  4872  016018  3A40               	swapf	(btemp+11)^0,f,c
  4873  01601A  3640               	rlcf	(btemp+11)^0,f,c
  4874  01601C  3640               	rlcf	(btemp+11)^0,f,c
  4875  01601E  50DF               	movf	223,w,c
  4876  016020  1840               	xorwf	(btemp+11)^0,w,c
  4877  016022  0B3F               	andlw	-193
  4878  016024  1840               	xorwf	(btemp+11)^0,w,c
  4879  016026  6EDF               	movwf	223,c
  4880                           
  4881                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4882  016028  0EB8               	movlw	184
  4883  01602A  6EE6               	movwf	postinc1,c
  4884  01602C  0E0B               	movlw	11
  4885  01602E  6EE6               	movwf	postinc1,c
  4886  016030  0E09               	movlw	9
  4887  016032  6EE6               	movwf	postinc1,c
  4888  016034  EC3E  F0C3         	call	_StartTimer	;wreg free
  4889                           
  4890                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4891  016038  0EB8               	movlw	184
  4892  01603A  6EE6               	movwf	postinc1,c
  4893  01603C  0E0B               	movlw	11
  4894  01603E  6EE6               	movwf	postinc1,c
  4895  016040  0E07               	movlw	7
  4896  016042  6EE6               	movwf	postinc1,c
  4897  016044  EC3E  F0C3         	call	_StartTimer	;wreg free
  4898                           
  4899                           ;mconfig.c: 63:   mode_lamp_bright();
  4900  016048  EC48  F0C7         	call	_mode_lamp_bright	;wreg free
  4901                           
  4902                           ;mconfig.c: 64:   update_lcd(1);
  4903  01604C  0E01               	movlw	1
  4904  01604E  6EE6               	movwf	postinc1,c
  4905  016050  ECBC  F0B8         	call	_update_lcd	;wreg free
  4906                           
  4907                           ;mconfig.c: 65:  } else {
  4908  016054  D032               	goto	l1558
  4909  016056                     l10318:
  4910                           
  4911                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4912  016056  0E09               	movlw	9
  4913  016058  6EE6               	movwf	postinc1,c
  4914  01605A  EC05  F0C6         	call	_TimerDone	;wreg free
  4915  01605E  5035               	movf	btemp^0,w,c
  4916  016060  B4D8               	btfsc	status,2,c
  4917  016062  D02B               	goto	l1558
  4918                           
  4919                           ;mconfig.c: 67:    set_vterm(0);
  4920  016064  0E00               	movlw	0
  4921  016066  6EE6               	movwf	postinc1,c
  4922  016068  ECC4  F0C6         	call	_set_vterm	;wreg free
  4923                           
  4924                           ; BSR set to: 4
  4925                           ;mconfig.c: 68:    V.help = 0;
  4926  01606C  0101               	movlb	1	; () banked
  4927  01606E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4928                           
  4929                           ; BSR set to: 1
  4930                           ;mconfig.c: 69:    set_display_info(display_help());
  4931  016070  EC85  F0C7         	call	_display_help	;wreg free
  4932  016074  5035               	movf	btemp^0,w,c
  4933  016076  6EE6               	movwf	postinc1,c
  4934  016078  EC7A  F0C6         	call	_set_display_info	;wreg free
  4935                           
  4936                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4937  01607C  0060  F657  FFE6   	movff	_V+149,postinc1
  4938  016082  0060  F65B  FFE6   	movff	_V+150,postinc1
  4939  016088  ECED  F0C6         	call	_mode_lamp_dim	;wreg free
  4940                           
  4941                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4942  01608C  0E0B               	movlw	11
  4943  01608E  6EE6               	movwf	postinc1,c
  4944  016090  EC05  F0C6         	call	_TimerDone	;wreg free
  4945  016094  5035               	movf	btemp^0,w,c
  4946  016096  B4D8               	btfsc	status,2,c
  4947  016098  D010               	goto	l1558
  4948                           
  4949                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4950  01609A  0101               	movlb	1	; () banked
  4951  01609C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4952  01609E  A4D8               	btfss	status,2,c
  4953  0160A0  D002               	goto	u10730
  4954  0160A2  0E01               	movlw	1
  4955  0160A4  D001               	goto	u10740
  4956  0160A6                     u10730:
  4957  0160A6  0E00               	movlw	0
  4958  0160A8                     u10740:
  4959  0160A8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4960                           
  4961                           ; BSR set to: 1
  4962                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4963  0160AA  0EDC               	movlw	220
  4964  0160AC  6EE6               	movwf	postinc1,c
  4965  0160AE  0E05               	movlw	5
  4966  0160B0  6EE6               	movwf	postinc1,c
  4967  0160B2  0E0B               	movlw	11
  4968  0160B4  6EE6               	movwf	postinc1,c
  4969  0160B6  EC3E  F0C3         	call	_StartTimer	;wreg free
  4970  0160BA                     l1558:
  4971                           
  4972                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4973  0160BA  52E5               	movf	postdec1,f,c
  4974  0160BC  0012               	return		;funcret
  4975  0160BE                     __end_of_check_help:
  4976                           	opt callstack 0
  4977                           
  4978 ;; *************** function _vterm_dump *****************
  4979 ;; Defined at:
  4980 ;;		line 118 in file "mconfig.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1  [STACK] void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4989 ;; Tracked objects:
  4990 ;;		On entry : 3F/1
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:   17
  5001 ;; This function calls:
  5002 ;;		_WaitMs
  5003 ;;		_eaDogM_WriteStringAtPos
  5004 ;;		_get_vterm_ptr
  5005 ;;		_sprintf
  5006 ;;		_wait_lcd_done
  5007 ;; This function is called by:
  5008 ;;		_check_help
  5009 ;; This function uses a reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text19
  5013  016CFA                     __ptext19:
  5014                           	opt callstack 0
  5015  016CFA                     _vterm_dump:
  5016                           	opt callstack 12
  5017                           
  5018                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5019                           
  5020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5021                           ;incstack = 0
  5022  016CFA  0E01               	movlw	1
  5023  016CFC  6EE6               	movwf	postinc1,c
  5024  016CFE  0E00               	movlw	0
  5025  016D00  6EE6               	movwf	postinc1,c
  5026  016D02  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5027  016D06  0060  F0D7  FFE6   	movff	btemp,postinc1
  5028  016D0C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5029  016D12  0E00               	movlw	0
  5030  016D14  6EE6               	movwf	postinc1,c
  5031  016D16  0E00               	movlw	0
  5032  016D18  6EE6               	movwf	postinc1,c
  5033  016D1A  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5034  016D1E  0060  F0D7  FFE6   	movff	btemp,postinc1
  5035  016D24  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5036  016D2A  0E88               	movlw	low STR_21
  5037  016D2C  6EE6               	movwf	postinc1,c
  5038  016D2E  0EFF               	movlw	high STR_21
  5039  016D30  6EE6               	movwf	postinc1,c
  5040  016D32  0E01               	movlw	low (_V+1)
  5041  016D34  6EE6               	movwf	postinc1,c
  5042  016D36  0E01               	movlw	high (_V+1)
  5043  016D38  6EE6               	movwf	postinc1,c
  5044  016D3A  0E08               	movlw	8
  5045  016D3C  6EE6               	movwf	postinc1,c
  5046  016D3E  EC43  F0B9         	call	_sprintf	;wreg free
  5047                           
  5048                           ;mconfig.c: 121:  wait_lcd_done();
  5049  016D42  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5053  016D46  0E01               	movlw	low (_V+1)
  5054  016D48  6EE6               	movwf	postinc1,c
  5055  016D4A  0E01               	movlw	high (_V+1)
  5056  016D4C  6EE6               	movwf	postinc1,c
  5057  016D4E  0E00               	movlw	0
  5058  016D50  6EE6               	movwf	postinc1,c
  5059  016D52  0E00               	movlw	0
  5060  016D54  6EE6               	movwf	postinc1,c
  5061  016D56  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5062                           
  5063                           ; BSR set to: 59
  5064                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5065  016D5A  0E01               	movlw	1
  5066  016D5C  6EE6               	movwf	postinc1,c
  5067  016D5E  0E01               	movlw	1
  5068  016D60  6EE6               	movwf	postinc1,c
  5069  016D62  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5070  016D66  0060  F0D7  FFE6   	movff	btemp,postinc1
  5071  016D6C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5072  016D72  0E00               	movlw	0
  5073  016D74  6EE6               	movwf	postinc1,c
  5074  016D76  0E01               	movlw	1
  5075  016D78  6EE6               	movwf	postinc1,c
  5076  016D7A  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5077  016D7E  0060  F0D7  FFE6   	movff	btemp,postinc1
  5078  016D84  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5079  016D8A  0E88               	movlw	low STR_21
  5080  016D8C  6EE6               	movwf	postinc1,c
  5081  016D8E  0EFF               	movlw	high STR_21
  5082  016D90  6EE6               	movwf	postinc1,c
  5083  016D92  0E01               	movlw	low (_V+1)
  5084  016D94  6EE6               	movwf	postinc1,c
  5085  016D96  0E01               	movlw	high (_V+1)
  5086  016D98  6EE6               	movwf	postinc1,c
  5087  016D9A  0E08               	movlw	8
  5088  016D9C  6EE6               	movwf	postinc1,c
  5089  016D9E  EC43  F0B9         	call	_sprintf	;wreg free
  5090                           
  5091                           ;mconfig.c: 124:  wait_lcd_done();
  5092  016DA2  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5093                           
  5094                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5095  016DA6  0E01               	movlw	low (_V+1)
  5096  016DA8  6EE6               	movwf	postinc1,c
  5097  016DAA  0E01               	movlw	high (_V+1)
  5098  016DAC  6EE6               	movwf	postinc1,c
  5099  016DAE  0E00               	movlw	0
  5100  016DB0  6EE6               	movwf	postinc1,c
  5101  016DB2  0E01               	movlw	1
  5102  016DB4  6EE6               	movwf	postinc1,c
  5103  016DB6  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5104                           
  5105                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5106  016DBA  0E01               	movlw	1
  5107  016DBC  6EE6               	movwf	postinc1,c
  5108  016DBE  0E02               	movlw	2
  5109  016DC0  6EE6               	movwf	postinc1,c
  5110  016DC2  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5111  016DC6  0060  F0D7  FFE6   	movff	btemp,postinc1
  5112  016DCC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5113  016DD2  0E00               	movlw	0
  5114  016DD4  6EE6               	movwf	postinc1,c
  5115  016DD6  0E02               	movlw	2
  5116  016DD8  6EE6               	movwf	postinc1,c
  5117  016DDA  EC46  F0C4         	call	_get_vterm_ptr	;wreg free
  5118  016DDE  0060  F0D7  FFE6   	movff	btemp,postinc1
  5119  016DE4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5120  016DEA  0E88               	movlw	low STR_21
  5121  016DEC  6EE6               	movwf	postinc1,c
  5122  016DEE  0EFF               	movlw	high STR_21
  5123  016DF0  6EE6               	movwf	postinc1,c
  5124  016DF2  0E01               	movlw	low (_V+1)
  5125  016DF4  6EE6               	movwf	postinc1,c
  5126  016DF6  0E01               	movlw	high (_V+1)
  5127  016DF8  6EE6               	movwf	postinc1,c
  5128  016DFA  0E08               	movlw	8
  5129  016DFC  6EE6               	movwf	postinc1,c
  5130  016DFE  EC43  F0B9         	call	_sprintf	;wreg free
  5131                           
  5132                           ;mconfig.c: 127:  wait_lcd_done();
  5133  016E02  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5137  016E06  0E01               	movlw	low (_V+1)
  5138  016E08  6EE6               	movwf	postinc1,c
  5139  016E0A  0E01               	movlw	high (_V+1)
  5140  016E0C  6EE6               	movwf	postinc1,c
  5141  016E0E  0E00               	movlw	0
  5142  016E10  6EE6               	movwf	postinc1,c
  5143  016E12  0E02               	movlw	2
  5144  016E14  6EE6               	movwf	postinc1,c
  5145  016E16  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5146                           
  5147                           ; BSR set to: 59
  5148                           ;mconfig.c: 129:  WaitMs(3000);
  5149  016E1A  0EB8               	movlw	184
  5150  016E1C  6EE6               	movwf	postinc1,c
  5151  016E1E  0E0B               	movlw	11
  5152  016E20  6EE6               	movwf	postinc1,c
  5153  016E22  EC94  F0C3         	call	_WaitMs	;wreg free
  5154                           
  5155                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5156  016E26  0012               	return		;funcret
  5157  016E28                     __end_of_vterm_dump:
  5158                           	opt callstack 0
  5159                           
  5160 ;; *************** function _sprintf *****************
  5161 ;; Defined at:
  5162 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  s               2  [STACK] PTR unsigned char 
  5165 ;;		 -> D.lcd(216), D(218), V(187), 
  5166 ;;  fmt             2  [STACK] PTR const unsigned char 
  5167 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5168 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5169 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5170 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5171 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  5172 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5173 ;;		 -> STR_1(17), 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  f               6  [STACK] struct _IO_FILE
  5176 ;;  ap              2  [STACK] PTR void [1]
  5177 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5178 ;;  ret             2    0        int 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  2  [STACK] int 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/4
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:   14
  5195 ;; This function calls:
  5196 ;;		_vfprintf
  5197 ;; This function is called by:
  5198 ;;		_main
  5199 ;;		_check_help
  5200 ;;		_vterm_dump
  5201 ;; This function uses a reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text20
  5205  017286                     __ptext20:
  5206                           	opt callstack 0
  5207  017286                     _sprintf:
  5208                           	opt callstack 0
  5209                           
  5210                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5211  017286  0E08               	movlw	8
  5212  017288  26E1               	addwf	fsr1l,f,c
  5213  01728A  0E00               	movlw	0
  5214  01728C  22E2               	addwfc	fsr1h,f,c
  5215                           
  5216                           ;incstack = 0
  5217  01728E  0EFE               	movlw	254
  5218  017290  6E3F               	movwf	(btemp+10)^0,c
  5219  017292  0EFF               	movlw	255
  5220  017294  6E40               	movwf	(btemp+11)^0,c
  5221                           
  5222                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5223  017296  0EF5               	movlw	245
  5224  017298  24E1               	addwf	fsr1l,w,c
  5225  01729A  6E3D               	movwf	(btemp+8)^0,c
  5226  01729C  0EFF               	movlw	255
  5227  01729E  20E2               	addwfc	fsr1h,w,c
  5228  0172A0  6E3E               	movwf	(btemp+9)^0,c
  5229  0172A2  503F               	movf	(btemp+10)^0,w,c
  5230  0172A4  263D               	addwf	(btemp+8)^0,f,c
  5231  0172A6  5040               	movf	(btemp+11)^0,w,c
  5232  0172A8  223E               	addwfc	(btemp+9)^0,f,c
  5233                           
  5234                           ;stkvar	_ap @ sp[(-8)+6]
  5235  0172AA  0EFF               	movlw	-1
  5236  0172AC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  5237  0172B2  0EFE               	movlw	-2
  5238  0172B4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  5239                           
  5240                           ;stkvar	_s @ sp[(-8)+-3]
  5241  0172BA  0EF5               	movlw	-11
  5242  0172BC  006F FF8C  F03F    	movff	plusw1,btemp+10
  5243  0172C2  0EF6               	movlw	-10
  5244  0172C4  006F FF8C  F040    	movff	plusw1,btemp+11
  5245                           
  5246                           ;stkvar	_f @ sp[(-8)+0]
  5247  0172CA  0EF9               	movlw	-7
  5248  0172CC  0060  F103  FFE3   	movff	btemp+11,plusw1
  5249  0172D2  0EF8               	movlw	-8
  5250  0172D4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5251                           
  5252                           ;stkvar	_f @ sp[(-8)+0]
  5253  0172DA  0EFA               	movlw	250
  5254  0172DC  24E1               	addwf	fsr1l,w,c
  5255  0172DE  6ED9               	movwf	fsr2l,c
  5256  0172E0  0EFF               	movlw	255
  5257  0172E2  20E2               	addwfc	fsr1h,w,c
  5258  0172E4  6EDA               	movwf	fsr2h,c
  5259  0172E6  0E00               	movlw	0
  5260  0172E8  6EDE               	movwf	postinc2,c
  5261  0172EA  0E00               	movlw	0
  5262  0172EC  6EDD               	movwf	postdec2,c
  5263                           
  5264                           ;stkvar	_f @ sp[(-8)+0]
  5265  0172EE  0EFC               	movlw	252
  5266  0172F0  24E1               	addwf	fsr1l,w,c
  5267  0172F2  6ED9               	movwf	fsr2l,c
  5268  0172F4  0EFF               	movlw	255
  5269  0172F6  20E2               	addwfc	fsr1h,w,c
  5270  0172F8  6EDA               	movwf	fsr2h,c
  5271  0172FA  0E00               	movlw	0
  5272  0172FC  6EDE               	movwf	postinc2,c
  5273  0172FE  0E00               	movlw	0
  5274  017300  6EDD               	movwf	postdec2,c
  5275                           
  5276                           ;stkvar	_ap @ sp[(-8)+6]
  5277  017302  0EFE               	movlw	254
  5278  017304  24E1               	addwf	fsr1l,w,c
  5279  017306  6E35               	movwf	btemp^0,c
  5280  017308  0EFF               	movlw	255
  5281  01730A  20E2               	addwfc	fsr1h,w,c
  5282  01730C  6E36               	movwf	(btemp+1)^0,c
  5283  01730E  0060  F0D7  FFE6   	movff	btemp,postinc1
  5284  017314  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5285                           
  5286                           ;stkvar	_fmt @ sp[(-10)+-5]
  5287  01731A  0EF1               	movlw	-15
  5288  01731C  006F FF8F FFE6     	movff	plusw1,postinc1
  5289  017322  006F FF8F FFE6     	movff	plusw1,postinc1
  5290                           
  5291                           ;stkvar	_f @ sp[(-12)+0]
  5292  017328  0EF4               	movlw	244
  5293  01732A  24E1               	addwf	fsr1l,w,c
  5294  01732C  6E35               	movwf	btemp^0,c
  5295  01732E  0EFF               	movlw	255
  5296  017330  20E2               	addwfc	fsr1h,w,c
  5297  017332  6E36               	movwf	(btemp+1)^0,c
  5298  017334  0060  F0D7  FFE6   	movff	btemp,postinc1
  5299  01733A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5300  017340  EC1F  F0BC         	call	_vfprintf	;wreg free
  5301                           
  5302                           ;stkvar	_f @ sp[(-8)+0]
  5303  017344  0EFA               	movlw	250
  5304  017346  24E1               	addwf	fsr1l,w,c
  5305  017348  6ED9               	movwf	fsr2l,c
  5306  01734A  0EFF               	movlw	255
  5307  01734C  20E2               	addwfc	fsr1h,w,c
  5308  01734E  6EDA               	movwf	fsr2h,c
  5309  017350  006F FF78  F03F    	movff	postinc2,btemp+10
  5310  017356  006F FF74  F040    	movff	postdec2,btemp+11
  5311                           
  5312                           ;stkvar	_s @ sp[(-8)+-3]
  5313  01735C  0EF5               	movlw	-11
  5314  01735E  006F FF8C  F03D    	movff	plusw1,btemp+8
  5315  017364  0EF6               	movlw	-10
  5316  017366  006F FF8C  F03E    	movff	plusw1,btemp+9
  5317  01736C  503F               	movf	(btemp+10)^0,w,c
  5318  01736E  243D               	addwf	(btemp+8)^0,w,c
  5319  017370  6ED9               	movwf	fsr2l,c
  5320  017372  5040               	movf	(btemp+11)^0,w,c
  5321  017374  203E               	addwfc	(btemp+9)^0,w,c
  5322  017376  6EDA               	movwf	fsr2h,c
  5323  017378  0E00               	movlw	0
  5324  01737A  6EDF               	movwf	indf2,c
  5325                           
  5326                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5327  01737C  0EF8               	movlw	248
  5328  01737E  26E1               	addwf	fsr1l,f,c
  5329  017380  0EFF               	movlw	255
  5330  017382  22E2               	addwfc	fsr1h,f,c
  5331  017384  52E5               	movf	postdec1,f,c
  5332  017386  50E7               	movf	indf1,w,c
  5333  017388  5EE1               	subwf	fsr1l,f,c
  5334  01738A  0E00               	movlw	0
  5335  01738C  5AE2               	subwfb	fsr1h,f,c
  5336  01738E  0012               	return		;funcret
  5337  017390                     __end_of_sprintf:
  5338                           	opt callstack 0
  5339                           
  5340 ;; *************** function _get_vterm_ptr *****************
  5341 ;; Defined at:
  5342 ;;		line 113 in file "mconfig.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  line            1  [STACK] const unsigned char 
  5345 ;;  vterm           1  [STACK] const unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2  [STACK] PTR unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/4
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    6
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;;		_check_help
  5369 ;;		_vterm_dump
  5370 ;; This function uses a reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text21
  5374  01888C                     __ptext21:
  5375                           	opt callstack 0
  5376  01888C                     _get_vterm_ptr:
  5377                           	opt callstack 24
  5378                           
  5379                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5380                           ;stkvar	_vterm @ sp[(0)+-2]
  5381                           
  5382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5383                           ;incstack = 0
  5384  01888C  0EFE               	movlw	-2
  5385  01888E  50E3               	movf	plusw1,w,c
  5386  018890  0B03               	andlw	3
  5387  018892  0D36               	mullw	54
  5388  018894  0E00               	movlw	low _D
  5389  018896  6E35               	movwf	btemp^0,c
  5390  018898  0E04               	movlw	high _D
  5391  01889A  6E36               	movwf	(btemp+1)^0,c
  5392  01889C  50F3               	movf	243,w,c
  5393  01889E  2635               	addwf	btemp^0,f,c
  5394  0188A0  50F4               	movf	244,w,c
  5395  0188A2  2236               	addwfc	(btemp+1)^0,f,c
  5396                           
  5397                           ;stkvar	_line @ sp[(0)+-1]
  5398  0188A4  0EFF               	movlw	-1
  5399  0188A6  50E3               	movf	plusw1,w,c
  5400  0188A8  0B03               	andlw	3
  5401  0188AA  0D12               	mullw	18
  5402  0188AC  50F3               	movf	243,w,c
  5403  0188AE  2635               	addwf	btemp^0,f,c
  5404  0188B0  50F4               	movf	244,w,c
  5405  0188B2  2236               	addwfc	(btemp+1)^0,f,c
  5406                           
  5407                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5408  0188B4  52E5               	movf	postdec1,f,c
  5409  0188B6  52E5               	movf	postdec1,f,c
  5410  0188B8  0012               	return		;funcret
  5411  0188BA                     __end_of_get_vterm_ptr:
  5412                           	opt callstack 0
  5413                           
  5414 ;; *************** function _WaitMs *****************
  5415 ;; Defined at:
  5416 ;;		line 32 in file "timers.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  numMilliseco    2  [STACK] const unsigned short 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1  [STACK] void 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/1
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5434 ;;Total ram usage:        0 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    7
  5437 ;; This function calls:
  5438 ;;		_StartTimer
  5439 ;;		_TimerDone
  5440 ;; This function is called by:
  5441 ;;		_main
  5442 ;;		_vterm_dump
  5443 ;; This function uses a reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text22
  5447  018728                     __ptext22:
  5448                           	opt callstack 0
  5449  018728                     _WaitMs:
  5450                           	opt callstack 21
  5451                           
  5452                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5453                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5454                           
  5455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5456                           ;incstack = 0
  5457  018728  0EFE               	movlw	-2
  5458  01872A  006F FF8F FFE6     	movff	plusw1,postinc1
  5459  018730  006F FF8F FFE6     	movff	plusw1,postinc1
  5460  018736  0E00               	movlw	0
  5461  018738  6EE6               	movwf	postinc1,c
  5462  01873A  EC3E  F0C3         	call	_StartTimer	;wreg free
  5463                           
  5464                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5465  01873E  D005               	goto	l8120
  5466  018740                     l1484:
  5467                           
  5468                           ;timers.c: 36:   __nop();
  5469  018740  F000               	nop	
  5470                           
  5471                           ;timers.c: 37:   __nop();
  5472  018742  F000               	nop	
  5473                           
  5474                           ;timers.c: 38:   __nop();
  5475  018744  F000               	nop	
  5476                           
  5477                           ;timers.c: 39:   __nop();
  5478  018746  F000               	nop	
  5479  018748  0004               	clrwdt		;# 
  5480  01874A                     l8120:
  5481                           
  5482                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5483  01874A  0E00               	movlw	0
  5484  01874C  6EE6               	movwf	postinc1,c
  5485  01874E  EC05  F0C6         	call	_TimerDone	;wreg free
  5486  018752  5035               	movf	btemp^0,w,c
  5487  018754  B4D8               	btfsc	status,2,c
  5488  018756  D7F4               	goto	l1484
  5489                           
  5490                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5491  018758  52E5               	movf	postdec1,f,c
  5492  01875A  52E5               	movf	postdec1,f,c
  5493  01875C  0012               	return		;funcret
  5494  01875E                     __end_of_WaitMs:
  5495                           	opt callstack 0
  5496                           
  5497 ;; *************** function _update_lcd *****************
  5498 ;; Defined at:
  5499 ;;		line 82 in file "mconfig.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  vterm           1  [STACK] unsigned char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1  [STACK] unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/4
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;Total ram usage:        0 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   17
  5520 ;; This function calls:
  5521 ;;		_eaDogM_WriteStringAtPos
  5522 ;;		_wait_lcd_done
  5523 ;; This function is called by:
  5524 ;;		_main
  5525 ;;		_check_help
  5526 ;; This function uses a reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text23
  5530  017178                     __ptext23:
  5531                           	opt callstack 0
  5532  017178                     _update_lcd:
  5533                           	opt callstack 13
  5534                           
  5535                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5536                           ;stkvar	_vterm @ sp[(0)+-1]
  5537                           
  5538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5539                           ;incstack = 0
  5540  017178  0EFF               	movlw	-1
  5541  01717A  006F FF8C  F035    	movff	plusw1,btemp
  5542  017180  0E03               	movlw	3
  5543  017182  1635               	andwf	btemp^0,f,c
  5544  017184  0EFF               	movlw	-1
  5545  017186  0060  F0D7  FFE3   	movff	btemp,plusw1
  5546                           
  5547                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5548  01718C  0104               	movlb	4	; () banked
  5549  01718E  A1D8               	btfss	(_D+216)& (0+255),0,b
  5550  017190  D004               	goto	l10190
  5551                           
  5552                           ; BSR set to: 4
  5553                           ;stkvar	_vterm @ sp[(0)+-1]
  5554  017192  0EFF               	movlw	-1
  5555  017194  50E3               	movf	plusw1,w,c
  5556  017196  B4D8               	btfsc	status,2,c
  5557  017198  D074               	goto	l1562
  5558  01719A                     l10190:
  5559                           
  5560                           ; BSR set to: 4
  5561                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5562                           ;stkvar	_vterm @ sp[(0)+-1]
  5563  01719A  0EFF               	movlw	-1
  5564  01719C  50E3               	movf	plusw1,w,c
  5565  01719E  0D36               	mullw	54
  5566  0171A0  0E10               	movlw	low (_D+16)
  5567  0171A2  24F3               	addwf	243,w,c
  5568  0171A4  6ED9               	movwf	fsr2l,c
  5569  0171A6  0E04               	movlw	high (_D+16)
  5570  0171A8  20F4               	addwfc	prodh,w,c
  5571  0171AA  6EDA               	movwf	fsr2h,c
  5572  0171AC  0E00               	movlw	0
  5573  0171AE  6EDF               	movwf	indf2,c
  5574                           
  5575                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5576                           ;stkvar	_vterm @ sp[(0)+-1]
  5577  0171B0  0EFF               	movlw	-1
  5578  0171B2  50E3               	movf	plusw1,w,c
  5579  0171B4  0D36               	mullw	54
  5580  0171B6  0E22               	movlw	low (_D+34)
  5581  0171B8  24F3               	addwf	243,w,c
  5582  0171BA  6ED9               	movwf	fsr2l,c
  5583  0171BC  0E04               	movlw	high (_D+34)
  5584  0171BE  20F4               	addwfc	prodh,w,c
  5585  0171C0  6EDA               	movwf	fsr2h,c
  5586  0171C2  0E00               	movlw	0
  5587  0171C4  6EDF               	movwf	indf2,c
  5588                           
  5589                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5590                           ;stkvar	_vterm @ sp[(0)+-1]
  5591  0171C6  0EFF               	movlw	-1
  5592  0171C8  50E3               	movf	plusw1,w,c
  5593  0171CA  0D36               	mullw	54
  5594  0171CC  0E34               	movlw	low (_D+52)
  5595  0171CE  24F3               	addwf	243,w,c
  5596  0171D0  6ED9               	movwf	fsr2l,c
  5597  0171D2  0E04               	movlw	high (_D+52)
  5598  0171D4  20F4               	addwfc	prodh,w,c
  5599  0171D6  6EDA               	movwf	fsr2h,c
  5600  0171D8  0E00               	movlw	0
  5601  0171DA  6EDF               	movwf	indf2,c
  5602                           
  5603                           ; BSR set to: 4
  5604                           ;mconfig.c: 92:  wait_lcd_done();
  5605  0171DC  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5609                           ;stkvar	_vterm @ sp[(0)+-1]
  5610  0171E0  0EFF               	movlw	-1
  5611  0171E2  50E3               	movf	plusw1,w,c
  5612  0171E4  0D36               	mullw	54
  5613  0171E6  0E00               	movlw	low _D
  5614  0171E8  6E3F               	movwf	(btemp+10)^0,c
  5615  0171EA  0E04               	movlw	high _D
  5616  0171EC  6E40               	movwf	(btemp+11)^0,c
  5617  0171EE  50F3               	movf	243,w,c
  5618  0171F0  263F               	addwf	(btemp+10)^0,f,c
  5619  0171F2  50F4               	movf	244,w,c
  5620  0171F4  2240               	addwfc	(btemp+11)^0,f,c
  5621  0171F6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5622  0171FC  0060  F103  FFE6   	movff	btemp+11,postinc1
  5623  017202  0E00               	movlw	0
  5624  017204  6EE6               	movwf	postinc1,c
  5625  017206  0E00               	movlw	0
  5626  017208  6EE6               	movwf	postinc1,c
  5627  01720A  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5628                           
  5629                           ; BSR set to: 59
  5630                           ;mconfig.c: 94:  wait_lcd_done();
  5631  01720E  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5635                           ;stkvar	_vterm @ sp[(0)+-1]
  5636  017212  0EFF               	movlw	-1
  5637  017214  50E3               	movf	plusw1,w,c
  5638  017216  0D36               	mullw	54
  5639  017218  0E00               	movlw	low _D
  5640  01721A  6E3F               	movwf	(btemp+10)^0,c
  5641  01721C  0E04               	movlw	high _D
  5642  01721E  6E40               	movwf	(btemp+11)^0,c
  5643  017220  0E12               	movlw	18
  5644  017222  263F               	addwf	(btemp+10)^0,f,c
  5645  017224  0E00               	movlw	0
  5646  017226  2240               	addwfc	(btemp+11)^0,f,c
  5647  017228  50F3               	movf	243,w,c
  5648  01722A  263F               	addwf	(btemp+10)^0,f,c
  5649  01722C  50F4               	movf	244,w,c
  5650  01722E  2240               	addwfc	(btemp+11)^0,f,c
  5651  017230  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5652  017236  0060  F103  FFE6   	movff	btemp+11,postinc1
  5653  01723C  0E00               	movlw	0
  5654  01723E  6EE6               	movwf	postinc1,c
  5655  017240  0E01               	movlw	1
  5656  017242  6EE6               	movwf	postinc1,c
  5657  017244  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5658                           
  5659                           ; BSR set to: 59
  5660                           ;mconfig.c: 96:  wait_lcd_done();
  5661  017248  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5665                           ;stkvar	_vterm @ sp[(0)+-1]
  5666  01724C  0EFF               	movlw	-1
  5667  01724E  50E3               	movf	plusw1,w,c
  5668  017250  0D36               	mullw	54
  5669  017252  0E00               	movlw	low _D
  5670  017254  6E3F               	movwf	(btemp+10)^0,c
  5671  017256  0E04               	movlw	high _D
  5672  017258  6E40               	movwf	(btemp+11)^0,c
  5673  01725A  0E24               	movlw	36
  5674  01725C  263F               	addwf	(btemp+10)^0,f,c
  5675  01725E  0E00               	movlw	0
  5676  017260  2240               	addwfc	(btemp+11)^0,f,c
  5677  017262  50F3               	movf	243,w,c
  5678  017264  263F               	addwf	(btemp+10)^0,f,c
  5679  017266  50F4               	movf	244,w,c
  5680  017268  2240               	addwfc	(btemp+11)^0,f,c
  5681  01726A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5682  017270  0060  F103  FFE6   	movff	btemp+11,postinc1
  5683  017276  0E00               	movlw	0
  5684  017278  6EE6               	movwf	postinc1,c
  5685  01727A  0E02               	movlw	2
  5686  01727C  6EE6               	movwf	postinc1,c
  5687  01727E  ECAF  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5688  017282                     l1562:
  5689                           
  5690                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5691  017282  52E5               	movf	postdec1,f,c
  5692  017284  0012               	return		;funcret
  5693  017286                     __end_of_update_lcd:
  5694                           	opt callstack 0
  5695                           
  5696 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5697 ;; Defined at:
  5698 ;;		line 252 in file "eadog.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  r               1  [STACK] const unsigned char 
  5701 ;;  c               1  [STACK] const unsigned char 
  5702 ;;  strPtr          2  [STACK] PTR unsigned char 
  5703 ;;		 -> D.lcd(216), D(218), V(187), 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1  [STACK] void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5710 ;; Tracked objects:
  5711 ;;		On entry : 3F/0
  5712 ;;		On exit  : 3F/3B
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:   16
  5722 ;; This function calls:
  5723 ;;		_eaDogM_WriteString
  5724 ;;		_send_lcd_cmd_dma
  5725 ;; This function is called by:
  5726 ;;		_update_lcd
  5727 ;;		_vterm_dump
  5728 ;; This function uses a reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text24
  5732  01875E                     __ptext24:
  5733                           	opt callstack 0
  5734  01875E                     _eaDogM_WriteStringAtPos:
  5735                           	opt callstack 13
  5736                           
  5737                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5738                           ;stkvar	_c @ sp[(0)+-2]
  5739                           
  5740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5741                           ;incstack = 0
  5742  01875E  0EFE               	movlw	-2
  5743  018760  006F FF8C  F040    	movff	plusw1,btemp+11
  5744                           
  5745                           ;stkvar	_r @ sp[(0)+-1]
  5746  018766  0EFF               	movlw	-1
  5747  018768  50E3               	movf	plusw1,w,c
  5748  01876A  0D10               	mullw	16
  5749  01876C  50F3               	movf	243,w,c
  5750  01876E  2440               	addwf	(btemp+11)^0,w,c
  5751  018770  0F80               	addlw	128
  5752  018772  6EE6               	movwf	postinc1,c
  5753  018774  EC96  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  5754                           
  5755                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5756                           ;stkvar	_strPtr @ sp[(0)+-4]
  5757  018778  0EFC               	movlw	-4
  5758  01877A  006F FF8F FFE6     	movff	plusw1,postinc1
  5759  018780  006F FF8F FFE6     	movff	plusw1,postinc1
  5760  018786  EC73  F0BC         	call	_eaDogM_WriteString	;wreg free
  5761                           
  5762                           ; BSR set to: 59
  5763                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5764  01878A  52E5               	movf	postdec1,f,c
  5765  01878C  52E5               	movf	postdec1,f,c
  5766  01878E  52E5               	movf	postdec1,f,c
  5767  018790  52E5               	movf	postdec1,f,c
  5768  018792  0012               	return		;funcret
  5769  018794                     __end_of_eaDogM_WriteStringAtPos:
  5770                           	opt callstack 0
  5771                           
  5772 ;; *************** function _send_lcd_cmd_dma *****************
  5773 ;; Defined at:
  5774 ;;		line 205 in file "eadog.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  strPtr          1  [STACK] unsigned char 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1  [STACK] void 
  5781 ;; Registers used:
  5782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/3D
  5785 ;;		On exit  : 3F/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:   15
  5795 ;; This function calls:
  5796 ;;		_printf
  5797 ;;		_ringBufS_flush
  5798 ;;		_start_lcd
  5799 ;;		_wait_lcd_done
  5800 ;;		_wait_lcd_set
  5801 ;; This function is called by:
  5802 ;;		_eaDogM_WriteCommand
  5803 ;;		_eaDogM_WriteStringAtPos
  5804 ;; This function uses a reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text25
  5808  01832C                     __ptext25:
  5809                           	opt callstack 0
  5810  01832C                     _send_lcd_cmd_dma:
  5811                           	opt callstack 13
  5812                           
  5813                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5814                           
  5815                           ; BSR set to: 59
  5816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5817                           ;incstack = 0
  5818  01832C  EC94  F0C7         	call	_wait_lcd_set	;wreg free
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5822  018330  0E00               	movlw	0
  5823  018332  6EE6               	movwf	postinc1,c
  5824  018334  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5825  01833A  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5826  018340  ECB0  F0BD         	call	_ringBufS_flush	;wreg free
  5827  018344  92BC               	bcf	188,1,c	;volatile
  5828  018346  94BC               	bcf	188,2,c	;volatile
  5829                           
  5830                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5831  018348  013B               	movlb	59	; () banked
  5832  01834A  9FFC               	bcf	252,7,b	;volatile
  5833                           
  5834                           ; BSR set to: 59
  5835                           ;eadog.c: 214:  DMA1SSZ = 1;
  5836  01834C  0E00               	movlw	0
  5837  01834E  6FF8               	movwf	248,b	;volatile
  5838  018350  0E01               	movlw	1
  5839  018352  6FF7               	movwf	247,b	;volatile
  5840                           
  5841                           ; BSR set to: 59
  5842                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5843  018354  8FFC               	bsf	252,7,b	;volatile
  5844                           
  5845                           ; BSR set to: 59
  5846                           ;eadog.c: 216:  printf("%c", strPtr);
  5847                           ;stkvar	_strPtr @ sp[(0)+-1]
  5848  018356  0EFF               	movlw	-1
  5849  018358  50E3               	movf	plusw1,w,c
  5850  01835A  6EE6               	movwf	postinc1,c
  5851  01835C  0E00               	movlw	0
  5852  01835E  6EE6               	movwf	postinc1,c
  5853  018360  0EF9               	movlw	low STR_13
  5854  018362  6EE6               	movwf	postinc1,c
  5855  018364  0EFF               	movlw	high STR_13
  5856  018366  6EE6               	movwf	postinc1,c
  5857  018368  0E04               	movlw	4
  5858  01836A  6EE6               	movwf	postinc1,c
  5859  01836C  ECAE  F0C0         	call	_printf	;wreg free
  5860                           
  5861                           ;eadog.c: 217:  start_lcd();
  5862  018370  EC97  F0C7         	call	_start_lcd	;wreg free
  5863                           
  5864                           ; BSR set to: 59
  5865                           ;eadog.c: 218:  wait_lcd_done();
  5866  018374  ECB6  F0C6         	call	_wait_lcd_done	;wreg free
  5867                           
  5868                           ; BSR set to: 0
  5869  018378  82BC               	bsf	188,1,c	;volatile
  5870                           
  5871                           ; BSR set to: 0
  5872                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5873  01837A  52E5               	movf	postdec1,f,c
  5874  01837C  0012               	return		;funcret
  5875  01837E                     __end_of_send_lcd_cmd_dma:
  5876                           	opt callstack 0
  5877                           
  5878 ;; *************** function _wait_lcd_done *****************
  5879 ;; Defined at:
  5880 ;;		line 141 in file "eadog.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1  [STACK] void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/1
  5891 ;;		On exit  : 3F/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    7
  5901 ;; This function calls:
  5902 ;;		_wdtdelay
  5903 ;; This function is called by:
  5904 ;;		_send_lcd_cmd_dma
  5905 ;;		_update_lcd
  5906 ;;		_vterm_dump
  5907 ;; This function uses a reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text26
  5911  018D6C                     __ptext26:
  5912                           	opt callstack 0
  5913  018D6C                     _wait_lcd_done:
  5914                           	opt callstack 22
  5915                           
  5916                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5917                           
  5918                           ; BSR set to: 0
  5919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5920                           ;incstack = 0
  5921  018D6C  0100               	movlb	0	; () banked
  5922  018D6E  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5923  018D70  D7FD               	goto	_wait_lcd_done
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;eadog.c: 144:  wdtdelay(50);
  5927  018D72  0E32               	movlw	50
  5928  018D74  6EE6               	movwf	postinc1,c
  5929  018D76  0E00               	movlw	0
  5930  018D78  6EE6               	movwf	postinc1,c
  5931  018D7A  0E00               	movlw	0
  5932  018D7C  6EE6               	movwf	postinc1,c
  5933  018D7E  0E00               	movlw	0
  5934  018D80  6EE6               	movwf	postinc1,c
  5935  018D82  EC3C  F0C1         	call	_wdtdelay	;wreg free
  5936                           
  5937                           ; BSR set to: 0
  5938                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5939  018D86  0012               	return		;funcret
  5940  018D88                     __end_of_wait_lcd_done:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function _wdtdelay *****************
  5944 ;; Defined at:
  5945 ;;		line 22 in file "eadog.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  delay           4  [STACK] const unsigned long 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1  [STACK] void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 3F/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5963 ;;Total ram usage:        0 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    6
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_init_display
  5970 ;;		_send_lcd_cmd
  5971 ;;		_send_lcd_cmd_long
  5972 ;;		_wait_lcd_done
  5973 ;; This function uses a reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text27
  5977  018278                     __ptext27:
  5978                           	opt callstack 0
  5979  018278                     _wdtdelay:
  5980                           	opt callstack 22
  5981                           
  5982                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5983                           
  5984                           ; BSR set to: 0
  5985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5986                           ;incstack = 0
  5987  018278  0100               	movlb	0	; () banked
  5988  01827A  6B90               	clrf	wdtdelay@dcount& (0+255),b
  5989  01827C  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5990  01827E  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5991  018280  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5992  018282                     l1329:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;eadog.c: 27:   __nop();
  5996  018282  F000               	nop	
  5997  018284  0004               	clrwdt		;# 
  5998                           
  5999                           ;eadog.c: 29:  };
  6000  018286  0E01               	movlw	1
  6001  018288  0100               	movlb	0	; () banked
  6002  01828A  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6003  01828C  0E00               	movlw	0
  6004  01828E  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6005  018290  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6006  018292  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;stkvar	_delay @ sp[(0)+-4]
  6010  018294  0EFC               	movlw	-4
  6011  018296  006F FF8C  F035    	movff	plusw1,btemp
  6012  01829C  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6013  01829E  5C35               	subwf	btemp^0,w,c
  6014  0182A0  0EFD               	movlw	-3
  6015  0182A2  006F FF8C  F035    	movff	plusw1,btemp
  6016  0182A8  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6017  0182AA  5835               	subwfb	btemp^0,w,c
  6018  0182AC  0EFE               	movlw	-2
  6019  0182AE  006F FF8C  F035    	movff	plusw1,btemp
  6020  0182B4  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6021  0182B6  5835               	subwfb	btemp^0,w,c
  6022  0182B8  0EFF               	movlw	-1
  6023  0182BA  006F FF8C  F035    	movff	plusw1,btemp
  6024  0182C0  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6025  0182C2  5835               	subwfb	btemp^0,w,c
  6026  0182C4  B0D8               	btfsc	status,0,c
  6027  0182C6  D7DD               	goto	l1329
  6028                           
  6029                           ; BSR set to: 0
  6030                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6031  0182C8  52E5               	movf	postdec1,f,c
  6032  0182CA  52E5               	movf	postdec1,f,c
  6033  0182CC  52E5               	movf	postdec1,f,c
  6034  0182CE  52E5               	movf	postdec1,f,c
  6035  0182D0  0012               	return		;funcret
  6036  0182D2                     __end_of_wdtdelay:
  6037                           	opt callstack 0
  6038                           
  6039 ;; *************** function _eaDogM_WriteString *****************
  6040 ;; Defined at:
  6041 ;;		line 184 in file "eadog.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  strPtr          2  [STACK] PTR unsigned char 
  6044 ;;		 -> D.lcd(216), D(218), V(187), 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1  [STACK] void 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6051 ;; Tracked objects:
  6052 ;;		On entry : 3F/0
  6053 ;;		On exit  : 3F/3B
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:   15
  6063 ;; This function calls:
  6064 ;;		_printf
  6065 ;;		_ringBufS_flush
  6066 ;;		_start_lcd
  6067 ;;		_strlen
  6068 ;;		_wait_lcd_set
  6069 ;; This function is called by:
  6070 ;;		_eaDogM_WriteStringAtPos
  6071 ;; This function uses a reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text28
  6075  0178E6                     __ptext28:
  6076                           	opt callstack 0
  6077  0178E6                     _eaDogM_WriteString:
  6078                           	opt callstack 13
  6079                           
  6080                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6081                           
  6082                           ; BSR set to: 0
  6083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6084                           ;incstack = 0
  6085  0178E6  EC94  F0C7         	call	_wait_lcd_set	;wreg free
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6089  0178EA  0E00               	movlw	0
  6090  0178EC  6EE6               	movwf	postinc1,c
  6091  0178EE  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6092  0178F4  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6093  0178FA  ECB0  F0BD         	call	_ringBufS_flush	;wreg free
  6094  0178FE  94BC               	bcf	188,2,c	;volatile
  6095                           
  6096                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6097                           ;stkvar	_strPtr @ sp[(0)+-2]
  6098  017900  0EFE               	movlw	-2
  6099  017902  006F FF8F FFE6     	movff	plusw1,postinc1
  6100  017908  006F FF8F FFE6     	movff	plusw1,postinc1
  6101  01790E  ECC6  F0BC         	call	_strlen	;wreg free
  6102  017912  5036               	movf	(btemp+1)^0,w,c
  6103  017914  E104               	bnz	u10640
  6104  017916  0E41               	movlw	65
  6105  017918  5C35               	subwf	btemp^0,w,c
  6106  01791A  A0D8               	btfss	status,0,c
  6107  01791C  D010               	goto	l10156
  6108  01791E                     u10640:
  6109                           
  6110                           ;stkvar	_strPtr @ sp[(0)+-2]
  6111  01791E  0EFE               	movlw	-2
  6112  017920  006F FF8C  F03F    	movff	plusw1,btemp+10
  6113  017926  0EFF               	movlw	-1
  6114  017928  006F FF8C  F040    	movff	plusw1,btemp+11
  6115  01792E  0E40               	movlw	64
  6116  017930  243F               	addwf	(btemp+10)^0,w,c
  6117  017932  6ED9               	movwf	fsr2l,c
  6118  017934  0E00               	movlw	0
  6119  017936  2040               	addwfc	(btemp+11)^0,w,c
  6120  017938  6EDA               	movwf	fsr2h,c
  6121  01793A  0E00               	movlw	0
  6122  01793C  6EDF               	movwf	indf2,c
  6123  01793E                     l10156:
  6124                           
  6125                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6126  01793E  013B               	movlb	59	; () banked
  6127  017940  9FFC               	bcf	252,7,b	;volatile
  6128                           
  6129                           ; BSR set to: 59
  6130                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6131                           ;stkvar	_strPtr @ sp[(0)+-2]
  6132  017942  0EFE               	movlw	-2
  6133  017944  006F FF8F FFE6     	movff	plusw1,postinc1
  6134  01794A  006F FF8F FFE6     	movff	plusw1,postinc1
  6135  017950  ECC6  F0BC         	call	_strlen	;wreg free
  6136  017954  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  6137  01795A  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  6138                           
  6139                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6140  017960  013B               	movlb	59	; () banked
  6141  017962  8FFC               	bsf	252,7,b	;volatile
  6142                           
  6143                           ; BSR set to: 59
  6144                           ;eadog.c: 195:  printf("%s", strPtr);
  6145                           ;stkvar	_strPtr @ sp[(0)+-2]
  6146  017964  0EFE               	movlw	-2
  6147  017966  006F FF8F FFE6     	movff	plusw1,postinc1
  6148  01796C  006F FF8F FFE6     	movff	plusw1,postinc1
  6149  017972  0EFC               	movlw	low STR_12
  6150  017974  6EE6               	movwf	postinc1,c
  6151  017976  0EFF               	movlw	high STR_12
  6152  017978  6EE6               	movwf	postinc1,c
  6153  01797A  0E04               	movlw	4
  6154  01797C  6EE6               	movwf	postinc1,c
  6155  01797E  ECAE  F0C0         	call	_printf	;wreg free
  6156                           
  6157                           ;eadog.c: 196:  start_lcd();
  6158  017982  EC97  F0C7         	call	_start_lcd	;wreg free
  6159                           
  6160                           ; BSR set to: 59
  6161                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6162  017986  52E5               	movf	postdec1,f,c
  6163  017988  52E5               	movf	postdec1,f,c
  6164  01798A  0012               	return		;funcret
  6165  01798C                     __end_of_eaDogM_WriteString:
  6166                           	opt callstack 0
  6167                           
  6168 ;; *************** function _wait_lcd_set *****************
  6169 ;; Defined at:
  6170 ;;		line 131 in file "eadog.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1  [STACK] void 
  6177 ;; Registers used:
  6178 ;;		None
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/3D
  6181 ;;		On exit  : 3F/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    6
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_eaDogM_WriteString
  6195 ;;		_send_lcd_cmd_dma
  6196 ;; This function uses a reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text29
  6200  018F28                     __ptext29:
  6201                           	opt callstack 0
  6202  018F28                     _wait_lcd_set:
  6203                           	opt callstack 21
  6204                           
  6205                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6206                           
  6207                           ; BSR set to: 59
  6208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6209                           ;incstack = 0
  6210  018F28  0100               	movlb	0	; () banked
  6211  018F2A  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6212                           
  6213                           ; BSR set to: 0
  6214                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6215  018F2C  0012               	return		;funcret
  6216  018F2E                     __end_of_wait_lcd_set:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _start_lcd *****************
  6220 ;; Defined at:
  6221 ;;		line 126 in file "eadog.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1  [STACK] void 
  6228 ;; Registers used:
  6229 ;;		None
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/3B
  6232 ;;		On exit  : 3F/3B
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    6
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_eaDogM_WriteString
  6246 ;;		_send_lcd_cmd_dma
  6247 ;; This function uses a reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text30
  6251  018F2E                     __ptext30:
  6252                           	opt callstack 0
  6253  018F2E                     _start_lcd:
  6254                           	opt callstack 21
  6255                           
  6256                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6257                           
  6258                           ; BSR set to: 0
  6259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6260                           ;incstack = 0
  6261  018F2E  013B               	movlb	59	; () banked
  6262  018F30  8DFC               	bsf	252,6,b	;volatile
  6263                           
  6264                           ; BSR set to: 59
  6265                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6266  018F32  0012               	return		;funcret
  6267  018F34                     __end_of_start_lcd:
  6268                           	opt callstack 0
  6269                           
  6270 ;; *************** function _ringBufS_flush *****************
  6271 ;; Defined at:
  6272 ;;		line 76 in file "ringbufs.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6275 ;;		 -> ring_buf1(67), 
  6276 ;;  clearBuffer     1  [STACK] const char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1  [STACK] void 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6283 ;; Tracked objects:
  6284 ;;		On entry : 3F/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    7
  6295 ;; This function calls:
  6296 ;;		_memset
  6297 ;; This function is called by:
  6298 ;;		_eaDogM_WriteString
  6299 ;;		_send_lcd_cmd_dma
  6300 ;; This function uses a reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text31
  6304  017B60                     __ptext31:
  6305                           	opt callstack 0
  6306  017B60                     _ringBufS_flush:
  6307                           	opt callstack 20
  6308                           
  6309                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6310                           ;stkvar	__this @ sp[(0)+-2]
  6311                           
  6312                           ; BSR set to: 59
  6313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6314                           ;incstack = 0
  6315  017B60  0EFE               	movlw	-2
  6316  017B62  006F FF8C  F03F    	movff	plusw1,btemp+10
  6317  017B68  0EFF               	movlw	-1
  6318  017B6A  006F FF8C  F040    	movff	plusw1,btemp+11
  6319  017B70  0E42               	movlw	66
  6320  017B72  243F               	addwf	(btemp+10)^0,w,c
  6321  017B74  6ED9               	movwf	fsr2l,c
  6322  017B76  0E00               	movlw	0
  6323  017B78  2040               	addwfc	(btemp+11)^0,w,c
  6324  017B7A  6EDA               	movwf	fsr2h,c
  6325  017B7C  0E00               	movlw	0
  6326  017B7E  6EDF               	movwf	indf2,c
  6327                           
  6328                           ;ringbufs.c: 79:  _this->head = 0;
  6329                           ;stkvar	__this @ sp[(0)+-2]
  6330  017B80  0EFE               	movlw	-2
  6331  017B82  006F FF8C  F03F    	movff	plusw1,btemp+10
  6332  017B88  0EFF               	movlw	-1
  6333  017B8A  006F FF8C  F040    	movff	plusw1,btemp+11
  6334  017B90  0E40               	movlw	64
  6335  017B92  243F               	addwf	(btemp+10)^0,w,c
  6336  017B94  6ED9               	movwf	fsr2l,c
  6337  017B96  0E00               	movlw	0
  6338  017B98  2040               	addwfc	(btemp+11)^0,w,c
  6339  017B9A  6EDA               	movwf	fsr2h,c
  6340  017B9C  0E00               	movlw	0
  6341  017B9E  6EDF               	movwf	indf2,c
  6342                           
  6343                           ;ringbufs.c: 80:  _this->tail = 0;
  6344                           ;stkvar	__this @ sp[(0)+-2]
  6345  017BA0  0EFE               	movlw	-2
  6346  017BA2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6347  017BA8  0EFF               	movlw	-1
  6348  017BAA  006F FF8C  F040    	movff	plusw1,btemp+11
  6349  017BB0  0E41               	movlw	65
  6350  017BB2  243F               	addwf	(btemp+10)^0,w,c
  6351  017BB4  6ED9               	movwf	fsr2l,c
  6352  017BB6  0E00               	movlw	0
  6353  017BB8  2040               	addwfc	(btemp+11)^0,w,c
  6354  017BBA  6EDA               	movwf	fsr2h,c
  6355  017BBC  0E00               	movlw	0
  6356  017BBE  6EDF               	movwf	indf2,c
  6357                           
  6358                           ;ringbufs.c: 81:  if (clearBuffer) {
  6359                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6360  017BC0  0EFD               	movlw	-3
  6361  017BC2  50E3               	movf	plusw1,w,c
  6362  017BC4  B4D8               	btfsc	status,2,c
  6363  017BC6  D011               	goto	l1469
  6364                           
  6365                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6366  017BC8  0E40               	movlw	64
  6367  017BCA  6EE6               	movwf	postinc1,c
  6368  017BCC  0E00               	movlw	0
  6369  017BCE  6EE6               	movwf	postinc1,c
  6370  017BD0  0E00               	movlw	0
  6371  017BD2  6EE6               	movwf	postinc1,c
  6372  017BD4  0E00               	movlw	0
  6373  017BD6  6EE6               	movwf	postinc1,c
  6374                           
  6375                           ;stkvar	__this @ sp[(-4)+-2]
  6376  017BD8  0EFA               	movlw	-6
  6377  017BDA  006F FF8F FFE6     	movff	plusw1,postinc1
  6378  017BE0  006F FF8F FFE6     	movff	plusw1,postinc1
  6379  017BE6  ECD7  F0A7         	call	_memset	;wreg free
  6380  017BEA                     l1469:
  6381                           
  6382                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6383  017BEA  52E5               	movf	postdec1,f,c
  6384  017BEC  52E5               	movf	postdec1,f,c
  6385  017BEE  52E5               	movf	postdec1,f,c
  6386  017BF0  0012               	return		;funcret
  6387  017BF2                     __end_of_ringBufS_flush:
  6388                           	opt callstack 0
  6389                           
  6390 ;; *************** function _memset *****************
  6391 ;; Defined at:
  6392 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  dest            2  [STACK] PTR void 
  6395 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6396 ;;  c               2  [STACK] int 
  6397 ;;  n               2  [STACK] unsigned int 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  s               2  [STACK] PTR unsigned char 
  6400 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6401 ;;  k               2  [STACK] unsigned int 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  2  [STACK] PTR void 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    6
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_ringBufS_init
  6422 ;;		_ringBufS_flush
  6423 ;; This function uses a reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text32
  6427  014FAE                     __ptext32:
  6428                           	opt callstack 0
  6429  014FAE                     _memset:
  6430                           	opt callstack 0
  6431                           
  6432                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6433  014FAE  52E6               	movf	postinc1,f,c
  6434  014FB0  52E6               	movf	postinc1,f,c
  6435  014FB2  52E6               	movf	postinc1,f,c
  6436  014FB4  52E6               	movf	postinc1,f,c
  6437                           
  6438                           ;stkvar	_dest @ sp[(-4)+-2]
  6439                           
  6440                           ;incstack = 0
  6441  014FB6  0EFA               	movlw	-6
  6442  014FB8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6443  014FBE  0EFB               	movlw	-5
  6444  014FC0  006F FF8C  F040    	movff	plusw1,btemp+11
  6445                           
  6446                           ;stkvar	_s @ sp[(-4)+0]
  6447  014FC6  0EFD               	movlw	-3
  6448  014FC8  0060  F103  FFE3   	movff	btemp+11,plusw1
  6449  014FCE  0EFC               	movlw	-4
  6450  014FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6451                           
  6452                           ;stkvar	_n @ sp[(-4)+-6]
  6453  014FD6  0EF6               	movlw	-10
  6454  014FD8  006F FF8C  F035    	movff	plusw1,btemp
  6455  014FDE  0EF7               	movlw	-9
  6456  014FE0  50E3               	movf	plusw1,w,c
  6457  014FE2  1035               	iorwf	btemp^0,w,c
  6458  014FE4  B4D8               	btfsc	status,2,c
  6459  014FE6  D154               	goto	u10610
  6460                           
  6461                           ;stkvar	_c @ sp[(-4)+-4]
  6462                           ;stkvar	_s @ sp[(-4)+0]
  6463  014FE8  0EFC               	movlw	-4
  6464  014FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6465  014FF0  0EFD               	movlw	-3
  6466  014FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6467  014FF8  0EF8               	movlw	-8
  6468  014FFA  006F FF8F FFDF     	movff	plusw1,indf2
  6469                           
  6470                           ;stkvar	_c @ sp[(-4)+-4]
  6471                           ;stkvar	_n @ sp[(-4)+-6]
  6472                           ;stkvar	_s @ sp[(-4)+0]
  6473  015000  0EFC               	movlw	-4
  6474  015002  006F FF8C  F03F    	movff	plusw1,btemp+10
  6475  015008  0EFD               	movlw	-3
  6476  01500A  006F FF8C  F040    	movff	plusw1,btemp+11
  6477  015010  0EF6               	movlw	-10
  6478  015012  50E3               	movf	plusw1,w,c
  6479  015014  263F               	addwf	(btemp+10)^0,f,c
  6480  015016  0EF7               	movlw	-9
  6481  015018  50E3               	movf	plusw1,w,c
  6482  01501A  2240               	addwfc	(btemp+11)^0,f,c
  6483  01501C  0EFF               	movlw	255
  6484  01501E  243F               	addwf	(btemp+10)^0,w,c
  6485  015020  6ED9               	movwf	fsr2l,c
  6486  015022  0EFF               	movlw	255
  6487  015024  2040               	addwfc	(btemp+11)^0,w,c
  6488  015026  6EDA               	movwf	fsr2h,c
  6489  015028  0EF8               	movlw	-8
  6490  01502A  006F FF8F FFDF     	movff	plusw1,indf2
  6491                           
  6492                           ;stkvar	_n @ sp[(-4)+-6]
  6493  015030  0EF7               	movlw	-9
  6494  015032  50E3               	movf	plusw1,w,c
  6495  015034  E108               	bnz	l10072
  6496  015036  0EF6               	movlw	-10
  6497  015038  006F FF8C  F035    	movff	plusw1,btemp
  6498  01503E  0E03               	movlw	3
  6499  015040  5E35               	subwf	btemp^0,f,c
  6500  015042  A0D8               	btfss	status,0,c
  6501  015044  D125               	goto	u10610
  6502  015046                     l10072:
  6503                           
  6504                           ;stkvar	_c @ sp[(-4)+-4]
  6505                           ;stkvar	_s @ sp[(-4)+0]
  6506  015046  0EFC               	movlw	-4
  6507  015048  006F FF8C  F03F    	movff	plusw1,btemp+10
  6508  01504E  0EFD               	movlw	-3
  6509  015050  006F FF8C  F040    	movff	plusw1,btemp+11
  6510  015056  0E01               	movlw	1
  6511  015058  243F               	addwf	(btemp+10)^0,w,c
  6512  01505A  6ED9               	movwf	fsr2l,c
  6513  01505C  0E00               	movlw	0
  6514  01505E  2040               	addwfc	(btemp+11)^0,w,c
  6515  015060  6EDA               	movwf	fsr2h,c
  6516  015062  0EF8               	movlw	-8
  6517  015064  006F FF8F FFDF     	movff	plusw1,indf2
  6518                           
  6519                           ;stkvar	_c @ sp[(-4)+-4]
  6520                           ;stkvar	_s @ sp[(-4)+0]
  6521  01506A  0EFC               	movlw	-4
  6522  01506C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6523  015072  0EFD               	movlw	-3
  6524  015074  006F FF8C  F040    	movff	plusw1,btemp+11
  6525  01507A  0E02               	movlw	2
  6526  01507C  243F               	addwf	(btemp+10)^0,w,c
  6527  01507E  6ED9               	movwf	fsr2l,c
  6528  015080  0E00               	movlw	0
  6529  015082  2040               	addwfc	(btemp+11)^0,w,c
  6530  015084  6EDA               	movwf	fsr2h,c
  6531  015086  0EF8               	movlw	-8
  6532  015088  006F FF8F FFDF     	movff	plusw1,indf2
  6533                           
  6534                           ;stkvar	_c @ sp[(-4)+-4]
  6535                           ;stkvar	_n @ sp[(-4)+-6]
  6536                           ;stkvar	_s @ sp[(-4)+0]
  6537  01508E  0EFC               	movlw	-4
  6538  015090  006F FF8C  F03F    	movff	plusw1,btemp+10
  6539  015096  0EFD               	movlw	-3
  6540  015098  006F FF8C  F040    	movff	plusw1,btemp+11
  6541  01509E  0EF6               	movlw	-10
  6542  0150A0  50E3               	movf	plusw1,w,c
  6543  0150A2  263F               	addwf	(btemp+10)^0,f,c
  6544  0150A4  0EF7               	movlw	-9
  6545  0150A6  50E3               	movf	plusw1,w,c
  6546  0150A8  2240               	addwfc	(btemp+11)^0,f,c
  6547  0150AA  0EFE               	movlw	254
  6548  0150AC  243F               	addwf	(btemp+10)^0,w,c
  6549  0150AE  6ED9               	movwf	fsr2l,c
  6550  0150B0  0EFF               	movlw	255
  6551  0150B2  2040               	addwfc	(btemp+11)^0,w,c
  6552  0150B4  6EDA               	movwf	fsr2h,c
  6553  0150B6  0EF8               	movlw	-8
  6554  0150B8  006F FF8F FFDF     	movff	plusw1,indf2
  6555                           
  6556                           ;stkvar	_c @ sp[(-4)+-4]
  6557                           ;stkvar	_n @ sp[(-4)+-6]
  6558                           ;stkvar	_s @ sp[(-4)+0]
  6559  0150BE  0EFC               	movlw	-4
  6560  0150C0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6561  0150C6  0EFD               	movlw	-3
  6562  0150C8  006F FF8C  F040    	movff	plusw1,btemp+11
  6563  0150CE  0EF6               	movlw	-10
  6564  0150D0  50E3               	movf	plusw1,w,c
  6565  0150D2  263F               	addwf	(btemp+10)^0,f,c
  6566  0150D4  0EF7               	movlw	-9
  6567  0150D6  50E3               	movf	plusw1,w,c
  6568  0150D8  2240               	addwfc	(btemp+11)^0,f,c
  6569  0150DA  0EFD               	movlw	253
  6570  0150DC  243F               	addwf	(btemp+10)^0,w,c
  6571  0150DE  6ED9               	movwf	fsr2l,c
  6572  0150E0  0EFF               	movlw	255
  6573  0150E2  2040               	addwfc	(btemp+11)^0,w,c
  6574  0150E4  6EDA               	movwf	fsr2h,c
  6575  0150E6  0EF8               	movlw	-8
  6576  0150E8  006F FF8F FFDF     	movff	plusw1,indf2
  6577                           
  6578                           ;stkvar	_n @ sp[(-4)+-6]
  6579  0150EE  0EF7               	movlw	-9
  6580  0150F0  50E3               	movf	plusw1,w,c
  6581  0150F2  E108               	bnz	l10078
  6582  0150F4  0EF6               	movlw	-10
  6583  0150F6  006F FF8C  F035    	movff	plusw1,btemp
  6584  0150FC  0E07               	movlw	7
  6585  0150FE  5E35               	subwf	btemp^0,f,c
  6586  015100  A0D8               	btfss	status,0,c
  6587  015102  D0C6               	goto	u10610
  6588  015104                     l10078:
  6589                           
  6590                           ;stkvar	_c @ sp[(-4)+-4]
  6591                           ;stkvar	_s @ sp[(-4)+0]
  6592  015104  0EFC               	movlw	-4
  6593  015106  006F FF8C  F03F    	movff	plusw1,btemp+10
  6594  01510C  0EFD               	movlw	-3
  6595  01510E  006F FF8C  F040    	movff	plusw1,btemp+11
  6596  015114  0E03               	movlw	3
  6597  015116  243F               	addwf	(btemp+10)^0,w,c
  6598  015118  6ED9               	movwf	fsr2l,c
  6599  01511A  0E00               	movlw	0
  6600  01511C  2040               	addwfc	(btemp+11)^0,w,c
  6601  01511E  6EDA               	movwf	fsr2h,c
  6602  015120  0EF8               	movlw	-8
  6603  015122  006F FF8F FFDF     	movff	plusw1,indf2
  6604                           
  6605                           ;stkvar	_c @ sp[(-4)+-4]
  6606                           ;stkvar	_n @ sp[(-4)+-6]
  6607                           ;stkvar	_s @ sp[(-4)+0]
  6608  015128  0EFC               	movlw	-4
  6609  01512A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6610  015130  0EFD               	movlw	-3
  6611  015132  006F FF8C  F040    	movff	plusw1,btemp+11
  6612  015138  0EF6               	movlw	-10
  6613  01513A  50E3               	movf	plusw1,w,c
  6614  01513C  263F               	addwf	(btemp+10)^0,f,c
  6615  01513E  0EF7               	movlw	-9
  6616  015140  50E3               	movf	plusw1,w,c
  6617  015142  2240               	addwfc	(btemp+11)^0,f,c
  6618  015144  0EFC               	movlw	252
  6619  015146  243F               	addwf	(btemp+10)^0,w,c
  6620  015148  6ED9               	movwf	fsr2l,c
  6621  01514A  0EFF               	movlw	255
  6622  01514C  2040               	addwfc	(btemp+11)^0,w,c
  6623  01514E  6EDA               	movwf	fsr2h,c
  6624  015150  0EF8               	movlw	-8
  6625  015152  006F FF8F FFDF     	movff	plusw1,indf2
  6626                           
  6627                           ;stkvar	_n @ sp[(-4)+-6]
  6628  015158  0EF7               	movlw	-9
  6629  01515A  50E3               	movf	plusw1,w,c
  6630  01515C  E108               	bnz	l10084
  6631  01515E  0EF6               	movlw	-10
  6632  015160  006F FF8C  F035    	movff	plusw1,btemp
  6633  015166  0E09               	movlw	9
  6634  015168  5E35               	subwf	btemp^0,f,c
  6635  01516A  A0D8               	btfss	status,0,c
  6636  01516C  D091               	goto	u10610
  6637  01516E                     l10084:
  6638                           
  6639                           ;stkvar	_s @ sp[(-4)+0]
  6640  01516E  0EFC               	movlw	-4
  6641  015170  006F FF8C  F03F    	movff	plusw1,btemp+10
  6642  015176  1E3F               	comf	(btemp+10)^0,f,c
  6643  015178  0EFD               	movlw	-3
  6644  01517A  006F FF8C  F040    	movff	plusw1,btemp+11
  6645  015180  1E40               	comf	(btemp+11)^0,f,c
  6646  015182  2A3F               	incf	(btemp+10)^0,f,c
  6647  015184  B4D8               	btfsc	status,2,c
  6648  015186  2A40               	incf	(btemp+11)^0,f,c
  6649  015188  0E03               	movlw	3
  6650  01518A  163F               	andwf	(btemp+10)^0,f,c
  6651  01518C  0E00               	movlw	0
  6652  01518E  1640               	andwf	(btemp+11)^0,f,c
  6653                           
  6654                           ;stkvar	_k @ sp[(-4)+2]
  6655  015190  0EFE               	movlw	-2
  6656  015192  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6657  015198  0EFF               	movlw	-1
  6658  01519A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6659                           
  6660                           ;stkvar	_k @ sp[(-4)+2]
  6661                           ;stkvar	_s @ sp[(-4)+0]
  6662  0151A0  0EFC               	movlw	-4
  6663  0151A2  50E3               	movf	plusw1,w,c
  6664  0151A4  6E35               	movwf	btemp^0,c
  6665  0151A6  0EFE               	movlw	-2
  6666  0151A8  50E3               	movf	plusw1,w,c
  6667  0151AA  2635               	addwf	btemp^0,f,c
  6668  0151AC  0EFC               	movlw	-4
  6669  0151AE  0060  F0D7  FFE3   	movff	btemp,plusw1
  6670  0151B4  0EFD               	movlw	-3
  6671  0151B6  50E3               	movf	plusw1,w,c
  6672  0151B8  6E35               	movwf	btemp^0,c
  6673  0151BA  0EFF               	movlw	-1
  6674  0151BC  50E3               	movf	plusw1,w,c
  6675  0151BE  2235               	addwfc	btemp^0,f,c
  6676  0151C0  0EFD               	movlw	-3
  6677  0151C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  6678                           
  6679                           ;stkvar	_k @ sp[(-4)+2]
  6680                           ;stkvar	_n @ sp[(-4)+-6]
  6681  0151C8  0EF6               	movlw	-10
  6682  0151CA  50E3               	movf	plusw1,w,c
  6683  0151CC  6E35               	movwf	btemp^0,c
  6684  0151CE  0EFE               	movlw	-2
  6685  0151D0  50E3               	movf	plusw1,w,c
  6686  0151D2  5E35               	subwf	btemp^0,f,c
  6687  0151D4  0EF6               	movlw	-10
  6688  0151D6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6689  0151DC  0EF7               	movlw	-9
  6690  0151DE  50E3               	movf	plusw1,w,c
  6691  0151E0  6E35               	movwf	btemp^0,c
  6692  0151E2  0EFF               	movlw	-1
  6693  0151E4  50E3               	movf	plusw1,w,c
  6694  0151E6  5A35               	subwfb	btemp^0,f,c
  6695  0151E8  0EF7               	movlw	-9
  6696  0151EA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6697  0151F0  0EFC               	movlw	252
  6698  0151F2  6E3F               	movwf	(btemp+10)^0,c
  6699  0151F4  0EFF               	movlw	255
  6700  0151F6  6E40               	movwf	(btemp+11)^0,c
  6701                           
  6702                           ;stkvar	_n @ sp[(-4)+-6]
  6703  0151F8  0EF6               	movlw	-10
  6704  0151FA  006F FF8C  F035    	movff	plusw1,btemp
  6705  015200  503F               	movf	(btemp+10)^0,w,c
  6706  015202  1635               	andwf	btemp^0,f,c
  6707  015204  0EF6               	movlw	-10
  6708  015206  0060  F0D7  FFE3   	movff	btemp,plusw1
  6709  01520C  0EF7               	movlw	-9
  6710  01520E  006F FF8C  F035    	movff	plusw1,btemp
  6711  015214  5040               	movf	(btemp+11)^0,w,c
  6712  015216  1635               	andwf	btemp^0,f,c
  6713  015218  0EF7               	movlw	-9
  6714  01521A  D02E               	goto	L4
  6715  01521C                     l10092:
  6716                           
  6717                           ;stkvar	_c @ sp[(-4)+-4]
  6718                           ;stkvar	_s @ sp[(-4)+0]
  6719  01521C  0EFC               	movlw	-4
  6720  01521E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6721  015224  0EFD               	movlw	-3
  6722  015226  006F FF8F FFDA     	movff	plusw1,fsr2h
  6723  01522C  0EF8               	movlw	-8
  6724  01522E  006F FF8F FFDF     	movff	plusw1,indf2
  6725                           
  6726                           ;stkvar	_n @ sp[(-4)+-6]
  6727  015234  0EF6               	movlw	-10
  6728  015236  006F FF8C  F035    	movff	plusw1,btemp
  6729  01523C  0E01               	movlw	1
  6730  01523E  5E35               	subwf	btemp^0,f,c
  6731  015240  0EF6               	movlw	-10
  6732  015242  0060  F0D7  FFE3   	movff	btemp,plusw1
  6733  015248  0EF7               	movlw	-9
  6734  01524A  006F FF8C  F035    	movff	plusw1,btemp
  6735  015250  0E00               	movlw	0
  6736  015252  5A35               	subwfb	btemp^0,f,c
  6737  015254  0EF7               	movlw	-9
  6738  015256  0060  F0D7  FFE3   	movff	btemp,plusw1
  6739                           
  6740                           ;stkvar	_s @ sp[(-4)+0]
  6741  01525C  0EFC               	movlw	-4
  6742  01525E  50E3               	movf	plusw1,w,c
  6743  015260  0F01               	addlw	1
  6744  015262  6E35               	movwf	btemp^0,c
  6745  015264  0EFC               	movlw	-4
  6746  015266  0060  F0D7  FFE3   	movff	btemp,plusw1
  6747  01526C  6A35               	clrf	btemp^0,c
  6748  01526E  0EFD               	movlw	-3
  6749  015270  50E3               	movf	plusw1,w,c
  6750  015272  2035               	addwfc	btemp^0,w,c
  6751  015274  6E35               	movwf	btemp^0,c
  6752  015276  0EFD               	movlw	-3
  6753  015278                     L4:
  6754  015278  0060  F0D7  FFE3   	movff	btemp,plusw1
  6755                           
  6756                           ;stkvar	_n @ sp[(-4)+-6]
  6757  01527E  0EF6               	movlw	-10
  6758  015280  006F FF8C  F035    	movff	plusw1,btemp
  6759  015286  0EF7               	movlw	-9
  6760  015288  50E3               	movf	plusw1,w,c
  6761  01528A  1035               	iorwf	btemp^0,w,c
  6762  01528C  A4D8               	btfss	status,2,c
  6763  01528E  D7C6               	goto	l10092
  6764  015290                     u10610:
  6765                           
  6766                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6767  015290  0EF6               	movlw	246
  6768  015292  26E1               	addwf	fsr1l,f,c
  6769  015294  0EFF               	movlw	255
  6770  015296  22E2               	addwfc	fsr1h,f,c
  6771  015298  0012               	return		;funcret
  6772  01529A                     __end_of_memset:
  6773                           	opt callstack 0
  6774                           
  6775 ;; *************** function _printf *****************
  6776 ;; Defined at:
  6777 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  fmt             2  [STACK] PTR const unsigned char 
  6780 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  ap              2  [STACK] PTR void [1]
  6783 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6784 ;;  ret             2    0        int 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2  [STACK] int 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6789 ;; Tracked objects:
  6790 ;;		On entry : 3F/3B
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6798 ;;Total ram usage:        0 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:   14
  6801 ;; This function calls:
  6802 ;;		_vfprintf
  6803 ;; This function is called by:
  6804 ;;		_eaDogM_WriteString
  6805 ;;		_send_lcd_cmd_dma
  6806 ;; This function uses a reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text33
  6810  01815C                     __ptext33:
  6811                           	opt callstack 0
  6812  01815C                     _printf:
  6813                           	opt callstack 0
  6814                           
  6815                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6816  01815C  52E6               	movf	postinc1,f,c
  6817  01815E  52E6               	movf	postinc1,f,c
  6818                           
  6819                           ;stkvar	?_printf @ sp[(-2)+-3]
  6820                           
  6821                           ;incstack = 0
  6822  018160  0EFB               	movlw	251
  6823  018162  24E1               	addwf	fsr1l,w,c
  6824  018164  6E3F               	movwf	(btemp+10)^0,c
  6825  018166  0EFF               	movlw	255
  6826  018168  20E2               	addwfc	fsr1h,w,c
  6827  01816A  6E40               	movwf	(btemp+11)^0,c
  6828                           
  6829                           ;stkvar	_ap @ sp[(-2)+0]
  6830  01816C  0EFF               	movlw	-1
  6831  01816E  0060  F103  FFE3   	movff	btemp+11,plusw1
  6832  018174  0EFE               	movlw	-2
  6833  018176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6834                           
  6835                           ;stkvar	_ap @ sp[(-2)+0]
  6836  01817C  0EFE               	movlw	254
  6837  01817E  24E1               	addwf	fsr1l,w,c
  6838  018180  6E35               	movwf	btemp^0,c
  6839  018182  0EFF               	movlw	255
  6840  018184  20E2               	addwfc	fsr1h,w,c
  6841  018186  6E36               	movwf	(btemp+1)^0,c
  6842  018188  0060  F0D7  FFE6   	movff	btemp,postinc1
  6843  01818E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6844                           
  6845                           ;stkvar	_fmt @ sp[(-4)+-3]
  6846  018194  0EF9               	movlw	-7
  6847  018196  006F FF8F FFE6     	movff	plusw1,postinc1
  6848  01819C  006F FF8F FFE6     	movff	plusw1,postinc1
  6849  0181A2  0E00               	movlw	0
  6850  0181A4  6EE6               	movwf	postinc1,c
  6851  0181A6  0E00               	movlw	0
  6852  0181A8  6EE6               	movwf	postinc1,c
  6853  0181AA  EC1F  F0BC         	call	_vfprintf	;wreg free
  6854                           
  6855                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6856  0181AE  52E5               	movf	postdec1,f,c
  6857  0181B0  52E5               	movf	postdec1,f,c
  6858  0181B2  52E5               	movf	postdec1,f,c
  6859  0181B4  50E7               	movf	indf1,w,c
  6860  0181B6  5EE1               	subwf	fsr1l,f,c
  6861  0181B8  0E00               	movlw	0
  6862  0181BA  5AE2               	subwfb	fsr1h,f,c
  6863  0181BC  0012               	return		;funcret
  6864  0181BE                     __end_of_printf:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _vfprintf *****************
  6868 ;; Defined at:
  6869 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6872 ;;		 -> f(6), NULL(0), 
  6873 ;;  fmt             2  [STACK] PTR const unsigned char 
  6874 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6875 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6876 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6877 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6878 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6879 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6880 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6881 ;;  ap              2  [STACK] PTR PTR void 
  6882 ;;		 -> ap(2), ap(2), 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  cfmt            2  [STACK] PTR unsigned char 
  6885 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6886 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6887 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6888 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6889 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6890 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6891 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2  [STACK] int 
  6894 ;; Registers used:
  6895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/4
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6905 ;;Total ram usage:        0 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:   13
  6908 ;; This function calls:
  6909 ;;		_vfpfcnvrt
  6910 ;; This function is called by:
  6911 ;;		_sprintf
  6912 ;;		_printf
  6913 ;; This function uses a reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text34
  6917  01783E                     __ptext34:
  6918                           	opt callstack 0
  6919  01783E                     _vfprintf:
  6920                           	opt callstack 0
  6921                           
  6922                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6923  01783E  52E6               	movf	postinc1,f,c
  6924  017840  52E6               	movf	postinc1,f,c
  6925                           
  6926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6927                           ;stkvar	_fmt @ sp[(-2)+-4]
  6928                           
  6929                           ;incstack = 0
  6930  017842  0EFA               	movlw	-6
  6931  017844  006F FF8C  F03F    	movff	plusw1,btemp+10
  6932  01784A  0EFB               	movlw	-5
  6933  01784C  006F FF8C  F040    	movff	plusw1,btemp+11
  6934                           
  6935                           ;stkvar	_cfmt @ sp[(-2)+0]
  6936  017852  0EFF               	movlw	-1
  6937  017854  0060  F103  FFE3   	movff	btemp+11,plusw1
  6938  01785A  0EFE               	movlw	-2
  6939  01785C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6940                           
  6941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6942  017862  6A1C               	clrf	_nout^0,c
  6943  017864  6A1D               	clrf	(_nout+1)^0,c
  6944                           
  6945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6946  017866  D020               	goto	l10106
  6947  017868                     l10104:
  6948                           
  6949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6950                           ;stkvar	_ap @ sp[(-2)+-6]
  6951  017868  0EF8               	movlw	-8
  6952  01786A  006F FF8F FFE6     	movff	plusw1,postinc1
  6953  017870  006F FF8F FFE6     	movff	plusw1,postinc1
  6954                           
  6955                           ;stkvar	_cfmt @ sp[(-4)+0]
  6956  017876  0EFC               	movlw	252
  6957  017878  24E1               	addwf	fsr1l,w,c
  6958  01787A  6E35               	movwf	btemp^0,c
  6959  01787C  0EFF               	movlw	255
  6960  01787E  20E2               	addwfc	fsr1h,w,c
  6961  017880  6E36               	movwf	(btemp+1)^0,c
  6962  017882  0060  F0D7  FFE6   	movff	btemp,postinc1
  6963  017888  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6964                           
  6965                           ;stkvar	_fp @ sp[(-6)+-2]
  6966  01788E  0EF8               	movlw	-8
  6967  017890  006F FF8F FFE6     	movff	plusw1,postinc1
  6968  017896  006F FF8F FFE6     	movff	plusw1,postinc1
  6969  01789C  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6970  0178A0  5035               	movf	btemp^0,w,c
  6971  0178A2  261C               	addwf	_nout^0,f,c
  6972  0178A4  5036               	movf	(btemp+1)^0,w,c
  6973  0178A6  221D               	addwfc	(_nout+1)^0,f,c
  6974  0178A8                     l10106:
  6975                           
  6976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6977                           ;stkvar	_cfmt @ sp[(-2)+0]
  6978  0178A8  50E1               	movf	fsr1l,w,c
  6979  0178AA  0FFE               	addlw	-2
  6980  0178AC  6ED9               	movwf	fsr2l,c
  6981  0178AE  50E2               	movf	fsr1h,w,c
  6982  0178B0  6EDA               	movwf	fsr2h,c
  6983  0178B2  0EFF               	movlw	255
  6984  0178B4  22DA               	addwfc	fsr2h,f,c
  6985  0178B6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6986  0178BC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6987  0178C2                     	if	0	;tblptru may be non-zero
  6988  0178C2                     	endif
  6989  0178C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6990  0178C2  0E00               	movlw	low (__mediumconst shr (0+16))
  6991  0178C4  6EF8               	movwf	tblptru,c
  6992  0178C6                     	endif
  6993  0178C6  0008               	tblrd		*
  6994  0178C8  50F5               	movf	tablat,w,c
  6995  0178CA  0900               	iorlw	0
  6996  0178CC  A4D8               	btfss	status,2,c
  6997  0178CE  D7CC               	goto	l10104
  6998                           
  6999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7000  0178D0  0060  F070  F035   	movff	_nout,btemp
  7001  0178D6  0060  F074  F036   	movff	_nout+1,btemp+1
  7002                           
  7003                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7004  0178DC  0EF8               	movlw	248
  7005  0178DE  26E1               	addwf	fsr1l,f,c
  7006  0178E0  0EFF               	movlw	255
  7007  0178E2  22E2               	addwfc	fsr1h,f,c
  7008  0178E4  0012               	return		;funcret
  7009  0178E6                     __end_of_vfprintf:
  7010                           	opt callstack 0
  7011                           
  7012 ;; *************** function _vfpfcnvrt *****************
  7013 ;; Defined at:
  7014 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7017 ;;		 -> f(6), NULL(0), 
  7018 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7019 ;;		 -> cfmt(2), 
  7020 ;;  ap              2  [STACK] PTR PTR void 
  7021 ;;		 -> ap(2), ap(2), 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  llu             8  [STACK] unsigned long long 
  7024 ;;  ll              8  [STACK] long long 
  7025 ;;  f               4  [STACK] long long 
  7026 ;;  ct              3  [STACK] unsigned char [3]
  7027 ;;  vp              3    0        PTR void 
  7028 ;;  cp              2  [STACK] PTR unsigned char 
  7029 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7030 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7031 ;;		 -> STR_3(5), V(187), 
  7032 ;;  i               2    0        int 
  7033 ;;  done            2    0        int 
  7034 ;;  c               1  [STACK] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  2  [STACK] int 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/4
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:   12
  7051 ;; This function calls:
  7052 ;;		_atoi
  7053 ;;		_ctoa
  7054 ;;		_dtoa
  7055 ;;		_efgtoa
  7056 ;;		_fputc
  7057 ;;		_isdigit
  7058 ;;		_isupper
  7059 ;;		_stoa
  7060 ;;		_strncmp
  7061 ;;		_tolower
  7062 ;;		_utoa
  7063 ;;		_xtoa
  7064 ;; This function is called by:
  7065 ;;		_vfprintf
  7066 ;; This function uses a reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text35
  7070  011244                     __ptext35:
  7071                           	opt callstack 0
  7072  011244                     _vfpfcnvrt:
  7073                           	opt callstack 0
  7074                           
  7075                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7076  011244  0E20               	movlw	32
  7077  011246  26E1               	addwf	fsr1l,f,c
  7078  011248  0E00               	movlw	0
  7079  01124A  22E2               	addwfc	fsr1h,f,c
  7080                           
  7081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7082                           ;stkvar	_fmt @ sp[(-32)+-4]
  7083                           
  7084                           ;incstack = 0
  7085  01124C  0EDC               	movlw	-36
  7086  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7087  011254  0EDD               	movlw	-35
  7088  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7089  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7090  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7091  011268                     	if	0	;tblptru may be non-zero
  7092  011268                     	endif
  7093  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7094  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7095  01126A  6EF8               	movwf	tblptru,c
  7096  01126C                     	endif
  7097  01126C  0008               	tblrd		*
  7098  01126E  50F5               	movf	tablat,w,c
  7099  011270  0A25               	xorlw	37
  7100  011272  A4D8               	btfss	status,2,c
  7101  011274  EFC9  F090         	goto	l10050
  7102                           
  7103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7104                           ;stkvar	_fmt @ sp[(-32)+-4]
  7105  011278  0EDC               	movlw	-36
  7106  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7107  011280  0EDD               	movlw	-35
  7108  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7109  011288  2ADE               	incf	postinc2,f,c
  7110  01128A  0E00               	movlw	0
  7111  01128C  22DD               	addwfc	postdec2,f,c
  7112                           
  7113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7114  01128E  6A1E               	clrf	_width^0,c
  7115  011290  6A1F               	clrf	(_width+1)^0,c
  7116  011292  6A22               	clrf	_flags^0,c
  7117  011294  6A23               	clrf	(_flags+1)^0,c
  7118                           
  7119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7120  011296  6820               	setf	_prec^0,c
  7121  011298  6821               	setf	(_prec+1)^0,c
  7122                           
  7123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7124                           ;stkvar	_fmt @ sp[(-32)+-4]
  7125  01129A  0EDC               	movlw	-36
  7126  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7127  0112A2  0EDD               	movlw	-35
  7128  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7129  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7130  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7131  0112B6                     	if	0	;tblptru may be non-zero
  7132  0112B6                     	endif
  7133  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7134  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7135  0112B8  6EF8               	movwf	tblptru,c
  7136  0112BA                     	endif
  7137  0112BA  0008               	tblrd		*
  7138  0112BC  50F5               	movf	tablat,w,c
  7139  0112BE  0A2A               	xorlw	42
  7140  0112C0  A4D8               	btfss	status,2,c
  7141  0112C2  D031               	goto	l9868
  7142                           
  7143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7144                           ;stkvar	_fmt @ sp[(-32)+-4]
  7145  0112C4  0EDC               	movlw	-36
  7146  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7147  0112CC  0EDD               	movlw	-35
  7148  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7149  0112D4  2ADE               	incf	postinc2,f,c
  7150  0112D6  0E00               	movlw	0
  7151  0112D8  22DD               	addwfc	postdec2,f,c
  7152                           
  7153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7154                           ;stkvar	_ap @ sp[(-32)+-6]
  7155  0112DA  0EDA               	movlw	-38
  7156  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7157  0112E2  0EDB               	movlw	-37
  7158  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7159  0112EA  0E02               	movlw	2
  7160  0112EC  5EDE               	subwf	postinc2,f,c
  7161  0112EE  0E00               	movlw	0
  7162  0112F0  5ADD               	subwfb	postdec2,f,c
  7163  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  7164  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  7165  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7166  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7167  01130A  006F FF78  F01E    	movff	postinc2,_width
  7168  011310  006F FF74  F01F    	movff	postdec2,_width+1
  7169                           
  7170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7171  011316  AE1F               	btfss	(_width+1)^0,7,c
  7172  011318  D066               	goto	u10310
  7173                           
  7174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7175  01131A  8022               	bsf	_flags^0,0,c
  7176                           
  7177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7178  01131C  6C1E               	negf	_width^0,c
  7179  01131E  1E1F               	comf	(_width+1)^0,f,c
  7180  011320  B0D8               	btfsc	status,0,c
  7181  011322  2A1F               	incf	(_width+1)^0,f,c
  7182  011324  D060               	goto	u10310
  7183  011326                     l9868:
  7184                           
  7185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7186                           ;stkvar	_fmt @ sp[(-32)+-4]
  7187  011326  0EDC               	movlw	-36
  7188  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7189  01132E  0EDD               	movlw	-35
  7190  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7191  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  7192  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  7193  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7194  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  7195  01134E  ECEC  F0AB         	call	_atoi	;wreg free
  7196  011352  0060  F0D4  F01E   	movff	btemp,_width
  7197  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  7198                           
  7199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7200  01135E  D00B               	goto	l9872
  7201  011360                     l9870:
  7202                           
  7203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7204                           ;stkvar	_fmt @ sp[(-32)+-4]
  7205  011360  0EDC               	movlw	-36
  7206  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7207  011368  0EDD               	movlw	-35
  7208  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7209  011370  2ADE               	incf	postinc2,f,c
  7210  011372  0E00               	movlw	0
  7211  011374  22DD               	addwfc	postdec2,f,c
  7212  011376                     l9872:
  7213  011376  0ED0               	movlw	208
  7214  011378  6E3F               	movwf	(btemp+10)^0,c
  7215  01137A  0EFF               	movlw	255
  7216  01137C  6E40               	movwf	(btemp+11)^0,c
  7217                           
  7218                           ;stkvar	_fmt @ sp[(-32)+-4]
  7219  01137E  0EDC               	movlw	-36
  7220  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7221  011386  0EDD               	movlw	-35
  7222  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7223  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7224  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7225  01139A                     	if	0	;tblptru may be non-zero
  7226  01139A                     	endif
  7227  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7228  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7229  01139C  6EF8               	movwf	tblptru,c
  7230  01139E                     	endif
  7231  01139E  0008               	tblrd		*
  7232  0113A0  50F5               	movf	tablat,w,c
  7233  0113A2  6E3D               	movwf	(btemp+8)^0,c
  7234  0113A4  6A3E               	clrf	(btemp+9)^0,c
  7235  0113A6  503F               	movf	(btemp+10)^0,w,c
  7236  0113A8  263D               	addwf	(btemp+8)^0,f,c
  7237  0113AA  5040               	movf	(btemp+11)^0,w,c
  7238  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  7239  0113AE  503E               	movf	(btemp+9)^0,w,c
  7240  0113B0  E106               	bnz	u10290
  7241  0113B2  0E0A               	movlw	10
  7242  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  7243  0113B6  B0D8               	btfsc	status,0,c
  7244  0113B8  D002               	goto	u10290
  7245  0113BA  0E01               	movlw	1
  7246  0113BC  D001               	goto	u10300
  7247  0113BE                     u10290:
  7248  0113BE  0E00               	movlw	0
  7249  0113C0                     u10300:
  7250  0113C0  6E3F               	movwf	(btemp+10)^0,c
  7251  0113C2  6A40               	clrf	(btemp+11)^0,c
  7252                           
  7253                           ;stkvar	_vfpfcnvrt$4249 @ sp[(-32)+4]
  7254  0113C4  0EE4               	movlw	-28
  7255  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7256  0113CC  0EE5               	movlw	-27
  7257  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7258                           
  7259                           ;stkvar	_vfpfcnvrt$4249 @ sp[(-32)+4]
  7260  0113D4  0EE4               	movlw	-28
  7261  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  7262  0113DC  0EE5               	movlw	-27
  7263  0113DE  50E3               	movf	plusw1,w,c
  7264  0113E0  1035               	iorwf	btemp^0,w,c
  7265  0113E2  A4D8               	btfss	status,2,c
  7266  0113E4  D7BD               	goto	l9870
  7267  0113E6                     u10310:
  7268                           
  7269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7270                           ;stkvar	_fmt @ sp[(-32)+-4]
  7271  0113E6  0EDC               	movlw	-36
  7272  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7273  0113EE  0EDD               	movlw	-35
  7274  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7275  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7276  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7277  011402                     	if	0	;tblptru may be non-zero
  7278  011402                     	endif
  7279  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7280  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7281  011404  6EF8               	movwf	tblptru,c
  7282  011406                     	endif
  7283  011406  0008               	tblrd		*
  7284  011408  50F5               	movf	tablat,w,c
  7285  01140A  0A2E               	xorlw	46
  7286  01140C  A4D8               	btfss	status,2,c
  7287  01140E  D0AC               	goto	u10360
  7288                           
  7289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7290  011410  6A20               	clrf	_prec^0,c
  7291  011412  6A21               	clrf	(_prec+1)^0,c
  7292                           
  7293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7294                           ;stkvar	_fmt @ sp[(-32)+-4]
  7295  011414  0EDC               	movlw	-36
  7296  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7297  01141C  0EDD               	movlw	-35
  7298  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7299  011424  2ADE               	incf	postinc2,f,c
  7300  011426  0E00               	movlw	0
  7301  011428  22DD               	addwfc	postdec2,f,c
  7302                           
  7303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7304                           ;stkvar	_fmt @ sp[(-32)+-4]
  7305  01142A  0EDC               	movlw	-36
  7306  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7307  011432  0EDD               	movlw	-35
  7308  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7309  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7310  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7311  011446                     	if	0	;tblptru may be non-zero
  7312  011446                     	endif
  7313  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7314  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7315  011448  6EF8               	movwf	tblptru,c
  7316  01144A                     	endif
  7317  01144A  0008               	tblrd		*
  7318  01144C  50F5               	movf	tablat,w,c
  7319  01144E  0A2A               	xorlw	42
  7320  011450  A4D8               	btfss	status,2,c
  7321  011452  D02A               	goto	l9890
  7322                           
  7323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7324                           ;stkvar	_fmt @ sp[(-32)+-4]
  7325  011454  0EDC               	movlw	-36
  7326  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7327  01145C  0EDD               	movlw	-35
  7328  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7329  011464  2ADE               	incf	postinc2,f,c
  7330  011466  0E00               	movlw	0
  7331  011468  22DD               	addwfc	postdec2,f,c
  7332                           
  7333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7334                           ;stkvar	_ap @ sp[(-32)+-6]
  7335  01146A  0EDA               	movlw	-38
  7336  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7337  011472  0EDB               	movlw	-37
  7338  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7339  01147A  0E02               	movlw	2
  7340  01147C  5EDE               	subwf	postinc2,f,c
  7341  01147E  0E00               	movlw	0
  7342  011480  5ADD               	subwfb	postdec2,f,c
  7343  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7344  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7345  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7346  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7347  01149A  006F FF78  F020    	movff	postinc2,_prec
  7348  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7349                           
  7350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7351  0114A6  D060               	goto	u10360
  7352  0114A8                     l9890:
  7353                           
  7354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7355                           ;stkvar	_fmt @ sp[(-32)+-4]
  7356  0114A8  0EDC               	movlw	-36
  7357  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7358  0114B0  0EDD               	movlw	-35
  7359  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7360  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7361  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7362  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7363  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7364  0114D0  ECEC  F0AB         	call	_atoi	;wreg free
  7365  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7366  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7367                           
  7368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7369  0114E0  D00B               	goto	l9894
  7370  0114E2                     l9892:
  7371                           
  7372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7373                           ;stkvar	_fmt @ sp[(-32)+-4]
  7374  0114E2  0EDC               	movlw	-36
  7375  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7376  0114EA  0EDD               	movlw	-35
  7377  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7378  0114F2  2ADE               	incf	postinc2,f,c
  7379  0114F4  0E00               	movlw	0
  7380  0114F6  22DD               	addwfc	postdec2,f,c
  7381  0114F8                     l9894:
  7382  0114F8  0ED0               	movlw	208
  7383  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7384  0114FC  0EFF               	movlw	255
  7385  0114FE  6E40               	movwf	(btemp+11)^0,c
  7386                           
  7387                           ;stkvar	_fmt @ sp[(-32)+-4]
  7388  011500  0EDC               	movlw	-36
  7389  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7390  011508  0EDD               	movlw	-35
  7391  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7392  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7393  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7394  01151C                     	if	0	;tblptru may be non-zero
  7395  01151C                     	endif
  7396  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7397  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7398  01151E  6EF8               	movwf	tblptru,c
  7399  011520                     	endif
  7400  011520  0008               	tblrd		*
  7401  011522  50F5               	movf	tablat,w,c
  7402  011524  6E3D               	movwf	(btemp+8)^0,c
  7403  011526  6A3E               	clrf	(btemp+9)^0,c
  7404  011528  503F               	movf	(btemp+10)^0,w,c
  7405  01152A  263D               	addwf	(btemp+8)^0,f,c
  7406  01152C  5040               	movf	(btemp+11)^0,w,c
  7407  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7408  011530  503E               	movf	(btemp+9)^0,w,c
  7409  011532  E106               	bnz	u10340
  7410  011534  0E0A               	movlw	10
  7411  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7412  011538  B0D8               	btfsc	status,0,c
  7413  01153A  D002               	goto	u10340
  7414  01153C  0E01               	movlw	1
  7415  01153E  D001               	goto	u10350
  7416  011540                     u10340:
  7417  011540  0E00               	movlw	0
  7418  011542                     u10350:
  7419  011542  6E3F               	movwf	(btemp+10)^0,c
  7420  011544  6A40               	clrf	(btemp+11)^0,c
  7421                           
  7422                           ;stkvar	_vfpfcnvrt$4250 @ sp[(-32)+0]
  7423  011546  0EE0               	movlw	-32
  7424  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7425  01154E  0EE1               	movlw	-31
  7426  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7427                           
  7428                           ;stkvar	_vfpfcnvrt$4250 @ sp[(-32)+0]
  7429  011556  0EE0               	movlw	-32
  7430  011558  006F FF8C  F035    	movff	plusw1,btemp
  7431  01155E  0EE1               	movlw	-31
  7432  011560  50E3               	movf	plusw1,w,c
  7433  011562  1035               	iorwf	btemp^0,w,c
  7434  011564  A4D8               	btfss	status,2,c
  7435  011566  D7BD               	goto	l9892
  7436  011568                     u10360:
  7437                           
  7438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7439                           ;stkvar	_fmt @ sp[(-32)+-4]
  7440  011568  0EDC               	movlw	-36
  7441  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7442  011570  0EDD               	movlw	-35
  7443  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7444  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7445  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7446  011584                     	if	0	;tblptru may be non-zero
  7447  011584                     	endif
  7448  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7449  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7450  011586  6EF8               	movwf	tblptru,c
  7451  011588                     	endif
  7452  011588  0008               	tblrd		*
  7453  01158A  50F5               	movf	tablat,w,c
  7454  01158C  6EE6               	movwf	postinc1,c
  7455  01158E  0E00               	movlw	0
  7456  011590  6EE6               	movwf	postinc1,c
  7457  011592  ECC7  F0BE         	call	_tolower	;wreg free
  7458                           
  7459                           ;stkvar	_ct @ sp[(-32)+26]
  7460  011596  0EFA               	movlw	-6
  7461  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7462                           
  7463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7464                           ;stkvar	_ct @ sp[(-32)+26]
  7465  01159E  0EFA               	movlw	-6
  7466  0115A0  50E3               	movf	plusw1,w,c
  7467  0115A2  B4D8               	btfsc	status,2,c
  7468  0115A4  D05B               	goto	l9910
  7469                           
  7470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7471                           ;stkvar	_ct @ sp[(-32)+26]
  7472  0115A6  0EFB               	movlw	251
  7473  0115A8  24E1               	addwf	fsr1l,w,c
  7474  0115AA  6ED9               	movwf	fsr2l,c
  7475  0115AC  0EFF               	movlw	255
  7476  0115AE  20E2               	addwfc	fsr1h,w,c
  7477  0115B0  6EDA               	movwf	fsr2h,c
  7478                           
  7479                           ;stkvar	_fmt @ sp[(-32)+-4]
  7480  0115B2  0EDC               	movlw	-36
  7481  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7482  0115BA  0EDD               	movlw	-35
  7483  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7484  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7485  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7486  0115CE  0E01               	movlw	1
  7487  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7488  0115D2  0E00               	movlw	0
  7489  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7490  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7491  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7492  0115E2                     	if	0	;tblptru may be non-zero
  7493  0115E2                     	endif
  7494  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7495  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7496  0115E4  6EF8               	movwf	tblptru,c
  7497  0115E6                     	endif
  7498  0115E6  0008               	tblrd		*
  7499  0115E8  50F5               	movf	tablat,w,c
  7500  0115EA  6EE6               	movwf	postinc1,c
  7501  0115EC  0E00               	movlw	0
  7502  0115EE  6EE6               	movwf	postinc1,c
  7503  0115F0  ECC7  F0BE         	call	_tolower	;wreg free
  7504  0115F4  5035               	movf	btemp^0,w,c
  7505  0115F6  6EDF               	movwf	indf2,c
  7506                           
  7507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7508                           ;stkvar	_ct @ sp[(-32)+26]
  7509  0115F8  0EFB               	movlw	251
  7510  0115FA  24E1               	addwf	fsr1l,w,c
  7511  0115FC  6ED9               	movwf	fsr2l,c
  7512  0115FE  0EFF               	movlw	255
  7513  011600  20E2               	addwfc	fsr1h,w,c
  7514  011602  6EDA               	movwf	fsr2h,c
  7515  011604  50DF               	movf	indf2,w,c
  7516  011606  B4D8               	btfsc	status,2,c
  7517  011608  D029               	goto	l9910
  7518                           
  7519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7520                           ;stkvar	_ct @ sp[(-32)+26]
  7521  01160A  0EFC               	movlw	252
  7522  01160C  24E1               	addwf	fsr1l,w,c
  7523  01160E  6ED9               	movwf	fsr2l,c
  7524  011610  0EFF               	movlw	255
  7525  011612  20E2               	addwfc	fsr1h,w,c
  7526  011614  6EDA               	movwf	fsr2h,c
  7527                           
  7528                           ;stkvar	_fmt @ sp[(-32)+-4]
  7529  011616  0EDC               	movlw	-36
  7530  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7531  01161E  0EDD               	movlw	-35
  7532  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7533  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7534  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7535  011632  0E02               	movlw	2
  7536  011634  263F               	addwf	(btemp+10)^0,f,c
  7537  011636  0E00               	movlw	0
  7538  011638  2240               	addwfc	(btemp+11)^0,f,c
  7539  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7540  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7541  011646                     	if	0	;tblptru may be non-zero
  7542  011646                     	endif
  7543  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7544  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7545  011648  6EF8               	movwf	tblptru,c
  7546  01164A                     	endif
  7547  01164A  0008               	tblrd		*
  7548  01164C  50F5               	movf	tablat,w,c
  7549  01164E  6EE6               	movwf	postinc1,c
  7550  011650  0E00               	movlw	0
  7551  011652  6EE6               	movwf	postinc1,c
  7552  011654  ECC7  F0BE         	call	_tolower	;wreg free
  7553  011658  5035               	movf	btemp^0,w,c
  7554  01165A  6EDF               	movwf	indf2,c
  7555  01165C                     l9910:
  7556                           
  7557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7558                           ;stkvar	_fmt @ sp[(-32)+-4]
  7559  01165C  0EDC               	movlw	-36
  7560  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7561  011664  0EDD               	movlw	-35
  7562  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7563  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7564  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7565  011678                     	if	0	;tblptru may be non-zero
  7566  011678                     	endif
  7567  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7568  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7569  01167A  6EF8               	movwf	tblptru,c
  7570  01167C                     	endif
  7571  01167C  0008               	tblrd		*
  7572  01167E  50F5               	movf	tablat,w,c
  7573  011680  0A63               	xorlw	99
  7574  011682  A4D8               	btfss	status,2,c
  7575  011684  D037               	goto	l9920
  7576                           
  7577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7578                           ;stkvar	_fmt @ sp[(-32)+-4]
  7579  011686  0EDC               	movlw	-36
  7580  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7581  01168E  0EDD               	movlw	-35
  7582  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7583  011696  2ADE               	incf	postinc2,f,c
  7584  011698  0E00               	movlw	0
  7585  01169A  22DD               	addwfc	postdec2,f,c
  7586                           
  7587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7588                           ;stkvar	_ap @ sp[(-32)+-6]
  7589  01169C  0EDA               	movlw	-38
  7590  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7591  0116A4  0EDB               	movlw	-37
  7592  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7593  0116AC  0E02               	movlw	2
  7594  0116AE  5EDE               	subwf	postinc2,f,c
  7595  0116B0  0E00               	movlw	0
  7596  0116B2  5ADD               	subwfb	postdec2,f,c
  7597  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7598  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7599  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7600  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7601  0116CC  50DF               	movf	indf2,w,c
  7602  0116CE  6E40               	movwf	(btemp+11)^0,c
  7603                           
  7604                           ;stkvar	_c @ sp[(-32)+31]
  7605  0116D0  0EFF               	movlw	-1
  7606  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7607                           
  7608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7609                           ;stkvar	_c @ sp[(-32)+31]
  7610  0116D8  0EFF               	movlw	-1
  7611  0116DA  50E3               	movf	plusw1,w,c
  7612  0116DC  6EE6               	movwf	postinc1,c
  7613                           
  7614                           ;stkvar	_fp @ sp[(-33)+-2]
  7615  0116DE  0EDD               	movlw	-35
  7616  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7617  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7618  0116EC  EC41  F0BE         	call	_ctoa	;wreg free
  7619  0116F0  EFF3  F090         	goto	l1978
  7620  0116F4                     l9920:
  7621                           
  7622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7623                           ;stkvar	_fmt @ sp[(-32)+-4]
  7624  0116F4  0EDC               	movlw	-36
  7625  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7626  0116FC  0EDD               	movlw	-35
  7627  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7628  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7629  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7630  011710                     	if	0	;tblptru may be non-zero
  7631  011710                     	endif
  7632  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7633  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7634  011712  6EF8               	movwf	tblptru,c
  7635  011714                     	endif
  7636  011714  0008               	tblrd		*
  7637  011716  50F5               	movf	tablat,w,c
  7638  011718  0A64               	xorlw	100
  7639  01171A  B4D8               	btfsc	status,2,c
  7640  01171C  D015               	goto	u10410
  7641                           
  7642                           ;stkvar	_fmt @ sp[(-32)+-4]
  7643  01171E  0EDC               	movlw	-36
  7644  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7645  011726  0EDD               	movlw	-35
  7646  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7647  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7648  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7649  01173A                     	if	0	;tblptru may be non-zero
  7650  01173A                     	endif
  7651  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7652  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7653  01173C  6EF8               	movwf	tblptru,c
  7654  01173E                     	endif
  7655  01173E  0008               	tblrd		*
  7656  011740  50F5               	movf	tablat,w,c
  7657  011742  0A69               	xorlw	105
  7658  011744  A4D8               	btfss	status,2,c
  7659  011746  D076               	goto	l9932
  7660  011748                     u10410:
  7661                           
  7662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7663                           ;stkvar	_fmt @ sp[(-32)+-4]
  7664  011748  0EDC               	movlw	-36
  7665  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7666  011750  0EDD               	movlw	-35
  7667  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7668  011758  2ADE               	incf	postinc2,f,c
  7669  01175A  0E00               	movlw	0
  7670  01175C  22DD               	addwfc	postdec2,f,c
  7671                           
  7672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7673                           ;stkvar	_ap @ sp[(-32)+-6]
  7674  01175E  0EDA               	movlw	-38
  7675  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7676  011766  0EDB               	movlw	-37
  7677  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7678  01176E  0E02               	movlw	2
  7679  011770  5EDE               	subwf	postinc2,f,c
  7680  011772  0E00               	movlw	0
  7681  011774  5ADD               	subwfb	postdec2,f,c
  7682  011776  006F FF78  F03F    	movff	postinc2,btemp+10
  7683  01177C  006F FF74  F040    	movff	postdec2,btemp+11
  7684  011782  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7685  011788  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7686  01178E  006F FF78  F03F    	movff	postinc2,btemp+10
  7687  011794  006F FF74  F040    	movff	postdec2,btemp+11
  7688                           
  7689                           ;stkvar	_ll @ sp[(-32)+14]
  7690  01179A  0EEE               	movlw	-18
  7691  01179C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7692  0117A2  0EEF               	movlw	-17
  7693  0117A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7694  0117AA  6A35               	clrf	btemp^0,c
  7695  0117AC  BEE3               	btfsc	plusw1,7,c
  7696  0117AE  6835               	setf	btemp^0,c
  7697  0117B0  0EF0               	movlw	-16
  7698  0117B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7699  0117B8  0EF1               	movlw	-15
  7700  0117BA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7701  0117C0  0EF2               	movlw	-14
  7702  0117C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7703  0117C8  0EF3               	movlw	-13
  7704  0117CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7705  0117D0  0EF4               	movlw	-12
  7706  0117D2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7707  0117D8  0EF5               	movlw	-11
  7708  0117DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7709  0117E0                     l9928:
  7710                           
  7711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7712                           ;stkvar	_ll @ sp[(-32)+14]
  7713  0117E0  50E1               	movf	fsr1l,w,c
  7714  0117E2  0FEE               	addlw	-18
  7715  0117E4  6ED9               	movwf	fsr2l,c
  7716  0117E6  50E2               	movf	fsr1h,w,c
  7717  0117E8  6EDA               	movwf	fsr2h,c
  7718  0117EA  0EFF               	movlw	255
  7719  0117EC  22DA               	addwfc	fsr2h,f,c
  7720  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7721  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7722  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7723  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7724  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7725  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7726  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7727  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7728                           
  7729                           ;stkvar	_fp @ sp[(-40)+-2]
  7730  01181E  0ED6               	movlw	-42
  7731  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7732  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7733  01182C  EC6B  F09E         	call	_dtoa	;wreg free
  7734  011830  EFF3  F090         	goto	l1978
  7735  011834                     l9932:
  7736                           
  7737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7738  011834  0E02               	movlw	2
  7739  011836  6EE6               	movwf	postinc1,c
  7740  011838  0E00               	movlw	0
  7741  01183A  6EE6               	movwf	postinc1,c
  7742  01183C  0EEA               	movlw	low STR_42
  7743  01183E  6EE6               	movwf	postinc1,c
  7744  011840  0EFF               	movlw	high STR_42
  7745  011842  6EE6               	movwf	postinc1,c
  7746                           
  7747                           ;stkvar	_fmt @ sp[(-36)+-4]
  7748  011844  0ED8               	movlw	-40
  7749  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7750  01184C  0ED9               	movlw	-39
  7751  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7752  011854  006F FF78  F03F    	movff	postinc2,btemp+10
  7753  01185A  006F FF74  F040    	movff	postdec2,btemp+11
  7754  011860  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7755  011866  0060  F103  FFE6   	movff	btemp+11,postinc1
  7756  01186C  EC46  F0AE         	call	_strncmp	;wreg free
  7757  011870  5035               	movf	btemp^0,w,c
  7758  011872  1036               	iorwf	(btemp+1)^0,w,c
  7759  011874  B4D8               	btfsc	status,2,c
  7760  011876  D022               	goto	u10430
  7761  011878  0E02               	movlw	2
  7762  01187A  6EE6               	movwf	postinc1,c
  7763  01187C  0E00               	movlw	0
  7764  01187E  6EE6               	movwf	postinc1,c
  7765  011880  0EF0               	movlw	low STR_46
  7766  011882  6EE6               	movwf	postinc1,c
  7767  011884  0EFF               	movlw	high STR_46
  7768  011886  6EE6               	movwf	postinc1,c
  7769                           
  7770                           ;stkvar	_fmt @ sp[(-36)+-4]
  7771  011888  0ED8               	movlw	-40
  7772  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7773  011890  0ED9               	movlw	-39
  7774  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7775  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7776  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7777  0118A4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7778  0118AA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7779  0118B0  EC46  F0AE         	call	_strncmp	;wreg free
  7780  0118B4  5035               	movf	btemp^0,w,c
  7781  0118B6  1036               	iorwf	(btemp+1)^0,w,c
  7782  0118B8  A4D8               	btfss	status,2,c
  7783  0118BA  D069               	goto	l9944
  7784  0118BC                     u10430:
  7785                           
  7786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7787                           ;stkvar	_fmt @ sp[(-32)+-4]
  7788  0118BC  0EDC               	movlw	-36
  7789  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7790  0118C4  0EDD               	movlw	-35
  7791  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7792  0118CC  0E02               	movlw	2
  7793  0118CE  26DE               	addwf	postinc2,f,c
  7794  0118D0  0E00               	movlw	0
  7795  0118D2  22DD               	addwfc	postdec2,f,c
  7796                           
  7797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7798                           ;stkvar	_ap @ sp[(-32)+-6]
  7799  0118D4  0EDA               	movlw	-38
  7800  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7801  0118DC  0EDB               	movlw	-37
  7802  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7803  0118E4  0E04               	movlw	4
  7804  0118E6  5EDE               	subwf	postinc2,f,c
  7805  0118E8  0E00               	movlw	0
  7806  0118EA  5ADD               	subwfb	postdec2,f,c
  7807  0118EC  006F FF78  F03F    	movff	postinc2,btemp+10
  7808  0118F2  006F FF74  F040    	movff	postdec2,btemp+11
  7809  0118F8  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7810  0118FE  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7811  011904  006F FF78  F03D    	movff	postinc2,btemp+8
  7812  01190A  006F FF78  F03E    	movff	postinc2,btemp+9
  7813  011910  006F FF78  F03F    	movff	postinc2,btemp+10
  7814  011916  006F FF78  F040    	movff	postinc2,btemp+11
  7815  01191C  0060  F0F4  F045   	movff	btemp+8,btemp+16
  7816  011922  0060  F0F8  F046   	movff	btemp+9,btemp+17
  7817  011928  0060  F0FC  F047   	movff	btemp+10,btemp+18
  7818  01192E  0060  F100  F048   	movff	btemp+11,btemp+19
  7819  011934  6A49               	clrf	(btemp+20)^0,c
  7820  011936  BE48               	btfsc	(btemp+19)^0,7,c
  7821  011938  6849               	setf	(btemp+20)^0,c
  7822  01193A  0060  F124  F04A   	movff	btemp+20,btemp+21
  7823  011940  0060  F124  F04B   	movff	btemp+20,btemp+22
  7824  011946  0060  F124  F04C   	movff	btemp+20,btemp+23
  7825                           
  7826                           ;stkvar	_ll @ sp[(-32)+14]
  7827  01194C  0EEE               	movlw	-18
  7828  01194E  0060  F117  FFE3   	movff	btemp+16,plusw1
  7829  011954  0EEF               	movlw	-17
  7830  011956  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7831  01195C  0EF0               	movlw	-16
  7832  01195E  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7833  011964  0EF1               	movlw	-15
  7834  011966  0060  F123  FFE3   	movff	btemp+19,plusw1
  7835  01196C  0EF2               	movlw	-14
  7836  01196E  0060  F127  FFE3   	movff	btemp+20,plusw1
  7837  011974  0EF3               	movlw	-13
  7838  011976  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7839  01197C  0EF4               	movlw	-12
  7840  01197E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7841  011984  0EF5               	movlw	-11
  7842  011986  0060  F133  FFE3   	movff	btemp+23,plusw1
  7843  01198C  D729               	goto	l9928
  7844  01198E                     l9944:
  7845                           
  7846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7847                           ;stkvar	_ct @ sp[(-32)+26]
  7848  01198E  0EFA               	movlw	-6
  7849  011990  006F FF8C  F035    	movff	plusw1,btemp
  7850  011996  0E66               	movlw	102
  7851  011998  1835               	xorwf	btemp^0,w,c
  7852  01199A  A4D8               	btfss	status,2,c
  7853  01199C  D06E               	goto	l9956
  7854                           
  7855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7856                           ;stkvar	_fmt @ sp[(-32)+-4]
  7857  01199E  0EDC               	movlw	-36
  7858  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7859  0119A6  0EDD               	movlw	-35
  7860  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7861  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7862  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7863  0119BA                     	if	0	;tblptru may be non-zero
  7864  0119BA                     	endif
  7865  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7866  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7867  0119BC  6EF8               	movwf	tblptru,c
  7868  0119BE                     	endif
  7869                           
  7870                           ;stkvar	_c @ sp[(-32)+31]
  7871  0119BE  0008               	tblrd		*
  7872  0119C0  0EFF               	movlw	-1
  7873  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7874                           
  7875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7876                           ;stkvar	_fmt @ sp[(-32)+-4]
  7877  0119C8  0EDC               	movlw	-36
  7878  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7879  0119D0  0EDD               	movlw	-35
  7880  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7881  0119D8  2ADE               	incf	postinc2,f,c
  7882  0119DA  0E00               	movlw	0
  7883  0119DC  22DD               	addwfc	postdec2,f,c
  7884                           
  7885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7886                           ;stkvar	_ap @ sp[(-32)+-6]
  7887  0119DE  0EDA               	movlw	-38
  7888  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7889  0119E6  0EDB               	movlw	-37
  7890  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7891  0119EE  0E04               	movlw	4
  7892  0119F0  5EDE               	subwf	postinc2,f,c
  7893  0119F2  0E00               	movlw	0
  7894  0119F4  5ADD               	subwfb	postdec2,f,c
  7895  0119F6  006F FF78  F03F    	movff	postinc2,btemp+10
  7896  0119FC  006F FF74  F040    	movff	postdec2,btemp+11
  7897  011A02  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7898  011A08  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7899  011A0E  006F FF78  F03D    	movff	postinc2,btemp+8
  7900  011A14  006F FF78  F03E    	movff	postinc2,btemp+9
  7901  011A1A  006F FF78  F03F    	movff	postinc2,btemp+10
  7902  011A20  006F FF78  F040    	movff	postinc2,btemp+11
  7903                           
  7904                           ;stkvar	_f @ sp[(-32)+22]
  7905  011A26  0EF6               	movlw	-10
  7906  011A28  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7907  011A2E  0EF7               	movlw	-9
  7908  011A30  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7909  011A36  0EF8               	movlw	-8
  7910  011A38  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7911  011A3E  0EF9               	movlw	-7
  7912  011A40  0060  F103  FFE3   	movff	btemp+11,plusw1
  7913  011A46                     l9952:
  7914                           
  7915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7916                           ;stkvar	_c @ sp[(-32)+31]
  7917  011A46  0EFF               	movlw	-1
  7918  011A48  50E3               	movf	plusw1,w,c
  7919  011A4A  6EE6               	movwf	postinc1,c
  7920                           
  7921                           ;stkvar	_f @ sp[(-33)+22]
  7922  011A4C  0EF5               	movlw	-11
  7923  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7924  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  7925  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  7926  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  7927                           
  7928                           ;stkvar	_fp @ sp[(-37)+-2]
  7929  011A66  0ED9               	movlw	-39
  7930  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  7931  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7932  011A74  EC00  F080         	call	_efgtoa	;wreg free
  7933  011A78  D3B6               	goto	l1978
  7934  011A7A                     l9956:
  7935                           
  7936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7937  011A7A  0E02               	movlw	2
  7938  011A7C  6EE6               	movwf	postinc1,c
  7939  011A7E  0E00               	movlw	0
  7940  011A80  6EE6               	movwf	postinc1,c
  7941  011A82  0EED               	movlw	low STR_51
  7942  011A84  6EE6               	movwf	postinc1,c
  7943  011A86  0EFF               	movlw	high STR_51
  7944  011A88  6EE6               	movwf	postinc1,c
  7945                           
  7946                           ;stkvar	_ct @ sp[(-36)+26]
  7947  011A8A  0EF6               	movlw	246
  7948  011A8C  24E1               	addwf	fsr1l,w,c
  7949  011A8E  6E35               	movwf	btemp^0,c
  7950  011A90  0EFF               	movlw	255
  7951  011A92  20E2               	addwfc	fsr1h,w,c
  7952  011A94  6E36               	movwf	(btemp+1)^0,c
  7953  011A96  0060  F0D7  FFE6   	movff	btemp,postinc1
  7954  011A9C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7955  011AA2  EC46  F0AE         	call	_strncmp	;wreg free
  7956  011AA6  5035               	movf	btemp^0,w,c
  7957  011AA8  1036               	iorwf	(btemp+1)^0,w,c
  7958  011AAA  A4D8               	btfss	status,2,c
  7959  011AAC  D096               	goto	l9976
  7960                           
  7961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7962                           ;stkvar	_fmt @ sp[(-32)+-4]
  7963  011AAE  0EDC               	movlw	-36
  7964  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7965  011AB6  0EDD               	movlw	-35
  7966  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7967  011ABE  006F FF78  F03F    	movff	postinc2,btemp+10
  7968  011AC4  006F FF74  F040    	movff	postdec2,btemp+11
  7969  011ACA  0E01               	movlw	1
  7970  011ACC  263F               	addwf	(btemp+10)^0,f,c
  7971  011ACE  0E00               	movlw	0
  7972  011AD0  2240               	addwfc	(btemp+11)^0,f,c
  7973  011AD2  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7974  011AD8  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7975  011ADE                     	if	0	;tblptru may be non-zero
  7976  011ADE                     	endif
  7977  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7978  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  7979  011AE0  6EF8               	movwf	tblptru,c
  7980  011AE2                     	endif
  7981                           
  7982                           ;stkvar	_c @ sp[(-32)+31]
  7983  011AE2  0008               	tblrd		*
  7984  011AE4  0EFF               	movlw	-1
  7985  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  7986  011AEC  0EBF               	movlw	191
  7987  011AEE  6E3F               	movwf	(btemp+10)^0,c
  7988  011AF0  0EFF               	movlw	255
  7989  011AF2  6E40               	movwf	(btemp+11)^0,c
  7990                           
  7991                           ;stkvar	_fmt @ sp[(-32)+-4]
  7992  011AF4  0EDC               	movlw	-36
  7993  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7994  011AFC  0EDD               	movlw	-35
  7995  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7996  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  7997  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7998  011B10                     	if	0	;tblptru may be non-zero
  7999  011B10                     	endif
  8000  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8001  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8002  011B12  6EF8               	movwf	tblptru,c
  8003  011B14                     	endif
  8004  011B14  0008               	tblrd		*
  8005  011B16  50F5               	movf	tablat,w,c
  8006  011B18  6E3D               	movwf	(btemp+8)^0,c
  8007  011B1A  6A3E               	clrf	(btemp+9)^0,c
  8008  011B1C  503F               	movf	(btemp+10)^0,w,c
  8009  011B1E  263D               	addwf	(btemp+8)^0,f,c
  8010  011B20  5040               	movf	(btemp+11)^0,w,c
  8011  011B22  223E               	addwfc	(btemp+9)^0,f,c
  8012  011B24  503E               	movf	(btemp+9)^0,w,c
  8013  011B26  E106               	bnz	u10460
  8014  011B28  0E1A               	movlw	26
  8015  011B2A  5C3D               	subwf	(btemp+8)^0,w,c
  8016  011B2C  B0D8               	btfsc	status,0,c
  8017  011B2E  D002               	goto	u10460
  8018  011B30  0E01               	movlw	1
  8019  011B32  D001               	goto	u10470
  8020  011B34                     u10460:
  8021  011B34  0E00               	movlw	0
  8022  011B36                     u10470:
  8023  011B36  6E3F               	movwf	(btemp+10)^0,c
  8024  011B38  6A40               	clrf	(btemp+11)^0,c
  8025                           
  8026                           ;stkvar	_vfpfcnvrt$4261 @ sp[(-32)+2]
  8027  011B3A  0EE2               	movlw	-30
  8028  011B3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8029  011B42  0EE3               	movlw	-29
  8030  011B44  0060  F103  FFE3   	movff	btemp+11,plusw1
  8031                           
  8032                           ;stkvar	_vfpfcnvrt$4261 @ sp[(-32)+2]
  8033  011B4A  0EE2               	movlw	-30
  8034  011B4C  006F FF8C  F035    	movff	plusw1,btemp
  8035  011B52  0EE3               	movlw	-29
  8036  011B54  50E3               	movf	plusw1,w,c
  8037  011B56  1035               	iorwf	btemp^0,w,c
  8038                           
  8039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8040                           ;stkvar	_ap @ sp[(-32)+-6]
  8041                           
  8042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8043                           
  8044                           ;stkvar	_f @ sp[(-32)+22]
  8045                           
  8046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8047                           ;stkvar	_ap @ sp[(-32)+-6]
  8048  011B58  0EDA               	movlw	-38
  8049  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8050  011B60  0EDB               	movlw	-37
  8051  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  8052  011B68  0E04               	movlw	4
  8053  011B6A  5EDE               	subwf	postinc2,f,c
  8054  011B6C  0E00               	movlw	0
  8055  011B6E  5ADD               	subwfb	postdec2,f,c
  8056  011B70  006F FF78  F03F    	movff	postinc2,btemp+10
  8057  011B76  006F FF74  F040    	movff	postdec2,btemp+11
  8058  011B7C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8059  011B82  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8060  011B88  006F FF78  F03D    	movff	postinc2,btemp+8
  8061  011B8E  006F FF78  F03E    	movff	postinc2,btemp+9
  8062  011B94  006F FF78  F03F    	movff	postinc2,btemp+10
  8063  011B9A  006F FF78  F040    	movff	postinc2,btemp+11
  8064                           
  8065                           ;stkvar	_f @ sp[(-32)+22]
  8066  011BA0  0EF6               	movlw	-10
  8067  011BA2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8068  011BA8  0EF7               	movlw	-9
  8069  011BAA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8070  011BB0  0EF8               	movlw	-8
  8071  011BB2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8072  011BB8  0EF9               	movlw	-7
  8073  011BBA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8074                           
  8075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8076                           ;stkvar	_fmt @ sp[(-32)+-4]
  8077  011BC0  0EDC               	movlw	-36
  8078  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8079  011BC8  0EDD               	movlw	-35
  8080  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8081  011BD0  0E02               	movlw	2
  8082  011BD2  26DE               	addwf	postinc2,f,c
  8083  011BD4  0E00               	movlw	0
  8084  011BD6  22DD               	addwfc	postdec2,f,c
  8085  011BD8  D736               	goto	l9952
  8086  011BDA                     l9976:
  8087                           
  8088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8089                           ;stkvar	_fmt @ sp[(-32)+-4]
  8090  011BDA  0EDC               	movlw	-36
  8091  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8092  011BE2  0EDD               	movlw	-35
  8093  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8094  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8095  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8096  011BF6                     	if	0	;tblptru may be non-zero
  8097  011BF6                     	endif
  8098  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8099  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8100  011BF8  6EF8               	movwf	tblptru,c
  8101  011BFA                     	endif
  8102  011BFA  0008               	tblrd		*
  8103  011BFC  50F5               	movf	tablat,w,c
  8104  011BFE  0A73               	xorlw	115
  8105  011C00  A4D8               	btfss	status,2,c
  8106  011C02  D042               	goto	l9986
  8107                           
  8108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8109                           ;stkvar	_fmt @ sp[(-32)+-4]
  8110  011C04  0EDC               	movlw	-36
  8111  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8112  011C0C  0EDD               	movlw	-35
  8113  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8114  011C14  2ADE               	incf	postinc2,f,c
  8115  011C16  0E00               	movlw	0
  8116  011C18  22DD               	addwfc	postdec2,f,c
  8117                           
  8118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8119                           ;stkvar	_ap @ sp[(-32)+-6]
  8120  011C1A  0EDA               	movlw	-38
  8121  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8122  011C22  0EDB               	movlw	-37
  8123  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8124  011C2A  0E02               	movlw	2
  8125  011C2C  5EDE               	subwf	postinc2,f,c
  8126  011C2E  0E00               	movlw	0
  8127  011C30  5ADD               	subwfb	postdec2,f,c
  8128  011C32  006F FF78  F03F    	movff	postinc2,btemp+10
  8129  011C38  006F FF74  F040    	movff	postdec2,btemp+11
  8130  011C3E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8131  011C44  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8132  011C4A  006F FF78  F03F    	movff	postinc2,btemp+10
  8133  011C50  006F FF74  F040    	movff	postdec2,btemp+11
  8134                           
  8135                           ;stkvar	_cp @ sp[(-32)+29]
  8136  011C56  0EFE               	movlw	-2
  8137  011C58  0060  F103  FFE3   	movff	btemp+11,plusw1
  8138  011C5E  0EFD               	movlw	-3
  8139  011C60  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8140                           
  8141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8142                           ;stkvar	_cp @ sp[(-32)+29]
  8143  011C66  0EFD               	movlw	-3
  8144  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8145  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8146                           
  8147                           ;stkvar	_fp @ sp[(-34)+-2]
  8148  011C74  0EDC               	movlw	-36
  8149  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8150  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8151  011C82  EC4D  F0A9         	call	_stoa	;wreg free
  8152  011C86  D2AF               	goto	l1978
  8153  011C88                     l9986:
  8154                           
  8155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8156                           ;stkvar	_fmt @ sp[(-32)+-4]
  8157  011C88  0EDC               	movlw	-36
  8158  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8159  011C90  0EDD               	movlw	-35
  8160  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8161  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8162  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8163  011CA4                     	if	0	;tblptru may be non-zero
  8164  011CA4                     	endif
  8165  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8166  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8167  011CA6  6EF8               	movwf	tblptru,c
  8168  011CA8                     	endif
  8169  011CA8  0008               	tblrd		*
  8170  011CAA  50F5               	movf	tablat,w,c
  8171  011CAC  0A75               	xorlw	117
  8172  011CAE  A4D8               	btfss	status,2,c
  8173  011CB0  D07C               	goto	l9996
  8174                           
  8175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8176                           ;stkvar	_fmt @ sp[(-32)+-4]
  8177  011CB2  0EDC               	movlw	-36
  8178  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8179  011CBA  0EDD               	movlw	-35
  8180  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8181  011CC2  2ADE               	incf	postinc2,f,c
  8182  011CC4  0E00               	movlw	0
  8183  011CC6  22DD               	addwfc	postdec2,f,c
  8184                           
  8185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8186                           ;stkvar	_ap @ sp[(-32)+-6]
  8187  011CC8  0EDA               	movlw	-38
  8188  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8189  011CD0  0EDB               	movlw	-37
  8190  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8191  011CD8  0E02               	movlw	2
  8192  011CDA  5EDE               	subwf	postinc2,f,c
  8193  011CDC  0E00               	movlw	0
  8194  011CDE  5ADD               	subwfb	postdec2,f,c
  8195  011CE0  006F FF78  F03F    	movff	postinc2,btemp+10
  8196  011CE6  006F FF74  F040    	movff	postdec2,btemp+11
  8197  011CEC  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8198  011CF2  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8199  011CF8  006F FF78  F03F    	movff	postinc2,btemp+10
  8200  011CFE  006F FF74  F040    	movff	postdec2,btemp+11
  8201  011D04  503F               	movf	(btemp+10)^0,w,c
  8202  011D06  6E45               	movwf	(btemp+16)^0,c
  8203  011D08  5040               	movf	(btemp+11)^0,w,c
  8204  011D0A  6E46               	movwf	(btemp+17)^0,c
  8205  011D0C  6A47               	clrf	(btemp+18)^0,c
  8206  011D0E  6A48               	clrf	(btemp+19)^0,c
  8207  011D10  6A49               	clrf	(btemp+20)^0,c
  8208  011D12  6A4A               	clrf	(btemp+21)^0,c
  8209  011D14  6A4B               	clrf	(btemp+22)^0,c
  8210  011D16  6A4C               	clrf	(btemp+23)^0,c
  8211                           
  8212                           ;stkvar	_llu @ sp[(-32)+6]
  8213  011D18  0EE6               	movlw	-26
  8214  011D1A  0060  F117  FFE3   	movff	btemp+16,plusw1
  8215  011D20  0EE7               	movlw	-25
  8216  011D22  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8217  011D28  0EE8               	movlw	-24
  8218  011D2A  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8219  011D30  0EE9               	movlw	-23
  8220  011D32  0060  F123  FFE3   	movff	btemp+19,plusw1
  8221  011D38  0EEA               	movlw	-22
  8222  011D3A  0060  F127  FFE3   	movff	btemp+20,plusw1
  8223  011D40  0EEB               	movlw	-21
  8224  011D42  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8225  011D48  0EEC               	movlw	-20
  8226  011D4A  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8227  011D50  0EED               	movlw	-19
  8228  011D52  0060  F133  FFE3   	movff	btemp+23,plusw1
  8229                           
  8230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8231                           ;stkvar	_llu @ sp[(-32)+6]
  8232  011D58  50E1               	movf	fsr1l,w,c
  8233  011D5A  0FE6               	addlw	-26
  8234  011D5C  6ED9               	movwf	fsr2l,c
  8235  011D5E  50E2               	movf	fsr1h,w,c
  8236  011D60  6EDA               	movwf	fsr2h,c
  8237  011D62  0EFF               	movlw	255
  8238  011D64  22DA               	addwfc	fsr2h,f,c
  8239  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8240  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8241  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8242  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8243  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8244  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8245  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8246  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8247                           
  8248                           ;stkvar	_fp @ sp[(-40)+-2]
  8249  011D96  0ED6               	movlw	-42
  8250  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8251  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8252  011DA4  EC37  F0A6         	call	_utoa	;wreg free
  8253  011DA8  D21E               	goto	l1978
  8254  011DAA                     l9996:
  8255                           
  8256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8257  011DAA  0E02               	movlw	2
  8258  011DAC  6EE6               	movwf	postinc1,c
  8259  011DAE  0E00               	movlw	0
  8260  011DB0  6EE6               	movwf	postinc1,c
  8261  011DB2  0EF3               	movlw	low STR_56
  8262  011DB4  6EE6               	movwf	postinc1,c
  8263  011DB6  0EFF               	movlw	high STR_56
  8264  011DB8  6EE6               	movwf	postinc1,c
  8265                           
  8266                           ;stkvar	_fmt @ sp[(-36)+-4]
  8267  011DBA  0ED8               	movlw	-40
  8268  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8269  011DC2  0ED9               	movlw	-39
  8270  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8271  011DCA  006F FF78  F03F    	movff	postinc2,btemp+10
  8272  011DD0  006F FF74  F040    	movff	postdec2,btemp+11
  8273  011DD6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8274  011DDC  0060  F103  FFE6   	movff	btemp+11,postinc1
  8275  011DE2  EC46  F0AE         	call	_strncmp	;wreg free
  8276  011DE6  5035               	movf	btemp^0,w,c
  8277  011DE8  1036               	iorwf	(btemp+1)^0,w,c
  8278  011DEA  A4D8               	btfss	status,2,c
  8279  011DEC  D039               	goto	l10006
  8280                           
  8281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8282                           ;stkvar	_fmt @ sp[(-32)+-4]
  8283  011DEE  0EDC               	movlw	-36
  8284  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8285  011DF6  0EDD               	movlw	-35
  8286  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8287  011DFE  0E02               	movlw	2
  8288  011E00  26DE               	addwf	postinc2,f,c
  8289  011E02  0E00               	movlw	0
  8290  011E04  22DD               	addwfc	postdec2,f,c
  8291                           
  8292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8293                           ;stkvar	_ap @ sp[(-32)+-6]
  8294  011E06  0EDA               	movlw	-38
  8295  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8296  011E0E  0EDB               	movlw	-37
  8297  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8298  011E16  0E04               	movlw	4
  8299  011E18  5EDE               	subwf	postinc2,f,c
  8300  011E1A  0E00               	movlw	0
  8301  011E1C  5ADD               	subwfb	postdec2,f,c
  8302  011E1E  006F FF78  F03F    	movff	postinc2,btemp+10
  8303  011E24  006F FF74  F040    	movff	postdec2,btemp+11
  8304  011E2A  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8305  011E30  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8306  011E36  006F FF78  F03D    	movff	postinc2,btemp+8
  8307  011E3C  006F FF78  F03E    	movff	postinc2,btemp+9
  8308  011E42  006F FF78  F03F    	movff	postinc2,btemp+10
  8309  011E48  006F FF78  F040    	movff	postinc2,btemp+11
  8310  011E4E  503D               	movf	(btemp+8)^0,w,c
  8311  011E50  6E45               	movwf	(btemp+16)^0,c
  8312  011E52  503E               	movf	(btemp+9)^0,w,c
  8313  011E54  6E46               	movwf	(btemp+17)^0,c
  8314  011E56  503F               	movf	(btemp+10)^0,w,c
  8315  011E58  6E47               	movwf	(btemp+18)^0,c
  8316  011E5A  5040               	movf	(btemp+11)^0,w,c
  8317  011E5C  6E48               	movwf	(btemp+19)^0,c
  8318  011E5E  D758               	goto	L5
  8319  011E60                     l10006:
  8320                           
  8321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8322                           ;stkvar	_fmt @ sp[(-32)+-4]
  8323  011E60  0EDC               	movlw	-36
  8324  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8325  011E68  0EDD               	movlw	-35
  8326  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8327  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8328  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8329  011E7C                     	if	0	;tblptru may be non-zero
  8330  011E7C                     	endif
  8331  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8332  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8333  011E7E  6EF8               	movwf	tblptru,c
  8334  011E80                     	endif
  8335  011E80  0008               	tblrd		*
  8336  011E82  50F5               	movf	tablat,w,c
  8337  011E84  0A78               	xorlw	120
  8338  011E86  B4D8               	btfsc	status,2,c
  8339  011E88  D015               	goto	u10530
  8340                           
  8341                           ;stkvar	_fmt @ sp[(-32)+-4]
  8342  011E8A  0EDC               	movlw	-36
  8343  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8344  011E92  0EDD               	movlw	-35
  8345  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8346  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8347  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8348  011EA6                     	if	0	;tblptru may be non-zero
  8349  011EA6                     	endif
  8350  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8351  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8352  011EA8  6EF8               	movwf	tblptru,c
  8353  011EAA                     	endif
  8354  011EAA  0008               	tblrd		*
  8355  011EAC  50F5               	movf	tablat,w,c
  8356  011EAE  0A58               	xorlw	88
  8357  011EB0  A4D8               	btfss	status,2,c
  8358  011EB2  D094               	goto	l10020
  8359  011EB4                     u10530:
  8360                           
  8361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8362                           ;stkvar	_fmt @ sp[(-32)+-4]
  8363  011EB4  0EDC               	movlw	-36
  8364  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8365  011EBC  0EDD               	movlw	-35
  8366  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8367  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8368  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8369  011ED0                     	if	0	;tblptru may be non-zero
  8370  011ED0                     	endif
  8371  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8372  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8373  011ED2  6EF8               	movwf	tblptru,c
  8374  011ED4                     	endif
  8375                           
  8376                           ;stkvar	_c @ sp[(-32)+31]
  8377  011ED4  0008               	tblrd		*
  8378  011ED6  0EFF               	movlw	-1
  8379  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8380                           
  8381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8382                           ;stkvar	_fmt @ sp[(-32)+-4]
  8383  011EDE  0EDC               	movlw	-36
  8384  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8385  011EE6  0EDD               	movlw	-35
  8386  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8387  011EEE  2ADE               	incf	postinc2,f,c
  8388  011EF0  0E00               	movlw	0
  8389  011EF2  22DD               	addwfc	postdec2,f,c
  8390                           
  8391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8392                           ;stkvar	_ap @ sp[(-32)+-6]
  8393  011EF4  0EDA               	movlw	-38
  8394  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8395  011EFC  0EDB               	movlw	-37
  8396  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8397  011F04  0E02               	movlw	2
  8398  011F06  5EDE               	subwf	postinc2,f,c
  8399  011F08  0E00               	movlw	0
  8400  011F0A  5ADD               	subwfb	postdec2,f,c
  8401  011F0C  006F FF78  F03F    	movff	postinc2,btemp+10
  8402  011F12  006F FF74  F040    	movff	postdec2,btemp+11
  8403  011F18  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8404  011F1E  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8405  011F24  006F FF78  F03F    	movff	postinc2,btemp+10
  8406  011F2A  006F FF74  F040    	movff	postdec2,btemp+11
  8407  011F30  503F               	movf	(btemp+10)^0,w,c
  8408  011F32  6E45               	movwf	(btemp+16)^0,c
  8409  011F34  5040               	movf	(btemp+11)^0,w,c
  8410  011F36  6E46               	movwf	(btemp+17)^0,c
  8411  011F38  6A47               	clrf	(btemp+18)^0,c
  8412  011F3A  6A48               	clrf	(btemp+19)^0,c
  8413  011F3C  6A49               	clrf	(btemp+20)^0,c
  8414  011F3E  6A4A               	clrf	(btemp+21)^0,c
  8415  011F40  6A4B               	clrf	(btemp+22)^0,c
  8416  011F42  6A4C               	clrf	(btemp+23)^0,c
  8417                           
  8418                           ;stkvar	_llu @ sp[(-32)+6]
  8419  011F44  0EE6               	movlw	-26
  8420  011F46  0060  F117  FFE3   	movff	btemp+16,plusw1
  8421  011F4C  0EE7               	movlw	-25
  8422  011F4E  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8423  011F54  0EE8               	movlw	-24
  8424  011F56  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8425  011F5C  0EE9               	movlw	-23
  8426  011F5E  0060  F123  FFE3   	movff	btemp+19,plusw1
  8427  011F64  0EEA               	movlw	-22
  8428  011F66  0060  F127  FFE3   	movff	btemp+20,plusw1
  8429  011F6C  0EEB               	movlw	-21
  8430  011F6E  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8431  011F74  0EEC               	movlw	-20
  8432  011F76  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8433  011F7C  0EED               	movlw	-19
  8434  011F7E  0060  F133  FFE3   	movff	btemp+23,plusw1
  8435                           
  8436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8437                           ;stkvar	_c @ sp[(-32)+31]
  8438  011F84  0EFF               	movlw	-1
  8439  011F86  50E3               	movf	plusw1,w,c
  8440  011F88  6EE6               	movwf	postinc1,c
  8441                           
  8442                           ;stkvar	_llu @ sp[(-33)+6]
  8443  011F8A  50E1               	movf	fsr1l,w,c
  8444  011F8C  0FE5               	addlw	-27
  8445  011F8E  6ED9               	movwf	fsr2l,c
  8446  011F90  50E2               	movf	fsr1h,w,c
  8447  011F92  6EDA               	movwf	fsr2h,c
  8448  011F94  0EFF               	movlw	255
  8449  011F96  22DA               	addwfc	fsr2h,f,c
  8450  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8451  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8452  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8453  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8454  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8455  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8456  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8457  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8458                           
  8459                           ;stkvar	_fp @ sp[(-41)+-2]
  8460  011FC8  0ED5               	movlw	-43
  8461  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8462  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8463  011FD6  ECA4  F0A2         	call	_xtoa	;wreg free
  8464  011FDA  D105               	goto	l1978
  8465  011FDC                     l10020:
  8466                           
  8467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8468  011FDC  0E02               	movlw	2
  8469  011FDE  6EE6               	movwf	postinc1,c
  8470  011FE0  0E00               	movlw	0
  8471  011FE2  6EE6               	movwf	postinc1,c
  8472  011FE4  0EF6               	movlw	low STR_61
  8473  011FE6  6EE6               	movwf	postinc1,c
  8474  011FE8  0EFF               	movlw	high STR_61
  8475  011FEA  6EE6               	movwf	postinc1,c
  8476                           
  8477                           ;stkvar	_fmt @ sp[(-36)+-4]
  8478  011FEC  0ED8               	movlw	-40
  8479  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8480  011FF4  0ED9               	movlw	-39
  8481  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8482  011FFC  006F FF78  F03F    	movff	postinc2,btemp+10
  8483  012002  006F FF74  F040    	movff	postdec2,btemp+11
  8484  012008  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8485  01200E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8486  012014  EC46  F0AE         	call	_strncmp	;wreg free
  8487  012018  5035               	movf	btemp^0,w,c
  8488  01201A  1036               	iorwf	(btemp+1)^0,w,c
  8489  01201C  B4D8               	btfsc	status,2,c
  8490  01201E  D022               	goto	u10550
  8491  012020  0E02               	movlw	2
  8492  012022  6EE6               	movwf	postinc1,c
  8493  012024  0E00               	movlw	0
  8494  012026  6EE6               	movwf	postinc1,c
  8495  012028  0EE7               	movlw	low STR_65
  8496  01202A  6EE6               	movwf	postinc1,c
  8497  01202C  0EFF               	movlw	high STR_65
  8498  01202E  6EE6               	movwf	postinc1,c
  8499                           
  8500                           ;stkvar	_fmt @ sp[(-36)+-4]
  8501  012030  0ED8               	movlw	-40
  8502  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8503  012038  0ED9               	movlw	-39
  8504  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8505  012040  006F FF78  F03F    	movff	postinc2,btemp+10
  8506  012046  006F FF74  F040    	movff	postdec2,btemp+11
  8507  01204C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8508  012052  0060  F103  FFE6   	movff	btemp+11,postinc1
  8509  012058  EC46  F0AE         	call	_strncmp	;wreg free
  8510  01205C  5035               	movf	btemp^0,w,c
  8511  01205E  1036               	iorwf	(btemp+1)^0,w,c
  8512  012060  A4D8               	btfss	status,2,c
  8513  012062  D058               	goto	l10034
  8514  012064                     u10550:
  8515                           
  8516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8517                           ;stkvar	_fmt @ sp[(-32)+-4]
  8518  012064  0EDC               	movlw	-36
  8519  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8520  01206C  0EDD               	movlw	-35
  8521  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8522  012074  006F FF78  F03F    	movff	postinc2,btemp+10
  8523  01207A  006F FF74  F040    	movff	postdec2,btemp+11
  8524  012080  0E01               	movlw	1
  8525  012082  263F               	addwf	(btemp+10)^0,f,c
  8526  012084  0E00               	movlw	0
  8527  012086  2240               	addwfc	(btemp+11)^0,f,c
  8528  012088  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  8529  01208E  0060  F103  FFF7   	movff	btemp+11,tblptrh
  8530  012094                     	if	0	;tblptru may be non-zero
  8531  012094                     	endif
  8532  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8533  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8534  012096  6EF8               	movwf	tblptru,c
  8535  012098                     	endif
  8536                           
  8537                           ;stkvar	_c @ sp[(-32)+31]
  8538  012098  0008               	tblrd		*
  8539  01209A  0EFF               	movlw	-1
  8540  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8541                           
  8542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8543                           ;stkvar	_fmt @ sp[(-32)+-4]
  8544  0120A2  0EDC               	movlw	-36
  8545  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8546  0120AA  0EDD               	movlw	-35
  8547  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8548  0120B2  0E02               	movlw	2
  8549  0120B4  26DE               	addwf	postinc2,f,c
  8550  0120B6  0E00               	movlw	0
  8551  0120B8  22DD               	addwfc	postdec2,f,c
  8552                           
  8553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8554                           ;stkvar	_ap @ sp[(-32)+-6]
  8555  0120BA  0EDA               	movlw	-38
  8556  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8557  0120C2  0EDB               	movlw	-37
  8558  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8559  0120CA  0E04               	movlw	4
  8560  0120CC  5EDE               	subwf	postinc2,f,c
  8561  0120CE  0E00               	movlw	0
  8562  0120D0  5ADD               	subwfb	postdec2,f,c
  8563  0120D2  006F FF78  F03F    	movff	postinc2,btemp+10
  8564  0120D8  006F FF74  F040    	movff	postdec2,btemp+11
  8565  0120DE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8566  0120E4  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8567  0120EA  006F FF78  F03D    	movff	postinc2,btemp+8
  8568  0120F0  006F FF78  F03E    	movff	postinc2,btemp+9
  8569  0120F6  006F FF78  F03F    	movff	postinc2,btemp+10
  8570  0120FC  006F FF78  F040    	movff	postinc2,btemp+11
  8571  012102  503D               	movf	(btemp+8)^0,w,c
  8572  012104  6E45               	movwf	(btemp+16)^0,c
  8573  012106  503E               	movf	(btemp+9)^0,w,c
  8574  012108  6E46               	movwf	(btemp+17)^0,c
  8575  01210A  503F               	movf	(btemp+10)^0,w,c
  8576  01210C  6E47               	movwf	(btemp+18)^0,c
  8577  01210E  5040               	movf	(btemp+11)^0,w,c
  8578  012110  6E48               	movwf	(btemp+19)^0,c
  8579  012112  D714               	goto	L6
  8580  012114                     l10034:
  8581                           
  8582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8583                           ;stkvar	_fmt @ sp[(-32)+-4]
  8584  012114  0EDC               	movlw	-36
  8585  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8586  01211C  0EDD               	movlw	-35
  8587  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8588  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8589  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8590  012130                     	if	0	;tblptru may be non-zero
  8591  012130                     	endif
  8592  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8593  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8594  012132  6EF8               	movwf	tblptru,c
  8595  012134                     	endif
  8596  012134  0008               	tblrd		*
  8597  012136  50F5               	movf	tablat,w,c
  8598  012138  0A25               	xorlw	37
  8599  01213A  A4D8               	btfss	status,2,c
  8600  01213C  D01A               	goto	l10044
  8601                           
  8602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8603                           ;stkvar	_fmt @ sp[(-32)+-4]
  8604  01213E  0EDC               	movlw	-36
  8605  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8606  012146  0EDD               	movlw	-35
  8607  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8608  01214E  2ADE               	incf	postinc2,f,c
  8609  012150  0E00               	movlw	0
  8610  012152  22DD               	addwfc	postdec2,f,c
  8611                           
  8612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8613                           ;stkvar	_fp @ sp[(-32)+-2]
  8614  012154  0EDE               	movlw	-34
  8615  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8616  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8617  012162  0E25               	movlw	37
  8618  012164  6EE6               	movwf	postinc1,c
  8619  012166  0E00               	movlw	0
  8620  012168  6EE6               	movwf	postinc1,c
  8621  01216A  EC14  F0B7         	call	_fputc	;wreg free
  8622  01216E                     l10040:
  8623                           
  8624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8625  01216E  0E01               	movlw	1
  8626  012170  D00C               	goto	L7
  8627  012172                     l10044:
  8628                           
  8629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8630                           ;stkvar	_fmt @ sp[(-32)+-4]
  8631  012172  0EDC               	movlw	-36
  8632  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8633  01217A  0EDD               	movlw	-35
  8634  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8635  012182  2ADE               	incf	postinc2,f,c
  8636  012184  0E00               	movlw	0
  8637  012186  22DD               	addwfc	postdec2,f,c
  8638                           
  8639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8640  012188  0E00               	movlw	0
  8641  01218A                     L7:
  8642  01218A  6E35               	movwf	btemp^0,c
  8643  01218C  0E00               	movlw	0
  8644  01218E  6E36               	movwf	(btemp+1)^0,c
  8645  012190  D02A               	goto	l1978
  8646  012192                     l10050:
  8647                           
  8648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8649                           ;stkvar	_fp @ sp[(-32)+-2]
  8650  012192  0EDE               	movlw	-34
  8651  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8652  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8653                           
  8654                           ;stkvar	_fmt @ sp[(-34)+-4]
  8655  0121A0  0EDA               	movlw	-38
  8656  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8657  0121A8  0EDB               	movlw	-37
  8658  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8659  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8660  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8661  0121BC                     	if	0	;tblptru may be non-zero
  8662  0121BC                     	endif
  8663  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8664  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8665  0121BE  6EF8               	movwf	tblptru,c
  8666  0121C0                     	endif
  8667  0121C0  0008               	tblrd		*
  8668  0121C2  50F5               	movf	tablat,w,c
  8669  0121C4  6EE6               	movwf	postinc1,c
  8670  0121C6  0E00               	movlw	0
  8671  0121C8  6EE6               	movwf	postinc1,c
  8672  0121CA  EC14  F0B7         	call	_fputc	;wreg free
  8673                           
  8674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8675                           ;stkvar	_fmt @ sp[(-32)+-4]
  8676  0121CE  0EDC               	movlw	-36
  8677  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8678  0121D6  0EDD               	movlw	-35
  8679  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8680  0121DE  2ADE               	incf	postinc2,f,c
  8681  0121E0  0E00               	movlw	0
  8682  0121E2  22DD               	addwfc	postdec2,f,c
  8683  0121E4  D7C4               	goto	l10040
  8684  0121E6                     l1978:
  8685                           
  8686                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8687  0121E6  0EDA               	movlw	218
  8688  0121E8  26E1               	addwf	fsr1l,f,c
  8689  0121EA  0EFF               	movlw	255
  8690  0121EC  22E2               	addwfc	fsr1h,f,c
  8691  0121EE  0012               	return		;funcret
  8692  0121F0                     __end_of_vfpfcnvrt:
  8693                           	opt callstack 0
  8694                           
  8695 ;; *************** function _xtoa *****************
  8696 ;; Defined at:
  8697 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8700 ;;		 -> f(6), NULL(0), 
  8701 ;;  d               8  [STACK] unsigned long long 
  8702 ;;  x               1  [STACK] unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  n               8  [STACK] unsigned long long 
  8705 ;;  c               2  [STACK] int 
  8706 ;;  i               2  [STACK] int 
  8707 ;;  w               2  [STACK] int 
  8708 ;;  p               2  [STACK] int 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  2  [STACK] int 
  8711 ;; Registers used:
  8712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/4
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8722 ;;Total ram usage:        0 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:   11
  8725 ;; This function calls:
  8726 ;;		_isalpha
  8727 ;;		_isupper
  8728 ;;		_pad
  8729 ;;		_toupper
  8730 ;; This function is called by:
  8731 ;;		_vfpfcnvrt
  8732 ;; This function uses a reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text36
  8736  014548                     __ptext36:
  8737                           	opt callstack 0
  8738  014548                     _xtoa:
  8739                           	opt callstack 0
  8740                           
  8741                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8742  014548  0E14               	movlw	20
  8743  01454A  26E1               	addwf	fsr1l,f,c
  8744  01454C  0E00               	movlw	0
  8745  01454E  22E2               	addwfc	fsr1h,f,c
  8746                           
  8747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8748                           
  8749                           ;incstack = 0
  8750  014550  AE21               	btfss	(_prec+1)^0,7,c
  8751                           
  8752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8753  014552  9222               	bcf	_flags^0,1,c
  8754                           
  8755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8756  014554  BE21               	btfsc	(_prec+1)^0,7,c
  8757  014556  D005               	goto	u10090
  8758  014558  5021               	movf	(_prec+1)^0,w,c
  8759  01455A  E110               	bnz	l9786
  8760  01455C  0420               	decf	_prec^0,w,c
  8761  01455E  B0D8               	btfsc	status,0,c
  8762  014560  D00D               	goto	l9786
  8763  014562                     u10090:
  8764  014562  0E01               	movlw	1
  8765  014564  6E3F               	movwf	(btemp+10)^0,c
  8766  014566  0E00               	movlw	0
  8767  014568  6E40               	movwf	(btemp+11)^0,c
  8768                           
  8769                           ;stkvar	_p @ sp[(-20)+18]
  8770  01456A  0EFE               	movlw	-2
  8771  01456C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8772  014572  0EFF               	movlw	-1
  8773  014574  0060  F103  FFE3   	movff	btemp+11,plusw1
  8774  01457A  D008               	goto	l1928
  8775  01457C                     l9786:
  8776                           
  8777                           ;stkvar	_p @ sp[(-20)+18]
  8778  01457C  0EFE               	movlw	-2
  8779  01457E  0060  F083  FFE3   	movff	_prec,plusw1
  8780  014584  0EFF               	movlw	-1
  8781  014586  0060  F087  FFE3   	movff	_prec+1,plusw1
  8782  01458C                     l1928:
  8783                           
  8784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8785                           ;stkvar	_w @ sp[(-20)+16]
  8786  01458C  0EFC               	movlw	-4
  8787  01458E  0060  F07B  FFE3   	movff	_width,plusw1
  8788  014594  0EFD               	movlw	-3
  8789  014596  0060  F07F  FFE3   	movff	_width+1,plusw1
  8790                           
  8791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8792  01459C  A822               	btfss	_flags^0,4,c
  8793  01459E  D00B               	goto	l9792
  8794                           
  8795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8796                           ;stkvar	_w @ sp[(-20)+16]
  8797  0145A0  50E1               	movf	fsr1l,w,c
  8798  0145A2  0FFC               	addlw	-4
  8799  0145A4  6ED9               	movwf	fsr2l,c
  8800  0145A6  50E2               	movf	fsr1h,w,c
  8801  0145A8  6EDA               	movwf	fsr2h,c
  8802  0145AA  0EFF               	movlw	255
  8803  0145AC  22DA               	addwfc	fsr2h,f,c
  8804  0145AE  0EFE               	movlw	254
  8805  0145B0  26DE               	addwf	postinc2,f,c
  8806  0145B2  0EFF               	movlw	255
  8807  0145B4  22DD               	addwfc	postdec2,f,c
  8808  0145B6                     l9792:
  8809                           
  8810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8811                           ;stkvar	_d @ sp[(-20)+-10]
  8812  0145B6  0EE2               	movlw	226
  8813  0145B8  24E1               	addwf	fsr1l,w,c
  8814  0145BA  6ED9               	movwf	fsr2l,c
  8815  0145BC  0EFF               	movlw	255
  8816  0145BE  20E2               	addwfc	fsr1h,w,c
  8817  0145C0  6EDA               	movwf	fsr2h,c
  8818                           
  8819                           ;stkvar	_n @ sp[(-20)+4]
  8820  0145C2  0E08               	movlw	8
  8821  0145C4  6E35               	movwf	btemp^0,c
  8822  0145C6  0EF0               	movlw	-16
  8823  0145C8                     us1011999:
  8824  0145C8  006F FF7B FFE3     	movff	postinc2,plusw1
  8825  0145CE  28E8               	incf	wreg,w,c
  8826  0145D0  2E35               	decfsz	btemp^0,f,c
  8827  0145D2  D7FA               	bra	us1011999
  8828                           
  8829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8830  0145D4  0E4F               	movlw	79
  8831  0145D6  6E3F               	movwf	(btemp+10)^0,c
  8832  0145D8  0E00               	movlw	0
  8833  0145DA  6E40               	movwf	(btemp+11)^0,c
  8834                           
  8835                           ;stkvar	_i @ sp[(-20)+14]
  8836  0145DC  0EFA               	movlw	-6
  8837  0145DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8838  0145E4  0EFB               	movlw	-5
  8839  0145E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  8840                           
  8841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8842  0145EC  0102               	movlb	2	; () banked
  8843  0145EE  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8844                           
  8845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8846  0145F0  D0EE               	goto	l9830
  8847  0145F2                     l9798:
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8850                           ;stkvar	_i @ sp[(-20)+14]
  8851  0145F2  50E1               	movf	fsr1l,w,c
  8852  0145F4  0FFA               	addlw	-6
  8853  0145F6  6ED9               	movwf	fsr2l,c
  8854  0145F8  50E2               	movf	fsr1h,w,c
  8855  0145FA  6EDA               	movwf	fsr2h,c
  8856  0145FC  0EFF               	movlw	255
  8857  0145FE  22DA               	addwfc	fsr2h,f,c
  8858  014600  06DE               	decf	postinc2,f,c
  8859  014602  0E00               	movlw	0
  8860  014604  5ADD               	subwfb	postdec2,f,c
  8861                           
  8862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8863                           ;stkvar	_n @ sp[(-20)+4]
  8864  014606  0EF0               	movlw	-16
  8865  014608  006F FF8C  F03F    	movff	plusw1,btemp+10
  8866  01460E  0EF1               	movlw	-15
  8867  014610  006F FF8C  F040    	movff	plusw1,btemp+11
  8868  014616  0E0F               	movlw	15
  8869  014618  163F               	andwf	(btemp+10)^0,f,c
  8870  01461A  0E00               	movlw	0
  8871  01461C  1640               	andwf	(btemp+11)^0,f,c
  8872                           
  8873                           ;stkvar	_c @ sp[(-20)+12]
  8874  01461E  0EF8               	movlw	-8
  8875  014620  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8876  014626  0EF9               	movlw	-7
  8877  014628  0060  F103  FFE3   	movff	btemp+11,plusw1
  8878                           
  8879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8880                           ;stkvar	_c @ sp[(-20)+12]
  8881  01462E  0EF9               	movlw	-7
  8882  014630  BEE3               	btfsc	plusw1,7,c
  8883  014632  D00F               	goto	l9806
  8884  014634  0EF9               	movlw	-7
  8885  014636  50E3               	movf	plusw1,w,c
  8886  014638  E108               	bnz	u10120
  8887  01463A  0EF8               	movlw	-8
  8888  01463C  006F FF8C  F035    	movff	plusw1,btemp
  8889  014642  0E0A               	movlw	10
  8890  014644  5E35               	subwf	btemp^0,f,c
  8891  014646  A0D8               	btfss	status,0,c
  8892  014648  D004               	goto	l9806
  8893  01464A                     u10120:
  8894                           
  8895                           ;stkvar	_c @ sp[(-20)+12]
  8896  01464A  0EF8               	movlw	-8
  8897  01464C  50E3               	movf	plusw1,w,c
  8898  01464E  0F57               	addlw	87
  8899  014650  D003               	goto	L8
  8900  014652                     l9806:
  8901                           
  8902                           ;stkvar	_c @ sp[(-20)+12]
  8903  014652  0EF8               	movlw	-8
  8904  014654  50E3               	movf	plusw1,w,c
  8905  014656  0F30               	addlw	48
  8906  014658                     L8:
  8907  014658  6E3F               	movwf	(btemp+10)^0,c
  8908  01465A  0EF9               	movlw	-7
  8909  01465C  006F FF8C  F040    	movff	plusw1,btemp+11
  8910  014662  0E00               	movlw	0
  8911  014664  2240               	addwfc	(btemp+11)^0,f,c
  8912                           
  8913                           ;stkvar	_c @ sp[(-20)+12]
  8914  014666  0EF8               	movlw	-8
  8915  014668  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8916  01466E  0EF9               	movlw	-7
  8917  014670  0060  F103  FFE3   	movff	btemp+11,plusw1
  8918  014676  0EBF               	movlw	191
  8919  014678  6E3F               	movwf	(btemp+10)^0,c
  8920  01467A  0EFF               	movlw	255
  8921  01467C  6E40               	movwf	(btemp+11)^0,c
  8922                           
  8923                           ;stkvar	_x @ sp[(-20)+-11]
  8924  01467E  0EE1               	movlw	-31
  8925  014680  50E3               	movf	plusw1,w,c
  8926  014682  6E3D               	movwf	(btemp+8)^0,c
  8927  014684  6A3E               	clrf	(btemp+9)^0,c
  8928  014686  503F               	movf	(btemp+10)^0,w,c
  8929  014688  263D               	addwf	(btemp+8)^0,f,c
  8930  01468A  5040               	movf	(btemp+11)^0,w,c
  8931  01468C  223E               	addwfc	(btemp+9)^0,f,c
  8932  01468E  503E               	movf	(btemp+9)^0,w,c
  8933  014690  E106               	bnz	u10130
  8934  014692  0E1A               	movlw	26
  8935  014694  5C3D               	subwf	(btemp+8)^0,w,c
  8936  014696  B0D8               	btfsc	status,0,c
  8937  014698  D002               	goto	u10130
  8938  01469A  0E01               	movlw	1
  8939  01469C  D001               	goto	u10140
  8940  01469E                     u10130:
  8941  01469E  0E00               	movlw	0
  8942  0146A0                     u10140:
  8943  0146A0  6E3F               	movwf	(btemp+10)^0,c
  8944  0146A2  6A40               	clrf	(btemp+11)^0,c
  8945                           
  8946                           ;stkvar	_xtoa$4234 @ sp[(-20)+2]
  8947  0146A4  0EEE               	movlw	-18
  8948  0146A6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8949  0146AC  0EEF               	movlw	-17
  8950  0146AE  0060  F103  FFE3   	movff	btemp+11,plusw1
  8951                           
  8952                           ;stkvar	_xtoa$4234 @ sp[(-20)+2]
  8953  0146B4  0EEE               	movlw	-18
  8954  0146B6  006F FF8C  F035    	movff	plusw1,btemp
  8955  0146BC  0EEF               	movlw	-17
  8956  0146BE  50E3               	movf	plusw1,w,c
  8957  0146C0  1035               	iorwf	btemp^0,w,c
  8958  0146C2  B4D8               	btfsc	status,2,c
  8959  0146C4  D041               	goto	l9822
  8960  0146C6  0E9F               	movlw	159
  8961  0146C8  6E3F               	movwf	(btemp+10)^0,c
  8962  0146CA  0EFF               	movlw	255
  8963  0146CC  6E40               	movwf	(btemp+11)^0,c
  8964                           
  8965                           ;stkvar	_c @ sp[(-20)+12]
  8966  0146CE  0EF8               	movlw	-8
  8967  0146D0  006F FF8C  F03D    	movff	plusw1,btemp+8
  8968  0146D6  0EF9               	movlw	-7
  8969  0146D8  006F FF8C  F03E    	movff	plusw1,btemp+9
  8970  0146DE  0E20               	movlw	32
  8971  0146E0  123D               	iorwf	(btemp+8)^0,f,c
  8972  0146E2  0E00               	movlw	0
  8973  0146E4  123E               	iorwf	(btemp+9)^0,f,c
  8974  0146E6  503F               	movf	(btemp+10)^0,w,c
  8975  0146E8  263D               	addwf	(btemp+8)^0,f,c
  8976  0146EA  5040               	movf	(btemp+11)^0,w,c
  8977  0146EC  223E               	addwfc	(btemp+9)^0,f,c
  8978  0146EE  503E               	movf	(btemp+9)^0,w,c
  8979  0146F0  E106               	bnz	u10160
  8980  0146F2  0E1A               	movlw	26
  8981  0146F4  5C3D               	subwf	(btemp+8)^0,w,c
  8982  0146F6  B0D8               	btfsc	status,0,c
  8983  0146F8  D002               	goto	u10160
  8984  0146FA  0E01               	movlw	1
  8985  0146FC  D001               	goto	u10170
  8986  0146FE                     u10160:
  8987  0146FE  0E00               	movlw	0
  8988  014700                     u10170:
  8989  014700  6E3F               	movwf	(btemp+10)^0,c
  8990  014702  6A40               	clrf	(btemp+11)^0,c
  8991                           
  8992                           ;stkvar	_xtoa$4235 @ sp[(-20)+0]
  8993  014704  0EEC               	movlw	-20
  8994  014706  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8995  01470C  0EED               	movlw	-19
  8996  01470E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8997                           
  8998                           ;stkvar	_xtoa$4235 @ sp[(-20)+0]
  8999  014714  0EEC               	movlw	-20
  9000  014716  006F FF8C  F035    	movff	plusw1,btemp
  9001  01471C  0EED               	movlw	-19
  9002  01471E  50E3               	movf	plusw1,w,c
  9003  014720  1035               	iorwf	btemp^0,w,c
  9004  014722  B4D8               	btfsc	status,2,c
  9005  014724  D011               	goto	l9822
  9006                           
  9007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9008                           ;stkvar	_c @ sp[(-20)+12]
  9009  014726  0EF8               	movlw	-8
  9010  014728  006F FF8F FFE6     	movff	plusw1,postinc1
  9011  01472E  006F FF8F FFE6     	movff	plusw1,postinc1
  9012  014734  EC85  F0BE         	call	_toupper	;wreg free
  9013                           
  9014                           ;stkvar	_c @ sp[(-20)+12]
  9015  014738  0EF8               	movlw	-8
  9016  01473A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9017  014740  0EF9               	movlw	-7
  9018  014742  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9019  014748                     l9822:
  9020                           
  9021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9022                           ;stkvar	_c @ sp[(-20)+12]
  9023                           ;stkvar	_i @ sp[(-20)+14]
  9024  014748  0EFA               	movlw	-6
  9025  01474A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9026  014750  0EFB               	movlw	-5
  9027  014752  006F FF8C  F040    	movff	plusw1,btemp+11
  9028  014758  0EAC               	movlw	low _dbuf
  9029  01475A  243F               	addwf	(btemp+10)^0,w,c
  9030  01475C  6ED9               	movwf	fsr2l,c
  9031  01475E  0E02               	movlw	high _dbuf
  9032  014760  2040               	addwfc	(btemp+11)^0,w,c
  9033  014762  6EDA               	movwf	fsr2h,c
  9034  014764  0EF8               	movlw	-8
  9035  014766  006F FF8F FFDF     	movff	plusw1,indf2
  9036                           
  9037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9038                           ;stkvar	_p @ sp[(-20)+18]
  9039  01476C  50E1               	movf	fsr1l,w,c
  9040  01476E  0FFE               	addlw	-2
  9041  014770  6ED9               	movwf	fsr2l,c
  9042  014772  50E2               	movf	fsr1h,w,c
  9043  014774  6EDA               	movwf	fsr2h,c
  9044  014776  0EFF               	movlw	255
  9045  014778  22DA               	addwfc	fsr2h,f,c
  9046  01477A  06DE               	decf	postinc2,f,c
  9047  01477C  0E00               	movlw	0
  9048  01477E  5ADD               	subwfb	postdec2,f,c
  9049                           
  9050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9051                           ;stkvar	_w @ sp[(-20)+16]
  9052  014780  50E1               	movf	fsr1l,w,c
  9053  014782  0FFC               	addlw	-4
  9054  014784  6ED9               	movwf	fsr2l,c
  9055  014786  50E2               	movf	fsr1h,w,c
  9056  014788  6EDA               	movwf	fsr2h,c
  9057  01478A  0EFF               	movlw	255
  9058  01478C  22DA               	addwfc	fsr2h,f,c
  9059  01478E  06DE               	decf	postinc2,f,c
  9060  014790  0E00               	movlw	0
  9061  014792  5ADD               	subwfb	postdec2,f,c
  9062                           
  9063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9064  014794  0E04               	movlw	4
  9065  014796  6E40               	movwf	(btemp+11)^0,c
  9066                           
  9067                           ;stkvar	_n @ sp[(-20)+4]
  9068  014798  50E1               	movf	fsr1l,w,c
  9069  01479A  0FF0               	addlw	-16
  9070  01479C  6ED9               	movwf	fsr2l,c
  9071  01479E  50E2               	movf	fsr1h,w,c
  9072  0147A0  6EDA               	movwf	fsr2h,c
  9073  0147A2  0EFF               	movlw	255
  9074  0147A4  22DA               	addwfc	fsr2h,f,c
  9075  0147A6  2840               	incf	(btemp+11)^0,w,c
  9076  0147A8  52DE               	movf	postinc2,f,c
  9077  0147AA  D00F               	goto	u10190
  9078  0147AC                     u10195:
  9079  0147AC  52DE               	movf	postinc2,f,c
  9080  0147AE  52DE               	movf	postinc2,f,c
  9081  0147B0  52DE               	movf	postinc2,f,c
  9082  0147B2  52DE               	movf	postinc2,f,c
  9083  0147B4  52DE               	movf	postinc2,f,c
  9084  0147B6  52DE               	movf	postinc2,f,c
  9085  0147B8  90D8               	bcf	status,0,c
  9086  0147BA  32DD               	rrcf	postdec2,f,c
  9087  0147BC  32DD               	rrcf	postdec2,f,c
  9088  0147BE  32DD               	rrcf	postdec2,f,c
  9089  0147C0  32DD               	rrcf	postdec2,f,c
  9090  0147C2  32DD               	rrcf	postdec2,f,c
  9091  0147C4  32DD               	rrcf	postdec2,f,c
  9092  0147C6  32DD               	rrcf	postdec2,f,c
  9093  0147C8  32DE               	rrcf	postinc2,f,c
  9094  0147CA                     u10190:
  9095  0147CA  2EE8               	decfsz	wreg,f,c
  9096  0147CC  D7EF               	goto	u10195
  9097  0147CE                     l9830:
  9098                           
  9099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9100                           ;stkvar	_i @ sp[(-20)+14]
  9101  0147CE  0EFB               	movlw	-5
  9102  0147D0  BEE3               	btfsc	plusw1,7,c
  9103  0147D2  D03A               	goto	u10240
  9104  0147D4  0EFB               	movlw	-5
  9105  0147D6  50E3               	movf	plusw1,w,c
  9106  0147D8  E108               	bnz	u10200
  9107  0147DA  0EFA               	movlw	-6
  9108  0147DC  006F FF8C  F035    	movff	plusw1,btemp
  9109  0147E2  0E02               	movlw	2
  9110  0147E4  5E35               	subwf	btemp^0,f,c
  9111  0147E6  A0D8               	btfss	status,0,c
  9112  0147E8  D02F               	goto	u10240
  9113  0147EA                     u10200:
  9114                           
  9115                           ;stkvar	_n @ sp[(-20)+4]
  9116  0147EA  0EF0               	movlw	-16
  9117  0147EC  50E3               	movf	plusw1,w,c
  9118  0147EE  E115               	bnz	u10211
  9119  0147F0  0EF1               	movlw	-15
  9120  0147F2  50E3               	movf	plusw1,w,c
  9121  0147F4  E112               	bnz	u10211
  9122  0147F6  0EF2               	movlw	-14
  9123  0147F8  50E3               	movf	plusw1,w,c
  9124  0147FA  E10F               	bnz	u10211
  9125  0147FC  0EF3               	movlw	-13
  9126  0147FE  50E3               	movf	plusw1,w,c
  9127  014800  E10C               	bnz	u10211
  9128  014802  0EF4               	movlw	-12
  9129  014804  50E3               	movf	plusw1,w,c
  9130  014806  E109               	bnz	u10211
  9131  014808  0EF5               	movlw	-11
  9132  01480A  50E3               	movf	plusw1,w,c
  9133  01480C  E106               	bnz	u10211
  9134  01480E  0EF6               	movlw	-10
  9135  014810  50E3               	movf	plusw1,w,c
  9136  014812  E103               	bnz	u10211
  9137  014814  0EF7               	movlw	-9
  9138  014816  50E3               	movf	plusw1,w,c
  9139  014818  A4D8               	btfss	status,2,c
  9140  01481A                     u10211:
  9141  01481A  D6EB               	goto	l9798
  9142                           
  9143                           ;stkvar	_p @ sp[(-20)+18]
  9144  01481C  0EFF               	movlw	-1
  9145  01481E  BEE3               	btfsc	plusw1,7,c
  9146  014820  D007               	goto	u10220
  9147  014822  0EFF               	movlw	-1
  9148  014824  50E3               	movf	plusw1,w,c
  9149  014826  E103               	bnz	u10221
  9150  014828  0EFE               	movlw	-2
  9151  01482A  04E3               	decf	plusw1,w,c
  9152  01482C  B0D8               	btfsc	status,0,c
  9153  01482E                     u10221:
  9154  01482E  D6E1               	goto	l9798
  9155  014830                     u10220:
  9156                           
  9157                           ;stkvar	_w @ sp[(-20)+16]
  9158  014830  0EFD               	movlw	-3
  9159  014832  BEE3               	btfsc	plusw1,7,c
  9160  014834  D009               	goto	u10240
  9161  014836  0EFD               	movlw	-3
  9162  014838  50E3               	movf	plusw1,w,c
  9163  01483A  E104               	bnz	u10230
  9164  01483C  0EFC               	movlw	-4
  9165  01483E  04E3               	decf	plusw1,w,c
  9166  014840  A0D8               	btfss	status,0,c
  9167  014842  D002               	goto	u10240
  9168  014844                     u10230:
  9169  014844  B222               	btfsc	_flags^0,1,c
  9170  014846  D6D5               	goto	l9798
  9171  014848                     u10240:
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9174  014848  A822               	btfss	_flags^0,4,c
  9175  01484A  D036               	goto	l9846
  9176                           
  9177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9178                           ;stkvar	_i @ sp[(-20)+14]
  9179  01484C  50E1               	movf	fsr1l,w,c
  9180  01484E  0FFA               	addlw	-6
  9181  014850  6ED9               	movwf	fsr2l,c
  9182  014852  50E2               	movf	fsr1h,w,c
  9183  014854  6EDA               	movwf	fsr2h,c
  9184  014856  0EFF               	movlw	255
  9185  014858  22DA               	addwfc	fsr2h,f,c
  9186  01485A  06DE               	decf	postinc2,f,c
  9187  01485C  0E00               	movlw	0
  9188  01485E  5ADD               	subwfb	postdec2,f,c
  9189                           
  9190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9191                           ;stkvar	_x @ sp[(-20)+-11]
  9192                           ;stkvar	_i @ sp[(-20)+14]
  9193  014860  0EFA               	movlw	-6
  9194  014862  006F FF8C  F03F    	movff	plusw1,btemp+10
  9195  014868  0EFB               	movlw	-5
  9196  01486A  006F FF8C  F040    	movff	plusw1,btemp+11
  9197  014870  0EAC               	movlw	low _dbuf
  9198  014872  243F               	addwf	(btemp+10)^0,w,c
  9199  014874  6ED9               	movwf	fsr2l,c
  9200  014876  0E02               	movlw	high _dbuf
  9201  014878  2040               	addwfc	(btemp+11)^0,w,c
  9202  01487A  6EDA               	movwf	fsr2h,c
  9203  01487C  0EE1               	movlw	-31
  9204  01487E  006F FF8F FFDF     	movff	plusw1,indf2
  9205                           
  9206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9207                           ;stkvar	_i @ sp[(-20)+14]
  9208  014884  50E1               	movf	fsr1l,w,c
  9209  014886  0FFA               	addlw	-6
  9210  014888  6ED9               	movwf	fsr2l,c
  9211  01488A  50E2               	movf	fsr1h,w,c
  9212  01488C  6EDA               	movwf	fsr2h,c
  9213  01488E  0EFF               	movlw	255
  9214  014890  22DA               	addwfc	fsr2h,f,c
  9215  014892  06DE               	decf	postinc2,f,c
  9216  014894  0E00               	movlw	0
  9217  014896  5ADD               	subwfb	postdec2,f,c
  9218                           
  9219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9220                           ;stkvar	_i @ sp[(-20)+14]
  9221  014898  0EFA               	movlw	-6
  9222  01489A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9223  0148A0  0EFB               	movlw	-5
  9224  0148A2  006F FF8C  F040    	movff	plusw1,btemp+11
  9225  0148A8  0EAC               	movlw	low _dbuf
  9226  0148AA  243F               	addwf	(btemp+10)^0,w,c
  9227  0148AC  6ED9               	movwf	fsr2l,c
  9228  0148AE  0E02               	movlw	high _dbuf
  9229  0148B0  2040               	addwfc	(btemp+11)^0,w,c
  9230  0148B2  6EDA               	movwf	fsr2h,c
  9231  0148B4  0E30               	movlw	48
  9232  0148B6  6EDF               	movwf	indf2,c
  9233  0148B8                     l9846:
  9234                           
  9235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9236                           ;stkvar	_w @ sp[(-20)+16]
  9237  0148B8  0EFC               	movlw	-4
  9238  0148BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9239  0148C0  006F FF8F FFE6     	movff	plusw1,postinc1
  9240                           
  9241                           ;stkvar	_i @ sp[(-22)+14]
  9242  0148C6  0EAC               	movlw	low _dbuf
  9243  0148C8  6E3F               	movwf	(btemp+10)^0,c
  9244  0148CA  0E02               	movlw	high _dbuf
  9245  0148CC  6E40               	movwf	(btemp+11)^0,c
  9246  0148CE  0EF8               	movlw	-8
  9247  0148D0  50E3               	movf	plusw1,w,c
  9248  0148D2  263F               	addwf	(btemp+10)^0,f,c
  9249  0148D4  0EF9               	movlw	-7
  9250  0148D6  50E3               	movf	plusw1,w,c
  9251  0148D8  2240               	addwfc	(btemp+11)^0,f,c
  9252  0148DA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9253  0148E0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9254                           
  9255                           ;stkvar	_fp @ sp[(-24)+-2]
  9256  0148E6  0EE6               	movlw	-26
  9257  0148E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9258  0148EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9259  0148F4  EC32  F0B8         	call	_pad	;wreg free
  9260                           
  9261                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9262  0148F8  0EE1               	movlw	225
  9263  0148FA  26E1               	addwf	fsr1l,f,c
  9264  0148FC  0EFF               	movlw	255
  9265  0148FE  22E2               	addwfc	fsr1h,f,c
  9266  014900  0012               	return		;funcret
  9267  014902                     __end_of_xtoa:
  9268                           	opt callstack 0
  9269                           
  9270 ;; *************** function _toupper *****************
  9271 ;; Defined at:
  9272 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  c               2  [STACK] int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  2  [STACK] int 
  9279 ;; Registers used:
  9280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/2
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    7
  9293 ;; This function calls:
  9294 ;;		_islower
  9295 ;; This function is called by:
  9296 ;;		_xtoa
  9297 ;; This function uses a reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text37
  9301  017D0A                     __ptext37:
  9302                           	opt callstack 0
  9303  017D0A                     _toupper:
  9304                           	opt callstack 0
  9305                           
  9306                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9307  017D0A  52E6               	movf	postinc1,f,c
  9308  017D0C  52E6               	movf	postinc1,f,c
  9309                           
  9310                           ;stkvar	_c @ sp[(-2)+-2]
  9311                           
  9312                           ;incstack = 0
  9313  017D0E  0EFC               	movlw	-4
  9314  017D10  50E3               	movf	plusw1,w,c
  9315  017D12  0F9F               	addlw	159
  9316  017D14  6E3F               	movwf	(btemp+10)^0,c
  9317  017D16  0EFD               	movlw	-3
  9318  017D18  006F FF8C  F040    	movff	plusw1,btemp+11
  9319  017D1E  0EFF               	movlw	255
  9320  017D20  2240               	addwfc	(btemp+11)^0,f,c
  9321  017D22  5040               	movf	(btemp+11)^0,w,c
  9322  017D24  E106               	bnz	u5410
  9323  017D26  0E1A               	movlw	26
  9324  017D28  5C3F               	subwf	(btemp+10)^0,w,c
  9325  017D2A  B0D8               	btfsc	status,0,c
  9326  017D2C  D002               	goto	u5410
  9327  017D2E  0E01               	movlw	1
  9328  017D30  D001               	goto	u5420
  9329  017D32                     u5410:
  9330  017D32  0E00               	movlw	0
  9331  017D34                     u5420:
  9332  017D34  6E3F               	movwf	(btemp+10)^0,c
  9333  017D36  6A40               	clrf	(btemp+11)^0,c
  9334                           
  9335                           ;stkvar	_toupper$4919 @ sp[(-2)+0]
  9336  017D38  0EFE               	movlw	-2
  9337  017D3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9338  017D40  0EFF               	movlw	-1
  9339  017D42  0060  F103  FFE3   	movff	btemp+11,plusw1
  9340                           
  9341                           ;stkvar	_toupper$4919 @ sp[(-2)+0]
  9342  017D48  0EFE               	movlw	-2
  9343  017D4A  006F FF8C  F035    	movff	plusw1,btemp
  9344  017D50  0EFF               	movlw	-1
  9345  017D52  50E3               	movf	plusw1,w,c
  9346  017D54  1035               	iorwf	btemp^0,w,c
  9347  017D56  B4D8               	btfsc	status,2,c
  9348  017D58  D00D               	goto	l6484
  9349                           
  9350                           ;stkvar	_c @ sp[(-2)+-2]
  9351  017D5A  0EFC               	movlw	-4
  9352  017D5C  006F FF8C  F035    	movff	plusw1,btemp
  9353  017D62  0EFD               	movlw	-3
  9354  017D64  006F FF8C  F036    	movff	plusw1,btemp+1
  9355  017D6A  0E5F               	movlw	95
  9356  017D6C  1635               	andwf	btemp^0,f,c
  9357  017D6E  0E00               	movlw	0
  9358  017D70  1636               	andwf	(btemp+1)^0,f,c
  9359  017D72  D008               	goto	l2869
  9360  017D74                     l6484:
  9361                           
  9362                           ;stkvar	_c @ sp[(-2)+-2]
  9363  017D74  0EFC               	movlw	-4
  9364  017D76  006F FF8C  F035    	movff	plusw1,btemp
  9365  017D7C  0EFD               	movlw	-3
  9366  017D7E  006F FF8C  F036    	movff	plusw1,btemp+1
  9367  017D84                     l2869:
  9368                           
  9369                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9370  017D84  52E5               	movf	postdec1,f,c
  9371  017D86  52E5               	movf	postdec1,f,c
  9372  017D88  52E5               	movf	postdec1,f,c
  9373  017D8A  52E5               	movf	postdec1,f,c
  9374  017D8C  0012               	return		;funcret
  9375  017D8E                     __end_of_toupper:
  9376                           	opt callstack 0
  9377                           
  9378 ;; *************** function _islower *****************
  9379 ;; Defined at:
  9380 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  c               2  [STACK] int 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  2  [STACK] int 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9398 ;;Total ram usage:        0 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    6
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_toupper
  9405 ;; This function uses a reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text38
  9409  0187FC                     __ptext38:
  9410                           	opt callstack 0
  9411  0187FC                     _islower:
  9412                           	opt callstack 16
  9413                           
  9414                           ;stkvar	_c @ sp[(0)+-2]
  9415                           
  9416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9417                           ;incstack = 0
  9418  0187FC  0EFE               	movlw	-2
  9419  0187FE  50E3               	movf	plusw1,w,c
  9420  018800  0F9F               	addlw	159
  9421  018802  6E3F               	movwf	(btemp+10)^0,c
  9422  018804  0EFF               	movlw	-1
  9423  018806  006F FF8C  F040    	movff	plusw1,btemp+11
  9424  01880C  0EFF               	movlw	255
  9425  01880E  2240               	addwfc	(btemp+11)^0,f,c
  9426  018810  5040               	movf	(btemp+11)^0,w,c
  9427  018812  E106               	bnz	u5100
  9428  018814  0E1A               	movlw	26
  9429  018816  5C3F               	subwf	(btemp+10)^0,w,c
  9430  018818  B0D8               	btfsc	status,0,c
  9431  01881A  D002               	goto	u5100
  9432  01881C  0E01               	movlw	1
  9433  01881E  D001               	goto	u5110
  9434  018820                     u5100:
  9435  018820  0E00               	movlw	0
  9436  018822                     u5110:
  9437  018822  6E35               	movwf	btemp^0,c
  9438  018824  6A36               	clrf	(btemp+1)^0,c
  9439                           
  9440                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9441  018826  52E5               	movf	postdec1,f,c
  9442  018828  52E5               	movf	postdec1,f,c
  9443  01882A  0012               	return		;funcret
  9444  01882C                     __end_of_islower:
  9445                           	opt callstack 0
  9446                           
  9447 ;; *************** function _isalpha *****************
  9448 ;; Defined at:
  9449 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  c               2  [STACK] int 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  2  [STACK] int 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    6
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_xtoa
  9474 ;; This function uses a reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text39
  9478  018576                     __ptext39:
  9479                           	opt callstack 0
  9480  018576                     _isalpha:
  9481                           	opt callstack 17
  9482                           
  9483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9484                           ;incstack = 0
  9485  018576  0E9F               	movlw	159
  9486  018578  6E3F               	movwf	(btemp+10)^0,c
  9487  01857A  0EFF               	movlw	255
  9488  01857C  6E40               	movwf	(btemp+11)^0,c
  9489                           
  9490                           ;stkvar	_c @ sp[(0)+-2]
  9491  01857E  0EFE               	movlw	-2
  9492  018580  006F FF8C  F03D    	movff	plusw1,btemp+8
  9493  018586  0EFF               	movlw	-1
  9494  018588  006F FF8C  F03E    	movff	plusw1,btemp+9
  9495  01858E  0E20               	movlw	32
  9496  018590  123D               	iorwf	(btemp+8)^0,f,c
  9497  018592  0E00               	movlw	0
  9498  018594  123E               	iorwf	(btemp+9)^0,f,c
  9499  018596  503F               	movf	(btemp+10)^0,w,c
  9500  018598  263D               	addwf	(btemp+8)^0,f,c
  9501  01859A  5040               	movf	(btemp+11)^0,w,c
  9502  01859C  223E               	addwfc	(btemp+9)^0,f,c
  9503  01859E  503E               	movf	(btemp+9)^0,w,c
  9504  0185A0  E106               	bnz	u5390
  9505  0185A2  0E1A               	movlw	26
  9506  0185A4  5C3D               	subwf	(btemp+8)^0,w,c
  9507  0185A6  B0D8               	btfsc	status,0,c
  9508  0185A8  D002               	goto	u5390
  9509  0185AA  0E01               	movlw	1
  9510  0185AC  D001               	goto	u5400
  9511  0185AE                     u5390:
  9512  0185AE  0E00               	movlw	0
  9513  0185B0                     u5400:
  9514  0185B0  6E35               	movwf	btemp^0,c
  9515  0185B2  6A36               	clrf	(btemp+1)^0,c
  9516                           
  9517                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9518  0185B4  52E5               	movf	postdec1,f,c
  9519  0185B6  52E5               	movf	postdec1,f,c
  9520  0185B8  0012               	return		;funcret
  9521  0185BA                     __end_of_isalpha:
  9522                           	opt callstack 0
  9523                           
  9524 ;; *************** function _utoa *****************
  9525 ;; Defined at:
  9526 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9529 ;;		 -> f(6), NULL(0), 
  9530 ;;  d               8  [STACK] unsigned long long 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  n               8  [STACK] unsigned long long 
  9533 ;;  i               2  [STACK] int 
  9534 ;;  w               2  [STACK] int 
  9535 ;;  p               2  [STACK] int 
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  2  [STACK] int 
  9538 ;; Registers used:
  9539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/4
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9549 ;;Total ram usage:        0 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:   11
  9552 ;; This function calls:
  9553 ;;		___lodiv
  9554 ;;		___lomod
  9555 ;;		_pad
  9556 ;; This function is called by:
  9557 ;;		_vfpfcnvrt
  9558 ;; This function uses a reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text40
  9562  014C6E                     __ptext40:
  9563                           	opt callstack 0
  9564  014C6E                     _utoa:
  9565                           	opt callstack 0
  9566                           
  9567                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9568  014C6E  0E0E               	movlw	14
  9569  014C70  26E1               	addwf	fsr1l,f,c
  9570  014C72  0E00               	movlw	0
  9571  014C74  22E2               	addwfc	fsr1h,f,c
  9572                           
  9573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9574                           
  9575                           ;incstack = 0
  9576  014C76  AE21               	btfss	(_prec+1)^0,7,c
  9577                           
  9578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9579  014C78  9222               	bcf	_flags^0,1,c
  9580                           
  9581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9582  014C7A  BE21               	btfsc	(_prec+1)^0,7,c
  9583  014C7C  D005               	goto	u10010
  9584  014C7E  5021               	movf	(_prec+1)^0,w,c
  9585  014C80  E110               	bnz	l9746
  9586  014C82  0420               	decf	_prec^0,w,c
  9587  014C84  B0D8               	btfsc	status,0,c
  9588  014C86  D00D               	goto	l9746
  9589  014C88                     u10010:
  9590  014C88  0E01               	movlw	1
  9591  014C8A  6E3F               	movwf	(btemp+10)^0,c
  9592  014C8C  0E00               	movlw	0
  9593  014C8E  6E40               	movwf	(btemp+11)^0,c
  9594                           
  9595                           ;stkvar	_p @ sp[(-14)+12]
  9596  014C90  0EFE               	movlw	-2
  9597  014C92  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9598  014C98  0EFF               	movlw	-1
  9599  014C9A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9600  014CA0  D008               	goto	l1913
  9601  014CA2                     l9746:
  9602                           
  9603                           ;stkvar	_p @ sp[(-14)+12]
  9604  014CA2  0EFE               	movlw	-2
  9605  014CA4  0060  F083  FFE3   	movff	_prec,plusw1
  9606  014CAA  0EFF               	movlw	-1
  9607  014CAC  0060  F087  FFE3   	movff	_prec+1,plusw1
  9608  014CB2                     l1913:
  9609                           
  9610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9611                           ;stkvar	_w @ sp[(-14)+10]
  9612  014CB2  0EFC               	movlw	-4
  9613  014CB4  0060  F07B  FFE3   	movff	_width,plusw1
  9614  014CBA  0EFD               	movlw	-3
  9615  014CBC  0060  F07F  FFE3   	movff	_width+1,plusw1
  9616                           
  9617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9618                           ;stkvar	_d @ sp[(-14)+-10]
  9619  014CC2  0EE8               	movlw	232
  9620  014CC4  24E1               	addwf	fsr1l,w,c
  9621  014CC6  6ED9               	movwf	fsr2l,c
  9622  014CC8  0EFF               	movlw	255
  9623  014CCA  20E2               	addwfc	fsr1h,w,c
  9624  014CCC  6EDA               	movwf	fsr2h,c
  9625                           
  9626                           ;stkvar	_n @ sp[(-14)+0]
  9627  014CCE  0E08               	movlw	8
  9628  014CD0  6E35               	movwf	btemp^0,c
  9629  014CD2  0EF2               	movlw	-14
  9630  014CD4                     us1002999:
  9631  014CD4  006F FF7B FFE3     	movff	postinc2,plusw1
  9632  014CDA  28E8               	incf	wreg,w,c
  9633  014CDC  2E35               	decfsz	btemp^0,f,c
  9634  014CDE  D7FA               	bra	us1002999
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9637  014CE0  0E4F               	movlw	79
  9638  014CE2  6E3F               	movwf	(btemp+10)^0,c
  9639  014CE4  0E00               	movlw	0
  9640  014CE6  6E40               	movwf	(btemp+11)^0,c
  9641                           
  9642                           ;stkvar	_i @ sp[(-14)+8]
  9643  014CE8  0EFA               	movlw	-6
  9644  014CEA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9645  014CF0  0EFB               	movlw	-5
  9646  014CF2  0060  F103  FFE3   	movff	btemp+11,plusw1
  9647                           
  9648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9649  014CF8  0102               	movlb	2	; () banked
  9650  014CFA  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9651                           
  9652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9653  014CFC  D0FB               	goto	l9764
  9654  014CFE                     l9754:
  9655                           
  9656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9657                           ;stkvar	_i @ sp[(-14)+8]
  9658  014CFE  50E1               	movf	fsr1l,w,c
  9659  014D00  0FFA               	addlw	-6
  9660  014D02  6ED9               	movwf	fsr2l,c
  9661  014D04  50E2               	movf	fsr1h,w,c
  9662  014D06  6EDA               	movwf	fsr2h,c
  9663  014D08  0EFF               	movlw	255
  9664  014D0A  22DA               	addwfc	fsr2h,f,c
  9665  014D0C  06DE               	decf	postinc2,f,c
  9666  014D0E  0E00               	movlw	0
  9667  014D10  5ADD               	subwfb	postdec2,f,c
  9668                           
  9669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9670  014D12  0E0A               	movlw	10
  9671  014D14  6EE6               	movwf	postinc1,c
  9672  014D16  0E00               	movlw	0
  9673  014D18  6EE6               	movwf	postinc1,c
  9674  014D1A  0E00               	movlw	0
  9675  014D1C  6EE6               	movwf	postinc1,c
  9676  014D1E  0E00               	movlw	0
  9677  014D20  6EE6               	movwf	postinc1,c
  9678  014D22  0E00               	movlw	0
  9679  014D24  6EE6               	movwf	postinc1,c
  9680  014D26  0E00               	movlw	0
  9681  014D28  6EE6               	movwf	postinc1,c
  9682  014D2A  0E00               	movlw	0
  9683  014D2C  6EE6               	movwf	postinc1,c
  9684  014D2E  0E00               	movlw	0
  9685  014D30  6EE6               	movwf	postinc1,c
  9686                           
  9687                           ;stkvar	_n @ sp[(-22)+0]
  9688  014D32  50E1               	movf	fsr1l,w,c
  9689  014D34  0FEA               	addlw	-22
  9690  014D36  6ED9               	movwf	fsr2l,c
  9691  014D38  50E2               	movf	fsr1h,w,c
  9692  014D3A  6EDA               	movwf	fsr2h,c
  9693  014D3C  0EFF               	movlw	255
  9694  014D3E  22DA               	addwfc	fsr2h,f,c
  9695  014D40  006F FF7B FFE6     	movff	postinc2,postinc1
  9696  014D46  006F FF7B FFE6     	movff	postinc2,postinc1
  9697  014D4C  006F FF7B FFE6     	movff	postinc2,postinc1
  9698  014D52  006F FF7B FFE6     	movff	postinc2,postinc1
  9699  014D58  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  014D5E  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  014D64  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  014D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  9703  014D70  ECDD  F0B5         	call	___lomod	;wreg free
  9704  014D74  52E5               	movf	postdec1,f,c
  9705  014D76  006F FF9C  F04C    	movff	indf1,btemp+23
  9706  014D7C  52E5               	movf	postdec1,f,c
  9707  014D7E  006F FF9C  F04B    	movff	indf1,btemp+22
  9708  014D84  52E5               	movf	postdec1,f,c
  9709  014D86  006F FF9C  F04A    	movff	indf1,btemp+21
  9710  014D8C  52E5               	movf	postdec1,f,c
  9711  014D8E  006F FF9C  F049    	movff	indf1,btemp+20
  9712  014D94  52E5               	movf	postdec1,f,c
  9713  014D96  006F FF9C  F048    	movff	indf1,btemp+19
  9714  014D9C  52E5               	movf	postdec1,f,c
  9715  014D9E  006F FF9C  F047    	movff	indf1,btemp+18
  9716  014DA4  52E5               	movf	postdec1,f,c
  9717  014DA6  006F FF9C  F046    	movff	indf1,btemp+17
  9718  014DAC  52E5               	movf	postdec1,f,c
  9719  014DAE  006F FF9C  F045    	movff	indf1,btemp+16
  9720  014DB4  0EF8               	movlw	248
  9721  014DB6  26E1               	addwf	fsr1l,f,c
  9722  014DB8  0EFF               	movlw	255
  9723  014DBA  22E2               	addwfc	fsr1h,f,c
  9724  014DBC  0E30               	movlw	48
  9725  014DBE  2645               	addwf	(btemp+16)^0,f,c
  9726                           
  9727                           ;stkvar	_i @ sp[(-14)+8]
  9728  014DC0  0EFA               	movlw	-6
  9729  014DC2  006F FF8C  F03F    	movff	plusw1,btemp+10
  9730  014DC8  0EFB               	movlw	-5
  9731  014DCA  006F FF8C  F040    	movff	plusw1,btemp+11
  9732  014DD0  0EAC               	movlw	low _dbuf
  9733  014DD2  243F               	addwf	(btemp+10)^0,w,c
  9734  014DD4  6ED9               	movwf	fsr2l,c
  9735  014DD6  0E02               	movlw	high _dbuf
  9736  014DD8  2040               	addwfc	(btemp+11)^0,w,c
  9737  014DDA  6EDA               	movwf	fsr2h,c
  9738  014DDC  0060  F117  FFDF   	movff	btemp+16,indf2
  9739                           
  9740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9741                           ;stkvar	_p @ sp[(-14)+12]
  9742  014DE2  50E1               	movf	fsr1l,w,c
  9743  014DE4  0FFE               	addlw	-2
  9744  014DE6  6ED9               	movwf	fsr2l,c
  9745  014DE8  50E2               	movf	fsr1h,w,c
  9746  014DEA  6EDA               	movwf	fsr2h,c
  9747  014DEC  0EFF               	movlw	255
  9748  014DEE  22DA               	addwfc	fsr2h,f,c
  9749  014DF0  06DE               	decf	postinc2,f,c
  9750  014DF2  0E00               	movlw	0
  9751  014DF4  5ADD               	subwfb	postdec2,f,c
  9752                           
  9753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9754                           ;stkvar	_w @ sp[(-14)+10]
  9755  014DF6  50E1               	movf	fsr1l,w,c
  9756  014DF8  0FFC               	addlw	-4
  9757  014DFA  6ED9               	movwf	fsr2l,c
  9758  014DFC  50E2               	movf	fsr1h,w,c
  9759  014DFE  6EDA               	movwf	fsr2h,c
  9760  014E00  0EFF               	movlw	255
  9761  014E02  22DA               	addwfc	fsr2h,f,c
  9762  014E04  06DE               	decf	postinc2,f,c
  9763  014E06  0E00               	movlw	0
  9764  014E08  5ADD               	subwfb	postdec2,f,c
  9765                           
  9766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9767  014E0A  0E0A               	movlw	10
  9768  014E0C  6EE6               	movwf	postinc1,c
  9769  014E0E  0E00               	movlw	0
  9770  014E10  6EE6               	movwf	postinc1,c
  9771  014E12  0E00               	movlw	0
  9772  014E14  6EE6               	movwf	postinc1,c
  9773  014E16  0E00               	movlw	0
  9774  014E18  6EE6               	movwf	postinc1,c
  9775  014E1A  0E00               	movlw	0
  9776  014E1C  6EE6               	movwf	postinc1,c
  9777  014E1E  0E00               	movlw	0
  9778  014E20  6EE6               	movwf	postinc1,c
  9779  014E22  0E00               	movlw	0
  9780  014E24  6EE6               	movwf	postinc1,c
  9781  014E26  0E00               	movlw	0
  9782  014E28  6EE6               	movwf	postinc1,c
  9783                           
  9784                           ;stkvar	_n @ sp[(-22)+0]
  9785  014E2A  50E1               	movf	fsr1l,w,c
  9786  014E2C  0FEA               	addlw	-22
  9787  014E2E  6ED9               	movwf	fsr2l,c
  9788  014E30  50E2               	movf	fsr1h,w,c
  9789  014E32  6EDA               	movwf	fsr2h,c
  9790  014E34  0EFF               	movlw	255
  9791  014E36  22DA               	addwfc	fsr2h,f,c
  9792  014E38  006F FF7B FFE6     	movff	postinc2,postinc1
  9793  014E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  9794  014E44  006F FF7B FFE6     	movff	postinc2,postinc1
  9795  014E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  9796  014E50  006F FF7B FFE6     	movff	postinc2,postinc1
  9797  014E56  006F FF7B FFE6     	movff	postinc2,postinc1
  9798  014E5C  006F FF7B FFE6     	movff	postinc2,postinc1
  9799  014E62  006F FF7B FFE6     	movff	postinc2,postinc1
  9800  014E68  EC0C  F0B3         	call	___lodiv	;wreg free
  9801  014E6C  52E5               	movf	postdec1,f,c
  9802  014E6E  006F FF9C  F04C    	movff	indf1,btemp+23
  9803  014E74  52E5               	movf	postdec1,f,c
  9804  014E76  006F FF9C  F04B    	movff	indf1,btemp+22
  9805  014E7C  52E5               	movf	postdec1,f,c
  9806  014E7E  006F FF9C  F04A    	movff	indf1,btemp+21
  9807  014E84  52E5               	movf	postdec1,f,c
  9808  014E86  006F FF9C  F049    	movff	indf1,btemp+20
  9809  014E8C  52E5               	movf	postdec1,f,c
  9810  014E8E  006F FF9C  F048    	movff	indf1,btemp+19
  9811  014E94  52E5               	movf	postdec1,f,c
  9812  014E96  006F FF9C  F047    	movff	indf1,btemp+18
  9813  014E9C  52E5               	movf	postdec1,f,c
  9814  014E9E  006F FF9C  F046    	movff	indf1,btemp+17
  9815  014EA4  52E5               	movf	postdec1,f,c
  9816  014EA6  006F FF9C  F045    	movff	indf1,btemp+16
  9817  014EAC  0EF8               	movlw	248
  9818  014EAE  26E1               	addwf	fsr1l,f,c
  9819  014EB0  0EFF               	movlw	255
  9820  014EB2  22E2               	addwfc	fsr1h,f,c
  9821                           
  9822                           ;stkvar	_n @ sp[(-14)+0]
  9823  014EB4  0EF2               	movlw	-14
  9824  014EB6  0060  F117  FFE3   	movff	btemp+16,plusw1
  9825  014EBC  0EF3               	movlw	-13
  9826  014EBE  0060  F11B  FFE3   	movff	btemp+17,plusw1
  9827  014EC4  0EF4               	movlw	-12
  9828  014EC6  0060  F11F  FFE3   	movff	btemp+18,plusw1
  9829  014ECC  0EF5               	movlw	-11
  9830  014ECE  0060  F123  FFE3   	movff	btemp+19,plusw1
  9831  014ED4  0EF6               	movlw	-10
  9832  014ED6  0060  F127  FFE3   	movff	btemp+20,plusw1
  9833  014EDC  0EF7               	movlw	-9
  9834  014EDE  0060  F12B  FFE3   	movff	btemp+21,plusw1
  9835  014EE4  0EF8               	movlw	-8
  9836  014EE6  0060  F12F  FFE3   	movff	btemp+22,plusw1
  9837  014EEC  0EF9               	movlw	-7
  9838  014EEE  0060  F133  FFE3   	movff	btemp+23,plusw1
  9839  014EF4                     l9764:
  9840                           
  9841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9842                           ;stkvar	_i @ sp[(-14)+8]
  9843  014EF4  0EFA               	movlw	-6
  9844  014EF6  006F FF8C  F035    	movff	plusw1,btemp
  9845  014EFC  0EFB               	movlw	-5
  9846  014EFE  50E3               	movf	plusw1,w,c
  9847  014F00  1035               	iorwf	btemp^0,w,c
  9848  014F02  B4D8               	btfsc	status,2,c
  9849  014F04  D02F               	goto	u10070
  9850                           
  9851                           ;stkvar	_n @ sp[(-14)+0]
  9852  014F06  0EF2               	movlw	-14
  9853  014F08  50E3               	movf	plusw1,w,c
  9854  014F0A  E115               	bnz	u10041
  9855  014F0C  0EF3               	movlw	-13
  9856  014F0E  50E3               	movf	plusw1,w,c
  9857  014F10  E112               	bnz	u10041
  9858  014F12  0EF4               	movlw	-12
  9859  014F14  50E3               	movf	plusw1,w,c
  9860  014F16  E10F               	bnz	u10041
  9861  014F18  0EF5               	movlw	-11
  9862  014F1A  50E3               	movf	plusw1,w,c
  9863  014F1C  E10C               	bnz	u10041
  9864  014F1E  0EF6               	movlw	-10
  9865  014F20  50E3               	movf	plusw1,w,c
  9866  014F22  E109               	bnz	u10041
  9867  014F24  0EF7               	movlw	-9
  9868  014F26  50E3               	movf	plusw1,w,c
  9869  014F28  E106               	bnz	u10041
  9870  014F2A  0EF8               	movlw	-8
  9871  014F2C  50E3               	movf	plusw1,w,c
  9872  014F2E  E103               	bnz	u10041
  9873  014F30  0EF9               	movlw	-7
  9874  014F32  50E3               	movf	plusw1,w,c
  9875  014F34  A4D8               	btfss	status,2,c
  9876  014F36                     u10041:
  9877  014F36  D6E3               	goto	l9754
  9878                           
  9879                           ;stkvar	_p @ sp[(-14)+12]
  9880  014F38  0EFF               	movlw	-1
  9881  014F3A  BEE3               	btfsc	plusw1,7,c
  9882  014F3C  D007               	goto	u10050
  9883  014F3E  0EFF               	movlw	-1
  9884  014F40  50E3               	movf	plusw1,w,c
  9885  014F42  E103               	bnz	u10051
  9886  014F44  0EFE               	movlw	-2
  9887  014F46  04E3               	decf	plusw1,w,c
  9888  014F48  B0D8               	btfsc	status,0,c
  9889  014F4A                     u10051:
  9890  014F4A  D6D9               	goto	l9754
  9891  014F4C                     u10050:
  9892                           
  9893                           ;stkvar	_w @ sp[(-14)+10]
  9894  014F4C  0EFD               	movlw	-3
  9895  014F4E  BEE3               	btfsc	plusw1,7,c
  9896  014F50  D009               	goto	u10070
  9897  014F52  0EFD               	movlw	-3
  9898  014F54  50E3               	movf	plusw1,w,c
  9899  014F56  E104               	bnz	u10060
  9900  014F58  0EFC               	movlw	-4
  9901  014F5A  04E3               	decf	plusw1,w,c
  9902  014F5C  A0D8               	btfss	status,0,c
  9903  014F5E  D002               	goto	u10070
  9904  014F60                     u10060:
  9905  014F60  B222               	btfsc	_flags^0,1,c
  9906  014F62  D6CD               	goto	l9754
  9907  014F64                     u10070:
  9908                           
  9909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  9910                           ;stkvar	_w @ sp[(-14)+10]
  9911  014F64  0EFC               	movlw	-4
  9912  014F66  006F FF8F FFE6     	movff	plusw1,postinc1
  9913  014F6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9914                           
  9915                           ;stkvar	_i @ sp[(-16)+8]
  9916  014F72  0EAC               	movlw	low _dbuf
  9917  014F74  6E3F               	movwf	(btemp+10)^0,c
  9918  014F76  0E02               	movlw	high _dbuf
  9919  014F78  6E40               	movwf	(btemp+11)^0,c
  9920  014F7A  0EF8               	movlw	-8
  9921  014F7C  50E3               	movf	plusw1,w,c
  9922  014F7E  263F               	addwf	(btemp+10)^0,f,c
  9923  014F80  0EF9               	movlw	-7
  9924  014F82  50E3               	movf	plusw1,w,c
  9925  014F84  2240               	addwfc	(btemp+11)^0,f,c
  9926  014F86  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9927  014F8C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9928                           
  9929                           ;stkvar	_fp @ sp[(-18)+-2]
  9930  014F92  0EEC               	movlw	-20
  9931  014F94  006F FF8F FFE6     	movff	plusw1,postinc1
  9932  014F9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9933  014FA0  EC32  F0B8         	call	_pad	;wreg free
  9934                           
  9935                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9936  014FA4  0EE8               	movlw	232
  9937  014FA6  26E1               	addwf	fsr1l,f,c
  9938  014FA8  0EFF               	movlw	255
  9939  014FAA  22E2               	addwfc	fsr1h,f,c
  9940  014FAC  0012               	return		;funcret
  9941  014FAE                     __end_of_utoa:
  9942                           	opt callstack 0
  9943                           
  9944 ;; *************** function ___lomod *****************
  9945 ;; Defined at:
  9946 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  dividend        8  [STACK] unsigned long long 
  9949 ;;  divisor         8  [STACK] unsigned long long 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  counter         1  [STACK] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  8  [STACK] unsigned long long 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/2
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    6
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_utoa
  9972 ;; This function uses a reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text41
  9976  016BBA                     __ptext41:
  9977                           	opt callstack 0
  9978  016BBA                     ___lomod:
  9979                           	opt callstack 0
  9980                           
  9981                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9982  016BBA  52E6               	movf	postinc1,f,c
  9983                           
  9984                           ;stkvar	_divisor @ sp[(-1)+-16]
  9985                           
  9986                           ;incstack = 0
  9987  016BBC  0EEF               	movlw	-17
  9988  016BBE  50E3               	movf	plusw1,w,c
  9989  016BC0  E116               	bnz	u6540
  9990  016BC2  0EF0               	movlw	-16
  9991  016BC4  50E3               	movf	plusw1,w,c
  9992  016BC6  E113               	bnz	u6540
  9993  016BC8  0EF1               	movlw	-15
  9994  016BCA  50E3               	movf	plusw1,w,c
  9995  016BCC  E110               	bnz	u6540
  9996  016BCE  0EF2               	movlw	-14
  9997  016BD0  50E3               	movf	plusw1,w,c
  9998  016BD2  E10D               	bnz	u6540
  9999  016BD4  0EF3               	movlw	-13
 10000  016BD6  50E3               	movf	plusw1,w,c
 10001  016BD8  E10A               	bnz	u6540
 10002  016BDA  0EF4               	movlw	-12
 10003  016BDC  50E3               	movf	plusw1,w,c
 10004  016BDE  E107               	bnz	u6540
 10005  016BE0  0EF5               	movlw	-11
 10006  016BE2  50E3               	movf	plusw1,w,c
 10007  016BE4  E104               	bnz	u6540
 10008  016BE6  0EF6               	movlw	-10
 10009  016BE8  50E3               	movf	plusw1,w,c
 10010  016BEA  B4D8               	btfsc	status,2,c
 10011  016BEC  D075               	goto	u6570
 10012  016BEE                     u6540:
 10013                           
 10014                           ;stkvar	_counter @ sp[(-1)+0]
 10015  016BEE  0EFF               	movlw	-1
 10016  016BF0  6AE3               	clrf	plusw1,c
 10017  016BF2  D012               	goto	L9
 10018  016BF4                     l7094:
 10019                           
 10020                           ;stkvar	_divisor @ sp[(-1)+-16]
 10021  016BF4  90D8               	bcf	status,0,c
 10022  016BF6  0EEF               	movlw	-17
 10023  016BF8  36E3               	rlcf	plusw1,f,c
 10024  016BFA  0EF0               	movlw	-16
 10025  016BFC  36E3               	rlcf	plusw1,f,c
 10026  016BFE  0EF1               	movlw	-15
 10027  016C00  36E3               	rlcf	plusw1,f,c
 10028  016C02  0EF2               	movlw	-14
 10029  016C04  36E3               	rlcf	plusw1,f,c
 10030  016C06  0EF3               	movlw	-13
 10031  016C08  36E3               	rlcf	plusw1,f,c
 10032  016C0A  0EF4               	movlw	-12
 10033  016C0C  36E3               	rlcf	plusw1,f,c
 10034  016C0E  0EF5               	movlw	-11
 10035  016C10  36E3               	rlcf	plusw1,f,c
 10036  016C12  0EF6               	movlw	-10
 10037  016C14  36E3               	rlcf	plusw1,f,c
 10038                           
 10039                           ;stkvar	_counter @ sp[(-1)+0]
 10040  016C16  0EFF               	movlw	-1
 10041  016C18                     L9:
 10042  016C18  2AE3               	incf	plusw1,f,c
 10043                           
 10044                           ;stkvar	_divisor @ sp[(-1)+-16]
 10045  016C1A  0EF6               	movlw	-10
 10046  016C1C  AEE3               	btfss	plusw1,7,c
 10047  016C1E  D7EA               	goto	l7094
 10048  016C20                     u6550:
 10049                           
 10050                           ;stkvar	_divisor @ sp[(-1)+-16]
 10051                           ;stkvar	_dividend @ sp[(-1)+-8]
 10052  016C20  50E1               	movf	fsr1l,w,c
 10053  016C22  0FF7               	addlw	-9
 10054  016C24  6ED9               	movwf	fsr2l,c
 10055  016C26  50E2               	movf	fsr1h,w,c
 10056  016C28  6EDA               	movwf	fsr2h,c
 10057  016C2A  0EFF               	movlw	255
 10058  016C2C  22DA               	addwfc	fsr2h,f,c
 10059  016C2E  0EEF               	movlw	-17
 10060  016C30  50E3               	movf	plusw1,w,c
 10061  016C32  5CDE               	subwf	postinc2,w,c
 10062  016C34  0EF0               	movlw	-16
 10063  016C36  50E3               	movf	plusw1,w,c
 10064  016C38  58DE               	subwfb	postinc2,w,c
 10065  016C3A  0EF1               	movlw	-15
 10066  016C3C  50E3               	movf	plusw1,w,c
 10067  016C3E  58DE               	subwfb	postinc2,w,c
 10068  016C40  0EF2               	movlw	-14
 10069  016C42  50E3               	movf	plusw1,w,c
 10070  016C44  58DE               	subwfb	postinc2,w,c
 10071  016C46  0EF3               	movlw	-13
 10072  016C48  50E3               	movf	plusw1,w,c
 10073  016C4A  58DE               	subwfb	postinc2,w,c
 10074  016C4C  0EF4               	movlw	-12
 10075  016C4E  50E3               	movf	plusw1,w,c
 10076  016C50  58DE               	subwfb	postinc2,w,c
 10077  016C52  0EF5               	movlw	-11
 10078  016C54  50E3               	movf	plusw1,w,c
 10079  016C56  58DE               	subwfb	postinc2,w,c
 10080  016C58  0EF6               	movlw	-10
 10081  016C5A  50E3               	movf	plusw1,w,c
 10082  016C5C  58DE               	subwfb	postinc2,w,c
 10083  016C5E  A0D8               	btfss	status,0,c
 10084  016C60  D01F               	goto	l7102
 10085                           
 10086                           ;stkvar	_divisor @ sp[(-1)+-16]
 10087                           ;stkvar	_dividend @ sp[(-1)+-8]
 10088  016C62  50E1               	movf	fsr1l,w,c
 10089  016C64  0FF7               	addlw	-9
 10090  016C66  6ED9               	movwf	fsr2l,c
 10091  016C68  50E2               	movf	fsr1h,w,c
 10092  016C6A  6EDA               	movwf	fsr2h,c
 10093  016C6C  0EFF               	movlw	255
 10094  016C6E  22DA               	addwfc	fsr2h,f,c
 10095  016C70  0EEF               	movlw	-17
 10096  016C72  50E3               	movf	plusw1,w,c
 10097  016C74  5EDE               	subwf	postinc2,f,c
 10098  016C76  0EF0               	movlw	-16
 10099  016C78  50E3               	movf	plusw1,w,c
 10100  016C7A  5ADE               	subwfb	postinc2,f,c
 10101  016C7C  0EF1               	movlw	-15
 10102  016C7E  50E3               	movf	plusw1,w,c
 10103  016C80  5ADE               	subwfb	postinc2,f,c
 10104  016C82  0EF2               	movlw	-14
 10105  016C84  50E3               	movf	plusw1,w,c
 10106  016C86  5ADE               	subwfb	postinc2,f,c
 10107  016C88  0EF3               	movlw	-13
 10108  016C8A  50E3               	movf	plusw1,w,c
 10109  016C8C  5ADE               	subwfb	postinc2,f,c
 10110  016C8E  0EF4               	movlw	-12
 10111  016C90  50E3               	movf	plusw1,w,c
 10112  016C92  5ADE               	subwfb	postinc2,f,c
 10113  016C94  0EF5               	movlw	-11
 10114  016C96  50E3               	movf	plusw1,w,c
 10115  016C98  5ADE               	subwfb	postinc2,f,c
 10116  016C9A  0EF6               	movlw	-10
 10117  016C9C  50E3               	movf	plusw1,w,c
 10118  016C9E  5ADE               	subwfb	postinc2,f,c
 10119  016CA0                     l7102:
 10120                           
 10121                           ;stkvar	_divisor @ sp[(-1)+-16]
 10122  016CA0  90D8               	bcf	status,0,c
 10123  016CA2  0EF6               	movlw	-10
 10124  016CA4  32E3               	rrcf	plusw1,f,c
 10125  016CA6  0EF5               	movlw	-11
 10126  016CA8  32E3               	rrcf	plusw1,f,c
 10127  016CAA  0EF4               	movlw	-12
 10128  016CAC  32E3               	rrcf	plusw1,f,c
 10129  016CAE  0EF3               	movlw	-13
 10130  016CB0  32E3               	rrcf	plusw1,f,c
 10131  016CB2  0EF2               	movlw	-14
 10132  016CB4  32E3               	rrcf	plusw1,f,c
 10133  016CB6  0EF1               	movlw	-15
 10134  016CB8  32E3               	rrcf	plusw1,f,c
 10135  016CBA  0EF0               	movlw	-16
 10136  016CBC  32E3               	rrcf	plusw1,f,c
 10137  016CBE  0EEF               	movlw	-17
 10138  016CC0  32E3               	rrcf	plusw1,f,c
 10139                           
 10140                           ;stkvar	_counter @ sp[(-1)+0]
 10141  016CC2  0EFF               	movlw	-1
 10142  016CC4  50E3               	movf	plusw1,w,c
 10143  016CC6  6E35               	movwf	btemp^0,c
 10144  016CC8  0E01               	movlw	1
 10145  016CCA  5E35               	subwf	btemp^0,f,c
 10146  016CCC  0EFF               	movlw	-1
 10147  016CCE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10148  016CD4  A4D8               	btfss	status,2,c
 10149  016CD6  D7A4               	goto	u6550
 10150  016CD8                     u6570:
 10151                           
 10152                           ;stkvar	_dividend @ sp[(-1)+-8]
 10153  016CD8  0EF7               	movlw	247
 10154  016CDA  24E1               	addwf	fsr1l,w,c
 10155  016CDC  6ED9               	movwf	fsr2l,c
 10156  016CDE  0EFF               	movlw	255
 10157  016CE0  20E2               	addwfc	fsr1h,w,c
 10158  016CE2  6EDA               	movwf	fsr2h,c
 10159                           
 10160                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10161  016CE4  0E08               	movlw	8
 10162  016CE6  6E35               	movwf	btemp^0,c
 10163  016CE8  0EF7               	movlw	-9
 10164  016CEA                     us658999:
 10165  016CEA  006F FF7B FFE3     	movff	postinc2,plusw1
 10166  016CF0  28E8               	incf	wreg,w,c
 10167  016CF2  2E35               	decfsz	btemp^0,f,c
 10168  016CF4  D7FA               	bra	us658999
 10169                           
 10170                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10171  016CF6  52E5               	movf	postdec1,f,c
 10172  016CF8  0012               	return		;funcret
 10173  016CFA                     __end_of___lomod:
 10174                           	opt callstack 0
 10175                           
 10176 ;; *************** function ___lodiv *****************
 10177 ;; Defined at:
 10178 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  dividend        8  [STACK] unsigned long long 
 10181 ;;  divisor         8  [STACK] unsigned long long 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  quotient        8  [STACK] unsigned long long 
 10184 ;;  counter         1  [STACK] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  8  [STACK] unsigned long long 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/2
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10198 ;;Total ram usage:        0 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:    6
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_utoa
 10205 ;; This function uses a reentrant model
 10206 ;;
 10207                           
 10208                           	psect	text42
 10209  016618                     __ptext42:
 10210                           	opt callstack 0
 10211  016618                     ___lodiv:
 10212                           	opt callstack 0
 10213                           
 10214                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10215  016618  0E09               	movlw	9
 10216  01661A  26E1               	addwf	fsr1l,f,c
 10217  01661C  0E00               	movlw	0
 10218  01661E  22E2               	addwfc	fsr1h,f,c
 10219                           
 10220                           ;stkvar	_quotient @ sp[(-9)+0]
 10221                           
 10222                           ;incstack = 0
 10223  016620  0E07               	movlw	7
 10224  016622  6E35               	movwf	btemp^0,c
 10225  016624  0EF7               	movlw	-9
 10226  016626                     u6481:
 10227  016626  6AE3               	clrf	plusw1,c
 10228  016628  2AE8               	incf	wreg,f,c
 10229  01662A  0635               	decf	btemp^0,f,c
 10230  01662C  E2FC               	bc	u6481
 10231                           
 10232                           ;stkvar	_divisor @ sp[(-9)+-16]
 10233  01662E  0EE7               	movlw	-25
 10234  016630  50E3               	movf	plusw1,w,c
 10235  016632  E116               	bnz	u6490
 10236  016634  0EE8               	movlw	-24
 10237  016636  50E3               	movf	plusw1,w,c
 10238  016638  E113               	bnz	u6490
 10239  01663A  0EE9               	movlw	-23
 10240  01663C  50E3               	movf	plusw1,w,c
 10241  01663E  E110               	bnz	u6490
 10242  016640  0EEA               	movlw	-22
 10243  016642  50E3               	movf	plusw1,w,c
 10244  016644  E10D               	bnz	u6490
 10245  016646  0EEB               	movlw	-21
 10246  016648  50E3               	movf	plusw1,w,c
 10247  01664A  E10A               	bnz	u6490
 10248  01664C  0EEC               	movlw	-20
 10249  01664E  50E3               	movf	plusw1,w,c
 10250  016650  E107               	bnz	u6490
 10251  016652  0EED               	movlw	-19
 10252  016654  50E3               	movf	plusw1,w,c
 10253  016656  E104               	bnz	u6490
 10254  016658  0EEE               	movlw	-18
 10255  01665A  50E3               	movf	plusw1,w,c
 10256  01665C  B4D8               	btfsc	status,2,c
 10257  01665E  D088               	goto	u6520
 10258  016660                     u6490:
 10259                           
 10260                           ;stkvar	_counter @ sp[(-9)+8]
 10261  016660  0EFF               	movlw	-1
 10262  016662  6AE3               	clrf	plusw1,c
 10263  016664  D012               	goto	L10
 10264  016666                     l7070:
 10265                           
 10266                           ;stkvar	_divisor @ sp[(-9)+-16]
 10267  016666  90D8               	bcf	status,0,c
 10268  016668  0EE7               	movlw	-25
 10269  01666A  36E3               	rlcf	plusw1,f,c
 10270  01666C  0EE8               	movlw	-24
 10271  01666E  36E3               	rlcf	plusw1,f,c
 10272  016670  0EE9               	movlw	-23
 10273  016672  36E3               	rlcf	plusw1,f,c
 10274  016674  0EEA               	movlw	-22
 10275  016676  36E3               	rlcf	plusw1,f,c
 10276  016678  0EEB               	movlw	-21
 10277  01667A  36E3               	rlcf	plusw1,f,c
 10278  01667C  0EEC               	movlw	-20
 10279  01667E  36E3               	rlcf	plusw1,f,c
 10280  016680  0EED               	movlw	-19
 10281  016682  36E3               	rlcf	plusw1,f,c
 10282  016684  0EEE               	movlw	-18
 10283  016686  36E3               	rlcf	plusw1,f,c
 10284                           
 10285                           ;stkvar	_counter @ sp[(-9)+8]
 10286  016688  0EFF               	movlw	-1
 10287  01668A                     L10:
 10288  01668A  2AE3               	incf	plusw1,f,c
 10289                           
 10290                           ;stkvar	_divisor @ sp[(-9)+-16]
 10291  01668C  0EEE               	movlw	-18
 10292  01668E  AEE3               	btfss	plusw1,7,c
 10293  016690  D7EA               	goto	l7070
 10294  016692                     u6500:
 10295                           
 10296                           ;stkvar	_quotient @ sp[(-9)+0]
 10297  016692  90D8               	bcf	status,0,c
 10298  016694  0EF7               	movlw	-9
 10299  016696  36E3               	rlcf	plusw1,f,c
 10300  016698  0EF8               	movlw	-8
 10301  01669A  36E3               	rlcf	plusw1,f,c
 10302  01669C  0EF9               	movlw	-7
 10303  01669E  36E3               	rlcf	plusw1,f,c
 10304  0166A0  0EFA               	movlw	-6
 10305  0166A2  36E3               	rlcf	plusw1,f,c
 10306  0166A4  0EFB               	movlw	-5
 10307  0166A6  36E3               	rlcf	plusw1,f,c
 10308  0166A8  0EFC               	movlw	-4
 10309  0166AA  36E3               	rlcf	plusw1,f,c
 10310  0166AC  0EFD               	movlw	-3
 10311  0166AE  36E3               	rlcf	plusw1,f,c
 10312  0166B0  0EFE               	movlw	-2
 10313  0166B2  36E3               	rlcf	plusw1,f,c
 10314                           
 10315                           ;stkvar	_divisor @ sp[(-9)+-16]
 10316                           ;stkvar	_dividend @ sp[(-9)+-8]
 10317  0166B4  50E1               	movf	fsr1l,w,c
 10318  0166B6  0FEF               	addlw	-17
 10319  0166B8  6ED9               	movwf	fsr2l,c
 10320  0166BA  50E2               	movf	fsr1h,w,c
 10321  0166BC  6EDA               	movwf	fsr2h,c
 10322  0166BE  0EFF               	movlw	255
 10323  0166C0  22DA               	addwfc	fsr2h,f,c
 10324  0166C2  0EE7               	movlw	-25
 10325  0166C4  50E3               	movf	plusw1,w,c
 10326  0166C6  5CDE               	subwf	postinc2,w,c
 10327  0166C8  0EE8               	movlw	-24
 10328  0166CA  50E3               	movf	plusw1,w,c
 10329  0166CC  58DE               	subwfb	postinc2,w,c
 10330  0166CE  0EE9               	movlw	-23
 10331  0166D0  50E3               	movf	plusw1,w,c
 10332  0166D2  58DE               	subwfb	postinc2,w,c
 10333  0166D4  0EEA               	movlw	-22
 10334  0166D6  50E3               	movf	plusw1,w,c
 10335  0166D8  58DE               	subwfb	postinc2,w,c
 10336  0166DA  0EEB               	movlw	-21
 10337  0166DC  50E3               	movf	plusw1,w,c
 10338  0166DE  58DE               	subwfb	postinc2,w,c
 10339  0166E0  0EEC               	movlw	-20
 10340  0166E2  50E3               	movf	plusw1,w,c
 10341  0166E4  58DE               	subwfb	postinc2,w,c
 10342  0166E6  0EED               	movlw	-19
 10343  0166E8  50E3               	movf	plusw1,w,c
 10344  0166EA  58DE               	subwfb	postinc2,w,c
 10345  0166EC  0EEE               	movlw	-18
 10346  0166EE  50E3               	movf	plusw1,w,c
 10347  0166F0  58DE               	subwfb	postinc2,w,c
 10348  0166F2  A0D8               	btfss	status,0,c
 10349  0166F4  D021               	goto	l7082
 10350                           
 10351                           ;stkvar	_divisor @ sp[(-9)+-16]
 10352                           ;stkvar	_dividend @ sp[(-9)+-8]
 10353  0166F6  50E1               	movf	fsr1l,w,c
 10354  0166F8  0FEF               	addlw	-17
 10355  0166FA  6ED9               	movwf	fsr2l,c
 10356  0166FC  50E2               	movf	fsr1h,w,c
 10357  0166FE  6EDA               	movwf	fsr2h,c
 10358  016700  0EFF               	movlw	255
 10359  016702  22DA               	addwfc	fsr2h,f,c
 10360  016704  0EE7               	movlw	-25
 10361  016706  50E3               	movf	plusw1,w,c
 10362  016708  5EDE               	subwf	postinc2,f,c
 10363  01670A  0EE8               	movlw	-24
 10364  01670C  50E3               	movf	plusw1,w,c
 10365  01670E  5ADE               	subwfb	postinc2,f,c
 10366  016710  0EE9               	movlw	-23
 10367  016712  50E3               	movf	plusw1,w,c
 10368  016714  5ADE               	subwfb	postinc2,f,c
 10369  016716  0EEA               	movlw	-22
 10370  016718  50E3               	movf	plusw1,w,c
 10371  01671A  5ADE               	subwfb	postinc2,f,c
 10372  01671C  0EEB               	movlw	-21
 10373  01671E  50E3               	movf	plusw1,w,c
 10374  016720  5ADE               	subwfb	postinc2,f,c
 10375  016722  0EEC               	movlw	-20
 10376  016724  50E3               	movf	plusw1,w,c
 10377  016726  5ADE               	subwfb	postinc2,f,c
 10378  016728  0EED               	movlw	-19
 10379  01672A  50E3               	movf	plusw1,w,c
 10380  01672C  5ADE               	subwfb	postinc2,f,c
 10381  01672E  0EEE               	movlw	-18
 10382  016730  50E3               	movf	plusw1,w,c
 10383  016732  5ADE               	subwfb	postinc2,f,c
 10384                           
 10385                           ;stkvar	_quotient @ sp[(-9)+0]
 10386  016734  0EF7               	movlw	-9
 10387  016736  80E3               	bsf	plusw1,0,c
 10388  016738                     l7082:
 10389                           
 10390                           ;stkvar	_divisor @ sp[(-9)+-16]
 10391  016738  90D8               	bcf	status,0,c
 10392  01673A  0EEE               	movlw	-18
 10393  01673C  32E3               	rrcf	plusw1,f,c
 10394  01673E  0EED               	movlw	-19
 10395  016740  32E3               	rrcf	plusw1,f,c
 10396  016742  0EEC               	movlw	-20
 10397  016744  32E3               	rrcf	plusw1,f,c
 10398  016746  0EEB               	movlw	-21
 10399  016748  32E3               	rrcf	plusw1,f,c
 10400  01674A  0EEA               	movlw	-22
 10401  01674C  32E3               	rrcf	plusw1,f,c
 10402  01674E  0EE9               	movlw	-23
 10403  016750  32E3               	rrcf	plusw1,f,c
 10404  016752  0EE8               	movlw	-24
 10405  016754  32E3               	rrcf	plusw1,f,c
 10406  016756  0EE7               	movlw	-25
 10407  016758  32E3               	rrcf	plusw1,f,c
 10408                           
 10409                           ;stkvar	_counter @ sp[(-9)+8]
 10410  01675A  0EFF               	movlw	-1
 10411  01675C  50E3               	movf	plusw1,w,c
 10412  01675E  6E35               	movwf	btemp^0,c
 10413  016760  0E01               	movlw	1
 10414  016762  5E35               	subwf	btemp^0,f,c
 10415  016764  0EFF               	movlw	-1
 10416  016766  0060  F0D7  FFE3   	movff	btemp,plusw1
 10417  01676C  A4D8               	btfss	status,2,c
 10418  01676E  D791               	goto	u6500
 10419  016770                     u6520:
 10420                           
 10421                           ;stkvar	_quotient @ sp[(-9)+0]
 10422  016770  0EF7               	movlw	247
 10423  016772  24E1               	addwf	fsr1l,w,c
 10424  016774  6ED9               	movwf	fsr2l,c
 10425  016776  0EFF               	movlw	255
 10426  016778  20E2               	addwfc	fsr1h,w,c
 10427  01677A  6EDA               	movwf	fsr2h,c
 10428                           
 10429                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10430  01677C  0E08               	movlw	8
 10431  01677E  6E35               	movwf	btemp^0,c
 10432  016780  0EEF               	movlw	-17
 10433  016782                     us653999:
 10434  016782  006F FF7B FFE3     	movff	postinc2,plusw1
 10435  016788  28E8               	incf	wreg,w,c
 10436  01678A  2E35               	decfsz	btemp^0,f,c
 10437  01678C  D7FA               	bra	us653999
 10438                           
 10439                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10440  01678E  0EF7               	movlw	247
 10441  016790  26E1               	addwf	fsr1l,f,c
 10442  016792  0EFF               	movlw	255
 10443  016794  22E2               	addwfc	fsr1h,f,c
 10444  016796  0012               	return		;funcret
 10445  016798                     __end_of___lodiv:
 10446                           	opt callstack 0
 10447                           
 10448 ;; *************** function _strncmp *****************
 10449 ;; Defined at:
 10450 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  _l              2  [STACK] PTR const unsigned char 
 10453 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10454 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10455 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10456 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10457 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10458 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10459 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10460 ;;		 -> STR_1(17), 
 10461 ;;  _r              2  [STACK] PTR const unsigned char 
 10462 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10463 ;;		 -> STR_48(3), STR_44(3), 
 10464 ;;  n               2  [STACK] unsigned int 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  r               2  [STACK] PTR const unsigned char 
 10467 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10468 ;;		 -> STR_48(3), STR_44(3), 
 10469 ;;  l               2  [STACK] PTR const unsigned char 
 10470 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10471 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10472 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10473 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10474 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10475 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10476 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10477 ;;		 -> STR_1(17), 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  2  [STACK] int 
 10480 ;; Registers used:
 10481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/4
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;Total ram usage:        0 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    6
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_vfpfcnvrt
 10498 ;; This function uses a reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text43
 10502  015C8C                     __ptext43:
 10503                           	opt callstack 0
 10504  015C8C                     _strncmp:
 10505                           	opt callstack 0
 10506                           
 10507                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10508  015C8C  52E6               	movf	postinc1,f,c
 10509  015C8E  52E6               	movf	postinc1,f,c
 10510  015C90  52E6               	movf	postinc1,f,c
 10511  015C92  52E6               	movf	postinc1,f,c
 10512                           
 10513                           ;stkvar	__l @ sp[(-4)+-2]
 10514                           
 10515                           ;incstack = 0
 10516  015C94  0EFA               	movlw	-6
 10517  015C96  006F FF8C  F03F    	movff	plusw1,btemp+10
 10518  015C9C  0EFB               	movlw	-5
 10519  015C9E  006F FF8C  F040    	movff	plusw1,btemp+11
 10520                           
 10521                           ;stkvar	_l @ sp[(-4)+2]
 10522  015CA4  0EFF               	movlw	-1
 10523  015CA6  0060  F103  FFE3   	movff	btemp+11,plusw1
 10524  015CAC  0EFE               	movlw	-2
 10525  015CAE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10526                           
 10527                           ;stkvar	__r @ sp[(-4)+-4]
 10528  015CB4  0EF8               	movlw	-8
 10529  015CB6  006F FF8C  F03F    	movff	plusw1,btemp+10
 10530  015CBC  0EF9               	movlw	-7
 10531  015CBE  006F FF8C  F040    	movff	plusw1,btemp+11
 10532                           
 10533                           ;stkvar	_r @ sp[(-4)+0]
 10534  015CC4  0EFD               	movlw	-3
 10535  015CC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 10536  015CCC  0EFC               	movlw	-4
 10537  015CCE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10538                           
 10539                           ;stkvar	_n @ sp[(-4)+-6]
 10540  015CD4  0EF6               	movlw	-10
 10541  015CD6  006F FF8C  F035    	movff	plusw1,btemp
 10542  015CDC  0E01               	movlw	1
 10543  015CDE  5E35               	subwf	btemp^0,f,c
 10544  015CE0  0EF6               	movlw	-10
 10545  015CE2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10546  015CE8  0EF7               	movlw	-9
 10547  015CEA  006F FF8C  F035    	movff	plusw1,btemp
 10548  015CF0  0E00               	movlw	0
 10549  015CF2  5A35               	subwfb	btemp^0,f,c
 10550  015CF4  0EF7               	movlw	-9
 10551  015CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10552  015CFC  0EF6               	movlw	-10
 10553  015CFE  28E3               	incf	plusw1,w,c
 10554  015D00  E13F               	bnz	l7726
 10555  015D02  0EF7               	movlw	-9
 10556  015D04  28E3               	incf	plusw1,w,c
 10557  015D06  A4D8               	btfss	status,2,c
 10558  015D08  D03B               	goto	l7726
 10559  015D0A  0E00               	movlw	0
 10560  015D0C  6E35               	movwf	btemp^0,c
 10561  015D0E  0E00               	movlw	0
 10562  015D10  6E36               	movwf	(btemp+1)^0,c
 10563  015D12  D0C7               	goto	l2841
 10564  015D14                     l7724:
 10565                           
 10566                           ;stkvar	_l @ sp[(-4)+2]
 10567  015D14  0EFE               	movlw	-2
 10568  015D16  50E3               	movf	plusw1,w,c
 10569  015D18  0F01               	addlw	1
 10570  015D1A  6E35               	movwf	btemp^0,c
 10571  015D1C  0EFE               	movlw	-2
 10572  015D1E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10573  015D24  6A35               	clrf	btemp^0,c
 10574  015D26  0EFF               	movlw	-1
 10575  015D28  50E3               	movf	plusw1,w,c
 10576  015D2A  2035               	addwfc	btemp^0,w,c
 10577  015D2C  6E35               	movwf	btemp^0,c
 10578  015D2E  0EFF               	movlw	-1
 10579  015D30  0060  F0D7  FFE3   	movff	btemp,plusw1
 10580                           
 10581                           ;stkvar	_r @ sp[(-4)+0]
 10582  015D36  0EFC               	movlw	-4
 10583  015D38  50E3               	movf	plusw1,w,c
 10584  015D3A  0F01               	addlw	1
 10585  015D3C  6E35               	movwf	btemp^0,c
 10586  015D3E  0EFC               	movlw	-4
 10587  015D40  0060  F0D7  FFE3   	movff	btemp,plusw1
 10588  015D46  6A35               	clrf	btemp^0,c
 10589  015D48  0EFD               	movlw	-3
 10590  015D4A  50E3               	movf	plusw1,w,c
 10591  015D4C  2035               	addwfc	btemp^0,w,c
 10592  015D4E  6E35               	movwf	btemp^0,c
 10593  015D50  0EFD               	movlw	-3
 10594  015D52  0060  F0D7  FFE3   	movff	btemp,plusw1
 10595                           
 10596                           ;stkvar	_n @ sp[(-4)+-6]
 10597  015D58  0EF6               	movlw	-10
 10598  015D5A  006F FF8C  F035    	movff	plusw1,btemp
 10599  015D60  0E01               	movlw	1
 10600  015D62  5E35               	subwf	btemp^0,f,c
 10601  015D64  0EF6               	movlw	-10
 10602  015D66  0060  F0D7  FFE3   	movff	btemp,plusw1
 10603  015D6C  0EF7               	movlw	-9
 10604  015D6E  006F FF8C  F035    	movff	plusw1,btemp
 10605  015D74  0E00               	movlw	0
 10606  015D76  5A35               	subwfb	btemp^0,f,c
 10607  015D78  0EF7               	movlw	-9
 10608  015D7A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10609  015D80                     l7726:
 10610                           
 10611                           ;stkvar	_l @ sp[(-4)+2]
 10612  015D80  0EFE               	movlw	-2
 10613  015D82  006F FF8F FFF6     	movff	plusw1,tblptrl
 10614  015D88  0EFF               	movlw	-1
 10615  015D8A  006F FF8F FFF7     	movff	plusw1,tblptrh
 10616  015D90  0E00               	movlw	low (__mediumconst shr (0+16))
 10617  015D92  6EF8               	movwf	tblptru,c
 10618  015D94  0E1F               	movlw	(high __ramtop+-1)
 10619  015D96  64F7               	cpfsgt	tblptrh,c
 10620  015D98  D003               	bra	u7757
 10621  015D9A  0008               	tblrd		*
 10622  015D9C  50F5               	movf	tablat,w,c
 10623  015D9E  D007               	bra	u7750
 10624  015DA0                     u7757:
 10625  015DA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10626  015DA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10627  015DAC  50EF               	movf	indf0,w,c
 10628  015DAE                     u7750:
 10629  015DAE  0900               	iorlw	0
 10630  015DB0  B4D8               	btfsc	status,2,c
 10631  015DB2  D04A               	goto	u7790
 10632                           
 10633                           ;stkvar	_r @ sp[(-4)+0]
 10634  015DB4  50E1               	movf	fsr1l,w,c
 10635  015DB6  0FFC               	addlw	-4
 10636  015DB8  6ED9               	movwf	fsr2l,c
 10637  015DBA  50E2               	movf	fsr1h,w,c
 10638  015DBC  6EDA               	movwf	fsr2h,c
 10639  015DBE  0EFF               	movlw	255
 10640  015DC0  22DA               	addwfc	fsr2h,f,c
 10641  015DC2  006F FF7B FFF6     	movff	postinc2,tblptrl
 10642  015DC8  006F FF77 FFF7     	movff	postdec2,tblptrh
 10643  015DCE                     	if	0	;tblptru may be non-zero
 10644  015DCE                     	endif
 10645  015DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10646  015DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 10647  015DD0  6EF8               	movwf	tblptru,c
 10648  015DD2                     	endif
 10649  015DD2  0008               	tblrd		*
 10650  015DD4  50F5               	movf	tablat,w,c
 10651  015DD6  0900               	iorlw	0
 10652  015DD8  B4D8               	btfsc	status,2,c
 10653  015DDA  D036               	goto	u7790
 10654                           
 10655                           ;stkvar	_n @ sp[(-4)+-6]
 10656  015DDC  0EF6               	movlw	-10
 10657  015DDE  006F FF8C  F035    	movff	plusw1,btemp
 10658  015DE4  0EF7               	movlw	-9
 10659  015DE6  50E3               	movf	plusw1,w,c
 10660  015DE8  1035               	iorwf	btemp^0,w,c
 10661  015DEA  B4D8               	btfsc	status,2,c
 10662  015DEC  D02D               	goto	u7790
 10663                           
 10664                           ;stkvar	_r @ sp[(-4)+0]
 10665  015DEE  50E1               	movf	fsr1l,w,c
 10666  015DF0  0FFC               	addlw	-4
 10667  015DF2  6ED9               	movwf	fsr2l,c
 10668  015DF4  50E2               	movf	fsr1h,w,c
 10669  015DF6  6EDA               	movwf	fsr2h,c
 10670  015DF8  0EFF               	movlw	255
 10671  015DFA  22DA               	addwfc	fsr2h,f,c
 10672  015DFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 10673  015E02  006F FF77 FFF7     	movff	postdec2,tblptrh
 10674  015E08                     	if	0	;tblptru may be non-zero
 10675  015E08                     	endif
 10676  015E08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10677  015E08  0E00               	movlw	low (__mediumconst shr (0+16))
 10678  015E0A  6EF8               	movwf	tblptru,c
 10679  015E0C                     	endif
 10680  015E0C  0008               	tblrd		*
 10681  015E0E  006F FFD4  F040    	movff	tablat,btemp+11
 10682                           
 10683                           ;stkvar	_l @ sp[(-4)+2]
 10684  015E14  0EFE               	movlw	-2
 10685  015E16  006F FF8F FFF6     	movff	plusw1,tblptrl
 10686  015E1C  0EFF               	movlw	-1
 10687  015E1E  006F FF8F FFF7     	movff	plusw1,tblptrh
 10688  015E24  0E00               	movlw	low (__mediumconst shr (0+16))
 10689  015E26  6EF8               	movwf	tblptru,c
 10690  015E28  0E1F               	movlw	(high __ramtop+-1)
 10691  015E2A  64F7               	cpfsgt	tblptrh,c
 10692  015E2C  D003               	bra	u7797
 10693  015E2E  0008               	tblrd		*
 10694  015E30  50F5               	movf	tablat,w,c
 10695  015E32  D007               	bra	u7795
 10696  015E34                     u7797:
 10697  015E34  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10698  015E3A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10699  015E40  50EF               	movf	indf0,w,c
 10700  015E42                     u7795:
 10701  015E42  1840               	xorwf	(btemp+11)^0,w,c
 10702  015E44  B4D8               	btfsc	status,2,c
 10703  015E46  D766               	goto	l7724
 10704  015E48                     u7790:
 10705                           
 10706                           ;stkvar	_l @ sp[(-4)+2]
 10707  015E48  0EFE               	movlw	-2
 10708  015E4A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10709  015E50  0EFF               	movlw	-1
 10710  015E52  006F FF8F FFF7     	movff	plusw1,tblptrh
 10711  015E58  0E00               	movlw	low (__mediumconst shr (0+16))
 10712  015E5A  6EF8               	movwf	tblptru,c
 10713  015E5C  0E1F               	movlw	(high __ramtop+-1)
 10714  015E5E  64F7               	cpfsgt	tblptrh,c
 10715  015E60  D003               	bra	u7807
 10716  015E62  0008               	tblrd		*
 10717  015E64  50F5               	movf	tablat,w,c
 10718  015E66  D007               	bra	u7800
 10719  015E68                     u7807:
 10720  015E68  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10721  015E6E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10722  015E74  50EF               	movf	indf0,w,c
 10723  015E76                     u7800:
 10724  015E76  6E35               	movwf	btemp^0,c
 10725  015E78  6A36               	clrf	(btemp+1)^0,c
 10726                           
 10727                           ;stkvar	_r @ sp[(-4)+0]
 10728  015E7A  50E1               	movf	fsr1l,w,c
 10729  015E7C  0FFC               	addlw	-4
 10730  015E7E  6ED9               	movwf	fsr2l,c
 10731  015E80  50E2               	movf	fsr1h,w,c
 10732  015E82  6EDA               	movwf	fsr2h,c
 10733  015E84  0EFF               	movlw	255
 10734  015E86  22DA               	addwfc	fsr2h,f,c
 10735  015E88  006F FF7B FFF6     	movff	postinc2,tblptrl
 10736  015E8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10737  015E94                     	if	0	;tblptru may be non-zero
 10738  015E94                     	endif
 10739  015E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10740  015E94  0E00               	movlw	low (__mediumconst shr (0+16))
 10741  015E96  6EF8               	movwf	tblptru,c
 10742  015E98                     	endif
 10743  015E98  0008               	tblrd		*
 10744  015E9A  50F5               	movf	tablat,w,c
 10745  015E9C  5E35               	subwf	btemp^0,f,c
 10746  015E9E  0E00               	movlw	0
 10747  015EA0  5A36               	subwfb	(btemp+1)^0,f,c
 10748  015EA2                     l2841:
 10749                           
 10750                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10751  015EA2  0EF6               	movlw	246
 10752  015EA4  26E1               	addwf	fsr1l,f,c
 10753  015EA6  0EFF               	movlw	255
 10754  015EA8  22E2               	addwfc	fsr1h,f,c
 10755  015EAA  0012               	return		;funcret
 10756  015EAC                     __end_of_strncmp:
 10757                           	opt callstack 0
 10758                           
 10759 ;; *************** function _stoa *****************
 10760 ;; Defined at:
 10761 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10764 ;;		 -> f(6), NULL(0), 
 10765 ;;  s               2  [STACK] PTR unsigned char 
 10766 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10767 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10768 ;;		 -> STR_3(5), V(187), 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;  nuls            7  [STACK] unsigned char [7]
 10771 ;;  l               2  [STACK] int 
 10772 ;;  p               2  [STACK] int 
 10773 ;;  cp              2  [STACK] PTR unsigned char 
 10774 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10775 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10776 ;;		 -> STR_7(5), STR_3(5), V(187), 
 10777 ;;  w               2  [STACK] int 
 10778 ;;  i               2  [STACK] int 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  2  [STACK] int 
 10781 ;; Registers used:
 10782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/4
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10792 ;;Total ram usage:        0 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    9
 10795 ;; This function calls:
 10796 ;;		_fputc
 10797 ;;		_strlen
 10798 ;; This function is called by:
 10799 ;;		_vfpfcnvrt
 10800 ;; This function uses a reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text44
 10804  01529A                     __ptext44:
 10805                           	opt callstack 0
 10806  01529A                     _stoa:
 10807                           	opt callstack 0
 10808                           
 10809                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10810  01529A  0E11               	movlw	17
 10811  01529C  26E1               	addwf	fsr1l,f,c
 10812  01529E  0E00               	movlw	0
 10813  0152A0  22E2               	addwfc	fsr1h,f,c
 10814                           
 10815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10816                           
 10817                           ;incstack = 0
 10818  0152A2  EE20  F0CB         	lfsr	2,stoa@F1166
 10819                           
 10820                           ;stkvar	_nuls @ sp[(-17)+0]
 10821  0152A6  0E07               	movlw	7
 10822  0152A8  6E35               	movwf	btemp^0,c
 10823  0152AA  0EEF               	movlw	-17
 10824  0152AC                     us990999:
 10825  0152AC  006F FF7B FFE3     	movff	postinc2,plusw1
 10826  0152B2  28E8               	incf	wreg,w,c
 10827  0152B4  2E35               	decfsz	btemp^0,f,c
 10828  0152B6  D7FA               	bra	us990999
 10829                           
 10830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10831                           ;stkvar	_s @ sp[(-17)+-4]
 10832  0152B8  0EEB               	movlw	-21
 10833  0152BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10834  0152C0  0EEC               	movlw	-20
 10835  0152C2  006F FF8C  F040    	movff	plusw1,btemp+11
 10836                           
 10837                           ;stkvar	_cp @ sp[(-17)+11]
 10838  0152C8  0EFB               	movlw	-5
 10839  0152CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10840  0152D0  0EFA               	movlw	-6
 10841  0152D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10842                           
 10843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10844                           ;stkvar	_cp @ sp[(-17)+11]
 10845  0152D8  0EFA               	movlw	-6
 10846  0152DA  006F FF8C  F035    	movff	plusw1,btemp
 10847  0152E0  0EFB               	movlw	-5
 10848  0152E2  50E3               	movf	plusw1,w,c
 10849  0152E4  1035               	iorwf	btemp^0,w,c
 10850  0152E6  A4D8               	btfss	status,2,c
 10851  0152E8  D00E               	goto	l9694
 10852                           
 10853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10854                           ;stkvar	_nuls @ sp[(-17)+0]
 10855  0152EA  0EEF               	movlw	239
 10856  0152EC  24E1               	addwf	fsr1l,w,c
 10857  0152EE  6E3F               	movwf	(btemp+10)^0,c
 10858  0152F0  0EFF               	movlw	255
 10859  0152F2  20E2               	addwfc	fsr1h,w,c
 10860  0152F4  6E40               	movwf	(btemp+11)^0,c
 10861                           
 10862                           ;stkvar	_cp @ sp[(-17)+11]
 10863  0152F6  0EFB               	movlw	-5
 10864  0152F8  0060  F103  FFE3   	movff	btemp+11,plusw1
 10865  0152FE  0EFA               	movlw	-6
 10866  015300  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10867  015306                     l9694:
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10870                           ;stkvar	_cp @ sp[(-17)+11]
 10871  015306  0EFA               	movlw	-6
 10872  015308  006F FF8F FFE6     	movff	plusw1,postinc1
 10873  01530E  006F FF8F FFE6     	movff	plusw1,postinc1
 10874  015314  ECC6  F0BC         	call	_strlen	;wreg free
 10875                           
 10876                           ;stkvar	_l @ sp[(-17)+7]
 10877  015318  0EF6               	movlw	-10
 10878  01531A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10879  015320  0EF7               	movlw	-9
 10880  015322  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10881                           
 10882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10883                           ;stkvar	_p @ sp[(-17)+9]
 10884  015328  0EF8               	movlw	-8
 10885  01532A  0060  F083  FFE3   	movff	_prec,plusw1
 10886  015330  0EF9               	movlw	-7
 10887  015332  0060  F087  FFE3   	movff	_prec+1,plusw1
 10888                           
 10889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10890                           ;stkvar	_p @ sp[(-17)+9]
 10891  015338  0EF9               	movlw	-7
 10892  01533A  BEE3               	btfsc	plusw1,7,c
 10893  01533C  D023               	goto	l1892
 10894                           
 10895                           ;stkvar	_l @ sp[(-17)+7]
 10896                           ;stkvar	_p @ sp[(-17)+9]
 10897  01533E  50E1               	movf	fsr1l,w,c
 10898  015340  0FF8               	addlw	-8
 10899  015342  6ED9               	movwf	fsr2l,c
 10900  015344  50E2               	movf	fsr1h,w,c
 10901  015346  6EDA               	movwf	fsr2h,c
 10902  015348  0EFF               	movlw	255
 10903  01534A  22DA               	addwfc	fsr2h,f,c
 10904  01534C  0EF6               	movlw	-10
 10905  01534E  50E3               	movf	plusw1,w,c
 10906  015350  5CDE               	subwf	postinc2,w,c
 10907  015352  50DE               	movf	postinc2,w,c
 10908  015354  0A80               	xorlw	128
 10909  015356  6E35               	movwf	btemp^0,c
 10910  015358  0EF7               	movlw	-9
 10911  01535A  50E3               	movf	plusw1,w,c
 10912  01535C  0A80               	xorlw	128
 10913  01535E  5835               	subwfb	btemp^0,w,c
 10914  015360  B0D8               	btfsc	status,0,c
 10915  015362  D010               	goto	l1892
 10916                           
 10917                           ;stkvar	_p @ sp[(-17)+9]
 10918                           ;stkvar	_l @ sp[(-17)+7]
 10919  015364  0EF8               	movlw	-8
 10920  015366  006F FF8C  F035    	movff	plusw1,btemp
 10921  01536C  0EF6               	movlw	-10
 10922  01536E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10923  015374  0EF9               	movlw	-7
 10924  015376  006F FF8C  F035    	movff	plusw1,btemp
 10925  01537C  0EF7               	movlw	-9
 10926  01537E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10927  015384                     l1892:
 10928                           
 10929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10930                           ;stkvar	_l @ sp[(-17)+7]
 10931                           ;stkvar	_p @ sp[(-17)+9]
 10932  015384  0EF6               	movlw	-10
 10933  015386  006F FF8C  F035    	movff	plusw1,btemp
 10934  01538C  0EF8               	movlw	-8
 10935  01538E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10936  015394  0EF7               	movlw	-9
 10937  015396  006F FF8C  F035    	movff	plusw1,btemp
 10938  01539C  0EF9               	movlw	-7
 10939  01539E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10940                           
 10941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10942                           ;stkvar	_w @ sp[(-17)+13]
 10943  0153A4  0EFC               	movlw	-4
 10944  0153A6  0060  F07B  FFE3   	movff	_width,plusw1
 10945  0153AC  0EFD               	movlw	-3
 10946  0153AE  0060  F07F  FFE3   	movff	_width+1,plusw1
 10947                           
 10948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10949  0153B4  A022               	btfss	_flags^0,0,c
 10950  0153B6  D01F               	goto	l9714
 10951  0153B8  D031               	goto	u9950
 10952  0153BA                     l9710:
 10953                           
 10954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10955                           ;stkvar	_fp @ sp[(-17)+-2]
 10956  0153BA  0EED               	movlw	-19
 10957  0153BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10958  0153C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10959  0153C8  0E20               	movlw	32
 10960  0153CA  6EE6               	movwf	postinc1,c
 10961  0153CC  0E00               	movlw	0
 10962  0153CE  6EE6               	movwf	postinc1,c
 10963  0153D0  EC14  F0B7         	call	_fputc	;wreg free
 10964                           
 10965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10966                           ;stkvar	_l @ sp[(-17)+7]
 10967  0153D4  0EF6               	movlw	-10
 10968  0153D6  50E3               	movf	plusw1,w,c
 10969  0153D8  0F01               	addlw	1
 10970  0153DA  6E35               	movwf	btemp^0,c
 10971  0153DC  0EF6               	movlw	-10
 10972  0153DE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10973  0153E4  6A35               	clrf	btemp^0,c
 10974  0153E6  0EF7               	movlw	-9
 10975  0153E8  50E3               	movf	plusw1,w,c
 10976  0153EA  2035               	addwfc	btemp^0,w,c
 10977  0153EC  6E35               	movwf	btemp^0,c
 10978  0153EE  0EF7               	movlw	-9
 10979  0153F0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10980  0153F6                     l9714:
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10983                           ;stkvar	_w @ sp[(-17)+13]
 10984                           ;stkvar	_l @ sp[(-17)+7]
 10985  0153F6  50E1               	movf	fsr1l,w,c
 10986  0153F8  0FF6               	addlw	-10
 10987  0153FA  6ED9               	movwf	fsr2l,c
 10988  0153FC  50E2               	movf	fsr1h,w,c
 10989  0153FE  6EDA               	movwf	fsr2h,c
 10990  015400  0EFF               	movlw	255
 10991  015402  22DA               	addwfc	fsr2h,f,c
 10992  015404  0EFC               	movlw	-4
 10993  015406  50E3               	movf	plusw1,w,c
 10994  015408  5CDE               	subwf	postinc2,w,c
 10995  01540A  50DE               	movf	postinc2,w,c
 10996  01540C  0A80               	xorlw	128
 10997  01540E  6E35               	movwf	btemp^0,c
 10998  015410  0EFD               	movlw	-3
 10999  015412  50E3               	movf	plusw1,w,c
 11000  015414  0A80               	xorlw	128
 11001  015416  5835               	subwfb	btemp^0,w,c
 11002  015418  A0D8               	btfss	status,0,c
 11003  01541A  D7CF               	goto	l9710
 11004  01541C                     u9950:
 11005                           
 11006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11007                           ;stkvar	_i @ sp[(-17)+15]
 11008  01541C  0EFE               	movlw	-2
 11009  01541E  6AE3               	clrf	plusw1,c
 11010  015420  0EFF               	movlw	-1
 11011  015422  6AE3               	clrf	plusw1,c
 11012                           
 11013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11014  015424  D045               	goto	l9724
 11015  015426                     l9718:
 11016                           
 11017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11018                           ;stkvar	_fp @ sp[(-17)+-2]
 11019  015426  0EED               	movlw	-19
 11020  015428  006F FF8F FFE6     	movff	plusw1,postinc1
 11021  01542E  006F FF8F FFE6     	movff	plusw1,postinc1
 11022                           
 11023                           ;stkvar	_cp @ sp[(-19)+11]
 11024  015434  0EF8               	movlw	-8
 11025  015436  006F FF8F FFF6     	movff	plusw1,tblptrl
 11026  01543C  0EF9               	movlw	-7
 11027  01543E  006F FF8F FFF7     	movff	plusw1,tblptrh
 11028  015444  0E00               	movlw	low (__mediumconst shr (0+16))
 11029  015446  6EF8               	movwf	tblptru,c
 11030  015448  0E1F               	movlw	(high __ramtop+-1)
 11031  01544A  64F7               	cpfsgt	tblptrh,c
 11032  01544C  D003               	bra	u9967
 11033  01544E  0008               	tblrd		*
 11034  015450  50F5               	movf	tablat,w,c
 11035  015452  D007               	bra	u9960
 11036  015454                     u9967:
 11037  015454  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11038  01545A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11039  015460  50EF               	movf	indf0,w,c
 11040  015462                     u9960:
 11041  015462  6EE6               	movwf	postinc1,c
 11042  015464  0E00               	movlw	0
 11043  015466  6EE6               	movwf	postinc1,c
 11044  015468  EC14  F0B7         	call	_fputc	;wreg free
 11045                           
 11046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11047                           ;stkvar	_cp @ sp[(-17)+11]
 11048  01546C  0EFA               	movlw	-6
 11049  01546E  50E3               	movf	plusw1,w,c
 11050  015470  0F01               	addlw	1
 11051  015472  6E35               	movwf	btemp^0,c
 11052  015474  0EFA               	movlw	-6
 11053  015476  0060  F0D7  FFE3   	movff	btemp,plusw1
 11054  01547C  6A35               	clrf	btemp^0,c
 11055  01547E  0EFB               	movlw	-5
 11056  015480  50E3               	movf	plusw1,w,c
 11057  015482  2035               	addwfc	btemp^0,w,c
 11058  015484  6E35               	movwf	btemp^0,c
 11059  015486  0EFB               	movlw	-5
 11060  015488  0060  F0D7  FFE3   	movff	btemp,plusw1
 11061                           
 11062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11063                           ;stkvar	_i @ sp[(-17)+15]
 11064  01548E  0EFE               	movlw	-2
 11065  015490  50E3               	movf	plusw1,w,c
 11066  015492  0F01               	addlw	1
 11067  015494  6E35               	movwf	btemp^0,c
 11068  015496  0EFE               	movlw	-2
 11069  015498  0060  F0D7  FFE3   	movff	btemp,plusw1
 11070  01549E  6A35               	clrf	btemp^0,c
 11071  0154A0  0EFF               	movlw	-1
 11072  0154A2  50E3               	movf	plusw1,w,c
 11073  0154A4  2035               	addwfc	btemp^0,w,c
 11074  0154A6  6E35               	movwf	btemp^0,c
 11075  0154A8  0EFF               	movlw	-1
 11076  0154AA  0060  F0D7  FFE3   	movff	btemp,plusw1
 11077  0154B0                     l9724:
 11078                           
 11079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11080                           ;stkvar	_p @ sp[(-17)+9]
 11081                           ;stkvar	_i @ sp[(-17)+15]
 11082  0154B0  50E1               	movf	fsr1l,w,c
 11083  0154B2  0FFE               	addlw	-2
 11084  0154B4  6ED9               	movwf	fsr2l,c
 11085  0154B6  50E2               	movf	fsr1h,w,c
 11086  0154B8  6EDA               	movwf	fsr2h,c
 11087  0154BA  0EFF               	movlw	255
 11088  0154BC  22DA               	addwfc	fsr2h,f,c
 11089  0154BE  0EF8               	movlw	-8
 11090  0154C0  50E3               	movf	plusw1,w,c
 11091  0154C2  5CDE               	subwf	postinc2,w,c
 11092  0154C4  50DE               	movf	postinc2,w,c
 11093  0154C6  0A80               	xorlw	128
 11094  0154C8  6E35               	movwf	btemp^0,c
 11095  0154CA  0EF9               	movlw	-7
 11096  0154CC  50E3               	movf	plusw1,w,c
 11097  0154CE  0A80               	xorlw	128
 11098  0154D0  5835               	subwfb	btemp^0,w,c
 11099  0154D2  A0D8               	btfss	status,0,c
 11100  0154D4  D7A8               	goto	l9718
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11103  0154D6  B022               	btfsc	_flags^0,0,c
 11104  0154D8  D01F               	goto	l9732
 11105  0154DA  D031               	goto	u9990
 11106  0154DC                     l9728:
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11109                           ;stkvar	_fp @ sp[(-17)+-2]
 11110  0154DC  0EED               	movlw	-19
 11111  0154DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11112  0154E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11113  0154EA  0E20               	movlw	32
 11114  0154EC  6EE6               	movwf	postinc1,c
 11115  0154EE  0E00               	movlw	0
 11116  0154F0  6EE6               	movwf	postinc1,c
 11117  0154F2  EC14  F0B7         	call	_fputc	;wreg free
 11118                           
 11119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11120                           ;stkvar	_l @ sp[(-17)+7]
 11121  0154F6  0EF6               	movlw	-10
 11122  0154F8  50E3               	movf	plusw1,w,c
 11123  0154FA  0F01               	addlw	1
 11124  0154FC  6E35               	movwf	btemp^0,c
 11125  0154FE  0EF6               	movlw	-10
 11126  015500  0060  F0D7  FFE3   	movff	btemp,plusw1
 11127  015506  6A35               	clrf	btemp^0,c
 11128  015508  0EF7               	movlw	-9
 11129  01550A  50E3               	movf	plusw1,w,c
 11130  01550C  2035               	addwfc	btemp^0,w,c
 11131  01550E  6E35               	movwf	btemp^0,c
 11132  015510  0EF7               	movlw	-9
 11133  015512  0060  F0D7  FFE3   	movff	btemp,plusw1
 11134  015518                     l9732:
 11135                           
 11136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11137                           ;stkvar	_w @ sp[(-17)+13]
 11138                           ;stkvar	_l @ sp[(-17)+7]
 11139  015518  50E1               	movf	fsr1l,w,c
 11140  01551A  0FF6               	addlw	-10
 11141  01551C  6ED9               	movwf	fsr2l,c
 11142  01551E  50E2               	movf	fsr1h,w,c
 11143  015520  6EDA               	movwf	fsr2h,c
 11144  015522  0EFF               	movlw	255
 11145  015524  22DA               	addwfc	fsr2h,f,c
 11146  015526  0EFC               	movlw	-4
 11147  015528  50E3               	movf	plusw1,w,c
 11148  01552A  5CDE               	subwf	postinc2,w,c
 11149  01552C  50DE               	movf	postinc2,w,c
 11150  01552E  0A80               	xorlw	128
 11151  015530  6E35               	movwf	btemp^0,c
 11152  015532  0EFD               	movlw	-3
 11153  015534  50E3               	movf	plusw1,w,c
 11154  015536  0A80               	xorlw	128
 11155  015538  5835               	subwfb	btemp^0,w,c
 11156  01553A  A0D8               	btfss	status,0,c
 11157  01553C  D7CF               	goto	l9728
 11158  01553E                     u9990:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11161                           ;stkvar	_l @ sp[(-17)+7]
 11162  01553E  0EF6               	movlw	-10
 11163  015540  006F FF8C  F035    	movff	plusw1,btemp
 11164  015546  0EF7               	movlw	-9
 11165  015548  006F FF8C  F036    	movff	plusw1,btemp+1
 11166                           
 11167                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11168  01554E  0EEB               	movlw	235
 11169  015550  26E1               	addwf	fsr1l,f,c
 11170  015552  0EFF               	movlw	255
 11171  015554  22E2               	addwfc	fsr1h,f,c
 11172  015556  0012               	return		;funcret
 11173  015558                     __end_of_stoa:
 11174                           	opt callstack 0
 11175                           
 11176 ;; *************** function _efgtoa *****************
 11177 ;; Defined at:
 11178 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11181 ;;		 -> f(6), NULL(0), 
 11182 ;;  f               4  [STACK] PTR struct _IO_FILE
 11183 ;;  c               1  [STACK] unsigned char 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  u               4  [STACK] unsigned char 
 11186 ;;  g               4  [STACK] unsigned char 
 11187 ;;  l               4  [STACK] unsigned char 
 11188 ;;  h               4  [STACK] unsigned char 
 11189 ;;  ou              4  [STACK] unsigned char 
 11190 ;;  n               2  [STACK] int 
 11191 ;;  e               2  [STACK] int 
 11192 ;;  i               2  [STACK] int 
 11193 ;;  w               2  [STACK] int 
 11194 ;;  p               2  [STACK] int 
 11195 ;;  sign            2  [STACK] int 
 11196 ;;  d               2  [STACK] int 
 11197 ;;  ne              2  [STACK] int 
 11198 ;;  m               2  [STACK] int 
 11199 ;;  pp              2  [STACK] int 
 11200 ;;  t               2  [STACK] int 
 11201 ;;  mode            1  [STACK] unsigned char 
 11202 ;;  nmode           1  [STACK] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  2  [STACK] int 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/4
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11216 ;;Total ram usage:        0 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:   11
 11219 ;; This function calls:
 11220 ;;		___awdiv
 11221 ;;		___awmod
 11222 ;;		___fladd
 11223 ;;		___fldiv
 11224 ;;		___fleq
 11225 ;;		___flge
 11226 ;;		___flmul
 11227 ;;		___flneg
 11228 ;;		___flsub
 11229 ;;		___fltol
 11230 ;;		___fpclassifyf
 11231 ;;		_floorf
 11232 ;;		_isupper
 11233 ;;		_pad
 11234 ;;		_strcpy
 11235 ;;		_tolower
 11236 ;; This function is called by:
 11237 ;;		_vfpfcnvrt
 11238 ;; This function uses a reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text45
 11242  010000                     __ptext45:
 11243                           	opt callstack 0
 11244  010000                     _efgtoa:
 11245                           	opt callstack 0
 11246                           
 11247                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11248  010000  0E38               	movlw	56
 11249  010002  26E1               	addwf	fsr1l,f,c
 11250  010004  0E00               	movlw	0
 11251  010006  22E2               	addwfc	fsr1h,f,c
 11252                           
 11253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11254                           ;stkvar	_sign @ sp[(-56)+42]
 11255                           
 11256                           ;incstack = 0
 11257  010008  0EF2               	movlw	-14
 11258  01000A  6AE3               	clrf	plusw1,c
 11259  01000C  0EF3               	movlw	-13
 11260  01000E  6AE3               	clrf	plusw1,c
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11263                           ;stkvar	_f @ sp[(-56)+-6]
 11264  010010  0EC2               	movlw	-62
 11265  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
 11266  010018  0EC3               	movlw	-61
 11267  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
 11268  010020  0EC4               	movlw	-60
 11269  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
 11270  010028  0EC5               	movlw	-59
 11271  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
 11272                           
 11273                           ;stkvar	_g @ sp[(-56)+16]
 11274  010030  0ED8               	movlw	-40
 11275  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11276  010038  0ED9               	movlw	-39
 11277  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11278  010040  0EDA               	movlw	-38
 11279  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11280  010048  0EDB               	movlw	-37
 11281  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
 11282                           
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11284                           ;stkvar	_g @ sp[(-56)+16]
 11285  010050  0EDB               	movlw	-37
 11286  010052  AEE3               	btfss	plusw1,7,c
 11287  010054  D02B               	goto	l9392
 11288                           
 11289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11290  010056  0E01               	movlw	1
 11291  010058  6E3F               	movwf	(btemp+10)^0,c
 11292  01005A  0E00               	movlw	0
 11293  01005C  6E40               	movwf	(btemp+11)^0,c
 11294                           
 11295                           ;stkvar	_sign @ sp[(-56)+42]
 11296  01005E  0EF2               	movlw	-14
 11297  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11298  010066  0EF3               	movlw	-13
 11299  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
 11300                           
 11301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11302                           ;stkvar	_g @ sp[(-56)+16]
 11303  01006E  0ED8               	movlw	-40
 11304  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11305  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11306  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11307  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11308  010088  ECE8  F0C1         	call	___flneg	;wreg free
 11309                           
 11310                           ;stkvar	_g @ sp[(-56)+16]
 11311  01008C  0ED8               	movlw	-40
 11312  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11313  010094  0ED9               	movlw	-39
 11314  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11315  01009C  0EDA               	movlw	-38
 11316  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11317  0100A4  0EDB               	movlw	-37
 11318  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11319  0100AC                     l9392:
 11320                           
 11321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11322                           ;stkvar	_n @ sp[(-56)+32]
 11323  0100AC  0EE8               	movlw	-24
 11324  0100AE  6AE3               	clrf	plusw1,c
 11325  0100B0  0EE9               	movlw	-23
 11326  0100B2  6AE3               	clrf	plusw1,c
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11329                           ;stkvar	_w @ sp[(-56)+38]
 11330  0100B4  0EEE               	movlw	-18
 11331  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
 11332  0100BC  0EEF               	movlw	-17
 11333  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11336                           ;stkvar	_sign @ sp[(-56)+42]
 11337  0100C4  0EF2               	movlw	-14
 11338  0100C6  006F FF8C  F035    	movff	plusw1,btemp
 11339  0100CC  0EF3               	movlw	-13
 11340  0100CE  50E3               	movf	plusw1,w,c
 11341  0100D0  1035               	iorwf	btemp^0,w,c
 11342  0100D2  A4D8               	btfss	status,2,c
 11343  0100D4  D002               	goto	u9400
 11344  0100D6  A422               	btfss	_flags^0,2,c
 11345  0100D8  D036               	goto	l9412
 11346  0100DA                     u9400:
 11347                           
 11348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11349                           ;stkvar	_sign @ sp[(-56)+42]
 11350  0100DA  0EF2               	movlw	-14
 11351  0100DC  006F FF8C  F035    	movff	plusw1,btemp
 11352  0100E2  0EF3               	movlw	-13
 11353  0100E4  50E3               	movf	plusw1,w,c
 11354  0100E6  1035               	iorwf	btemp^0,w,c
 11355  0100E8  A4D8               	btfss	status,2,c
 11356  0100EA  D002               	goto	l9404
 11357  0100EC  0E2B               	movlw	43
 11358  0100EE  D001               	goto	L11
 11359  0100F0                     l9404:
 11360  0100F0  0E2D               	movlw	45
 11361  0100F2                     L11:
 11362  0100F2  6E3F               	movwf	(btemp+10)^0,c
 11363  0100F4  0E00               	movlw	0
 11364  0100F6  6E40               	movwf	(btemp+11)^0,c
 11365                           
 11366                           ;stkvar	_efgtoa$4196 @ sp[(-56)+10]
 11367  0100F8  0ED2               	movlw	-46
 11368  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11369  010100  0ED3               	movlw	-45
 11370  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
 11371                           
 11372                           ;stkvar	_efgtoa$4196 @ sp[(-56)+10]
 11373  010108  0ED2               	movlw	-46
 11374  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11375                           
 11376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11377                           ;stkvar	_n @ sp[(-56)+32]
 11378  010110  0EE8               	movlw	-24
 11379  010112  50E3               	movf	plusw1,w,c
 11380  010114  0F01               	addlw	1
 11381  010116  6E35               	movwf	btemp^0,c
 11382  010118  0EE8               	movlw	-24
 11383  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11384  010120  6A35               	clrf	btemp^0,c
 11385  010122  0EE9               	movlw	-23
 11386  010124  50E3               	movf	plusw1,w,c
 11387  010126  2035               	addwfc	btemp^0,w,c
 11388  010128  6E35               	movwf	btemp^0,c
 11389  01012A  0EE9               	movlw	-23
 11390  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11391                           
 11392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11393                           ;stkvar	_w @ sp[(-56)+38]
 11394  010132  50E1               	movf	fsr1l,w,c
 11395  010134  0FEE               	addlw	-18
 11396  010136  6ED9               	movwf	fsr2l,c
 11397  010138  50E2               	movf	fsr1h,w,c
 11398  01013A  6EDA               	movwf	fsr2h,c
 11399  01013C  0EFF               	movlw	255
 11400  01013E  22DA               	addwfc	fsr2h,f,c
 11401  010140  06DE               	decf	postinc2,f,c
 11402  010142  0E00               	movlw	0
 11403  010144  5ADD               	subwfb	postdec2,f,c
 11404  010146                     l9412:
 11405                           
 11406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11407                           ;stkvar	_g @ sp[(-56)+16]
 11408  010146  0ED8               	movlw	-40
 11409  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11410  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11411  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11412  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11413  010160  EC41  F0B2         	call	___fpclassifyf	;wreg free
 11414  010164  0435               	decf	btemp^0,w,c
 11415  010166  1036               	iorwf	(btemp+1)^0,w,c
 11416  010168  A4D8               	btfss	status,2,c
 11417  01016A  D076               	goto	l9430
 11418  01016C  0EBF               	movlw	191
 11419  01016E  6E3F               	movwf	(btemp+10)^0,c
 11420  010170  0EFF               	movlw	255
 11421  010172  6E40               	movwf	(btemp+11)^0,c
 11422                           
 11423                           ;stkvar	_c @ sp[(-56)+-7]
 11424  010174  0EC1               	movlw	-63
 11425  010176  50E3               	movf	plusw1,w,c
 11426  010178  6E3D               	movwf	(btemp+8)^0,c
 11427  01017A  6A3E               	clrf	(btemp+9)^0,c
 11428  01017C  503F               	movf	(btemp+10)^0,w,c
 11429  01017E  263D               	addwf	(btemp+8)^0,f,c
 11430  010180  5040               	movf	(btemp+11)^0,w,c
 11431  010182  223E               	addwfc	(btemp+9)^0,f,c
 11432  010184  503E               	movf	(btemp+9)^0,w,c
 11433  010186  E106               	bnz	u9430
 11434  010188  0E1A               	movlw	26
 11435  01018A  5C3D               	subwf	(btemp+8)^0,w,c
 11436  01018C  B0D8               	btfsc	status,0,c
 11437  01018E  D002               	goto	u9430
 11438  010190  0E01               	movlw	1
 11439  010192  D001               	goto	u9440
 11440  010194                     u9430:
 11441  010194  0E00               	movlw	0
 11442  010196                     u9440:
 11443  010196  6E3F               	movwf	(btemp+10)^0,c
 11444  010198  6A40               	clrf	(btemp+11)^0,c
 11445                           
 11446                           ;stkvar	_efgtoa$4197 @ sp[(-56)+8]
 11447  01019A  0ED0               	movlw	-48
 11448  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11449  0101A2  0ED1               	movlw	-47
 11450  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11451                           
 11452                           ;stkvar	_efgtoa$4197 @ sp[(-56)+8]
 11453  0101AA  0ED0               	movlw	-48
 11454  0101AC  006F FF8C  F035    	movff	plusw1,btemp
 11455  0101B2  0ED1               	movlw	-47
 11456  0101B4  50E3               	movf	plusw1,w,c
 11457  0101B6  1035               	iorwf	btemp^0,w,c
 11458  0101B8  B4D8               	btfsc	status,2,c
 11459  0101BA  D017               	goto	l9422
 11460                           
 11461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11462  0101BC  0ED7               	movlw	low STR_34
 11463  0101BE  6EE6               	movwf	postinc1,c
 11464  0101C0  0EFF               	movlw	high STR_34
 11465  0101C2  6EE6               	movwf	postinc1,c
 11466                           
 11467                           ;stkvar	_n @ sp[(-58)+32]
 11468  0101C4  0EAC               	movlw	low _dbuf
 11469  0101C6  6E3F               	movwf	(btemp+10)^0,c
 11470  0101C8  0E02               	movlw	high _dbuf
 11471  0101CA  6E40               	movwf	(btemp+11)^0,c
 11472  0101CC  0EE6               	movlw	-26
 11473  0101CE  50E3               	movf	plusw1,w,c
 11474  0101D0  263F               	addwf	(btemp+10)^0,f,c
 11475  0101D2  0EE7               	movlw	-25
 11476  0101D4  50E3               	movf	plusw1,w,c
 11477  0101D6  2240               	addwfc	(btemp+11)^0,f,c
 11478  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11479  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
 11480  0101E4  EC3D  F0BA         	call	_strcpy	;wreg free
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11483  0101E8  D016               	goto	l9424
 11484  0101EA                     l9422:
 11485                           
 11486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11487  0101EA  0EDF               	movlw	low STR_35
 11488  0101EC  6EE6               	movwf	postinc1,c
 11489  0101EE  0EFF               	movlw	high STR_35
 11490  0101F0  6EE6               	movwf	postinc1,c
 11491                           
 11492                           ;stkvar	_n @ sp[(-58)+32]
 11493  0101F2  0EAC               	movlw	low _dbuf
 11494  0101F4  6E3F               	movwf	(btemp+10)^0,c
 11495  0101F6  0E02               	movlw	high _dbuf
 11496  0101F8  6E40               	movwf	(btemp+11)^0,c
 11497  0101FA  0EE6               	movlw	-26
 11498  0101FC  50E3               	movf	plusw1,w,c
 11499  0101FE  263F               	addwf	(btemp+10)^0,f,c
 11500  010200  0EE7               	movlw	-25
 11501  010202  50E3               	movf	plusw1,w,c
 11502  010204  2240               	addwfc	(btemp+11)^0,f,c
 11503  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11504  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11505  010212  EC3D  F0BA         	call	_strcpy	;wreg free
 11506  010216                     l9424:
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11509                           ;stkvar	_w @ sp[(-56)+38]
 11510  010216  50E1               	movf	fsr1l,w,c
 11511  010218  0FEE               	addlw	-18
 11512  01021A  6ED9               	movwf	fsr2l,c
 11513  01021C  50E2               	movf	fsr1h,w,c
 11514  01021E  6EDA               	movwf	fsr2h,c
 11515  010220  0EFF               	movlw	255
 11516  010222  22DA               	addwfc	fsr2h,f,c
 11517  010224  0EFD               	movlw	253
 11518  010226  26DE               	addwf	postinc2,f,c
 11519  010228  0EFF               	movlw	255
 11520  01022A  22DD               	addwfc	postdec2,f,c
 11521  01022C                     l9426:
 11522                           
 11523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11524                           ;stkvar	_w @ sp[(-56)+38]
 11525  01022C  0EEE               	movlw	-18
 11526  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  01023A  0EAC               	movlw	low _dbuf
 11529  01023C  6EE6               	movwf	postinc1,c
 11530  01023E  0E02               	movlw	high _dbuf
 11531  010240  6EE6               	movwf	postinc1,c
 11532                           
 11533                           ;stkvar	_fp @ sp[(-60)+-2]
 11534  010242  0EC2               	movlw	-62
 11535  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11536  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  010250  EC32  F0B8         	call	_pad	;wreg free
 11538  010254  EF1D  F089         	goto	l1810
 11539  010258                     l9430:
 11540                           
 11541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11542                           ;stkvar	_g @ sp[(-56)+16]
 11543  010258  0ED8               	movlw	-40
 11544  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11545  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11546  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11547  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11548  010272  EC41  F0B2         	call	___fpclassifyf	;wreg free
 11549  010276  5035               	movf	btemp^0,w,c
 11550  010278  1036               	iorwf	(btemp+1)^0,w,c
 11551  01027A  A4D8               	btfss	status,2,c
 11552  01027C  D056               	goto	l9448
 11553  01027E  0EBF               	movlw	191
 11554  010280  6E3F               	movwf	(btemp+10)^0,c
 11555  010282  0EFF               	movlw	255
 11556  010284  6E40               	movwf	(btemp+11)^0,c
 11557                           
 11558                           ;stkvar	_c @ sp[(-56)+-7]
 11559  010286  0EC1               	movlw	-63
 11560  010288  50E3               	movf	plusw1,w,c
 11561  01028A  6E3D               	movwf	(btemp+8)^0,c
 11562  01028C  6A3E               	clrf	(btemp+9)^0,c
 11563  01028E  503F               	movf	(btemp+10)^0,w,c
 11564  010290  263D               	addwf	(btemp+8)^0,f,c
 11565  010292  5040               	movf	(btemp+11)^0,w,c
 11566  010294  223E               	addwfc	(btemp+9)^0,f,c
 11567  010296  503E               	movf	(btemp+9)^0,w,c
 11568  010298  E106               	bnz	u9470
 11569  01029A  0E1A               	movlw	26
 11570  01029C  5C3D               	subwf	(btemp+8)^0,w,c
 11571  01029E  B0D8               	btfsc	status,0,c
 11572  0102A0  D002               	goto	u9470
 11573  0102A2  0E01               	movlw	1
 11574  0102A4  D001               	goto	u9480
 11575  0102A6                     u9470:
 11576  0102A6  0E00               	movlw	0
 11577  0102A8                     u9480:
 11578  0102A8  6E3F               	movwf	(btemp+10)^0,c
 11579  0102AA  6A40               	clrf	(btemp+11)^0,c
 11580                           
 11581                           ;stkvar	_efgtoa$4201 @ sp[(-56)+6]
 11582  0102AC  0ECE               	movlw	-50
 11583  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11584  0102B4  0ECF               	movlw	-49
 11585  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 11586                           
 11587                           ;stkvar	_efgtoa$4201 @ sp[(-56)+6]
 11588  0102BC  0ECE               	movlw	-50
 11589  0102BE  006F FF8C  F035    	movff	plusw1,btemp
 11590  0102C4  0ECF               	movlw	-49
 11591  0102C6  50E3               	movf	plusw1,w,c
 11592  0102C8  1035               	iorwf	btemp^0,w,c
 11593  0102CA  B4D8               	btfsc	status,2,c
 11594  0102CC  D017               	goto	l9440
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11597  0102CE  0EDB               	movlw	low STR_38
 11598  0102D0  6EE6               	movwf	postinc1,c
 11599  0102D2  0EFF               	movlw	high STR_38
 11600  0102D4  6EE6               	movwf	postinc1,c
 11601                           
 11602                           ;stkvar	_n @ sp[(-58)+32]
 11603  0102D6  0EAC               	movlw	low _dbuf
 11604  0102D8  6E3F               	movwf	(btemp+10)^0,c
 11605  0102DA  0E02               	movlw	high _dbuf
 11606  0102DC  6E40               	movwf	(btemp+11)^0,c
 11607  0102DE  0EE6               	movlw	-26
 11608  0102E0  50E3               	movf	plusw1,w,c
 11609  0102E2  263F               	addwf	(btemp+10)^0,f,c
 11610  0102E4  0EE7               	movlw	-25
 11611  0102E6  50E3               	movf	plusw1,w,c
 11612  0102E8  2240               	addwfc	(btemp+11)^0,f,c
 11613  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11614  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
 11615  0102F6  EC3D  F0BA         	call	_strcpy	;wreg free
 11616                           
 11617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11618  0102FA  D78D               	goto	l9424
 11619  0102FC                     l9440:
 11620                           
 11621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11622  0102FC  0EE3               	movlw	low STR_39
 11623  0102FE  6EE6               	movwf	postinc1,c
 11624  010300  0EFF               	movlw	high STR_39
 11625  010302  6EE6               	movwf	postinc1,c
 11626                           
 11627                           ;stkvar	_n @ sp[(-58)+32]
 11628  010304  0EAC               	movlw	low _dbuf
 11629  010306  6E3F               	movwf	(btemp+10)^0,c
 11630  010308  0E02               	movlw	high _dbuf
 11631  01030A  6E40               	movwf	(btemp+11)^0,c
 11632  01030C  0EE6               	movlw	-26
 11633  01030E  50E3               	movf	plusw1,w,c
 11634  010310  263F               	addwf	(btemp+10)^0,f,c
 11635  010312  0EE7               	movlw	-25
 11636  010314  50E3               	movf	plusw1,w,c
 11637  010316  2240               	addwfc	(btemp+11)^0,f,c
 11638  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11639  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
 11640  010324  EC3D  F0BA         	call	_strcpy	;wreg free
 11641  010328  D776               	goto	l9424
 11642  01032A                     l9448:
 11643                           
 11644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11645  01032A  0E00               	movlw	0
 11646  01032C  6E3D               	movwf	(btemp+8)^0,c
 11647  01032E  0E00               	movlw	0
 11648  010330  6E3E               	movwf	(btemp+9)^0,c
 11649  010332  0E80               	movlw	128
 11650  010334  6E3F               	movwf	(btemp+10)^0,c
 11651  010336  0E3F               	movlw	63
 11652  010338  6E40               	movwf	(btemp+11)^0,c
 11653                           
 11654                           ;stkvar	_u @ sp[(-56)+12]
 11655  01033A  0ED4               	movlw	-44
 11656  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11657  010342  0ED5               	movlw	-43
 11658  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11659  01034A  0ED6               	movlw	-42
 11660  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11661  010352  0ED7               	movlw	-41
 11662  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11665                           ;stkvar	_e @ sp[(-56)+34]
 11666  01035A  0EEA               	movlw	-22
 11667  01035C  6AE3               	clrf	plusw1,c
 11668  01035E  0EEB               	movlw	-21
 11669  010360  6AE3               	clrf	plusw1,c
 11670                           
 11671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11672  010362  0E00               	movlw	0
 11673  010364  6EE6               	movwf	postinc1,c
 11674  010366  0E00               	movlw	0
 11675  010368  6EE6               	movwf	postinc1,c
 11676  01036A  0E00               	movlw	0
 11677  01036C  6EE6               	movwf	postinc1,c
 11678  01036E  0E00               	movlw	0
 11679  010370  6EE6               	movwf	postinc1,c
 11680                           
 11681                           ;stkvar	_g @ sp[(-60)+16]
 11682  010372  0ED4               	movlw	-44
 11683  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11684  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  01038C  EC0A  F0BB         	call	___fleq	;wreg free
 11688  010390  A035               	btfss	btemp& (0+255),0,c
 11689  010392  D039               	goto	l9460
 11690  010394  D0BC               	goto	u9520
 11691  010396                     l9456:
 11692                           
 11693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11694  010396  0E00               	movlw	0
 11695  010398  6EE6               	movwf	postinc1,c
 11696  01039A  0E00               	movlw	0
 11697  01039C  6EE6               	movwf	postinc1,c
 11698  01039E  0E20               	movlw	32
 11699  0103A0  6EE6               	movwf	postinc1,c
 11700  0103A2  0E41               	movlw	65
 11701  0103A4  6EE6               	movwf	postinc1,c
 11702                           
 11703                           ;stkvar	_u @ sp[(-60)+12]
 11704  0103A6  0ED0               	movlw	-48
 11705  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11706  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11707  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11708  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11709  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11710                           
 11711                           ;stkvar	_u @ sp[(-56)+12]
 11712  0103C4  0ED4               	movlw	-44
 11713  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11714  0103CC  0ED5               	movlw	-43
 11715  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11716  0103D4  0ED6               	movlw	-42
 11717  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11718  0103DC  0ED7               	movlw	-41
 11719  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11722                           ;stkvar	_e @ sp[(-56)+34]
 11723  0103E4  0EEA               	movlw	-22
 11724  0103E6  50E3               	movf	plusw1,w,c
 11725  0103E8  0F01               	addlw	1
 11726  0103EA  6E35               	movwf	btemp^0,c
 11727  0103EC  0EEA               	movlw	-22
 11728  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 11729  0103F4  6A35               	clrf	btemp^0,c
 11730  0103F6  0EEB               	movlw	-21
 11731  0103F8  50E3               	movf	plusw1,w,c
 11732  0103FA  2035               	addwfc	btemp^0,w,c
 11733  0103FC  6E35               	movwf	btemp^0,c
 11734  0103FE  0EEB               	movlw	-21
 11735  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 11736  010406                     l9460:
 11737                           
 11738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11739  010406  0E00               	movlw	0
 11740  010408  6EE6               	movwf	postinc1,c
 11741  01040A  0E00               	movlw	0
 11742  01040C  6EE6               	movwf	postinc1,c
 11743  01040E  0E20               	movlw	32
 11744  010410  6EE6               	movwf	postinc1,c
 11745  010412  0E41               	movlw	65
 11746  010414  6EE6               	movwf	postinc1,c
 11747                           
 11748                           ;stkvar	_u @ sp[(-60)+12]
 11749  010416  0ED0               	movlw	-48
 11750  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11751  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11752  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11753  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11754  010430  ECF8  F090         	call	___flmul	;wreg free
 11755  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 11756  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11757  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11758  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11759                           
 11760                           ;stkvar	_g @ sp[(-60)+16]
 11761  01044C  0ED4               	movlw	-44
 11762  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11763  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11764  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11765  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11766  010466  EC85  F0B4         	call	___flge	;wreg free
 11767  01046A  A035               	btfss	btemp& (0+255),0,c
 11768  01046C  D032               	goto	l9466
 11769  01046E  D793               	goto	l9456
 11770  010470                     l9462:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11773  010470  0E00               	movlw	0
 11774  010472  6EE6               	movwf	postinc1,c
 11775  010474  0E00               	movlw	0
 11776  010476  6EE6               	movwf	postinc1,c
 11777  010478  0E20               	movlw	32
 11778  01047A  6EE6               	movwf	postinc1,c
 11779  01047C  0E41               	movlw	65
 11780  01047E  6EE6               	movwf	postinc1,c
 11781                           
 11782                           ;stkvar	_u @ sp[(-60)+12]
 11783  010480  0ED0               	movlw	-48
 11784  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11785  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11786  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  01049A  ECAE  F09B         	call	___fldiv	;wreg free
 11789                           
 11790                           ;stkvar	_u @ sp[(-56)+12]
 11791  01049E  0ED4               	movlw	-44
 11792  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 11793  0104A6  0ED5               	movlw	-43
 11794  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11795  0104AE  0ED6               	movlw	-42
 11796  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11797  0104B6  0ED7               	movlw	-41
 11798  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11799                           
 11800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11801                           ;stkvar	_e @ sp[(-56)+34]
 11802  0104BE  50E1               	movf	fsr1l,w,c
 11803  0104C0  0FEA               	addlw	-22
 11804  0104C2  6ED9               	movwf	fsr2l,c
 11805  0104C4  50E2               	movf	fsr1h,w,c
 11806  0104C6  6EDA               	movwf	fsr2h,c
 11807  0104C8  0EFF               	movlw	255
 11808  0104CA  22DA               	addwfc	fsr2h,f,c
 11809  0104CC  06DE               	decf	postinc2,f,c
 11810  0104CE  0E00               	movlw	0
 11811  0104D0  5ADD               	subwfb	postdec2,f,c
 11812  0104D2                     l9466:
 11813                           
 11814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11815                           ;stkvar	_u @ sp[(-56)+12]
 11816  0104D2  0ED4               	movlw	-44
 11817  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11818  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11819  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11820  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11821                           
 11822                           ;stkvar	_g @ sp[(-60)+16]
 11823  0104EC  0ED4               	movlw	-44
 11824  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11825  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11826  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11827  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11828  010506  EC85  F0B4         	call	___flge	;wreg free
 11829  01050A  A035               	btfss	btemp& (0+255),0,c
 11830  01050C  D7B1               	goto	l9462
 11831  01050E                     u9520:
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11834                           ;stkvar	_c @ sp[(-56)+-7]
 11835  01050E  0EC1               	movlw	-63
 11836  010510  50E3               	movf	plusw1,w,c
 11837  010512  6EE6               	movwf	postinc1,c
 11838  010514  0E00               	movlw	0
 11839  010516  6EE6               	movwf	postinc1,c
 11840  010518  ECC7  F0BE         	call	_tolower	;wreg free
 11841                           
 11842                           ;stkvar	_mode @ sp[(-56)+54]
 11843  01051C  0EFE               	movlw	-2
 11844  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11845                           
 11846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11847                           ;stkvar	_mode @ sp[(-56)+54]
 11848                           ;stkvar	_nmode @ sp[(-56)+55]
 11849  010524  0EFE               	movlw	-2
 11850  010526  006F FF8C  F035    	movff	plusw1,btemp
 11851  01052C  0EFF               	movlw	-1
 11852  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11853                           
 11854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11855                           ;stkvar	_mode @ sp[(-56)+54]
 11856  010534  0EFE               	movlw	-2
 11857  010536  006F FF8C  F035    	movff	plusw1,btemp
 11858  01053C  0E67               	movlw	103
 11859  01053E  1835               	xorwf	btemp^0,w,c
 11860  010540  A4D8               	btfss	status,2,c
 11861  010542  D025               	goto	l9484
 11862                           
 11863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11864  010544  5020               	movf	_prec^0,w,c
 11865  010546  1021               	iorwf	(_prec+1)^0,w,c
 11866  010548  A4D8               	btfss	status,2,c
 11867  01054A  D004               	goto	l9478
 11868                           
 11869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11870  01054C  0E00               	movlw	0
 11871  01054E  6E21               	movwf	(_prec+1)^0,c
 11872  010550  0E01               	movlw	1
 11873  010552  6E20               	movwf	_prec^0,c
 11874  010554                     l9478:
 11875                           
 11876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11877  010554  BE21               	btfsc	(_prec+1)^0,7,c
 11878  010556  D005               	goto	u9550
 11879  010558  5021               	movf	(_prec+1)^0,w,c
 11880  01055A  E110               	bnz	l9482
 11881  01055C  0420               	decf	_prec^0,w,c
 11882  01055E  B0D8               	btfsc	status,0,c
 11883  010560  D00D               	goto	l9482
 11884  010562                     u9550:
 11885  010562  0E06               	movlw	6
 11886  010564  6E3F               	movwf	(btemp+10)^0,c
 11887  010566  0E00               	movlw	0
 11888  010568  6E40               	movwf	(btemp+11)^0,c
 11889                           
 11890                           ;stkvar	_p @ sp[(-56)+40]
 11891  01056A  0EF0               	movlw	-16
 11892  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11893  010572  0EF1               	movlw	-15
 11894  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 11895  01057A  D00C               	goto	l9490
 11896  01057C                     l9482:
 11897                           
 11898                           ;stkvar	_p @ sp[(-56)+40]
 11899  01057C  0EF0               	movlw	-16
 11900  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 11901  010584  0EF1               	movlw	-15
 11902  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 11903  01058C  D003               	goto	l9490
 11904  01058E                     l9484:
 11905                           
 11906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11907  01058E  AE21               	btfss	(_prec+1)^0,7,c
 11908  010590  D7F5               	goto	l9482
 11909  010592  D7E7               	goto	u9550
 11910  010594                     l9490:
 11911                           
 11912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11913                           ;stkvar	_mode @ sp[(-56)+54]
 11914  010594  0EFE               	movlw	-2
 11915  010596  006F FF8C  F035    	movff	plusw1,btemp
 11916  01059C  0E67               	movlw	103
 11917  01059E  1835               	xorwf	btemp^0,w,c
 11918  0105A0  A4D8               	btfss	status,2,c
 11919  0105A2  D02F               	goto	l9500
 11920                           
 11921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11922                           ;stkvar	_e @ sp[(-56)+34]
 11923  0105A4  0EEB               	movlw	-21
 11924  0105A6  AEE3               	btfss	plusw1,7,c
 11925  0105A8  D00E               	goto	u9580
 11926  0105AA  0EEA               	movlw	-22
 11927  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 11928  0105B2  0EFC               	movlw	252
 11929  0105B4  5E35               	subwf	btemp^0,f,c
 11930  0105B6  0EEB               	movlw	-21
 11931  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 11932  0105BE  0EFF               	movlw	255
 11933  0105C0  5A35               	subwfb	btemp^0,f,c
 11934  0105C2  A0D8               	btfss	status,0,c
 11935  0105C4  D018               	goto	l9498
 11936  0105C6                     u9580:
 11937                           
 11938                           ;stkvar	_e @ sp[(-56)+34]
 11939                           ;stkvar	_p @ sp[(-56)+40]
 11940  0105C6  0EF0               	movlw	-16
 11941  0105C8  50E3               	movf	plusw1,w,c
 11942  0105CA  0FFF               	addlw	255
 11943  0105CC  6E3F               	movwf	(btemp+10)^0,c
 11944  0105CE  0EF1               	movlw	-15
 11945  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 11946  0105D6  0EFF               	movlw	255
 11947  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 11948  0105DA  0EEA               	movlw	-22
 11949  0105DC  50E3               	movf	plusw1,w,c
 11950  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 11951  0105E0  5040               	movf	(btemp+11)^0,w,c
 11952  0105E2  0A80               	xorlw	128
 11953  0105E4  6E35               	movwf	btemp^0,c
 11954  0105E6  0EEB               	movlw	-21
 11955  0105E8  50E3               	movf	plusw1,w,c
 11956  0105EA  0A80               	xorlw	128
 11957  0105EC  5835               	subwfb	btemp^0,w,c
 11958  0105EE  A0D8               	btfss	status,0,c
 11959  0105F0  D002               	goto	l9498
 11960                           
 11961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11962  0105F2  0E66               	movlw	102
 11963  0105F4  D001               	goto	L12
 11964  0105F6                     l9498:
 11965                           
 11966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11967  0105F6  0E65               	movlw	101
 11968  0105F8                     L12:
 11969  0105F8  6E40               	movwf	(btemp+11)^0,c
 11970                           
 11971                           ;stkvar	_nmode @ sp[(-56)+55]
 11972  0105FA  0EFF               	movlw	-1
 11973  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11974  010602                     l9500:
 11975                           
 11976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11977                           ;stkvar	_p @ sp[(-56)+40]
 11978                           ;stkvar	_m @ sp[(-56)+48]
 11979  010602  0EF0               	movlw	-16
 11980  010604  006F FF8C  F035    	movff	plusw1,btemp
 11981  01060A  0EF8               	movlw	-8
 11982  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11983  010612  0EF1               	movlw	-15
 11984  010614  006F FF8C  F035    	movff	plusw1,btemp
 11985  01061A  0EF9               	movlw	-7
 11986  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11989                           ;stkvar	_mode @ sp[(-56)+54]
 11990  010622  0EFE               	movlw	-2
 11991  010624  006F FF8C  F035    	movff	plusw1,btemp
 11992  01062A  0E67               	movlw	103
 11993  01062C  1835               	xorwf	btemp^0,w,c
 11994  01062E  A4D8               	btfss	status,2,c
 11995  010630  D00B               	goto	u9620
 11996                           
 11997                           ;stkvar	_nmode @ sp[(-56)+55]
 11998  010632  0EFF               	movlw	-1
 11999  010634  006F FF8C  F035    	movff	plusw1,btemp
 12000  01063A  0E66               	movlw	102
 12001  01063C  1835               	xorwf	btemp^0,w,c
 12002  01063E  A4D8               	btfss	status,2,c
 12003  010640  D014               	goto	l1839
 12004                           
 12005                           ;stkvar	_e @ sp[(-56)+34]
 12006  010642  0EEB               	movlw	-21
 12007  010644  AEE3               	btfss	plusw1,7,c
 12008  010646  D011               	goto	l1839
 12009  010648                     u9620:
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12012                           ;stkvar	_m @ sp[(-56)+48]
 12013  010648  0EF8               	movlw	-8
 12014  01064A  50E3               	movf	plusw1,w,c
 12015  01064C  0F01               	addlw	1
 12016  01064E  6E35               	movwf	btemp^0,c
 12017  010650  0EF8               	movlw	-8
 12018  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 12019  010658  6A35               	clrf	btemp^0,c
 12020  01065A  0EF9               	movlw	-7
 12021  01065C  50E3               	movf	plusw1,w,c
 12022  01065E  2035               	addwfc	btemp^0,w,c
 12023  010660  6E35               	movwf	btemp^0,c
 12024  010662  0EF9               	movlw	-7
 12025  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 12026  01066A                     l1839:
 12027                           
 12028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12029                           ;stkvar	_nmode @ sp[(-56)+55]
 12030  01066A  0EFF               	movlw	-1
 12031  01066C  006F FF8C  F035    	movff	plusw1,btemp
 12032  010672  0E66               	movlw	102
 12033  010674  1835               	xorwf	btemp^0,w,c
 12034  010676  A4D8               	btfss	status,2,c
 12035  010678  D03B               	goto	l9520
 12036                           
 12037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12038                           ;stkvar	_e @ sp[(-56)+34]
 12039  01067A  0EEB               	movlw	-21
 12040  01067C  AEE3               	btfss	plusw1,7,c
 12041  01067E  D01C               	goto	l9516
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12044  010680  0E00               	movlw	0
 12045  010682  6E3D               	movwf	(btemp+8)^0,c
 12046  010684  0E00               	movlw	0
 12047  010686  6E3E               	movwf	(btemp+9)^0,c
 12048  010688  0E80               	movlw	128
 12049  01068A  6E3F               	movwf	(btemp+10)^0,c
 12050  01068C  0E3F               	movlw	63
 12051  01068E  6E40               	movwf	(btemp+11)^0,c
 12052                           
 12053                           ;stkvar	_u @ sp[(-56)+12]
 12054  010690  0ED4               	movlw	-44
 12055  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12056  010698  0ED5               	movlw	-43
 12057  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12058  0106A0  0ED6               	movlw	-42
 12059  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12060  0106A8  0ED7               	movlw	-41
 12061  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12064                           ;stkvar	_e @ sp[(-56)+34]
 12065  0106B0  0EEA               	movlw	-22
 12066  0106B2  6AE3               	clrf	plusw1,c
 12067  0106B4  0EEB               	movlw	-21
 12068  0106B6  6AE3               	clrf	plusw1,c
 12069  0106B8                     l9516:
 12070                           
 12071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12072                           ;stkvar	_mode @ sp[(-56)+54]
 12073  0106B8  0EFE               	movlw	-2
 12074  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 12075  0106C0  0E67               	movlw	103
 12076  0106C2  1835               	xorwf	btemp^0,w,c
 12077  0106C4  B4D8               	btfsc	status,2,c
 12078  0106C6  D014               	goto	l9520
 12079                           
 12080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12081                           ;stkvar	_e @ sp[(-56)+34]
 12082                           ;stkvar	_m @ sp[(-56)+48]
 12083  0106C8  0EF8               	movlw	-8
 12084  0106CA  50E3               	movf	plusw1,w,c
 12085  0106CC  6E35               	movwf	btemp^0,c
 12086  0106CE  0EEA               	movlw	-22
 12087  0106D0  50E3               	movf	plusw1,w,c
 12088  0106D2  2635               	addwf	btemp^0,f,c
 12089  0106D4  0EF8               	movlw	-8
 12090  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12091  0106DC  0EF9               	movlw	-7
 12092  0106DE  50E3               	movf	plusw1,w,c
 12093  0106E0  6E35               	movwf	btemp^0,c
 12094  0106E2  0EEB               	movlw	-21
 12095  0106E4  50E3               	movf	plusw1,w,c
 12096  0106E6  2235               	addwfc	btemp^0,f,c
 12097  0106E8  0EF9               	movlw	-7
 12098  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12099  0106F0                     l9520:
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12102                           ;stkvar	_i @ sp[(-56)+36]
 12103  0106F0  0EEC               	movlw	-20
 12104  0106F2  6AE3               	clrf	plusw1,c
 12105  0106F4  0EED               	movlw	-19
 12106  0106F6  6AE3               	clrf	plusw1,c
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12109                           ;stkvar	_g @ sp[(-56)+16]
 12110  0106F8  0ED8               	movlw	-40
 12111  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12112  010700  0ED9               	movlw	-39
 12113  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 12114  010708  0EDA               	movlw	-38
 12115  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12116  010710  0EDB               	movlw	-37
 12117  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 12118                           
 12119                           ;stkvar	_h @ sp[(-56)+24]
 12120  010718  0EE0               	movlw	-32
 12121  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12122  010720  0EE1               	movlw	-31
 12123  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12124  010728  0EE2               	movlw	-30
 12125  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12126  010730  0EE3               	movlw	-29
 12127  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 12128                           
 12129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12130                           ;stkvar	_u @ sp[(-56)+12]
 12131  010738  0ED4               	movlw	-44
 12132  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12133  010740  0ED5               	movlw	-43
 12134  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 12135  010748  0ED6               	movlw	-42
 12136  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12137  010750  0ED7               	movlw	-41
 12138  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 12139                           
 12140                           ;stkvar	_ou @ sp[(-56)+28]
 12141  010758  0EE4               	movlw	-28
 12142  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12143  010760  0EE5               	movlw	-27
 12144  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12145  010768  0EE6               	movlw	-26
 12146  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12147  010770  0EE7               	movlw	-25
 12148  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12151  010778  D0D6               	goto	l9536
 12152  01077A                     l9526:
 12153                           
 12154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12155                           ;stkvar	_u @ sp[(-56)+12]
 12156  01077A  0ED4               	movlw	-44
 12157  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12158  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12159  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12160  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12161                           
 12162                           ;stkvar	_h @ sp[(-60)+24]
 12163  010794  0EDC               	movlw	-36
 12164  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12165  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12166  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12167  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12168  0107AE  ECAE  F09B         	call	___fldiv	;wreg free
 12169  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 12170  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12171  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12172  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12173  0107CA  EC81  F0A4         	call	_floorf	;wreg free
 12174                           
 12175                           ;stkvar	_l @ sp[(-56)+20]
 12176  0107CE  0EDC               	movlw	-36
 12177  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 12178  0107D6  0EDD               	movlw	-35
 12179  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12180  0107DE  0EDE               	movlw	-34
 12181  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12182  0107E6  0EDF               	movlw	-33
 12183  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12184                           
 12185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12186                           ;stkvar	_l @ sp[(-56)+20]
 12187  0107EE  0EDC               	movlw	-36
 12188  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12189  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12190  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12191  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12192  010808  ECCC  F0B3         	call	___fltol	;wreg free
 12193  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 12194  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12195                           
 12196                           ;stkvar	_d @ sp[(-56)+44]
 12197  010818  0EF4               	movlw	-12
 12198  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12199  010820  0EF5               	movlw	-11
 12200  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 12201                           
 12202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12203                           ;stkvar	_u @ sp[(-56)+12]
 12204  010828  0ED4               	movlw	-44
 12205  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12206  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12208  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12209                           
 12210                           ;stkvar	_l @ sp[(-60)+20]
 12211  010842  0ED8               	movlw	-40
 12212  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12213  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12214  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12215  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12216  01085C  ECF8  F090         	call	___flmul	;wreg free
 12217  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 12218  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12219  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12220  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12221                           
 12222                           ;stkvar	_h @ sp[(-60)+24]
 12223  010878  0EDC               	movlw	-36
 12224  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12225  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12226  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12227  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12228  010892  EC0C  F0C2         	call	___flsub	;wreg free
 12229                           
 12230                           ;stkvar	_h @ sp[(-56)+24]
 12231  010896  0EE0               	movlw	-32
 12232  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 12233  01089E  0EE1               	movlw	-31
 12234  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12235  0108A6  0EE2               	movlw	-30
 12236  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12237  0108AE  0EE3               	movlw	-29
 12238  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12239                           
 12240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12241  0108B6  0E00               	movlw	0
 12242  0108B8  6EE6               	movwf	postinc1,c
 12243  0108BA  0E00               	movlw	0
 12244  0108BC  6EE6               	movwf	postinc1,c
 12245  0108BE  0E20               	movlw	32
 12246  0108C0  6EE6               	movwf	postinc1,c
 12247  0108C2  0E41               	movlw	65
 12248  0108C4  6EE6               	movwf	postinc1,c
 12249                           
 12250                           ;stkvar	_u @ sp[(-60)+12]
 12251  0108C6  0ED0               	movlw	-48
 12252  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12253  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12254  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12255  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12256  0108E0  ECAE  F09B         	call	___fldiv	;wreg free
 12257                           
 12258                           ;stkvar	_u @ sp[(-56)+12]
 12259  0108E4  0ED4               	movlw	-44
 12260  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12261  0108EC  0ED5               	movlw	-43
 12262  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12263  0108F4  0ED6               	movlw	-42
 12264  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12265  0108FC  0ED7               	movlw	-41
 12266  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12267                           
 12268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12269                           ;stkvar	_i @ sp[(-56)+36]
 12270  010904  0EEC               	movlw	-20
 12271  010906  50E3               	movf	plusw1,w,c
 12272  010908  0F01               	addlw	1
 12273  01090A  6E35               	movwf	btemp^0,c
 12274  01090C  0EEC               	movlw	-20
 12275  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12276  010914  6A35               	clrf	btemp^0,c
 12277  010916  0EED               	movlw	-19
 12278  010918  50E3               	movf	plusw1,w,c
 12279  01091A  2035               	addwfc	btemp^0,w,c
 12280  01091C  6E35               	movwf	btemp^0,c
 12281  01091E  0EED               	movlw	-19
 12282  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 12283  010926                     l9536:
 12284                           
 12285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12286                           ;stkvar	_m @ sp[(-56)+48]
 12287                           ;stkvar	_i @ sp[(-56)+36]
 12288  010926  50E1               	movf	fsr1l,w,c
 12289  010928  0FEC               	addlw	-20
 12290  01092A  6ED9               	movwf	fsr2l,c
 12291  01092C  50E2               	movf	fsr1h,w,c
 12292  01092E  6EDA               	movwf	fsr2h,c
 12293  010930  0EFF               	movlw	255
 12294  010932  22DA               	addwfc	fsr2h,f,c
 12295  010934  0EF8               	movlw	-8
 12296  010936  50E3               	movf	plusw1,w,c
 12297  010938  5CDE               	subwf	postinc2,w,c
 12298  01093A  50DE               	movf	postinc2,w,c
 12299  01093C  0A80               	xorlw	128
 12300  01093E  6E35               	movwf	btemp^0,c
 12301  010940  0EF9               	movlw	-7
 12302  010942  50E3               	movf	plusw1,w,c
 12303  010944  0A80               	xorlw	128
 12304  010946  5835               	subwfb	btemp^0,w,c
 12305  010948  A0D8               	btfss	status,0,c
 12306  01094A  D717               	goto	l9526
 12307                           
 12308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12309  01094C  0E00               	movlw	0
 12310  01094E  6EE6               	movwf	postinc1,c
 12311  010950  0E00               	movlw	0
 12312  010952  6EE6               	movwf	postinc1,c
 12313  010954  0EA0               	movlw	160
 12314  010956  6EE6               	movwf	postinc1,c
 12315  010958  0E40               	movlw	64
 12316  01095A  6EE6               	movwf	postinc1,c
 12317                           
 12318                           ;stkvar	_u @ sp[(-60)+12]
 12319  01095C  0ED0               	movlw	-48
 12320  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  010976  ECF8  F090         	call	___flmul	;wreg free
 12325                           
 12326                           ;stkvar	_l @ sp[(-56)+20]
 12327  01097A  0EDC               	movlw	-36
 12328  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12329  010982  0EDD               	movlw	-35
 12330  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12331  01098A  0EDE               	movlw	-34
 12332  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12333  010992  0EDF               	movlw	-33
 12334  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12337                           ;stkvar	_l @ sp[(-56)+20]
 12338  01099A  0EDC               	movlw	-36
 12339  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12341  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12342  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12343                           
 12344                           ;stkvar	_h @ sp[(-60)+24]
 12345  0109B4  0EDC               	movlw	-36
 12346  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  0109CE  EC85  F0B4         	call	___flge	;wreg free
 12351  0109D2  A035               	btfss	btemp& (0+255),0,c
 12352  0109D4  D021               	goto	u9690
 12353                           
 12354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12355                           ;stkvar	_l @ sp[(-56)+20]
 12356                           
 12357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12358                           
 12359                           ;stkvar	_l @ sp[(-56)+20]
 12360                           
 12361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12362  0109D6  0EDC               	movlw	-36
 12363  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12366  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12367                           
 12368                           ;stkvar	_h @ sp[(-60)+24]
 12369  0109F0  0EDC               	movlw	-36
 12370  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12372  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12373  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12374  010A0A  EC0A  F0BB         	call	___fleq	;wreg free
 12375  010A0E  A035               	btfss	btemp& (0+255),0,c
 12376  010A10  D01B               	goto	l9550
 12377                           
 12378                           ;stkvar	_d @ sp[(-56)+44]
 12379  010A12  0EF4               	movlw	-12
 12380  010A14  B0E3               	btfsc	plusw1,0,c
 12381  010A16  D018               	goto	l9550
 12382  010A18                     u9690:
 12383                           
 12384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12385  010A18  0E00               	movlw	0
 12386  010A1A  6E3D               	movwf	(btemp+8)^0,c
 12387  010A1C  0E00               	movlw	0
 12388  010A1E  6E3E               	movwf	(btemp+9)^0,c
 12389  010A20  0E00               	movlw	0
 12390  010A22  6E3F               	movwf	(btemp+10)^0,c
 12391  010A24  0E00               	movlw	0
 12392  010A26  6E40               	movwf	(btemp+11)^0,c
 12393                           
 12394                           ;stkvar	_l @ sp[(-56)+20]
 12395  010A28  0EDC               	movlw	-36
 12396  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12397  010A30  0EDD               	movlw	-35
 12398  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12399  010A38  0EDE               	movlw	-34
 12400  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12401  010A40  0EDF               	movlw	-33
 12402  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 12403  010A48                     l9550:
 12404                           
 12405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12406                           ;stkvar	_l @ sp[(-56)+20]
 12407  010A48  0EDC               	movlw	-36
 12408  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12409  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12410  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12411  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12412                           
 12413                           ;stkvar	_g @ sp[(-60)+16]
 12414  010A62  0ED4               	movlw	-44
 12415  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12416  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12417  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12418  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12419  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12420                           
 12421                           ;stkvar	_h @ sp[(-56)+24]
 12422  010A80  0EE0               	movlw	-32
 12423  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 12424  010A88  0EE1               	movlw	-31
 12425  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12426  010A90  0EE2               	movlw	-30
 12427  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12428  010A98  0EE3               	movlw	-29
 12429  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12430                           
 12431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12432                           ;stkvar	_ou @ sp[(-56)+28]
 12433  010AA0  0EE4               	movlw	-28
 12434  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12435  010AA8  0EE5               	movlw	-27
 12436  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12437  010AB0  0EE6               	movlw	-26
 12438  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12439  010AB8  0EE7               	movlw	-25
 12440  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 12441                           
 12442                           ;stkvar	_u @ sp[(-56)+12]
 12443  010AC0  0ED4               	movlw	-44
 12444  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12445  010AC8  0ED5               	movlw	-43
 12446  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12447  010AD0  0ED6               	movlw	-42
 12448  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12449  010AD8  0ED7               	movlw	-41
 12450  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12451                           
 12452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12453                           ;stkvar	_nmode @ sp[(-56)+55]
 12454  010AE0  0EFF               	movlw	-1
 12455  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 12456  010AE8  0E65               	movlw	101
 12457  010AEA  1835               	xorwf	btemp^0,w,c
 12458  010AEC  B4D8               	btfsc	status,2,c
 12459  010AEE  D011               	goto	l9558
 12460                           
 12461                           ;stkvar	_e @ sp[(-56)+34]
 12462                           ;stkvar	_ne @ sp[(-56)+46]
 12463  010AF0  0EEA               	movlw	-22
 12464  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 12465  010AF8  0EF6               	movlw	-10
 12466  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12467  010B00  0EEB               	movlw	-21
 12468  010B02  006F FF8C  F035    	movff	plusw1,btemp
 12469  010B08  0EF7               	movlw	-9
 12470  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12471  010B10  D004               	goto	l1854
 12472  010B12                     l9558:
 12473                           
 12474                           ;stkvar	_ne @ sp[(-56)+46]
 12475  010B12  0EF6               	movlw	-10
 12476  010B14  6AE3               	clrf	plusw1,c
 12477  010B16  0EF7               	movlw	-9
 12478  010B18  6AE3               	clrf	plusw1,c
 12479  010B1A                     l1854:
 12480                           
 12481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12482                           ;stkvar	_pp @ sp[(-56)+50]
 12483  010B1A  0EFA               	movlw	-6
 12484  010B1C  6AE3               	clrf	plusw1,c
 12485  010B1E  0EFB               	movlw	-5
 12486  010B20  6AE3               	clrf	plusw1,c
 12487                           
 12488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12489                           ;stkvar	_t @ sp[(-56)+52]
 12490  010B22  0EFC               	movlw	-4
 12491  010B24  6AE3               	clrf	plusw1,c
 12492  010B26  0EFD               	movlw	-3
 12493  010B28  6AE3               	clrf	plusw1,c
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12496                           ;stkvar	_i @ sp[(-56)+36]
 12497  010B2A  0EEC               	movlw	-20
 12498  010B2C  6AE3               	clrf	plusw1,c
 12499  010B2E  0EED               	movlw	-19
 12500  010B30  6AE3               	clrf	plusw1,c
 12501                           
 12502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12503  010B32  D1B7               	goto	l9610
 12504  010B34                     l9560:
 12505                           
 12506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12507                           ;stkvar	_u @ sp[(-56)+12]
 12508  010B34  0ED4               	movlw	-44
 12509  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12510  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12511  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12512  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12513                           
 12514                           ;stkvar	_h @ sp[(-60)+24]
 12515  010B4E  0EDC               	movlw	-36
 12516  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12517  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12518  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  010B68  ECAE  F09B         	call	___fldiv	;wreg free
 12521  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 12522  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12523  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12524  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12525  010B84  EC81  F0A4         	call	_floorf	;wreg free
 12526                           
 12527                           ;stkvar	_l @ sp[(-56)+20]
 12528  010B88  0EDC               	movlw	-36
 12529  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12530  010B90  0EDD               	movlw	-35
 12531  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12532  010B98  0EDE               	movlw	-34
 12533  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12534  010BA0  0EDF               	movlw	-33
 12535  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12536                           
 12537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12538                           ;stkvar	_l @ sp[(-56)+20]
 12539  010BA8  0EDC               	movlw	-36
 12540  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12541  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12542  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12543  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12544  010BC2  ECCC  F0B3         	call	___fltol	;wreg free
 12545  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 12546  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12547                           
 12548                           ;stkvar	_d @ sp[(-56)+44]
 12549  010BD2  0EF4               	movlw	-12
 12550  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12551  010BDA  0EF5               	movlw	-11
 12552  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12553                           
 12554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12555  010BE2  B822               	btfsc	_flags^0,4,c
 12556  010BE4  D026               	goto	l9574
 12557                           
 12558                           ;stkvar	_d @ sp[(-56)+44]
 12559  010BE6  0EF4               	movlw	-12
 12560  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 12561  010BEE  0EF5               	movlw	-11
 12562  010BF0  50E3               	movf	plusw1,w,c
 12563  010BF2  1035               	iorwf	btemp^0,w,c
 12564  010BF4  A4D8               	btfss	status,2,c
 12565  010BF6  D01D               	goto	l9574
 12566                           
 12567                           ;stkvar	_mode @ sp[(-56)+54]
 12568  010BF8  0EFE               	movlw	-2
 12569  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 12570  010C00  0E67               	movlw	103
 12571  010C02  1835               	xorwf	btemp^0,w,c
 12572  010C04  A4D8               	btfss	status,2,c
 12573  010C06  D015               	goto	l9574
 12574                           
 12575                           ;stkvar	_ne @ sp[(-56)+46]
 12576  010C08  0EF7               	movlw	-9
 12577  010C0A  AEE3               	btfss	plusw1,7,c
 12578  010C0C  D012               	goto	l9574
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12581                           ;stkvar	_t @ sp[(-56)+52]
 12582  010C0E  0EFC               	movlw	-4
 12583  010C10  50E3               	movf	plusw1,w,c
 12584  010C12  0F01               	addlw	1
 12585  010C14  6E35               	movwf	btemp^0,c
 12586  010C16  0EFC               	movlw	-4
 12587  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 12588  010C1E  6A35               	clrf	btemp^0,c
 12589  010C20  0EFD               	movlw	-3
 12590  010C22  50E3               	movf	plusw1,w,c
 12591  010C24  2035               	addwfc	btemp^0,w,c
 12592  010C26  6E35               	movwf	btemp^0,c
 12593  010C28  0EFD               	movlw	-3
 12594  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12597  010C30  D0AF               	goto	l9602
 12598  010C32                     l9574:
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12601                           ;stkvar	_pp @ sp[(-56)+50]
 12602  010C32  0EFA               	movlw	-6
 12603  010C34  006F FF8C  F035    	movff	plusw1,btemp
 12604  010C3A  0EFB               	movlw	-5
 12605  010C3C  50E3               	movf	plusw1,w,c
 12606  010C3E  1035               	iorwf	btemp^0,w,c
 12607  010C40  A4D8               	btfss	status,2,c
 12608  010C42  D070               	goto	l9594
 12609                           
 12610                           ;stkvar	_ne @ sp[(-56)+46]
 12611  010C44  0EF7               	movlw	-9
 12612  010C46  AEE3               	btfss	plusw1,7,c
 12613  010C48  D06D               	goto	l9594
 12614                           
 12615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12616                           ;stkvar	_n @ sp[(-56)+32]
 12617  010C4A  0EE8               	movlw	-24
 12618  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12619  010C52  0EE9               	movlw	-23
 12620  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 12621  010C5A  0EAC               	movlw	low _dbuf
 12622  010C5C  243F               	addwf	(btemp+10)^0,w,c
 12623  010C5E  6ED9               	movwf	fsr2l,c
 12624  010C60  0E02               	movlw	high _dbuf
 12625  010C62  2040               	addwfc	(btemp+11)^0,w,c
 12626  010C64  6EDA               	movwf	fsr2h,c
 12627  010C66  0E2E               	movlw	46
 12628  010C68  6EDF               	movwf	indf2,c
 12629                           
 12630                           ;stkvar	_n @ sp[(-56)+32]
 12631  010C6A  0EE8               	movlw	-24
 12632  010C6C  50E3               	movf	plusw1,w,c
 12633  010C6E  0F01               	addlw	1
 12634  010C70  6E35               	movwf	btemp^0,c
 12635  010C72  0EE8               	movlw	-24
 12636  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 12637  010C7A  6A35               	clrf	btemp^0,c
 12638  010C7C  0EE9               	movlw	-23
 12639  010C7E  50E3               	movf	plusw1,w,c
 12640  010C80  2035               	addwfc	btemp^0,w,c
 12641  010C82  6E35               	movwf	btemp^0,c
 12642  010C84  0EE9               	movlw	-23
 12643  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 12644                           
 12645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12646                           ;stkvar	_w @ sp[(-56)+38]
 12647  010C8C  50E1               	movf	fsr1l,w,c
 12648  010C8E  0FEE               	addlw	-18
 12649  010C90  6ED9               	movwf	fsr2l,c
 12650  010C92  50E2               	movf	fsr1h,w,c
 12651  010C94  6EDA               	movwf	fsr2h,c
 12652  010C96  0EFF               	movlw	255
 12653  010C98  22DA               	addwfc	fsr2h,f,c
 12654  010C9A  06DE               	decf	postinc2,f,c
 12655  010C9C  0E00               	movlw	0
 12656  010C9E  5ADD               	subwfb	postdec2,f,c
 12657                           
 12658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12659  010CA0  0E01               	movlw	1
 12660  010CA2  6E3F               	movwf	(btemp+10)^0,c
 12661  010CA4  0E00               	movlw	0
 12662  010CA6  6E40               	movwf	(btemp+11)^0,c
 12663                           
 12664                           ;stkvar	_pp @ sp[(-56)+50]
 12665  010CA8  0EFA               	movlw	-6
 12666  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12667  010CB0  0EFB               	movlw	-5
 12668  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 12669  010CB8  D035               	goto	l9594
 12670  010CBA                     l9586:
 12671                           
 12672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12673                           ;stkvar	_n @ sp[(-56)+32]
 12674  010CBA  0EE8               	movlw	-24
 12675  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12676  010CC2  0EE9               	movlw	-23
 12677  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12678  010CCA  0EAC               	movlw	low _dbuf
 12679  010CCC  243F               	addwf	(btemp+10)^0,w,c
 12680  010CCE  6ED9               	movwf	fsr2l,c
 12681  010CD0  0E02               	movlw	high _dbuf
 12682  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 12683  010CD4  6EDA               	movwf	fsr2h,c
 12684  010CD6  0E30               	movlw	48
 12685  010CD8  6EDF               	movwf	indf2,c
 12686                           
 12687                           ;stkvar	_n @ sp[(-56)+32]
 12688  010CDA  0EE8               	movlw	-24
 12689  010CDC  50E3               	movf	plusw1,w,c
 12690  010CDE  0F01               	addlw	1
 12691  010CE0  6E35               	movwf	btemp^0,c
 12692  010CE2  0EE8               	movlw	-24
 12693  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12694  010CEA  6A35               	clrf	btemp^0,c
 12695  010CEC  0EE9               	movlw	-23
 12696  010CEE  50E3               	movf	plusw1,w,c
 12697  010CF0  2035               	addwfc	btemp^0,w,c
 12698  010CF2  6E35               	movwf	btemp^0,c
 12699  010CF4  0EE9               	movlw	-23
 12700  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12703                           ;stkvar	_w @ sp[(-56)+38]
 12704  010CFC  50E1               	movf	fsr1l,w,c
 12705  010CFE  0FEE               	addlw	-18
 12706  010D00  6ED9               	movwf	fsr2l,c
 12707  010D02  50E2               	movf	fsr1h,w,c
 12708  010D04  6EDA               	movwf	fsr2h,c
 12709  010D06  0EFF               	movlw	255
 12710  010D08  22DA               	addwfc	fsr2h,f,c
 12711  010D0A  06DE               	decf	postinc2,f,c
 12712  010D0C  0E00               	movlw	0
 12713  010D0E  5ADD               	subwfb	postdec2,f,c
 12714                           
 12715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12716                           ;stkvar	_t @ sp[(-56)+52]
 12717  010D10  50E1               	movf	fsr1l,w,c
 12718  010D12  0FFC               	addlw	-4
 12719  010D14  6ED9               	movwf	fsr2l,c
 12720  010D16  50E2               	movf	fsr1h,w,c
 12721  010D18  6EDA               	movwf	fsr2h,c
 12722  010D1A  0EFF               	movlw	255
 12723  010D1C  22DA               	addwfc	fsr2h,f,c
 12724  010D1E  06DE               	decf	postinc2,f,c
 12725  010D20  0E00               	movlw	0
 12726  010D22  5ADD               	subwfb	postdec2,f,c
 12727  010D24                     l9594:
 12728                           
 12729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12730                           ;stkvar	_t @ sp[(-56)+52]
 12731  010D24  0EFC               	movlw	-4
 12732  010D26  006F FF8C  F035    	movff	plusw1,btemp
 12733  010D2C  0EFD               	movlw	-3
 12734  010D2E  50E3               	movf	plusw1,w,c
 12735  010D30  1035               	iorwf	btemp^0,w,c
 12736  010D32  A4D8               	btfss	status,2,c
 12737  010D34  D7C2               	goto	l9586
 12738                           
 12739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12740                           ;stkvar	_n @ sp[(-56)+32]
 12741  010D36  0EE8               	movlw	-24
 12742  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12743  010D3E  0EE9               	movlw	-23
 12744  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 12745  010D46  0EAC               	movlw	low _dbuf
 12746  010D48  243F               	addwf	(btemp+10)^0,w,c
 12747  010D4A  6ED9               	movwf	fsr2l,c
 12748  010D4C  0E02               	movlw	high _dbuf
 12749  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 12750  010D50  6EDA               	movwf	fsr2h,c
 12751                           
 12752                           ;stkvar	_d @ sp[(-56)+44]
 12753  010D52  0EF4               	movlw	-12
 12754  010D54  50E3               	movf	plusw1,w,c
 12755  010D56  0F30               	addlw	48
 12756  010D58  6EDF               	movwf	indf2,c
 12757                           
 12758                           ;stkvar	_n @ sp[(-56)+32]
 12759  010D5A  0EE8               	movlw	-24
 12760  010D5C  50E3               	movf	plusw1,w,c
 12761  010D5E  0F01               	addlw	1
 12762  010D60  6E35               	movwf	btemp^0,c
 12763  010D62  0EE8               	movlw	-24
 12764  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 12765  010D6A  6A35               	clrf	btemp^0,c
 12766  010D6C  0EE9               	movlw	-23
 12767  010D6E  50E3               	movf	plusw1,w,c
 12768  010D70  2035               	addwfc	btemp^0,w,c
 12769  010D72  6E35               	movwf	btemp^0,c
 12770  010D74  0EE9               	movlw	-23
 12771  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 12772                           
 12773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12774                           ;stkvar	_w @ sp[(-56)+38]
 12775  010D7C  50E1               	movf	fsr1l,w,c
 12776  010D7E  0FEE               	addlw	-18
 12777  010D80  6ED9               	movwf	fsr2l,c
 12778  010D82  50E2               	movf	fsr1h,w,c
 12779  010D84  6EDA               	movwf	fsr2h,c
 12780  010D86  0EFF               	movlw	255
 12781  010D88  22DA               	addwfc	fsr2h,f,c
 12782  010D8A  06DE               	decf	postinc2,f,c
 12783  010D8C  0E00               	movlw	0
 12784  010D8E  5ADD               	subwfb	postdec2,f,c
 12785  010D90                     l9602:
 12786                           
 12787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12788                           ;stkvar	_u @ sp[(-56)+12]
 12789  010D90  0ED4               	movlw	-44
 12790  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12791  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12792  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12793  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12794                           
 12795                           ;stkvar	_l @ sp[(-60)+20]
 12796  010DAA  0ED8               	movlw	-40
 12797  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12798  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12799  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12800  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12801  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12802  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 12803  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12804  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12805  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12806                           
 12807                           ;stkvar	_h @ sp[(-60)+24]
 12808  010DE0  0EDC               	movlw	-36
 12809  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12810  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12811  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12812  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12813  010DFA  EC0C  F0C2         	call	___flsub	;wreg free
 12814                           
 12815                           ;stkvar	_h @ sp[(-56)+24]
 12816  010DFE  0EE0               	movlw	-32
 12817  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 12818  010E06  0EE1               	movlw	-31
 12819  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12820  010E0E  0EE2               	movlw	-30
 12821  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12822  010E16  0EE3               	movlw	-29
 12823  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12824                           
 12825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12826  010E1E  0E00               	movlw	0
 12827  010E20  6EE6               	movwf	postinc1,c
 12828  010E22  0E00               	movlw	0
 12829  010E24  6EE6               	movwf	postinc1,c
 12830  010E26  0E20               	movlw	32
 12831  010E28  6EE6               	movwf	postinc1,c
 12832  010E2A  0E41               	movlw	65
 12833  010E2C  6EE6               	movwf	postinc1,c
 12834                           
 12835                           ;stkvar	_u @ sp[(-60)+12]
 12836  010E2E  0ED0               	movlw	-48
 12837  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12838  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12839  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12840  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12841  010E48  ECAE  F09B         	call	___fldiv	;wreg free
 12842                           
 12843                           ;stkvar	_u @ sp[(-56)+12]
 12844  010E4C  0ED4               	movlw	-44
 12845  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12846  010E54  0ED5               	movlw	-43
 12847  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12848  010E5C  0ED6               	movlw	-42
 12849  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12850  010E64  0ED7               	movlw	-41
 12851  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12852                           
 12853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12854                           ;stkvar	_ne @ sp[(-56)+46]
 12855  010E6C  50E1               	movf	fsr1l,w,c
 12856  010E6E  0FF6               	addlw	-10
 12857  010E70  6ED9               	movwf	fsr2l,c
 12858  010E72  50E2               	movf	fsr1h,w,c
 12859  010E74  6EDA               	movwf	fsr2h,c
 12860  010E76  0EFF               	movlw	255
 12861  010E78  22DA               	addwfc	fsr2h,f,c
 12862  010E7A  06DE               	decf	postinc2,f,c
 12863  010E7C  0E00               	movlw	0
 12864  010E7E  5ADD               	subwfb	postdec2,f,c
 12865                           
 12866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12867                           ;stkvar	_i @ sp[(-56)+36]
 12868  010E80  0EEC               	movlw	-20
 12869  010E82  50E3               	movf	plusw1,w,c
 12870  010E84  0F01               	addlw	1
 12871  010E86  6E35               	movwf	btemp^0,c
 12872  010E88  0EEC               	movlw	-20
 12873  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12874  010E90  6A35               	clrf	btemp^0,c
 12875  010E92  0EED               	movlw	-19
 12876  010E94  50E3               	movf	plusw1,w,c
 12877  010E96  2035               	addwfc	btemp^0,w,c
 12878  010E98  6E35               	movwf	btemp^0,c
 12879  010E9A  0EED               	movlw	-19
 12880  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12881  010EA2                     l9610:
 12882                           
 12883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12884                           ;stkvar	_m @ sp[(-56)+48]
 12885                           ;stkvar	_i @ sp[(-56)+36]
 12886  010EA2  50E1               	movf	fsr1l,w,c
 12887  010EA4  0FEC               	addlw	-20
 12888  010EA6  6ED9               	movwf	fsr2l,c
 12889  010EA8  50E2               	movf	fsr1h,w,c
 12890  010EAA  6EDA               	movwf	fsr2h,c
 12891  010EAC  0EFF               	movlw	255
 12892  010EAE  22DA               	addwfc	fsr2h,f,c
 12893  010EB0  0EF8               	movlw	-8
 12894  010EB2  50E3               	movf	plusw1,w,c
 12895  010EB4  5CDE               	subwf	postinc2,w,c
 12896  010EB6  50DE               	movf	postinc2,w,c
 12897  010EB8  0A80               	xorlw	128
 12898  010EBA  6E35               	movwf	btemp^0,c
 12899  010EBC  0EF9               	movlw	-7
 12900  010EBE  50E3               	movf	plusw1,w,c
 12901  010EC0  0A80               	xorlw	128
 12902  010EC2  5835               	subwfb	btemp^0,w,c
 12903  010EC4  B0D8               	btfsc	status,0,c
 12904  010EC6  D00E               	goto	u9790
 12905                           
 12906                           ;stkvar	_n @ sp[(-56)+32]
 12907  010EC8  0EE9               	movlw	-23
 12908  010ECA  BEE3               	btfsc	plusw1,7,c
 12909  010ECC  D633               	goto	l9560
 12910  010ECE  0EE9               	movlw	-23
 12911  010ED0  50E3               	movf	plusw1,w,c
 12912  010ED2  E108               	bnz	u9790
 12913  010ED4  0EE8               	movlw	-24
 12914  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 12915  010EDC  0E4B               	movlw	75
 12916  010EDE  5E35               	subwf	btemp^0,f,c
 12917  010EE0  A0D8               	btfss	status,0,c
 12918  010EE2  D628               	goto	l9560
 12919  010EE4                     u9790:
 12920                           
 12921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12922                           ;stkvar	_pp @ sp[(-56)+50]
 12923  010EE4  0EFA               	movlw	-6
 12924  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 12925  010EEC  0EFB               	movlw	-5
 12926  010EEE  50E3               	movf	plusw1,w,c
 12927  010EF0  1035               	iorwf	btemp^0,w,c
 12928  010EF2  B4D8               	btfsc	status,2,c
 12929  010EF4  A822               	btfss	_flags^0,4,c
 12930  010EF6  D021               	goto	l9622
 12931                           
 12932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12933                           ;stkvar	_n @ sp[(-56)+32]
 12934  010EF8  0EE8               	movlw	-24
 12935  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12936  010F00  0EE9               	movlw	-23
 12937  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 12938  010F08  0EAC               	movlw	low _dbuf
 12939  010F0A  243F               	addwf	(btemp+10)^0,w,c
 12940  010F0C  6ED9               	movwf	fsr2l,c
 12941  010F0E  0E02               	movlw	high _dbuf
 12942  010F10  2040               	addwfc	(btemp+11)^0,w,c
 12943  010F12  6EDA               	movwf	fsr2h,c
 12944  010F14  0E2E               	movlw	46
 12945  010F16  6EDF               	movwf	indf2,c
 12946                           
 12947                           ;stkvar	_n @ sp[(-56)+32]
 12948  010F18  0EE8               	movlw	-24
 12949  010F1A  50E3               	movf	plusw1,w,c
 12950  010F1C  0F01               	addlw	1
 12951  010F1E  6E35               	movwf	btemp^0,c
 12952  010F20  0EE8               	movlw	-24
 12953  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 12954  010F28  6A35               	clrf	btemp^0,c
 12955  010F2A  0EE9               	movlw	-23
 12956  010F2C  50E3               	movf	plusw1,w,c
 12957  010F2E  2035               	addwfc	btemp^0,w,c
 12958  010F30  6E35               	movwf	btemp^0,c
 12959  010F32  0EE9               	movlw	-23
 12960  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 12961  010F3A                     l9622:
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12964                           ;stkvar	_n @ sp[(-56)+32]
 12965  010F3A  0EE8               	movlw	-24
 12966  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12967  010F42  0EE9               	movlw	-23
 12968  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 12969  010F4A  0EAC               	movlw	low _dbuf
 12970  010F4C  243F               	addwf	(btemp+10)^0,w,c
 12971  010F4E  6ED9               	movwf	fsr2l,c
 12972  010F50  0E02               	movlw	high _dbuf
 12973  010F52  2040               	addwfc	(btemp+11)^0,w,c
 12974  010F54  6EDA               	movwf	fsr2h,c
 12975  010F56  0E00               	movlw	0
 12976  010F58  6EDF               	movwf	indf2,c
 12977                           
 12978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12979                           ;stkvar	_nmode @ sp[(-56)+55]
 12980  010F5A  0EFF               	movlw	-1
 12981  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 12982  010F62  0E65               	movlw	101
 12983  010F64  1835               	xorwf	btemp^0,w,c
 12984  010F66  A4D8               	btfss	status,2,c
 12985  010F68  EF16  F081         	goto	l9426
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12988  010F6C  0E4F               	movlw	79
 12989  010F6E  6E3F               	movwf	(btemp+10)^0,c
 12990  010F70  0E00               	movlw	0
 12991  010F72  6E40               	movwf	(btemp+11)^0,c
 12992                           
 12993                           ;stkvar	_i @ sp[(-56)+36]
 12994  010F74  0EEC               	movlw	-20
 12995  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12996  010F7C  0EED               	movlw	-19
 12997  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13000                           ;stkvar	_i @ sp[(-56)+36]
 13001  010F84  0EEC               	movlw	-20
 13002  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 13003  010F8C  0EED               	movlw	-19
 13004  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 13005  010F94  0EAC               	movlw	low _dbuf
 13006  010F96  243F               	addwf	(btemp+10)^0,w,c
 13007  010F98  6ED9               	movwf	fsr2l,c
 13008  010F9A  0E02               	movlw	high _dbuf
 13009  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 13010  010F9E  6EDA               	movwf	fsr2h,c
 13011  010FA0  0E00               	movlw	0
 13012  010FA2  6EDF               	movwf	indf2,c
 13013                           
 13014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13015                           ;stkvar	_sign @ sp[(-56)+42]
 13016  010FA4  0EF2               	movlw	-14
 13017  010FA6  6AE3               	clrf	plusw1,c
 13018  010FA8  0EF3               	movlw	-13
 13019  010FAA  6AE3               	clrf	plusw1,c
 13020                           
 13021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13022                           ;stkvar	_e @ sp[(-56)+34]
 13023  010FAC  0EEB               	movlw	-21
 13024  010FAE  AEE3               	btfss	plusw1,7,c
 13025  010FB0  D012               	goto	l9636
 13026                           
 13027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13028  010FB2  0E01               	movlw	1
 13029  010FB4  6E3F               	movwf	(btemp+10)^0,c
 13030  010FB6  0E00               	movlw	0
 13031  010FB8  6E40               	movwf	(btemp+11)^0,c
 13032                           
 13033                           ;stkvar	_sign @ sp[(-56)+42]
 13034  010FBA  0EF2               	movlw	-14
 13035  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13036  010FC2  0EF3               	movlw	-13
 13037  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13040                           ;stkvar	_e @ sp[(-56)+34]
 13041                           ;stkvar	_e @ sp[(-56)+34]
 13042  010FCA  0EEA               	movlw	-22
 13043  010FCC  6CE3               	negf	plusw1,c
 13044  010FCE  0EEB               	movlw	-21
 13045  010FD0  1EE3               	comf	plusw1,f,c
 13046  010FD2  B0D8               	btfsc	status,0,c
 13047  010FD4  2AE3               	incf	plusw1,f,c
 13048  010FD6                     l9636:
 13049                           
 13050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13051  010FD6  0E02               	movlw	2
 13052  010FD8  6E3F               	movwf	(btemp+10)^0,c
 13053  010FDA  0E00               	movlw	0
 13054  010FDC  6E40               	movwf	(btemp+11)^0,c
 13055                           
 13056                           ;stkvar	_p @ sp[(-56)+40]
 13057  010FDE  0EF0               	movlw	-16
 13058  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13059  010FE6  0EF1               	movlw	-15
 13060  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 13061                           
 13062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13063  010FEE  D051               	goto	l9648
 13064  010FF0                     l9638:
 13065                           
 13066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13067                           ;stkvar	_i @ sp[(-56)+36]
 13068  010FF0  50E1               	movf	fsr1l,w,c
 13069  010FF2  0FEC               	addlw	-20
 13070  010FF4  6ED9               	movwf	fsr2l,c
 13071  010FF6  50E2               	movf	fsr1h,w,c
 13072  010FF8  6EDA               	movwf	fsr2h,c
 13073  010FFA  0EFF               	movlw	255
 13074  010FFC  22DA               	addwfc	fsr2h,f,c
 13075  010FFE  06DE               	decf	postinc2,f,c
 13076  011000  0E00               	movlw	0
 13077  011002  5ADD               	subwfb	postdec2,f,c
 13078                           
 13079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13080                           ;stkvar	_i @ sp[(-56)+36]
 13081  011004  0EEC               	movlw	-20
 13082  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 13083  01100C  0EED               	movlw	-19
 13084  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 13085  011014  0EAC               	movlw	low _dbuf
 13086  011016  243F               	addwf	(btemp+10)^0,w,c
 13087  011018  6ED9               	movwf	fsr2l,c
 13088  01101A  0E02               	movlw	high _dbuf
 13089  01101C  2040               	addwfc	(btemp+11)^0,w,c
 13090  01101E  6EDA               	movwf	fsr2h,c
 13091  011020  0E0A               	movlw	10
 13092  011022  6EE6               	movwf	postinc1,c
 13093  011024  0E00               	movlw	0
 13094  011026  6EE6               	movwf	postinc1,c
 13095                           
 13096                           ;stkvar	_e @ sp[(-58)+34]
 13097  011028  0EE8               	movlw	-24
 13098  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13099  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13100  011036  ECA6  F0B7         	call	___awmod	;wreg free
 13101  01103A  5035               	movf	btemp^0,w,c
 13102  01103C  0F30               	addlw	48
 13103  01103E  6EDF               	movwf	indf2,c
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13106  011040  0E0A               	movlw	10
 13107  011042  6EE6               	movwf	postinc1,c
 13108  011044  0E00               	movlw	0
 13109  011046  6EE6               	movwf	postinc1,c
 13110                           
 13111                           ;stkvar	_e @ sp[(-58)+34]
 13112  011048  0EE8               	movlw	-24
 13113  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13114  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13115  011056  EC36  F0B5         	call	___awdiv	;wreg free
 13116                           
 13117                           ;stkvar	_e @ sp[(-56)+34]
 13118  01105A  0EEA               	movlw	-22
 13119  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 13120  011062  0EEB               	movlw	-21
 13121  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 13122                           
 13123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13124                           ;stkvar	_p @ sp[(-56)+40]
 13125  01106A  50E1               	movf	fsr1l,w,c
 13126  01106C  0FF0               	addlw	-16
 13127  01106E  6ED9               	movwf	fsr2l,c
 13128  011070  50E2               	movf	fsr1h,w,c
 13129  011072  6EDA               	movwf	fsr2h,c
 13130  011074  0EFF               	movlw	255
 13131  011076  22DA               	addwfc	fsr2h,f,c
 13132  011078  06DE               	decf	postinc2,f,c
 13133  01107A  0E00               	movlw	0
 13134  01107C  5ADD               	subwfb	postdec2,f,c
 13135                           
 13136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13137                           ;stkvar	_w @ sp[(-56)+38]
 13138  01107E  50E1               	movf	fsr1l,w,c
 13139  011080  0FEE               	addlw	-18
 13140  011082  6ED9               	movwf	fsr2l,c
 13141  011084  50E2               	movf	fsr1h,w,c
 13142  011086  6EDA               	movwf	fsr2h,c
 13143  011088  0EFF               	movlw	255
 13144  01108A  22DA               	addwfc	fsr2h,f,c
 13145  01108C  06DE               	decf	postinc2,f,c
 13146  01108E  0E00               	movlw	0
 13147  011090  5ADD               	subwfb	postdec2,f,c
 13148  011092                     l9648:
 13149                           
 13150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13151                           ;stkvar	_e @ sp[(-56)+34]
 13152  011092  0EEA               	movlw	-22
 13153  011094  006F FF8C  F035    	movff	plusw1,btemp
 13154  01109A  0EEB               	movlw	-21
 13155  01109C  50E3               	movf	plusw1,w,c
 13156  01109E  1035               	iorwf	btemp^0,w,c
 13157  0110A0  A4D8               	btfss	status,2,c
 13158  0110A2  D7A6               	goto	l9638
 13159                           
 13160                           ;stkvar	_p @ sp[(-56)+40]
 13161  0110A4  0EF1               	movlw	-15
 13162  0110A6  BEE3               	btfsc	plusw1,7,c
 13163  0110A8  D007               	goto	u9850
 13164  0110AA  0EF1               	movlw	-15
 13165  0110AC  50E3               	movf	plusw1,w,c
 13166  0110AE  E1A0               	bnz	l9638
 13167  0110B0  0EF0               	movlw	-16
 13168  0110B2  04E3               	decf	plusw1,w,c
 13169  0110B4  B0D8               	btfsc	status,0,c
 13170  0110B6  D79C               	goto	l9638
 13171  0110B8                     u9850:
 13172                           
 13173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13174                           ;stkvar	_i @ sp[(-56)+36]
 13175  0110B8  50E1               	movf	fsr1l,w,c
 13176  0110BA  0FEC               	addlw	-20
 13177  0110BC  6ED9               	movwf	fsr2l,c
 13178  0110BE  50E2               	movf	fsr1h,w,c
 13179  0110C0  6EDA               	movwf	fsr2h,c
 13180  0110C2  0EFF               	movlw	255
 13181  0110C4  22DA               	addwfc	fsr2h,f,c
 13182  0110C6  06DE               	decf	postinc2,f,c
 13183  0110C8  0E00               	movlw	0
 13184  0110CA  5ADD               	subwfb	postdec2,f,c
 13185                           
 13186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13187                           ;stkvar	_sign @ sp[(-56)+42]
 13188  0110CC  0EF2               	movlw	-14
 13189  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 13190  0110D4  0EF3               	movlw	-13
 13191  0110D6  50E3               	movf	plusw1,w,c
 13192  0110D8  1035               	iorwf	btemp^0,w,c
 13193  0110DA  A4D8               	btfss	status,2,c
 13194  0110DC  D002               	goto	l9658
 13195  0110DE  0E2B               	movlw	43
 13196  0110E0  D001               	goto	L13
 13197  0110E2                     l9658:
 13198  0110E2  0E2D               	movlw	45
 13199  0110E4                     L13:
 13200  0110E4  6E3F               	movwf	(btemp+10)^0,c
 13201  0110E6  0E00               	movlw	0
 13202  0110E8  6E40               	movwf	(btemp+11)^0,c
 13203                           
 13204                           ;stkvar	_efgtoa$4205 @ sp[(-56)+4]
 13205  0110EA  0ECC               	movlw	-52
 13206  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13207  0110F2  0ECD               	movlw	-51
 13208  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13209                           
 13210                           ;stkvar	_efgtoa$4205 @ sp[(-56)+4]
 13211                           ;stkvar	_i @ sp[(-56)+36]
 13212  0110FA  0EEC               	movlw	-20
 13213  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13214  011102  0EED               	movlw	-19
 13215  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 13216  01110A  0EAC               	movlw	low _dbuf
 13217  01110C  243F               	addwf	(btemp+10)^0,w,c
 13218  01110E  6ED9               	movwf	fsr2l,c
 13219  011110  0E02               	movlw	high _dbuf
 13220  011112  2040               	addwfc	(btemp+11)^0,w,c
 13221  011114  6EDA               	movwf	fsr2h,c
 13222  011116  0ECC               	movlw	-52
 13223  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13224                           
 13225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13226                           ;stkvar	_w @ sp[(-56)+38]
 13227  01111E  50E1               	movf	fsr1l,w,c
 13228  011120  0FEE               	addlw	-18
 13229  011122  6ED9               	movwf	fsr2l,c
 13230  011124  50E2               	movf	fsr1h,w,c
 13231  011126  6EDA               	movwf	fsr2h,c
 13232  011128  0EFF               	movlw	255
 13233  01112A  22DA               	addwfc	fsr2h,f,c
 13234  01112C  06DE               	decf	postinc2,f,c
 13235  01112E  0E00               	movlw	0
 13236  011130  5ADD               	subwfb	postdec2,f,c
 13237                           
 13238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13239                           ;stkvar	_i @ sp[(-56)+36]
 13240  011132  50E1               	movf	fsr1l,w,c
 13241  011134  0FEC               	addlw	-20
 13242  011136  6ED9               	movwf	fsr2l,c
 13243  011138  50E2               	movf	fsr1h,w,c
 13244  01113A  6EDA               	movwf	fsr2h,c
 13245  01113C  0EFF               	movlw	255
 13246  01113E  22DA               	addwfc	fsr2h,f,c
 13247  011140  06DE               	decf	postinc2,f,c
 13248  011142  0E00               	movlw	0
 13249  011144  5ADD               	subwfb	postdec2,f,c
 13250  011146  0EBF               	movlw	191
 13251  011148  6E3F               	movwf	(btemp+10)^0,c
 13252  01114A  0EFF               	movlw	255
 13253  01114C  6E40               	movwf	(btemp+11)^0,c
 13254                           
 13255                           ;stkvar	_c @ sp[(-56)+-7]
 13256  01114E  0EC1               	movlw	-63
 13257  011150  50E3               	movf	plusw1,w,c
 13258  011152  6E3D               	movwf	(btemp+8)^0,c
 13259  011154  6A3E               	clrf	(btemp+9)^0,c
 13260  011156  503F               	movf	(btemp+10)^0,w,c
 13261  011158  263D               	addwf	(btemp+8)^0,f,c
 13262  01115A  5040               	movf	(btemp+11)^0,w,c
 13263  01115C  223E               	addwfc	(btemp+9)^0,f,c
 13264  01115E  503E               	movf	(btemp+9)^0,w,c
 13265  011160  E106               	bnz	u9870
 13266  011162  0E1A               	movlw	26
 13267  011164  5C3D               	subwf	(btemp+8)^0,w,c
 13268  011166  B0D8               	btfsc	status,0,c
 13269  011168  D002               	goto	u9870
 13270  01116A  0E01               	movlw	1
 13271  01116C  D001               	goto	u9880
 13272  01116E                     u9870:
 13273  01116E  0E00               	movlw	0
 13274  011170                     u9880:
 13275  011170  6E3F               	movwf	(btemp+10)^0,c
 13276  011172  6A40               	clrf	(btemp+11)^0,c
 13277                           
 13278                           ;stkvar	_efgtoa$4207 @ sp[(-56)+0]
 13279  011174  0EC8               	movlw	-56
 13280  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13281  01117C  0EC9               	movlw	-55
 13282  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13283                           
 13284                           ;stkvar	_efgtoa$4207 @ sp[(-56)+0]
 13285  011184  0EC8               	movlw	-56
 13286  011186  006F FF8C  F035    	movff	plusw1,btemp
 13287  01118C  0EC9               	movlw	-55
 13288  01118E  50E3               	movf	plusw1,w,c
 13289  011190  1035               	iorwf	btemp^0,w,c
 13290  011192  A4D8               	btfss	status,2,c
 13291  011194  D002               	goto	l9674
 13292  011196  0E65               	movlw	101
 13293  011198  D001               	goto	L14
 13294  01119A                     l9674:
 13295  01119A  0E45               	movlw	69
 13296  01119C                     L14:
 13297  01119C  6E3F               	movwf	(btemp+10)^0,c
 13298  01119E  0E00               	movlw	0
 13299  0111A0  6E40               	movwf	(btemp+11)^0,c
 13300                           
 13301                           ;stkvar	_efgtoa$4206 @ sp[(-56)+2]
 13302  0111A2  0ECA               	movlw	-54
 13303  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13304  0111AA  0ECB               	movlw	-53
 13305  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13306                           
 13307                           ;stkvar	_efgtoa$4206 @ sp[(-56)+2]
 13308                           ;stkvar	_i @ sp[(-56)+36]
 13309  0111B2  0EEC               	movlw	-20
 13310  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13311  0111BA  0EED               	movlw	-19
 13312  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 13313  0111C2  0EAC               	movlw	low _dbuf
 13314  0111C4  243F               	addwf	(btemp+10)^0,w,c
 13315  0111C6  6ED9               	movwf	fsr2l,c
 13316  0111C8  0E02               	movlw	high _dbuf
 13317  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 13318  0111CC  6EDA               	movwf	fsr2h,c
 13319  0111CE  0ECA               	movlw	-54
 13320  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13321                           
 13322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13323                           ;stkvar	_w @ sp[(-56)+38]
 13324  0111D6  50E1               	movf	fsr1l,w,c
 13325  0111D8  0FEE               	addlw	-18
 13326  0111DA  6ED9               	movwf	fsr2l,c
 13327  0111DC  50E2               	movf	fsr1h,w,c
 13328  0111DE  6EDA               	movwf	fsr2h,c
 13329  0111E0  0EFF               	movlw	255
 13330  0111E2  22DA               	addwfc	fsr2h,f,c
 13331  0111E4  06DE               	decf	postinc2,f,c
 13332  0111E6  0E00               	movlw	0
 13333  0111E8  5ADD               	subwfb	postdec2,f,c
 13334                           
 13335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13336                           ;stkvar	_i @ sp[(-56)+36]
 13337  0111EA  0EEC               	movlw	-20
 13338  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13339  0111F2  0EED               	movlw	-19
 13340  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 13341  0111FA  0EAC               	movlw	low _dbuf
 13342  0111FC  243F               	addwf	(btemp+10)^0,w,c
 13343  0111FE  6E3D               	movwf	(btemp+8)^0,c
 13344  011200  0E02               	movlw	high _dbuf
 13345  011202  2040               	addwfc	(btemp+11)^0,w,c
 13346  011204  6E3E               	movwf	(btemp+9)^0,c
 13347  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 13348  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 13349                           
 13350                           ;stkvar	_n @ sp[(-58)+32]
 13351  011212  0EAC               	movlw	low _dbuf
 13352  011214  6E3F               	movwf	(btemp+10)^0,c
 13353  011216  0E02               	movlw	high _dbuf
 13354  011218  6E40               	movwf	(btemp+11)^0,c
 13355  01121A  0EE6               	movlw	-26
 13356  01121C  50E3               	movf	plusw1,w,c
 13357  01121E  263F               	addwf	(btemp+10)^0,f,c
 13358  011220  0EE7               	movlw	-25
 13359  011222  50E3               	movf	plusw1,w,c
 13360  011224  2240               	addwfc	(btemp+11)^0,f,c
 13361  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 13362  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 13363  011232  EC3D  F0BA         	call	_strcpy	;wreg free
 13364  011236  EF16  F081         	goto	l9426
 13365  01123A                     l1810:
 13366                           
 13367                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13368  01123A  0EC1               	movlw	193
 13369  01123C  26E1               	addwf	fsr1l,f,c
 13370  01123E  0EFF               	movlw	255
 13371  011240  22E2               	addwfc	fsr1h,f,c
 13372  011242  0012               	return		;funcret
 13373  011244                     __end_of_efgtoa:
 13374                           	opt callstack 0
 13375                           
 13376 ;; *************** function _tolower *****************
 13377 ;; Defined at:
 13378 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  c               2  [STACK] int 
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;		None
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  2  [STACK] int 
 13385 ;; Registers used:
 13386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/4
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;Total ram usage:        0 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    7
 13399 ;; This function calls:
 13400 ;;		_isupper
 13401 ;; This function is called by:
 13402 ;;		_efgtoa
 13403 ;;		_vfpfcnvrt
 13404 ;; This function uses a reentrant model
 13405 ;;
 13406                           
 13407                           	psect	text46
 13408  017D8E                     __ptext46:
 13409                           	opt callstack 0
 13410  017D8E                     _tolower:
 13411                           	opt callstack 0
 13412                           
 13413                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13414  017D8E  52E6               	movf	postinc1,f,c
 13415  017D90  52E6               	movf	postinc1,f,c
 13416                           
 13417                           ;stkvar	_c @ sp[(-2)+-2]
 13418                           
 13419                           ;incstack = 0
 13420  017D92  0EFC               	movlw	-4
 13421  017D94  50E3               	movf	plusw1,w,c
 13422  017D96  0FBF               	addlw	191
 13423  017D98  6E3F               	movwf	(btemp+10)^0,c
 13424  017D9A  0EFD               	movlw	-3
 13425  017D9C  006F FF8C  F040    	movff	plusw1,btemp+11
 13426  017DA2  0EFF               	movlw	255
 13427  017DA4  2240               	addwfc	(btemp+11)^0,f,c
 13428  017DA6  5040               	movf	(btemp+11)^0,w,c
 13429  017DA8  E106               	bnz	u5260
 13430  017DAA  0E1A               	movlw	26
 13431  017DAC  5C3F               	subwf	(btemp+10)^0,w,c
 13432  017DAE  B0D8               	btfsc	status,0,c
 13433  017DB0  D002               	goto	u5260
 13434  017DB2  0E01               	movlw	1
 13435  017DB4  D001               	goto	u5270
 13436  017DB6                     u5260:
 13437  017DB6  0E00               	movlw	0
 13438  017DB8                     u5270:
 13439  017DB8  6E3F               	movwf	(btemp+10)^0,c
 13440  017DBA  6A40               	clrf	(btemp+11)^0,c
 13441                           
 13442                           ;stkvar	_tolower$4904 @ sp[(-2)+0]
 13443  017DBC  0EFE               	movlw	-2
 13444  017DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13445  017DC4  0EFF               	movlw	-1
 13446  017DC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 13447                           
 13448                           ;stkvar	_tolower$4904 @ sp[(-2)+0]
 13449  017DCC  0EFE               	movlw	-2
 13450  017DCE  006F FF8C  F035    	movff	plusw1,btemp
 13451  017DD4  0EFF               	movlw	-1
 13452  017DD6  50E3               	movf	plusw1,w,c
 13453  017DD8  1035               	iorwf	btemp^0,w,c
 13454  017DDA  B4D8               	btfsc	status,2,c
 13455  017DDC  D00D               	goto	l6428
 13456                           
 13457                           ;stkvar	_c @ sp[(-2)+-2]
 13458  017DDE  0EFC               	movlw	-4
 13459  017DE0  006F FF8C  F035    	movff	plusw1,btemp
 13460  017DE6  0EFD               	movlw	-3
 13461  017DE8  006F FF8C  F036    	movff	plusw1,btemp+1
 13462  017DEE  0E20               	movlw	32
 13463  017DF0  1235               	iorwf	btemp^0,f,c
 13464  017DF2  0E00               	movlw	0
 13465  017DF4  1236               	iorwf	(btemp+1)^0,f,c
 13466  017DF6  D008               	goto	l2856
 13467  017DF8                     l6428:
 13468                           
 13469                           ;stkvar	_c @ sp[(-2)+-2]
 13470  017DF8  0EFC               	movlw	-4
 13471  017DFA  006F FF8C  F035    	movff	plusw1,btemp
 13472  017E00  0EFD               	movlw	-3
 13473  017E02  006F FF8C  F036    	movff	plusw1,btemp+1
 13474  017E08                     l2856:
 13475                           
 13476                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13477  017E08  52E5               	movf	postdec1,f,c
 13478  017E0A  52E5               	movf	postdec1,f,c
 13479  017E0C  52E5               	movf	postdec1,f,c
 13480  017E0E  52E5               	movf	postdec1,f,c
 13481  017E10  0012               	return		;funcret
 13482  017E12                     __end_of_tolower:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function _isupper *****************
 13486 ;; Defined at:
 13487 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  c               2  [STACK] int 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  2  [STACK] int 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:    6
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_efgtoa
 13512 ;;		_xtoa
 13513 ;;		_vfpfcnvrt
 13514 ;;		_tolower
 13515 ;; This function uses a reentrant model
 13516 ;;
 13517                           
 13518                           	psect	text47
 13519  01882C                     __ptext47:
 13520                           	opt callstack 0
 13521  01882C                     _isupper:
 13522                           	opt callstack 17
 13523                           
 13524                           ;stkvar	_c @ sp[(0)+-2]
 13525                           
 13526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13527                           ;incstack = 0
 13528  01882C  0EFE               	movlw	-2
 13529  01882E  50E3               	movf	plusw1,w,c
 13530  018830  0FBF               	addlw	191
 13531  018832  6E3F               	movwf	(btemp+10)^0,c
 13532  018834  0EFF               	movlw	-1
 13533  018836  006F FF8C  F040    	movff	plusw1,btemp+11
 13534  01883C  0EFF               	movlw	255
 13535  01883E  2240               	addwfc	(btemp+11)^0,f,c
 13536  018840  5040               	movf	(btemp+11)^0,w,c
 13537  018842  E106               	bnz	u4660
 13538  018844  0E1A               	movlw	26
 13539  018846  5C3F               	subwf	(btemp+10)^0,w,c
 13540  018848  B0D8               	btfsc	status,0,c
 13541  01884A  D002               	goto	u4660
 13542  01884C  0E01               	movlw	1
 13543  01884E  D001               	goto	u4670
 13544  018850                     u4660:
 13545  018850  0E00               	movlw	0
 13546  018852                     u4670:
 13547  018852  6E35               	movwf	btemp^0,c
 13548  018854  6A36               	clrf	(btemp+1)^0,c
 13549                           
 13550                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13551  018856  52E5               	movf	postdec1,f,c
 13552  018858  52E5               	movf	postdec1,f,c
 13553  01885A  0012               	return		;funcret
 13554  01885C                     __end_of_isupper:
 13555                           	opt callstack 0
 13556                           
 13557 ;; *************** function _strcpy *****************
 13558 ;; Defined at:
 13559 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  dest            2  [STACK] PTR unsigned char 
 13562 ;;		 -> dbuf(80), 
 13563 ;;  src             2  [STACK] PTR const unsigned char 
 13564 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13565 ;;		 -> dbuf(80), 
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;  d               2  [STACK] PTR unsigned char 
 13568 ;;		 -> dbuf(80), 
 13569 ;;  s               2  [STACK] PTR const unsigned char 
 13570 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13571 ;;		 -> dbuf(80), 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  2  [STACK] PTR unsigned char 
 13574 ;; Registers used:
 13575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/4
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;Total ram usage:        0 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:    6
 13588 ;; This function calls:
 13589 ;;		Nothing
 13590 ;; This function is called by:
 13591 ;;		_efgtoa
 13592 ;; This function uses a reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text48
 13596  01747A                     __ptext48:
 13597                           	opt callstack 0
 13598  01747A                     _strcpy:
 13599                           	opt callstack 0
 13600                           
 13601                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13602  01747A  52E6               	movf	postinc1,f,c
 13603  01747C  52E6               	movf	postinc1,f,c
 13604  01747E  52E6               	movf	postinc1,f,c
 13605  017480  52E6               	movf	postinc1,f,c
 13606                           
 13607                           ;stkvar	_src @ sp[(-4)+-4]
 13608                           
 13609                           ;incstack = 0
 13610  017482  0EF8               	movlw	-8
 13611  017484  006F FF8C  F03F    	movff	plusw1,btemp+10
 13612  01748A  0EF9               	movlw	-7
 13613  01748C  006F FF8C  F040    	movff	plusw1,btemp+11
 13614                           
 13615                           ;stkvar	_s @ sp[(-4)+2]
 13616  017492  0EFF               	movlw	-1
 13617  017494  0060  F103  FFE3   	movff	btemp+11,plusw1
 13618  01749A  0EFE               	movlw	-2
 13619  01749C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13620                           
 13621                           ;stkvar	_dest @ sp[(-4)+-2]
 13622  0174A2  0EFA               	movlw	-6
 13623  0174A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13624  0174AA  0EFB               	movlw	-5
 13625  0174AC  006F FF8C  F040    	movff	plusw1,btemp+11
 13626                           
 13627                           ;stkvar	_d @ sp[(-4)+0]
 13628  0174B2  0EFD               	movlw	-3
 13629  0174B4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13630  0174BA  0EFC               	movlw	-4
 13631  0174BC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13632  0174C2                     l9300:
 13633                           
 13634                           ;stkvar	_s @ sp[(-4)+2]
 13635  0174C2  50E1               	movf	fsr1l,w,c
 13636  0174C4  0FFE               	addlw	-2
 13637  0174C6  6ED9               	movwf	fsr2l,c
 13638  0174C8  50E2               	movf	fsr1h,w,c
 13639  0174CA  6EDA               	movwf	fsr2h,c
 13640  0174CC  0EFF               	movlw	255
 13641  0174CE  22DA               	addwfc	fsr2h,f,c
 13642  0174D0  006F FF7C  F03F    	movff	indf2,btemp+10
 13643  0174D6  0E01               	movlw	1
 13644  0174D8  26DE               	addwf	postinc2,f,c
 13645  0174DA  006F FF7C  F040    	movff	indf2,btemp+11
 13646  0174E0  0E00               	movlw	0
 13647  0174E2  22DD               	addwfc	postdec2,f,c
 13648  0174E4  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 13649  0174EA  0060  F103  FFF7   	movff	btemp+11,tblptrh
 13650  0174F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13651  0174F2  6EF8               	movwf	tblptru,c
 13652                           
 13653                           ;stkvar	_d @ sp[(-4)+0]
 13654  0174F4  50E1               	movf	fsr1l,w,c
 13655  0174F6  0FFC               	addlw	-4
 13656  0174F8  6ED9               	movwf	fsr2l,c
 13657  0174FA  50E2               	movf	fsr1h,w,c
 13658  0174FC  6EDA               	movwf	fsr2h,c
 13659  0174FE  0EFF               	movlw	255
 13660  017500  22DA               	addwfc	fsr2h,f,c
 13661  017502  006F FF7C  F03F    	movff	indf2,btemp+10
 13662  017508  0E01               	movlw	1
 13663  01750A  26DE               	addwf	postinc2,f,c
 13664  01750C  006F FF7C  F040    	movff	indf2,btemp+11
 13665  017512  0E00               	movlw	0
 13666  017514  22DD               	addwfc	postdec2,f,c
 13667  017516  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 13668  01751C  0060  F103  FFDA   	movff	btemp+11,fsr2h
 13669  017522  0E1F               	movlw	(high __ramtop+-1)
 13670  017524  64F7               	cpfsgt	tblptrh,c
 13671  017526  D003               	bra	u9187
 13672  017528  0008               	tblrd		*
 13673  01752A  50F5               	movf	tablat,w,c
 13674  01752C  D007               	bra	u9180
 13675  01752E                     u9187:
 13676  01752E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13677  017534  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13678  01753A  50EF               	movf	indf0,w,c
 13679  01753C                     u9180:
 13680  01753C  6EDF               	movwf	indf2,c
 13681  01753E  50DF               	movf	indf2,w,c
 13682  017540  A4D8               	btfss	status,2,c
 13683  017542  D7BF               	goto	l9300
 13684                           
 13685                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13686  017544  0EF8               	movlw	248
 13687  017546  26E1               	addwf	fsr1l,f,c
 13688  017548  0EFF               	movlw	255
 13689  01754A  22E2               	addwfc	fsr1h,f,c
 13690  01754C  0012               	return		;funcret
 13691  01754E                     __end_of_strcpy:
 13692                           	opt callstack 0
 13693                           
 13694 ;; *************** function _floorf *****************
 13695 ;; Defined at:
 13696 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;  x               4  [STACK] float 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  u               4  [STACK] struct .
 13701 ;;  m               4  [STACK] unsigned long 
 13702 ;;  e               2  [STACK] int 
 13703 ;; Return value:  Size  Location     Type
 13704 ;;                  4  [STACK] float 
 13705 ;; Registers used:
 13706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/4
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;Total ram usage:        0 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; Hardware stack levels required when called:    6
 13719 ;; This function calls:
 13720 ;;		Nothing
 13721 ;; This function is called by:
 13722 ;;		_efgtoa
 13723 ;; This function uses a reentrant model
 13724 ;;
 13725                           
 13726                           	psect	text49
 13727  014902                     __ptext49:
 13728                           	opt callstack 0
 13729  014902                     _floorf:
 13730                           	opt callstack 0
 13731                           
 13732                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13733  014902  0E0A               	movlw	10
 13734  014904  26E1               	addwf	fsr1l,f,c
 13735  014906  0E00               	movlw	0
 13736  014908  22E2               	addwfc	fsr1h,f,c
 13737                           
 13738                           ;incstack = 0
 13739  01490A  0060  F210  F03D   	movff	floorf@F524,btemp+8
 13740  014910  0060  F214  F03E   	movff	floorf@F524+1,btemp+9
 13741  014916  0060  F218  F03F   	movff	floorf@F524+2,btemp+10
 13742  01491C  0060  F21C  F040   	movff	floorf@F524+3,btemp+11
 13743                           
 13744                           ;stkvar	_u @ sp[(-10)+0]
 13745  014922  0EF6               	movlw	-10
 13746  014924  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13747  01492A  0EF7               	movlw	-9
 13748  01492C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13749  014932  0EF8               	movlw	-8
 13750  014934  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13751  01493A  0EF9               	movlw	-7
 13752  01493C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13753                           
 13754                           ;stkvar	_x @ sp[(-10)+-4]
 13755  014942  0EF2               	movlw	-14
 13756  014944  006F FF8C  F03D    	movff	plusw1,btemp+8
 13757  01494A  0EF3               	movlw	-13
 13758  01494C  006F FF8C  F03E    	movff	plusw1,btemp+9
 13759  014952  0EF4               	movlw	-12
 13760  014954  006F FF8C  F03F    	movff	plusw1,btemp+10
 13761  01495A  0EF5               	movlw	-11
 13762  01495C  006F FF8C  F040    	movff	plusw1,btemp+11
 13763                           
 13764                           ;stkvar	_u @ sp[(-10)+0]
 13765  014962  0EF6               	movlw	-10
 13766  014964  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13767  01496A  0EF7               	movlw	-9
 13768  01496C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13769  014972  0EF8               	movlw	-8
 13770  014974  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13771  01497A  0EF9               	movlw	-7
 13772  01497C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13773  014982  0E81               	movlw	129
 13774  014984  6E3F               	movwf	(btemp+10)^0,c
 13775  014986  0EFF               	movlw	255
 13776  014988  6E40               	movwf	(btemp+11)^0,c
 13777                           
 13778                           ;stkvar	_u @ sp[(-10)+0]
 13779  01498A  0EF6               	movlw	-10
 13780  01498C  006F FF8C  F039    	movff	plusw1,btemp+4
 13781  014992  0EF7               	movlw	-9
 13782  014994  006F FF8C  F03A    	movff	plusw1,btemp+5
 13783  01499A  0EF8               	movlw	-8
 13784  01499C  006F FF8C  F03B    	movff	plusw1,btemp+6
 13785  0149A2  0EF9               	movlw	-7
 13786  0149A4  006F FF8C  F03C    	movff	plusw1,btemp+7
 13787  0149AA  0E18               	movlw	24
 13788  0149AC  D005               	goto	u5290
 13789  0149AE                     u5295:
 13790  0149AE  90D8               	bcf	status,0,c
 13791  0149B0  323C               	rrcf	(btemp+7)^0,f,c
 13792  0149B2  323B               	rrcf	(btemp+6)^0,f,c
 13793  0149B4  323A               	rrcf	(btemp+5)^0,f,c
 13794  0149B6  3239               	rrcf	(btemp+4)^0,f,c
 13795  0149B8                     u5290:
 13796  0149B8  2EE8               	decfsz	wreg,f,c
 13797  0149BA  D7F9               	goto	u5295
 13798  0149BC  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 13799  0149C2  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 13800  0149C8  0EFF               	movlw	255
 13801  0149CA  163D               	andwf	(btemp+8)^0,f,c
 13802  0149CC  0E00               	movlw	0
 13803  0149CE  163E               	andwf	(btemp+9)^0,f,c
 13804  0149D0  503F               	movf	(btemp+10)^0,w,c
 13805  0149D2  263D               	addwf	(btemp+8)^0,f,c
 13806  0149D4  5040               	movf	(btemp+11)^0,w,c
 13807  0149D6  223E               	addwfc	(btemp+9)^0,f,c
 13808                           
 13809                           ;stkvar	_e @ sp[(-10)+8]
 13810  0149D8  0EFE               	movlw	-2
 13811  0149DA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13812  0149E0  0EFF               	movlw	-1
 13813  0149E2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13814                           
 13815                           ;stkvar	_e @ sp[(-10)+8]
 13816  0149E8  0EFF               	movlw	-1
 13817  0149EA  BEE3               	btfsc	plusw1,7,c
 13818  0149EC  D019               	goto	l6442
 13819  0149EE  0EFF               	movlw	-1
 13820  0149F0  50E3               	movf	plusw1,w,c
 13821  0149F2  E108               	bnz	u5300
 13822  0149F4  0EFE               	movlw	-2
 13823  0149F6  006F FF8C  F035    	movff	plusw1,btemp
 13824  0149FC  0E17               	movlw	23
 13825  0149FE  5E35               	subwf	btemp^0,f,c
 13826  014A00  A0D8               	btfss	status,0,c
 13827  014A02  D00E               	goto	l6442
 13828  014A04                     u5300:
 13829                           
 13830                           ;stkvar	_x @ sp[(-10)+-4]
 13831  014A04  0EF2               	movlw	-14
 13832  014A06  006F FF8C  F035    	movff	plusw1,btemp
 13833  014A0C  0EF3               	movlw	-13
 13834  014A0E  006F FF8C  F036    	movff	plusw1,btemp+1
 13835  014A14  0EF4               	movlw	-12
 13836  014A16  006F FF8C  F037    	movff	plusw1,btemp+2
 13837  014A1C  0EF5               	movlw	-11
 13838  014A1E  D11F               	goto	L15
 13839  014A20                     l6442:
 13840                           
 13841                           ;stkvar	_e @ sp[(-10)+8]
 13842  014A20  0EFF               	movlw	-1
 13843  014A22  BEE3               	btfsc	plusw1,7,c
 13844  014A24  D0B4               	goto	l6458
 13845                           
 13846                           ;stkvar	_e @ sp[(-10)+8]
 13847  014A26  0EFE               	movlw	-2
 13848  014A28  006F FF8C  F040    	movff	plusw1,btemp+11
 13849  014A2E  0EFF               	movlw	255
 13850  014A30  6E39               	movwf	(btemp+4)^0,c
 13851  014A32  0EFF               	movlw	255
 13852  014A34  6E3A               	movwf	(btemp+5)^0,c
 13853  014A36  0E7F               	movlw	127
 13854  014A38  6E3B               	movwf	(btemp+6)^0,c
 13855  014A3A  0E00               	movlw	0
 13856  014A3C  6E3C               	movwf	(btemp+7)^0,c
 13857  014A3E                     u5325:
 13858  014A3E  6640               	tstfsz	(btemp+11)^0,c
 13859  014A40  D001               	goto	u5326
 13860  014A42  D007               	goto	u5327
 13861  014A44                     u5326:
 13862  014A44  343C               	rlcf	(btemp+7)^0,w,c
 13863  014A46  323C               	rrcf	(btemp+7)^0,f,c
 13864  014A48  323B               	rrcf	(btemp+6)^0,f,c
 13865  014A4A  323A               	rrcf	(btemp+5)^0,f,c
 13866  014A4C  3239               	rrcf	(btemp+4)^0,f,c
 13867  014A4E  2E40               	decfsz	(btemp+11)^0,f,c
 13868  014A50  D7F6               	goto	u5325
 13869  014A52                     u5327:
 13870                           
 13871                           ;stkvar	_m @ sp[(-10)+4]
 13872  014A52  0EFA               	movlw	-6
 13873  014A54  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13874  014A5A  0EFB               	movlw	-5
 13875  014A5C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13876  014A62  0EFC               	movlw	-4
 13877  014A64  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13878  014A6A  0EFD               	movlw	-3
 13879  014A6C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13880                           
 13881                           ;stkvar	_m @ sp[(-10)+4]
 13882                           ;stkvar	_u @ sp[(-10)+0]
 13883  014A72  0EF6               	movlw	-10
 13884  014A74  006F FF8C  F03D    	movff	plusw1,btemp+8
 13885  014A7A  0EF7               	movlw	-9
 13886  014A7C  006F FF8C  F03E    	movff	plusw1,btemp+9
 13887  014A82  0EF8               	movlw	-8
 13888  014A84  006F FF8C  F03F    	movff	plusw1,btemp+10
 13889  014A8A  0EF9               	movlw	-7
 13890  014A8C  006F FF8C  F040    	movff	plusw1,btemp+11
 13891  014A92  0EFA               	movlw	-6
 13892  014A94  50E3               	movf	plusw1,w,c
 13893  014A96  163D               	andwf	(btemp+8)^0,f,c
 13894  014A98  0EFB               	movlw	-5
 13895  014A9A  50E3               	movf	plusw1,w,c
 13896  014A9C  163E               	andwf	(btemp+9)^0,f,c
 13897  014A9E  0EFC               	movlw	-4
 13898  014AA0  50E3               	movf	plusw1,w,c
 13899  014AA2  163F               	andwf	(btemp+10)^0,f,c
 13900  014AA4  0EFD               	movlw	-3
 13901  014AA6  50E3               	movf	plusw1,w,c
 13902  014AA8  1640               	andwf	(btemp+11)^0,f,c
 13903  014AAA  503D               	movf	(btemp+8)^0,w,c
 13904  014AAC  103E               	iorwf	(btemp+9)^0,w,c
 13905  014AAE  103F               	iorwf	(btemp+10)^0,w,c
 13906  014AB0  1040               	iorwf	(btemp+11)^0,w,c
 13907  014AB2  B4D8               	btfsc	status,2,c
 13908  014AB4  D7A7               	goto	u5300
 13909                           
 13910                           ;stkvar	_u @ sp[(-10)+0]
 13911  014AB6  0EF6               	movlw	-10
 13912  014AB8  006F FF8C  F03D    	movff	plusw1,btemp+8
 13913  014ABE  0EF7               	movlw	-9
 13914  014AC0  006F FF8C  F03E    	movff	plusw1,btemp+9
 13915  014AC6  0EF8               	movlw	-8
 13916  014AC8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13917  014ACE  0EF9               	movlw	-7
 13918  014AD0  006F FF8C  F040    	movff	plusw1,btemp+11
 13919  014AD6  0E20               	movlw	32
 13920  014AD8  D005               	goto	u5340
 13921  014ADA                     u5345:
 13922  014ADA  90D8               	bcf	status,0,c
 13923  014ADC  3240               	rrcf	(btemp+11)^0,f,c
 13924  014ADE  323F               	rrcf	(btemp+10)^0,f,c
 13925  014AE0  323E               	rrcf	(btemp+9)^0,f,c
 13926  014AE2  323D               	rrcf	(btemp+8)^0,f,c
 13927  014AE4                     u5340:
 13928  014AE4  2EE8               	decfsz	wreg,f,c
 13929  014AE6  D7F9               	goto	u5345
 13930  014AE8  503D               	movf	(btemp+8)^0,w,c
 13931  014AEA  B4D8               	btfsc	status,2,c
 13932  014AEC  D028               	goto	l6456
 13933                           
 13934                           ;stkvar	_m @ sp[(-10)+4]
 13935                           ;stkvar	_u @ sp[(-10)+0]
 13936  014AEE  0EF6               	movlw	-10
 13937  014AF0  50E3               	movf	plusw1,w,c
 13938  014AF2  6E35               	movwf	btemp^0,c
 13939  014AF4  0EFA               	movlw	-6
 13940  014AF6  50E3               	movf	plusw1,w,c
 13941  014AF8  2635               	addwf	btemp^0,f,c
 13942  014AFA  0EF6               	movlw	-10
 13943  014AFC  0060  F0D7  FFE3   	movff	btemp,plusw1
 13944  014B02  0EF7               	movlw	-9
 13945  014B04  50E3               	movf	plusw1,w,c
 13946  014B06  6E35               	movwf	btemp^0,c
 13947  014B08  0EFB               	movlw	-5
 13948  014B0A  50E3               	movf	plusw1,w,c
 13949  014B0C  2235               	addwfc	btemp^0,f,c
 13950  014B0E  0EF7               	movlw	-9
 13951  014B10  0060  F0D7  FFE3   	movff	btemp,plusw1
 13952  014B16  0EF8               	movlw	-8
 13953  014B18  50E3               	movf	plusw1,w,c
 13954  014B1A  6E35               	movwf	btemp^0,c
 13955  014B1C  0EFC               	movlw	-4
 13956  014B1E  50E3               	movf	plusw1,w,c
 13957  014B20  2235               	addwfc	btemp^0,f,c
 13958  014B22  0EF8               	movlw	-8
 13959  014B24  0060  F0D7  FFE3   	movff	btemp,plusw1
 13960  014B2A  0EF9               	movlw	-7
 13961  014B2C  50E3               	movf	plusw1,w,c
 13962  014B2E  6E35               	movwf	btemp^0,c
 13963  014B30  0EFD               	movlw	-3
 13964  014B32  50E3               	movf	plusw1,w,c
 13965  014B34  2235               	addwfc	btemp^0,f,c
 13966  014B36  0EF9               	movlw	-7
 13967  014B38  0060  F0D7  FFE3   	movff	btemp,plusw1
 13968  014B3E                     l6456:
 13969                           
 13970                           ;stkvar	_m @ sp[(-10)+4]
 13971  014B3E  0EFA               	movlw	-6
 13972  014B40  006F FF8C  F03D    	movff	plusw1,btemp+8
 13973  014B46  0EFB               	movlw	-5
 13974  014B48  006F FF8C  F03E    	movff	plusw1,btemp+9
 13975  014B4E  0EFC               	movlw	-4
 13976  014B50  006F FF8C  F03F    	movff	plusw1,btemp+10
 13977  014B56  0EFD               	movlw	-3
 13978  014B58  006F FF8C  F040    	movff	plusw1,btemp+11
 13979  014B5E  1C3D               	comf	(btemp+8)^0,w,c
 13980  014B60  6E39               	movwf	(btemp+4)^0,c
 13981  014B62  1C3E               	comf	(btemp+9)^0,w,c
 13982  014B64  6E3A               	movwf	(btemp+5)^0,c
 13983  014B66  1C3F               	comf	(btemp+10)^0,w,c
 13984  014B68  6E3B               	movwf	(btemp+6)^0,c
 13985  014B6A  1C40               	comf	(btemp+11)^0,w,c
 13986  014B6C  6E3C               	movwf	(btemp+7)^0,c
 13987                           
 13988                           ;stkvar	_u @ sp[(-10)+0]
 13989  014B6E  50E1               	movf	fsr1l,w,c
 13990  014B70  0FF6               	addlw	-10
 13991  014B72  6ED9               	movwf	fsr2l,c
 13992  014B74  50E2               	movf	fsr1h,w,c
 13993  014B76  6EDA               	movwf	fsr2h,c
 13994  014B78  0EFF               	movlw	255
 13995  014B7A  22DA               	addwfc	fsr2h,f,c
 13996  014B7C  5039               	movf	(btemp+4)^0,w,c
 13997  014B7E  16DE               	andwf	postinc2,f,c
 13998  014B80  503A               	movf	(btemp+5)^0,w,c
 13999  014B82  16DE               	andwf	postinc2,f,c
 14000  014B84  503B               	movf	(btemp+6)^0,w,c
 14001  014B86  16DE               	andwf	postinc2,f,c
 14002  014B88  503C               	movf	(btemp+7)^0,w,c
 14003  014B8A  16DE               	andwf	postinc2,f,c
 14004  014B8C  D05B               	goto	l6466
 14005  014B8E                     l6458:
 14006                           
 14007                           ;stkvar	_u @ sp[(-10)+0]
 14008  014B8E  0EF6               	movlw	-10
 14009  014B90  006F FF8C  F03D    	movff	plusw1,btemp+8
 14010  014B96  0EF7               	movlw	-9
 14011  014B98  006F FF8C  F03E    	movff	plusw1,btemp+9
 14012  014B9E  0EF8               	movlw	-8
 14013  014BA0  006F FF8C  F03F    	movff	plusw1,btemp+10
 14014  014BA6  0EF9               	movlw	-7
 14015  014BA8  006F FF8C  F040    	movff	plusw1,btemp+11
 14016  014BAE  0E20               	movlw	32
 14017  014BB0  D005               	goto	u5360
 14018  014BB2                     u5365:
 14019  014BB2  90D8               	bcf	status,0,c
 14020  014BB4  3240               	rrcf	(btemp+11)^0,f,c
 14021  014BB6  323F               	rrcf	(btemp+10)^0,f,c
 14022  014BB8  323E               	rrcf	(btemp+9)^0,f,c
 14023  014BBA  323D               	rrcf	(btemp+8)^0,f,c
 14024  014BBC                     u5360:
 14025  014BBC  2EE8               	decfsz	wreg,f,c
 14026  014BBE  D7F9               	goto	u5365
 14027  014BC0  663D               	tstfsz	(btemp+8)^0,c
 14028  014BC2  D009               	goto	l6462
 14029                           
 14030                           ;stkvar	_u @ sp[(-10)+0]
 14031  014BC4  0EF6               	movlw	-10
 14032  014BC6  6AE3               	clrf	plusw1,c
 14033  014BC8  0EF7               	movlw	-9
 14034  014BCA  6AE3               	clrf	plusw1,c
 14035  014BCC  0EF8               	movlw	-8
 14036  014BCE  6AE3               	clrf	plusw1,c
 14037  014BD0  0EF9               	movlw	-7
 14038  014BD2  6AE3               	clrf	plusw1,c
 14039  014BD4  D037               	goto	l6466
 14040  014BD6                     l6462:
 14041                           
 14042                           ;stkvar	_u @ sp[(-10)+0]
 14043  014BD6  0EF6               	movlw	-10
 14044  014BD8  006F FF8C  F03D    	movff	plusw1,btemp+8
 14045  014BDE  0EF7               	movlw	-9
 14046  014BE0  006F FF8C  F03E    	movff	plusw1,btemp+9
 14047  014BE6  0EF8               	movlw	-8
 14048  014BE8  006F FF8C  F03F    	movff	plusw1,btemp+10
 14049  014BEE  0EF9               	movlw	-7
 14050  014BF0  006F FF8C  F040    	movff	plusw1,btemp+11
 14051  014BF6  90D8               	bcf	status,0,c
 14052  014BF8  343D               	rlcf	(btemp+8)^0,w,c
 14053  014BFA  6E39               	movwf	(btemp+4)^0,c
 14054  014BFC  343E               	rlcf	(btemp+9)^0,w,c
 14055  014BFE  6E3A               	movwf	(btemp+5)^0,c
 14056  014C00  343F               	rlcf	(btemp+10)^0,w,c
 14057  014C02  6E3B               	movwf	(btemp+6)^0,c
 14058  014C04  3440               	rlcf	(btemp+11)^0,w,c
 14059  014C06  6E3C               	movwf	(btemp+7)^0,c
 14060  014C08  5039               	movf	(btemp+4)^0,w,c
 14061  014C0A  103A               	iorwf	(btemp+5)^0,w,c
 14062  014C0C  103B               	iorwf	(btemp+6)^0,w,c
 14063  014C0E  103C               	iorwf	(btemp+7)^0,w,c
 14064  014C10  B4D8               	btfsc	status,2,c
 14065  014C12  D018               	goto	l6466
 14066  014C14  0E00               	movlw	0
 14067  014C16  6E3D               	movwf	(btemp+8)^0,c
 14068  014C18  0E00               	movlw	0
 14069  014C1A  6E3E               	movwf	(btemp+9)^0,c
 14070  014C1C  0E80               	movlw	128
 14071  014C1E  6E3F               	movwf	(btemp+10)^0,c
 14072  014C20  0EBF               	movlw	191
 14073  014C22  6E40               	movwf	(btemp+11)^0,c
 14074                           
 14075                           ;stkvar	_u @ sp[(-10)+0]
 14076  014C24  0EF6               	movlw	-10
 14077  014C26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14078  014C2C  0EF7               	movlw	-9
 14079  014C2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14080  014C34  0EF8               	movlw	-8
 14081  014C36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14082  014C3C  0EF9               	movlw	-7
 14083  014C3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 14084  014C44                     l6466:
 14085                           
 14086                           ;stkvar	_u @ sp[(-10)+0]
 14087  014C44  0EF6               	movlw	-10
 14088  014C46  006F FF8C  F035    	movff	plusw1,btemp
 14089  014C4C  0EF7               	movlw	-9
 14090  014C4E  006F FF8C  F036    	movff	plusw1,btemp+1
 14091  014C54  0EF8               	movlw	-8
 14092  014C56  006F FF8C  F037    	movff	plusw1,btemp+2
 14093  014C5C  0EF9               	movlw	-7
 14094  014C5E                     L15:
 14095  014C5E  006F FF8C  F038    	movff	plusw1,btemp+3
 14096                           
 14097                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14098  014C64  0EF2               	movlw	242
 14099  014C66  26E1               	addwf	fsr1l,f,c
 14100  014C68  0EFF               	movlw	255
 14101  014C6A  22E2               	addwfc	fsr1h,f,c
 14102  014C6C  0012               	return		;funcret
 14103  014C6E                     __end_of_floorf:
 14104                           	opt callstack 0
 14105                           
 14106 ;; *************** function ___fpclassifyf *****************
 14107 ;; Defined at:
 14108 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  x               4  [STACK] float 
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;  u               4  [STACK] struct .
 14113 ;;  e               2  [STACK] int 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  2  [STACK] int 
 14116 ;; Registers used:
 14117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/4
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14127 ;;Total ram usage:        0 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    6
 14130 ;; This function calls:
 14131 ;;		Nothing
 14132 ;; This function is called by:
 14133 ;;		_efgtoa
 14134 ;; This function uses a reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text50
 14138  016482                     __ptext50:
 14139                           	opt callstack 0
 14140  016482                     ___fpclassifyf:
 14141                           	opt callstack 0
 14142                           
 14143                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14144  016482  0E06               	movlw	6
 14145  016484  26E1               	addwf	fsr1l,f,c
 14146  016486  0E00               	movlw	0
 14147  016488  22E2               	addwfc	fsr1h,f,c
 14148                           
 14149                           ;incstack = 0
 14150  01648A  0060  F220  F03D   	movff	___fpclassifyf@F463,btemp+8
 14151  016490  0060  F224  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 14152  016496  0060  F228  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 14153  01649C  0060  F22C  F040   	movff	___fpclassifyf@F463+3,btemp+11
 14154                           
 14155                           ;stkvar	_u @ sp[(-6)+0]
 14156  0164A2  0EFA               	movlw	-6
 14157  0164A4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14158  0164AA  0EFB               	movlw	-5
 14159  0164AC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14160  0164B2  0EFC               	movlw	-4
 14161  0164B4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14162  0164BA  0EFD               	movlw	-3
 14163  0164BC  0060  F103  FFE3   	movff	btemp+11,plusw1
 14164                           
 14165                           ;stkvar	_x @ sp[(-6)+-4]
 14166  0164C2  0EF6               	movlw	-10
 14167  0164C4  006F FF8C  F03D    	movff	plusw1,btemp+8
 14168  0164CA  0EF7               	movlw	-9
 14169  0164CC  006F FF8C  F03E    	movff	plusw1,btemp+9
 14170  0164D2  0EF8               	movlw	-8
 14171  0164D4  006F FF8C  F03F    	movff	plusw1,btemp+10
 14172  0164DA  0EF9               	movlw	-7
 14173  0164DC  006F FF8C  F040    	movff	plusw1,btemp+11
 14174                           
 14175                           ;stkvar	_u @ sp[(-6)+0]
 14176  0164E2  0EFA               	movlw	-6
 14177  0164E4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14178  0164EA  0EFB               	movlw	-5
 14179  0164EC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14180  0164F2  0EFC               	movlw	-4
 14181  0164F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14182  0164FA  0EFD               	movlw	-3
 14183  0164FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 14184                           
 14185                           ;stkvar	_u @ sp[(-6)+0]
 14186  016502  0EFA               	movlw	-6
 14187  016504  006F FF8C  F03D    	movff	plusw1,btemp+8
 14188  01650A  0EFB               	movlw	-5
 14189  01650C  006F FF8C  F03E    	movff	plusw1,btemp+9
 14190  016512  0EFC               	movlw	-4
 14191  016514  006F FF8C  F03F    	movff	plusw1,btemp+10
 14192  01651A  0EFD               	movlw	-3
 14193  01651C  006F FF8C  F040    	movff	plusw1,btemp+11
 14194  016522  0E18               	movlw	24
 14195  016524  D005               	goto	u5170
 14196  016526                     u5175:
 14197  016526  90D8               	bcf	status,0,c
 14198  016528  3240               	rrcf	(btemp+11)^0,f,c
 14199  01652A  323F               	rrcf	(btemp+10)^0,f,c
 14200  01652C  323E               	rrcf	(btemp+9)^0,f,c
 14201  01652E  323D               	rrcf	(btemp+8)^0,f,c
 14202  016530                     u5170:
 14203  016530  2EE8               	decfsz	wreg,f,c
 14204  016532  D7F9               	goto	u5175
 14205  016534  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 14206  01653A  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 14207  016540  0EFF               	movlw	255
 14208  016542  163B               	andwf	(btemp+6)^0,f,c
 14209  016544  0E00               	movlw	0
 14210  016546  163C               	andwf	(btemp+7)^0,f,c
 14211                           
 14212                           ;stkvar	_e @ sp[(-6)+4]
 14213  016548  0EFE               	movlw	-2
 14214  01654A  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14215  016550  0EFF               	movlw	-1
 14216  016552  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14217                           
 14218                           ;stkvar	_e @ sp[(-6)+4]
 14219  016558  0EFE               	movlw	-2
 14220  01655A  006F FF8C  F035    	movff	plusw1,btemp
 14221  016560  0EFF               	movlw	-1
 14222  016562  50E3               	movf	plusw1,w,c
 14223  016564  1035               	iorwf	btemp^0,w,c
 14224  016566  A4D8               	btfss	status,2,c
 14225  016568  D023               	goto	l6404
 14226                           
 14227                           ;stkvar	_u @ sp[(-6)+0]
 14228  01656A  0EFA               	movlw	-6
 14229  01656C  006F FF8C  F03D    	movff	plusw1,btemp+8
 14230  016572  0EFB               	movlw	-5
 14231  016574  006F FF8C  F03E    	movff	plusw1,btemp+9
 14232  01657A  0EFC               	movlw	-4
 14233  01657C  006F FF8C  F03F    	movff	plusw1,btemp+10
 14234  016582  0EFD               	movlw	-3
 14235  016584  006F FF8C  F040    	movff	plusw1,btemp+11
 14236  01658A  90D8               	bcf	status,0,c
 14237  01658C  343D               	rlcf	(btemp+8)^0,w,c
 14238  01658E  6E39               	movwf	(btemp+4)^0,c
 14239  016590  343E               	rlcf	(btemp+9)^0,w,c
 14240  016592  6E3A               	movwf	(btemp+5)^0,c
 14241  016594  343F               	rlcf	(btemp+10)^0,w,c
 14242  016596  6E3B               	movwf	(btemp+6)^0,c
 14243  016598  3440               	rlcf	(btemp+11)^0,w,c
 14244  01659A  6E3C               	movwf	(btemp+7)^0,c
 14245  01659C  5039               	movf	(btemp+4)^0,w,c
 14246  01659E  103A               	iorwf	(btemp+5)^0,w,c
 14247  0165A0  103B               	iorwf	(btemp+6)^0,w,c
 14248  0165A2  103C               	iorwf	(btemp+7)^0,w,c
 14249  0165A4  A4D8               	btfss	status,2,c
 14250  0165A6  D002               	goto	l6400
 14251  0165A8  0E02               	movlw	2
 14252  0165AA  D02E               	goto	L16
 14253  0165AC                     l6400:
 14254  0165AC  0E03               	movlw	3
 14255  0165AE  D02C               	goto	L16
 14256  0165B0                     l6404:
 14257                           
 14258                           ;stkvar	_e @ sp[(-6)+4]
 14259  0165B0  0EFE               	movlw	-2
 14260  0165B2  28E3               	incf	plusw1,w,c
 14261  0165B4  E128               	bnz	l6410
 14262  0165B6  0EFF               	movlw	-1
 14263  0165B8  50E3               	movf	plusw1,w,c
 14264  0165BA  A4D8               	btfss	status,2,c
 14265  0165BC  D024               	goto	l6410
 14266                           
 14267                           ;stkvar	_u @ sp[(-6)+0]
 14268  0165BE  0EFA               	movlw	-6
 14269  0165C0  006F FF8C  F03D    	movff	plusw1,btemp+8
 14270  0165C6  0EFB               	movlw	-5
 14271  0165C8  006F FF8C  F03E    	movff	plusw1,btemp+9
 14272  0165CE  0EFC               	movlw	-4
 14273  0165D0  006F FF8C  F03F    	movff	plusw1,btemp+10
 14274  0165D6  0EFD               	movlw	-3
 14275  0165D8  006F FF8C  F040    	movff	plusw1,btemp+11
 14276  0165DE  0E09               	movlw	9
 14277  0165E0                     u5215:
 14278  0165E0  90D8               	bcf	status,0,c
 14279  0165E2  363D               	rlcf	(btemp+8)^0,f,c
 14280  0165E4  363E               	rlcf	(btemp+9)^0,f,c
 14281  0165E6  363F               	rlcf	(btemp+10)^0,f,c
 14282  0165E8  3640               	rlcf	(btemp+11)^0,f,c
 14283  0165EA  2EE8               	decfsz	wreg,f,c
 14284  0165EC  D7F9               	goto	u5215
 14285  0165EE  503D               	movf	(btemp+8)^0,w,c
 14286  0165F0  103E               	iorwf	(btemp+9)^0,w,c
 14287  0165F2  103F               	iorwf	(btemp+10)^0,w,c
 14288  0165F4  1040               	iorwf	(btemp+11)^0,w,c
 14289  0165F6  A4D8               	btfss	status,2,c
 14290  0165F8  D002               	goto	u5220
 14291  0165FA  0E01               	movlw	1
 14292  0165FC  D001               	goto	u5230
 14293  0165FE                     u5220:
 14294  0165FE  0E00               	movlw	0
 14295  016600                     u5230:
 14296  016600  6E35               	movwf	btemp^0,c
 14297  016602  6A36               	clrf	(btemp+1)^0,c
 14298  016604  D004               	goto	l2692
 14299  016606                     l6410:
 14300  016606  0E04               	movlw	4
 14301  016608                     L16:
 14302  016608  6E35               	movwf	btemp^0,c
 14303  01660A  0E00               	movlw	0
 14304  01660C  6E36               	movwf	(btemp+1)^0,c
 14305  01660E                     l2692:
 14306                           
 14307                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14308  01660E  0EF6               	movlw	246
 14309  016610  26E1               	addwf	fsr1l,f,c
 14310  016612  0EFF               	movlw	255
 14311  016614  22E2               	addwfc	fsr1h,f,c
 14312  016616  0012               	return		;funcret
 14313  016618                     __end_of___fpclassifyf:
 14314                           	opt callstack 0
 14315                           
 14316 ;; *************** function ___fltol *****************
 14317 ;; Defined at:
 14318 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  f1              4  [STACK] int 
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;  exp1            1  [STACK] unsigned char 
 14323 ;;  sign1           1  [STACK] unsigned char 
 14324 ;; Return value:  Size  Location     Type
 14325 ;;                  4  [STACK] long 
 14326 ;; Registers used:
 14327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14328 ;; Tracked objects:
 14329 ;;		On entry : 0/4
 14330 ;;		On exit  : 0/0
 14331 ;;		Unchanged: 0/0
 14332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14337 ;;Total ram usage:        0 bytes
 14338 ;; Hardware stack levels used:    1
 14339 ;; Hardware stack levels required when called:    6
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_efgtoa
 14344 ;; This function uses a reentrant model
 14345 ;;
 14346                           
 14347                           	psect	text51
 14348  016798                     __ptext51:
 14349                           	opt callstack 0
 14350  016798                     ___fltol:
 14351                           	opt callstack 0
 14352                           
 14353                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14354  016798  52E6               	movf	postinc1,f,c
 14355  01679A  52E6               	movf	postinc1,f,c
 14356                           
 14357                           ;stkvar	_f1 @ sp[(-2)+-4]
 14358                           
 14359                           ;incstack = 0
 14360  01679C  0EFA               	movlw	-6
 14361  01679E  006F FF8C  F03D    	movff	plusw1,btemp+8
 14362  0167A4  0EFB               	movlw	-5
 14363  0167A6  006F FF8C  F03E    	movff	plusw1,btemp+9
 14364  0167AC  0EFC               	movlw	-4
 14365  0167AE  006F FF8C  F03F    	movff	plusw1,btemp+10
 14366  0167B4  0EFD               	movlw	-3
 14367  0167B6  006F FF8C  F040    	movff	plusw1,btemp+11
 14368  0167BC  0E18               	movlw	24
 14369  0167BE  D005               	goto	u6380
 14370  0167C0                     u6385:
 14371  0167C0  90D8               	bcf	status,0,c
 14372  0167C2  3240               	rrcf	(btemp+11)^0,f,c
 14373  0167C4  323F               	rrcf	(btemp+10)^0,f,c
 14374  0167C6  323E               	rrcf	(btemp+9)^0,f,c
 14375  0167C8  323D               	rrcf	(btemp+8)^0,f,c
 14376  0167CA                     u6380:
 14377  0167CA  2EE8               	decfsz	wreg,f,c
 14378  0167CC  D7F9               	goto	u6385
 14379                           
 14380                           ;stkvar	_exp1 @ sp[(-2)+0]
 14381  0167CE  0EFE               	movlw	-2
 14382  0167D0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14383  0167D6  0EFE               	movlw	-2
 14384  0167D8  50E3               	movf	plusw1,w,c
 14385  0167DA  A4D8               	btfss	status,2,c
 14386  0167DC  D006               	goto	l7030
 14387  0167DE                     u6390:
 14388  0167DE  0E00               	movlw	0
 14389  0167E0  6E35               	movwf	btemp^0,c
 14390  0167E2  6A36               	clrf	(btemp+1)^0,c
 14391  0167E4  6A37               	clrf	(btemp+2)^0,c
 14392  0167E6  6A38               	clrf	(btemp+3)^0,c
 14393  0167E8  D08B               	goto	l2308
 14394  0167EA                     l7030:
 14395                           
 14396                           ;stkvar	_f1 @ sp[(-2)+-4]
 14397  0167EA  0EFA               	movlw	-6
 14398  0167EC  006F FF8C  F03D    	movff	plusw1,btemp+8
 14399  0167F2  0EFB               	movlw	-5
 14400  0167F4  006F FF8C  F03E    	movff	plusw1,btemp+9
 14401  0167FA  0EFC               	movlw	-4
 14402  0167FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 14403  016802  0EFD               	movlw	-3
 14404  016804  006F FF8C  F040    	movff	plusw1,btemp+11
 14405  01680A  0E20               	movlw	32
 14406  01680C  D005               	goto	u6400
 14407  01680E                     u6405:
 14408  01680E  90D8               	bcf	status,0,c
 14409  016810  3240               	rrcf	(btemp+11)^0,f,c
 14410  016812  323F               	rrcf	(btemp+10)^0,f,c
 14411  016814  323E               	rrcf	(btemp+9)^0,f,c
 14412  016816  323D               	rrcf	(btemp+8)^0,f,c
 14413  016818                     u6400:
 14414  016818  2EE8               	decfsz	wreg,f,c
 14415  01681A  D7F9               	goto	u6405
 14416                           
 14417                           ;stkvar	_sign1 @ sp[(-2)+1]
 14418  01681C  0EFF               	movlw	-1
 14419  01681E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14420                           
 14421                           ;stkvar	_f1 @ sp[(-2)+-4]
 14422  016824  0EFC               	movlw	-4
 14423  016826  8EE3               	bsf	plusw1,7,c
 14424                           
 14425                           ;stkvar	_f1 @ sp[(-2)+-4]
 14426  016828  50E1               	movf	fsr1l,w,c
 14427  01682A  0FFA               	addlw	-6
 14428  01682C  6ED9               	movwf	fsr2l,c
 14429  01682E  50E2               	movf	fsr1h,w,c
 14430  016830  6EDA               	movwf	fsr2h,c
 14431  016832  0EFF               	movlw	255
 14432  016834  22DA               	addwfc	fsr2h,f,c
 14433  016836  0EFF               	movlw	255
 14434  016838  16DE               	andwf	postinc2,f,c
 14435  01683A  0EFF               	movlw	255
 14436  01683C  16DE               	andwf	postinc2,f,c
 14437  01683E  0EFF               	movlw	255
 14438  016840  16DE               	andwf	postinc2,f,c
 14439  016842  0E00               	movlw	0
 14440  016844  16DE               	andwf	postinc2,f,c
 14441                           
 14442                           ;stkvar	_exp1 @ sp[(-2)+0]
 14443  016846  0EFE               	movlw	-2
 14444  016848  006F FF8C  F035    	movff	plusw1,btemp
 14445  01684E  0E96               	movlw	150
 14446  016850  5E35               	subwf	btemp^0,f,c
 14447  016852  0EFE               	movlw	-2
 14448  016854  0060  F0D7  FFE3   	movff	btemp,plusw1
 14449                           
 14450                           ;stkvar	_exp1 @ sp[(-2)+0]
 14451  01685A  0EFE               	movlw	-2
 14452  01685C  AEE3               	btfss	plusw1,7,c
 14453  01685E  D014               	goto	l7048
 14454                           
 14455                           ;stkvar	_exp1 @ sp[(-2)+0]
 14456  016860  0EFE               	movlw	-2
 14457  016862  50E3               	movf	plusw1,w,c
 14458  016864  0A80               	xorlw	128
 14459  016866  0F97               	addlw	151
 14460  016868  A0D8               	btfss	status,0,c
 14461  01686A  D7B9               	goto	u6390
 14462  01686C                     l7046:
 14463                           
 14464                           ;stkvar	_f1 @ sp[(-2)+-4]
 14465  01686C  90D8               	bcf	status,0,c
 14466  01686E  0EFD               	movlw	-3
 14467  016870  32E3               	rrcf	plusw1,f,c
 14468  016872  0EFC               	movlw	-4
 14469  016874  32E3               	rrcf	plusw1,f,c
 14470  016876  0EFB               	movlw	-5
 14471  016878  32E3               	rrcf	plusw1,f,c
 14472  01687A  0EFA               	movlw	-6
 14473  01687C  32E3               	rrcf	plusw1,f,c
 14474                           
 14475                           ;stkvar	_exp1 @ sp[(-2)+0]
 14476  01687E  0EFE               	movlw	-2
 14477  016880  2AE3               	incf	plusw1,f,c
 14478  016882  B4D8               	btfsc	status,2,c
 14479  016884  D018               	goto	u6450
 14480  016886  D7F2               	goto	l7046
 14481  016888                     l7048:
 14482                           
 14483                           ;stkvar	_exp1 @ sp[(-2)+0]
 14484  016888  0EFE               	movlw	-2
 14485  01688A  006F FF8C  F035    	movff	plusw1,btemp
 14486  016890  0E1F               	movlw	31
 14487  016892  6435               	cpfsgt	btemp^0,c
 14488  016894  D00C               	goto	l7056
 14489  016896  D7A3               	goto	u6390
 14490  016898                     l7054:
 14491                           
 14492                           ;stkvar	_f1 @ sp[(-2)+-4]
 14493  016898  90D8               	bcf	status,0,c
 14494  01689A  0EFA               	movlw	-6
 14495  01689C  36E3               	rlcf	plusw1,f,c
 14496  01689E  0EFB               	movlw	-5
 14497  0168A0  36E3               	rlcf	plusw1,f,c
 14498  0168A2  0EFC               	movlw	-4
 14499  0168A4  36E3               	rlcf	plusw1,f,c
 14500  0168A6  0EFD               	movlw	-3
 14501  0168A8  36E3               	rlcf	plusw1,f,c
 14502                           
 14503                           ;stkvar	_exp1 @ sp[(-2)+0]
 14504  0168AA  0EFE               	movlw	-2
 14505  0168AC  06E3               	decf	plusw1,f,c
 14506  0168AE                     l7056:
 14507                           
 14508                           ;stkvar	_exp1 @ sp[(-2)+0]
 14509  0168AE  0EFE               	movlw	-2
 14510  0168B0  50E3               	movf	plusw1,w,c
 14511  0168B2  A4D8               	btfss	status,2,c
 14512  0168B4  D7F1               	goto	l7054
 14513  0168B6                     u6450:
 14514                           
 14515                           ;stkvar	_sign1 @ sp[(-2)+1]
 14516  0168B6  0EFF               	movlw	-1
 14517  0168B8  50E3               	movf	plusw1,w,c
 14518  0168BA  B4D8               	btfsc	status,2,c
 14519  0168BC  D011               	goto	u6470
 14520                           
 14521                           ;stkvar	_f1 @ sp[(-2)+-4]
 14522                           ;stkvar	_f1 @ sp[(-2)+-4]
 14523  0168BE  0EFA               	movlw	-6
 14524  0168C0  6CE3               	negf	plusw1,c
 14525  0168C2  0EFB               	movlw	-5
 14526  0168C4  1EE3               	comf	plusw1,f,c
 14527  0168C6  0EFC               	movlw	-4
 14528  0168C8  1EE3               	comf	plusw1,f,c
 14529  0168CA  0EFD               	movlw	-3
 14530  0168CC  1EE3               	comf	plusw1,f,c
 14531  0168CE  E308               	bnc	u6470
 14532  0168D0  0EFB               	movlw	-5
 14533  0168D2  2AE3               	incf	plusw1,f,c
 14534  0168D4  E305               	bnc	u6470
 14535  0168D6  0EFC               	movlw	-4
 14536  0168D8  2AE3               	incf	plusw1,f,c
 14537  0168DA  E302               	bnc	u6470
 14538  0168DC  0EFD               	movlw	-3
 14539  0168DE  2AE3               	incf	plusw1,f,c
 14540  0168E0                     u6470:
 14541                           
 14542                           ;stkvar	_f1 @ sp[(-2)+-4]
 14543  0168E0  0EFA               	movlw	-6
 14544  0168E2  006F FF8C  F035    	movff	plusw1,btemp
 14545  0168E8  0EFB               	movlw	-5
 14546  0168EA  006F FF8C  F036    	movff	plusw1,btemp+1
 14547  0168F0  0EFC               	movlw	-4
 14548  0168F2  006F FF8C  F037    	movff	plusw1,btemp+2
 14549  0168F8  0EFD               	movlw	-3
 14550  0168FA  006F FF8C  F038    	movff	plusw1,btemp+3
 14551  016900                     l2308:
 14552                           
 14553                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14554  016900  0EFA               	movlw	250
 14555  016902  26E1               	addwf	fsr1l,f,c
 14556  016904  0EFF               	movlw	255
 14557  016906  22E2               	addwfc	fsr1h,f,c
 14558  016908  0012               	return		;funcret
 14559  01690A                     __end_of___fltol:
 14560                           	opt callstack 0
 14561                           
 14562 ;; *************** function ___flsub *****************
 14563 ;; Defined at:
 14564 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  b               4  [STACK] long 
 14567 ;;  a               4  [STACK] long 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  4  [STACK] long 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/4
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    7
 14586 ;; This function calls:
 14587 ;;		___fladd
 14588 ;; This function is called by:
 14589 ;;		_conv_raw_result
 14590 ;;		_lp_filter
 14591 ;;		_efgtoa
 14592 ;; This function uses a reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text52
 14596  018418                     __ptext52:
 14597                           	opt callstack 0
 14598  018418                     ___flsub:
 14599                           	opt callstack 16
 14600                           
 14601                           ;stkvar	_a @ sp[(0)+-8]
 14602                           
 14603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14604                           ;incstack = 0
 14605  018418  0EFB               	movlw	-5
 14606  01841A  7EE3               	btg	plusw1,7,c
 14607                           
 14608                           ;stkvar	_a @ sp[(0)+-8]
 14609  01841C  0EF8               	movlw	-8
 14610  01841E  006F FF8F FFE6     	movff	plusw1,postinc1
 14611  018424  006F FF8F FFE6     	movff	plusw1,postinc1
 14612  01842A  006F FF8F FFE6     	movff	plusw1,postinc1
 14613  018430  006F FF8F FFE6     	movff	plusw1,postinc1
 14614                           
 14615                           ;stkvar	_b @ sp[(-4)+-4]
 14616  018436  0EF8               	movlw	-8
 14617  018438  006F FF8F FFE6     	movff	plusw1,postinc1
 14618  01843E  006F FF8F FFE6     	movff	plusw1,postinc1
 14619  018444  006F FF8F FFE6     	movff	plusw1,postinc1
 14620  01844A  006F FF8F FFE6     	movff	plusw1,postinc1
 14621  018450  EC0D  F095         	call	___fladd	;wreg free
 14622                           
 14623                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14624  018454  0EF8               	movlw	248
 14625  018456  26E1               	addwf	fsr1l,f,c
 14626  018458  0EFF               	movlw	255
 14627  01845A  22E2               	addwfc	fsr1h,f,c
 14628  01845C  0012               	return		;funcret
 14629  01845E                     __end_of___flsub:
 14630                           	opt callstack 0
 14631                           
 14632 ;; *************** function ___fladd *****************
 14633 ;; Defined at:
 14634 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  b               4  [STACK] long 
 14637 ;;  a               4  [STACK] long 
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;  grs             1  [STACK] unsigned char 
 14640 ;;  bexp            1  [STACK] unsigned char 
 14641 ;;  aexp            1  [STACK] unsigned char 
 14642 ;;  signs           1  [STACK] unsigned char 
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  4  [STACK] unsigned char 
 14645 ;; Registers used:
 14646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/4
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14656 ;;Total ram usage:        0 bytes
 14657 ;; Hardware stack levels used:    1
 14658 ;; Hardware stack levels required when called:    6
 14659 ;; This function calls:
 14660 ;;		Nothing
 14661 ;; This function is called by:
 14662 ;;		_lp_filter
 14663 ;;		_efgtoa
 14664 ;;		___flsub
 14665 ;; This function uses a reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text53
 14669  012A1A                     __ptext53:
 14670                           	opt callstack 0
 14671  012A1A                     ___fladd:
 14672                           	opt callstack 0
 14673                           
 14674                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14675  012A1A  52E6               	movf	postinc1,f,c
 14676  012A1C  52E6               	movf	postinc1,f,c
 14677  012A1E  52E6               	movf	postinc1,f,c
 14678  012A20  52E6               	movf	postinc1,f,c
 14679                           
 14680                           ;stkvar	_b @ sp[(-4)+-4]
 14681                           
 14682                           ;incstack = 0
 14683  012A22  0EFB               	movlw	251
 14684  012A24  24E1               	addwf	fsr1l,w,c
 14685  012A26  6ED9               	movwf	fsr2l,c
 14686  012A28  0EFF               	movlw	255
 14687  012A2A  20E2               	addwfc	fsr1h,w,c
 14688  012A2C  6EDA               	movwf	fsr2h,c
 14689  012A2E  50DF               	movf	indf2,w,c
 14690  012A30  6E40               	movwf	(btemp+11)^0,c
 14691  012A32  0E80               	movlw	128
 14692  012A34  1640               	andwf	(btemp+11)^0,f,c
 14693                           
 14694                           ;stkvar	_signs @ sp[(-4)+3]
 14695  012A36  0EFF               	movlw	-1
 14696  012A38  0060  F103  FFE3   	movff	btemp+11,plusw1
 14697                           
 14698                           ;stkvar	_b @ sp[(-4)+-4]
 14699  012A3E  0EFB               	movlw	251
 14700  012A40  24E1               	addwf	fsr1l,w,c
 14701  012A42  6ED9               	movwf	fsr2l,c
 14702  012A44  0EFF               	movlw	255
 14703  012A46  20E2               	addwfc	fsr1h,w,c
 14704  012A48  6EDA               	movwf	fsr2h,c
 14705  012A4A  50DF               	movf	indf2,w,c
 14706  012A4C  6E40               	movwf	(btemp+11)^0,c
 14707  012A4E  90D8               	bcf	status,0,c
 14708  012A50  3440               	rlcf	(btemp+11)^0,w,c
 14709  012A52  6E3F               	movwf	(btemp+10)^0,c
 14710                           
 14711                           ;stkvar	_bexp @ sp[(-4)+1]
 14712  012A54  0EFD               	movlw	-3
 14713  012A56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14714                           
 14715                           ;stkvar	_b @ sp[(-4)+-4]
 14716  012A5C  0EFA               	movlw	250
 14717  012A5E  24E1               	addwf	fsr1l,w,c
 14718  012A60  6ED9               	movwf	fsr2l,c
 14719  012A62  0EFF               	movlw	255
 14720  012A64  20E2               	addwfc	fsr1h,w,c
 14721  012A66  6EDA               	movwf	fsr2h,c
 14722  012A68  AEDF               	btfss	indf2,7,c
 14723  012A6A  D002               	goto	l6144
 14724                           
 14725                           ;stkvar	_bexp @ sp[(-4)+1]
 14726  012A6C  0EFD               	movlw	-3
 14727  012A6E  80E3               	bsf	plusw1,0,c
 14728  012A70                     l6144:
 14729                           
 14730                           ;stkvar	_bexp @ sp[(-4)+1]
 14731  012A70  0EFD               	movlw	-3
 14732  012A72  50E3               	movf	plusw1,w,c
 14733  012A74  B4D8               	btfsc	status,2,c
 14734  012A76  D027               	goto	l6154
 14735                           
 14736                           ;stkvar	_bexp @ sp[(-4)+1]
 14737  012A78  0EFD               	movlw	-3
 14738  012A7A  28E3               	incf	plusw1,w,c
 14739  012A7C  A4D8               	btfss	status,2,c
 14740  012A7E  D018               	goto	l6150
 14741  012A80  0E00               	movlw	0
 14742  012A82  6E3D               	movwf	(btemp+8)^0,c
 14743  012A84  0E00               	movlw	0
 14744  012A86  6E3E               	movwf	(btemp+9)^0,c
 14745  012A88  0E00               	movlw	0
 14746  012A8A  6E3F               	movwf	(btemp+10)^0,c
 14747  012A8C  0E00               	movlw	0
 14748  012A8E  6E40               	movwf	(btemp+11)^0,c
 14749                           
 14750                           ;stkvar	_b @ sp[(-4)+-4]
 14751  012A90  0EF8               	movlw	-8
 14752  012A92  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14753  012A98  0EF9               	movlw	-7
 14754  012A9A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14755  012AA0  0EFA               	movlw	-6
 14756  012AA2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14757  012AA8  0EFB               	movlw	-5
 14758  012AAA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14759  012AB0                     l6150:
 14760                           
 14761                           ;stkvar	_b @ sp[(-4)+-4]
 14762  012AB0  0EFA               	movlw	-6
 14763  012AB2  8EE3               	bsf	plusw1,7,c
 14764                           
 14765                           ;stkvar	_b @ sp[(-4)+-4]
 14766  012AB4  0EFB               	movlw	251
 14767  012AB6  24E1               	addwf	fsr1l,w,c
 14768  012AB8  6ED9               	movwf	fsr2l,c
 14769  012ABA  0EFF               	movlw	255
 14770  012ABC  20E2               	addwfc	fsr1h,w,c
 14771  012ABE  6EDA               	movwf	fsr2h,c
 14772  012AC0  0E00               	movlw	0
 14773  012AC2  6EDF               	movwf	indf2,c
 14774  012AC4  D018               	goto	l6156
 14775  012AC6                     l6154:
 14776  012AC6  0E00               	movlw	0
 14777  012AC8  6E3D               	movwf	(btemp+8)^0,c
 14778  012ACA  0E00               	movlw	0
 14779  012ACC  6E3E               	movwf	(btemp+9)^0,c
 14780  012ACE  0E00               	movlw	0
 14781  012AD0  6E3F               	movwf	(btemp+10)^0,c
 14782  012AD2  0E00               	movlw	0
 14783  012AD4  6E40               	movwf	(btemp+11)^0,c
 14784                           
 14785                           ;stkvar	_b @ sp[(-4)+-4]
 14786  012AD6  0EF8               	movlw	-8
 14787  012AD8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14788  012ADE  0EF9               	movlw	-7
 14789  012AE0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14790  012AE6  0EFA               	movlw	-6
 14791  012AE8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14792  012AEE  0EFB               	movlw	-5
 14793  012AF0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14794  012AF6                     l6156:
 14795                           
 14796                           ;stkvar	_a @ sp[(-4)+-8]
 14797  012AF6  0EF7               	movlw	247
 14798  012AF8  24E1               	addwf	fsr1l,w,c
 14799  012AFA  6ED9               	movwf	fsr2l,c
 14800  012AFC  0EFF               	movlw	255
 14801  012AFE  20E2               	addwfc	fsr1h,w,c
 14802  012B00  6EDA               	movwf	fsr2h,c
 14803  012B02  50DF               	movf	indf2,w,c
 14804  012B04  6E40               	movwf	(btemp+11)^0,c
 14805  012B06  0E80               	movlw	128
 14806  012B08  1640               	andwf	(btemp+11)^0,f,c
 14807                           
 14808                           ;stkvar	_aexp @ sp[(-4)+2]
 14809  012B0A  0EFE               	movlw	-2
 14810  012B0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 14811                           
 14812                           ;stkvar	_signs @ sp[(-4)+3]
 14813                           ;stkvar	_aexp @ sp[(-4)+2]
 14814  012B12  50E1               	movf	fsr1l,w,c
 14815  012B14  0FFE               	addlw	-2
 14816  012B16  6ED9               	movwf	fsr2l,c
 14817  012B18  50E2               	movf	fsr1h,w,c
 14818  012B1A  6EDA               	movwf	fsr2h,c
 14819  012B1C  0EFF               	movlw	255
 14820  012B1E  22DA               	addwfc	fsr2h,f,c
 14821  012B20  0EFF               	movlw	-1
 14822  012B22  50E3               	movf	plusw1,w,c
 14823  012B24  18DE               	xorwf	postinc2,w,c
 14824  012B26  B4D8               	btfsc	status,2,c
 14825  012B28  D002               	goto	l6162
 14826                           
 14827                           ;stkvar	_signs @ sp[(-4)+3]
 14828  012B2A  0EFF               	movlw	-1
 14829  012B2C  8CE3               	bsf	plusw1,6,c
 14830  012B2E                     l6162:
 14831                           
 14832                           ;stkvar	_a @ sp[(-4)+-8]
 14833  012B2E  0EF7               	movlw	247
 14834  012B30  24E1               	addwf	fsr1l,w,c
 14835  012B32  6ED9               	movwf	fsr2l,c
 14836  012B34  0EFF               	movlw	255
 14837  012B36  20E2               	addwfc	fsr1h,w,c
 14838  012B38  6EDA               	movwf	fsr2h,c
 14839  012B3A  50DF               	movf	indf2,w,c
 14840  012B3C  6E40               	movwf	(btemp+11)^0,c
 14841  012B3E  90D8               	bcf	status,0,c
 14842  012B40  3440               	rlcf	(btemp+11)^0,w,c
 14843  012B42  6E3F               	movwf	(btemp+10)^0,c
 14844                           
 14845                           ;stkvar	_aexp @ sp[(-4)+2]
 14846  012B44  0EFE               	movlw	-2
 14847  012B46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14848                           
 14849                           ;stkvar	_a @ sp[(-4)+-8]
 14850  012B4C  0EF6               	movlw	246
 14851  012B4E  24E1               	addwf	fsr1l,w,c
 14852  012B50  6ED9               	movwf	fsr2l,c
 14853  012B52  0EFF               	movlw	255
 14854  012B54  20E2               	addwfc	fsr1h,w,c
 14855  012B56  6EDA               	movwf	fsr2h,c
 14856  012B58  AEDF               	btfss	indf2,7,c
 14857  012B5A  D002               	goto	l6168
 14858                           
 14859                           ;stkvar	_aexp @ sp[(-4)+2]
 14860  012B5C  0EFE               	movlw	-2
 14861  012B5E  80E3               	bsf	plusw1,0,c
 14862  012B60                     l6168:
 14863                           
 14864                           ;stkvar	_aexp @ sp[(-4)+2]
 14865  012B60  0EFE               	movlw	-2
 14866  012B62  50E3               	movf	plusw1,w,c
 14867  012B64  B4D8               	btfsc	status,2,c
 14868  012B66  D027               	goto	l6178
 14869                           
 14870                           ;stkvar	_aexp @ sp[(-4)+2]
 14871  012B68  0EFE               	movlw	-2
 14872  012B6A  28E3               	incf	plusw1,w,c
 14873  012B6C  A4D8               	btfss	status,2,c
 14874  012B6E  D018               	goto	l6174
 14875  012B70  0E00               	movlw	0
 14876  012B72  6E3D               	movwf	(btemp+8)^0,c
 14877  012B74  0E00               	movlw	0
 14878  012B76  6E3E               	movwf	(btemp+9)^0,c
 14879  012B78  0E00               	movlw	0
 14880  012B7A  6E3F               	movwf	(btemp+10)^0,c
 14881  012B7C  0E00               	movlw	0
 14882  012B7E  6E40               	movwf	(btemp+11)^0,c
 14883                           
 14884                           ;stkvar	_a @ sp[(-4)+-8]
 14885  012B80  0EF4               	movlw	-12
 14886  012B82  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14887  012B88  0EF5               	movlw	-11
 14888  012B8A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14889  012B90  0EF6               	movlw	-10
 14890  012B92  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14891  012B98  0EF7               	movlw	-9
 14892  012B9A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14893  012BA0                     l6174:
 14894                           
 14895                           ;stkvar	_a @ sp[(-4)+-8]
 14896  012BA0  0EF6               	movlw	-10
 14897  012BA2  8EE3               	bsf	plusw1,7,c
 14898                           
 14899                           ;stkvar	_a @ sp[(-4)+-8]
 14900  012BA4  0EF7               	movlw	247
 14901  012BA6  24E1               	addwf	fsr1l,w,c
 14902  012BA8  6ED9               	movwf	fsr2l,c
 14903  012BAA  0EFF               	movlw	255
 14904  012BAC  20E2               	addwfc	fsr1h,w,c
 14905  012BAE  6EDA               	movwf	fsr2h,c
 14906  012BB0  0E00               	movlw	0
 14907  012BB2  6EDF               	movwf	indf2,c
 14908  012BB4  D018               	goto	l6180
 14909  012BB6                     l6178:
 14910  012BB6  0E00               	movlw	0
 14911  012BB8  6E3D               	movwf	(btemp+8)^0,c
 14912  012BBA  0E00               	movlw	0
 14913  012BBC  6E3E               	movwf	(btemp+9)^0,c
 14914  012BBE  0E00               	movlw	0
 14915  012BC0  6E3F               	movwf	(btemp+10)^0,c
 14916  012BC2  0E00               	movlw	0
 14917  012BC4  6E40               	movwf	(btemp+11)^0,c
 14918                           
 14919                           ;stkvar	_a @ sp[(-4)+-8]
 14920  012BC6  0EF4               	movlw	-12
 14921  012BC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14922  012BCE  0EF5               	movlw	-11
 14923  012BD0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14924  012BD6  0EF6               	movlw	-10
 14925  012BD8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14926  012BDE  0EF7               	movlw	-9
 14927  012BE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14928  012BE6                     l6180:
 14929                           
 14930                           ;stkvar	_bexp @ sp[(-4)+1]
 14931                           ;stkvar	_aexp @ sp[(-4)+2]
 14932  012BE6  50E1               	movf	fsr1l,w,c
 14933  012BE8  0FFE               	addlw	-2
 14934  012BEA  6ED9               	movwf	fsr2l,c
 14935  012BEC  50E2               	movf	fsr1h,w,c
 14936  012BEE  6EDA               	movwf	fsr2h,c
 14937  012BF0  0EFF               	movlw	255
 14938  012BF2  22DA               	addwfc	fsr2h,f,c
 14939  012BF4  0EFD               	movlw	-3
 14940  012BF6  50E3               	movf	plusw1,w,c
 14941  012BF8  5CDE               	subwf	postinc2,w,c
 14942  012BFA  B0D8               	btfsc	status,0,c
 14943  012BFC  D0A4               	goto	l6216
 14944                           
 14945                           ;stkvar	_signs @ sp[(-4)+3]
 14946  012BFE  0EFF               	movlw	-1
 14947  012C00  ACE3               	btfss	plusw1,6,c
 14948  012C02  D002               	goto	l6186
 14949                           
 14950                           ;stkvar	_signs @ sp[(-4)+3]
 14951  012C04  0EFF               	movlw	-1
 14952  012C06  7EE3               	btg	plusw1,7,c
 14953  012C08                     l6186:
 14954                           
 14955                           ;stkvar	_bexp @ sp[(-4)+1]
 14956                           ;stkvar	_grs @ sp[(-4)+0]
 14957  012C08  0EFD               	movlw	-3
 14958  012C0A  006F FF8C  F035    	movff	plusw1,btemp
 14959  012C10  0EFC               	movlw	-4
 14960  012C12  0060  F0D7  FFE3   	movff	btemp,plusw1
 14961                           
 14962                           ;stkvar	_aexp @ sp[(-4)+2]
 14963                           ;stkvar	_bexp @ sp[(-4)+1]
 14964  012C18  0EFE               	movlw	-2
 14965  012C1A  006F FF8C  F035    	movff	plusw1,btemp
 14966  012C20  0EFD               	movlw	-3
 14967  012C22  0060  F0D7  FFE3   	movff	btemp,plusw1
 14968                           
 14969                           ;stkvar	_grs @ sp[(-4)+0]
 14970                           ;stkvar	_aexp @ sp[(-4)+2]
 14971  012C28  0EFC               	movlw	-4
 14972  012C2A  006F FF8C  F035    	movff	plusw1,btemp
 14973  012C30  0EFE               	movlw	-2
 14974  012C32  0060  F0D7  FFE3   	movff	btemp,plusw1
 14975                           
 14976                           ;stkvar	_b @ sp[(-4)+-4]
 14977                           ;stkvar	_grs @ sp[(-4)+0]
 14978  012C38  0EF8               	movlw	-8
 14979  012C3A  006F FF8C  F035    	movff	plusw1,btemp
 14980  012C40  0EFC               	movlw	-4
 14981  012C42  0060  F0D7  FFE3   	movff	btemp,plusw1
 14982                           
 14983                           ;stkvar	_a @ sp[(-4)+-8]
 14984                           ;stkvar	_b @ sp[(-4)+-4]
 14985  012C48  0EF4               	movlw	-12
 14986  012C4A  006F FF8C  F035    	movff	plusw1,btemp
 14987  012C50  0EF8               	movlw	-8
 14988  012C52  0060  F0D7  FFE3   	movff	btemp,plusw1
 14989                           
 14990                           ;stkvar	_grs @ sp[(-4)+0]
 14991                           ;stkvar	_a @ sp[(-4)+-8]
 14992  012C58  0EFC               	movlw	-4
 14993  012C5A  006F FF8C  F035    	movff	plusw1,btemp
 14994  012C60  0EF4               	movlw	-12
 14995  012C62  0060  F0D7  FFE3   	movff	btemp,plusw1
 14996                           
 14997                           ;stkvar	_b @ sp[(-4)+-4]
 14998  012C68  0EF9               	movlw	249
 14999  012C6A  24E1               	addwf	fsr1l,w,c
 15000  012C6C  6ED9               	movwf	fsr2l,c
 15001  012C6E  0EFF               	movlw	255
 15002  012C70  20E2               	addwfc	fsr1h,w,c
 15003  012C72  6EDA               	movwf	fsr2h,c
 15004  012C74  50DF               	movf	indf2,w,c
 15005  012C76  6E40               	movwf	(btemp+11)^0,c
 15006                           
 15007                           ;stkvar	_grs @ sp[(-4)+0]
 15008  012C78  0EFC               	movlw	-4
 15009  012C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 15010                           
 15011                           ;stkvar	_a @ sp[(-4)+-8]
 15012  012C80  0EF5               	movlw	245
 15013  012C82  24E1               	addwf	fsr1l,w,c
 15014  012C84  6ED9               	movwf	fsr2l,c
 15015  012C86  0EFF               	movlw	255
 15016  012C88  20E2               	addwfc	fsr1h,w,c
 15017  012C8A  6EDA               	movwf	fsr2h,c
 15018                           
 15019                           ;stkvar	_b @ sp[(-4)+-4]
 15020  012C8C  0EF9               	movlw	249
 15021  012C8E  24E1               	addwf	fsr1l,w,c
 15022  012C90  6EE9               	movwf	fsr0l,c
 15023  012C92  0EFF               	movlw	255
 15024  012C94  20E2               	addwfc	fsr1h,w,c
 15025  012C96  6EEA               	movwf	fsr0h,c
 15026  012C98  006F FF7F FFEF     	movff	indf2,indf0
 15027                           
 15028                           ;stkvar	_grs @ sp[(-4)+0]
 15029                           ;stkvar	_a @ sp[(-4)+-8]
 15030  012C9E  0EF5               	movlw	245
 15031  012CA0  24E1               	addwf	fsr1l,w,c
 15032  012CA2  6ED9               	movwf	fsr2l,c
 15033  012CA4  0EFF               	movlw	255
 15034  012CA6  20E2               	addwfc	fsr1h,w,c
 15035  012CA8  6EDA               	movwf	fsr2h,c
 15036  012CAA  0EFC               	movlw	-4
 15037  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 15038                           
 15039                           ;stkvar	_b @ sp[(-4)+-4]
 15040  012CB2  0EFA               	movlw	250
 15041  012CB4  24E1               	addwf	fsr1l,w,c
 15042  012CB6  6ED9               	movwf	fsr2l,c
 15043  012CB8  0EFF               	movlw	255
 15044  012CBA  20E2               	addwfc	fsr1h,w,c
 15045  012CBC  6EDA               	movwf	fsr2h,c
 15046  012CBE  50DF               	movf	indf2,w,c
 15047  012CC0  6E40               	movwf	(btemp+11)^0,c
 15048                           
 15049                           ;stkvar	_grs @ sp[(-4)+0]
 15050  012CC2  0EFC               	movlw	-4
 15051  012CC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 15052                           
 15053                           ;stkvar	_a @ sp[(-4)+-8]
 15054  012CCA  0EF6               	movlw	246
 15055  012CCC  24E1               	addwf	fsr1l,w,c
 15056  012CCE  6ED9               	movwf	fsr2l,c
 15057  012CD0  0EFF               	movlw	255
 15058  012CD2  20E2               	addwfc	fsr1h,w,c
 15059  012CD4  6EDA               	movwf	fsr2h,c
 15060                           
 15061                           ;stkvar	_b @ sp[(-4)+-4]
 15062  012CD6  0EFA               	movlw	250
 15063  012CD8  24E1               	addwf	fsr1l,w,c
 15064  012CDA  6EE9               	movwf	fsr0l,c
 15065  012CDC  0EFF               	movlw	255
 15066  012CDE  20E2               	addwfc	fsr1h,w,c
 15067  012CE0  6EEA               	movwf	fsr0h,c
 15068  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 15069                           
 15070                           ;stkvar	_grs @ sp[(-4)+0]
 15071                           ;stkvar	_a @ sp[(-4)+-8]
 15072  012CE8  0EF6               	movlw	246
 15073  012CEA  24E1               	addwf	fsr1l,w,c
 15074  012CEC  6ED9               	movwf	fsr2l,c
 15075  012CEE  0EFF               	movlw	255
 15076  012CF0  20E2               	addwfc	fsr1h,w,c
 15077  012CF2  6EDA               	movwf	fsr2h,c
 15078  012CF4  0EFC               	movlw	-4
 15079  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15080                           
 15081                           ;stkvar	_b @ sp[(-4)+-4]
 15082  012CFC  0EFB               	movlw	251
 15083  012CFE  24E1               	addwf	fsr1l,w,c
 15084  012D00  6ED9               	movwf	fsr2l,c
 15085  012D02  0EFF               	movlw	255
 15086  012D04  20E2               	addwfc	fsr1h,w,c
 15087  012D06  6EDA               	movwf	fsr2h,c
 15088  012D08  50DF               	movf	indf2,w,c
 15089  012D0A  6E40               	movwf	(btemp+11)^0,c
 15090                           
 15091                           ;stkvar	_grs @ sp[(-4)+0]
 15092  012D0C  0EFC               	movlw	-4
 15093  012D0E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15094                           
 15095                           ;stkvar	_a @ sp[(-4)+-8]
 15096  012D14  0EF7               	movlw	247
 15097  012D16  24E1               	addwf	fsr1l,w,c
 15098  012D18  6ED9               	movwf	fsr2l,c
 15099  012D1A  0EFF               	movlw	255
 15100  012D1C  20E2               	addwfc	fsr1h,w,c
 15101  012D1E  6EDA               	movwf	fsr2h,c
 15102                           
 15103                           ;stkvar	_b @ sp[(-4)+-4]
 15104  012D20  0EFB               	movlw	251
 15105  012D22  24E1               	addwf	fsr1l,w,c
 15106  012D24  6EE9               	movwf	fsr0l,c
 15107  012D26  0EFF               	movlw	255
 15108  012D28  20E2               	addwfc	fsr1h,w,c
 15109  012D2A  6EEA               	movwf	fsr0h,c
 15110  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15111                           
 15112                           ;stkvar	_grs @ sp[(-4)+0]
 15113                           ;stkvar	_a @ sp[(-4)+-8]
 15114  012D32  0EF7               	movlw	247
 15115  012D34  24E1               	addwf	fsr1l,w,c
 15116  012D36  6ED9               	movwf	fsr2l,c
 15117  012D38  0EFF               	movlw	255
 15118  012D3A  20E2               	addwfc	fsr1h,w,c
 15119  012D3C  6EDA               	movwf	fsr2h,c
 15120  012D3E  0EFC               	movlw	-4
 15121  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15122  012D46                     l6216:
 15123                           
 15124                           ;stkvar	_grs @ sp[(-4)+0]
 15125  012D46  0EFC               	movlw	-4
 15126  012D48  6AE3               	clrf	plusw1,c
 15127                           
 15128                           ;stkvar	_aexp @ sp[(-4)+2]
 15129  012D4A  0EFE               	movlw	-2
 15130  012D4C  50E3               	movf	plusw1,w,c
 15131  012D4E  6E3F               	movwf	(btemp+10)^0,c
 15132  012D50  6A40               	clrf	(btemp+11)^0,c
 15133                           
 15134                           ;stkvar	_bexp @ sp[(-4)+1]
 15135  012D52  0EFD               	movlw	-3
 15136  012D54  50E3               	movf	plusw1,w,c
 15137  012D56  5E3F               	subwf	(btemp+10)^0,f,c
 15138  012D58  0E00               	movlw	0
 15139  012D5A  5A40               	subwfb	(btemp+11)^0,f,c
 15140  012D5C  BE40               	btfsc	(btemp+11)^0,7,c
 15141  012D5E  D062               	goto	l6240
 15142  012D60  5040               	movf	(btemp+11)^0,w,c
 15143  012D62  E104               	bnz	u4770
 15144  012D64  0E1A               	movlw	26
 15145  012D66  5C3F               	subwf	(btemp+10)^0,w,c
 15146  012D68  A0D8               	btfss	status,0,c
 15147  012D6A  D05C               	goto	l6240
 15148  012D6C                     u4770:
 15149                           
 15150                           ;stkvar	_b @ sp[(-4)+-4]
 15151  012D6C  0EF8               	movlw	-8
 15152  012D6E  50E3               	movf	plusw1,w,c
 15153  012D70  E10A               	bnz	u4781
 15154  012D72  0EF9               	movlw	-7
 15155  012D74  50E3               	movf	plusw1,w,c
 15156  012D76  E107               	bnz	u4781
 15157  012D78  0EFA               	movlw	-6
 15158  012D7A  50E3               	movf	plusw1,w,c
 15159  012D7C  E104               	bnz	u4781
 15160  012D7E  0EFB               	movlw	-5
 15161  012D80  50E3               	movf	plusw1,w,c
 15162  012D82  B4D8               	btfsc	status,2,c
 15163  012D84  D003               	goto	u4780
 15164  012D86                     u4781:
 15165  012D86  6A40               	clrf	(btemp+11)^0,c
 15166  012D88  2A40               	incf	(btemp+11)^0,f,c
 15167  012D8A  D001               	goto	u4798
 15168  012D8C                     u4780:
 15169  012D8C  6A40               	clrf	(btemp+11)^0,c
 15170  012D8E                     u4798:
 15171                           
 15172                           ;stkvar	_grs @ sp[(-4)+0]
 15173  012D8E  0EFC               	movlw	-4
 15174  012D90  0060  F103  FFE3   	movff	btemp+11,plusw1
 15175                           
 15176                           ;stkvar	_b @ sp[(-4)+-4]
 15177  012D96  0EF8               	movlw	-8
 15178  012D98  6AE3               	clrf	plusw1,c
 15179  012D9A  0EF9               	movlw	-7
 15180  012D9C  6AE3               	clrf	plusw1,c
 15181  012D9E  0EFA               	movlw	-6
 15182  012DA0  6AE3               	clrf	plusw1,c
 15183  012DA2  0EFB               	movlw	-5
 15184  012DA4  6AE3               	clrf	plusw1,c
 15185                           
 15186                           ;stkvar	_aexp @ sp[(-4)+2]
 15187                           ;stkvar	_bexp @ sp[(-4)+1]
 15188  012DA6  0EFE               	movlw	-2
 15189  012DA8  006F FF8C  F035    	movff	plusw1,btemp
 15190  012DAE  0EFD               	movlw	-3
 15191  012DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 15192  012DB6  D042               	goto	u4830
 15193  012DB8                     l6226:
 15194                           
 15195                           ;stkvar	_grs @ sp[(-4)+0]
 15196  012DB8  0EFC               	movlw	-4
 15197  012DBA  A0E3               	btfss	plusw1,0,c
 15198  012DBC  D00D               	goto	l6230
 15199                           
 15200                           ;stkvar	_grs @ sp[(-4)+0]
 15201  012DBE  0EFC               	movlw	-4
 15202  012DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 15203  012DC6  90D8               	bcf	status,0,c
 15204  012DC8  3240               	rrcf	(btemp+11)^0,f,c
 15205  012DCA  0E01               	movlw	1
 15206  012DCC  1240               	iorwf	(btemp+11)^0,f,c
 15207                           
 15208                           ;stkvar	_grs @ sp[(-4)+0]
 15209  012DCE  0EFC               	movlw	-4
 15210  012DD0  0060  F103  FFE3   	movff	btemp+11,plusw1
 15211  012DD6  D009               	goto	l6232
 15212  012DD8                     l6230:
 15213                           
 15214                           ;stkvar	_grs @ sp[(-4)+0]
 15215  012DD8  50E1               	movf	fsr1l,w,c
 15216  012DDA  0FFC               	addlw	-4
 15217  012DDC  6ED9               	movwf	fsr2l,c
 15218  012DDE  50E2               	movf	fsr1h,w,c
 15219  012DE0  6EDA               	movwf	fsr2h,c
 15220  012DE2  0EFF               	movlw	255
 15221  012DE4  22DA               	addwfc	fsr2h,f,c
 15222  012DE6  90D8               	bcf	status,0,c
 15223  012DE8  32DF               	rrcf	indf2,f,c
 15224  012DEA                     l6232:
 15225                           
 15226                           ;stkvar	_b @ sp[(-4)+-4]
 15227  012DEA  0EF8               	movlw	-8
 15228  012DEC  A0E3               	btfss	plusw1,0,c
 15229  012DEE  D002               	goto	l6236
 15230                           
 15231                           ;stkvar	_grs @ sp[(-4)+0]
 15232  012DF0  0EFC               	movlw	-4
 15233  012DF2  8EE3               	bsf	plusw1,7,c
 15234  012DF4                     l6236:
 15235  012DF4  0E01               	movlw	1
 15236  012DF6  6E40               	movwf	(btemp+11)^0,c
 15237                           
 15238                           ;stkvar	_b @ sp[(-4)+-4]
 15239  012DF8  50E1               	movf	fsr1l,w,c
 15240  012DFA  0FF8               	addlw	-8
 15241  012DFC  6ED9               	movwf	fsr2l,c
 15242  012DFE  50E2               	movf	fsr1h,w,c
 15243  012E00  6EDA               	movwf	fsr2h,c
 15244  012E02  0EFF               	movlw	255
 15245  012E04  22DA               	addwfc	fsr2h,f,c
 15246  012E06  2840               	incf	(btemp+11)^0,w,c
 15247  012E08  52DE               	movf	postinc2,f,c
 15248  012E0A  D008               	goto	u4820
 15249  012E0C                     u4825:
 15250  012E0C  52DE               	movf	postinc2,f,c
 15251  012E0E  90D8               	bcf	status,0,c
 15252  012E10  BEDC               	btfsc	preinc2,7,c
 15253  012E12  80D8               	bsf	status,0,c
 15254  012E14  32DD               	rrcf	postdec2,f,c
 15255  012E16  32DD               	rrcf	postdec2,f,c
 15256  012E18  32DD               	rrcf	postdec2,f,c
 15257  012E1A  32DE               	rrcf	postinc2,f,c
 15258  012E1C                     u4820:
 15259  012E1C  2EE8               	decfsz	wreg,f,c
 15260  012E1E  D7F6               	goto	u4825
 15261                           
 15262                           ;stkvar	_bexp @ sp[(-4)+1]
 15263  012E20  0EFD               	movlw	-3
 15264  012E22  2AE3               	incf	plusw1,f,c
 15265  012E24                     l6240:
 15266                           
 15267                           ;stkvar	_aexp @ sp[(-4)+2]
 15268                           ;stkvar	_bexp @ sp[(-4)+1]
 15269  012E24  50E1               	movf	fsr1l,w,c
 15270  012E26  0FFD               	addlw	-3
 15271  012E28  6ED9               	movwf	fsr2l,c
 15272  012E2A  50E2               	movf	fsr1h,w,c
 15273  012E2C  6EDA               	movwf	fsr2h,c
 15274  012E2E  0EFF               	movlw	255
 15275  012E30  22DA               	addwfc	fsr2h,f,c
 15276  012E32  0EFE               	movlw	-2
 15277  012E34  50E3               	movf	plusw1,w,c
 15278  012E36  5CDE               	subwf	postinc2,w,c
 15279  012E38  A0D8               	btfss	status,0,c
 15280  012E3A  D7BE               	goto	l6226
 15281  012E3C                     u4830:
 15282                           
 15283                           ;stkvar	_signs @ sp[(-4)+3]
 15284  012E3C  0EFF               	movlw	-1
 15285  012E3E  BCE3               	btfsc	plusw1,6,c
 15286  012E40  D066               	goto	l6268
 15287                           
 15288                           ;stkvar	_bexp @ sp[(-4)+1]
 15289  012E42  0EFD               	movlw	-3
 15290  012E44  50E3               	movf	plusw1,w,c
 15291  012E46  B4D8               	btfsc	status,2,c
 15292  012E48  D0F2               	goto	u4930
 15293                           
 15294                           ;stkvar	_a @ sp[(-4)+-8]
 15295                           ;stkvar	_b @ sp[(-4)+-4]
 15296  012E4A  0EF8               	movlw	-8
 15297  012E4C  50E3               	movf	plusw1,w,c
 15298  012E4E  6E35               	movwf	btemp^0,c
 15299  012E50  0EF4               	movlw	-12
 15300  012E52  50E3               	movf	plusw1,w,c
 15301  012E54  2635               	addwf	btemp^0,f,c
 15302  012E56  0EF8               	movlw	-8
 15303  012E58  0060  F0D7  FFE3   	movff	btemp,plusw1
 15304  012E5E  0EF9               	movlw	-7
 15305  012E60  50E3               	movf	plusw1,w,c
 15306  012E62  6E35               	movwf	btemp^0,c
 15307  012E64  0EF5               	movlw	-11
 15308  012E66  50E3               	movf	plusw1,w,c
 15309  012E68  2235               	addwfc	btemp^0,f,c
 15310  012E6A  0EF9               	movlw	-7
 15311  012E6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 15312  012E72  0EFA               	movlw	-6
 15313  012E74  50E3               	movf	plusw1,w,c
 15314  012E76  6E35               	movwf	btemp^0,c
 15315  012E78  0EF6               	movlw	-10
 15316  012E7A  50E3               	movf	plusw1,w,c
 15317  012E7C  2235               	addwfc	btemp^0,f,c
 15318  012E7E  0EFA               	movlw	-6
 15319  012E80  0060  F0D7  FFE3   	movff	btemp,plusw1
 15320  012E86  0EFB               	movlw	-5
 15321  012E88  50E3               	movf	plusw1,w,c
 15322  012E8A  6E35               	movwf	btemp^0,c
 15323  012E8C  0EF7               	movlw	-9
 15324  012E8E  50E3               	movf	plusw1,w,c
 15325  012E90  2235               	addwfc	btemp^0,f,c
 15326  012E92  0EFB               	movlw	-5
 15327  012E94  0060  F0D7  FFE3   	movff	btemp,plusw1
 15328                           
 15329                           ;stkvar	_b @ sp[(-4)+-4]
 15330  012E9A  0EFB               	movlw	-5
 15331  012E9C  A0E3               	btfss	plusw1,0,c
 15332  012E9E  D101               	goto	u4970
 15333                           
 15334                           ;stkvar	_grs @ sp[(-4)+0]
 15335  012EA0  0EFC               	movlw	-4
 15336  012EA2  A0E3               	btfss	plusw1,0,c
 15337  012EA4  D00D               	goto	l6258
 15338                           
 15339                           ;stkvar	_grs @ sp[(-4)+0]
 15340  012EA6  0EFC               	movlw	-4
 15341  012EA8  006F FF8C  F040    	movff	plusw1,btemp+11
 15342  012EAE  90D8               	bcf	status,0,c
 15343  012EB0  3240               	rrcf	(btemp+11)^0,f,c
 15344  012EB2  0E01               	movlw	1
 15345  012EB4  1240               	iorwf	(btemp+11)^0,f,c
 15346                           
 15347                           ;stkvar	_grs @ sp[(-4)+0]
 15348  012EB6  0EFC               	movlw	-4
 15349  012EB8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15350  012EBE  D009               	goto	l6260
 15351  012EC0                     l6258:
 15352                           
 15353                           ;stkvar	_grs @ sp[(-4)+0]
 15354  012EC0  50E1               	movf	fsr1l,w,c
 15355  012EC2  0FFC               	addlw	-4
 15356  012EC4  6ED9               	movwf	fsr2l,c
 15357  012EC6  50E2               	movf	fsr1h,w,c
 15358  012EC8  6EDA               	movwf	fsr2h,c
 15359  012ECA  0EFF               	movlw	255
 15360  012ECC  22DA               	addwfc	fsr2h,f,c
 15361  012ECE  90D8               	bcf	status,0,c
 15362  012ED0  32DF               	rrcf	indf2,f,c
 15363  012ED2                     l6260:
 15364                           
 15365                           ;stkvar	_b @ sp[(-4)+-4]
 15366  012ED2  0EF8               	movlw	-8
 15367  012ED4  A0E3               	btfss	plusw1,0,c
 15368  012ED6  D002               	goto	l6264
 15369                           
 15370                           ;stkvar	_grs @ sp[(-4)+0]
 15371  012ED8  0EFC               	movlw	-4
 15372  012EDA  8EE3               	bsf	plusw1,7,c
 15373  012EDC                     l6264:
 15374  012EDC  0E01               	movlw	1
 15375  012EDE  6E40               	movwf	(btemp+11)^0,c
 15376                           
 15377                           ;stkvar	_b @ sp[(-4)+-4]
 15378  012EE0  50E1               	movf	fsr1l,w,c
 15379  012EE2  0FF8               	addlw	-8
 15380  012EE4  6ED9               	movwf	fsr2l,c
 15381  012EE6  50E2               	movf	fsr1h,w,c
 15382  012EE8  6EDA               	movwf	fsr2h,c
 15383  012EEA  0EFF               	movlw	255
 15384  012EEC  22DA               	addwfc	fsr2h,f,c
 15385  012EEE  2840               	incf	(btemp+11)^0,w,c
 15386  012EF0  52DE               	movf	postinc2,f,c
 15387  012EF2  D008               	goto	u4890
 15388  012EF4                     u4895:
 15389  012EF4  52DE               	movf	postinc2,f,c
 15390  012EF6  90D8               	bcf	status,0,c
 15391  012EF8  BEDC               	btfsc	preinc2,7,c
 15392  012EFA  80D8               	bsf	status,0,c
 15393  012EFC  32DD               	rrcf	postdec2,f,c
 15394  012EFE  32DD               	rrcf	postdec2,f,c
 15395  012F00  32DD               	rrcf	postdec2,f,c
 15396  012F02  32DE               	rrcf	postinc2,f,c
 15397  012F04                     u4890:
 15398  012F04  2EE8               	decfsz	wreg,f,c
 15399  012F06  D7F6               	goto	u4895
 15400                           
 15401                           ;stkvar	_bexp @ sp[(-4)+1]
 15402  012F08  0EFD               	movlw	-3
 15403  012F0A  2AE3               	incf	plusw1,f,c
 15404  012F0C  D0CA               	goto	u4970
 15405  012F0E                     l6268:
 15406                           
 15407                           ;stkvar	_a @ sp[(-4)+-8]
 15408                           ;stkvar	_b @ sp[(-4)+-4]
 15409  012F0E  50E1               	movf	fsr1l,w,c
 15410  012F10  0FF8               	addlw	-8
 15411  012F12  6ED9               	movwf	fsr2l,c
 15412  012F14  50E2               	movf	fsr1h,w,c
 15413  012F16  6EDA               	movwf	fsr2h,c
 15414  012F18  0EFF               	movlw	255
 15415  012F1A  22DA               	addwfc	fsr2h,f,c
 15416  012F1C  0EF4               	movlw	-12
 15417  012F1E  50E3               	movf	plusw1,w,c
 15418  012F20  5CDE               	subwf	postinc2,w,c
 15419  012F22  0EF5               	movlw	-11
 15420  012F24  50E3               	movf	plusw1,w,c
 15421  012F26  58DE               	subwfb	postinc2,w,c
 15422  012F28  0EF6               	movlw	-10
 15423  012F2A  50E3               	movf	plusw1,w,c
 15424  012F2C  58DE               	subwfb	postinc2,w,c
 15425  012F2E  50DE               	movf	postinc2,w,c
 15426  012F30  0A80               	xorlw	128
 15427  012F32  6E35               	movwf	btemp^0,c
 15428  012F34  0EF7               	movlw	-9
 15429  012F36  50E3               	movf	plusw1,w,c
 15430  012F38  0A80               	xorlw	128
 15431  012F3A  5835               	subwfb	btemp^0,w,c
 15432  012F3C  B0D8               	btfsc	status,0,c
 15433  012F3E  D053               	goto	l6280
 15434                           
 15435                           ;stkvar	_b @ sp[(-4)+-4]
 15436                           ;stkvar	_a @ sp[(-4)+-8]
 15437  012F40  0EF4               	movlw	-12
 15438  012F42  006F FF8C  F03D    	movff	plusw1,btemp+8
 15439  012F48  0EF5               	movlw	-11
 15440  012F4A  006F FF8C  F03E    	movff	plusw1,btemp+9
 15441  012F50  0EF6               	movlw	-10
 15442  012F52  006F FF8C  F03F    	movff	plusw1,btemp+10
 15443  012F58  0EF7               	movlw	-9
 15444  012F5A  006F FF8C  F040    	movff	plusw1,btemp+11
 15445  012F60  0EF8               	movlw	-8
 15446  012F62  50E3               	movf	plusw1,w,c
 15447  012F64  5E3D               	subwf	(btemp+8)^0,f,c
 15448  012F66  0EF9               	movlw	-7
 15449  012F68  50E3               	movf	plusw1,w,c
 15450  012F6A  5A3E               	subwfb	(btemp+9)^0,f,c
 15451  012F6C  0EFA               	movlw	-6
 15452  012F6E  50E3               	movf	plusw1,w,c
 15453  012F70  5A3F               	subwfb	(btemp+10)^0,f,c
 15454  012F72  0EFB               	movlw	-5
 15455  012F74  50E3               	movf	plusw1,w,c
 15456  012F76  5A40               	subwfb	(btemp+11)^0,f,c
 15457  012F78  0EFF               	movlw	255
 15458  012F7A  243D               	addwf	(btemp+8)^0,w,c
 15459  012F7C  6E39               	movwf	(btemp+4)^0,c
 15460  012F7E  0EFF               	movlw	255
 15461  012F80  203E               	addwfc	(btemp+9)^0,w,c
 15462  012F82  6E3A               	movwf	(btemp+5)^0,c
 15463  012F84  0EFF               	movlw	255
 15464  012F86  203F               	addwfc	(btemp+10)^0,w,c
 15465  012F88  6E3B               	movwf	(btemp+6)^0,c
 15466  012F8A  0EFF               	movlw	255
 15467  012F8C  2040               	addwfc	(btemp+11)^0,w,c
 15468  012F8E  6E3C               	movwf	(btemp+7)^0,c
 15469                           
 15470                           ;stkvar	_b @ sp[(-4)+-4]
 15471  012F90  0EF8               	movlw	-8
 15472  012F92  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 15473  012F98  0EF9               	movlw	-7
 15474  012F9A  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 15475  012FA0  0EFA               	movlw	-6
 15476  012FA2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 15477  012FA8  0EFB               	movlw	-5
 15478  012FAA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 15479                           
 15480                           ;stkvar	_signs @ sp[(-4)+3]
 15481  012FB0  0EFF               	movlw	-1
 15482  012FB2  7EE3               	btg	plusw1,7,c
 15483                           
 15484                           ;stkvar	_grs @ sp[(-4)+0]
 15485  012FB4  0EFC               	movlw	-4
 15486  012FB6  50E3               	movf	plusw1,w,c
 15487  012FB8  0800               	sublw	0
 15488  012FBA  6E40               	movwf	(btemp+11)^0,c
 15489                           
 15490                           ;stkvar	_grs @ sp[(-4)+0]
 15491  012FBC  0EFC               	movlw	-4
 15492  012FBE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15493                           
 15494                           ;stkvar	_grs @ sp[(-4)+0]
 15495  012FC4  0EFC               	movlw	-4
 15496  012FC6  50E3               	movf	plusw1,w,c
 15497  012FC8  A4D8               	btfss	status,2,c
 15498  012FCA  D020               	goto	l6282
 15499                           
 15500                           ;stkvar	_b @ sp[(-4)+-4]
 15501  012FCC  50E1               	movf	fsr1l,w,c
 15502  012FCE  0FF8               	addlw	-8
 15503  012FD0  6ED9               	movwf	fsr2l,c
 15504  012FD2  50E2               	movf	fsr1h,w,c
 15505  012FD4  6EDA               	movwf	fsr2h,c
 15506  012FD6  0EFF               	movlw	255
 15507  012FD8  22DA               	addwfc	fsr2h,f,c
 15508  012FDA  2ADE               	incf	postinc2,f,c
 15509  012FDC  0E00               	movlw	0
 15510  012FDE  22DE               	addwfc	postinc2,f,c
 15511  012FE0  22DE               	addwfc	postinc2,f,c
 15512  012FE2  22DE               	addwfc	postinc2,f,c
 15513  012FE4  D013               	goto	l6282
 15514  012FE6                     l6280:
 15515                           
 15516                           ;stkvar	_a @ sp[(-4)+-8]
 15517                           ;stkvar	_b @ sp[(-4)+-4]
 15518  012FE6  50E1               	movf	fsr1l,w,c
 15519  012FE8  0FF8               	addlw	-8
 15520  012FEA  6ED9               	movwf	fsr2l,c
 15521  012FEC  50E2               	movf	fsr1h,w,c
 15522  012FEE  6EDA               	movwf	fsr2h,c
 15523  012FF0  0EFF               	movlw	255
 15524  012FF2  22DA               	addwfc	fsr2h,f,c
 15525  012FF4  0EF4               	movlw	-12
 15526  012FF6  50E3               	movf	plusw1,w,c
 15527  012FF8  5EDE               	subwf	postinc2,f,c
 15528  012FFA  0EF5               	movlw	-11
 15529  012FFC  50E3               	movf	plusw1,w,c
 15530  012FFE  5ADE               	subwfb	postinc2,f,c
 15531  013000  0EF6               	movlw	-10
 15532  013002  50E3               	movf	plusw1,w,c
 15533  013004  5ADE               	subwfb	postinc2,f,c
 15534  013006  0EF7               	movlw	-9
 15535  013008  50E3               	movf	plusw1,w,c
 15536  01300A  5ADE               	subwfb	postinc2,f,c
 15537  01300C                     l6282:
 15538                           
 15539                           ;stkvar	_b @ sp[(-4)+-4]
 15540  01300C  0EF8               	movlw	-8
 15541  01300E  50E3               	movf	plusw1,w,c
 15542  013010  E145               	bnz	l6304
 15543  013012  0EF9               	movlw	-7
 15544  013014  50E3               	movf	plusw1,w,c
 15545  013016  E142               	bnz	l6304
 15546  013018  0EFA               	movlw	-6
 15547  01301A  50E3               	movf	plusw1,w,c
 15548  01301C  E13F               	bnz	l6304
 15549  01301E  0EFB               	movlw	-5
 15550  013020  50E3               	movf	plusw1,w,c
 15551  013022  A4D8               	btfss	status,2,c
 15552  013024  D03B               	goto	l6304
 15553                           
 15554                           ;stkvar	_grs @ sp[(-4)+0]
 15555  013026  0EFC               	movlw	-4
 15556  013028  50E3               	movf	plusw1,w,c
 15557  01302A  A4D8               	btfss	status,2,c
 15558  01302C  D037               	goto	l6304
 15559  01302E                     u4930:
 15560  01302E  0E00               	movlw	0
 15561  013030  6E35               	movwf	btemp^0,c
 15562  013032  0E00               	movlw	0
 15563  013034  6E36               	movwf	(btemp+1)^0,c
 15564  013036  0E00               	movlw	0
 15565  013038  6E37               	movwf	(btemp+2)^0,c
 15566  01303A  0E00               	movlw	0
 15567  01303C  6E38               	movwf	(btemp+3)^0,c
 15568  01303E  D0C6               	goto	l2548
 15569  013040                     l6290:
 15570                           
 15571                           ;stkvar	_b @ sp[(-4)+-4]
 15572  013040  90D8               	bcf	status,0,c
 15573  013042  0EF8               	movlw	-8
 15574  013044  36E3               	rlcf	plusw1,f,c
 15575  013046  0EF9               	movlw	-7
 15576  013048  36E3               	rlcf	plusw1,f,c
 15577  01304A  0EFA               	movlw	-6
 15578  01304C  36E3               	rlcf	plusw1,f,c
 15579  01304E  0EFB               	movlw	-5
 15580  013050  36E3               	rlcf	plusw1,f,c
 15581                           
 15582                           ;stkvar	_grs @ sp[(-4)+0]
 15583  013052  0EFC               	movlw	-4
 15584  013054  AEE3               	btfss	plusw1,7,c
 15585  013056  D002               	goto	l2560
 15586                           
 15587                           ;stkvar	_b @ sp[(-4)+-4]
 15588  013058  0EF8               	movlw	-8
 15589  01305A  80E3               	bsf	plusw1,0,c
 15590  01305C                     l2560:
 15591                           
 15592                           ;stkvar	_grs @ sp[(-4)+0]
 15593  01305C  0EFC               	movlw	-4
 15594  01305E  A0E3               	btfss	plusw1,0,c
 15595  013060  D00E               	goto	l6298
 15596                           
 15597                           ;stkvar	_grs @ sp[(-4)+0]
 15598  013062  0EFC               	movlw	-4
 15599  013064  006F FF8C  F040    	movff	plusw1,btemp+11
 15600  01306A  90D8               	bcf	status,0,c
 15601  01306C  3440               	rlcf	(btemp+11)^0,w,c
 15602  01306E  6E3F               	movwf	(btemp+10)^0,c
 15603  013070  0E01               	movlw	1
 15604  013072  123F               	iorwf	(btemp+10)^0,f,c
 15605                           
 15606                           ;stkvar	_grs @ sp[(-4)+0]
 15607  013074  0EFC               	movlw	-4
 15608  013076  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15609  01307C  D009               	goto	l6300
 15610  01307E                     l6298:
 15611                           
 15612                           ;stkvar	_grs @ sp[(-4)+0]
 15613  01307E  50E1               	movf	fsr1l,w,c
 15614  013080  0FFC               	addlw	-4
 15615  013082  6ED9               	movwf	fsr2l,c
 15616  013084  50E2               	movf	fsr1h,w,c
 15617  013086  6EDA               	movwf	fsr2h,c
 15618  013088  0EFF               	movlw	255
 15619  01308A  22DA               	addwfc	fsr2h,f,c
 15620  01308C  90D8               	bcf	status,0,c
 15621  01308E  36DF               	rlcf	indf2,f,c
 15622  013090                     l6300:
 15623                           
 15624                           ;stkvar	_bexp @ sp[(-4)+1]
 15625  013090  0EFD               	movlw	-3
 15626  013092  50E3               	movf	plusw1,w,c
 15627  013094  B4D8               	btfsc	status,2,c
 15628  013096  D002               	goto	l6304
 15629                           
 15630                           ;stkvar	_bexp @ sp[(-4)+1]
 15631  013098  0EFD               	movlw	-3
 15632  01309A  06E3               	decf	plusw1,f,c
 15633  01309C                     l6304:
 15634                           
 15635                           ;stkvar	_b @ sp[(-4)+-4]
 15636  01309C  0EFA               	movlw	-6
 15637  01309E  AEE3               	btfss	plusw1,7,c
 15638  0130A0  D7CF               	goto	l6290
 15639  0130A2                     u4970:
 15640                           
 15641                           ;stkvar	_aexp @ sp[(-4)+2]
 15642  0130A2  0EFE               	movlw	-2
 15643  0130A4  6AE3               	clrf	plusw1,c
 15644                           
 15645                           ;stkvar	_grs @ sp[(-4)+0]
 15646  0130A6  0EFC               	movlw	-4
 15647  0130A8  AEE3               	btfss	plusw1,7,c
 15648  0130AA  D00F               	goto	l6318
 15649                           
 15650                           ;stkvar	_grs @ sp[(-4)+0]
 15651  0130AC  0EFC               	movlw	-4
 15652  0130AE  006F FF8C  F040    	movff	plusw1,btemp+11
 15653  0130B4  0E7F               	movlw	127
 15654  0130B6  1640               	andwf	(btemp+11)^0,f,c
 15655  0130B8  B4D8               	btfsc	status,2,c
 15656  0130BA  D004               	goto	l6314
 15657  0130BC                     u4990:
 15658                           
 15659                           ;stkvar	_aexp @ sp[(-4)+2]
 15660  0130BC  0EFE               	movlw	-2
 15661  0130BE  6AE3               	clrf	plusw1,c
 15662  0130C0  2AE3               	incf	plusw1,f,c
 15663  0130C2  D003               	goto	l6318
 15664  0130C4                     l6314:
 15665                           
 15666                           ;stkvar	_b @ sp[(-4)+-4]
 15667  0130C4  0EF8               	movlw	-8
 15668  0130C6  B0E3               	btfsc	plusw1,0,c
 15669  0130C8  D7F9               	goto	u4990
 15670  0130CA                     l6318:
 15671                           
 15672                           ;stkvar	_aexp @ sp[(-4)+2]
 15673  0130CA  0EFE               	movlw	-2
 15674  0130CC  50E3               	movf	plusw1,w,c
 15675  0130CE  B4D8               	btfsc	status,2,c
 15676  0130D0  D02B               	goto	l6330
 15677                           
 15678                           ;stkvar	_b @ sp[(-4)+-4]
 15679  0130D2  50E1               	movf	fsr1l,w,c
 15680  0130D4  0FF8               	addlw	-8
 15681  0130D6  6ED9               	movwf	fsr2l,c
 15682  0130D8  50E2               	movf	fsr1h,w,c
 15683  0130DA  6EDA               	movwf	fsr2h,c
 15684  0130DC  0EFF               	movlw	255
 15685  0130DE  22DA               	addwfc	fsr2h,f,c
 15686  0130E0  2ADE               	incf	postinc2,f,c
 15687  0130E2  0E00               	movlw	0
 15688  0130E4  22DE               	addwfc	postinc2,f,c
 15689  0130E6  22DE               	addwfc	postinc2,f,c
 15690  0130E8  22DE               	addwfc	postinc2,f,c
 15691                           
 15692                           ;stkvar	_b @ sp[(-4)+-4]
 15693  0130EA  0EFB               	movlw	-5
 15694  0130EC  A0E3               	btfss	plusw1,0,c
 15695  0130EE  D01C               	goto	l6330
 15696  0130F0  0E01               	movlw	1
 15697  0130F2  6E40               	movwf	(btemp+11)^0,c
 15698                           
 15699                           ;stkvar	_b @ sp[(-4)+-4]
 15700  0130F4  50E1               	movf	fsr1l,w,c
 15701  0130F6  0FF8               	addlw	-8
 15702  0130F8  6ED9               	movwf	fsr2l,c
 15703  0130FA  50E2               	movf	fsr1h,w,c
 15704  0130FC  6EDA               	movwf	fsr2h,c
 15705  0130FE  0EFF               	movlw	255
 15706  013100  22DA               	addwfc	fsr2h,f,c
 15707  013102  2840               	incf	(btemp+11)^0,w,c
 15708  013104  52DE               	movf	postinc2,f,c
 15709  013106  D008               	goto	u5030
 15710  013108                     u5035:
 15711  013108  52DE               	movf	postinc2,f,c
 15712  01310A  90D8               	bcf	status,0,c
 15713  01310C  BEDC               	btfsc	preinc2,7,c
 15714  01310E  80D8               	bsf	status,0,c
 15715  013110  32DD               	rrcf	postdec2,f,c
 15716  013112  32DD               	rrcf	postdec2,f,c
 15717  013114  32DD               	rrcf	postdec2,f,c
 15718  013116  32DE               	rrcf	postinc2,f,c
 15719  013118                     u5030:
 15720  013118  2EE8               	decfsz	wreg,f,c
 15721  01311A  D7F6               	goto	u5035
 15722                           
 15723                           ;stkvar	_bexp @ sp[(-4)+1]
 15724  01311C  0EFD               	movlw	-3
 15725  01311E  28E3               	incf	plusw1,w,c
 15726  013120  B4D8               	btfsc	status,2,c
 15727  013122  D002               	goto	l6330
 15728                           
 15729                           ;stkvar	_bexp @ sp[(-4)+1]
 15730  013124  0EFD               	movlw	-3
 15731  013126  2AE3               	incf	plusw1,f,c
 15732  013128                     l6330:
 15733                           
 15734                           ;stkvar	_bexp @ sp[(-4)+1]
 15735  013128  0EFD               	movlw	-3
 15736  01312A  28E3               	incf	plusw1,w,c
 15737  01312C  B4D8               	btfsc	status,2,c
 15738  01312E  D004               	goto	u5060
 15739                           
 15740                           ;stkvar	_bexp @ sp[(-4)+1]
 15741  013130  0EFD               	movlw	-3
 15742  013132  50E3               	movf	plusw1,w,c
 15743  013134  A4D8               	btfss	status,2,c
 15744  013136  D00E               	goto	l6340
 15745  013138                     u5060:
 15746                           
 15747                           ;stkvar	_b @ sp[(-4)+-4]
 15748  013138  0EF8               	movlw	-8
 15749  01313A  6AE3               	clrf	plusw1,c
 15750  01313C  0EF9               	movlw	-7
 15751  01313E  6AE3               	clrf	plusw1,c
 15752  013140  0EFA               	movlw	-6
 15753  013142  6AE3               	clrf	plusw1,c
 15754  013144  0EFB               	movlw	-5
 15755  013146  6AE3               	clrf	plusw1,c
 15756                           
 15757                           ;stkvar	_bexp @ sp[(-4)+1]
 15758  013148  0EFD               	movlw	-3
 15759  01314A  50E3               	movf	plusw1,w,c
 15760  01314C  A4D8               	btfss	status,2,c
 15761  01314E  D002               	goto	l6340
 15762                           
 15763                           ;stkvar	_signs @ sp[(-4)+3]
 15764  013150  0EFF               	movlw	-1
 15765  013152  6AE3               	clrf	plusw1,c
 15766  013154                     l6340:
 15767                           
 15768                           ;stkvar	_bexp @ sp[(-4)+1]
 15769  013154  0EFD               	movlw	-3
 15770  013156  A0E3               	btfss	plusw1,0,c
 15771  013158  D009               	goto	l6344
 15772                           
 15773                           ;stkvar	_b @ sp[(-4)+-4]
 15774  01315A  0EFA               	movlw	250
 15775  01315C  24E1               	addwf	fsr1l,w,c
 15776  01315E  6ED9               	movwf	fsr2l,c
 15777  013160  0EFF               	movlw	255
 15778  013162  20E2               	addwfc	fsr1h,w,c
 15779  013164  6EDA               	movwf	fsr2h,c
 15780  013166  0E00               	movlw	0
 15781  013168  8EDB               	bsf	plusw2,7,c
 15782  01316A  D008               	goto	l6346
 15783  01316C                     l6344:
 15784                           
 15785                           ;stkvar	_b @ sp[(-4)+-4]
 15786  01316C  0EFA               	movlw	250
 15787  01316E  24E1               	addwf	fsr1l,w,c
 15788  013170  6ED9               	movwf	fsr2l,c
 15789  013172  0EFF               	movlw	255
 15790  013174  20E2               	addwfc	fsr1h,w,c
 15791  013176  6EDA               	movwf	fsr2h,c
 15792  013178  0E7F               	movlw	127
 15793  01317A  16DF               	andwf	indf2,f,c
 15794  01317C                     l6346:
 15795                           
 15796                           ;stkvar	_b @ sp[(-4)+-4]
 15797  01317C  0EFB               	movlw	251
 15798  01317E  24E1               	addwf	fsr1l,w,c
 15799  013180  6ED9               	movwf	fsr2l,c
 15800  013182  0EFF               	movlw	255
 15801  013184  20E2               	addwfc	fsr1h,w,c
 15802  013186  6EDA               	movwf	fsr2h,c
 15803                           
 15804                           ;stkvar	_bexp @ sp[(-4)+1]
 15805  013188  0EFD               	movlw	-3
 15806  01318A  006F FF8C  F040    	movff	plusw1,btemp+11
 15807  013190  90D8               	bcf	status,0,c
 15808  013192  3040               	rrcf	(btemp+11)^0,w,c
 15809  013194  6EDF               	movwf	indf2,c
 15810                           
 15811                           ;stkvar	_signs @ sp[(-4)+3]
 15812  013196  0EFF               	movlw	-1
 15813  013198  AEE3               	btfss	plusw1,7,c
 15814  01319A  D008               	goto	l6352
 15815                           
 15816                           ;stkvar	_b @ sp[(-4)+-4]
 15817  01319C  0EFB               	movlw	251
 15818  01319E  24E1               	addwf	fsr1l,w,c
 15819  0131A0  6ED9               	movwf	fsr2l,c
 15820  0131A2  0EFF               	movlw	255
 15821  0131A4  20E2               	addwfc	fsr1h,w,c
 15822  0131A6  6EDA               	movwf	fsr2h,c
 15823  0131A8  0E00               	movlw	0
 15824  0131AA  8EDB               	bsf	plusw2,7,c
 15825  0131AC                     l6352:
 15826                           
 15827                           ;stkvar	_b @ sp[(-4)+-4]
 15828  0131AC  0EF8               	movlw	-8
 15829  0131AE  006F FF8C  F035    	movff	plusw1,btemp
 15830  0131B4  0EF9               	movlw	-7
 15831  0131B6  006F FF8C  F036    	movff	plusw1,btemp+1
 15832  0131BC  0EFA               	movlw	-6
 15833  0131BE  006F FF8C  F037    	movff	plusw1,btemp+2
 15834  0131C4  0EFB               	movlw	-5
 15835  0131C6  006F FF8C  F038    	movff	plusw1,btemp+3
 15836  0131CC                     l2548:
 15837                           
 15838                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15839  0131CC  0EF4               	movlw	244
 15840  0131CE  26E1               	addwf	fsr1l,f,c
 15841  0131D0  0EFF               	movlw	255
 15842  0131D2  22E2               	addwfc	fsr1h,f,c
 15843  0131D4  0012               	return		;funcret
 15844  0131D6                     __end_of___fladd:
 15845                           	opt callstack 0
 15846                           
 15847 ;; *************** function ___flneg *****************
 15848 ;; Defined at:
 15849 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  f1              4  [STACK] unsigned char 
 15852 ;; Auto vars:     Size  Location     Type
 15853 ;;		None
 15854 ;; Return value:  Size  Location     Type
 15855 ;;                  4  [STACK] unsigned char 
 15856 ;; Registers used:
 15857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15858 ;; Tracked objects:
 15859 ;;		On entry : 0/4
 15860 ;;		On exit  : 0/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15867 ;;Total ram usage:        0 bytes
 15868 ;; Hardware stack levels used:    1
 15869 ;; Hardware stack levels required when called:    6
 15870 ;; This function calls:
 15871 ;;		Nothing
 15872 ;; This function is called by:
 15873 ;;		_efgtoa
 15874 ;; This function uses a reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text54
 15878  0183D0                     __ptext54:
 15879                           	opt callstack 0
 15880  0183D0                     ___flneg:
 15881                           	opt callstack 17
 15882                           
 15883                           ;stkvar	_f1 @ sp[(0)+-4]
 15884                           
 15885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15886                           ;incstack = 0
 15887  0183D0  0EFC               	movlw	-4
 15888  0183D2  50E3               	movf	plusw1,w,c
 15889  0183D4  E10A               	bnz	u6370
 15890  0183D6  0EFD               	movlw	-3
 15891  0183D8  50E3               	movf	plusw1,w,c
 15892  0183DA  E107               	bnz	u6370
 15893  0183DC  0EFE               	movlw	-2
 15894  0183DE  50E3               	movf	plusw1,w,c
 15895  0183E0  E104               	bnz	u6370
 15896  0183E2  0EFF               	movlw	-1
 15897  0183E4  50E3               	movf	plusw1,w,c
 15898  0183E6  B4D8               	btfsc	status,2,c
 15899  0183E8  D002               	goto	l7020
 15900  0183EA                     u6370:
 15901                           
 15902                           ;stkvar	_f1 @ sp[(0)+-4]
 15903  0183EA  0EFF               	movlw	-1
 15904  0183EC  7EE3               	btg	plusw1,7,c
 15905  0183EE                     l7020:
 15906                           
 15907                           ;stkvar	_f1 @ sp[(0)+-4]
 15908  0183EE  0EFC               	movlw	-4
 15909  0183F0  006F FF8C  F035    	movff	plusw1,btemp
 15910  0183F6  0EFD               	movlw	-3
 15911  0183F8  006F FF8C  F036    	movff	plusw1,btemp+1
 15912  0183FE  0EFE               	movlw	-2
 15913  018400  006F FF8C  F037    	movff	plusw1,btemp+2
 15914  018406  0EFF               	movlw	-1
 15915  018408  006F FF8C  F038    	movff	plusw1,btemp+3
 15916                           
 15917                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15918  01840E  52E5               	movf	postdec1,f,c
 15919  018410  52E5               	movf	postdec1,f,c
 15920  018412  52E5               	movf	postdec1,f,c
 15921  018414  52E5               	movf	postdec1,f,c
 15922  018416  0012               	return		;funcret
 15923  018418                     __end_of___flneg:
 15924                           	opt callstack 0
 15925                           
 15926 ;; *************** function ___flmul *****************
 15927 ;; Defined at:
 15928 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;  b               4  [STACK] unsigned char 
 15931 ;;  a               4  [STACK] unsigned char 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;  prod            4  [STACK] struct .
 15934 ;;  grs             4  [STACK] unsigned long 
 15935 ;;  temp            2  [STACK] struct .
 15936 ;;  bexp            1  [STACK] unsigned char 
 15937 ;;  aexp            1  [STACK] unsigned char 
 15938 ;;  sign            1  [STACK] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  4  [STACK] unsigned char 
 15941 ;; Registers used:
 15942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/4
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15952 ;;Total ram usage:        0 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:    6
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_conv_raw_result
 15959 ;;		_lp_filter
 15960 ;;		_efgtoa
 15961 ;; This function uses a reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text55
 15965  0121F0                     __ptext55:
 15966                           	opt callstack 0
 15967  0121F0                     ___flmul:
 15968                           	opt callstack 0
 15969                           
 15970                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15971  0121F0  0E0D               	movlw	13
 15972  0121F2  26E1               	addwf	fsr1l,f,c
 15973  0121F4  0E00               	movlw	0
 15974  0121F6  22E2               	addwfc	fsr1h,f,c
 15975                           
 15976                           ;stkvar	_b @ sp[(-13)+-4]
 15977                           
 15978                           ;incstack = 0
 15979  0121F8  0EF2               	movlw	242
 15980  0121FA  24E1               	addwf	fsr1l,w,c
 15981  0121FC  6ED9               	movwf	fsr2l,c
 15982  0121FE  0EFF               	movlw	255
 15983  012200  20E2               	addwfc	fsr1h,w,c
 15984  012202  6EDA               	movwf	fsr2h,c
 15985  012204  50DF               	movf	indf2,w,c
 15986  012206  6E40               	movwf	(btemp+11)^0,c
 15987  012208  0E80               	movlw	128
 15988  01220A  1640               	andwf	(btemp+11)^0,f,c
 15989                           
 15990                           ;stkvar	_sign @ sp[(-13)+12]
 15991  01220C  0EFF               	movlw	-1
 15992  01220E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15993                           
 15994                           ;stkvar	_b @ sp[(-13)+-4]
 15995  012214  0EF2               	movlw	242
 15996  012216  24E1               	addwf	fsr1l,w,c
 15997  012218  6ED9               	movwf	fsr2l,c
 15998  01221A  0EFF               	movlw	255
 15999  01221C  20E2               	addwfc	fsr1h,w,c
 16000  01221E  6EDA               	movwf	fsr2h,c
 16001  012220  50DF               	movf	indf2,w,c
 16002  012222  6E40               	movwf	(btemp+11)^0,c
 16003  012224  90D8               	bcf	status,0,c
 16004  012226  3440               	rlcf	(btemp+11)^0,w,c
 16005  012228  6E3F               	movwf	(btemp+10)^0,c
 16006                           
 16007                           ;stkvar	_bexp @ sp[(-13)+10]
 16008  01222A  0EFD               	movlw	-3
 16009  01222C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16010                           
 16011                           ;stkvar	_b @ sp[(-13)+-4]
 16012  012232  0EF1               	movlw	241
 16013  012234  24E1               	addwf	fsr1l,w,c
 16014  012236  6ED9               	movwf	fsr2l,c
 16015  012238  0EFF               	movlw	255
 16016  01223A  20E2               	addwfc	fsr1h,w,c
 16017  01223C  6EDA               	movwf	fsr2h,c
 16018  01223E  AEDF               	btfss	indf2,7,c
 16019  012240  D002               	goto	l6736
 16020                           
 16021                           ;stkvar	_bexp @ sp[(-13)+10]
 16022  012242  0EFD               	movlw	-3
 16023  012244  80E3               	bsf	plusw1,0,c
 16024  012246                     l6736:
 16025                           
 16026                           ;stkvar	_bexp @ sp[(-13)+10]
 16027  012246  0EFD               	movlw	-3
 16028  012248  50E3               	movf	plusw1,w,c
 16029  01224A  B4D8               	btfsc	status,2,c
 16030  01224C  D01F               	goto	l6744
 16031                           
 16032                           ;stkvar	_bexp @ sp[(-13)+10]
 16033  01224E  0EFD               	movlw	-3
 16034  012250  28E3               	incf	plusw1,w,c
 16035  012252  A4D8               	btfss	status,2,c
 16036  012254  D018               	goto	l6742
 16037  012256  0E00               	movlw	0
 16038  012258  6E3D               	movwf	(btemp+8)^0,c
 16039  01225A  0E00               	movlw	0
 16040  01225C  6E3E               	movwf	(btemp+9)^0,c
 16041  01225E  0E00               	movlw	0
 16042  012260  6E3F               	movwf	(btemp+10)^0,c
 16043  012262  0E00               	movlw	0
 16044  012264  6E40               	movwf	(btemp+11)^0,c
 16045                           
 16046                           ;stkvar	_b @ sp[(-13)+-4]
 16047  012266  0EEF               	movlw	-17
 16048  012268  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16049  01226E  0EF0               	movlw	-16
 16050  012270  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16051  012276  0EF1               	movlw	-15
 16052  012278  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16053  01227E  0EF2               	movlw	-14
 16054  012280  0060  F103  FFE3   	movff	btemp+11,plusw1
 16055  012286                     l6742:
 16056                           
 16057                           ;stkvar	_b @ sp[(-13)+-4]
 16058  012286  0EF1               	movlw	-15
 16059  012288  8EE3               	bsf	plusw1,7,c
 16060  01228A  D018               	goto	l6746
 16061  01228C                     l6744:
 16062  01228C  0E00               	movlw	0
 16063  01228E  6E3D               	movwf	(btemp+8)^0,c
 16064  012290  0E00               	movlw	0
 16065  012292  6E3E               	movwf	(btemp+9)^0,c
 16066  012294  0E00               	movlw	0
 16067  012296  6E3F               	movwf	(btemp+10)^0,c
 16068  012298  0E00               	movlw	0
 16069  01229A  6E40               	movwf	(btemp+11)^0,c
 16070                           
 16071                           ;stkvar	_b @ sp[(-13)+-4]
 16072  01229C  0EEF               	movlw	-17
 16073  01229E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16074  0122A4  0EF0               	movlw	-16
 16075  0122A6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16076  0122AC  0EF1               	movlw	-15
 16077  0122AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16078  0122B4  0EF2               	movlw	-14
 16079  0122B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 16080  0122BC                     l6746:
 16081                           
 16082                           ;stkvar	_a @ sp[(-13)+-8]
 16083  0122BC  0EEE               	movlw	238
 16084  0122BE  24E1               	addwf	fsr1l,w,c
 16085  0122C0  6ED9               	movwf	fsr2l,c
 16086  0122C2  0EFF               	movlw	255
 16087  0122C4  20E2               	addwfc	fsr1h,w,c
 16088  0122C6  6EDA               	movwf	fsr2h,c
 16089  0122C8  50DF               	movf	indf2,w,c
 16090  0122CA  6E40               	movwf	(btemp+11)^0,c
 16091  0122CC  0E80               	movlw	128
 16092  0122CE  1640               	andwf	(btemp+11)^0,f,c
 16093                           
 16094                           ;stkvar	_sign @ sp[(-13)+12]
 16095  0122D0  50E1               	movf	fsr1l,w,c
 16096  0122D2  0FFF               	addlw	-1
 16097  0122D4  6ED9               	movwf	fsr2l,c
 16098  0122D6  50E2               	movf	fsr1h,w,c
 16099  0122D8  6EDA               	movwf	fsr2h,c
 16100  0122DA  0EFF               	movlw	255
 16101  0122DC  22DA               	addwfc	fsr2h,f,c
 16102  0122DE  5040               	movf	(btemp+11)^0,w,c
 16103  0122E0  1ADF               	xorwf	indf2,f,c
 16104                           
 16105                           ;stkvar	_a @ sp[(-13)+-8]
 16106  0122E2  0EEE               	movlw	238
 16107  0122E4  24E1               	addwf	fsr1l,w,c
 16108  0122E6  6ED9               	movwf	fsr2l,c
 16109  0122E8  0EFF               	movlw	255
 16110  0122EA  20E2               	addwfc	fsr1h,w,c
 16111  0122EC  6EDA               	movwf	fsr2h,c
 16112  0122EE  50DF               	movf	indf2,w,c
 16113  0122F0  6E40               	movwf	(btemp+11)^0,c
 16114  0122F2  90D8               	bcf	status,0,c
 16115  0122F4  3440               	rlcf	(btemp+11)^0,w,c
 16116  0122F6  6E3F               	movwf	(btemp+10)^0,c
 16117                           
 16118                           ;stkvar	_aexp @ sp[(-13)+11]
 16119  0122F8  0EFE               	movlw	-2
 16120  0122FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16121                           
 16122                           ;stkvar	_a @ sp[(-13)+-8]
 16123  012300  0EED               	movlw	237
 16124  012302  24E1               	addwf	fsr1l,w,c
 16125  012304  6ED9               	movwf	fsr2l,c
 16126  012306  0EFF               	movlw	255
 16127  012308  20E2               	addwfc	fsr1h,w,c
 16128  01230A  6EDA               	movwf	fsr2h,c
 16129  01230C  AEDF               	btfss	indf2,7,c
 16130  01230E  D002               	goto	l6754
 16131                           
 16132                           ;stkvar	_aexp @ sp[(-13)+11]
 16133  012310  0EFE               	movlw	-2
 16134  012312  80E3               	bsf	plusw1,0,c
 16135  012314                     l6754:
 16136                           
 16137                           ;stkvar	_aexp @ sp[(-13)+11]
 16138  012314  0EFE               	movlw	-2
 16139  012316  50E3               	movf	plusw1,w,c
 16140  012318  B4D8               	btfsc	status,2,c
 16141  01231A  D01F               	goto	l6762
 16142                           
 16143                           ;stkvar	_aexp @ sp[(-13)+11]
 16144  01231C  0EFE               	movlw	-2
 16145  01231E  28E3               	incf	plusw1,w,c
 16146  012320  A4D8               	btfss	status,2,c
 16147  012322  D018               	goto	l6760
 16148  012324  0E00               	movlw	0
 16149  012326  6E3D               	movwf	(btemp+8)^0,c
 16150  012328  0E00               	movlw	0
 16151  01232A  6E3E               	movwf	(btemp+9)^0,c
 16152  01232C  0E00               	movlw	0
 16153  01232E  6E3F               	movwf	(btemp+10)^0,c
 16154  012330  0E00               	movlw	0
 16155  012332  6E40               	movwf	(btemp+11)^0,c
 16156                           
 16157                           ;stkvar	_a @ sp[(-13)+-8]
 16158  012334  0EEB               	movlw	-21
 16159  012336  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16160  01233C  0EEC               	movlw	-20
 16161  01233E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16162  012344  0EED               	movlw	-19
 16163  012346  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16164  01234C  0EEE               	movlw	-18
 16165  01234E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16166  012354                     l6760:
 16167                           
 16168                           ;stkvar	_a @ sp[(-13)+-8]
 16169  012354  0EED               	movlw	-19
 16170  012356  8EE3               	bsf	plusw1,7,c
 16171  012358  D018               	goto	l6764
 16172  01235A                     l6762:
 16173  01235A  0E00               	movlw	0
 16174  01235C  6E3D               	movwf	(btemp+8)^0,c
 16175  01235E  0E00               	movlw	0
 16176  012360  6E3E               	movwf	(btemp+9)^0,c
 16177  012362  0E00               	movlw	0
 16178  012364  6E3F               	movwf	(btemp+10)^0,c
 16179  012366  0E00               	movlw	0
 16180  012368  6E40               	movwf	(btemp+11)^0,c
 16181                           
 16182                           ;stkvar	_a @ sp[(-13)+-8]
 16183  01236A  0EEB               	movlw	-21
 16184  01236C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16185  012372  0EEC               	movlw	-20
 16186  012374  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16187  01237A  0EED               	movlw	-19
 16188  01237C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16189  012382  0EEE               	movlw	-18
 16190  012384  0060  F103  FFE3   	movff	btemp+11,plusw1
 16191  01238A                     l6764:
 16192                           
 16193                           ;stkvar	_aexp @ sp[(-13)+11]
 16194  01238A  0EFE               	movlw	-2
 16195  01238C  50E3               	movf	plusw1,w,c
 16196  01238E  B4D8               	btfsc	status,2,c
 16197  012390  D004               	goto	u6000
 16198                           
 16199                           ;stkvar	_bexp @ sp[(-13)+10]
 16200  012392  0EFD               	movlw	-3
 16201  012394  50E3               	movf	plusw1,w,c
 16202  012396  A4D8               	btfss	status,2,c
 16203  012398  D009               	goto	l6772
 16204  01239A                     u6000:
 16205  01239A  0E00               	movlw	0
 16206  01239C  6E35               	movwf	btemp^0,c
 16207  01239E  0E00               	movlw	0
 16208  0123A0  6E36               	movwf	(btemp+1)^0,c
 16209  0123A2  0E00               	movlw	0
 16210  0123A4  6E37               	movwf	(btemp+2)^0,c
 16211  0123A6  0E00               	movlw	0
 16212  0123A8  6E38               	movwf	(btemp+3)^0,c
 16213  0123AA  D332               	goto	l2629
 16214  0123AC                     l6772:
 16215                           
 16216                           ;stkvar	_b @ sp[(-13)+-4]
 16217  0123AC  0EEF               	movlw	-17
 16218  0123AE  006F FF8C  F040    	movff	plusw1,btemp+11
 16219                           
 16220                           ;stkvar	_a @ sp[(-13)+-8]
 16221  0123B4  0EED               	movlw	237
 16222  0123B6  24E1               	addwf	fsr1l,w,c
 16223  0123B8  6ED9               	movwf	fsr2l,c
 16224  0123BA  0EFF               	movlw	255
 16225  0123BC  20E2               	addwfc	fsr1h,w,c
 16226  0123BE  6EDA               	movwf	fsr2h,c
 16227  0123C0  50DF               	movf	indf2,w,c
 16228  0123C2  0240               	mulwf	(btemp+11)^0,c
 16229                           
 16230                           ;stkvar	_temp @ sp[(-13)+8]
 16231  0123C4  0EFB               	movlw	-5
 16232  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16233  0123CC  0EFC               	movlw	-4
 16234  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16235                           
 16236                           ;stkvar	_temp @ sp[(-13)+8]
 16237  0123D4  0EFB               	movlw	-5
 16238  0123D6  006F FF8C  F040    	movff	plusw1,btemp+11
 16239  0123DC  0060  F100  F039   	movff	btemp+11,btemp+4
 16240  0123E2  6A3A               	clrf	(btemp+5)^0,c
 16241  0123E4  6A3B               	clrf	(btemp+6)^0,c
 16242  0123E6  6A3C               	clrf	(btemp+7)^0,c
 16243                           
 16244                           ;stkvar	_grs @ sp[(-13)+4]
 16245  0123E8  0EF7               	movlw	-9
 16246  0123EA  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16247  0123F0  0EF8               	movlw	-8
 16248  0123F2  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16249  0123F8  0EF9               	movlw	-7
 16250  0123FA  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16251  012400  0EFA               	movlw	-6
 16252  012402  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16253                           
 16254                           ;stkvar	_temp @ sp[(-13)+8]
 16255  012408  0EFC               	movlw	252
 16256  01240A  24E1               	addwf	fsr1l,w,c
 16257  01240C  6ED9               	movwf	fsr2l,c
 16258  01240E  0EFF               	movlw	255
 16259  012410  20E2               	addwfc	fsr1h,w,c
 16260  012412  6EDA               	movwf	fsr2h,c
 16261  012414  50DF               	movf	indf2,w,c
 16262  012416  6E40               	movwf	(btemp+11)^0,c
 16263  012418  0060  F100  F039   	movff	btemp+11,btemp+4
 16264  01241E  6A3A               	clrf	(btemp+5)^0,c
 16265  012420  6A3B               	clrf	(btemp+6)^0,c
 16266  012422  6A3C               	clrf	(btemp+7)^0,c
 16267                           
 16268                           ;stkvar	_prod @ sp[(-13)+0]
 16269  012424  0EF3               	movlw	-13
 16270  012426  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16271  01242C  0EF4               	movlw	-12
 16272  01242E  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16273  012434  0EF5               	movlw	-11
 16274  012436  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16275  01243C  0EF6               	movlw	-10
 16276  01243E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16277                           
 16278                           ;stkvar	_b @ sp[(-13)+-4]
 16279  012444  0EF0               	movlw	240
 16280  012446  24E1               	addwf	fsr1l,w,c
 16281  012448  6ED9               	movwf	fsr2l,c
 16282  01244A  0EFF               	movlw	255
 16283  01244C  20E2               	addwfc	fsr1h,w,c
 16284  01244E  6EDA               	movwf	fsr2h,c
 16285  012450  50DF               	movf	indf2,w,c
 16286  012452  6E40               	movwf	(btemp+11)^0,c
 16287                           
 16288                           ;stkvar	_a @ sp[(-13)+-8]
 16289  012454  0EEC               	movlw	236
 16290  012456  24E1               	addwf	fsr1l,w,c
 16291  012458  6ED9               	movwf	fsr2l,c
 16292  01245A  0EFF               	movlw	255
 16293  01245C  20E2               	addwfc	fsr1h,w,c
 16294  01245E  6EDA               	movwf	fsr2h,c
 16295  012460  50DF               	movf	indf2,w,c
 16296  012462  0240               	mulwf	(btemp+11)^0,c
 16297                           
 16298                           ;stkvar	_temp @ sp[(-13)+8]
 16299  012464  0EFB               	movlw	-5
 16300  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16301  01246C  0EFC               	movlw	-4
 16302  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16303                           
 16304                           ;stkvar	_grs @ sp[(-13)+4]
 16305  012474  50E1               	movf	fsr1l,w,c
 16306  012476  0FF7               	addlw	-9
 16307  012478  6ED9               	movwf	fsr2l,c
 16308  01247A  50E2               	movf	fsr1h,w,c
 16309  01247C  6EDA               	movwf	fsr2h,c
 16310  01247E  0EFF               	movlw	255
 16311  012480  22DA               	addwfc	fsr2h,f,c
 16312                           
 16313                           ;stkvar	_temp @ sp[(-13)+8]
 16314  012482  0EFB               	movlw	-5
 16315  012484  50E3               	movf	plusw1,w,c
 16316  012486  26DE               	addwf	postinc2,f,c
 16317  012488  0E00               	movlw	0
 16318  01248A  22DE               	addwfc	postinc2,f,c
 16319  01248C  22DE               	addwfc	postinc2,f,c
 16320  01248E  22DE               	addwfc	postinc2,f,c
 16321                           
 16322                           ;stkvar	_prod @ sp[(-13)+0]
 16323  012490  50E1               	movf	fsr1l,w,c
 16324  012492  0FF3               	addlw	-13
 16325  012494  6ED9               	movwf	fsr2l,c
 16326  012496  50E2               	movf	fsr1h,w,c
 16327  012498  6EDA               	movwf	fsr2h,c
 16328  01249A  0EFF               	movlw	255
 16329  01249C  22DA               	addwfc	fsr2h,f,c
 16330                           
 16331                           ;stkvar	_temp @ sp[(-13)+8]
 16332  01249E  0EFC               	movlw	252
 16333  0124A0  24E1               	addwf	fsr1l,w,c
 16334  0124A2  6EE9               	movwf	fsr0l,c
 16335  0124A4  0EFF               	movlw	255
 16336  0124A6  20E2               	addwfc	fsr1h,w,c
 16337  0124A8  6EEA               	movwf	fsr0h,c
 16338  0124AA  50EF               	movf	indf0,w,c
 16339  0124AC  26DE               	addwf	postinc2,f,c
 16340  0124AE  0E00               	movlw	0
 16341  0124B0  22DE               	addwfc	postinc2,f,c
 16342  0124B2  22DE               	addwfc	postinc2,f,c
 16343  0124B4  22DE               	addwfc	postinc2,f,c
 16344                           
 16345                           ;stkvar	_b @ sp[(-13)+-4]
 16346  0124B6  0EF1               	movlw	241
 16347  0124B8  24E1               	addwf	fsr1l,w,c
 16348  0124BA  6ED9               	movwf	fsr2l,c
 16349  0124BC  0EFF               	movlw	255
 16350  0124BE  20E2               	addwfc	fsr1h,w,c
 16351  0124C0  6EDA               	movwf	fsr2h,c
 16352  0124C2  50DF               	movf	indf2,w,c
 16353  0124C4  6E40               	movwf	(btemp+11)^0,c
 16354                           
 16355                           ;stkvar	_a @ sp[(-13)+-8]
 16356  0124C6  0EEB               	movlw	-21
 16357  0124C8  50E3               	movf	plusw1,w,c
 16358  0124CA  0240               	mulwf	(btemp+11)^0,c
 16359                           
 16360                           ;stkvar	_temp @ sp[(-13)+8]
 16361  0124CC  0EFB               	movlw	-5
 16362  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16363  0124D4  0EFC               	movlw	-4
 16364  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16365                           
 16366                           ;stkvar	_grs @ sp[(-13)+4]
 16367  0124DC  50E1               	movf	fsr1l,w,c
 16368  0124DE  0FF7               	addlw	-9
 16369  0124E0  6ED9               	movwf	fsr2l,c
 16370  0124E2  50E2               	movf	fsr1h,w,c
 16371  0124E4  6EDA               	movwf	fsr2h,c
 16372  0124E6  0EFF               	movlw	255
 16373  0124E8  22DA               	addwfc	fsr2h,f,c
 16374                           
 16375                           ;stkvar	_temp @ sp[(-13)+8]
 16376  0124EA  0EFB               	movlw	-5
 16377  0124EC  50E3               	movf	plusw1,w,c
 16378  0124EE  26DE               	addwf	postinc2,f,c
 16379  0124F0  0E00               	movlw	0
 16380  0124F2  22DE               	addwfc	postinc2,f,c
 16381  0124F4  22DE               	addwfc	postinc2,f,c
 16382  0124F6  22DE               	addwfc	postinc2,f,c
 16383                           
 16384                           ;stkvar	_prod @ sp[(-13)+0]
 16385  0124F8  50E1               	movf	fsr1l,w,c
 16386  0124FA  0FF3               	addlw	-13
 16387  0124FC  6ED9               	movwf	fsr2l,c
 16388  0124FE  50E2               	movf	fsr1h,w,c
 16389  012500  6EDA               	movwf	fsr2h,c
 16390  012502  0EFF               	movlw	255
 16391  012504  22DA               	addwfc	fsr2h,f,c
 16392                           
 16393                           ;stkvar	_temp @ sp[(-13)+8]
 16394  012506  0EFC               	movlw	252
 16395  012508  24E1               	addwf	fsr1l,w,c
 16396  01250A  6EE9               	movwf	fsr0l,c
 16397  01250C  0EFF               	movlw	255
 16398  01250E  20E2               	addwfc	fsr1h,w,c
 16399  012510  6EEA               	movwf	fsr0h,c
 16400  012512  50EF               	movf	indf0,w,c
 16401  012514  26DE               	addwf	postinc2,f,c
 16402  012516  0E00               	movlw	0
 16403  012518  22DE               	addwfc	postinc2,f,c
 16404  01251A  22DE               	addwfc	postinc2,f,c
 16405  01251C  22DE               	addwfc	postinc2,f,c
 16406                           
 16407                           ;stkvar	_grs @ sp[(-13)+4]
 16408  01251E  50E1               	movf	fsr1l,w,c
 16409  012520  0FF7               	addlw	-9
 16410  012522  6ED9               	movwf	fsr2l,c
 16411  012524  50E2               	movf	fsr1h,w,c
 16412  012526  6EDA               	movwf	fsr2h,c
 16413  012528  0EFF               	movlw	255
 16414  01252A  22DA               	addwfc	fsr2h,f,c
 16415  01252C  0E08               	movlw	8
 16416  01252E                     u6015:
 16417  01252E  90D8               	bcf	status,0,c
 16418  012530  36DE               	rlcf	postinc2,f,c
 16419  012532  36DE               	rlcf	postinc2,f,c
 16420  012534  36DE               	rlcf	postinc2,f,c
 16421  012536  36DD               	rlcf	postdec2,f,c
 16422  012538  52DD               	movf	postdec2,f,c
 16423  01253A  52DD               	movf	postdec2,f,c
 16424  01253C  2EE8               	decfsz	wreg,f,c
 16425  01253E  D7F7               	goto	u6015
 16426                           
 16427                           ;stkvar	_b @ sp[(-13)+-4]
 16428  012540  0EF0               	movlw	240
 16429  012542  24E1               	addwf	fsr1l,w,c
 16430  012544  6ED9               	movwf	fsr2l,c
 16431  012546  0EFF               	movlw	255
 16432  012548  20E2               	addwfc	fsr1h,w,c
 16433  01254A  6EDA               	movwf	fsr2h,c
 16434  01254C  50DF               	movf	indf2,w,c
 16435  01254E  6E40               	movwf	(btemp+11)^0,c
 16436                           
 16437                           ;stkvar	_a @ sp[(-13)+-8]
 16438  012550  0EEB               	movlw	-21
 16439  012552  50E3               	movf	plusw1,w,c
 16440  012554  0240               	mulwf	(btemp+11)^0,c
 16441                           
 16442                           ;stkvar	_temp @ sp[(-13)+8]
 16443  012556  0EFB               	movlw	-5
 16444  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16445  01255E  0EFC               	movlw	-4
 16446  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16447                           
 16448                           ;stkvar	_temp @ sp[(-13)+8]
 16449  012566  0EFB               	movlw	-5
 16450  012568  006F FF8C  F03F    	movff	plusw1,btemp+10
 16451  01256E  0EFC               	movlw	-4
 16452  012570  006F FF8C  F040    	movff	plusw1,btemp+11
 16453                           
 16454                           ;stkvar	_grs @ sp[(-13)+4]
 16455  012576  50E1               	movf	fsr1l,w,c
 16456  012578  0FF7               	addlw	-9
 16457  01257A  6ED9               	movwf	fsr2l,c
 16458  01257C  50E2               	movf	fsr1h,w,c
 16459  01257E  6EDA               	movwf	fsr2h,c
 16460  012580  0EFF               	movlw	255
 16461  012582  22DA               	addwfc	fsr2h,f,c
 16462  012584  503F               	movf	(btemp+10)^0,w,c
 16463  012586  26DE               	addwf	postinc2,f,c
 16464  012588  5040               	movf	(btemp+11)^0,w,c
 16465  01258A  22DE               	addwfc	postinc2,f,c
 16466  01258C  0E00               	movlw	0
 16467  01258E  22DE               	addwfc	postinc2,f,c
 16468  012590  22DE               	addwfc	postinc2,f,c
 16469                           
 16470                           ;stkvar	_b @ sp[(-13)+-4]
 16471  012592  0EEF               	movlw	-17
 16472  012594  006F FF8C  F040    	movff	plusw1,btemp+11
 16473                           
 16474                           ;stkvar	_a @ sp[(-13)+-8]
 16475  01259A  0EEC               	movlw	236
 16476  01259C  24E1               	addwf	fsr1l,w,c
 16477  01259E  6ED9               	movwf	fsr2l,c
 16478  0125A0  0EFF               	movlw	255
 16479  0125A2  20E2               	addwfc	fsr1h,w,c
 16480  0125A4  6EDA               	movwf	fsr2h,c
 16481  0125A6  50DF               	movf	indf2,w,c
 16482  0125A8  0240               	mulwf	(btemp+11)^0,c
 16483                           
 16484                           ;stkvar	_temp @ sp[(-13)+8]
 16485  0125AA  0EFB               	movlw	-5
 16486  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16487  0125B2  0EFC               	movlw	-4
 16488  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16489                           
 16490                           ;stkvar	_temp @ sp[(-13)+8]
 16491  0125BA  0EFB               	movlw	-5
 16492  0125BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 16493  0125C2  0EFC               	movlw	-4
 16494  0125C4  006F FF8C  F040    	movff	plusw1,btemp+11
 16495                           
 16496                           ;stkvar	_grs @ sp[(-13)+4]
 16497  0125CA  50E1               	movf	fsr1l,w,c
 16498  0125CC  0FF7               	addlw	-9
 16499  0125CE  6ED9               	movwf	fsr2l,c
 16500  0125D0  50E2               	movf	fsr1h,w,c
 16501  0125D2  6EDA               	movwf	fsr2h,c
 16502  0125D4  0EFF               	movlw	255
 16503  0125D6  22DA               	addwfc	fsr2h,f,c
 16504  0125D8  503F               	movf	(btemp+10)^0,w,c
 16505  0125DA  26DE               	addwf	postinc2,f,c
 16506  0125DC  5040               	movf	(btemp+11)^0,w,c
 16507  0125DE  22DE               	addwfc	postinc2,f,c
 16508  0125E0  0E00               	movlw	0
 16509  0125E2  22DE               	addwfc	postinc2,f,c
 16510  0125E4  22DE               	addwfc	postinc2,f,c
 16511                           
 16512                           ;stkvar	_grs @ sp[(-13)+4]
 16513  0125E6  50E1               	movf	fsr1l,w,c
 16514  0125E8  0FF7               	addlw	-9
 16515  0125EA  6ED9               	movwf	fsr2l,c
 16516  0125EC  50E2               	movf	fsr1h,w,c
 16517  0125EE  6EDA               	movwf	fsr2h,c
 16518  0125F0  0EFF               	movlw	255
 16519  0125F2  22DA               	addwfc	fsr2h,f,c
 16520  0125F4  0E08               	movlw	8
 16521  0125F6                     u6025:
 16522  0125F6  90D8               	bcf	status,0,c
 16523  0125F8  36DE               	rlcf	postinc2,f,c
 16524  0125FA  36DE               	rlcf	postinc2,f,c
 16525  0125FC  36DE               	rlcf	postinc2,f,c
 16526  0125FE  36DD               	rlcf	postdec2,f,c
 16527  012600  52DD               	movf	postdec2,f,c
 16528  012602  52DD               	movf	postdec2,f,c
 16529  012604  2EE8               	decfsz	wreg,f,c
 16530  012606  D7F7               	goto	u6025
 16531                           
 16532                           ;stkvar	_b @ sp[(-13)+-4]
 16533  012608  0EEF               	movlw	-17
 16534  01260A  006F FF8C  F040    	movff	plusw1,btemp+11
 16535                           
 16536                           ;stkvar	_a @ sp[(-13)+-8]
 16537  012610  0EEB               	movlw	-21
 16538  012612  50E3               	movf	plusw1,w,c
 16539  012614  0240               	mulwf	(btemp+11)^0,c
 16540                           
 16541                           ;stkvar	_temp @ sp[(-13)+8]
 16542  012616  0EFB               	movlw	-5
 16543  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16544  01261E  0EFC               	movlw	-4
 16545  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16546                           
 16547                           ;stkvar	_temp @ sp[(-13)+8]
 16548  012626  0EFB               	movlw	-5
 16549  012628  006F FF8C  F03F    	movff	plusw1,btemp+10
 16550  01262E  0EFC               	movlw	-4
 16551  012630  006F FF8C  F040    	movff	plusw1,btemp+11
 16552                           
 16553                           ;stkvar	_grs @ sp[(-13)+4]
 16554  012636  50E1               	movf	fsr1l,w,c
 16555  012638  0FF7               	addlw	-9
 16556  01263A  6ED9               	movwf	fsr2l,c
 16557  01263C  50E2               	movf	fsr1h,w,c
 16558  01263E  6EDA               	movwf	fsr2h,c
 16559  012640  0EFF               	movlw	255
 16560  012642  22DA               	addwfc	fsr2h,f,c
 16561  012644  503F               	movf	(btemp+10)^0,w,c
 16562  012646  26DE               	addwf	postinc2,f,c
 16563  012648  5040               	movf	(btemp+11)^0,w,c
 16564  01264A  22DE               	addwfc	postinc2,f,c
 16565  01264C  0E00               	movlw	0
 16566  01264E  22DE               	addwfc	postinc2,f,c
 16567  012650  22DE               	addwfc	postinc2,f,c
 16568                           
 16569                           ;stkvar	_b @ sp[(-13)+-4]
 16570  012652  0EF0               	movlw	240
 16571  012654  24E1               	addwf	fsr1l,w,c
 16572  012656  6ED9               	movwf	fsr2l,c
 16573  012658  0EFF               	movlw	255
 16574  01265A  20E2               	addwfc	fsr1h,w,c
 16575  01265C  6EDA               	movwf	fsr2h,c
 16576  01265E  50DF               	movf	indf2,w,c
 16577  012660  6E40               	movwf	(btemp+11)^0,c
 16578                           
 16579                           ;stkvar	_a @ sp[(-13)+-8]
 16580  012662  0EED               	movlw	237
 16581  012664  24E1               	addwf	fsr1l,w,c
 16582  012666  6ED9               	movwf	fsr2l,c
 16583  012668  0EFF               	movlw	255
 16584  01266A  20E2               	addwfc	fsr1h,w,c
 16585  01266C  6EDA               	movwf	fsr2h,c
 16586  01266E  50DF               	movf	indf2,w,c
 16587  012670  0240               	mulwf	(btemp+11)^0,c
 16588                           
 16589                           ;stkvar	_temp @ sp[(-13)+8]
 16590  012672  0EFB               	movlw	-5
 16591  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16592  01267A  0EFC               	movlw	-4
 16593  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16594                           
 16595                           ;stkvar	_temp @ sp[(-13)+8]
 16596  012682  0EFB               	movlw	-5
 16597  012684  006F FF8C  F03F    	movff	plusw1,btemp+10
 16598  01268A  0EFC               	movlw	-4
 16599  01268C  006F FF8C  F040    	movff	plusw1,btemp+11
 16600                           
 16601                           ;stkvar	_prod @ sp[(-13)+0]
 16602  012692  50E1               	movf	fsr1l,w,c
 16603  012694  0FF3               	addlw	-13
 16604  012696  6ED9               	movwf	fsr2l,c
 16605  012698  50E2               	movf	fsr1h,w,c
 16606  01269A  6EDA               	movwf	fsr2h,c
 16607  01269C  0EFF               	movlw	255
 16608  01269E  22DA               	addwfc	fsr2h,f,c
 16609  0126A0  503F               	movf	(btemp+10)^0,w,c
 16610  0126A2  26DE               	addwf	postinc2,f,c
 16611  0126A4  5040               	movf	(btemp+11)^0,w,c
 16612  0126A6  22DE               	addwfc	postinc2,f,c
 16613  0126A8  0E00               	movlw	0
 16614  0126AA  22DE               	addwfc	postinc2,f,c
 16615  0126AC  22DE               	addwfc	postinc2,f,c
 16616                           
 16617                           ;stkvar	_b @ sp[(-13)+-4]
 16618  0126AE  0EF1               	movlw	241
 16619  0126B0  24E1               	addwf	fsr1l,w,c
 16620  0126B2  6ED9               	movwf	fsr2l,c
 16621  0126B4  0EFF               	movlw	255
 16622  0126B6  20E2               	addwfc	fsr1h,w,c
 16623  0126B8  6EDA               	movwf	fsr2h,c
 16624  0126BA  50DF               	movf	indf2,w,c
 16625  0126BC  6E40               	movwf	(btemp+11)^0,c
 16626                           
 16627                           ;stkvar	_a @ sp[(-13)+-8]
 16628  0126BE  0EEC               	movlw	236
 16629  0126C0  24E1               	addwf	fsr1l,w,c
 16630  0126C2  6ED9               	movwf	fsr2l,c
 16631  0126C4  0EFF               	movlw	255
 16632  0126C6  20E2               	addwfc	fsr1h,w,c
 16633  0126C8  6EDA               	movwf	fsr2h,c
 16634  0126CA  50DF               	movf	indf2,w,c
 16635  0126CC  0240               	mulwf	(btemp+11)^0,c
 16636                           
 16637                           ;stkvar	_temp @ sp[(-13)+8]
 16638  0126CE  0EFB               	movlw	-5
 16639  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16640  0126D6  0EFC               	movlw	-4
 16641  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16642                           
 16643                           ;stkvar	_temp @ sp[(-13)+8]
 16644  0126DE  0EFB               	movlw	-5
 16645  0126E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16646  0126E6  0EFC               	movlw	-4
 16647  0126E8  006F FF8C  F040    	movff	plusw1,btemp+11
 16648                           
 16649                           ;stkvar	_prod @ sp[(-13)+0]
 16650  0126EE  50E1               	movf	fsr1l,w,c
 16651  0126F0  0FF3               	addlw	-13
 16652  0126F2  6ED9               	movwf	fsr2l,c
 16653  0126F4  50E2               	movf	fsr1h,w,c
 16654  0126F6  6EDA               	movwf	fsr2h,c
 16655  0126F8  0EFF               	movlw	255
 16656  0126FA  22DA               	addwfc	fsr2h,f,c
 16657  0126FC  503F               	movf	(btemp+10)^0,w,c
 16658  0126FE  26DE               	addwf	postinc2,f,c
 16659  012700  5040               	movf	(btemp+11)^0,w,c
 16660  012702  22DE               	addwfc	postinc2,f,c
 16661  012704  0E00               	movlw	0
 16662  012706  22DE               	addwfc	postinc2,f,c
 16663  012708  22DE               	addwfc	postinc2,f,c
 16664                           
 16665                           ;stkvar	_b @ sp[(-13)+-4]
 16666  01270A  0EF1               	movlw	241
 16667  01270C  24E1               	addwf	fsr1l,w,c
 16668  01270E  6ED9               	movwf	fsr2l,c
 16669  012710  0EFF               	movlw	255
 16670  012712  20E2               	addwfc	fsr1h,w,c
 16671  012714  6EDA               	movwf	fsr2h,c
 16672  012716  50DF               	movf	indf2,w,c
 16673  012718  6E40               	movwf	(btemp+11)^0,c
 16674                           
 16675                           ;stkvar	_a @ sp[(-13)+-8]
 16676  01271A  0EED               	movlw	237
 16677  01271C  24E1               	addwf	fsr1l,w,c
 16678  01271E  6ED9               	movwf	fsr2l,c
 16679  012720  0EFF               	movlw	255
 16680  012722  20E2               	addwfc	fsr1h,w,c
 16681  012724  6EDA               	movwf	fsr2h,c
 16682  012726  50DF               	movf	indf2,w,c
 16683  012728  0240               	mulwf	(btemp+11)^0,c
 16684                           
 16685                           ;stkvar	_temp @ sp[(-13)+8]
 16686  01272A  0EFB               	movlw	-5
 16687  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16688  012732  0EFC               	movlw	-4
 16689  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16690                           
 16691                           ;stkvar	_temp @ sp[(-13)+8]
 16692  01273A  0EFB               	movlw	-5
 16693  01273C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16694  012742  0EFC               	movlw	-4
 16695  012744  006F FF8C  F040    	movff	plusw1,btemp+11
 16696  01274A  503F               	movf	(btemp+10)^0,w,c
 16697  01274C  6E39               	movwf	(btemp+4)^0,c
 16698  01274E  5040               	movf	(btemp+11)^0,w,c
 16699  012750  6E3A               	movwf	(btemp+5)^0,c
 16700  012752  6A3B               	clrf	(btemp+6)^0,c
 16701  012754  6A3C               	clrf	(btemp+7)^0,c
 16702  012756  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 16703  01275C  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 16704  012762  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 16705  012768  6A39               	clrf	(btemp+4)^0,c
 16706                           
 16707                           ;stkvar	_prod @ sp[(-13)+0]
 16708  01276A  50E1               	movf	fsr1l,w,c
 16709  01276C  0FF3               	addlw	-13
 16710  01276E  6ED9               	movwf	fsr2l,c
 16711  012770  50E2               	movf	fsr1h,w,c
 16712  012772  6EDA               	movwf	fsr2h,c
 16713  012774  0EFF               	movlw	255
 16714  012776  22DA               	addwfc	fsr2h,f,c
 16715  012778  5039               	movf	(btemp+4)^0,w,c
 16716  01277A  26DE               	addwf	postinc2,f,c
 16717  01277C  503A               	movf	(btemp+5)^0,w,c
 16718  01277E  22DE               	addwfc	postinc2,f,c
 16719  012780  503B               	movf	(btemp+6)^0,w,c
 16720  012782  22DE               	addwfc	postinc2,f,c
 16721  012784  503C               	movf	(btemp+7)^0,w,c
 16722  012786  22DE               	addwfc	postinc2,f,c
 16723                           
 16724                           ;stkvar	_prod @ sp[(-13)+0]
 16725  012788  50E1               	movf	fsr1l,w,c
 16726  01278A  0FF3               	addlw	-13
 16727  01278C  6ED9               	movwf	fsr2l,c
 16728  01278E  50E2               	movf	fsr1h,w,c
 16729  012790  6EDA               	movwf	fsr2h,c
 16730  012792  0EFF               	movlw	255
 16731  012794  22DA               	addwfc	fsr2h,f,c
 16732                           
 16733                           ;stkvar	_grs @ sp[(-13)+4]
 16734  012796  0EFA               	movlw	250
 16735  012798  24E1               	addwf	fsr1l,w,c
 16736  01279A  6EE9               	movwf	fsr0l,c
 16737  01279C  0EFF               	movlw	255
 16738  01279E  20E2               	addwfc	fsr1h,w,c
 16739  0127A0  6EEA               	movwf	fsr0h,c
 16740  0127A2  50EF               	movf	indf0,w,c
 16741  0127A4  26DE               	addwf	postinc2,f,c
 16742  0127A6  0E00               	movlw	0
 16743  0127A8  22DE               	addwfc	postinc2,f,c
 16744  0127AA  22DE               	addwfc	postinc2,f,c
 16745  0127AC  22DE               	addwfc	postinc2,f,c
 16746                           
 16747                           ;stkvar	_grs @ sp[(-13)+4]
 16748  0127AE  50E1               	movf	fsr1l,w,c
 16749  0127B0  0FF7               	addlw	-9
 16750  0127B2  6ED9               	movwf	fsr2l,c
 16751  0127B4  50E2               	movf	fsr1h,w,c
 16752  0127B6  6EDA               	movwf	fsr2h,c
 16753  0127B8  0EFF               	movlw	255
 16754  0127BA  22DA               	addwfc	fsr2h,f,c
 16755  0127BC  0E08               	movlw	8
 16756  0127BE                     u6035:
 16757  0127BE  90D8               	bcf	status,0,c
 16758  0127C0  36DE               	rlcf	postinc2,f,c
 16759  0127C2  36DE               	rlcf	postinc2,f,c
 16760  0127C4  36DE               	rlcf	postinc2,f,c
 16761  0127C6  36DD               	rlcf	postdec2,f,c
 16762  0127C8  52DD               	movf	postdec2,f,c
 16763  0127CA  52DD               	movf	postdec2,f,c
 16764  0127CC  2EE8               	decfsz	wreg,f,c
 16765  0127CE  D7F7               	goto	u6035
 16766  0127D0  0E82               	movlw	130
 16767  0127D2  6E3F               	movwf	(btemp+10)^0,c
 16768  0127D4  0EFF               	movlw	255
 16769  0127D6  6E40               	movwf	(btemp+11)^0,c
 16770                           
 16771                           ;stkvar	_bexp @ sp[(-13)+10]
 16772  0127D8  0EFD               	movlw	-3
 16773  0127DA  50E3               	movf	plusw1,w,c
 16774  0127DC  6E3D               	movwf	(btemp+8)^0,c
 16775  0127DE  6A3E               	clrf	(btemp+9)^0,c
 16776                           
 16777                           ;stkvar	_aexp @ sp[(-13)+11]
 16778  0127E0  0EFE               	movlw	-2
 16779  0127E2  50E3               	movf	plusw1,w,c
 16780  0127E4  263D               	addwf	(btemp+8)^0,f,c
 16781  0127E6  0E00               	movlw	0
 16782  0127E8  223E               	addwfc	(btemp+9)^0,f,c
 16783  0127EA  503F               	movf	(btemp+10)^0,w,c
 16784  0127EC  263D               	addwf	(btemp+8)^0,f,c
 16785  0127EE  5040               	movf	(btemp+11)^0,w,c
 16786  0127F0  223E               	addwfc	(btemp+9)^0,f,c
 16787                           
 16788                           ;stkvar	_temp @ sp[(-13)+8]
 16789  0127F2  0EFB               	movlw	-5
 16790  0127F4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16791  0127FA  0EFC               	movlw	-4
 16792  0127FC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16793  012802  D021               	goto	l6834
 16794  012804                     l6824:
 16795                           
 16796                           ;stkvar	_prod @ sp[(-13)+0]
 16797  012804  90D8               	bcf	status,0,c
 16798  012806  0EF3               	movlw	-13
 16799  012808  36E3               	rlcf	plusw1,f,c
 16800  01280A  0EF4               	movlw	-12
 16801  01280C  36E3               	rlcf	plusw1,f,c
 16802  01280E  0EF5               	movlw	-11
 16803  012810  36E3               	rlcf	plusw1,f,c
 16804  012812  0EF6               	movlw	-10
 16805  012814  36E3               	rlcf	plusw1,f,c
 16806                           
 16807                           ;stkvar	_grs @ sp[(-13)+4]
 16808  012816  0EFA               	movlw	-6
 16809  012818  AEE3               	btfss	plusw1,7,c
 16810  01281A  D002               	goto	l6830
 16811                           
 16812                           ;stkvar	_prod @ sp[(-13)+0]
 16813  01281C  0EF3               	movlw	-13
 16814  01281E  80E3               	bsf	plusw1,0,c
 16815  012820                     l6830:
 16816                           
 16817                           ;stkvar	_grs @ sp[(-13)+4]
 16818  012820  90D8               	bcf	status,0,c
 16819  012822  0EF7               	movlw	-9
 16820  012824  36E3               	rlcf	plusw1,f,c
 16821  012826  0EF8               	movlw	-8
 16822  012828  36E3               	rlcf	plusw1,f,c
 16823  01282A  0EF9               	movlw	-7
 16824  01282C  36E3               	rlcf	plusw1,f,c
 16825  01282E  0EFA               	movlw	-6
 16826  012830  36E3               	rlcf	plusw1,f,c
 16827                           
 16828                           ;stkvar	_temp @ sp[(-13)+8]
 16829  012832  50E1               	movf	fsr1l,w,c
 16830  012834  0FFB               	addlw	-5
 16831  012836  6ED9               	movwf	fsr2l,c
 16832  012838  50E2               	movf	fsr1h,w,c
 16833  01283A  6EDA               	movwf	fsr2h,c
 16834  01283C  0EFF               	movlw	255
 16835  01283E  22DA               	addwfc	fsr2h,f,c
 16836  012840  06DE               	decf	postinc2,f,c
 16837  012842  0E00               	movlw	0
 16838  012844  5ADD               	subwfb	postdec2,f,c
 16839  012846                     l6834:
 16840                           
 16841                           ;stkvar	_prod @ sp[(-13)+0]
 16842  012846  0EF5               	movlw	-11
 16843  012848  AEE3               	btfss	plusw1,7,c
 16844  01284A  D7DC               	goto	l6824
 16845                           
 16846                           ;stkvar	_aexp @ sp[(-13)+11]
 16847  01284C  0EFE               	movlw	-2
 16848  01284E  6AE3               	clrf	plusw1,c
 16849                           
 16850                           ;stkvar	_grs @ sp[(-13)+4]
 16851  012850  0EFA               	movlw	-6
 16852  012852  AEE3               	btfss	plusw1,7,c
 16853  012854  D020               	goto	l6848
 16854                           
 16855                           ;stkvar	_grs @ sp[(-13)+4]
 16856  012856  50E1               	movf	fsr1l,w,c
 16857  012858  0FF7               	addlw	-9
 16858  01285A  6ED9               	movwf	fsr2l,c
 16859  01285C  50E2               	movf	fsr1h,w,c
 16860  01285E  6EDA               	movwf	fsr2h,c
 16861  012860  0EFF               	movlw	255
 16862  012862  22DA               	addwfc	fsr2h,f,c
 16863  012864  0EFF               	movlw	255
 16864  012866  14DE               	andwf	postinc2,w,c
 16865  012868  6E3D               	movwf	(btemp+8)^0,c
 16866  01286A  0EFF               	movlw	255
 16867  01286C  14DE               	andwf	postinc2,w,c
 16868  01286E  6E3E               	movwf	(btemp+9)^0,c
 16869  012870  0EFF               	movlw	255
 16870  012872  14DE               	andwf	postinc2,w,c
 16871  012874  6E3F               	movwf	(btemp+10)^0,c
 16872  012876  0E7F               	movlw	127
 16873  012878  14DE               	andwf	postinc2,w,c
 16874  01287A  6E40               	movwf	(btemp+11)^0,c
 16875  01287C  503D               	movf	(btemp+8)^0,w,c
 16876  01287E  103E               	iorwf	(btemp+9)^0,w,c
 16877  012880  103F               	iorwf	(btemp+10)^0,w,c
 16878  012882  1040               	iorwf	(btemp+11)^0,w,c
 16879  012884  B4D8               	btfsc	status,2,c
 16880  012886  D004               	goto	l6844
 16881  012888                     u6070:
 16882                           
 16883                           ;stkvar	_aexp @ sp[(-13)+11]
 16884  012888  0EFE               	movlw	-2
 16885  01288A  6AE3               	clrf	plusw1,c
 16886  01288C  2AE3               	incf	plusw1,f,c
 16887  01288E  D003               	goto	l6848
 16888  012890                     l6844:
 16889                           
 16890                           ;stkvar	_prod @ sp[(-13)+0]
 16891  012890  0EF3               	movlw	-13
 16892  012892  B0E3               	btfsc	plusw1,0,c
 16893  012894  D7F9               	goto	u6070
 16894  012896                     l6848:
 16895                           
 16896                           ;stkvar	_aexp @ sp[(-13)+11]
 16897  012896  0EFE               	movlw	-2
 16898  012898  50E3               	movf	plusw1,w,c
 16899  01289A  B4D8               	btfsc	status,2,c
 16900  01289C  D036               	goto	l6858
 16901                           
 16902                           ;stkvar	_prod @ sp[(-13)+0]
 16903  01289E  50E1               	movf	fsr1l,w,c
 16904  0128A0  0FF3               	addlw	-13
 16905  0128A2  6ED9               	movwf	fsr2l,c
 16906  0128A4  50E2               	movf	fsr1h,w,c
 16907  0128A6  6EDA               	movwf	fsr2h,c
 16908  0128A8  0EFF               	movlw	255
 16909  0128AA  22DA               	addwfc	fsr2h,f,c
 16910  0128AC  2ADE               	incf	postinc2,f,c
 16911  0128AE  0E00               	movlw	0
 16912  0128B0  22DE               	addwfc	postinc2,f,c
 16913  0128B2  22DE               	addwfc	postinc2,f,c
 16914  0128B4  22DE               	addwfc	postinc2,f,c
 16915                           
 16916                           ;stkvar	_prod @ sp[(-13)+0]
 16917  0128B6  0EF6               	movlw	-10
 16918  0128B8  A0E3               	btfss	plusw1,0,c
 16919  0128BA  D027               	goto	l6858
 16920  0128BC  0E01               	movlw	1
 16921  0128BE  6E40               	movwf	(btemp+11)^0,c
 16922                           
 16923                           ;stkvar	_prod @ sp[(-13)+0]
 16924  0128C0  50E1               	movf	fsr1l,w,c
 16925  0128C2  0FF3               	addlw	-13
 16926  0128C4  6ED9               	movwf	fsr2l,c
 16927  0128C6  50E2               	movf	fsr1h,w,c
 16928  0128C8  6EDA               	movwf	fsr2h,c
 16929  0128CA  0EFF               	movlw	255
 16930  0128CC  22DA               	addwfc	fsr2h,f,c
 16931  0128CE  2840               	incf	(btemp+11)^0,w,c
 16932  0128D0  52DE               	movf	postinc2,f,c
 16933  0128D2  D008               	goto	u6110
 16934  0128D4                     u6115:
 16935  0128D4  52DE               	movf	postinc2,f,c
 16936  0128D6  90D8               	bcf	status,0,c
 16937  0128D8  BEDC               	btfsc	preinc2,7,c
 16938  0128DA  80D8               	bsf	status,0,c
 16939  0128DC  32DD               	rrcf	postdec2,f,c
 16940  0128DE  32DD               	rrcf	postdec2,f,c
 16941  0128E0  32DD               	rrcf	postdec2,f,c
 16942  0128E2  32DE               	rrcf	postinc2,f,c
 16943  0128E4                     u6110:
 16944  0128E4  2EE8               	decfsz	wreg,f,c
 16945  0128E6  D7F6               	goto	u6115
 16946                           
 16947                           ;stkvar	_temp @ sp[(-13)+8]
 16948  0128E8  0EFB               	movlw	-5
 16949  0128EA  50E3               	movf	plusw1,w,c
 16950  0128EC  0F01               	addlw	1
 16951  0128EE  6E35               	movwf	btemp^0,c
 16952  0128F0  0EFB               	movlw	-5
 16953  0128F2  0060  F0D7  FFE3   	movff	btemp,plusw1
 16954  0128F8  6A35               	clrf	btemp^0,c
 16955  0128FA  0EFC               	movlw	-4
 16956  0128FC  50E3               	movf	plusw1,w,c
 16957  0128FE  2035               	addwfc	btemp^0,w,c
 16958  012900  6E35               	movwf	btemp^0,c
 16959  012902  0EFC               	movlw	-4
 16960  012904  0060  F0D7  FFE3   	movff	btemp,plusw1
 16961  01290A                     l6858:
 16962                           
 16963                           ;stkvar	_temp @ sp[(-13)+8]
 16964  01290A  0EFC               	movlw	-4
 16965  01290C  BEE3               	btfsc	plusw1,7,c
 16966  01290E  D020               	goto	l6862
 16967  012910  0EFC               	movlw	-4
 16968  012912  50E3               	movf	plusw1,w,c
 16969  012914  E104               	bnz	u6120
 16970  012916  0EFB               	movlw	-5
 16971  012918  28E3               	incf	plusw1,w,c
 16972  01291A  A0D8               	btfss	status,0,c
 16973  01291C  D019               	goto	l6862
 16974  01291E                     u6120:
 16975  01291E  0E00               	movlw	0
 16976  012920  6E3D               	movwf	(btemp+8)^0,c
 16977  012922  0E00               	movlw	0
 16978  012924  6E3E               	movwf	(btemp+9)^0,c
 16979  012926  0E80               	movlw	128
 16980  012928  6E3F               	movwf	(btemp+10)^0,c
 16981  01292A  0E7F               	movlw	127
 16982  01292C  6E40               	movwf	(btemp+11)^0,c
 16983                           
 16984                           ;stkvar	_prod @ sp[(-13)+0]
 16985  01292E  0EF3               	movlw	-13
 16986  012930  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16987  012936  0EF4               	movlw	-12
 16988  012938  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16989  01293E  0EF5               	movlw	-11
 16990  012940  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16991  012946  0EF6               	movlw	-10
 16992  012948  0060  F103  FFE3   	movff	btemp+11,plusw1
 16993  01294E  D044               	goto	l6878
 16994  012950                     l6862:
 16995                           
 16996                           ;stkvar	_temp @ sp[(-13)+8]
 16997  012950  0EFC               	movlw	-4
 16998  012952  BEE3               	btfsc	plusw1,7,c
 16999  012954  D007               	goto	u6130
 17000  012956  0EFC               	movlw	-4
 17001  012958  50E3               	movf	plusw1,w,c
 17002  01295A  E10F               	bnz	l6868
 17003  01295C  0EFB               	movlw	-5
 17004  01295E  04E3               	decf	plusw1,w,c
 17005  012960  B0D8               	btfsc	status,0,c
 17006  012962  D00B               	goto	l6868
 17007  012964                     u6130:
 17008                           
 17009                           ;stkvar	_prod @ sp[(-13)+0]
 17010  012964  0EF3               	movlw	-13
 17011  012966  6AE3               	clrf	plusw1,c
 17012  012968  0EF4               	movlw	-12
 17013  01296A  6AE3               	clrf	plusw1,c
 17014  01296C  0EF5               	movlw	-11
 17015  01296E  6AE3               	clrf	plusw1,c
 17016  012970  0EF6               	movlw	-10
 17017  012972  6AE3               	clrf	plusw1,c
 17018                           
 17019                           ;stkvar	_sign @ sp[(-13)+12]
 17020  012974  0EFF               	movlw	-1
 17021  012976  6AE3               	clrf	plusw1,c
 17022  012978  D02F               	goto	l6878
 17023  01297A                     l6868:
 17024                           
 17025                           ;stkvar	_temp @ sp[(-13)+8]
 17026                           ;stkvar	_bexp @ sp[(-13)+10]
 17027  01297A  0EFB               	movlw	-5
 17028  01297C  006F FF8C  F035    	movff	plusw1,btemp
 17029  012982  0EFD               	movlw	-3
 17030  012984  0060  F0D7  FFE3   	movff	btemp,plusw1
 17031                           
 17032                           ;stkvar	_prod @ sp[(-13)+0]
 17033  01298A  50E1               	movf	fsr1l,w,c
 17034  01298C  0FF3               	addlw	-13
 17035  01298E  6ED9               	movwf	fsr2l,c
 17036  012990  50E2               	movf	fsr1h,w,c
 17037  012992  6EDA               	movwf	fsr2h,c
 17038  012994  0EFF               	movlw	255
 17039  012996  22DA               	addwfc	fsr2h,f,c
 17040  012998  0EFF               	movlw	255
 17041  01299A  16DE               	andwf	postinc2,f,c
 17042  01299C  0EFF               	movlw	255
 17043  01299E  16DE               	andwf	postinc2,f,c
 17044  0129A0  0E7F               	movlw	127
 17045  0129A2  16DE               	andwf	postinc2,f,c
 17046  0129A4  0E00               	movlw	0
 17047  0129A6  16DE               	andwf	postinc2,f,c
 17048                           
 17049                           ;stkvar	_bexp @ sp[(-13)+10]
 17050  0129A8  0EFD               	movlw	-3
 17051  0129AA  A0E3               	btfss	plusw1,0,c
 17052  0129AC  D008               	goto	l6876
 17053                           
 17054                           ;stkvar	_prod @ sp[(-13)+0]
 17055  0129AE  0EF5               	movlw	245
 17056  0129B0  24E1               	addwf	fsr1l,w,c
 17057  0129B2  6ED9               	movwf	fsr2l,c
 17058  0129B4  0EFF               	movlw	255
 17059  0129B6  20E2               	addwfc	fsr1h,w,c
 17060  0129B8  6EDA               	movwf	fsr2h,c
 17061  0129BA  0E00               	movlw	0
 17062  0129BC  8EDB               	bsf	plusw2,7,c
 17063  0129BE                     l6876:
 17064                           
 17065                           ;stkvar	_prod @ sp[(-13)+0]
 17066  0129BE  0EF6               	movlw	246
 17067  0129C0  24E1               	addwf	fsr1l,w,c
 17068  0129C2  6ED9               	movwf	fsr2l,c
 17069  0129C4  0EFF               	movlw	255
 17070  0129C6  20E2               	addwfc	fsr1h,w,c
 17071  0129C8  6EDA               	movwf	fsr2h,c
 17072                           
 17073                           ;stkvar	_bexp @ sp[(-13)+10]
 17074  0129CA  0EFD               	movlw	-3
 17075  0129CC  006F FF8C  F040    	movff	plusw1,btemp+11
 17076  0129D2  90D8               	bcf	status,0,c
 17077  0129D4  3040               	rrcf	(btemp+11)^0,w,c
 17078  0129D6  6EDF               	movwf	indf2,c
 17079  0129D8                     l6878:
 17080                           
 17081                           ;stkvar	_sign @ sp[(-13)+12]
 17082  0129D8  0EFF               	movlw	-1
 17083  0129DA  006F FF8C  F040    	movff	plusw1,btemp+11
 17084                           
 17085                           ;stkvar	_prod @ sp[(-13)+0]
 17086  0129E0  0EF6               	movlw	246
 17087  0129E2  24E1               	addwf	fsr1l,w,c
 17088  0129E4  6ED9               	movwf	fsr2l,c
 17089  0129E6  0EFF               	movlw	255
 17090  0129E8  20E2               	addwfc	fsr1h,w,c
 17091  0129EA  6EDA               	movwf	fsr2h,c
 17092  0129EC  5040               	movf	(btemp+11)^0,w,c
 17093  0129EE  12DF               	iorwf	indf2,f,c
 17094                           
 17095                           ;stkvar	_prod @ sp[(-13)+0]
 17096  0129F0  0EF3               	movlw	-13
 17097  0129F2  006F FF8C  F035    	movff	plusw1,btemp
 17098  0129F8  0EF4               	movlw	-12
 17099  0129FA  006F FF8C  F036    	movff	plusw1,btemp+1
 17100  012A00  0EF5               	movlw	-11
 17101  012A02  006F FF8C  F037    	movff	plusw1,btemp+2
 17102  012A08  0EF6               	movlw	-10
 17103  012A0A  006F FF8C  F038    	movff	plusw1,btemp+3
 17104  012A10                     l2629:
 17105                           
 17106                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17107  012A10  0EEB               	movlw	235
 17108  012A12  26E1               	addwf	fsr1l,f,c
 17109  012A14  0EFF               	movlw	255
 17110  012A16  22E2               	addwfc	fsr1h,f,c
 17111  012A18  0012               	return		;funcret
 17112  012A1A                     __end_of___flmul:
 17113                           	opt callstack 0
 17114                           
 17115 ;; *************** function ___flge *****************
 17116 ;; Defined at:
 17117 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17118 ;; Parameters:    Size  Location     Type
 17119 ;;  ff1             4  [STACK] unsigned char 
 17120 ;;  ff2             4  [STACK] unsigned char 
 17121 ;; Auto vars:     Size  Location     Type
 17122 ;;		None
 17123 ;; Return value:  Size  Location     Type
 17124 ;;		None               void
 17125 ;; Registers used:
 17126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17127 ;; Tracked objects:
 17128 ;;		On entry : 0/4
 17129 ;;		On exit  : 0/0
 17130 ;;		Unchanged: 0/0
 17131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17136 ;;Total ram usage:        0 bytes
 17137 ;; Hardware stack levels used:    1
 17138 ;; Hardware stack levels required when called:    6
 17139 ;; This function calls:
 17140 ;;		Nothing
 17141 ;; This function is called by:
 17142 ;;		_efgtoa
 17143 ;; This function uses a reentrant model
 17144 ;;
 17145                           
 17146                           	psect	text56
 17147  01690A                     __ptext56:
 17148                           	opt callstack 0
 17149  01690A                     ___flge:
 17150                           	opt callstack 17
 17151                           
 17152                           ;stkvar	_ff1 @ sp[(0)+-4]
 17153                           
 17154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17155                           ;incstack = 0
 17156  01690A  50E1               	movf	fsr1l,w,c
 17157  01690C  0FFC               	addlw	-4
 17158  01690E  6ED9               	movwf	fsr2l,c
 17159  016910  50E2               	movf	fsr1h,w,c
 17160  016912  6EDA               	movwf	fsr2h,c
 17161  016914  0EFF               	movlw	255
 17162  016916  22DA               	addwfc	fsr2h,f,c
 17163  016918  0E00               	movlw	0
 17164  01691A  14DE               	andwf	postinc2,w,c
 17165  01691C  6E3D               	movwf	(btemp+8)^0,c
 17166  01691E  0E00               	movlw	0
 17167  016920  14DE               	andwf	postinc2,w,c
 17168  016922  6E3E               	movwf	(btemp+9)^0,c
 17169  016924  0E80               	movlw	128
 17170  016926  14DE               	andwf	postinc2,w,c
 17171  016928  6E3F               	movwf	(btemp+10)^0,c
 17172  01692A  0E7F               	movlw	127
 17173  01692C  14DE               	andwf	postinc2,w,c
 17174  01692E  6E40               	movwf	(btemp+11)^0,c
 17175  016930  503D               	movf	(btemp+8)^0,w,c
 17176  016932  103E               	iorwf	(btemp+9)^0,w,c
 17177  016934  103F               	iorwf	(btemp+10)^0,w,c
 17178  016936  1040               	iorwf	(btemp+11)^0,w,c
 17179  016938  A4D8               	btfss	status,2,c
 17180  01693A  D008               	goto	l6994
 17181                           
 17182                           ;stkvar	_ff1 @ sp[(0)+-4]
 17183  01693C  0EFC               	movlw	-4
 17184  01693E  6AE3               	clrf	plusw1,c
 17185  016940  0EFD               	movlw	-3
 17186  016942  6AE3               	clrf	plusw1,c
 17187  016944  0EFE               	movlw	-2
 17188  016946  6AE3               	clrf	plusw1,c
 17189  016948  0EFF               	movlw	-1
 17190  01694A  6AE3               	clrf	plusw1,c
 17191  01694C                     l6994:
 17192                           
 17193                           ;stkvar	_ff2 @ sp[(0)+-8]
 17194  01694C  50E1               	movf	fsr1l,w,c
 17195  01694E  0FF8               	addlw	-8
 17196  016950  6ED9               	movwf	fsr2l,c
 17197  016952  50E2               	movf	fsr1h,w,c
 17198  016954  6EDA               	movwf	fsr2h,c
 17199  016956  0EFF               	movlw	255
 17200  016958  22DA               	addwfc	fsr2h,f,c
 17201  01695A  0E00               	movlw	0
 17202  01695C  14DE               	andwf	postinc2,w,c
 17203  01695E  6E3D               	movwf	(btemp+8)^0,c
 17204  016960  0E00               	movlw	0
 17205  016962  14DE               	andwf	postinc2,w,c
 17206  016964  6E3E               	movwf	(btemp+9)^0,c
 17207  016966  0E80               	movlw	128
 17208  016968  14DE               	andwf	postinc2,w,c
 17209  01696A  6E3F               	movwf	(btemp+10)^0,c
 17210  01696C  0E7F               	movlw	127
 17211  01696E  14DE               	andwf	postinc2,w,c
 17212  016970  6E40               	movwf	(btemp+11)^0,c
 17213  016972  503D               	movf	(btemp+8)^0,w,c
 17214  016974  103E               	iorwf	(btemp+9)^0,w,c
 17215  016976  103F               	iorwf	(btemp+10)^0,w,c
 17216  016978  1040               	iorwf	(btemp+11)^0,w,c
 17217  01697A  A4D8               	btfss	status,2,c
 17218  01697C  D008               	goto	l2274
 17219                           
 17220                           ;stkvar	_ff2 @ sp[(0)+-8]
 17221  01697E  0EF8               	movlw	-8
 17222  016980  6AE3               	clrf	plusw1,c
 17223  016982  0EF9               	movlw	-7
 17224  016984  6AE3               	clrf	plusw1,c
 17225  016986  0EFA               	movlw	-6
 17226  016988  6AE3               	clrf	plusw1,c
 17227  01698A  0EFB               	movlw	-5
 17228  01698C  6AE3               	clrf	plusw1,c
 17229  01698E                     l2274:
 17230                           
 17231                           ;stkvar	_ff1 @ sp[(0)+-4]
 17232  01698E  0EFF               	movlw	-1
 17233  016990  AEE3               	btfss	plusw1,7,c
 17234  016992  D024               	goto	l7000
 17235                           
 17236                           ;stkvar	_ff1 @ sp[(0)+-4]
 17237  016994  0E00               	movlw	0
 17238  016996  6E3D               	movwf	(btemp+8)^0,c
 17239  016998  0E00               	movlw	0
 17240  01699A  6E3E               	movwf	(btemp+9)^0,c
 17241  01699C  0E00               	movlw	0
 17242  01699E  6E3F               	movwf	(btemp+10)^0,c
 17243  0169A0  0E80               	movlw	128
 17244  0169A2  6E40               	movwf	(btemp+11)^0,c
 17245  0169A4  0EFC               	movlw	-4
 17246  0169A6  50E3               	movf	plusw1,w,c
 17247  0169A8  5E3D               	subwf	(btemp+8)^0,f,c
 17248  0169AA  0EFD               	movlw	-3
 17249  0169AC  50E3               	movf	plusw1,w,c
 17250  0169AE  5A3E               	subwfb	(btemp+9)^0,f,c
 17251  0169B0  0EFE               	movlw	-2
 17252  0169B2  50E3               	movf	plusw1,w,c
 17253  0169B4  5A3F               	subwfb	(btemp+10)^0,f,c
 17254  0169B6  0EFF               	movlw	-1
 17255  0169B8  50E3               	movf	plusw1,w,c
 17256  0169BA  5A40               	subwfb	(btemp+11)^0,f,c
 17257                           
 17258                           ;stkvar	_ff1 @ sp[(0)+-4]
 17259  0169BC  0EFC               	movlw	-4
 17260  0169BE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17261  0169C4  0EFD               	movlw	-3
 17262  0169C6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17263  0169CC  0EFE               	movlw	-2
 17264  0169CE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17265  0169D4  0EFF               	movlw	-1
 17266  0169D6  0060  F103  FFE3   	movff	btemp+11,plusw1
 17267  0169DC                     l7000:
 17268                           
 17269                           ;stkvar	_ff2 @ sp[(0)+-8]
 17270  0169DC  0EFB               	movlw	-5
 17271  0169DE  AEE3               	btfss	plusw1,7,c
 17272  0169E0  D024               	goto	l7004
 17273                           
 17274                           ;stkvar	_ff2 @ sp[(0)+-8]
 17275  0169E2  0E00               	movlw	0
 17276  0169E4  6E3D               	movwf	(btemp+8)^0,c
 17277  0169E6  0E00               	movlw	0
 17278  0169E8  6E3E               	movwf	(btemp+9)^0,c
 17279  0169EA  0E00               	movlw	0
 17280  0169EC  6E3F               	movwf	(btemp+10)^0,c
 17281  0169EE  0E80               	movlw	128
 17282  0169F0  6E40               	movwf	(btemp+11)^0,c
 17283  0169F2  0EF8               	movlw	-8
 17284  0169F4  50E3               	movf	plusw1,w,c
 17285  0169F6  5E3D               	subwf	(btemp+8)^0,f,c
 17286  0169F8  0EF9               	movlw	-7
 17287  0169FA  50E3               	movf	plusw1,w,c
 17288  0169FC  5A3E               	subwfb	(btemp+9)^0,f,c
 17289  0169FE  0EFA               	movlw	-6
 17290  016A00  50E3               	movf	plusw1,w,c
 17291  016A02  5A3F               	subwfb	(btemp+10)^0,f,c
 17292  016A04  0EFB               	movlw	-5
 17293  016A06  50E3               	movf	plusw1,w,c
 17294  016A08  5A40               	subwfb	(btemp+11)^0,f,c
 17295                           
 17296                           ;stkvar	_ff2 @ sp[(0)+-8]
 17297  016A0A  0EF8               	movlw	-8
 17298  016A0C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17299  016A12  0EF9               	movlw	-7
 17300  016A14  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17301  016A1A  0EFA               	movlw	-6
 17302  016A1C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17303  016A22  0EFB               	movlw	-5
 17304  016A24  0060  F103  FFE3   	movff	btemp+11,plusw1
 17305  016A2A                     l7004:
 17306                           
 17307                           ;stkvar	_ff1 @ sp[(0)+-4]
 17308  016A2A  0EFF               	movlw	-1
 17309  016A2C  7EE3               	btg	plusw1,7,c
 17310                           
 17311                           ;stkvar	_ff2 @ sp[(0)+-8]
 17312  016A2E  0EFB               	movlw	-5
 17313  016A30  7EE3               	btg	plusw1,7,c
 17314                           
 17315                           ;stkvar	_ff2 @ sp[(0)+-8]
 17316                           ;stkvar	_ff1 @ sp[(0)+-4]
 17317  016A32  50E1               	movf	fsr1l,w,c
 17318  016A34  0FFC               	addlw	-4
 17319  016A36  6ED9               	movwf	fsr2l,c
 17320  016A38  50E2               	movf	fsr1h,w,c
 17321  016A3A  6EDA               	movwf	fsr2h,c
 17322  016A3C  0EFF               	movlw	255
 17323  016A3E  22DA               	addwfc	fsr2h,f,c
 17324  016A40  0EF8               	movlw	-8
 17325  016A42  50E3               	movf	plusw1,w,c
 17326  016A44  5CDE               	subwf	postinc2,w,c
 17327  016A46  0EF9               	movlw	-7
 17328  016A48  50E3               	movf	plusw1,w,c
 17329  016A4A  58DE               	subwfb	postinc2,w,c
 17330  016A4C  0EFA               	movlw	-6
 17331  016A4E  50E3               	movf	plusw1,w,c
 17332  016A50  58DE               	subwfb	postinc2,w,c
 17333  016A52  0EFB               	movlw	-5
 17334  016A54  50E3               	movf	plusw1,w,c
 17335  016A56  58DE               	subwfb	postinc2,w,c
 17336  016A58  B0D8               	btfsc	status,0,c
 17337  016A5A  D002               	goto	l7012
 17338  016A5C  9035               	bcf	btemp& (0+255),0,c
 17339  016A5E  D001               	goto	l2281
 17340  016A60                     l7012:
 17341  016A60  8035               	bsf	btemp& (0+255),0,c
 17342  016A62                     l2281:
 17343                           
 17344                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17345  016A62  0EF8               	movlw	248
 17346  016A64  26E1               	addwf	fsr1l,f,c
 17347  016A66  0EFF               	movlw	255
 17348  016A68  22E2               	addwfc	fsr1h,f,c
 17349  016A6A  0012               	return		;funcret
 17350  016A6C                     __end_of___flge:
 17351                           	opt callstack 0
 17352                           
 17353 ;; *************** function ___fleq *****************
 17354 ;; Defined at:
 17355 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17356 ;; Parameters:    Size  Location     Type
 17357 ;;  ff1             4  [STACK] unsigned char 
 17358 ;;  ff2             4  [STACK] unsigned char 
 17359 ;; Auto vars:     Size  Location     Type
 17360 ;;		None
 17361 ;; Return value:  Size  Location     Type
 17362 ;;		None               void
 17363 ;; Registers used:
 17364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17365 ;; Tracked objects:
 17366 ;;		On entry : 0/4
 17367 ;;		On exit  : 0/0
 17368 ;;		Unchanged: 0/0
 17369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17374 ;;Total ram usage:        0 bytes
 17375 ;; Hardware stack levels used:    1
 17376 ;; Hardware stack levels required when called:    6
 17377 ;; This function calls:
 17378 ;;		Nothing
 17379 ;; This function is called by:
 17380 ;;		_efgtoa
 17381 ;; This function uses a reentrant model
 17382 ;;
 17383                           
 17384                           	psect	text57
 17385  017614                     __ptext57:
 17386                           	opt callstack 0
 17387  017614                     ___fleq:
 17388                           	opt callstack 17
 17389                           
 17390                           ;stkvar	_ff1 @ sp[(0)+-4]
 17391                           
 17392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17393                           ;incstack = 0
 17394  017614  50E1               	movf	fsr1l,w,c
 17395  017616  0FFC               	addlw	-4
 17396  017618  6ED9               	movwf	fsr2l,c
 17397  01761A  50E2               	movf	fsr1h,w,c
 17398  01761C  6EDA               	movwf	fsr2h,c
 17399  01761E  0EFF               	movlw	255
 17400  017620  22DA               	addwfc	fsr2h,f,c
 17401  017622  0E00               	movlw	0
 17402  017624  14DE               	andwf	postinc2,w,c
 17403  017626  6E3D               	movwf	(btemp+8)^0,c
 17404  017628  0E00               	movlw	0
 17405  01762A  14DE               	andwf	postinc2,w,c
 17406  01762C  6E3E               	movwf	(btemp+9)^0,c
 17407  01762E  0E80               	movlw	128
 17408  017630  14DE               	andwf	postinc2,w,c
 17409  017632  6E3F               	movwf	(btemp+10)^0,c
 17410  017634  0E7F               	movlw	127
 17411  017636  14DE               	andwf	postinc2,w,c
 17412  017638  6E40               	movwf	(btemp+11)^0,c
 17413  01763A  503D               	movf	(btemp+8)^0,w,c
 17414  01763C  103E               	iorwf	(btemp+9)^0,w,c
 17415  01763E  103F               	iorwf	(btemp+10)^0,w,c
 17416  017640  1040               	iorwf	(btemp+11)^0,w,c
 17417  017642  A4D8               	btfss	status,2,c
 17418  017644  D008               	goto	l6978
 17419                           
 17420                           ;stkvar	_ff1 @ sp[(0)+-4]
 17421  017646  0EFC               	movlw	-4
 17422  017648  6AE3               	clrf	plusw1,c
 17423  01764A  0EFD               	movlw	-3
 17424  01764C  6AE3               	clrf	plusw1,c
 17425  01764E  0EFE               	movlw	-2
 17426  017650  6AE3               	clrf	plusw1,c
 17427  017652  0EFF               	movlw	-1
 17428  017654  6AE3               	clrf	plusw1,c
 17429  017656                     l6978:
 17430                           
 17431                           ;stkvar	_ff2 @ sp[(0)+-8]
 17432  017656  50E1               	movf	fsr1l,w,c
 17433  017658  0FF8               	addlw	-8
 17434  01765A  6ED9               	movwf	fsr2l,c
 17435  01765C  50E2               	movf	fsr1h,w,c
 17436  01765E  6EDA               	movwf	fsr2h,c
 17437  017660  0EFF               	movlw	255
 17438  017662  22DA               	addwfc	fsr2h,f,c
 17439  017664  0E00               	movlw	0
 17440  017666  14DE               	andwf	postinc2,w,c
 17441  017668  6E3D               	movwf	(btemp+8)^0,c
 17442  01766A  0E00               	movlw	0
 17443  01766C  14DE               	andwf	postinc2,w,c
 17444  01766E  6E3E               	movwf	(btemp+9)^0,c
 17445  017670  0E80               	movlw	128
 17446  017672  14DE               	andwf	postinc2,w,c
 17447  017674  6E3F               	movwf	(btemp+10)^0,c
 17448  017676  0E7F               	movlw	127
 17449  017678  14DE               	andwf	postinc2,w,c
 17450  01767A  6E40               	movwf	(btemp+11)^0,c
 17451  01767C  503D               	movf	(btemp+8)^0,w,c
 17452  01767E  103E               	iorwf	(btemp+9)^0,w,c
 17453  017680  103F               	iorwf	(btemp+10)^0,w,c
 17454  017682  1040               	iorwf	(btemp+11)^0,w,c
 17455  017684  A4D8               	btfss	status,2,c
 17456  017686  D008               	goto	l6982
 17457                           
 17458                           ;stkvar	_ff2 @ sp[(0)+-8]
 17459  017688  0EF8               	movlw	-8
 17460  01768A  6AE3               	clrf	plusw1,c
 17461  01768C  0EF9               	movlw	-7
 17462  01768E  6AE3               	clrf	plusw1,c
 17463  017690  0EFA               	movlw	-6
 17464  017692  6AE3               	clrf	plusw1,c
 17465  017694  0EFB               	movlw	-5
 17466  017696  6AE3               	clrf	plusw1,c
 17467  017698                     l6982:
 17468                           
 17469                           ;stkvar	_ff2 @ sp[(0)+-8]
 17470                           ;stkvar	_ff1 @ sp[(0)+-4]
 17471  017698  50E1               	movf	fsr1l,w,c
 17472  01769A  0FFC               	addlw	-4
 17473  01769C  6ED9               	movwf	fsr2l,c
 17474  01769E  50E2               	movf	fsr1h,w,c
 17475  0176A0  6EDA               	movwf	fsr2h,c
 17476  0176A2  0EFF               	movlw	255
 17477  0176A4  22DA               	addwfc	fsr2h,f,c
 17478  0176A6  0EF8               	movlw	-8
 17479  0176A8  50E3               	movf	plusw1,w,c
 17480  0176AA  18DE               	xorwf	postinc2,w,c
 17481  0176AC  E10D               	bnz	u6310
 17482  0176AE  0EF9               	movlw	-7
 17483  0176B0  50E3               	movf	plusw1,w,c
 17484  0176B2  18DE               	xorwf	postinc2,w,c
 17485  0176B4  E109               	bnz	u6310
 17486  0176B6  0EFA               	movlw	-6
 17487  0176B8  50E3               	movf	plusw1,w,c
 17488  0176BA  18DE               	xorwf	postinc2,w,c
 17489  0176BC  E105               	bnz	u6310
 17490  0176BE  0EFB               	movlw	-5
 17491  0176C0  50E3               	movf	plusw1,w,c
 17492  0176C2  18DE               	xorwf	postinc2,w,c
 17493  0176C4  B4D8               	btfsc	status,2,c
 17494  0176C6  D002               	goto	l6986
 17495  0176C8                     u6310:
 17496  0176C8  9035               	bcf	btemp& (0+255),0,c
 17497  0176CA  D001               	goto	l2270
 17498  0176CC                     l6986:
 17499  0176CC  8035               	bsf	btemp& (0+255),0,c
 17500  0176CE                     l2270:
 17501                           
 17502                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17503  0176CE  0EF8               	movlw	248
 17504  0176D0  26E1               	addwf	fsr1l,f,c
 17505  0176D2  0EFF               	movlw	255
 17506  0176D4  22E2               	addwfc	fsr1h,f,c
 17507  0176D6  0012               	return		;funcret
 17508  0176D8                     __end_of___fleq:
 17509                           	opt callstack 0
 17510                           
 17511 ;; *************** function ___fldiv *****************
 17512 ;; Defined at:
 17513 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17514 ;; Parameters:    Size  Location     Type
 17515 ;;  b               4  [STACK] unsigned char 
 17516 ;;  a               4  [STACK] unsigned char 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;  grs             4  [STACK] unsigned long 
 17519 ;;  rem             4  [STACK] unsigned long 
 17520 ;;  new_exp         2  [STACK] short 
 17521 ;;  aexp            1  [STACK] unsigned char 
 17522 ;;  bexp            1  [STACK] unsigned char 
 17523 ;;  sign            1  [STACK] unsigned char 
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  4  [STACK] unsigned char 
 17526 ;; Registers used:
 17527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17528 ;; Tracked objects:
 17529 ;;		On entry : 0/4
 17530 ;;		On exit  : 0/0
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;Total ram usage:        0 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; Hardware stack levels required when called:    6
 17540 ;; This function calls:
 17541 ;;		Nothing
 17542 ;; This function is called by:
 17543 ;;		_conv_raw_result
 17544 ;;		_efgtoa
 17545 ;; This function uses a reentrant model
 17546 ;;
 17547                           
 17548                           	psect	text58
 17549  01375C                     __ptext58:
 17550                           	opt callstack 0
 17551  01375C                     ___fldiv:
 17552                           	opt callstack 0
 17553                           
 17554                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17555  01375C  0E0D               	movlw	13
 17556  01375E  26E1               	addwf	fsr1l,f,c
 17557  013760  0E00               	movlw	0
 17558  013762  22E2               	addwfc	fsr1h,f,c
 17559                           
 17560                           ;stkvar	_b @ sp[(-13)+-4]
 17561                           
 17562                           ;incstack = 0
 17563  013764  0EF2               	movlw	242
 17564  013766  24E1               	addwf	fsr1l,w,c
 17565  013768  6ED9               	movwf	fsr2l,c
 17566  01376A  0EFF               	movlw	255
 17567  01376C  20E2               	addwfc	fsr1h,w,c
 17568  01376E  6EDA               	movwf	fsr2h,c
 17569  013770  50DF               	movf	indf2,w,c
 17570  013772  6E40               	movwf	(btemp+11)^0,c
 17571  013774  0E80               	movlw	128
 17572  013776  1640               	andwf	(btemp+11)^0,f,c
 17573                           
 17574                           ;stkvar	_sign @ sp[(-13)+12]
 17575  013778  0EFF               	movlw	-1
 17576  01377A  0060  F103  FFE3   	movff	btemp+11,plusw1
 17577                           
 17578                           ;stkvar	_b @ sp[(-13)+-4]
 17579  013780  0EF2               	movlw	242
 17580  013782  24E1               	addwf	fsr1l,w,c
 17581  013784  6ED9               	movwf	fsr2l,c
 17582  013786  0EFF               	movlw	255
 17583  013788  20E2               	addwfc	fsr1h,w,c
 17584  01378A  6EDA               	movwf	fsr2h,c
 17585  01378C  50DF               	movf	indf2,w,c
 17586  01378E  6E40               	movwf	(btemp+11)^0,c
 17587  013790  90D8               	bcf	status,0,c
 17588  013792  3440               	rlcf	(btemp+11)^0,w,c
 17589  013794  6E3F               	movwf	(btemp+10)^0,c
 17590                           
 17591                           ;stkvar	_bexp @ sp[(-13)+11]
 17592  013796  0EFE               	movlw	-2
 17593  013798  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17594                           
 17595                           ;stkvar	_b @ sp[(-13)+-4]
 17596  01379E  0EF1               	movlw	241
 17597  0137A0  24E1               	addwf	fsr1l,w,c
 17598  0137A2  6ED9               	movwf	fsr2l,c
 17599  0137A4  0EFF               	movlw	255
 17600  0137A6  20E2               	addwfc	fsr1h,w,c
 17601  0137A8  6EDA               	movwf	fsr2h,c
 17602  0137AA  AEDF               	btfss	indf2,7,c
 17603  0137AC  D002               	goto	l6580
 17604                           
 17605                           ;stkvar	_bexp @ sp[(-13)+11]
 17606  0137AE  0EFE               	movlw	-2
 17607  0137B0  80E3               	bsf	plusw1,0,c
 17608  0137B2                     l6580:
 17609                           
 17610                           ;stkvar	_bexp @ sp[(-13)+11]
 17611  0137B2  0EFE               	movlw	-2
 17612  0137B4  50E3               	movf	plusw1,w,c
 17613  0137B6  B4D8               	btfsc	status,2,c
 17614  0137B8  D027               	goto	l6590
 17615                           
 17616                           ;stkvar	_bexp @ sp[(-13)+11]
 17617  0137BA  0EFE               	movlw	-2
 17618  0137BC  28E3               	incf	plusw1,w,c
 17619  0137BE  A4D8               	btfss	status,2,c
 17620  0137C0  D018               	goto	l6586
 17621  0137C2  0E00               	movlw	0
 17622  0137C4  6E3D               	movwf	(btemp+8)^0,c
 17623  0137C6  0E00               	movlw	0
 17624  0137C8  6E3E               	movwf	(btemp+9)^0,c
 17625  0137CA  0E00               	movlw	0
 17626  0137CC  6E3F               	movwf	(btemp+10)^0,c
 17627  0137CE  0E00               	movlw	0
 17628  0137D0  6E40               	movwf	(btemp+11)^0,c
 17629                           
 17630                           ;stkvar	_b @ sp[(-13)+-4]
 17631  0137D2  0EEF               	movlw	-17
 17632  0137D4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17633  0137DA  0EF0               	movlw	-16
 17634  0137DC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17635  0137E2  0EF1               	movlw	-15
 17636  0137E4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17637  0137EA  0EF2               	movlw	-14
 17638  0137EC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17639  0137F2                     l6586:
 17640                           
 17641                           ;stkvar	_b @ sp[(-13)+-4]
 17642  0137F2  0EF1               	movlw	-15
 17643  0137F4  8EE3               	bsf	plusw1,7,c
 17644                           
 17645                           ;stkvar	_b @ sp[(-13)+-4]
 17646  0137F6  0EF2               	movlw	242
 17647  0137F8  24E1               	addwf	fsr1l,w,c
 17648  0137FA  6ED9               	movwf	fsr2l,c
 17649  0137FC  0EFF               	movlw	255
 17650  0137FE  20E2               	addwfc	fsr1h,w,c
 17651  013800  6EDA               	movwf	fsr2h,c
 17652  013802  0E00               	movlw	0
 17653  013804  6EDF               	movwf	indf2,c
 17654  013806  D018               	goto	l6592
 17655  013808                     l6590:
 17656  013808  0E00               	movlw	0
 17657  01380A  6E3D               	movwf	(btemp+8)^0,c
 17658  01380C  0E00               	movlw	0
 17659  01380E  6E3E               	movwf	(btemp+9)^0,c
 17660  013810  0E00               	movlw	0
 17661  013812  6E3F               	movwf	(btemp+10)^0,c
 17662  013814  0E00               	movlw	0
 17663  013816  6E40               	movwf	(btemp+11)^0,c
 17664                           
 17665                           ;stkvar	_b @ sp[(-13)+-4]
 17666  013818  0EEF               	movlw	-17
 17667  01381A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17668  013820  0EF0               	movlw	-16
 17669  013822  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17670  013828  0EF1               	movlw	-15
 17671  01382A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17672  013830  0EF2               	movlw	-14
 17673  013832  0060  F103  FFE3   	movff	btemp+11,plusw1
 17674  013838                     l6592:
 17675                           
 17676                           ;stkvar	_a @ sp[(-13)+-8]
 17677  013838  0EEE               	movlw	238
 17678  01383A  24E1               	addwf	fsr1l,w,c
 17679  01383C  6ED9               	movwf	fsr2l,c
 17680  01383E  0EFF               	movlw	255
 17681  013840  20E2               	addwfc	fsr1h,w,c
 17682  013842  6EDA               	movwf	fsr2h,c
 17683  013844  50DF               	movf	indf2,w,c
 17684  013846  6E40               	movwf	(btemp+11)^0,c
 17685  013848  0E80               	movlw	128
 17686  01384A  1640               	andwf	(btemp+11)^0,f,c
 17687                           
 17688                           ;stkvar	_sign @ sp[(-13)+12]
 17689  01384C  50E1               	movf	fsr1l,w,c
 17690  01384E  0FFF               	addlw	-1
 17691  013850  6ED9               	movwf	fsr2l,c
 17692  013852  50E2               	movf	fsr1h,w,c
 17693  013854  6EDA               	movwf	fsr2h,c
 17694  013856  0EFF               	movlw	255
 17695  013858  22DA               	addwfc	fsr2h,f,c
 17696  01385A  5040               	movf	(btemp+11)^0,w,c
 17697  01385C  1ADF               	xorwf	indf2,f,c
 17698                           
 17699                           ;stkvar	_a @ sp[(-13)+-8]
 17700  01385E  0EEE               	movlw	238
 17701  013860  24E1               	addwf	fsr1l,w,c
 17702  013862  6ED9               	movwf	fsr2l,c
 17703  013864  0EFF               	movlw	255
 17704  013866  20E2               	addwfc	fsr1h,w,c
 17705  013868  6EDA               	movwf	fsr2h,c
 17706  01386A  50DF               	movf	indf2,w,c
 17707  01386C  6E40               	movwf	(btemp+11)^0,c
 17708  01386E  90D8               	bcf	status,0,c
 17709  013870  3440               	rlcf	(btemp+11)^0,w,c
 17710  013872  6E3F               	movwf	(btemp+10)^0,c
 17711                           
 17712                           ;stkvar	_aexp @ sp[(-13)+10]
 17713  013874  0EFD               	movlw	-3
 17714  013876  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17715                           
 17716                           ;stkvar	_a @ sp[(-13)+-8]
 17717  01387C  0EED               	movlw	237
 17718  01387E  24E1               	addwf	fsr1l,w,c
 17719  013880  6ED9               	movwf	fsr2l,c
 17720  013882  0EFF               	movlw	255
 17721  013884  20E2               	addwfc	fsr1h,w,c
 17722  013886  6EDA               	movwf	fsr2h,c
 17723  013888  AEDF               	btfss	indf2,7,c
 17724  01388A  D002               	goto	l6600
 17725                           
 17726                           ;stkvar	_aexp @ sp[(-13)+10]
 17727  01388C  0EFD               	movlw	-3
 17728  01388E  80E3               	bsf	plusw1,0,c
 17729  013890                     l6600:
 17730                           
 17731                           ;stkvar	_aexp @ sp[(-13)+10]
 17732  013890  0EFD               	movlw	-3
 17733  013892  50E3               	movf	plusw1,w,c
 17734  013894  B4D8               	btfsc	status,2,c
 17735  013896  D027               	goto	l6610
 17736                           
 17737                           ;stkvar	_aexp @ sp[(-13)+10]
 17738  013898  0EFD               	movlw	-3
 17739  01389A  28E3               	incf	plusw1,w,c
 17740  01389C  A4D8               	btfss	status,2,c
 17741  01389E  D018               	goto	l6606
 17742  0138A0  0E00               	movlw	0
 17743  0138A2  6E3D               	movwf	(btemp+8)^0,c
 17744  0138A4  0E00               	movlw	0
 17745  0138A6  6E3E               	movwf	(btemp+9)^0,c
 17746  0138A8  0E00               	movlw	0
 17747  0138AA  6E3F               	movwf	(btemp+10)^0,c
 17748  0138AC  0E00               	movlw	0
 17749  0138AE  6E40               	movwf	(btemp+11)^0,c
 17750                           
 17751                           ;stkvar	_a @ sp[(-13)+-8]
 17752  0138B0  0EEB               	movlw	-21
 17753  0138B2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17754  0138B8  0EEC               	movlw	-20
 17755  0138BA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17756  0138C0  0EED               	movlw	-19
 17757  0138C2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17758  0138C8  0EEE               	movlw	-18
 17759  0138CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 17760  0138D0                     l6606:
 17761                           
 17762                           ;stkvar	_a @ sp[(-13)+-8]
 17763  0138D0  0EED               	movlw	-19
 17764  0138D2  8EE3               	bsf	plusw1,7,c
 17765                           
 17766                           ;stkvar	_a @ sp[(-13)+-8]
 17767  0138D4  0EEE               	movlw	238
 17768  0138D6  24E1               	addwf	fsr1l,w,c
 17769  0138D8  6ED9               	movwf	fsr2l,c
 17770  0138DA  0EFF               	movlw	255
 17771  0138DC  20E2               	addwfc	fsr1h,w,c
 17772  0138DE  6EDA               	movwf	fsr2h,c
 17773  0138E0  0E00               	movlw	0
 17774  0138E2  6EDF               	movwf	indf2,c
 17775  0138E4  D018               	goto	l6612
 17776  0138E6                     l6610:
 17777  0138E6  0E00               	movlw	0
 17778  0138E8  6E3D               	movwf	(btemp+8)^0,c
 17779  0138EA  0E00               	movlw	0
 17780  0138EC  6E3E               	movwf	(btemp+9)^0,c
 17781  0138EE  0E00               	movlw	0
 17782  0138F0  6E3F               	movwf	(btemp+10)^0,c
 17783  0138F2  0E00               	movlw	0
 17784  0138F4  6E40               	movwf	(btemp+11)^0,c
 17785                           
 17786                           ;stkvar	_a @ sp[(-13)+-8]
 17787  0138F6  0EEB               	movlw	-21
 17788  0138F8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17789  0138FE  0EEC               	movlw	-20
 17790  013900  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17791  013906  0EED               	movlw	-19
 17792  013908  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17793  01390E  0EEE               	movlw	-18
 17794  013910  0060  F103  FFE3   	movff	btemp+11,plusw1
 17795  013916                     l6612:
 17796                           
 17797                           ;stkvar	_a @ sp[(-13)+-8]
 17798  013916  0EEB               	movlw	-21
 17799  013918  50E3               	movf	plusw1,w,c
 17800  01391A  E139               	bnz	l6624
 17801  01391C  0EEC               	movlw	-20
 17802  01391E  50E3               	movf	plusw1,w,c
 17803  013920  E136               	bnz	l6624
 17804  013922  0EED               	movlw	-19
 17805  013924  50E3               	movf	plusw1,w,c
 17806  013926  E133               	bnz	l6624
 17807  013928  0EEE               	movlw	-18
 17808  01392A  50E3               	movf	plusw1,w,c
 17809  01392C  A4D8               	btfss	status,2,c
 17810  01392E  D02F               	goto	l6624
 17811                           
 17812                           ;stkvar	_b @ sp[(-13)+-4]
 17813  013930  0EEF               	movlw	-17
 17814  013932  6AE3               	clrf	plusw1,c
 17815  013934  0EF0               	movlw	-16
 17816  013936  6AE3               	clrf	plusw1,c
 17817  013938  0EF1               	movlw	-15
 17818  01393A  6AE3               	clrf	plusw1,c
 17819  01393C  0EF2               	movlw	-14
 17820  01393E  6AE3               	clrf	plusw1,c
 17821                           
 17822                           ;stkvar	_b @ sp[(-13)+-4]
 17823  013940  0EF1               	movlw	241
 17824  013942  24E1               	addwf	fsr1l,w,c
 17825  013944  6ED9               	movwf	fsr2l,c
 17826  013946  0EFF               	movlw	255
 17827  013948  20E2               	addwfc	fsr1h,w,c
 17828  01394A  6EDA               	movwf	fsr2h,c
 17829  01394C  0E80               	movlw	128
 17830  01394E  12DE               	iorwf	postinc2,f,c
 17831  013950  0E7F               	movlw	127
 17832  013952  12DD               	iorwf	postdec2,f,c
 17833  013954                     l6618:
 17834                           
 17835                           ;stkvar	_sign @ sp[(-13)+12]
 17836  013954  0EFF               	movlw	-1
 17837  013956  006F FF8C  F040    	movff	plusw1,btemp+11
 17838                           
 17839                           ;stkvar	_b @ sp[(-13)+-4]
 17840  01395C  0EF2               	movlw	242
 17841  01395E  24E1               	addwf	fsr1l,w,c
 17842  013960  6ED9               	movwf	fsr2l,c
 17843  013962  0EFF               	movlw	255
 17844  013964  20E2               	addwfc	fsr1h,w,c
 17845  013966  6EDA               	movwf	fsr2h,c
 17846  013968  5040               	movf	(btemp+11)^0,w,c
 17847  01396A  12DF               	iorwf	indf2,f,c
 17848                           
 17849                           ;stkvar	_b @ sp[(-13)+-4]
 17850  01396C  0EEF               	movlw	-17
 17851  01396E  006F FF8C  F035    	movff	plusw1,btemp
 17852  013974  0EF0               	movlw	-16
 17853  013976  006F FF8C  F036    	movff	plusw1,btemp+1
 17854  01397C  0EF1               	movlw	-15
 17855  01397E  006F FF8C  F037    	movff	plusw1,btemp+2
 17856  013984  0EF2               	movlw	-14
 17857  013986  006F FF8C  F038    	movff	plusw1,btemp+3
 17858  01398C  D19F               	goto	l2593
 17859  01398E                     l6624:
 17860                           
 17861                           ;stkvar	_bexp @ sp[(-13)+11]
 17862  01398E  0EFE               	movlw	-2
 17863  013990  50E3               	movf	plusw1,w,c
 17864  013992  A4D8               	btfss	status,2,c
 17865  013994  D009               	goto	l6632
 17866  013996  0E00               	movlw	0
 17867  013998  6E35               	movwf	btemp^0,c
 17868  01399A  0E00               	movlw	0
 17869  01399C  6E36               	movwf	(btemp+1)^0,c
 17870  01399E  0E00               	movlw	0
 17871  0139A0  6E37               	movwf	(btemp+2)^0,c
 17872  0139A2  0E00               	movlw	0
 17873  0139A4  6E38               	movwf	(btemp+3)^0,c
 17874  0139A6  D192               	goto	l2593
 17875  0139A8                     l6632:
 17876                           
 17877                           ;stkvar	_bexp @ sp[(-13)+11]
 17878  0139A8  0EFE               	movlw	-2
 17879  0139AA  50E3               	movf	plusw1,w,c
 17880  0139AC  6E3F               	movwf	(btemp+10)^0,c
 17881  0139AE  6A40               	clrf	(btemp+11)^0,c
 17882                           
 17883                           ;stkvar	_aexp @ sp[(-13)+10]
 17884  0139B0  0EFD               	movlw	-3
 17885  0139B2  50E3               	movf	plusw1,w,c
 17886  0139B4  5E3F               	subwf	(btemp+10)^0,f,c
 17887  0139B6  0E00               	movlw	0
 17888  0139B8  5A40               	subwfb	(btemp+11)^0,f,c
 17889  0139BA  0E7F               	movlw	127
 17890  0139BC  263F               	addwf	(btemp+10)^0,f,c
 17891  0139BE  0E00               	movlw	0
 17892  0139C0  2240               	addwfc	(btemp+11)^0,f,c
 17893                           
 17894                           ;stkvar	_new_exp @ sp[(-13)+8]
 17895  0139C2  0EFB               	movlw	-5
 17896  0139C4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17897  0139CA  0EFC               	movlw	-4
 17898  0139CC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17899                           
 17900                           ;stkvar	_b @ sp[(-13)+-4]
 17901  0139D2  0EEF               	movlw	-17
 17902  0139D4  006F FF8C  F03D    	movff	plusw1,btemp+8
 17903  0139DA  0EF0               	movlw	-16
 17904  0139DC  006F FF8C  F03E    	movff	plusw1,btemp+9
 17905  0139E2  0EF1               	movlw	-15
 17906  0139E4  006F FF8C  F03F    	movff	plusw1,btemp+10
 17907  0139EA  0EF2               	movlw	-14
 17908  0139EC  006F FF8C  F040    	movff	plusw1,btemp+11
 17909                           
 17910                           ;stkvar	_rem @ sp[(-13)+4]
 17911  0139F2  0EF7               	movlw	-9
 17912  0139F4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17913  0139FA  0EF8               	movlw	-8
 17914  0139FC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17915  013A02  0EF9               	movlw	-7
 17916  013A04  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17917  013A0A  0EFA               	movlw	-6
 17918  013A0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17919                           
 17920                           ;stkvar	_b @ sp[(-13)+-4]
 17921  013A12  0EEF               	movlw	-17
 17922  013A14  6AE3               	clrf	plusw1,c
 17923  013A16  0EF0               	movlw	-16
 17924  013A18  6AE3               	clrf	plusw1,c
 17925  013A1A  0EF1               	movlw	-15
 17926  013A1C  6AE3               	clrf	plusw1,c
 17927  013A1E  0EF2               	movlw	-14
 17928  013A20  6AE3               	clrf	plusw1,c
 17929                           
 17930                           ;stkvar	_grs @ sp[(-13)+0]
 17931  013A22  0EF3               	movlw	-13
 17932  013A24  6AE3               	clrf	plusw1,c
 17933  013A26  0EF4               	movlw	-12
 17934  013A28  6AE3               	clrf	plusw1,c
 17935  013A2A  0EF5               	movlw	-11
 17936  013A2C  6AE3               	clrf	plusw1,c
 17937  013A2E  0EF6               	movlw	-10
 17938  013A30  6AE3               	clrf	plusw1,c
 17939                           
 17940                           ;stkvar	_aexp @ sp[(-13)+10]
 17941  013A32  0EFD               	movlw	-3
 17942  013A34  6AE3               	clrf	plusw1,c
 17943  013A36  D050               	goto	l6660
 17944  013A38                     l6642:
 17945                           
 17946                           ;stkvar	_aexp @ sp[(-13)+10]
 17947  013A38  0EFD               	movlw	-3
 17948  013A3A  50E3               	movf	plusw1,w,c
 17949  013A3C  B4D8               	btfsc	status,2,c
 17950  013A3E  D020               	goto	l6652
 17951                           
 17952                           ;stkvar	_rem @ sp[(-13)+4]
 17953  013A40  90D8               	bcf	status,0,c
 17954  013A42  0EF7               	movlw	-9
 17955  013A44  36E3               	rlcf	plusw1,f,c
 17956  013A46  0EF8               	movlw	-8
 17957  013A48  36E3               	rlcf	plusw1,f,c
 17958  013A4A  0EF9               	movlw	-7
 17959  013A4C  36E3               	rlcf	plusw1,f,c
 17960  013A4E  0EFA               	movlw	-6
 17961  013A50  36E3               	rlcf	plusw1,f,c
 17962                           
 17963                           ;stkvar	_b @ sp[(-13)+-4]
 17964  013A52  90D8               	bcf	status,0,c
 17965  013A54  0EEF               	movlw	-17
 17966  013A56  36E3               	rlcf	plusw1,f,c
 17967  013A58  0EF0               	movlw	-16
 17968  013A5A  36E3               	rlcf	plusw1,f,c
 17969  013A5C  0EF1               	movlw	-15
 17970  013A5E  36E3               	rlcf	plusw1,f,c
 17971  013A60  0EF2               	movlw	-14
 17972  013A62  36E3               	rlcf	plusw1,f,c
 17973                           
 17974                           ;stkvar	_grs @ sp[(-13)+0]
 17975  013A64  0EF6               	movlw	-10
 17976  013A66  AEE3               	btfss	plusw1,7,c
 17977  013A68  D002               	goto	l6650
 17978                           
 17979                           ;stkvar	_b @ sp[(-13)+-4]
 17980  013A6A  0EEF               	movlw	-17
 17981  013A6C  80E3               	bsf	plusw1,0,c
 17982  013A6E                     l6650:
 17983                           
 17984                           ;stkvar	_grs @ sp[(-13)+0]
 17985  013A6E  90D8               	bcf	status,0,c
 17986  013A70  0EF3               	movlw	-13
 17987  013A72  36E3               	rlcf	plusw1,f,c
 17988  013A74  0EF4               	movlw	-12
 17989  013A76  36E3               	rlcf	plusw1,f,c
 17990  013A78  0EF5               	movlw	-11
 17991  013A7A  36E3               	rlcf	plusw1,f,c
 17992  013A7C  0EF6               	movlw	-10
 17993  013A7E  36E3               	rlcf	plusw1,f,c
 17994  013A80                     l6652:
 17995                           
 17996                           ;stkvar	_a @ sp[(-13)+-8]
 17997                           ;stkvar	_rem @ sp[(-13)+4]
 17998  013A80  50E1               	movf	fsr1l,w,c
 17999  013A82  0FF7               	addlw	-9
 18000  013A84  6ED9               	movwf	fsr2l,c
 18001  013A86  50E2               	movf	fsr1h,w,c
 18002  013A88  6EDA               	movwf	fsr2h,c
 18003  013A8A  0EFF               	movlw	255
 18004  013A8C  22DA               	addwfc	fsr2h,f,c
 18005  013A8E  0EEB               	movlw	-21
 18006  013A90  50E3               	movf	plusw1,w,c
 18007  013A92  5CDE               	subwf	postinc2,w,c
 18008  013A94  0EEC               	movlw	-20
 18009  013A96  50E3               	movf	plusw1,w,c
 18010  013A98  58DE               	subwfb	postinc2,w,c
 18011  013A9A  0EED               	movlw	-19
 18012  013A9C  50E3               	movf	plusw1,w,c
 18013  013A9E  58DE               	subwfb	postinc2,w,c
 18014  013AA0  0EEE               	movlw	-18
 18015  013AA2  50E3               	movf	plusw1,w,c
 18016  013AA4  58DE               	subwfb	postinc2,w,c
 18017  013AA6  A0D8               	btfss	status,0,c
 18018  013AA8  D015               	goto	l6658
 18019                           
 18020                           ;stkvar	_grs @ sp[(-13)+0]
 18021  013AAA  0EF6               	movlw	-10
 18022  013AAC  8CE3               	bsf	plusw1,6,c
 18023                           
 18024                           ;stkvar	_a @ sp[(-13)+-8]
 18025                           ;stkvar	_rem @ sp[(-13)+4]
 18026  013AAE  50E1               	movf	fsr1l,w,c
 18027  013AB0  0FF7               	addlw	-9
 18028  013AB2  6ED9               	movwf	fsr2l,c
 18029  013AB4  50E2               	movf	fsr1h,w,c
 18030  013AB6  6EDA               	movwf	fsr2h,c
 18031  013AB8  0EFF               	movlw	255
 18032  013ABA  22DA               	addwfc	fsr2h,f,c
 18033  013ABC  0EEB               	movlw	-21
 18034  013ABE  50E3               	movf	plusw1,w,c
 18035  013AC0  5EDE               	subwf	postinc2,f,c
 18036  013AC2  0EEC               	movlw	-20
 18037  013AC4  50E3               	movf	plusw1,w,c
 18038  013AC6  5ADE               	subwfb	postinc2,f,c
 18039  013AC8  0EED               	movlw	-19
 18040  013ACA  50E3               	movf	plusw1,w,c
 18041  013ACC  5ADE               	subwfb	postinc2,f,c
 18042  013ACE  0EEE               	movlw	-18
 18043  013AD0  50E3               	movf	plusw1,w,c
 18044  013AD2  5ADE               	subwfb	postinc2,f,c
 18045  013AD4                     l6658:
 18046                           
 18047                           ;stkvar	_aexp @ sp[(-13)+10]
 18048  013AD4  0EFD               	movlw	-3
 18049  013AD6  2AE3               	incf	plusw1,f,c
 18050  013AD8                     l6660:
 18051                           
 18052                           ;stkvar	_aexp @ sp[(-13)+10]
 18053  013AD8  0EFD               	movlw	-3
 18054  013ADA  006F FF8C  F035    	movff	plusw1,btemp
 18055  013AE0  0E19               	movlw	25
 18056  013AE2  6435               	cpfsgt	btemp^0,c
 18057  013AE4  D7A9               	goto	l6642
 18058                           
 18059                           ;stkvar	_rem @ sp[(-13)+4]
 18060  013AE6  0EF7               	movlw	-9
 18061  013AE8  50E3               	movf	plusw1,w,c
 18062  013AEA  E10A               	bnz	u5810
 18063  013AEC  0EF8               	movlw	-8
 18064  013AEE  50E3               	movf	plusw1,w,c
 18065  013AF0  E107               	bnz	u5810
 18066  013AF2  0EF9               	movlw	-7
 18067  013AF4  50E3               	movf	plusw1,w,c
 18068  013AF6  E104               	bnz	u5810
 18069  013AF8  0EFA               	movlw	-6
 18070  013AFA  50E3               	movf	plusw1,w,c
 18071  013AFC  B4D8               	btfsc	status,2,c
 18072  013AFE  D024               	goto	l6676
 18073  013B00                     u5810:
 18074                           
 18075                           ;stkvar	_grs @ sp[(-13)+0]
 18076  013B00  0EF3               	movlw	-13
 18077  013B02  80E3               	bsf	plusw1,0,c
 18078  013B04  D021               	goto	l6676
 18079  013B06                     l6666:
 18080                           
 18081                           ;stkvar	_b @ sp[(-13)+-4]
 18082  013B06  90D8               	bcf	status,0,c
 18083  013B08  0EEF               	movlw	-17
 18084  013B0A  36E3               	rlcf	plusw1,f,c
 18085  013B0C  0EF0               	movlw	-16
 18086  013B0E  36E3               	rlcf	plusw1,f,c
 18087  013B10  0EF1               	movlw	-15
 18088  013B12  36E3               	rlcf	plusw1,f,c
 18089  013B14  0EF2               	movlw	-14
 18090  013B16  36E3               	rlcf	plusw1,f,c
 18091                           
 18092                           ;stkvar	_grs @ sp[(-13)+0]
 18093  013B18  0EF6               	movlw	-10
 18094  013B1A  AEE3               	btfss	plusw1,7,c
 18095  013B1C  D002               	goto	l6672
 18096                           
 18097                           ;stkvar	_b @ sp[(-13)+-4]
 18098  013B1E  0EEF               	movlw	-17
 18099  013B20  80E3               	bsf	plusw1,0,c
 18100  013B22                     l6672:
 18101                           
 18102                           ;stkvar	_grs @ sp[(-13)+0]
 18103  013B22  90D8               	bcf	status,0,c
 18104  013B24  0EF3               	movlw	-13
 18105  013B26  36E3               	rlcf	plusw1,f,c
 18106  013B28  0EF4               	movlw	-12
 18107  013B2A  36E3               	rlcf	plusw1,f,c
 18108  013B2C  0EF5               	movlw	-11
 18109  013B2E  36E3               	rlcf	plusw1,f,c
 18110  013B30  0EF6               	movlw	-10
 18111  013B32  36E3               	rlcf	plusw1,f,c
 18112                           
 18113                           ;stkvar	_new_exp @ sp[(-13)+8]
 18114  013B34  50E1               	movf	fsr1l,w,c
 18115  013B36  0FFB               	addlw	-5
 18116  013B38  6ED9               	movwf	fsr2l,c
 18117  013B3A  50E2               	movf	fsr1h,w,c
 18118  013B3C  6EDA               	movwf	fsr2h,c
 18119  013B3E  0EFF               	movlw	255
 18120  013B40  22DA               	addwfc	fsr2h,f,c
 18121  013B42  06DE               	decf	postinc2,f,c
 18122  013B44  0E00               	movlw	0
 18123  013B46  5ADD               	subwfb	postdec2,f,c
 18124  013B48                     l6676:
 18125                           
 18126                           ;stkvar	_b @ sp[(-13)+-4]
 18127  013B48  0EF1               	movlw	-15
 18128  013B4A  AEE3               	btfss	plusw1,7,c
 18129  013B4C  D7DC               	goto	l6666
 18130                           
 18131                           ;stkvar	_aexp @ sp[(-13)+10]
 18132  013B4E  0EFD               	movlw	-3
 18133  013B50  6AE3               	clrf	plusw1,c
 18134                           
 18135                           ;stkvar	_grs @ sp[(-13)+0]
 18136  013B52  0EF6               	movlw	-10
 18137  013B54  AEE3               	btfss	plusw1,7,c
 18138  013B56  D020               	goto	l6690
 18139                           
 18140                           ;stkvar	_grs @ sp[(-13)+0]
 18141  013B58  50E1               	movf	fsr1l,w,c
 18142  013B5A  0FF3               	addlw	-13
 18143  013B5C  6ED9               	movwf	fsr2l,c
 18144  013B5E  50E2               	movf	fsr1h,w,c
 18145  013B60  6EDA               	movwf	fsr2h,c
 18146  013B62  0EFF               	movlw	255
 18147  013B64  22DA               	addwfc	fsr2h,f,c
 18148  013B66  0EFF               	movlw	255
 18149  013B68  14DE               	andwf	postinc2,w,c
 18150  013B6A  6E3D               	movwf	(btemp+8)^0,c
 18151  013B6C  0EFF               	movlw	255
 18152  013B6E  14DE               	andwf	postinc2,w,c
 18153  013B70  6E3E               	movwf	(btemp+9)^0,c
 18154  013B72  0EFF               	movlw	255
 18155  013B74  14DE               	andwf	postinc2,w,c
 18156  013B76  6E3F               	movwf	(btemp+10)^0,c
 18157  013B78  0E7F               	movlw	127
 18158  013B7A  14DE               	andwf	postinc2,w,c
 18159  013B7C  6E40               	movwf	(btemp+11)^0,c
 18160  013B7E  503D               	movf	(btemp+8)^0,w,c
 18161  013B80  103E               	iorwf	(btemp+9)^0,w,c
 18162  013B82  103F               	iorwf	(btemp+10)^0,w,c
 18163  013B84  1040               	iorwf	(btemp+11)^0,w,c
 18164  013B86  B4D8               	btfsc	status,2,c
 18165  013B88  D004               	goto	l6686
 18166  013B8A                     u5850:
 18167                           
 18168                           ;stkvar	_aexp @ sp[(-13)+10]
 18169  013B8A  0EFD               	movlw	-3
 18170  013B8C  6AE3               	clrf	plusw1,c
 18171  013B8E  2AE3               	incf	plusw1,f,c
 18172  013B90  D003               	goto	l6690
 18173  013B92                     l6686:
 18174                           
 18175                           ;stkvar	_b @ sp[(-13)+-4]
 18176  013B92  0EEF               	movlw	-17
 18177  013B94  B0E3               	btfsc	plusw1,0,c
 18178  013B96  D7F9               	goto	u5850
 18179  013B98                     l6690:
 18180                           
 18181                           ;stkvar	_aexp @ sp[(-13)+10]
 18182  013B98  0EFD               	movlw	-3
 18183  013B9A  50E3               	movf	plusw1,w,c
 18184  013B9C  B4D8               	btfsc	status,2,c
 18185  013B9E  D036               	goto	l6700
 18186                           
 18187                           ;stkvar	_b @ sp[(-13)+-4]
 18188  013BA0  50E1               	movf	fsr1l,w,c
 18189  013BA2  0FEF               	addlw	-17
 18190  013BA4  6ED9               	movwf	fsr2l,c
 18191  013BA6  50E2               	movf	fsr1h,w,c
 18192  013BA8  6EDA               	movwf	fsr2h,c
 18193  013BAA  0EFF               	movlw	255
 18194  013BAC  22DA               	addwfc	fsr2h,f,c
 18195  013BAE  2ADE               	incf	postinc2,f,c
 18196  013BB0  0E00               	movlw	0
 18197  013BB2  22DE               	addwfc	postinc2,f,c
 18198  013BB4  22DE               	addwfc	postinc2,f,c
 18199  013BB6  22DE               	addwfc	postinc2,f,c
 18200                           
 18201                           ;stkvar	_b @ sp[(-13)+-4]
 18202  013BB8  0EF2               	movlw	-14
 18203  013BBA  A0E3               	btfss	plusw1,0,c
 18204  013BBC  D027               	goto	l6700
 18205  013BBE  0E01               	movlw	1
 18206  013BC0  6E40               	movwf	(btemp+11)^0,c
 18207                           
 18208                           ;stkvar	_b @ sp[(-13)+-4]
 18209  013BC2  50E1               	movf	fsr1l,w,c
 18210  013BC4  0FEF               	addlw	-17
 18211  013BC6  6ED9               	movwf	fsr2l,c
 18212  013BC8  50E2               	movf	fsr1h,w,c
 18213  013BCA  6EDA               	movwf	fsr2h,c
 18214  013BCC  0EFF               	movlw	255
 18215  013BCE  22DA               	addwfc	fsr2h,f,c
 18216  013BD0  2840               	incf	(btemp+11)^0,w,c
 18217  013BD2  52DE               	movf	postinc2,f,c
 18218  013BD4  D008               	goto	u5890
 18219  013BD6                     u5895:
 18220  013BD6  52DE               	movf	postinc2,f,c
 18221  013BD8  90D8               	bcf	status,0,c
 18222  013BDA  BEDC               	btfsc	preinc2,7,c
 18223  013BDC  80D8               	bsf	status,0,c
 18224  013BDE  32DD               	rrcf	postdec2,f,c
 18225  013BE0  32DD               	rrcf	postdec2,f,c
 18226  013BE2  32DD               	rrcf	postdec2,f,c
 18227  013BE4  32DE               	rrcf	postinc2,f,c
 18228  013BE6                     u5890:
 18229  013BE6  2EE8               	decfsz	wreg,f,c
 18230  013BE8  D7F6               	goto	u5895
 18231                           
 18232                           ;stkvar	_new_exp @ sp[(-13)+8]
 18233  013BEA  0EFB               	movlw	-5
 18234  013BEC  50E3               	movf	plusw1,w,c
 18235  013BEE  0F01               	addlw	1
 18236  013BF0  6E35               	movwf	btemp^0,c
 18237  013BF2  0EFB               	movlw	-5
 18238  013BF4  0060  F0D7  FFE3   	movff	btemp,plusw1
 18239  013BFA  6A35               	clrf	btemp^0,c
 18240  013BFC  0EFC               	movlw	-4
 18241  013BFE  50E3               	movf	plusw1,w,c
 18242  013C00  2035               	addwfc	btemp^0,w,c
 18243  013C02  6E35               	movwf	btemp^0,c
 18244  013C04  0EFC               	movlw	-4
 18245  013C06  0060  F0D7  FFE3   	movff	btemp,plusw1
 18246  013C0C                     l6700:
 18247                           
 18248                           ;stkvar	_new_exp @ sp[(-13)+8]
 18249  013C0C  0EFC               	movlw	-4
 18250  013C0E  BEE3               	btfsc	plusw1,7,c
 18251  013C10  D01B               	goto	l6706
 18252  013C12  0EFC               	movlw	-4
 18253  013C14  50E3               	movf	plusw1,w,c
 18254  013C16  E104               	bnz	u5900
 18255  013C18  0EFB               	movlw	-5
 18256  013C1A  28E3               	incf	plusw1,w,c
 18257  013C1C  A0D8               	btfss	status,0,c
 18258  013C1E  D014               	goto	l6706
 18259  013C20                     u5900:
 18260  013C20  0EFF               	movlw	255
 18261  013C22  6E3F               	movwf	(btemp+10)^0,c
 18262  013C24  0E00               	movlw	0
 18263  013C26  6E40               	movwf	(btemp+11)^0,c
 18264                           
 18265                           ;stkvar	_new_exp @ sp[(-13)+8]
 18266  013C28  0EFB               	movlw	-5
 18267  013C2A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18268  013C30  0EFC               	movlw	-4
 18269  013C32  0060  F103  FFE3   	movff	btemp+11,plusw1
 18270                           
 18271                           ;stkvar	_b @ sp[(-13)+-4]
 18272  013C38  0EEF               	movlw	-17
 18273  013C3A  6AE3               	clrf	plusw1,c
 18274  013C3C  0EF0               	movlw	-16
 18275  013C3E  6AE3               	clrf	plusw1,c
 18276  013C40  0EF1               	movlw	-15
 18277  013C42  6AE3               	clrf	plusw1,c
 18278  013C44  0EF2               	movlw	-14
 18279  013C46  6AE3               	clrf	plusw1,c
 18280  013C48                     l6706:
 18281                           
 18282                           ;stkvar	_new_exp @ sp[(-13)+8]
 18283  013C48  0EFC               	movlw	-4
 18284  013C4A  BEE3               	btfsc	plusw1,7,c
 18285  013C4C  D007               	goto	u5910
 18286  013C4E  0EFC               	movlw	-4
 18287  013C50  50E3               	movf	plusw1,w,c
 18288  013C52  E112               	bnz	l6712
 18289  013C54  0EFB               	movlw	-5
 18290  013C56  04E3               	decf	plusw1,w,c
 18291  013C58  B0D8               	btfsc	status,0,c
 18292  013C5A  D00E               	goto	l6712
 18293  013C5C                     u5910:
 18294                           
 18295                           ;stkvar	_new_exp @ sp[(-13)+8]
 18296  013C5C  0EFB               	movlw	-5
 18297  013C5E  6AE3               	clrf	plusw1,c
 18298  013C60  0EFC               	movlw	-4
 18299  013C62  6AE3               	clrf	plusw1,c
 18300                           
 18301                           ;stkvar	_b @ sp[(-13)+-4]
 18302  013C64  0EEF               	movlw	-17
 18303  013C66  6AE3               	clrf	plusw1,c
 18304  013C68  0EF0               	movlw	-16
 18305  013C6A  6AE3               	clrf	plusw1,c
 18306  013C6C  0EF1               	movlw	-15
 18307  013C6E  6AE3               	clrf	plusw1,c
 18308  013C70  0EF2               	movlw	-14
 18309  013C72  6AE3               	clrf	plusw1,c
 18310                           
 18311                           ;stkvar	_sign @ sp[(-13)+12]
 18312  013C74  0EFF               	movlw	-1
 18313  013C76  6AE3               	clrf	plusw1,c
 18314  013C78                     l6712:
 18315                           
 18316                           ;stkvar	_new_exp @ sp[(-13)+8]
 18317                           ;stkvar	_bexp @ sp[(-13)+11]
 18318  013C78  0EFB               	movlw	-5
 18319  013C7A  006F FF8C  F035    	movff	plusw1,btemp
 18320  013C80  0EFE               	movlw	-2
 18321  013C82  0060  F0D7  FFE3   	movff	btemp,plusw1
 18322                           
 18323                           ;stkvar	_bexp @ sp[(-13)+11]
 18324  013C88  0EFE               	movlw	-2
 18325  013C8A  A0E3               	btfss	plusw1,0,c
 18326  013C8C  D009               	goto	l6718
 18327                           
 18328                           ;stkvar	_b @ sp[(-13)+-4]
 18329  013C8E  0EF1               	movlw	241
 18330  013C90  24E1               	addwf	fsr1l,w,c
 18331  013C92  6ED9               	movwf	fsr2l,c
 18332  013C94  0EFF               	movlw	255
 18333  013C96  20E2               	addwfc	fsr1h,w,c
 18334  013C98  6EDA               	movwf	fsr2h,c
 18335  013C9A  0E00               	movlw	0
 18336  013C9C  8EDB               	bsf	plusw2,7,c
 18337  013C9E  D008               	goto	l6720
 18338  013CA0                     l6718:
 18339                           
 18340                           ;stkvar	_b @ sp[(-13)+-4]
 18341  013CA0  0EF1               	movlw	241
 18342  013CA2  24E1               	addwf	fsr1l,w,c
 18343  013CA4  6ED9               	movwf	fsr2l,c
 18344  013CA6  0EFF               	movlw	255
 18345  013CA8  20E2               	addwfc	fsr1h,w,c
 18346  013CAA  6EDA               	movwf	fsr2h,c
 18347  013CAC  0E7F               	movlw	127
 18348  013CAE  16DF               	andwf	indf2,f,c
 18349  013CB0                     l6720:
 18350                           
 18351                           ;stkvar	_b @ sp[(-13)+-4]
 18352  013CB0  0EF2               	movlw	242
 18353  013CB2  24E1               	addwf	fsr1l,w,c
 18354  013CB4  6ED9               	movwf	fsr2l,c
 18355  013CB6  0EFF               	movlw	255
 18356  013CB8  20E2               	addwfc	fsr1h,w,c
 18357  013CBA  6EDA               	movwf	fsr2h,c
 18358                           
 18359                           ;stkvar	_bexp @ sp[(-13)+11]
 18360  013CBC  0EFE               	movlw	-2
 18361  013CBE  006F FF8C  F040    	movff	plusw1,btemp+11
 18362  013CC4  90D8               	bcf	status,0,c
 18363  013CC6  3040               	rrcf	(btemp+11)^0,w,c
 18364  013CC8  6EDF               	movwf	indf2,c
 18365  013CCA  D644               	goto	l6618
 18366  013CCC                     l2593:
 18367                           
 18368                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18369  013CCC  0EEB               	movlw	235
 18370  013CCE  26E1               	addwf	fsr1l,f,c
 18371  013CD0  0EFF               	movlw	255
 18372  013CD2  22E2               	addwfc	fsr1h,f,c
 18373  013CD4  0012               	return		;funcret
 18374  013CD6                     __end_of___fldiv:
 18375                           	opt callstack 0
 18376                           
 18377 ;; *************** function ___awmod *****************
 18378 ;; Defined at:
 18379 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;  dividend        2  [STACK] int 
 18382 ;;  divisor         2  [STACK] int 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;  sign            1  [STACK] unsigned char 
 18385 ;;  counter         1  [STACK] unsigned char 
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  2  [STACK] int 
 18388 ;; Registers used:
 18389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/4
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;Total ram usage:        0 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    6
 18402 ;; This function calls:
 18403 ;;		Nothing
 18404 ;; This function is called by:
 18405 ;;		_efgtoa
 18406 ;; This function uses a reentrant model
 18407 ;;
 18408                           
 18409                           	psect	text59
 18410  016F4C                     __ptext59:
 18411                           	opt callstack 0
 18412  016F4C                     ___awmod:
 18413                           	opt callstack 0
 18414                           
 18415                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18416  016F4C  52E6               	movf	postinc1,f,c
 18417  016F4E  52E6               	movf	postinc1,f,c
 18418                           
 18419                           ;stkvar	_sign @ sp[(-2)+0]
 18420                           
 18421                           ;incstack = 0
 18422  016F50  0EFE               	movlw	-2
 18423  016F52  6AE3               	clrf	plusw1,c
 18424                           
 18425                           ;stkvar	_dividend @ sp[(-2)+-2]
 18426  016F54  0EFD               	movlw	-3
 18427  016F56  AEE3               	btfss	plusw1,7,c
 18428  016F58  D009               	goto	l6944
 18429                           
 18430                           ;stkvar	_dividend @ sp[(-2)+-2]
 18431                           ;stkvar	_dividend @ sp[(-2)+-2]
 18432  016F5A  0EFC               	movlw	-4
 18433  016F5C  6CE3               	negf	plusw1,c
 18434  016F5E  0EFD               	movlw	-3
 18435  016F60  1EE3               	comf	plusw1,f,c
 18436  016F62  B0D8               	btfsc	status,0,c
 18437  016F64  2AE3               	incf	plusw1,f,c
 18438                           
 18439                           ;stkvar	_sign @ sp[(-2)+0]
 18440  016F66  0EFE               	movlw	-2
 18441  016F68  6AE3               	clrf	plusw1,c
 18442  016F6A  2AE3               	incf	plusw1,f,c
 18443  016F6C                     l6944:
 18444                           
 18445                           ;stkvar	_divisor @ sp[(-2)+-4]
 18446  016F6C  0EFB               	movlw	-5
 18447  016F6E  AEE3               	btfss	plusw1,7,c
 18448  016F70  D006               	goto	l6948
 18449                           
 18450                           ;stkvar	_divisor @ sp[(-2)+-4]
 18451                           ;stkvar	_divisor @ sp[(-2)+-4]
 18452  016F72  0EFA               	movlw	-6
 18453  016F74  6CE3               	negf	plusw1,c
 18454  016F76  0EFB               	movlw	-5
 18455  016F78  1EE3               	comf	plusw1,f,c
 18456  016F7A  B0D8               	btfsc	status,0,c
 18457  016F7C  2AE3               	incf	plusw1,f,c
 18458  016F7E                     l6948:
 18459                           
 18460                           ;stkvar	_divisor @ sp[(-2)+-4]
 18461  016F7E  0EFA               	movlw	-6
 18462  016F80  006F FF8C  F035    	movff	plusw1,btemp
 18463  016F86  0EFB               	movlw	-5
 18464  016F88  50E3               	movf	plusw1,w,c
 18465  016F8A  1035               	iorwf	btemp^0,w,c
 18466  016F8C  B4D8               	btfsc	status,2,c
 18467  016F8E  D053               	goto	u6270
 18468                           
 18469                           ;stkvar	_counter @ sp[(-2)+1]
 18470  016F90  0EFF               	movlw	-1
 18471  016F92  6AE3               	clrf	plusw1,c
 18472  016F94  D012               	goto	L17
 18473  016F96                     l6952:
 18474                           
 18475                           ;stkvar	_divisor @ sp[(-2)+-4]
 18476  016F96  0EFA               	movlw	-6
 18477  016F98  50E3               	movf	plusw1,w,c
 18478  016F9A  90D8               	bcf	status,0,c
 18479  016F9C  34E8               	rlcf	wreg,w,c
 18480  016F9E  6E35               	movwf	btemp^0,c
 18481  016FA0  0EFA               	movlw	-6
 18482  016FA2  0060  F0D7  FFE3   	movff	btemp,plusw1
 18483  016FA8  0EFB               	movlw	-5
 18484  016FAA  50E3               	movf	plusw1,w,c
 18485  016FAC  34E8               	rlcf	wreg,w,c
 18486  016FAE  6E35               	movwf	btemp^0,c
 18487  016FB0  0EFB               	movlw	-5
 18488  016FB2  0060  F0D7  FFE3   	movff	btemp,plusw1
 18489                           
 18490                           ;stkvar	_counter @ sp[(-2)+1]
 18491  016FB8  0EFF               	movlw	-1
 18492  016FBA                     L17:
 18493  016FBA  2AE3               	incf	plusw1,f,c
 18494                           
 18495                           ;stkvar	_divisor @ sp[(-2)+-4]
 18496  016FBC  0EFB               	movlw	-5
 18497  016FBE  AEE3               	btfss	plusw1,7,c
 18498  016FC0  D7EA               	goto	l6952
 18499  016FC2                     u6250:
 18500                           
 18501                           ;stkvar	_divisor @ sp[(-2)+-4]
 18502  016FC2  0EFA               	movlw	-6
 18503  016FC4  006F FF8C  F03F    	movff	plusw1,btemp+10
 18504  016FCA  0EFB               	movlw	-5
 18505  016FCC  006F FF8C  F040    	movff	plusw1,btemp+11
 18506                           
 18507                           ;stkvar	_dividend @ sp[(-2)+-2]
 18508  016FD2  0EFC               	movlw	-4
 18509  016FD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 18510  016FDA  0EFD               	movlw	-3
 18511  016FDC  006F FF8C  F03E    	movff	plusw1,btemp+9
 18512  016FE2  503F               	movf	(btemp+10)^0,w,c
 18513  016FE4  5C3D               	subwf	(btemp+8)^0,w,c
 18514  016FE6  5040               	movf	(btemp+11)^0,w,c
 18515  016FE8  583E               	subwfb	(btemp+9)^0,w,c
 18516  016FEA  A0D8               	btfss	status,0,c
 18517  016FEC  D014               	goto	l6962
 18518                           
 18519                           ;stkvar	_divisor @ sp[(-2)+-4]
 18520                           ;stkvar	_dividend @ sp[(-2)+-2]
 18521  016FEE  0EFC               	movlw	-4
 18522  016FF0  50E3               	movf	plusw1,w,c
 18523  016FF2  6E35               	movwf	btemp^0,c
 18524  016FF4  0EFA               	movlw	-6
 18525  016FF6  50E3               	movf	plusw1,w,c
 18526  016FF8  5E35               	subwf	btemp^0,f,c
 18527  016FFA  0EFC               	movlw	-4
 18528  016FFC  0060  F0D7  FFE3   	movff	btemp,plusw1
 18529  017002  0EFD               	movlw	-3
 18530  017004  50E3               	movf	plusw1,w,c
 18531  017006  6E35               	movwf	btemp^0,c
 18532  017008  0EFB               	movlw	-5
 18533  01700A  50E3               	movf	plusw1,w,c
 18534  01700C  5A35               	subwfb	btemp^0,f,c
 18535  01700E  0EFD               	movlw	-3
 18536  017010  0060  F0D7  FFE3   	movff	btemp,plusw1
 18537  017016                     l6962:
 18538                           
 18539                           ;stkvar	_divisor @ sp[(-2)+-4]
 18540  017016  90D8               	bcf	status,0,c
 18541  017018  0EFB               	movlw	-5
 18542  01701A  32E3               	rrcf	plusw1,f,c
 18543  01701C  0EFA               	movlw	-6
 18544  01701E  32E3               	rrcf	plusw1,f,c
 18545                           
 18546                           ;stkvar	_counter @ sp[(-2)+1]
 18547  017020  0EFF               	movlw	-1
 18548  017022  50E3               	movf	plusw1,w,c
 18549  017024  6E35               	movwf	btemp^0,c
 18550  017026  0E01               	movlw	1
 18551  017028  5E35               	subwf	btemp^0,f,c
 18552  01702A  0EFF               	movlw	-1
 18553  01702C  0060  F0D7  FFE3   	movff	btemp,plusw1
 18554  017032  A4D8               	btfss	status,2,c
 18555  017034  D7C6               	goto	u6250
 18556  017036                     u6270:
 18557                           
 18558                           ;stkvar	_sign @ sp[(-2)+0]
 18559  017036  0EFE               	movlw	-2
 18560  017038  50E3               	movf	plusw1,w,c
 18561  01703A  B4D8               	btfsc	status,2,c
 18562  01703C  D006               	goto	l6970
 18563                           
 18564                           ;stkvar	_dividend @ sp[(-2)+-2]
 18565                           ;stkvar	_dividend @ sp[(-2)+-2]
 18566  01703E  0EFC               	movlw	-4
 18567  017040  6CE3               	negf	plusw1,c
 18568  017042  0EFD               	movlw	-3
 18569  017044  1EE3               	comf	plusw1,f,c
 18570  017046  B0D8               	btfsc	status,0,c
 18571  017048  2AE3               	incf	plusw1,f,c
 18572  01704A                     l6970:
 18573                           
 18574                           ;stkvar	_dividend @ sp[(-2)+-2]
 18575  01704A  0EFC               	movlw	-4
 18576  01704C  006F FF8C  F035    	movff	plusw1,btemp
 18577  017052  0EFD               	movlw	-3
 18578  017054  006F FF8C  F036    	movff	plusw1,btemp+1
 18579                           
 18580                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18581  01705A  0EFA               	movlw	250
 18582  01705C  26E1               	addwf	fsr1l,f,c
 18583  01705E  0EFF               	movlw	255
 18584  017060  22E2               	addwfc	fsr1h,f,c
 18585  017062  0012               	return		;funcret
 18586  017064                     __end_of___awmod:
 18587                           	opt callstack 0
 18588                           
 18589 ;; *************** function ___awdiv *****************
 18590 ;; Defined at:
 18591 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18592 ;; Parameters:    Size  Location     Type
 18593 ;;  dividend        2  [STACK] int 
 18594 ;;  divisor         2  [STACK] int 
 18595 ;; Auto vars:     Size  Location     Type
 18596 ;;  quotient        2  [STACK] int 
 18597 ;;  sign            1  [STACK] unsigned char 
 18598 ;;  counter         1  [STACK] unsigned char 
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  2  [STACK] int 
 18601 ;; Registers used:
 18602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18603 ;; Tracked objects:
 18604 ;;		On entry : 0/4
 18605 ;;		On exit  : 0/0
 18606 ;;		Unchanged: 0/0
 18607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;Total ram usage:        0 bytes
 18613 ;; Hardware stack levels used:    1
 18614 ;; Hardware stack levels required when called:    6
 18615 ;; This function calls:
 18616 ;;		Nothing
 18617 ;; This function is called by:
 18618 ;;		_efgtoa
 18619 ;; This function uses a reentrant model
 18620 ;;
 18621                           
 18622                           	psect	text60
 18623  016A6C                     __ptext60:
 18624                           	opt callstack 0
 18625  016A6C                     ___awdiv:
 18626                           	opt callstack 0
 18627                           
 18628                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18629  016A6C  52E6               	movf	postinc1,f,c
 18630  016A6E  52E6               	movf	postinc1,f,c
 18631  016A70  52E6               	movf	postinc1,f,c
 18632  016A72  52E6               	movf	postinc1,f,c
 18633                           
 18634                           ;stkvar	_sign @ sp[(-4)+2]
 18635                           
 18636                           ;incstack = 0
 18637  016A74  0EFE               	movlw	-2
 18638  016A76  6AE3               	clrf	plusw1,c
 18639                           
 18640                           ;stkvar	_divisor @ sp[(-4)+-4]
 18641  016A78  0EF9               	movlw	-7
 18642  016A7A  AEE3               	btfss	plusw1,7,c
 18643  016A7C  D009               	goto	l6898
 18644                           
 18645                           ;stkvar	_divisor @ sp[(-4)+-4]
 18646                           ;stkvar	_divisor @ sp[(-4)+-4]
 18647  016A7E  0EF8               	movlw	-8
 18648  016A80  6CE3               	negf	plusw1,c
 18649  016A82  0EF9               	movlw	-7
 18650  016A84  1EE3               	comf	plusw1,f,c
 18651  016A86  B0D8               	btfsc	status,0,c
 18652  016A88  2AE3               	incf	plusw1,f,c
 18653                           
 18654                           ;stkvar	_sign @ sp[(-4)+2]
 18655  016A8A  0EFE               	movlw	-2
 18656  016A8C  6AE3               	clrf	plusw1,c
 18657  016A8E  2AE3               	incf	plusw1,f,c
 18658  016A90                     l6898:
 18659                           
 18660                           ;stkvar	_dividend @ sp[(-4)+-2]
 18661  016A90  0EFB               	movlw	-5
 18662  016A92  AEE3               	btfss	plusw1,7,c
 18663  016A94  D008               	goto	l6904
 18664                           
 18665                           ;stkvar	_dividend @ sp[(-4)+-2]
 18666                           ;stkvar	_dividend @ sp[(-4)+-2]
 18667  016A96  0EFA               	movlw	-6
 18668  016A98  6CE3               	negf	plusw1,c
 18669  016A9A  0EFB               	movlw	-5
 18670  016A9C  1EE3               	comf	plusw1,f,c
 18671  016A9E  B0D8               	btfsc	status,0,c
 18672  016AA0  2AE3               	incf	plusw1,f,c
 18673                           
 18674                           ;stkvar	_sign @ sp[(-4)+2]
 18675  016AA2  0EFE               	movlw	-2
 18676  016AA4  70E3               	btg	plusw1,0,c
 18677  016AA6                     l6904:
 18678                           
 18679                           ;stkvar	_quotient @ sp[(-4)+0]
 18680  016AA6  0EFC               	movlw	-4
 18681  016AA8  6AE3               	clrf	plusw1,c
 18682  016AAA  0EFD               	movlw	-3
 18683  016AAC  6AE3               	clrf	plusw1,c
 18684                           
 18685                           ;stkvar	_divisor @ sp[(-4)+-4]
 18686  016AAE  0EF8               	movlw	-8
 18687  016AB0  006F FF8C  F035    	movff	plusw1,btemp
 18688  016AB6  0EF9               	movlw	-7
 18689  016AB8  50E3               	movf	plusw1,w,c
 18690  016ABA  1035               	iorwf	btemp^0,w,c
 18691  016ABC  B4D8               	btfsc	status,2,c
 18692  016ABE  D066               	goto	u6200
 18693                           
 18694                           ;stkvar	_counter @ sp[(-4)+3]
 18695  016AC0  0EFF               	movlw	-1
 18696  016AC2  6AE3               	clrf	plusw1,c
 18697  016AC4  D012               	goto	L18
 18698  016AC6                     l6910:
 18699                           
 18700                           ;stkvar	_divisor @ sp[(-4)+-4]
 18701  016AC6  0EF8               	movlw	-8
 18702  016AC8  50E3               	movf	plusw1,w,c
 18703  016ACA  90D8               	bcf	status,0,c
 18704  016ACC  34E8               	rlcf	wreg,w,c
 18705  016ACE  6E35               	movwf	btemp^0,c
 18706  016AD0  0EF8               	movlw	-8
 18707  016AD2  0060  F0D7  FFE3   	movff	btemp,plusw1
 18708  016AD8  0EF9               	movlw	-7
 18709  016ADA  50E3               	movf	plusw1,w,c
 18710  016ADC  34E8               	rlcf	wreg,w,c
 18711  016ADE  6E35               	movwf	btemp^0,c
 18712  016AE0  0EF9               	movlw	-7
 18713  016AE2  0060  F0D7  FFE3   	movff	btemp,plusw1
 18714                           
 18715                           ;stkvar	_counter @ sp[(-4)+3]
 18716  016AE8  0EFF               	movlw	-1
 18717  016AEA                     L18:
 18718  016AEA  2AE3               	incf	plusw1,f,c
 18719                           
 18720                           ;stkvar	_divisor @ sp[(-4)+-4]
 18721  016AEC  0EF9               	movlw	-7
 18722  016AEE  AEE3               	btfss	plusw1,7,c
 18723  016AF0  D7EA               	goto	l6910
 18724  016AF2                     u6180:
 18725                           
 18726                           ;stkvar	_quotient @ sp[(-4)+0]
 18727  016AF2  0EFC               	movlw	-4
 18728  016AF4  50E3               	movf	plusw1,w,c
 18729  016AF6  90D8               	bcf	status,0,c
 18730  016AF8  34E8               	rlcf	wreg,w,c
 18731  016AFA  6E35               	movwf	btemp^0,c
 18732  016AFC  0EFC               	movlw	-4
 18733  016AFE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18734  016B04  0EFD               	movlw	-3
 18735  016B06  50E3               	movf	plusw1,w,c
 18736  016B08  34E8               	rlcf	wreg,w,c
 18737  016B0A  6E35               	movwf	btemp^0,c
 18738  016B0C  0EFD               	movlw	-3
 18739  016B0E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18740                           
 18741                           ;stkvar	_divisor @ sp[(-4)+-4]
 18742  016B14  0EF8               	movlw	-8
 18743  016B16  006F FF8C  F03F    	movff	plusw1,btemp+10
 18744  016B1C  0EF9               	movlw	-7
 18745  016B1E  006F FF8C  F040    	movff	plusw1,btemp+11
 18746                           
 18747                           ;stkvar	_dividend @ sp[(-4)+-2]
 18748  016B24  0EFA               	movlw	-6
 18749  016B26  006F FF8C  F03D    	movff	plusw1,btemp+8
 18750  016B2C  0EFB               	movlw	-5
 18751  016B2E  006F FF8C  F03E    	movff	plusw1,btemp+9
 18752  016B34  503F               	movf	(btemp+10)^0,w,c
 18753  016B36  5C3D               	subwf	(btemp+8)^0,w,c
 18754  016B38  5040               	movf	(btemp+11)^0,w,c
 18755  016B3A  583E               	subwfb	(btemp+9)^0,w,c
 18756  016B3C  A0D8               	btfss	status,0,c
 18757  016B3E  D016               	goto	l6924
 18758                           
 18759                           ;stkvar	_divisor @ sp[(-4)+-4]
 18760                           ;stkvar	_dividend @ sp[(-4)+-2]
 18761  016B40  0EFA               	movlw	-6
 18762  016B42  50E3               	movf	plusw1,w,c
 18763  016B44  6E35               	movwf	btemp^0,c
 18764  016B46  0EF8               	movlw	-8
 18765  016B48  50E3               	movf	plusw1,w,c
 18766  016B4A  5E35               	subwf	btemp^0,f,c
 18767  016B4C  0EFA               	movlw	-6
 18768  016B4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18769  016B54  0EFB               	movlw	-5
 18770  016B56  50E3               	movf	plusw1,w,c
 18771  016B58  6E35               	movwf	btemp^0,c
 18772  016B5A  0EF9               	movlw	-7
 18773  016B5C  50E3               	movf	plusw1,w,c
 18774  016B5E  5A35               	subwfb	btemp^0,f,c
 18775  016B60  0EFB               	movlw	-5
 18776  016B62  0060  F0D7  FFE3   	movff	btemp,plusw1
 18777                           
 18778                           ;stkvar	_quotient @ sp[(-4)+0]
 18779  016B68  0EFC               	movlw	-4
 18780  016B6A  80E3               	bsf	plusw1,0,c
 18781  016B6C                     l6924:
 18782                           
 18783                           ;stkvar	_divisor @ sp[(-4)+-4]
 18784  016B6C  90D8               	bcf	status,0,c
 18785  016B6E  0EF9               	movlw	-7
 18786  016B70  32E3               	rrcf	plusw1,f,c
 18787  016B72  0EF8               	movlw	-8
 18788  016B74  32E3               	rrcf	plusw1,f,c
 18789                           
 18790                           ;stkvar	_counter @ sp[(-4)+3]
 18791  016B76  0EFF               	movlw	-1
 18792  016B78  50E3               	movf	plusw1,w,c
 18793  016B7A  6E35               	movwf	btemp^0,c
 18794  016B7C  0E01               	movlw	1
 18795  016B7E  5E35               	subwf	btemp^0,f,c
 18796  016B80  0EFF               	movlw	-1
 18797  016B82  0060  F0D7  FFE3   	movff	btemp,plusw1
 18798  016B88  A4D8               	btfss	status,2,c
 18799  016B8A  D7B3               	goto	u6180
 18800  016B8C                     u6200:
 18801                           
 18802                           ;stkvar	_sign @ sp[(-4)+2]
 18803  016B8C  0EFE               	movlw	-2
 18804  016B8E  50E3               	movf	plusw1,w,c
 18805  016B90  B4D8               	btfsc	status,2,c
 18806  016B92  D006               	goto	l6932
 18807                           
 18808                           ;stkvar	_quotient @ sp[(-4)+0]
 18809                           ;stkvar	_quotient @ sp[(-4)+0]
 18810  016B94  0EFC               	movlw	-4
 18811  016B96  6CE3               	negf	plusw1,c
 18812  016B98  0EFD               	movlw	-3
 18813  016B9A  1EE3               	comf	plusw1,f,c
 18814  016B9C  B0D8               	btfsc	status,0,c
 18815  016B9E  2AE3               	incf	plusw1,f,c
 18816  016BA0                     l6932:
 18817                           
 18818                           ;stkvar	_quotient @ sp[(-4)+0]
 18819  016BA0  0EFC               	movlw	-4
 18820  016BA2  006F FF8C  F035    	movff	plusw1,btemp
 18821  016BA8  0EFD               	movlw	-3
 18822  016BAA  006F FF8C  F036    	movff	plusw1,btemp+1
 18823                           
 18824                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18825  016BB0  0EF8               	movlw	248
 18826  016BB2  26E1               	addwf	fsr1l,f,c
 18827  016BB4  0EFF               	movlw	255
 18828  016BB6  22E2               	addwfc	fsr1h,f,c
 18829  016BB8  0012               	return		;funcret
 18830  016BBA                     __end_of___awdiv:
 18831                           	opt callstack 0
 18832                           
 18833 ;; *************** function _dtoa *****************
 18834 ;; Defined at:
 18835 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18836 ;; Parameters:    Size  Location     Type
 18837 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18838 ;;		 -> f(6), NULL(0), 
 18839 ;;  d               8  [STACK] long long 
 18840 ;; Auto vars:     Size  Location     Type
 18841 ;;  n               8  [STACK] long long 
 18842 ;;  i               2  [STACK] int 
 18843 ;;  s               2  [STACK] int 
 18844 ;;  w               2  [STACK] int 
 18845 ;;  p               2  [STACK] int 
 18846 ;; Return value:  Size  Location     Type
 18847 ;;                  2  [STACK] int 
 18848 ;; Registers used:
 18849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/4
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;Total ram usage:        0 bytes
 18860 ;; Hardware stack levels used:    1
 18861 ;; Hardware stack levels required when called:   11
 18862 ;; This function calls:
 18863 ;;		___aodiv
 18864 ;;		___aomod
 18865 ;;		_abs
 18866 ;;		_pad
 18867 ;; This function is called by:
 18868 ;;		_vfpfcnvrt
 18869 ;; This function uses a reentrant model
 18870 ;;
 18871                           
 18872                           	psect	text61
 18873  013CD6                     __ptext61:
 18874                           	opt callstack 0
 18875  013CD6                     _dtoa:
 18876                           	opt callstack 0
 18877                           
 18878                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18879  013CD6  0E12               	movlw	18
 18880  013CD8  26E1               	addwf	fsr1l,f,c
 18881  013CDA  0E00               	movlw	0
 18882  013CDC  22E2               	addwfc	fsr1h,f,c
 18883                           
 18884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18885                           ;stkvar	_d @ sp[(-18)+-10]
 18886                           
 18887                           ;incstack = 0
 18888  013CDE  0EE4               	movlw	228
 18889  013CE0  24E1               	addwf	fsr1l,w,c
 18890  013CE2  6ED9               	movwf	fsr2l,c
 18891  013CE4  0EFF               	movlw	255
 18892  013CE6  20E2               	addwfc	fsr1h,w,c
 18893  013CE8  6EDA               	movwf	fsr2h,c
 18894                           
 18895                           ;stkvar	_n @ sp[(-18)+2]
 18896  013CEA  0E08               	movlw	8
 18897  013CEC  6E35               	movwf	btemp^0,c
 18898  013CEE  0EF0               	movlw	-16
 18899  013CF0                     us921999:
 18900  013CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 18901  013CF6  28E8               	incf	wreg,w,c
 18902  013CF8  2E35               	decfsz	btemp^0,f,c
 18903  013CFA  D7FA               	bra	us921999
 18904                           
 18905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18906                           ;stkvar	_n @ sp[(-18)+2]
 18907  013CFC  0EF7               	movlw	-9
 18908  013CFE  AEE3               	btfss	plusw1,7,c
 18909  013D00  D002               	goto	u9220
 18910  013D02  0E01               	movlw	1
 18911  013D04  D001               	goto	u9230
 18912  013D06                     u9220:
 18913  013D06  0E00               	movlw	0
 18914  013D08                     u9230:
 18915  013D08  6E3F               	movwf	(btemp+10)^0,c
 18916  013D0A  6A40               	clrf	(btemp+11)^0,c
 18917                           
 18918                           ;stkvar	_s @ sp[(-18)+12]
 18919  013D0C  0EFA               	movlw	-6
 18920  013D0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18921  013D14  0EFB               	movlw	-5
 18922  013D16  0060  F103  FFE3   	movff	btemp+11,plusw1
 18923                           
 18924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18925                           ;stkvar	_s @ sp[(-18)+12]
 18926  013D1C  0EFA               	movlw	-6
 18927  013D1E  006F FF8C  F035    	movff	plusw1,btemp
 18928  013D24  0EFB               	movlw	-5
 18929  013D26  50E3               	movf	plusw1,w,c
 18930  013D28  1035               	iorwf	btemp^0,w,c
 18931  013D2A  B4D8               	btfsc	status,2,c
 18932  013D2C  D025               	goto	u9250
 18933                           
 18934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18935                           ;stkvar	_n @ sp[(-18)+2]
 18936                           ;stkvar	_n @ sp[(-18)+2]
 18937  013D2E  0EF0               	movlw	-16
 18938  013D30  6CE3               	negf	plusw1,c
 18939  013D32  0EF1               	movlw	-15
 18940  013D34  1EE3               	comf	plusw1,f,c
 18941  013D36  0EF2               	movlw	-14
 18942  013D38  1EE3               	comf	plusw1,f,c
 18943  013D3A  0EF3               	movlw	-13
 18944  013D3C  1EE3               	comf	plusw1,f,c
 18945  013D3E  0EF4               	movlw	-12
 18946  013D40  1EE3               	comf	plusw1,f,c
 18947  013D42  0EF5               	movlw	-11
 18948  013D44  1EE3               	comf	plusw1,f,c
 18949  013D46  0EF6               	movlw	-10
 18950  013D48  1EE3               	comf	plusw1,f,c
 18951  013D4A  0EF7               	movlw	-9
 18952  013D4C  1EE3               	comf	plusw1,f,c
 18953  013D4E  E314               	bnc	u9250
 18954  013D50  0EF1               	movlw	-15
 18955  013D52  2AE3               	incf	plusw1,f,c
 18956  013D54  E311               	bnc	u9250
 18957  013D56  0EF2               	movlw	-14
 18958  013D58  2AE3               	incf	plusw1,f,c
 18959  013D5A  E30E               	bnc	u9250
 18960  013D5C  0EF3               	movlw	-13
 18961  013D5E  2AE3               	incf	plusw1,f,c
 18962  013D60  E30B               	bnc	u9250
 18963  013D62  0EF4               	movlw	-12
 18964  013D64  2AE3               	incf	plusw1,f,c
 18965  013D66  E308               	bnc	u9250
 18966  013D68  0EF5               	movlw	-11
 18967  013D6A  2AE3               	incf	plusw1,f,c
 18968  013D6C  E305               	bnc	u9250
 18969  013D6E  0EF6               	movlw	-10
 18970  013D70  2AE3               	incf	plusw1,f,c
 18971  013D72  E302               	bnc	u9250
 18972  013D74  0EF7               	movlw	-9
 18973  013D76  2AE3               	incf	plusw1,f,c
 18974  013D78                     u9250:
 18975                           
 18976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18977  013D78  AE21               	btfss	(_prec+1)^0,7,c
 18978                           
 18979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18980  013D7A  9222               	bcf	_flags^0,1,c
 18981                           
 18982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18983  013D7C  BE21               	btfsc	(_prec+1)^0,7,c
 18984  013D7E  D005               	goto	u9270
 18985  013D80  5021               	movf	(_prec+1)^0,w,c
 18986  013D82  E110               	bnz	l9332
 18987  013D84  0420               	decf	_prec^0,w,c
 18988  013D86  B0D8               	btfsc	status,0,c
 18989  013D88  D00D               	goto	l9332
 18990  013D8A                     u9270:
 18991  013D8A  0E01               	movlw	1
 18992  013D8C  6E3F               	movwf	(btemp+10)^0,c
 18993  013D8E  0E00               	movlw	0
 18994  013D90  6E40               	movwf	(btemp+11)^0,c
 18995                           
 18996                           ;stkvar	_p @ sp[(-18)+16]
 18997  013D92  0EFE               	movlw	-2
 18998  013D94  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18999  013D9A  0EFF               	movlw	-1
 19000  013D9C  0060  F103  FFE3   	movff	btemp+11,plusw1
 19001  013DA2  D008               	goto	l1774
 19002  013DA4                     l9332:
 19003                           
 19004                           ;stkvar	_p @ sp[(-18)+16]
 19005  013DA4  0EFE               	movlw	-2
 19006  013DA6  0060  F083  FFE3   	movff	_prec,plusw1
 19007  013DAC  0EFF               	movlw	-1
 19008  013DAE  0060  F087  FFE3   	movff	_prec+1,plusw1
 19009  013DB4                     l1774:
 19010                           
 19011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19012                           ;stkvar	_w @ sp[(-18)+14]
 19013  013DB4  0EFC               	movlw	-4
 19014  013DB6  0060  F07B  FFE3   	movff	_width,plusw1
 19015  013DBC  0EFD               	movlw	-3
 19016  013DBE  0060  F07F  FFE3   	movff	_width+1,plusw1
 19017                           
 19018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19019                           ;stkvar	_s @ sp[(-18)+12]
 19020  013DC4  0EFA               	movlw	-6
 19021  013DC6  006F FF8C  F035    	movff	plusw1,btemp
 19022  013DCC  0EFB               	movlw	-5
 19023  013DCE  50E3               	movf	plusw1,w,c
 19024  013DD0  1035               	iorwf	btemp^0,w,c
 19025  013DD2  A4D8               	btfss	status,2,c
 19026  013DD4  D002               	goto	u9290
 19027  013DD6  A422               	btfss	_flags^0,2,c
 19028  013DD8  D00A               	goto	l9340
 19029  013DDA                     u9290:
 19030                           
 19031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19032                           ;stkvar	_w @ sp[(-18)+14]
 19033  013DDA  50E1               	movf	fsr1l,w,c
 19034  013DDC  0FFC               	addlw	-4
 19035  013DDE  6ED9               	movwf	fsr2l,c
 19036  013DE0  50E2               	movf	fsr1h,w,c
 19037  013DE2  6EDA               	movwf	fsr2h,c
 19038  013DE4  0EFF               	movlw	255
 19039  013DE6  22DA               	addwfc	fsr2h,f,c
 19040  013DE8  06DE               	decf	postinc2,f,c
 19041  013DEA  0E00               	movlw	0
 19042  013DEC  5ADD               	subwfb	postdec2,f,c
 19043  013DEE                     l9340:
 19044                           
 19045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19046  013DEE  0E4F               	movlw	79
 19047  013DF0  6E3F               	movwf	(btemp+10)^0,c
 19048  013DF2  0E00               	movlw	0
 19049  013DF4  6E40               	movwf	(btemp+11)^0,c
 19050                           
 19051                           ;stkvar	_i @ sp[(-18)+10]
 19052  013DF6  0EF8               	movlw	-8
 19053  013DF8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19054  013DFE  0EF9               	movlw	-7
 19055  013E00  0060  F103  FFE3   	movff	btemp+11,plusw1
 19056                           
 19057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19058  013E06  0102               	movlb	2	; () banked
 19059  013E08  6BFB               	clrf	(_dbuf+79)& (0+255),b
 19060                           
 19061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19062  013E0A  D109               	goto	l9354
 19063  013E0C                     l9344:
 19064                           
 19065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19066                           ;stkvar	_i @ sp[(-18)+10]
 19067  013E0C  50E1               	movf	fsr1l,w,c
 19068  013E0E  0FF8               	addlw	-8
 19069  013E10  6ED9               	movwf	fsr2l,c
 19070  013E12  50E2               	movf	fsr1h,w,c
 19071  013E14  6EDA               	movwf	fsr2h,c
 19072  013E16  0EFF               	movlw	255
 19073  013E18  22DA               	addwfc	fsr2h,f,c
 19074  013E1A  06DE               	decf	postinc2,f,c
 19075  013E1C  0E00               	movlw	0
 19076  013E1E  5ADD               	subwfb	postdec2,f,c
 19077                           
 19078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19079  013E20  0E0A               	movlw	10
 19080  013E22  6EE6               	movwf	postinc1,c
 19081  013E24  0E00               	movlw	0
 19082  013E26  6EE6               	movwf	postinc1,c
 19083  013E28  0E00               	movlw	0
 19084  013E2A  6EE6               	movwf	postinc1,c
 19085  013E2C  0E00               	movlw	0
 19086  013E2E  6EE6               	movwf	postinc1,c
 19087  013E30  0E00               	movlw	0
 19088  013E32  6EE6               	movwf	postinc1,c
 19089  013E34  0E00               	movlw	0
 19090  013E36  6EE6               	movwf	postinc1,c
 19091  013E38  0E00               	movlw	0
 19092  013E3A  6EE6               	movwf	postinc1,c
 19093  013E3C  0E00               	movlw	0
 19094  013E3E  6EE6               	movwf	postinc1,c
 19095                           
 19096                           ;stkvar	_n @ sp[(-26)+2]
 19097  013E40  50E1               	movf	fsr1l,w,c
 19098  013E42  0FE8               	addlw	-24
 19099  013E44  6ED9               	movwf	fsr2l,c
 19100  013E46  50E2               	movf	fsr1h,w,c
 19101  013E48  6EDA               	movwf	fsr2h,c
 19102  013E4A  0EFF               	movlw	255
 19103  013E4C  22DA               	addwfc	fsr2h,f,c
 19104  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 19105  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 19106  013E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 19107  013E60  006F FF7B FFE6     	movff	postinc2,postinc1
 19108  013E66  006F FF7B FFE6     	movff	postinc2,postinc1
 19109  013E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 19110  013E72  006F FF7B FFE6     	movff	postinc2,postinc1
 19111  013E78  006F FF7B FFE6     	movff	postinc2,postinc1
 19112  013E7E  EC26  F0AD         	call	___aomod	;wreg free
 19113  013E82  52E5               	movf	postdec1,f,c
 19114  013E84  006F FF9C  F04C    	movff	indf1,btemp+23
 19115  013E8A  52E5               	movf	postdec1,f,c
 19116  013E8C  006F FF9C  F04B    	movff	indf1,btemp+22
 19117  013E92  52E5               	movf	postdec1,f,c
 19118  013E94  006F FF9C  F04A    	movff	indf1,btemp+21
 19119  013E9A  52E5               	movf	postdec1,f,c
 19120  013E9C  006F FF9C  F049    	movff	indf1,btemp+20
 19121  013EA2  52E5               	movf	postdec1,f,c
 19122  013EA4  006F FF9C  F048    	movff	indf1,btemp+19
 19123  013EAA  52E5               	movf	postdec1,f,c
 19124  013EAC  006F FF9C  F047    	movff	indf1,btemp+18
 19125  013EB2  52E5               	movf	postdec1,f,c
 19126  013EB4  006F FF9C  F046    	movff	indf1,btemp+17
 19127  013EBA  52E5               	movf	postdec1,f,c
 19128  013EBC  006F FF9C  F045    	movff	indf1,btemp+16
 19129  013EC2  0EF8               	movlw	248
 19130  013EC4  26E1               	addwf	fsr1l,f,c
 19131  013EC6  0EFF               	movlw	255
 19132  013EC8  22E2               	addwfc	fsr1h,f,c
 19133  013ECA  0060  F114  F03F   	movff	btemp+16,btemp+10
 19134  013ED0  0060  F118  F040   	movff	btemp+17,btemp+11
 19135  013ED6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19136  013EDC  0060  F103  FFE6   	movff	btemp+11,postinc1
 19137  013EE2  EC2F  F0C2         	call	_abs	;wreg free
 19138  013EE6  0E30               	movlw	48
 19139  013EE8  2635               	addwf	btemp^0,f,c
 19140                           
 19141                           ;stkvar	_i @ sp[(-18)+10]
 19142  013EEA  0EF8               	movlw	-8
 19143  013EEC  006F FF8C  F03F    	movff	plusw1,btemp+10
 19144  013EF2  0EF9               	movlw	-7
 19145  013EF4  006F FF8C  F040    	movff	plusw1,btemp+11
 19146  013EFA  0EAC               	movlw	low _dbuf
 19147  013EFC  243F               	addwf	(btemp+10)^0,w,c
 19148  013EFE  6ED9               	movwf	fsr2l,c
 19149  013F00  0E02               	movlw	high _dbuf
 19150  013F02  2040               	addwfc	(btemp+11)^0,w,c
 19151  013F04  6EDA               	movwf	fsr2h,c
 19152  013F06  0060  F0D7  FFDF   	movff	btemp,indf2
 19153                           
 19154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19155                           ;stkvar	_p @ sp[(-18)+16]
 19156  013F0C  50E1               	movf	fsr1l,w,c
 19157  013F0E  0FFE               	addlw	-2
 19158  013F10  6ED9               	movwf	fsr2l,c
 19159  013F12  50E2               	movf	fsr1h,w,c
 19160  013F14  6EDA               	movwf	fsr2h,c
 19161  013F16  0EFF               	movlw	255
 19162  013F18  22DA               	addwfc	fsr2h,f,c
 19163  013F1A  06DE               	decf	postinc2,f,c
 19164  013F1C  0E00               	movlw	0
 19165  013F1E  5ADD               	subwfb	postdec2,f,c
 19166                           
 19167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19168                           ;stkvar	_w @ sp[(-18)+14]
 19169  013F20  50E1               	movf	fsr1l,w,c
 19170  013F22  0FFC               	addlw	-4
 19171  013F24  6ED9               	movwf	fsr2l,c
 19172  013F26  50E2               	movf	fsr1h,w,c
 19173  013F28  6EDA               	movwf	fsr2h,c
 19174  013F2A  0EFF               	movlw	255
 19175  013F2C  22DA               	addwfc	fsr2h,f,c
 19176  013F2E  06DE               	decf	postinc2,f,c
 19177  013F30  0E00               	movlw	0
 19178  013F32  5ADD               	subwfb	postdec2,f,c
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19181  013F34  0E0A               	movlw	10
 19182  013F36  6EE6               	movwf	postinc1,c
 19183  013F38  0E00               	movlw	0
 19184  013F3A  6EE6               	movwf	postinc1,c
 19185  013F3C  0E00               	movlw	0
 19186  013F3E  6EE6               	movwf	postinc1,c
 19187  013F40  0E00               	movlw	0
 19188  013F42  6EE6               	movwf	postinc1,c
 19189  013F44  0E00               	movlw	0
 19190  013F46  6EE6               	movwf	postinc1,c
 19191  013F48  0E00               	movlw	0
 19192  013F4A  6EE6               	movwf	postinc1,c
 19193  013F4C  0E00               	movlw	0
 19194  013F4E  6EE6               	movwf	postinc1,c
 19195  013F50  0E00               	movlw	0
 19196  013F52  6EE6               	movwf	postinc1,c
 19197                           
 19198                           ;stkvar	_n @ sp[(-26)+2]
 19199  013F54  50E1               	movf	fsr1l,w,c
 19200  013F56  0FE8               	addlw	-24
 19201  013F58  6ED9               	movwf	fsr2l,c
 19202  013F5A  50E2               	movf	fsr1h,w,c
 19203  013F5C  6EDA               	movwf	fsr2h,c
 19204  013F5E  0EFF               	movlw	255
 19205  013F60  22DA               	addwfc	fsr2h,f,c
 19206  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 19207  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 19208  013F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 19209  013F74  006F FF7B FFE6     	movff	postinc2,postinc1
 19210  013F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 19211  013F80  006F FF7B FFE6     	movff	postinc2,postinc1
 19212  013F86  006F FF7B FFE6     	movff	postinc2,postinc1
 19213  013F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19214  013F92  ECAC  F0AA         	call	___aodiv	;wreg free
 19215  013F96  52E5               	movf	postdec1,f,c
 19216  013F98  006F FF9C  F04C    	movff	indf1,btemp+23
 19217  013F9E  52E5               	movf	postdec1,f,c
 19218  013FA0  006F FF9C  F04B    	movff	indf1,btemp+22
 19219  013FA6  52E5               	movf	postdec1,f,c
 19220  013FA8  006F FF9C  F04A    	movff	indf1,btemp+21
 19221  013FAE  52E5               	movf	postdec1,f,c
 19222  013FB0  006F FF9C  F049    	movff	indf1,btemp+20
 19223  013FB6  52E5               	movf	postdec1,f,c
 19224  013FB8  006F FF9C  F048    	movff	indf1,btemp+19
 19225  013FBE  52E5               	movf	postdec1,f,c
 19226  013FC0  006F FF9C  F047    	movff	indf1,btemp+18
 19227  013FC6  52E5               	movf	postdec1,f,c
 19228  013FC8  006F FF9C  F046    	movff	indf1,btemp+17
 19229  013FCE  52E5               	movf	postdec1,f,c
 19230  013FD0  006F FF9C  F045    	movff	indf1,btemp+16
 19231  013FD6  0EF8               	movlw	248
 19232  013FD8  26E1               	addwf	fsr1l,f,c
 19233  013FDA  0EFF               	movlw	255
 19234  013FDC  22E2               	addwfc	fsr1h,f,c
 19235                           
 19236                           ;stkvar	_n @ sp[(-18)+2]
 19237  013FDE  0EF0               	movlw	-16
 19238  013FE0  0060  F117  FFE3   	movff	btemp+16,plusw1
 19239  013FE6  0EF1               	movlw	-15
 19240  013FE8  0060  F11B  FFE3   	movff	btemp+17,plusw1
 19241  013FEE  0EF2               	movlw	-14
 19242  013FF0  0060  F11F  FFE3   	movff	btemp+18,plusw1
 19243  013FF6  0EF3               	movlw	-13
 19244  013FF8  0060  F123  FFE3   	movff	btemp+19,plusw1
 19245  013FFE  0EF4               	movlw	-12
 19246  014000  0060  F127  FFE3   	movff	btemp+20,plusw1
 19247  014006  0EF5               	movlw	-11
 19248  014008  0060  F12B  FFE3   	movff	btemp+21,plusw1
 19249  01400E  0EF6               	movlw	-10
 19250  014010  0060  F12F  FFE3   	movff	btemp+22,plusw1
 19251  014016  0EF7               	movlw	-9
 19252  014018  0060  F133  FFE3   	movff	btemp+23,plusw1
 19253  01401E                     l9354:
 19254                           
 19255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19256                           ;stkvar	_i @ sp[(-18)+10]
 19257  01401E  0EF9               	movlw	-7
 19258  014020  BEE3               	btfsc	plusw1,7,c
 19259  014022  D036               	goto	u9340
 19260  014024  0EF9               	movlw	-7
 19261  014026  50E3               	movf	plusw1,w,c
 19262  014028  E104               	bnz	u9300
 19263  01402A  0EF8               	movlw	-8
 19264  01402C  04E3               	decf	plusw1,w,c
 19265  01402E  A0D8               	btfss	status,0,c
 19266  014030  D02F               	goto	u9340
 19267  014032                     u9300:
 19268                           
 19269                           ;stkvar	_n @ sp[(-18)+2]
 19270  014032  0EF0               	movlw	-16
 19271  014034  50E3               	movf	plusw1,w,c
 19272  014036  E115               	bnz	u9311
 19273  014038  0EF1               	movlw	-15
 19274  01403A  50E3               	movf	plusw1,w,c
 19275  01403C  E112               	bnz	u9311
 19276  01403E  0EF2               	movlw	-14
 19277  014040  50E3               	movf	plusw1,w,c
 19278  014042  E10F               	bnz	u9311
 19279  014044  0EF3               	movlw	-13
 19280  014046  50E3               	movf	plusw1,w,c
 19281  014048  E10C               	bnz	u9311
 19282  01404A  0EF4               	movlw	-12
 19283  01404C  50E3               	movf	plusw1,w,c
 19284  01404E  E109               	bnz	u9311
 19285  014050  0EF5               	movlw	-11
 19286  014052  50E3               	movf	plusw1,w,c
 19287  014054  E106               	bnz	u9311
 19288  014056  0EF6               	movlw	-10
 19289  014058  50E3               	movf	plusw1,w,c
 19290  01405A  E103               	bnz	u9311
 19291  01405C  0EF7               	movlw	-9
 19292  01405E  50E3               	movf	plusw1,w,c
 19293  014060  A4D8               	btfss	status,2,c
 19294  014062                     u9311:
 19295  014062  D6D4               	goto	l9344
 19296                           
 19297                           ;stkvar	_p @ sp[(-18)+16]
 19298  014064  0EFF               	movlw	-1
 19299  014066  BEE3               	btfsc	plusw1,7,c
 19300  014068  D007               	goto	u9320
 19301  01406A  0EFF               	movlw	-1
 19302  01406C  50E3               	movf	plusw1,w,c
 19303  01406E  E103               	bnz	u9321
 19304  014070  0EFE               	movlw	-2
 19305  014072  04E3               	decf	plusw1,w,c
 19306  014074  B0D8               	btfsc	status,0,c
 19307  014076                     u9321:
 19308  014076  D6CA               	goto	l9344
 19309  014078                     u9320:
 19310                           
 19311                           ;stkvar	_w @ sp[(-18)+14]
 19312  014078  0EFD               	movlw	-3
 19313  01407A  BEE3               	btfsc	plusw1,7,c
 19314  01407C  D009               	goto	u9340
 19315  01407E  0EFD               	movlw	-3
 19316  014080  50E3               	movf	plusw1,w,c
 19317  014082  E104               	bnz	u9330
 19318  014084  0EFC               	movlw	-4
 19319  014086  04E3               	decf	plusw1,w,c
 19320  014088  A0D8               	btfss	status,0,c
 19321  01408A  D002               	goto	u9340
 19322  01408C                     u9330:
 19323  01408C  B222               	btfsc	_flags^0,1,c
 19324  01408E  D6BE               	goto	l9344
 19325  014090                     u9340:
 19326                           
 19327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19328                           ;stkvar	_s @ sp[(-18)+12]
 19329  014090  0EFA               	movlw	-6
 19330  014092  006F FF8C  F035    	movff	plusw1,btemp
 19331  014098  0EFB               	movlw	-5
 19332  01409A  50E3               	movf	plusw1,w,c
 19333  01409C  1035               	iorwf	btemp^0,w,c
 19334  01409E  A4D8               	btfss	status,2,c
 19335  0140A0  D002               	goto	u9360
 19336  0140A2  A422               	btfss	_flags^0,2,c
 19337  0140A4  D033               	goto	l9378
 19338  0140A6                     u9360:
 19339                           
 19340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19341                           ;stkvar	_i @ sp[(-18)+10]
 19342  0140A6  50E1               	movf	fsr1l,w,c
 19343  0140A8  0FF8               	addlw	-8
 19344  0140AA  6ED9               	movwf	fsr2l,c
 19345  0140AC  50E2               	movf	fsr1h,w,c
 19346  0140AE  6EDA               	movwf	fsr2h,c
 19347  0140B0  0EFF               	movlw	255
 19348  0140B2  22DA               	addwfc	fsr2h,f,c
 19349  0140B4  06DE               	decf	postinc2,f,c
 19350  0140B6  0E00               	movlw	0
 19351  0140B8  5ADD               	subwfb	postdec2,f,c
 19352                           
 19353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19354                           ;stkvar	_s @ sp[(-18)+12]
 19355  0140BA  0EFA               	movlw	-6
 19356  0140BC  006F FF8C  F035    	movff	plusw1,btemp
 19357  0140C2  0EFB               	movlw	-5
 19358  0140C4  50E3               	movf	plusw1,w,c
 19359  0140C6  1035               	iorwf	btemp^0,w,c
 19360  0140C8  A4D8               	btfss	status,2,c
 19361  0140CA  D002               	goto	l9374
 19362  0140CC  0E2B               	movlw	43
 19363  0140CE  D001               	goto	L19
 19364  0140D0                     l9374:
 19365  0140D0  0E2D               	movlw	45
 19366  0140D2                     L19:
 19367  0140D2  6E3F               	movwf	(btemp+10)^0,c
 19368  0140D4  0E00               	movlw	0
 19369  0140D6  6E40               	movwf	(btemp+11)^0,c
 19370                           
 19371                           ;stkvar	_dtoa$4173 @ sp[(-18)+0]
 19372  0140D8  0EEE               	movlw	-18
 19373  0140DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19374  0140E0  0EEF               	movlw	-17
 19375  0140E2  0060  F103  FFE3   	movff	btemp+11,plusw1
 19376                           
 19377                           ;stkvar	_dtoa$4173 @ sp[(-18)+0]
 19378                           ;stkvar	_i @ sp[(-18)+10]
 19379  0140E8  0EF8               	movlw	-8
 19380  0140EA  006F FF8C  F03F    	movff	plusw1,btemp+10
 19381  0140F0  0EF9               	movlw	-7
 19382  0140F2  006F FF8C  F040    	movff	plusw1,btemp+11
 19383  0140F8  0EAC               	movlw	low _dbuf
 19384  0140FA  243F               	addwf	(btemp+10)^0,w,c
 19385  0140FC  6ED9               	movwf	fsr2l,c
 19386  0140FE  0E02               	movlw	high _dbuf
 19387  014100  2040               	addwfc	(btemp+11)^0,w,c
 19388  014102  6EDA               	movwf	fsr2h,c
 19389  014104  0EEE               	movlw	-18
 19390  014106  006F FF8F FFDF     	movff	plusw1,indf2
 19391  01410C                     l9378:
 19392                           
 19393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19394                           ;stkvar	_w @ sp[(-18)+14]
 19395  01410C  0EFC               	movlw	-4
 19396  01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 19397  014114  006F FF8F FFE6     	movff	plusw1,postinc1
 19398                           
 19399                           ;stkvar	_i @ sp[(-20)+10]
 19400  01411A  0EAC               	movlw	low _dbuf
 19401  01411C  6E3F               	movwf	(btemp+10)^0,c
 19402  01411E  0E02               	movlw	high _dbuf
 19403  014120  6E40               	movwf	(btemp+11)^0,c
 19404  014122  0EF6               	movlw	-10
 19405  014124  50E3               	movf	plusw1,w,c
 19406  014126  263F               	addwf	(btemp+10)^0,f,c
 19407  014128  0EF7               	movlw	-9
 19408  01412A  50E3               	movf	plusw1,w,c
 19409  01412C  2240               	addwfc	(btemp+11)^0,f,c
 19410  01412E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19411  014134  0060  F103  FFE6   	movff	btemp+11,postinc1
 19412                           
 19413                           ;stkvar	_fp @ sp[(-22)+-2]
 19414  01413A  0EE8               	movlw	-24
 19415  01413C  006F FF8F FFE6     	movff	plusw1,postinc1
 19416  014142  006F FF8F FFE6     	movff	plusw1,postinc1
 19417  014148  EC32  F0B8         	call	_pad	;wreg free
 19418                           
 19419                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19420  01414C  0EE4               	movlw	228
 19421  01414E  26E1               	addwf	fsr1l,f,c
 19422  014150  0EFF               	movlw	255
 19423  014152  22E2               	addwfc	fsr1h,f,c
 19424  014154  0012               	return		;funcret
 19425  014156                     __end_of_dtoa:
 19426                           	opt callstack 0
 19427                           
 19428 ;; *************** function _abs *****************
 19429 ;; Defined at:
 19430 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  a               2  [STACK] int 
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;		None
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  2  [STACK] int 
 19437 ;; Registers used:
 19438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/2
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;Total ram usage:        0 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; Hardware stack levels required when called:    6
 19451 ;; This function calls:
 19452 ;;		Nothing
 19453 ;; This function is called by:
 19454 ;;		_dtoa
 19455 ;; This function uses a reentrant model
 19456 ;;
 19457                           
 19458                           	psect	text62
 19459  01845E                     __ptext62:
 19460                           	opt callstack 0
 19461  01845E                     _abs:
 19462                           	opt callstack 17
 19463                           
 19464                           ;stkvar	_a @ sp[(0)+-2]
 19465                           
 19466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19467                           ;incstack = 0
 19468  01845E  0EFF               	movlw	-1
 19469  018460  BEE3               	btfsc	plusw1,7,c
 19470  018462  D007               	goto	u5160
 19471  018464  0EFF               	movlw	-1
 19472  018466  50E3               	movf	plusw1,w,c
 19473  018468  E112               	bnz	l6386
 19474  01846A  0EFE               	movlw	-2
 19475  01846C  04E3               	decf	plusw1,w,c
 19476  01846E  B0D8               	btfsc	status,0,c
 19477  018470  D00E               	goto	l6386
 19478  018472                     u5160:
 19479                           
 19480                           ;stkvar	_a @ sp[(0)+-2]
 19481  018472  0EFE               	movlw	-2
 19482  018474  006F FF8C  F035    	movff	plusw1,btemp
 19483  01847A  1E35               	comf	btemp^0,f,c
 19484  01847C  0EFF               	movlw	-1
 19485  01847E  006F FF8C  F036    	movff	plusw1,btemp+1
 19486  018484  1E36               	comf	(btemp+1)^0,f,c
 19487  018486  2A35               	incf	btemp^0,f,c
 19488  018488  B4D8               	btfsc	status,2,c
 19489  01848A  2A36               	incf	(btemp+1)^0,f,c
 19490  01848C  D008               	goto	l2700
 19491  01848E                     l6386:
 19492                           
 19493                           ;stkvar	_a @ sp[(0)+-2]
 19494  01848E  0EFE               	movlw	-2
 19495  018490  006F FF8C  F035    	movff	plusw1,btemp
 19496  018496  0EFF               	movlw	-1
 19497  018498  006F FF8C  F036    	movff	plusw1,btemp+1
 19498  01849E                     l2700:
 19499                           
 19500                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19501  01849E  52E5               	movf	postdec1,f,c
 19502  0184A0  52E5               	movf	postdec1,f,c
 19503  0184A2  0012               	return		;funcret
 19504  0184A4                     __end_of_abs:
 19505                           	opt callstack 0
 19506                           
 19507 ;; *************** function ___aomod *****************
 19508 ;; Defined at:
 19509 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19510 ;; Parameters:    Size  Location     Type
 19511 ;;  dividend        8  [STACK] long long 
 19512 ;;  divisor         8  [STACK] long long 
 19513 ;; Auto vars:     Size  Location     Type
 19514 ;;  sign            1  [STACK] unsigned char 
 19515 ;;  counter         1  [STACK] unsigned char 
 19516 ;; Return value:  Size  Location     Type
 19517 ;;                  8  [STACK] long long 
 19518 ;; Registers used:
 19519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19520 ;; Tracked objects:
 19521 ;;		On entry : 0/2
 19522 ;;		On exit  : 0/0
 19523 ;;		Unchanged: 0/0
 19524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19529 ;;Total ram usage:        0 bytes
 19530 ;; Hardware stack levels used:    1
 19531 ;; Hardware stack levels required when called:    6
 19532 ;; This function calls:
 19533 ;;		Nothing
 19534 ;; This function is called by:
 19535 ;;		_dtoa
 19536 ;; This function uses a reentrant model
 19537 ;;
 19538                           
 19539                           	psect	text63
 19540  015A4C                     __ptext63:
 19541                           	opt callstack 0
 19542  015A4C                     ___aomod:
 19543                           	opt callstack 0
 19544                           
 19545                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19546  015A4C  52E6               	movf	postinc1,f,c
 19547  015A4E  52E6               	movf	postinc1,f,c
 19548                           
 19549                           ;stkvar	_sign @ sp[(-2)+0]
 19550                           
 19551                           ;incstack = 0
 19552  015A50  0EFE               	movlw	-2
 19553  015A52  6AE3               	clrf	plusw1,c
 19554                           
 19555                           ;stkvar	_dividend @ sp[(-2)+-8]
 19556  015A54  0EFD               	movlw	-3
 19557  015A56  AEE3               	btfss	plusw1,7,c
 19558  015A58  D028               	goto	l6544
 19559                           
 19560                           ;stkvar	_dividend @ sp[(-2)+-8]
 19561                           ;stkvar	_dividend @ sp[(-2)+-8]
 19562  015A5A  0EF6               	movlw	-10
 19563  015A5C  6CE3               	negf	plusw1,c
 19564  015A5E  0EF7               	movlw	-9
 19565  015A60  1EE3               	comf	plusw1,f,c
 19566  015A62  0EF8               	movlw	-8
 19567  015A64  1EE3               	comf	plusw1,f,c
 19568  015A66  0EF9               	movlw	-7
 19569  015A68  1EE3               	comf	plusw1,f,c
 19570  015A6A  0EFA               	movlw	-6
 19571  015A6C  1EE3               	comf	plusw1,f,c
 19572  015A6E  0EFB               	movlw	-5
 19573  015A70  1EE3               	comf	plusw1,f,c
 19574  015A72  0EFC               	movlw	-4
 19575  015A74  1EE3               	comf	plusw1,f,c
 19576  015A76  0EFD               	movlw	-3
 19577  015A78  1EE3               	comf	plusw1,f,c
 19578  015A7A  E314               	bnc	u5590
 19579  015A7C  0EF7               	movlw	-9
 19580  015A7E  2AE3               	incf	plusw1,f,c
 19581  015A80  E311               	bnc	u5590
 19582  015A82  0EF8               	movlw	-8
 19583  015A84  2AE3               	incf	plusw1,f,c
 19584  015A86  E30E               	bnc	u5590
 19585  015A88  0EF9               	movlw	-7
 19586  015A8A  2AE3               	incf	plusw1,f,c
 19587  015A8C  E30B               	bnc	u5590
 19588  015A8E  0EFA               	movlw	-6
 19589  015A90  2AE3               	incf	plusw1,f,c
 19590  015A92  E308               	bnc	u5590
 19591  015A94  0EFB               	movlw	-5
 19592  015A96  2AE3               	incf	plusw1,f,c
 19593  015A98  E305               	bnc	u5590
 19594  015A9A  0EFC               	movlw	-4
 19595  015A9C  2AE3               	incf	plusw1,f,c
 19596  015A9E  E302               	bnc	u5590
 19597  015AA0  0EFD               	movlw	-3
 19598  015AA2  2AE3               	incf	plusw1,f,c
 19599  015AA4                     u5590:
 19600                           
 19601                           ;stkvar	_sign @ sp[(-2)+0]
 19602  015AA4  0EFE               	movlw	-2
 19603  015AA6  6AE3               	clrf	plusw1,c
 19604  015AA8  2AE3               	incf	plusw1,f,c
 19605  015AAA                     l6544:
 19606                           
 19607                           ;stkvar	_divisor @ sp[(-2)+-16]
 19608  015AAA  0EF5               	movlw	-11
 19609  015AAC  AEE3               	btfss	plusw1,7,c
 19610  015AAE  D025               	goto	u5610
 19611                           
 19612                           ;stkvar	_divisor @ sp[(-2)+-16]
 19613                           ;stkvar	_divisor @ sp[(-2)+-16]
 19614  015AB0  0EEE               	movlw	-18
 19615  015AB2  6CE3               	negf	plusw1,c
 19616  015AB4  0EEF               	movlw	-17
 19617  015AB6  1EE3               	comf	plusw1,f,c
 19618  015AB8  0EF0               	movlw	-16
 19619  015ABA  1EE3               	comf	plusw1,f,c
 19620  015ABC  0EF1               	movlw	-15
 19621  015ABE  1EE3               	comf	plusw1,f,c
 19622  015AC0  0EF2               	movlw	-14
 19623  015AC2  1EE3               	comf	plusw1,f,c
 19624  015AC4  0EF3               	movlw	-13
 19625  015AC6  1EE3               	comf	plusw1,f,c
 19626  015AC8  0EF4               	movlw	-12
 19627  015ACA  1EE3               	comf	plusw1,f,c
 19628  015ACC  0EF5               	movlw	-11
 19629  015ACE  1EE3               	comf	plusw1,f,c
 19630  015AD0  E314               	bnc	u5610
 19631  015AD2  0EEF               	movlw	-17
 19632  015AD4  2AE3               	incf	plusw1,f,c
 19633  015AD6  E311               	bnc	u5610
 19634  015AD8  0EF0               	movlw	-16
 19635  015ADA  2AE3               	incf	plusw1,f,c
 19636  015ADC  E30E               	bnc	u5610
 19637  015ADE  0EF1               	movlw	-15
 19638  015AE0  2AE3               	incf	plusw1,f,c
 19639  015AE2  E30B               	bnc	u5610
 19640  015AE4  0EF2               	movlw	-14
 19641  015AE6  2AE3               	incf	plusw1,f,c
 19642  015AE8  E308               	bnc	u5610
 19643  015AEA  0EF3               	movlw	-13
 19644  015AEC  2AE3               	incf	plusw1,f,c
 19645  015AEE  E305               	bnc	u5610
 19646  015AF0  0EF4               	movlw	-12
 19647  015AF2  2AE3               	incf	plusw1,f,c
 19648  015AF4  E302               	bnc	u5610
 19649  015AF6  0EF5               	movlw	-11
 19650  015AF8  2AE3               	incf	plusw1,f,c
 19651  015AFA                     u5610:
 19652                           
 19653                           ;stkvar	_divisor @ sp[(-2)+-16]
 19654  015AFA  0EEE               	movlw	-18
 19655  015AFC  50E3               	movf	plusw1,w,c
 19656  015AFE  E116               	bnz	u5620
 19657  015B00  0EEF               	movlw	-17
 19658  015B02  50E3               	movf	plusw1,w,c
 19659  015B04  E113               	bnz	u5620
 19660  015B06  0EF0               	movlw	-16
 19661  015B08  50E3               	movf	plusw1,w,c
 19662  015B0A  E110               	bnz	u5620
 19663  015B0C  0EF1               	movlw	-15
 19664  015B0E  50E3               	movf	plusw1,w,c
 19665  015B10  E10D               	bnz	u5620
 19666  015B12  0EF2               	movlw	-14
 19667  015B14  50E3               	movf	plusw1,w,c
 19668  015B16  E10A               	bnz	u5620
 19669  015B18  0EF3               	movlw	-13
 19670  015B1A  50E3               	movf	plusw1,w,c
 19671  015B1C  E107               	bnz	u5620
 19672  015B1E  0EF4               	movlw	-12
 19673  015B20  50E3               	movf	plusw1,w,c
 19674  015B22  E104               	bnz	u5620
 19675  015B24  0EF5               	movlw	-11
 19676  015B26  50E3               	movf	plusw1,w,c
 19677  015B28  B4D8               	btfsc	status,2,c
 19678  015B2A  D075               	goto	u5650
 19679  015B2C                     u5620:
 19680                           
 19681                           ;stkvar	_counter @ sp[(-2)+1]
 19682  015B2C  0EFF               	movlw	-1
 19683  015B2E  6AE3               	clrf	plusw1,c
 19684  015B30  D012               	goto	L20
 19685  015B32                     l6552:
 19686                           
 19687                           ;stkvar	_divisor @ sp[(-2)+-16]
 19688  015B32  90D8               	bcf	status,0,c
 19689  015B34  0EEE               	movlw	-18
 19690  015B36  36E3               	rlcf	plusw1,f,c
 19691  015B38  0EEF               	movlw	-17
 19692  015B3A  36E3               	rlcf	plusw1,f,c
 19693  015B3C  0EF0               	movlw	-16
 19694  015B3E  36E3               	rlcf	plusw1,f,c
 19695  015B40  0EF1               	movlw	-15
 19696  015B42  36E3               	rlcf	plusw1,f,c
 19697  015B44  0EF2               	movlw	-14
 19698  015B46  36E3               	rlcf	plusw1,f,c
 19699  015B48  0EF3               	movlw	-13
 19700  015B4A  36E3               	rlcf	plusw1,f,c
 19701  015B4C  0EF4               	movlw	-12
 19702  015B4E  36E3               	rlcf	plusw1,f,c
 19703  015B50  0EF5               	movlw	-11
 19704  015B52  36E3               	rlcf	plusw1,f,c
 19705                           
 19706                           ;stkvar	_counter @ sp[(-2)+1]
 19707  015B54  0EFF               	movlw	-1
 19708  015B56                     L20:
 19709  015B56  2AE3               	incf	plusw1,f,c
 19710                           
 19711                           ;stkvar	_divisor @ sp[(-2)+-16]
 19712  015B58  0EF5               	movlw	-11
 19713  015B5A  AEE3               	btfss	plusw1,7,c
 19714  015B5C  D7EA               	goto	l6552
 19715  015B5E                     u5630:
 19716                           
 19717                           ;stkvar	_divisor @ sp[(-2)+-16]
 19718                           ;stkvar	_dividend @ sp[(-2)+-8]
 19719  015B5E  50E1               	movf	fsr1l,w,c
 19720  015B60  0FF6               	addlw	-10
 19721  015B62  6ED9               	movwf	fsr2l,c
 19722  015B64  50E2               	movf	fsr1h,w,c
 19723  015B66  6EDA               	movwf	fsr2h,c
 19724  015B68  0EFF               	movlw	255
 19725  015B6A  22DA               	addwfc	fsr2h,f,c
 19726  015B6C  0EEE               	movlw	-18
 19727  015B6E  50E3               	movf	plusw1,w,c
 19728  015B70  5CDE               	subwf	postinc2,w,c
 19729  015B72  0EEF               	movlw	-17
 19730  015B74  50E3               	movf	plusw1,w,c
 19731  015B76  58DE               	subwfb	postinc2,w,c
 19732  015B78  0EF0               	movlw	-16
 19733  015B7A  50E3               	movf	plusw1,w,c
 19734  015B7C  58DE               	subwfb	postinc2,w,c
 19735  015B7E  0EF1               	movlw	-15
 19736  015B80  50E3               	movf	plusw1,w,c
 19737  015B82  58DE               	subwfb	postinc2,w,c
 19738  015B84  0EF2               	movlw	-14
 19739  015B86  50E3               	movf	plusw1,w,c
 19740  015B88  58DE               	subwfb	postinc2,w,c
 19741  015B8A  0EF3               	movlw	-13
 19742  015B8C  50E3               	movf	plusw1,w,c
 19743  015B8E  58DE               	subwfb	postinc2,w,c
 19744  015B90  0EF4               	movlw	-12
 19745  015B92  50E3               	movf	plusw1,w,c
 19746  015B94  58DE               	subwfb	postinc2,w,c
 19747  015B96  0EF5               	movlw	-11
 19748  015B98  50E3               	movf	plusw1,w,c
 19749  015B9A  58DE               	subwfb	postinc2,w,c
 19750  015B9C  A0D8               	btfss	status,0,c
 19751  015B9E  D01F               	goto	l6560
 19752                           
 19753                           ;stkvar	_divisor @ sp[(-2)+-16]
 19754                           ;stkvar	_dividend @ sp[(-2)+-8]
 19755  015BA0  50E1               	movf	fsr1l,w,c
 19756  015BA2  0FF6               	addlw	-10
 19757  015BA4  6ED9               	movwf	fsr2l,c
 19758  015BA6  50E2               	movf	fsr1h,w,c
 19759  015BA8  6EDA               	movwf	fsr2h,c
 19760  015BAA  0EFF               	movlw	255
 19761  015BAC  22DA               	addwfc	fsr2h,f,c
 19762  015BAE  0EEE               	movlw	-18
 19763  015BB0  50E3               	movf	plusw1,w,c
 19764  015BB2  5EDE               	subwf	postinc2,f,c
 19765  015BB4  0EEF               	movlw	-17
 19766  015BB6  50E3               	movf	plusw1,w,c
 19767  015BB8  5ADE               	subwfb	postinc2,f,c
 19768  015BBA  0EF0               	movlw	-16
 19769  015BBC  50E3               	movf	plusw1,w,c
 19770  015BBE  5ADE               	subwfb	postinc2,f,c
 19771  015BC0  0EF1               	movlw	-15
 19772  015BC2  50E3               	movf	plusw1,w,c
 19773  015BC4  5ADE               	subwfb	postinc2,f,c
 19774  015BC6  0EF2               	movlw	-14
 19775  015BC8  50E3               	movf	plusw1,w,c
 19776  015BCA  5ADE               	subwfb	postinc2,f,c
 19777  015BCC  0EF3               	movlw	-13
 19778  015BCE  50E3               	movf	plusw1,w,c
 19779  015BD0  5ADE               	subwfb	postinc2,f,c
 19780  015BD2  0EF4               	movlw	-12
 19781  015BD4  50E3               	movf	plusw1,w,c
 19782  015BD6  5ADE               	subwfb	postinc2,f,c
 19783  015BD8  0EF5               	movlw	-11
 19784  015BDA  50E3               	movf	plusw1,w,c
 19785  015BDC  5ADE               	subwfb	postinc2,f,c
 19786  015BDE                     l6560:
 19787                           
 19788                           ;stkvar	_divisor @ sp[(-2)+-16]
 19789  015BDE  90D8               	bcf	status,0,c
 19790  015BE0  0EF5               	movlw	-11
 19791  015BE2  32E3               	rrcf	plusw1,f,c
 19792  015BE4  0EF4               	movlw	-12
 19793  015BE6  32E3               	rrcf	plusw1,f,c
 19794  015BE8  0EF3               	movlw	-13
 19795  015BEA  32E3               	rrcf	plusw1,f,c
 19796  015BEC  0EF2               	movlw	-14
 19797  015BEE  32E3               	rrcf	plusw1,f,c
 19798  015BF0  0EF1               	movlw	-15
 19799  015BF2  32E3               	rrcf	plusw1,f,c
 19800  015BF4  0EF0               	movlw	-16
 19801  015BF6  32E3               	rrcf	plusw1,f,c
 19802  015BF8  0EEF               	movlw	-17
 19803  015BFA  32E3               	rrcf	plusw1,f,c
 19804  015BFC  0EEE               	movlw	-18
 19805  015BFE  32E3               	rrcf	plusw1,f,c
 19806                           
 19807                           ;stkvar	_counter @ sp[(-2)+1]
 19808  015C00  0EFF               	movlw	-1
 19809  015C02  50E3               	movf	plusw1,w,c
 19810  015C04  6E35               	movwf	btemp^0,c
 19811  015C06  0E01               	movlw	1
 19812  015C08  5E35               	subwf	btemp^0,f,c
 19813  015C0A  0EFF               	movlw	-1
 19814  015C0C  0060  F0D7  FFE3   	movff	btemp,plusw1
 19815  015C12  A4D8               	btfss	status,2,c
 19816  015C14  D7A4               	goto	u5630
 19817  015C16                     u5650:
 19818                           
 19819                           ;stkvar	_sign @ sp[(-2)+0]
 19820  015C16  0EFE               	movlw	-2
 19821  015C18  50E3               	movf	plusw1,w,c
 19822  015C1A  B4D8               	btfsc	status,2,c
 19823  015C1C  D025               	goto	u5670
 19824                           
 19825                           ;stkvar	_dividend @ sp[(-2)+-8]
 19826                           ;stkvar	_dividend @ sp[(-2)+-8]
 19827  015C1E  0EF6               	movlw	-10
 19828  015C20  6CE3               	negf	plusw1,c
 19829  015C22  0EF7               	movlw	-9
 19830  015C24  1EE3               	comf	plusw1,f,c
 19831  015C26  0EF8               	movlw	-8
 19832  015C28  1EE3               	comf	plusw1,f,c
 19833  015C2A  0EF9               	movlw	-7
 19834  015C2C  1EE3               	comf	plusw1,f,c
 19835  015C2E  0EFA               	movlw	-6
 19836  015C30  1EE3               	comf	plusw1,f,c
 19837  015C32  0EFB               	movlw	-5
 19838  015C34  1EE3               	comf	plusw1,f,c
 19839  015C36  0EFC               	movlw	-4
 19840  015C38  1EE3               	comf	plusw1,f,c
 19841  015C3A  0EFD               	movlw	-3
 19842  015C3C  1EE3               	comf	plusw1,f,c
 19843  015C3E  E314               	bnc	u5670
 19844  015C40  0EF7               	movlw	-9
 19845  015C42  2AE3               	incf	plusw1,f,c
 19846  015C44  E311               	bnc	u5670
 19847  015C46  0EF8               	movlw	-8
 19848  015C48  2AE3               	incf	plusw1,f,c
 19849  015C4A  E30E               	bnc	u5670
 19850  015C4C  0EF9               	movlw	-7
 19851  015C4E  2AE3               	incf	plusw1,f,c
 19852  015C50  E30B               	bnc	u5670
 19853  015C52  0EFA               	movlw	-6
 19854  015C54  2AE3               	incf	plusw1,f,c
 19855  015C56  E308               	bnc	u5670
 19856  015C58  0EFB               	movlw	-5
 19857  015C5A  2AE3               	incf	plusw1,f,c
 19858  015C5C  E305               	bnc	u5670
 19859  015C5E  0EFC               	movlw	-4
 19860  015C60  2AE3               	incf	plusw1,f,c
 19861  015C62  E302               	bnc	u5670
 19862  015C64  0EFD               	movlw	-3
 19863  015C66  2AE3               	incf	plusw1,f,c
 19864  015C68                     u5670:
 19865                           
 19866                           ;stkvar	_dividend @ sp[(-2)+-8]
 19867  015C68  0EF6               	movlw	246
 19868  015C6A  24E1               	addwf	fsr1l,w,c
 19869  015C6C  6ED9               	movwf	fsr2l,c
 19870  015C6E  0EFF               	movlw	255
 19871  015C70  20E2               	addwfc	fsr1h,w,c
 19872  015C72  6EDA               	movwf	fsr2h,c
 19873                           
 19874                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19875  015C74  0E08               	movlw	8
 19876  015C76  6E35               	movwf	btemp^0,c
 19877  015C78  0EF6               	movlw	-10
 19878  015C7A                     us568999:
 19879  015C7A  006F FF7B FFE3     	movff	postinc2,plusw1
 19880  015C80  28E8               	incf	wreg,w,c
 19881  015C82  2E35               	decfsz	btemp^0,f,c
 19882  015C84  D7FA               	bra	us568999
 19883                           
 19884                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19885  015C86  52E5               	movf	postdec1,f,c
 19886  015C88  52E5               	movf	postdec1,f,c
 19887  015C8A  0012               	return		;funcret
 19888  015C8C                     __end_of___aomod:
 19889                           	opt callstack 0
 19890                           
 19891 ;; *************** function ___aodiv *****************
 19892 ;; Defined at:
 19893 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19894 ;; Parameters:    Size  Location     Type
 19895 ;;  dividend        8  [STACK] long long 
 19896 ;;  divisor         8  [STACK] long long 
 19897 ;; Auto vars:     Size  Location     Type
 19898 ;;  quotient        8  [STACK] long long 
 19899 ;;  sign            1  [STACK] unsigned char 
 19900 ;;  counter         1  [STACK] unsigned char 
 19901 ;; Return value:  Size  Location     Type
 19902 ;;                  8  [STACK] long long 
 19903 ;; Registers used:
 19904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19905 ;; Tracked objects:
 19906 ;;		On entry : 0/2
 19907 ;;		On exit  : 0/0
 19908 ;;		Unchanged: 0/0
 19909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19914 ;;Total ram usage:        0 bytes
 19915 ;; Hardware stack levels used:    1
 19916 ;; Hardware stack levels required when called:    6
 19917 ;; This function calls:
 19918 ;;		Nothing
 19919 ;; This function is called by:
 19920 ;;		_dtoa
 19921 ;; This function uses a reentrant model
 19922 ;;
 19923                           
 19924                           	psect	text64
 19925  015558                     __ptext64:
 19926                           	opt callstack 0
 19927  015558                     ___aodiv:
 19928                           	opt callstack 0
 19929                           
 19930                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19931  015558  0E0A               	movlw	10
 19932  01555A  26E1               	addwf	fsr1l,f,c
 19933  01555C  0E00               	movlw	0
 19934  01555E  22E2               	addwfc	fsr1h,f,c
 19935                           
 19936                           ;stkvar	_sign @ sp[(-10)+8]
 19937                           
 19938                           ;incstack = 0
 19939  015560  0EFE               	movlw	-2
 19940  015562  6AE3               	clrf	plusw1,c
 19941                           
 19942                           ;stkvar	_divisor @ sp[(-10)+-16]
 19943  015564  0EED               	movlw	-19
 19944  015566  AEE3               	btfss	plusw1,7,c
 19945  015568  D028               	goto	l6500
 19946                           
 19947                           ;stkvar	_divisor @ sp[(-10)+-16]
 19948                           ;stkvar	_divisor @ sp[(-10)+-16]
 19949  01556A  0EE6               	movlw	-26
 19950  01556C  6CE3               	negf	plusw1,c
 19951  01556E  0EE7               	movlw	-25
 19952  015570  1EE3               	comf	plusw1,f,c
 19953  015572  0EE8               	movlw	-24
 19954  015574  1EE3               	comf	plusw1,f,c
 19955  015576  0EE9               	movlw	-23
 19956  015578  1EE3               	comf	plusw1,f,c
 19957  01557A  0EEA               	movlw	-22
 19958  01557C  1EE3               	comf	plusw1,f,c
 19959  01557E  0EEB               	movlw	-21
 19960  015580  1EE3               	comf	plusw1,f,c
 19961  015582  0EEC               	movlw	-20
 19962  015584  1EE3               	comf	plusw1,f,c
 19963  015586  0EED               	movlw	-19
 19964  015588  1EE3               	comf	plusw1,f,c
 19965  01558A  E314               	bnc	u5470
 19966  01558C  0EE7               	movlw	-25
 19967  01558E  2AE3               	incf	plusw1,f,c
 19968  015590  E311               	bnc	u5470
 19969  015592  0EE8               	movlw	-24
 19970  015594  2AE3               	incf	plusw1,f,c
 19971  015596  E30E               	bnc	u5470
 19972  015598  0EE9               	movlw	-23
 19973  01559A  2AE3               	incf	plusw1,f,c
 19974  01559C  E30B               	bnc	u5470
 19975  01559E  0EEA               	movlw	-22
 19976  0155A0  2AE3               	incf	plusw1,f,c
 19977  0155A2  E308               	bnc	u5470
 19978  0155A4  0EEB               	movlw	-21
 19979  0155A6  2AE3               	incf	plusw1,f,c
 19980  0155A8  E305               	bnc	u5470
 19981  0155AA  0EEC               	movlw	-20
 19982  0155AC  2AE3               	incf	plusw1,f,c
 19983  0155AE  E302               	bnc	u5470
 19984  0155B0  0EED               	movlw	-19
 19985  0155B2  2AE3               	incf	plusw1,f,c
 19986  0155B4                     u5470:
 19987                           
 19988                           ;stkvar	_sign @ sp[(-10)+8]
 19989  0155B4  0EFE               	movlw	-2
 19990  0155B6  6AE3               	clrf	plusw1,c
 19991  0155B8  2AE3               	incf	plusw1,f,c
 19992  0155BA                     l6500:
 19993                           
 19994                           ;stkvar	_dividend @ sp[(-10)+-8]
 19995  0155BA  0EF5               	movlw	-11
 19996  0155BC  AEE3               	btfss	plusw1,7,c
 19997  0155BE  D027               	goto	l6506
 19998                           
 19999                           ;stkvar	_dividend @ sp[(-10)+-8]
 20000                           ;stkvar	_dividend @ sp[(-10)+-8]
 20001  0155C0  0EEE               	movlw	-18
 20002  0155C2  6CE3               	negf	plusw1,c
 20003  0155C4  0EEF               	movlw	-17
 20004  0155C6  1EE3               	comf	plusw1,f,c
 20005  0155C8  0EF0               	movlw	-16
 20006  0155CA  1EE3               	comf	plusw1,f,c
 20007  0155CC  0EF1               	movlw	-15
 20008  0155CE  1EE3               	comf	plusw1,f,c
 20009  0155D0  0EF2               	movlw	-14
 20010  0155D2  1EE3               	comf	plusw1,f,c
 20011  0155D4  0EF3               	movlw	-13
 20012  0155D6  1EE3               	comf	plusw1,f,c
 20013  0155D8  0EF4               	movlw	-12
 20014  0155DA  1EE3               	comf	plusw1,f,c
 20015  0155DC  0EF5               	movlw	-11
 20016  0155DE  1EE3               	comf	plusw1,f,c
 20017  0155E0  E314               	bnc	u5490
 20018  0155E2  0EEF               	movlw	-17
 20019  0155E4  2AE3               	incf	plusw1,f,c
 20020  0155E6  E311               	bnc	u5490
 20021  0155E8  0EF0               	movlw	-16
 20022  0155EA  2AE3               	incf	plusw1,f,c
 20023  0155EC  E30E               	bnc	u5490
 20024  0155EE  0EF1               	movlw	-15
 20025  0155F0  2AE3               	incf	plusw1,f,c
 20026  0155F2  E30B               	bnc	u5490
 20027  0155F4  0EF2               	movlw	-14
 20028  0155F6  2AE3               	incf	plusw1,f,c
 20029  0155F8  E308               	bnc	u5490
 20030  0155FA  0EF3               	movlw	-13
 20031  0155FC  2AE3               	incf	plusw1,f,c
 20032  0155FE  E305               	bnc	u5490
 20033  015600  0EF4               	movlw	-12
 20034  015602  2AE3               	incf	plusw1,f,c
 20035  015604  E302               	bnc	u5490
 20036  015606  0EF5               	movlw	-11
 20037  015608  2AE3               	incf	plusw1,f,c
 20038  01560A                     u5490:
 20039                           
 20040                           ;stkvar	_sign @ sp[(-10)+8]
 20041  01560A  0EFE               	movlw	-2
 20042  01560C  70E3               	btg	plusw1,0,c
 20043  01560E                     l6506:
 20044                           
 20045                           ;stkvar	_quotient @ sp[(-10)+0]
 20046  01560E  0E07               	movlw	7
 20047  015610  6E35               	movwf	btemp^0,c
 20048  015612  0EF6               	movlw	-10
 20049  015614                     u5501:
 20050  015614  6AE3               	clrf	plusw1,c
 20051  015616  2AE8               	incf	wreg,f,c
 20052  015618  0635               	decf	btemp^0,f,c
 20053  01561A  E2FC               	bc	u5501
 20054                           
 20055                           ;stkvar	_divisor @ sp[(-10)+-16]
 20056  01561C  0EE6               	movlw	-26
 20057  01561E  50E3               	movf	plusw1,w,c
 20058  015620  E116               	bnz	u5510
 20059  015622  0EE7               	movlw	-25
 20060  015624  50E3               	movf	plusw1,w,c
 20061  015626  E113               	bnz	u5510
 20062  015628  0EE8               	movlw	-24
 20063  01562A  50E3               	movf	plusw1,w,c
 20064  01562C  E110               	bnz	u5510
 20065  01562E  0EE9               	movlw	-23
 20066  015630  50E3               	movf	plusw1,w,c
 20067  015632  E10D               	bnz	u5510
 20068  015634  0EEA               	movlw	-22
 20069  015636  50E3               	movf	plusw1,w,c
 20070  015638  E10A               	bnz	u5510
 20071  01563A  0EEB               	movlw	-21
 20072  01563C  50E3               	movf	plusw1,w,c
 20073  01563E  E107               	bnz	u5510
 20074  015640  0EEC               	movlw	-20
 20075  015642  50E3               	movf	plusw1,w,c
 20076  015644  E104               	bnz	u5510
 20077  015646  0EED               	movlw	-19
 20078  015648  50E3               	movf	plusw1,w,c
 20079  01564A  B4D8               	btfsc	status,2,c
 20080  01564C  D088               	goto	u5540
 20081  01564E                     u5510:
 20082                           
 20083                           ;stkvar	_counter @ sp[(-10)+9]
 20084  01564E  0EFF               	movlw	-1
 20085  015650  6AE3               	clrf	plusw1,c
 20086  015652  D012               	goto	L21
 20087  015654                     l6512:
 20088                           
 20089                           ;stkvar	_divisor @ sp[(-10)+-16]
 20090  015654  90D8               	bcf	status,0,c
 20091  015656  0EE6               	movlw	-26
 20092  015658  36E3               	rlcf	plusw1,f,c
 20093  01565A  0EE7               	movlw	-25
 20094  01565C  36E3               	rlcf	plusw1,f,c
 20095  01565E  0EE8               	movlw	-24
 20096  015660  36E3               	rlcf	plusw1,f,c
 20097  015662  0EE9               	movlw	-23
 20098  015664  36E3               	rlcf	plusw1,f,c
 20099  015666  0EEA               	movlw	-22
 20100  015668  36E3               	rlcf	plusw1,f,c
 20101  01566A  0EEB               	movlw	-21
 20102  01566C  36E3               	rlcf	plusw1,f,c
 20103  01566E  0EEC               	movlw	-20
 20104  015670  36E3               	rlcf	plusw1,f,c
 20105  015672  0EED               	movlw	-19
 20106  015674  36E3               	rlcf	plusw1,f,c
 20107                           
 20108                           ;stkvar	_counter @ sp[(-10)+9]
 20109  015676  0EFF               	movlw	-1
 20110  015678                     L21:
 20111  015678  2AE3               	incf	plusw1,f,c
 20112                           
 20113                           ;stkvar	_divisor @ sp[(-10)+-16]
 20114  01567A  0EED               	movlw	-19
 20115  01567C  AEE3               	btfss	plusw1,7,c
 20116  01567E  D7EA               	goto	l6512
 20117  015680                     u5520:
 20118                           
 20119                           ;stkvar	_quotient @ sp[(-10)+0]
 20120  015680  90D8               	bcf	status,0,c
 20121  015682  0EF6               	movlw	-10
 20122  015684  36E3               	rlcf	plusw1,f,c
 20123  015686  0EF7               	movlw	-9
 20124  015688  36E3               	rlcf	plusw1,f,c
 20125  01568A  0EF8               	movlw	-8
 20126  01568C  36E3               	rlcf	plusw1,f,c
 20127  01568E  0EF9               	movlw	-7
 20128  015690  36E3               	rlcf	plusw1,f,c
 20129  015692  0EFA               	movlw	-6
 20130  015694  36E3               	rlcf	plusw1,f,c
 20131  015696  0EFB               	movlw	-5
 20132  015698  36E3               	rlcf	plusw1,f,c
 20133  01569A  0EFC               	movlw	-4
 20134  01569C  36E3               	rlcf	plusw1,f,c
 20135  01569E  0EFD               	movlw	-3
 20136  0156A0  36E3               	rlcf	plusw1,f,c
 20137                           
 20138                           ;stkvar	_divisor @ sp[(-10)+-16]
 20139                           ;stkvar	_dividend @ sp[(-10)+-8]
 20140  0156A2  50E1               	movf	fsr1l,w,c
 20141  0156A4  0FEE               	addlw	-18
 20142  0156A6  6ED9               	movwf	fsr2l,c
 20143  0156A8  50E2               	movf	fsr1h,w,c
 20144  0156AA  6EDA               	movwf	fsr2h,c
 20145  0156AC  0EFF               	movlw	255
 20146  0156AE  22DA               	addwfc	fsr2h,f,c
 20147  0156B0  0EE6               	movlw	-26
 20148  0156B2  50E3               	movf	plusw1,w,c
 20149  0156B4  5CDE               	subwf	postinc2,w,c
 20150  0156B6  0EE7               	movlw	-25
 20151  0156B8  50E3               	movf	plusw1,w,c
 20152  0156BA  58DE               	subwfb	postinc2,w,c
 20153  0156BC  0EE8               	movlw	-24
 20154  0156BE  50E3               	movf	plusw1,w,c
 20155  0156C0  58DE               	subwfb	postinc2,w,c
 20156  0156C2  0EE9               	movlw	-23
 20157  0156C4  50E3               	movf	plusw1,w,c
 20158  0156C6  58DE               	subwfb	postinc2,w,c
 20159  0156C8  0EEA               	movlw	-22
 20160  0156CA  50E3               	movf	plusw1,w,c
 20161  0156CC  58DE               	subwfb	postinc2,w,c
 20162  0156CE  0EEB               	movlw	-21
 20163  0156D0  50E3               	movf	plusw1,w,c
 20164  0156D2  58DE               	subwfb	postinc2,w,c
 20165  0156D4  0EEC               	movlw	-20
 20166  0156D6  50E3               	movf	plusw1,w,c
 20167  0156D8  58DE               	subwfb	postinc2,w,c
 20168  0156DA  0EED               	movlw	-19
 20169  0156DC  50E3               	movf	plusw1,w,c
 20170  0156DE  58DE               	subwfb	postinc2,w,c
 20171  0156E0  A0D8               	btfss	status,0,c
 20172  0156E2  D021               	goto	l6524
 20173                           
 20174                           ;stkvar	_divisor @ sp[(-10)+-16]
 20175                           ;stkvar	_dividend @ sp[(-10)+-8]
 20176  0156E4  50E1               	movf	fsr1l,w,c
 20177  0156E6  0FEE               	addlw	-18
 20178  0156E8  6ED9               	movwf	fsr2l,c
 20179  0156EA  50E2               	movf	fsr1h,w,c
 20180  0156EC  6EDA               	movwf	fsr2h,c
 20181  0156EE  0EFF               	movlw	255
 20182  0156F0  22DA               	addwfc	fsr2h,f,c
 20183  0156F2  0EE6               	movlw	-26
 20184  0156F4  50E3               	movf	plusw1,w,c
 20185  0156F6  5EDE               	subwf	postinc2,f,c
 20186  0156F8  0EE7               	movlw	-25
 20187  0156FA  50E3               	movf	plusw1,w,c
 20188  0156FC  5ADE               	subwfb	postinc2,f,c
 20189  0156FE  0EE8               	movlw	-24
 20190  015700  50E3               	movf	plusw1,w,c
 20191  015702  5ADE               	subwfb	postinc2,f,c
 20192  015704  0EE9               	movlw	-23
 20193  015706  50E3               	movf	plusw1,w,c
 20194  015708  5ADE               	subwfb	postinc2,f,c
 20195  01570A  0EEA               	movlw	-22
 20196  01570C  50E3               	movf	plusw1,w,c
 20197  01570E  5ADE               	subwfb	postinc2,f,c
 20198  015710  0EEB               	movlw	-21
 20199  015712  50E3               	movf	plusw1,w,c
 20200  015714  5ADE               	subwfb	postinc2,f,c
 20201  015716  0EEC               	movlw	-20
 20202  015718  50E3               	movf	plusw1,w,c
 20203  01571A  5ADE               	subwfb	postinc2,f,c
 20204  01571C  0EED               	movlw	-19
 20205  01571E  50E3               	movf	plusw1,w,c
 20206  015720  5ADE               	subwfb	postinc2,f,c
 20207                           
 20208                           ;stkvar	_quotient @ sp[(-10)+0]
 20209  015722  0EF6               	movlw	-10
 20210  015724  80E3               	bsf	plusw1,0,c
 20211  015726                     l6524:
 20212                           
 20213                           ;stkvar	_divisor @ sp[(-10)+-16]
 20214  015726  90D8               	bcf	status,0,c
 20215  015728  0EED               	movlw	-19
 20216  01572A  32E3               	rrcf	plusw1,f,c
 20217  01572C  0EEC               	movlw	-20
 20218  01572E  32E3               	rrcf	plusw1,f,c
 20219  015730  0EEB               	movlw	-21
 20220  015732  32E3               	rrcf	plusw1,f,c
 20221  015734  0EEA               	movlw	-22
 20222  015736  32E3               	rrcf	plusw1,f,c
 20223  015738  0EE9               	movlw	-23
 20224  01573A  32E3               	rrcf	plusw1,f,c
 20225  01573C  0EE8               	movlw	-24
 20226  01573E  32E3               	rrcf	plusw1,f,c
 20227  015740  0EE7               	movlw	-25
 20228  015742  32E3               	rrcf	plusw1,f,c
 20229  015744  0EE6               	movlw	-26
 20230  015746  32E3               	rrcf	plusw1,f,c
 20231                           
 20232                           ;stkvar	_counter @ sp[(-10)+9]
 20233  015748  0EFF               	movlw	-1
 20234  01574A  50E3               	movf	plusw1,w,c
 20235  01574C  6E35               	movwf	btemp^0,c
 20236  01574E  0E01               	movlw	1
 20237  015750  5E35               	subwf	btemp^0,f,c
 20238  015752  0EFF               	movlw	-1
 20239  015754  0060  F0D7  FFE3   	movff	btemp,plusw1
 20240  01575A  A4D8               	btfss	status,2,c
 20241  01575C  D791               	goto	u5520
 20242  01575E                     u5540:
 20243                           
 20244                           ;stkvar	_sign @ sp[(-10)+8]
 20245  01575E  0EFE               	movlw	-2
 20246  015760  50E3               	movf	plusw1,w,c
 20247  015762  B4D8               	btfsc	status,2,c
 20248  015764  D025               	goto	u5560
 20249                           
 20250                           ;stkvar	_quotient @ sp[(-10)+0]
 20251                           ;stkvar	_quotient @ sp[(-10)+0]
 20252  015766  0EF6               	movlw	-10
 20253  015768  6CE3               	negf	plusw1,c
 20254  01576A  0EF7               	movlw	-9
 20255  01576C  1EE3               	comf	plusw1,f,c
 20256  01576E  0EF8               	movlw	-8
 20257  015770  1EE3               	comf	plusw1,f,c
 20258  015772  0EF9               	movlw	-7
 20259  015774  1EE3               	comf	plusw1,f,c
 20260  015776  0EFA               	movlw	-6
 20261  015778  1EE3               	comf	plusw1,f,c
 20262  01577A  0EFB               	movlw	-5
 20263  01577C  1EE3               	comf	plusw1,f,c
 20264  01577E  0EFC               	movlw	-4
 20265  015780  1EE3               	comf	plusw1,f,c
 20266  015782  0EFD               	movlw	-3
 20267  015784  1EE3               	comf	plusw1,f,c
 20268  015786  E314               	bnc	u5560
 20269  015788  0EF7               	movlw	-9
 20270  01578A  2AE3               	incf	plusw1,f,c
 20271  01578C  E311               	bnc	u5560
 20272  01578E  0EF8               	movlw	-8
 20273  015790  2AE3               	incf	plusw1,f,c
 20274  015792  E30E               	bnc	u5560
 20275  015794  0EF9               	movlw	-7
 20276  015796  2AE3               	incf	plusw1,f,c
 20277  015798  E30B               	bnc	u5560
 20278  01579A  0EFA               	movlw	-6
 20279  01579C  2AE3               	incf	plusw1,f,c
 20280  01579E  E308               	bnc	u5560
 20281  0157A0  0EFB               	movlw	-5
 20282  0157A2  2AE3               	incf	plusw1,f,c
 20283  0157A4  E305               	bnc	u5560
 20284  0157A6  0EFC               	movlw	-4
 20285  0157A8  2AE3               	incf	plusw1,f,c
 20286  0157AA  E302               	bnc	u5560
 20287  0157AC  0EFD               	movlw	-3
 20288  0157AE  2AE3               	incf	plusw1,f,c
 20289  0157B0                     u5560:
 20290                           
 20291                           ;stkvar	_quotient @ sp[(-10)+0]
 20292  0157B0  0EF6               	movlw	246
 20293  0157B2  24E1               	addwf	fsr1l,w,c
 20294  0157B4  6ED9               	movwf	fsr2l,c
 20295  0157B6  0EFF               	movlw	255
 20296  0157B8  20E2               	addwfc	fsr1h,w,c
 20297  0157BA  6EDA               	movwf	fsr2h,c
 20298                           
 20299                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20300  0157BC  0E08               	movlw	8
 20301  0157BE  6E35               	movwf	btemp^0,c
 20302  0157C0  0EEE               	movlw	-18
 20303  0157C2                     us557999:
 20304  0157C2  006F FF7B FFE3     	movff	postinc2,plusw1
 20305  0157C8  28E8               	incf	wreg,w,c
 20306  0157CA  2E35               	decfsz	btemp^0,f,c
 20307  0157CC  D7FA               	bra	us557999
 20308                           
 20309                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20310  0157CE  0EF6               	movlw	246
 20311  0157D0  26E1               	addwf	fsr1l,f,c
 20312  0157D2  0EFF               	movlw	255
 20313  0157D4  22E2               	addwfc	fsr1h,f,c
 20314  0157D6  0012               	return		;funcret
 20315  0157D8                     __end_of___aodiv:
 20316                           	opt callstack 0
 20317                           
 20318 ;; *************** function _ctoa *****************
 20319 ;; Defined at:
 20320 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20321 ;; Parameters:    Size  Location     Type
 20322 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20323 ;;		 -> f(6), NULL(0), 
 20324 ;;  c               1  [STACK] unsigned char 
 20325 ;; Auto vars:     Size  Location     Type
 20326 ;;  w               2  [STACK] int 
 20327 ;;  l               2    0        int 
 20328 ;; Return value:  Size  Location     Type
 20329 ;;                  2  [STACK] int 
 20330 ;; Registers used:
 20331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20332 ;; Tracked objects:
 20333 ;;		On entry : 0/4
 20334 ;;		On exit  : 0/0
 20335 ;;		Unchanged: 0/0
 20336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20341 ;;Total ram usage:        0 bytes
 20342 ;; Hardware stack levels used:    1
 20343 ;; Hardware stack levels required when called:   11
 20344 ;; This function calls:
 20345 ;;		_pad
 20346 ;; This function is called by:
 20347 ;;		_vfpfcnvrt
 20348 ;; This function uses a reentrant model
 20349 ;;
 20350                           
 20351                           	psect	text65
 20352  017C82                     __ptext65:
 20353                           	opt callstack 0
 20354  017C82                     _ctoa:
 20355                           	opt callstack 0
 20356                           
 20357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20358  017C82  52E6               	movf	postinc1,f,c
 20359  017C84  52E6               	movf	postinc1,f,c
 20360                           
 20361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20362                           
 20363                           ;incstack = 0
 20364  017C86  501E               	movf	_width^0,w,c
 20365  017C88  101F               	iorwf	(_width+1)^0,w,c
 20366  017C8A  A4D8               	btfss	status,2,c
 20367  017C8C  D009               	goto	l9306
 20368                           
 20369                           ;stkvar	_w @ sp[(-2)+0]
 20370  017C8E  0EFE               	movlw	-2
 20371  017C90  0060  F07B  FFE3   	movff	_width,plusw1
 20372  017C96  0EFF               	movlw	-1
 20373  017C98  0060  F07F  FFE3   	movff	_width+1,plusw1
 20374  017C9E  D016               	goto	l9308
 20375  017CA0                     l9306:
 20376  017CA0  0EFF               	movlw	255
 20377  017CA2  6E3F               	movwf	(btemp+10)^0,c
 20378  017CA4  0EFF               	movlw	255
 20379  017CA6  6E40               	movwf	(btemp+11)^0,c
 20380  017CA8  0060  F078  F03D   	movff	_width,btemp+8
 20381  017CAE  0060  F07C  F03E   	movff	_width+1,btemp+9
 20382  017CB4  503F               	movf	(btemp+10)^0,w,c
 20383  017CB6  263D               	addwf	(btemp+8)^0,f,c
 20384  017CB8  5040               	movf	(btemp+11)^0,w,c
 20385  017CBA  223E               	addwfc	(btemp+9)^0,f,c
 20386                           
 20387                           ;stkvar	_w @ sp[(-2)+0]
 20388  017CBC  0EFE               	movlw	-2
 20389  017CBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 20390  017CC4  0EFF               	movlw	-1
 20391  017CC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 20392  017CCC                     l9308:
 20393                           
 20394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20395                           ;stkvar	_c @ sp[(-2)+-3]
 20396  017CCC  0EFB               	movlw	-5
 20397  017CCE  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20398                           
 20399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20400  017CD4  0102               	movlb	2	; () banked
 20401  017CD6  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20402                           
 20403                           ; BSR set to: 2
 20404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20405                           ;stkvar	_w @ sp[(-2)+0]
 20406  017CD8  0EFE               	movlw	-2
 20407  017CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20408  017CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20409  017CE6  0EAC               	movlw	low _dbuf
 20410  017CE8  6EE6               	movwf	postinc1,c
 20411  017CEA  0E02               	movlw	high _dbuf
 20412  017CEC  6EE6               	movwf	postinc1,c
 20413                           
 20414                           ;stkvar	_fp @ sp[(-6)+-2]
 20415  017CEE  0EF8               	movlw	-8
 20416  017CF0  006F FF8F FFE6     	movff	plusw1,postinc1
 20417  017CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20418  017CFC  EC32  F0B8         	call	_pad	;wreg free
 20419                           
 20420                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20421  017D00  0EFB               	movlw	251
 20422  017D02  26E1               	addwf	fsr1l,f,c
 20423  017D04  0EFF               	movlw	255
 20424  017D06  22E2               	addwfc	fsr1h,f,c
 20425  017D08  0012               	return		;funcret
 20426  017D0A                     __end_of_ctoa:
 20427                           	opt callstack 0
 20428                           
 20429 ;; *************** function _pad *****************
 20430 ;; Defined at:
 20431 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20434 ;;		 -> f(6), NULL(0), 
 20435 ;;  buf             2  [STACK] PTR unsigned char 
 20436 ;;		 -> dbuf(80), 
 20437 ;;  p               2  [STACK] int 
 20438 ;; Auto vars:     Size  Location     Type
 20439 ;;  w               2  [STACK] int 
 20440 ;;  i               2  [STACK] int 
 20441 ;; Return value:  Size  Location     Type
 20442 ;;                  2  [STACK] int 
 20443 ;; Registers used:
 20444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20445 ;; Tracked objects:
 20446 ;;		On entry : 0/2
 20447 ;;		On exit  : 0/0
 20448 ;;		Unchanged: 0/0
 20449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20454 ;;Total ram usage:        0 bytes
 20455 ;; Hardware stack levels used:    1
 20456 ;; Hardware stack levels required when called:   10
 20457 ;; This function calls:
 20458 ;;		_fputc
 20459 ;;		_fputs
 20460 ;;		_strlen
 20461 ;; This function is called by:
 20462 ;;		_ctoa
 20463 ;;		_dtoa
 20464 ;;		_efgtoa
 20465 ;;		_utoa
 20466 ;;		_xtoa
 20467 ;; This function uses a reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text66
 20471  017064                     __ptext66:
 20472                           	opt callstack 0
 20473  017064                     _pad:
 20474                           	opt callstack 0
 20475                           
 20476                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20477  017064  52E6               	movf	postinc1,f,c
 20478  017066  52E6               	movf	postinc1,f,c
 20479  017068  52E6               	movf	postinc1,f,c
 20480  01706A  52E6               	movf	postinc1,f,c
 20481                           
 20482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20483                           
 20484                           ;incstack = 0
 20485  01706C  A022               	btfss	_flags^0,0,c
 20486  01706E  D010               	goto	l9280
 20487                           
 20488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20489                           ;stkvar	_fp @ sp[(-4)+-2]
 20490  017070  0EFA               	movlw	-6
 20491  017072  006F FF8F FFE6     	movff	plusw1,postinc1
 20492  017078  006F FF8F FFE6     	movff	plusw1,postinc1
 20493                           
 20494                           ;stkvar	_buf @ sp[(-6)+-4]
 20495  01707E  0EF6               	movlw	-10
 20496  017080  006F FF8F FFE6     	movff	plusw1,postinc1
 20497  017086  006F FF8F FFE6     	movff	plusw1,postinc1
 20498  01708C  EC64  F0BD         	call	_fputs	;wreg free
 20499  017090                     l9280:
 20500                           
 20501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20502                           ;stkvar	_p @ sp[(-4)+-6]
 20503  017090  0EF7               	movlw	-9
 20504  017092  BEE3               	btfsc	plusw1,7,c
 20505  017094  D011               	goto	l9284
 20506                           
 20507                           ;stkvar	_p @ sp[(-4)+-6]
 20508                           ;stkvar	_w @ sp[(-4)+0]
 20509  017096  0EF6               	movlw	-10
 20510  017098  006F FF8C  F035    	movff	plusw1,btemp
 20511  01709E  0EFC               	movlw	-4
 20512  0170A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 20513  0170A6  0EF7               	movlw	-9
 20514  0170A8  006F FF8C  F035    	movff	plusw1,btemp
 20515  0170AE  0EFD               	movlw	-3
 20516  0170B0  0060  F0D7  FFE3   	movff	btemp,plusw1
 20517  0170B6  D004               	goto	l1754
 20518  0170B8                     l9284:
 20519                           
 20520                           ;stkvar	_w @ sp[(-4)+0]
 20521  0170B8  0EFC               	movlw	-4
 20522  0170BA  6AE3               	clrf	plusw1,c
 20523  0170BC  0EFD               	movlw	-3
 20524  0170BE  6AE3               	clrf	plusw1,c
 20525  0170C0                     l1754:
 20526                           
 20527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20528                           ;stkvar	_i @ sp[(-4)+2]
 20529  0170C0  0EFE               	movlw	-2
 20530  0170C2  6AE3               	clrf	plusw1,c
 20531  0170C4  0EFF               	movlw	-1
 20532  0170C6  6AE3               	clrf	plusw1,c
 20533                           
 20534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20535  0170C8  D01E               	goto	l9290
 20536  0170CA                     l9286:
 20537                           
 20538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20539                           ;stkvar	_fp @ sp[(-4)+-2]
 20540  0170CA  0EFA               	movlw	-6
 20541  0170CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20542  0170D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20543  0170D8  0E20               	movlw	32
 20544  0170DA  6EE6               	movwf	postinc1,c
 20545  0170DC  0E00               	movlw	0
 20546  0170DE  6EE6               	movwf	postinc1,c
 20547  0170E0  EC14  F0B7         	call	_fputc	;wreg free
 20548                           
 20549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20550                           ;stkvar	_i @ sp[(-4)+2]
 20551  0170E4  0EFE               	movlw	-2
 20552  0170E6  50E3               	movf	plusw1,w,c
 20553  0170E8  0F01               	addlw	1
 20554  0170EA  6E35               	movwf	btemp^0,c
 20555  0170EC  0EFE               	movlw	-2
 20556  0170EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 20557  0170F4  6A35               	clrf	btemp^0,c
 20558  0170F6  0EFF               	movlw	-1
 20559  0170F8  50E3               	movf	plusw1,w,c
 20560  0170FA  2035               	addwfc	btemp^0,w,c
 20561  0170FC  6E35               	movwf	btemp^0,c
 20562  0170FE  0EFF               	movlw	-1
 20563  017100  0060  F0D7  FFE3   	movff	btemp,plusw1
 20564  017106                     l9290:
 20565                           
 20566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20567                           ;stkvar	_w @ sp[(-4)+0]
 20568                           ;stkvar	_i @ sp[(-4)+2]
 20569  017106  50E1               	movf	fsr1l,w,c
 20570  017108  0FFE               	addlw	-2
 20571  01710A  6ED9               	movwf	fsr2l,c
 20572  01710C  50E2               	movf	fsr1h,w,c
 20573  01710E  6EDA               	movwf	fsr2h,c
 20574  017110  0EFF               	movlw	255
 20575  017112  22DA               	addwfc	fsr2h,f,c
 20576  017114  0EFC               	movlw	-4
 20577  017116  50E3               	movf	plusw1,w,c
 20578  017118  5CDE               	subwf	postinc2,w,c
 20579  01711A  50DE               	movf	postinc2,w,c
 20580  01711C  0A80               	xorlw	128
 20581  01711E  6E35               	movwf	btemp^0,c
 20582  017120  0EFD               	movlw	-3
 20583  017122  50E3               	movf	plusw1,w,c
 20584  017124  0A80               	xorlw	128
 20585  017126  5835               	subwfb	btemp^0,w,c
 20586  017128  A0D8               	btfss	status,0,c
 20587  01712A  D7CF               	goto	l9286
 20588                           
 20589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20590  01712C  B022               	btfsc	_flags^0,0,c
 20591  01712E  D010               	goto	l9294
 20592                           
 20593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20594                           ;stkvar	_fp @ sp[(-4)+-2]
 20595  017130  0EFA               	movlw	-6
 20596  017132  006F FF8F FFE6     	movff	plusw1,postinc1
 20597  017138  006F FF8F FFE6     	movff	plusw1,postinc1
 20598                           
 20599                           ;stkvar	_buf @ sp[(-6)+-4]
 20600  01713E  0EF6               	movlw	-10
 20601  017140  006F FF8F FFE6     	movff	plusw1,postinc1
 20602  017146  006F FF8F FFE6     	movff	plusw1,postinc1
 20603  01714C  EC64  F0BD         	call	_fputs	;wreg free
 20604  017150                     l9294:
 20605                           
 20606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20607                           ;stkvar	_w @ sp[(-4)+0]
 20608                           ;stkvar	_buf @ sp[(-4)+-4]
 20609  017150  0EF8               	movlw	-8
 20610  017152  006F FF8F FFE6     	movff	plusw1,postinc1
 20611  017158  006F FF8F FFE6     	movff	plusw1,postinc1
 20612  01715E  ECC6  F0BC         	call	_strlen	;wreg free
 20613  017162  0EFC               	movlw	-4
 20614  017164  50E3               	movf	plusw1,w,c
 20615  017166  2635               	addwf	btemp^0,f,c
 20616  017168  0EFD               	movlw	-3
 20617  01716A  50E3               	movf	plusw1,w,c
 20618  01716C  2236               	addwfc	(btemp+1)^0,f,c
 20619                           
 20620                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20621  01716E  0EF6               	movlw	246
 20622  017170  26E1               	addwf	fsr1l,f,c
 20623  017172  0EFF               	movlw	255
 20624  017174  22E2               	addwfc	fsr1h,f,c
 20625  017176  0012               	return		;funcret
 20626  017178                     __end_of_pad:
 20627                           	opt callstack 0
 20628                           
 20629 ;; *************** function _strlen *****************
 20630 ;; Defined at:
 20631 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20632 ;; Parameters:    Size  Location     Type
 20633 ;;  s               2  [STACK] PTR const unsigned char 
 20634 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20635 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20636 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20637 ;; Auto vars:     Size  Location     Type
 20638 ;;  a               2  [STACK] PTR const unsigned char 
 20639 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20640 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20641 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  2  [STACK] unsigned int 
 20644 ;; Registers used:
 20645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/0
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20655 ;;Total ram usage:        0 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; Hardware stack levels required when called:    6
 20658 ;; This function calls:
 20659 ;;		Nothing
 20660 ;; This function is called by:
 20661 ;;		_eaDogM_WriteString
 20662 ;;		_pad
 20663 ;;		_stoa
 20664 ;; This function uses a reentrant model
 20665 ;;
 20666                           
 20667                           	psect	text67
 20668  01798C                     __ptext67:
 20669                           	opt callstack 0
 20670  01798C                     _strlen:
 20671                           	opt callstack 0
 20672                           
 20673                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20674  01798C  52E6               	movf	postinc1,f,c
 20675  01798E  52E6               	movf	postinc1,f,c
 20676                           
 20677                           ;stkvar	_s @ sp[(-2)+-2]
 20678                           
 20679                           ;incstack = 0
 20680  017990  0EFC               	movlw	-4
 20681  017992  006F FF8C  F03F    	movff	plusw1,btemp+10
 20682  017998  0EFD               	movlw	-3
 20683  01799A  006F FF8C  F040    	movff	plusw1,btemp+11
 20684                           
 20685                           ;stkvar	_a @ sp[(-2)+0]
 20686  0179A0  0EFF               	movlw	-1
 20687  0179A2  0060  F103  FFE3   	movff	btemp+11,plusw1
 20688  0179A8  0EFE               	movlw	-2
 20689  0179AA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 20690  0179B0  D011               	goto	l6118
 20691  0179B2                     l6116:
 20692                           
 20693                           ;stkvar	_s @ sp[(-2)+-2]
 20694  0179B2  0EFC               	movlw	-4
 20695  0179B4  50E3               	movf	plusw1,w,c
 20696  0179B6  0F01               	addlw	1
 20697  0179B8  6E35               	movwf	btemp^0,c
 20698  0179BA  0EFC               	movlw	-4
 20699  0179BC  0060  F0D7  FFE3   	movff	btemp,plusw1
 20700  0179C2  6A35               	clrf	btemp^0,c
 20701  0179C4  0EFD               	movlw	-3
 20702  0179C6  50E3               	movf	plusw1,w,c
 20703  0179C8  2035               	addwfc	btemp^0,w,c
 20704  0179CA  6E35               	movwf	btemp^0,c
 20705  0179CC  0EFD               	movlw	-3
 20706  0179CE  0060  F0D7  FFE3   	movff	btemp,plusw1
 20707  0179D4                     l6118:
 20708                           
 20709                           ;stkvar	_s @ sp[(-2)+-2]
 20710  0179D4  0EFC               	movlw	-4
 20711  0179D6  006F FF8F FFF6     	movff	plusw1,tblptrl
 20712  0179DC  0EFD               	movlw	-3
 20713  0179DE  006F FF8F FFF7     	movff	plusw1,tblptrh
 20714  0179E4  0E00               	movlw	low (__mediumconst shr (0+16))
 20715  0179E6  6EF8               	movwf	tblptru,c
 20716  0179E8  0E1F               	movlw	(high __ramtop+-1)
 20717  0179EA  64F7               	cpfsgt	tblptrh,c
 20718  0179EC  D003               	bra	u4637
 20719  0179EE  0008               	tblrd		*
 20720  0179F0  50F5               	movf	tablat,w,c
 20721  0179F2  D007               	bra	u4630
 20722  0179F4                     u4637:
 20723  0179F4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20724  0179FA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20725  017A00  50EF               	movf	indf0,w,c
 20726  017A02                     u4630:
 20727  017A02  0900               	iorlw	0
 20728  017A04  A4D8               	btfss	status,2,c
 20729  017A06  D7D5               	goto	l6116
 20730                           
 20731                           ;stkvar	_a @ sp[(-2)+0]
 20732                           ;stkvar	_s @ sp[(-2)+-2]
 20733  017A08  0EFC               	movlw	-4
 20734  017A0A  006F FF8C  F035    	movff	plusw1,btemp
 20735  017A10  0EFD               	movlw	-3
 20736  017A12  006F FF8C  F036    	movff	plusw1,btemp+1
 20737  017A18  0EFE               	movlw	-2
 20738  017A1A  50E3               	movf	plusw1,w,c
 20739  017A1C  5E35               	subwf	btemp^0,f,c
 20740  017A1E  0EFF               	movlw	-1
 20741  017A20  50E3               	movf	plusw1,w,c
 20742  017A22  5A36               	subwfb	(btemp+1)^0,f,c
 20743                           
 20744                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20745  017A24  52E5               	movf	postdec1,f,c
 20746  017A26  52E5               	movf	postdec1,f,c
 20747  017A28  52E5               	movf	postdec1,f,c
 20748  017A2A  52E5               	movf	postdec1,f,c
 20749  017A2C  0012               	return		;funcret
 20750  017A2E                     __end_of_strlen:
 20751                           	opt callstack 0
 20752                           
 20753 ;; *************** function _fputs *****************
 20754 ;; Defined at:
 20755 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;  s               2  [STACK] PTR const unsigned char 
 20758 ;;		 -> dbuf(80), 
 20759 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20760 ;;		 -> f(6), NULL(0), 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;  i               2  [STACK] int 
 20763 ;;  c               1  [STACK] unsigned char 
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  2  [STACK] int 
 20766 ;; Registers used:
 20767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/2
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20777 ;;Total ram usage:        0 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:    9
 20780 ;; This function calls:
 20781 ;;		_fputc
 20782 ;; This function is called by:
 20783 ;;		_pad
 20784 ;; This function uses a reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text68
 20788  017AC8                     __ptext68:
 20789                           	opt callstack 0
 20790  017AC8                     _fputs:
 20791                           	opt callstack 0
 20792                           
 20793                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20794  017AC8  52E6               	movf	postinc1,f,c
 20795  017ACA  52E6               	movf	postinc1,f,c
 20796  017ACC  52E6               	movf	postinc1,f,c
 20797                           
 20798                           ;stkvar	_i @ sp[(-3)+0]
 20799                           
 20800                           ;incstack = 0
 20801  017ACE  0EFD               	movlw	-3
 20802  017AD0  6AE3               	clrf	plusw1,c
 20803  017AD2  0EFE               	movlw	-2
 20804  017AD4  6AE3               	clrf	plusw1,c
 20805  017AD6  D01F               	goto	l9274
 20806  017AD8                     l9270:
 20807                           
 20808                           ;stkvar	_fp @ sp[(-3)+-4]
 20809  017AD8  0EF9               	movlw	-7
 20810  017ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 20811  017AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20812                           
 20813                           ;stkvar	_c @ sp[(-5)+2]
 20814  017AE6  0EFD               	movlw	-3
 20815  017AE8  50E3               	movf	plusw1,w,c
 20816  017AEA  6EE6               	movwf	postinc1,c
 20817  017AEC  0E00               	movlw	0
 20818  017AEE  6EE6               	movwf	postinc1,c
 20819  017AF0  EC14  F0B7         	call	_fputc	;wreg free
 20820                           
 20821                           ;stkvar	_i @ sp[(-3)+0]
 20822  017AF4  0EFD               	movlw	-3
 20823  017AF6  50E3               	movf	plusw1,w,c
 20824  017AF8  0F01               	addlw	1
 20825  017AFA  6E35               	movwf	btemp^0,c
 20826  017AFC  0EFD               	movlw	-3
 20827  017AFE  0060  F0D7  FFE3   	movff	btemp,plusw1
 20828  017B04  6A35               	clrf	btemp^0,c
 20829  017B06  0EFE               	movlw	-2
 20830  017B08  50E3               	movf	plusw1,w,c
 20831  017B0A  2035               	addwfc	btemp^0,w,c
 20832  017B0C  6E35               	movwf	btemp^0,c
 20833  017B0E  0EFE               	movlw	-2
 20834  017B10  0060  F0D7  FFE3   	movff	btemp,plusw1
 20835  017B16                     l9274:
 20836                           
 20837                           ;stkvar	_i @ sp[(-3)+0]
 20838  017B16  0EFD               	movlw	-3
 20839  017B18  006F FF8C  F03F    	movff	plusw1,btemp+10
 20840  017B1E  0EFE               	movlw	-2
 20841  017B20  006F FF8C  F040    	movff	plusw1,btemp+11
 20842                           
 20843                           ;stkvar	_s @ sp[(-3)+-2]
 20844  017B26  0EFB               	movlw	-5
 20845  017B28  006F FF8C  F03D    	movff	plusw1,btemp+8
 20846  017B2E  0EFC               	movlw	-4
 20847  017B30  006F FF8C  F03E    	movff	plusw1,btemp+9
 20848  017B36  503F               	movf	(btemp+10)^0,w,c
 20849  017B38  243D               	addwf	(btemp+8)^0,w,c
 20850  017B3A  6ED9               	movwf	fsr2l,c
 20851  017B3C  5040               	movf	(btemp+11)^0,w,c
 20852  017B3E  203E               	addwfc	(btemp+9)^0,w,c
 20853  017B40  6EDA               	movwf	fsr2h,c
 20854  017B42  50DF               	movf	indf2,w,c
 20855  017B44  6E40               	movwf	(btemp+11)^0,c
 20856                           
 20857                           ;stkvar	_c @ sp[(-3)+2]
 20858  017B46  0EFF               	movlw	-1
 20859  017B48  0060  F103  FFE3   	movff	btemp+11,plusw1
 20860  017B4E  0EFF               	movlw	-1
 20861  017B50  50E3               	movf	plusw1,w,c
 20862  017B52  A4D8               	btfss	status,2,c
 20863  017B54  D7C1               	goto	l9270
 20864                           
 20865                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20866  017B56  0EF9               	movlw	249
 20867  017B58  26E1               	addwf	fsr1l,f,c
 20868  017B5A  0EFF               	movlw	255
 20869  017B5C  22E2               	addwfc	fsr1h,f,c
 20870  017B5E  0012               	return		;funcret
 20871  017B60                     __end_of_fputs:
 20872                           	opt callstack 0
 20873                           
 20874 ;; *************** function _fputc *****************
 20875 ;; Defined at:
 20876 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;  c               2  [STACK] int 
 20879 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20880 ;;		 -> f(6), NULL(0), 
 20881 ;; Auto vars:     Size  Location     Type
 20882 ;;		None
 20883 ;; Return value:  Size  Location     Type
 20884 ;;                  2  [STACK] int 
 20885 ;; Registers used:
 20886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20887 ;; Tracked objects:
 20888 ;;		On entry : 0/4
 20889 ;;		On exit  : 0/0
 20890 ;;		Unchanged: 0/0
 20891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20896 ;;Total ram usage:        0 bytes
 20897 ;; Hardware stack levels used:    1
 20898 ;; Hardware stack levels required when called:    8
 20899 ;; This function calls:
 20900 ;;		_putch
 20901 ;; This function is called by:
 20902 ;;		_pad
 20903 ;;		_stoa
 20904 ;;		_vfpfcnvrt
 20905 ;;		_fputs
 20906 ;; This function uses a reentrant model
 20907 ;;
 20908                           
 20909                           	psect	text69
 20910  016E28                     __ptext69:
 20911                           	opt callstack 0
 20912  016E28                     _fputc:
 20913                           	opt callstack 13
 20914                           
 20915                           ;stkvar	_fp @ sp[(0)+-4]
 20916                           
 20917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20918                           ;incstack = 0
 20919  016E28  0EFC               	movlw	-4
 20920  016E2A  006F FF8C  F035    	movff	plusw1,btemp
 20921  016E30  0EFD               	movlw	-3
 20922  016E32  50E3               	movf	plusw1,w,c
 20923  016E34  1035               	iorwf	btemp^0,w,c
 20924  016E36  B4D8               	btfsc	status,2,c
 20925  016E38  D009               	goto	u9100
 20926                           
 20927                           ;stkvar	_fp @ sp[(0)+-4]
 20928  016E3A  0EFC               	movlw	-4
 20929  016E3C  006F FF8C  F035    	movff	plusw1,btemp
 20930  016E42  0EFD               	movlw	-3
 20931  016E44  50E3               	movf	plusw1,w,c
 20932  016E46  1035               	iorwf	btemp^0,w,c
 20933  016E48  A4D8               	btfss	status,2,c
 20934  016E4A  D006               	goto	l9258
 20935  016E4C                     u9100:
 20936                           
 20937                           ;stkvar	_c @ sp[(0)+-2]
 20938  016E4C  0EFE               	movlw	-2
 20939  016E4E  50E3               	movf	plusw1,w,c
 20940  016E50  6EE6               	movwf	postinc1,c
 20941  016E52  ECD2  F0C6         	call	_putch	;wreg free
 20942  016E56  D075               	goto	l2795
 20943  016E58                     l9258:
 20944                           
 20945                           ;stkvar	_fp @ sp[(0)+-4]
 20946  016E58  0EFC               	movlw	-4
 20947  016E5A  006F FF8C  F03F    	movff	plusw1,btemp+10
 20948  016E60  0EFD               	movlw	-3
 20949  016E62  006F FF8C  F040    	movff	plusw1,btemp+11
 20950  016E68  0E04               	movlw	4
 20951  016E6A  243F               	addwf	(btemp+10)^0,w,c
 20952  016E6C  6ED9               	movwf	fsr2l,c
 20953  016E6E  0E00               	movlw	0
 20954  016E70  2040               	addwfc	(btemp+11)^0,w,c
 20955  016E72  6EDA               	movwf	fsr2h,c
 20956  016E74  50DE               	movf	postinc2,w,c
 20957  016E76  10DE               	iorwf	postinc2,w,c
 20958  016E78  B4D8               	btfsc	status,2,c
 20959  016E7A  D026               	goto	u9120
 20960                           
 20961                           ;stkvar	_fp @ sp[(0)+-4]
 20962  016E7C  0EFC               	movlw	-4
 20963  016E7E  006F FF8C  F03F    	movff	plusw1,btemp+10
 20964  016E84  0EFD               	movlw	-3
 20965  016E86  006F FF8C  F040    	movff	plusw1,btemp+11
 20966  016E8C  0E04               	movlw	4
 20967  016E8E  243F               	addwf	(btemp+10)^0,w,c
 20968  016E90  6ED9               	movwf	fsr2l,c
 20969  016E92  0E00               	movlw	0
 20970  016E94  2040               	addwfc	(btemp+11)^0,w,c
 20971  016E96  6EDA               	movwf	fsr2h,c
 20972                           
 20973                           ;stkvar	_fp @ sp[(0)+-4]
 20974  016E98  0EFC               	movlw	-4
 20975  016E9A  006F FF8C  F03F    	movff	plusw1,btemp+10
 20976  016EA0  0EFD               	movlw	-3
 20977  016EA2  006F FF8C  F040    	movff	plusw1,btemp+11
 20978  016EA8  0E02               	movlw	2
 20979  016EAA  243F               	addwf	(btemp+10)^0,w,c
 20980  016EAC  6EE9               	movwf	fsr0l,c
 20981  016EAE  0E00               	movlw	0
 20982  016EB0  2040               	addwfc	(btemp+11)^0,w,c
 20983  016EB2  6EEA               	movwf	fsr0h,c
 20984  016EB4  50DE               	movf	postinc2,w,c
 20985  016EB6  5CEE               	subwf	postinc0,w,c
 20986  016EB8  50EE               	movf	postinc0,w,c
 20987  016EBA  0A80               	xorlw	128
 20988  016EBC  6E35               	movwf	btemp^0,c
 20989  016EBE  50DE               	movf	postinc2,w,c
 20990  016EC0  0A80               	xorlw	128
 20991  016EC2  5835               	subwfb	btemp^0,w,c
 20992  016EC4  B0D8               	btfsc	status,0,c
 20993  016EC6  D03D               	goto	l2795
 20994  016EC8                     u9120:
 20995                           
 20996                           ;stkvar	_c @ sp[(0)+-2]
 20997                           ;stkvar	_fp @ sp[(0)+-4]
 20998  016EC8  0EFC               	movlw	-4
 20999  016ECA  006F FF8C  F03F    	movff	plusw1,btemp+10
 21000  016ED0  0EFD               	movlw	-3
 21001  016ED2  006F FF8C  F040    	movff	plusw1,btemp+11
 21002  016ED8  0E02               	movlw	2
 21003  016EDA  243F               	addwf	(btemp+10)^0,w,c
 21004  016EDC  6ED9               	movwf	fsr2l,c
 21005  016EDE  0E00               	movlw	0
 21006  016EE0  2040               	addwfc	(btemp+11)^0,w,c
 21007  016EE2  6EDA               	movwf	fsr2h,c
 21008  016EE4  006F FF78  F03F    	movff	postinc2,btemp+10
 21009  016EEA  006F FF74  F040    	movff	postdec2,btemp+11
 21010                           
 21011                           ;stkvar	_fp @ sp[(0)+-4]
 21012  016EF0  0EFC               	movlw	-4
 21013  016EF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 21014  016EF8  0EFD               	movlw	-3
 21015  016EFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 21016  016F00  006F FF78  F03D    	movff	postinc2,btemp+8
 21017  016F06  006F FF74  F03E    	movff	postdec2,btemp+9
 21018  016F0C  503F               	movf	(btemp+10)^0,w,c
 21019  016F0E  243D               	addwf	(btemp+8)^0,w,c
 21020  016F10  6ED9               	movwf	fsr2l,c
 21021  016F12  5040               	movf	(btemp+11)^0,w,c
 21022  016F14  203E               	addwfc	(btemp+9)^0,w,c
 21023  016F16  6EDA               	movwf	fsr2h,c
 21024  016F18  0EFE               	movlw	-2
 21025  016F1A  006F FF8F FFDF     	movff	plusw1,indf2
 21026                           
 21027                           ;stkvar	_fp @ sp[(0)+-4]
 21028  016F20  0EFC               	movlw	-4
 21029  016F22  006F FF8C  F03F    	movff	plusw1,btemp+10
 21030  016F28  0EFD               	movlw	-3
 21031  016F2A  006F FF8C  F040    	movff	plusw1,btemp+11
 21032  016F30  0E02               	movlw	2
 21033  016F32  243F               	addwf	(btemp+10)^0,w,c
 21034  016F34  6ED9               	movwf	fsr2l,c
 21035  016F36  0E00               	movlw	0
 21036  016F38  2040               	addwfc	(btemp+11)^0,w,c
 21037  016F3A  6EDA               	movwf	fsr2h,c
 21038  016F3C  2ADE               	incf	postinc2,f,c
 21039  016F3E  0E00               	movlw	0
 21040  016F40  22DD               	addwfc	postdec2,f,c
 21041  016F42                     l2795:
 21042                           
 21043                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21044  016F42  52E5               	movf	postdec1,f,c
 21045  016F44  52E5               	movf	postdec1,f,c
 21046  016F46  52E5               	movf	postdec1,f,c
 21047  016F48  52E5               	movf	postdec1,f,c
 21048  016F4A  0012               	return		;funcret
 21049  016F4C                     __end_of_fputc:
 21050                           	opt callstack 0
 21051                           
 21052 ;; *************** function _putch *****************
 21053 ;; Defined at:
 21054 ;;		line 155 in file "eadog.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;  c               1  [STACK] unsigned char 
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;		None
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1  [STACK] void 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/4
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21072 ;;Total ram usage:        0 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:    7
 21075 ;; This function calls:
 21076 ;;		_ringBufS_put_dma
 21077 ;; This function is called by:
 21078 ;;		_fputc
 21079 ;; This function uses a reentrant model
 21080 ;;
 21081                           
 21082                           	psect	text70
 21083  018DA4                     __ptext70:
 21084                           	opt callstack 0
 21085  018DA4                     _putch:
 21086                           	opt callstack 13
 21087                           
 21088                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21089                           ;stkvar	_c @ sp[(0)+-1]
 21090                           
 21091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21092                           ;incstack = 0
 21093  018DA4  0EFF               	movlw	-1
 21094  018DA6  50E3               	movf	plusw1,w,c
 21095  018DA8  6EE6               	movwf	postinc1,c
 21096  018DAA  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21097  018DB0  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21098  018DB6  ECCA  F0BB         	call	_ringBufS_put_dma	;wreg free
 21099                           
 21100                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21101  018DBA  52E5               	movf	postdec1,f,c
 21102  018DBC  0012               	return		;funcret
 21103  018DBE                     __end_of_putch:
 21104                           	opt callstack 0
 21105                           
 21106 ;; *************** function _ringBufS_put_dma *****************
 21107 ;; Defined at:
 21108 ;;		line 67 in file "ringbufs.c"
 21109 ;; Parameters:    Size  Location     Type
 21110 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21111 ;;		 -> ring_buf1(67), 
 21112 ;;  c               1  [STACK] const unsigned char 
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;		None
 21115 ;; Return value:  Size  Location     Type
 21116 ;;                  1  [STACK] void 
 21117 ;; Registers used:
 21118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21119 ;; Tracked objects:
 21120 ;;		On entry : 0/4
 21121 ;;		On exit  : 0/0
 21122 ;;		Unchanged: 0/0
 21123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21128 ;;Total ram usage:        0 bytes
 21129 ;; Hardware stack levels used:    1
 21130 ;; Hardware stack levels required when called:    6
 21131 ;; This function calls:
 21132 ;;		Nothing
 21133 ;; This function is called by:
 21134 ;;		_putch
 21135 ;; This function uses a reentrant model
 21136 ;;
 21137                           
 21138                           	psect	text71
 21139  017794                     __ptext71:
 21140                           	opt callstack 0
 21141  017794                     _ringBufS_put_dma:
 21142                           	opt callstack 13
 21143                           
 21144                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21145                           ;stkvar	__this @ sp[(0)+-2]
 21146                           
 21147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21148                           ;incstack = 0
 21149  017794  0EFE               	movlw	-2
 21150  017796  006F FF8C  F03F    	movff	plusw1,btemp+10
 21151  01779C  0EFF               	movlw	-1
 21152  01779E  006F FF8C  F040    	movff	plusw1,btemp+11
 21153  0177A4  0E42               	movlw	66
 21154  0177A6  243F               	addwf	(btemp+10)^0,w,c
 21155  0177A8  6ED9               	movwf	fsr2l,c
 21156  0177AA  0E00               	movlw	0
 21157  0177AC  2040               	addwfc	(btemp+11)^0,w,c
 21158  0177AE  6EDA               	movwf	fsr2h,c
 21159  0177B0  0E40               	movlw	64
 21160  0177B2  60DF               	cpfslt	indf2,c
 21161  0177B4  D040               	goto	l1465
 21162                           
 21163                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21164                           ;stkvar	_c @ sp[(0)+-3]
 21165                           ;stkvar	__this @ sp[(0)+-2]
 21166  0177B6  0EFE               	movlw	-2
 21167  0177B8  006F FF8C  F03F    	movff	plusw1,btemp+10
 21168  0177BE  0EFF               	movlw	-1
 21169  0177C0  006F FF8C  F040    	movff	plusw1,btemp+11
 21170  0177C6  0E40               	movlw	64
 21171  0177C8  243F               	addwf	(btemp+10)^0,w,c
 21172  0177CA  6ED9               	movwf	fsr2l,c
 21173  0177CC  0E00               	movlw	0
 21174  0177CE  2040               	addwfc	(btemp+11)^0,w,c
 21175  0177D0  6EDA               	movwf	fsr2h,c
 21176  0177D2  50DF               	movf	indf2,w,c
 21177  0177D4  6E40               	movwf	(btemp+11)^0,c
 21178                           
 21179                           ;stkvar	__this @ sp[(0)+-2]
 21180  0177D6  0EFE               	movlw	-2
 21181  0177D8  006F FF8C  F03D    	movff	plusw1,btemp+8
 21182  0177DE  0EFF               	movlw	-1
 21183  0177E0  006F FF8C  F03E    	movff	plusw1,btemp+9
 21184  0177E6  5040               	movf	(btemp+11)^0,w,c
 21185  0177E8  243D               	addwf	(btemp+8)^0,w,c
 21186  0177EA  6ED9               	movwf	fsr2l,c
 21187  0177EC  0E00               	movlw	0
 21188  0177EE  203E               	addwfc	(btemp+9)^0,w,c
 21189  0177F0  6EDA               	movwf	fsr2h,c
 21190  0177F2  0EFD               	movlw	-3
 21191  0177F4  006F FF8F FFDF     	movff	plusw1,indf2
 21192                           
 21193                           ;ringbufs.c: 71:   ++_this->head;
 21194                           ;stkvar	__this @ sp[(0)+-2]
 21195  0177FA  0EFE               	movlw	-2
 21196  0177FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 21197  017802  0EFF               	movlw	-1
 21198  017804  006F FF8C  F040    	movff	plusw1,btemp+11
 21199  01780A  0E40               	movlw	64
 21200  01780C  243F               	addwf	(btemp+10)^0,w,c
 21201  01780E  6ED9               	movwf	fsr2l,c
 21202  017810  0E00               	movlw	0
 21203  017812  2040               	addwfc	(btemp+11)^0,w,c
 21204  017814  6EDA               	movwf	fsr2h,c
 21205  017816  2ADF               	incf	indf2,f,c
 21206                           
 21207                           ;ringbufs.c: 72:   ++_this->count;
 21208                           ;stkvar	__this @ sp[(0)+-2]
 21209  017818  0EFE               	movlw	-2
 21210  01781A  006F FF8C  F03F    	movff	plusw1,btemp+10
 21211  017820  0EFF               	movlw	-1
 21212  017822  006F FF8C  F040    	movff	plusw1,btemp+11
 21213  017828  0E42               	movlw	66
 21214  01782A  243F               	addwf	(btemp+10)^0,w,c
 21215  01782C  6ED9               	movwf	fsr2l,c
 21216  01782E  0E00               	movlw	0
 21217  017830  2040               	addwfc	(btemp+11)^0,w,c
 21218  017832  6EDA               	movwf	fsr2h,c
 21219  017834  2ADF               	incf	indf2,f,c
 21220  017836                     l1465:
 21221                           
 21222                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21223  017836  52E5               	movf	postdec1,f,c
 21224  017838  52E5               	movf	postdec1,f,c
 21225  01783A  52E5               	movf	postdec1,f,c
 21226  01783C  0012               	return		;funcret
 21227  01783E                     __end_of_ringBufS_put_dma:
 21228                           	opt callstack 0
 21229                           
 21230 ;; *************** function _atoi *****************
 21231 ;; Defined at:
 21232 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21233 ;; Parameters:    Size  Location     Type
 21234 ;;  s               2  [STACK] PTR const unsigned char 
 21235 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21236 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21237 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21238 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21239 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21240 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21241 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21242 ;; Auto vars:     Size  Location     Type
 21243 ;;  n               2  [STACK] int 
 21244 ;;  neg             2  [STACK] int 
 21245 ;; Return value:  Size  Location     Type
 21246 ;;                  2  [STACK] int 
 21247 ;; Registers used:
 21248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21249 ;; Tracked objects:
 21250 ;;		On entry : 0/4
 21251 ;;		On exit  : 0/0
 21252 ;;		Unchanged: 0/0
 21253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21258 ;;Total ram usage:        0 bytes
 21259 ;; Hardware stack levels used:    1
 21260 ;; Hardware stack levels required when called:    7
 21261 ;; This function calls:
 21262 ;;		_isdigit
 21263 ;;		_isspace
 21264 ;; This function is called by:
 21265 ;;		_vfpfcnvrt
 21266 ;; This function uses a reentrant model
 21267 ;;
 21268                           
 21269                           	psect	text72
 21270  0157D8                     __ptext72:
 21271                           	opt callstack 0
 21272  0157D8                     _atoi:
 21273                           	opt callstack 0
 21274                           
 21275                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21276  0157D8  0E09               	movlw	9
 21277  0157DA  26E1               	addwf	fsr1l,f,c
 21278  0157DC  0E00               	movlw	0
 21279  0157DE  22E2               	addwfc	fsr1h,f,c
 21280                           
 21281                           ;stkvar	_n @ sp[(-9)+5]
 21282                           
 21283                           ;incstack = 0
 21284  0157E0  0EFC               	movlw	-4
 21285  0157E2  6AE3               	clrf	plusw1,c
 21286  0157E4  0EFD               	movlw	-3
 21287  0157E6  6AE3               	clrf	plusw1,c
 21288                           
 21289                           ;stkvar	_neg @ sp[(-9)+7]
 21290  0157E8  0EFE               	movlw	-2
 21291  0157EA  6AE3               	clrf	plusw1,c
 21292  0157EC  0EFF               	movlw	-1
 21293  0157EE  6AE3               	clrf	plusw1,c
 21294  0157F0  D011               	goto	l7674
 21295  0157F2                     l7672:
 21296                           
 21297                           ;stkvar	_s @ sp[(-9)+-2]
 21298  0157F2  0EF5               	movlw	-11
 21299  0157F4  50E3               	movf	plusw1,w,c
 21300  0157F6  0F01               	addlw	1
 21301  0157F8  6E35               	movwf	btemp^0,c
 21302  0157FA  0EF5               	movlw	-11
 21303  0157FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 21304  015802  6A35               	clrf	btemp^0,c
 21305  015804  0EF6               	movlw	-10
 21306  015806  50E3               	movf	plusw1,w,c
 21307  015808  2035               	addwfc	btemp^0,w,c
 21308  01580A  6E35               	movwf	btemp^0,c
 21309  01580C  0EF6               	movlw	-10
 21310  01580E  0060  F0D7  FFE3   	movff	btemp,plusw1
 21311  015814                     l7674:
 21312                           
 21313                           ;stkvar	_atoi$4756 @ sp[(-9)+4]
 21314  015814  0EFB               	movlw	-5
 21315  015816  6AE3               	clrf	plusw1,c
 21316  015818  2AE3               	incf	plusw1,f,c
 21317                           
 21318                           ;stkvar	_s @ sp[(-9)+-2]
 21319  01581A  50E1               	movf	fsr1l,w,c
 21320  01581C  0FF5               	addlw	-11
 21321  01581E  6ED9               	movwf	fsr2l,c
 21322  015820  50E2               	movf	fsr1h,w,c
 21323  015822  6EDA               	movwf	fsr2h,c
 21324  015824  0EFF               	movlw	255
 21325  015826  22DA               	addwfc	fsr2h,f,c
 21326  015828  006F FF7B FFF6     	movff	postinc2,tblptrl
 21327  01582E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21328  015834                     	if	0	;tblptru may be non-zero
 21329  015834                     	endif
 21330  015834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21331  015834  0E00               	movlw	low (__mediumconst shr (0+16))
 21332  015836  6EF8               	movwf	tblptru,c
 21333  015838                     	endif
 21334  015838  0008               	tblrd		*
 21335  01583A  50F5               	movf	tablat,w,c
 21336  01583C  0A20               	xorlw	32
 21337  01583E  B4D8               	btfsc	status,2,c
 21338  015840  D023               	goto	l7682
 21339  015842  0EF7               	movlw	247
 21340  015844  6E3F               	movwf	(btemp+10)^0,c
 21341  015846  0EFF               	movlw	255
 21342  015848  6E40               	movwf	(btemp+11)^0,c
 21343                           
 21344                           ;stkvar	_s @ sp[(-9)+-2]
 21345  01584A  50E1               	movf	fsr1l,w,c
 21346  01584C  0FF5               	addlw	-11
 21347  01584E  6ED9               	movwf	fsr2l,c
 21348  015850  50E2               	movf	fsr1h,w,c
 21349  015852  6EDA               	movwf	fsr2h,c
 21350  015854  0EFF               	movlw	255
 21351  015856  22DA               	addwfc	fsr2h,f,c
 21352  015858  006F FF7B FFF6     	movff	postinc2,tblptrl
 21353  01585E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21354  015864                     	if	0	;tblptru may be non-zero
 21355  015864                     	endif
 21356  015864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21357  015864  0E00               	movlw	low (__mediumconst shr (0+16))
 21358  015866  6EF8               	movwf	tblptru,c
 21359  015868                     	endif
 21360  015868  0008               	tblrd		*
 21361  01586A  50F5               	movf	tablat,w,c
 21362  01586C  6E3D               	movwf	(btemp+8)^0,c
 21363  01586E  6A3E               	clrf	(btemp+9)^0,c
 21364  015870  503F               	movf	(btemp+10)^0,w,c
 21365  015872  263D               	addwf	(btemp+8)^0,f,c
 21366  015874  5040               	movf	(btemp+11)^0,w,c
 21367  015876  223E               	addwfc	(btemp+9)^0,f,c
 21368  015878  503E               	movf	(btemp+9)^0,w,c
 21369  01587A  E104               	bnz	u7680
 21370  01587C  0E05               	movlw	5
 21371  01587E  5C3D               	subwf	(btemp+8)^0,w,c
 21372  015880  A0D8               	btfss	status,0,c
 21373  015882  D002               	goto	l7682
 21374  015884                     u7680:
 21375                           
 21376                           ;stkvar	_atoi$4756 @ sp[(-9)+4]
 21377  015884  0EFB               	movlw	-5
 21378  015886  6AE3               	clrf	plusw1,c
 21379  015888                     l7682:
 21380                           
 21381                           ;stkvar	_atoi$4756 @ sp[(-9)+4]
 21382  015888  0EFB               	movlw	-5
 21383  01588A  50E3               	movf	plusw1,w,c
 21384  01588C  6E3F               	movwf	(btemp+10)^0,c
 21385  01588E  6A40               	clrf	(btemp+11)^0,c
 21386                           
 21387                           ;stkvar	_atoi$4755 @ sp[(-9)+2]
 21388  015890  0EF9               	movlw	-7
 21389  015892  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21390  015898  0EFA               	movlw	-6
 21391  01589A  0060  F103  FFE3   	movff	btemp+11,plusw1
 21392                           
 21393                           ;stkvar	_atoi$4755 @ sp[(-9)+2]
 21394  0158A0  0EF9               	movlw	-7
 21395  0158A2  006F FF8C  F035    	movff	plusw1,btemp
 21396  0158A8  0EFA               	movlw	-6
 21397  0158AA  50E3               	movf	plusw1,w,c
 21398  0158AC  1035               	iorwf	btemp^0,w,c
 21399  0158AE  B4D8               	btfsc	status,2,c
 21400  0158B0  D01F               	goto	l7692
 21401  0158B2  D79F               	goto	l7672
 21402  0158B4                     l7688:
 21403  0158B4  0E01               	movlw	1
 21404  0158B6  6E3F               	movwf	(btemp+10)^0,c
 21405  0158B8  0E00               	movlw	0
 21406  0158BA  6E40               	movwf	(btemp+11)^0,c
 21407                           
 21408                           ;stkvar	_neg @ sp[(-9)+7]
 21409  0158BC  0EFE               	movlw	-2
 21410  0158BE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21411  0158C4  0EFF               	movlw	-1
 21412  0158C6  0060  F103  FFE3   	movff	btemp+11,plusw1
 21413  0158CC                     l7690:
 21414                           
 21415                           ;stkvar	_s @ sp[(-9)+-2]
 21416  0158CC  0EF5               	movlw	-11
 21417  0158CE  50E3               	movf	plusw1,w,c
 21418  0158D0  0F01               	addlw	1
 21419  0158D2  6E35               	movwf	btemp^0,c
 21420  0158D4  0EF5               	movlw	-11
 21421  0158D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 21422  0158DC  6A35               	clrf	btemp^0,c
 21423  0158DE  0EF6               	movlw	-10
 21424  0158E0  50E3               	movf	plusw1,w,c
 21425  0158E2  2035               	addwfc	btemp^0,w,c
 21426  0158E4  6E35               	movwf	btemp^0,c
 21427  0158E6  0EF6               	movlw	-10
 21428  0158E8  0060  F0D7  FFE3   	movff	btemp,plusw1
 21429  0158EE  D053               	goto	l7698
 21430  0158F0                     l7692:
 21431                           
 21432                           ;stkvar	_s @ sp[(-9)+-2]
 21433  0158F0  50E1               	movf	fsr1l,w,c
 21434  0158F2  0FF5               	addlw	-11
 21435  0158F4  6ED9               	movwf	fsr2l,c
 21436  0158F6  50E2               	movf	fsr1h,w,c
 21437  0158F8  6EDA               	movwf	fsr2h,c
 21438  0158FA  0EFF               	movlw	255
 21439  0158FC  22DA               	addwfc	fsr2h,f,c
 21440  0158FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21441  015904  006F FF77 FFF7     	movff	postdec2,tblptrh
 21442  01590A                     	if	0	;tblptru may be non-zero
 21443  01590A                     	endif
 21444  01590A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21445  01590A  0E00               	movlw	low (__mediumconst shr (0+16))
 21446  01590C  6EF8               	movwf	tblptru,c
 21447  01590E                     	endif
 21448  01590E  0008               	tblrd		*
 21449  015910  50F5               	movf	tablat,w,c
 21450  015912  6E3F               	movwf	(btemp+10)^0,c
 21451  015914  6A40               	clrf	(btemp+11)^0,c
 21452                           
 21453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21454                           ; Switch size 1, requested type "simple"
 21455                           ; Number of cases is 1, Range of values is 0 to 0
 21456                           ; switch strategies available:
 21457                           ; Name         Instructions Cycles
 21458                           ; simple_byte            4     3 (average)
 21459                           ;	Chosen strategy is simple_byte
 21460  015916  5040               	movf	(btemp+11)^0,w,c
 21461  015918  0A00               	xorlw	0	; case 0
 21462  01591A  A4D8               	btfss	status,2,c
 21463  01591C  D03C               	goto	l7698
 21464                           
 21465                           ; Switch size 1, requested type "simple"
 21466                           ; Number of cases is 2, Range of values is 43 to 45
 21467                           ; switch strategies available:
 21468                           ; Name         Instructions Cycles
 21469                           ; simple_byte            7     4 (average)
 21470                           ;	Chosen strategy is simple_byte
 21471  01591E  503F               	movf	(btemp+10)^0,w,c
 21472  015920  0A2B               	xorlw	43	; case 43
 21473  015922  B4D8               	btfsc	status,2,c
 21474  015924  D7D3               	goto	l7690
 21475  015926  0A06               	xorlw	6	; case 45
 21476  015928  B4D8               	btfsc	status,2,c
 21477  01592A  D7C4               	goto	l7688
 21478  01592C  D034               	goto	l7698
 21479  01592E                     l7694:
 21480                           
 21481                           ;stkvar	_n @ sp[(-9)+5]
 21482  01592E  0EFC               	movlw	-4
 21483  015930  006F FF8C  F03F    	movff	plusw1,btemp+10
 21484  015936  0EFD               	movlw	-3
 21485  015938  006F FF8C  F040    	movff	plusw1,btemp+11
 21486  01593E  0E0A               	movlw	10
 21487  015940  023F               	mulwf	(btemp+10)^0,c
 21488  015942  006F FFCC  F03D    	movff	prodl,btemp+8
 21489  015948  006F FFD0  F03E    	movff	prodh,btemp+9
 21490  01594E  0240               	mulwf	(btemp+11)^0,c
 21491  015950  50F3               	movf	prodl,w,c
 21492  015952  263E               	addwf	(btemp+9)^0,f,c
 21493                           
 21494                           ;stkvar	_s @ sp[(-9)+-2]
 21495  015954  50E1               	movf	fsr1l,w,c
 21496  015956  0FF5               	addlw	-11
 21497  015958  6ED9               	movwf	fsr2l,c
 21498  01595A  50E2               	movf	fsr1h,w,c
 21499  01595C  6EDA               	movwf	fsr2h,c
 21500  01595E  0EFF               	movlw	255
 21501  015960  22DA               	addwfc	fsr2h,f,c
 21502  015962  006F FF7B FFF6     	movff	postinc2,tblptrl
 21503  015968  006F FF77 FFF7     	movff	postdec2,tblptrh
 21504  01596E                     	if	0	;tblptru may be non-zero
 21505  01596E                     	endif
 21506  01596E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21507  01596E  0E00               	movlw	low (__mediumconst shr (0+16))
 21508  015970  6EF8               	movwf	tblptru,c
 21509  015972                     	endif
 21510  015972  0008               	tblrd		*
 21511  015974  50F5               	movf	tablat,w,c
 21512  015976  5E3D               	subwf	(btemp+8)^0,f,c
 21513  015978  0E00               	movlw	0
 21514  01597A  5A3E               	subwfb	(btemp+9)^0,f,c
 21515  01597C  0E30               	movlw	48
 21516  01597E  263D               	addwf	(btemp+8)^0,f,c
 21517  015980  0E00               	movlw	0
 21518  015982  223E               	addwfc	(btemp+9)^0,f,c
 21519                           
 21520                           ;stkvar	_n @ sp[(-9)+5]
 21521  015984  0EFC               	movlw	-4
 21522  015986  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 21523  01598C  0EFD               	movlw	-3
 21524  01598E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 21525  015994  D79B               	goto	l7690
 21526  015996                     l7698:
 21527  015996  0ED0               	movlw	208
 21528  015998  6E3F               	movwf	(btemp+10)^0,c
 21529  01599A  0EFF               	movlw	255
 21530  01599C  6E40               	movwf	(btemp+11)^0,c
 21531                           
 21532                           ;stkvar	_s @ sp[(-9)+-2]
 21533  01599E  50E1               	movf	fsr1l,w,c
 21534  0159A0  0FF5               	addlw	-11
 21535  0159A2  6ED9               	movwf	fsr2l,c
 21536  0159A4  50E2               	movf	fsr1h,w,c
 21537  0159A6  6EDA               	movwf	fsr2h,c
 21538  0159A8  0EFF               	movlw	255
 21539  0159AA  22DA               	addwfc	fsr2h,f,c
 21540  0159AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21541  0159B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21542  0159B8                     	if	0	;tblptru may be non-zero
 21543  0159B8                     	endif
 21544  0159B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21545  0159B8  0E00               	movlw	low (__mediumconst shr (0+16))
 21546  0159BA  6EF8               	movwf	tblptru,c
 21547  0159BC                     	endif
 21548  0159BC  0008               	tblrd		*
 21549  0159BE  50F5               	movf	tablat,w,c
 21550  0159C0  6E3D               	movwf	(btemp+8)^0,c
 21551  0159C2  6A3E               	clrf	(btemp+9)^0,c
 21552  0159C4  503F               	movf	(btemp+10)^0,w,c
 21553  0159C6  263D               	addwf	(btemp+8)^0,f,c
 21554  0159C8  5040               	movf	(btemp+11)^0,w,c
 21555  0159CA  223E               	addwfc	(btemp+9)^0,f,c
 21556  0159CC  503E               	movf	(btemp+9)^0,w,c
 21557  0159CE  E106               	bnz	u7700
 21558  0159D0  0E0A               	movlw	10
 21559  0159D2  5C3D               	subwf	(btemp+8)^0,w,c
 21560  0159D4  B0D8               	btfsc	status,0,c
 21561  0159D6  D002               	goto	u7700
 21562  0159D8  0E01               	movlw	1
 21563  0159DA  D001               	goto	u7710
 21564  0159DC                     u7700:
 21565  0159DC  0E00               	movlw	0
 21566  0159DE                     u7710:
 21567  0159DE  6E3F               	movwf	(btemp+10)^0,c
 21568  0159E0  6A40               	clrf	(btemp+11)^0,c
 21569                           
 21570                           ;stkvar	_atoi$4757 @ sp[(-9)+0]
 21571  0159E2  0EF7               	movlw	-9
 21572  0159E4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21573  0159EA  0EF8               	movlw	-8
 21574  0159EC  0060  F103  FFE3   	movff	btemp+11,plusw1
 21575                           
 21576                           ;stkvar	_atoi$4757 @ sp[(-9)+0]
 21577  0159F2  0EF7               	movlw	-9
 21578  0159F4  006F FF8C  F035    	movff	plusw1,btemp
 21579  0159FA  0EF8               	movlw	-8
 21580  0159FC  50E3               	movf	plusw1,w,c
 21581  0159FE  1035               	iorwf	btemp^0,w,c
 21582  015A00  A4D8               	btfss	status,2,c
 21583  015A02  D795               	goto	l7694
 21584                           
 21585                           ;stkvar	_neg @ sp[(-9)+7]
 21586  015A04  0EFE               	movlw	-2
 21587  015A06  006F FF8C  F035    	movff	plusw1,btemp
 21588  015A0C  0EFF               	movlw	-1
 21589  015A0E  50E3               	movf	plusw1,w,c
 21590  015A10  1035               	iorwf	btemp^0,w,c
 21591  015A12  A4D8               	btfss	status,2,c
 21592  015A14  D00E               	goto	l7708
 21593                           
 21594                           ;stkvar	_n @ sp[(-9)+5]
 21595  015A16  0EFC               	movlw	-4
 21596  015A18  006F FF8C  F035    	movff	plusw1,btemp
 21597  015A1E  1E35               	comf	btemp^0,f,c
 21598  015A20  0EFD               	movlw	-3
 21599  015A22  006F FF8C  F036    	movff	plusw1,btemp+1
 21600  015A28  1E36               	comf	(btemp+1)^0,f,c
 21601  015A2A  2A35               	incf	btemp^0,f,c
 21602  015A2C  B4D8               	btfsc	status,2,c
 21603  015A2E  2A36               	incf	(btemp+1)^0,f,c
 21604  015A30  D008               	goto	l2731
 21605  015A32                     l7708:
 21606                           
 21607                           ;stkvar	_n @ sp[(-9)+5]
 21608  015A32  0EFC               	movlw	-4
 21609  015A34  006F FF8C  F035    	movff	plusw1,btemp
 21610  015A3A  0EFD               	movlw	-3
 21611  015A3C  006F FF8C  F036    	movff	plusw1,btemp+1
 21612  015A42                     l2731:
 21613                           
 21614                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21615  015A42  0EF5               	movlw	245
 21616  015A44  26E1               	addwf	fsr1l,f,c
 21617  015A46  0EFF               	movlw	255
 21618  015A48  22E2               	addwfc	fsr1h,f,c
 21619  015A4A  0012               	return		;funcret
 21620  015A4C                     __end_of_atoi:
 21621                           	opt callstack 0
 21622                           
 21623 ;; *************** function _isspace *****************
 21624 ;; Defined at:
 21625 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21626 ;; Parameters:    Size  Location     Type
 21627 ;;  c               2  [STACK] int 
 21628 ;; Auto vars:     Size  Location     Type
 21629 ;;		None
 21630 ;; Return value:  Size  Location     Type
 21631 ;;                  2  [STACK] int 
 21632 ;; Registers used:
 21633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21634 ;; Tracked objects:
 21635 ;;		On entry : 0/0
 21636 ;;		On exit  : 0/0
 21637 ;;		Unchanged: 0/0
 21638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21643 ;;Total ram usage:        0 bytes
 21644 ;; Hardware stack levels used:    1
 21645 ;; Hardware stack levels required when called:    6
 21646 ;; This function calls:
 21647 ;;		Nothing
 21648 ;; This function is called by:
 21649 ;;		_atoi
 21650 ;; This function uses a reentrant model
 21651 ;;
 21652                           
 21653                           	psect	text73
 21654  01837E                     __ptext73:
 21655                           	opt callstack 0
 21656  01837E                     _isspace:
 21657                           	opt callstack 0
 21658                           
 21659                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21660  01837E  52E6               	movf	postinc1,f,c
 21661                           
 21662                           ;stkvar	_isspace$4795 @ sp[(-1)+0]
 21663                           
 21664                           ;incstack = 0
 21665  018380  0EFF               	movlw	-1
 21666  018382  6AE3               	clrf	plusw1,c
 21667  018384  2AE3               	incf	plusw1,f,c
 21668                           
 21669                           ;stkvar	_c @ sp[(-1)+-2]
 21670  018386  0EFD               	movlw	-3
 21671  018388  006F FF8C  F035    	movff	plusw1,btemp
 21672  01838E  0E20               	movlw	32
 21673  018390  1835               	xorwf	btemp^0,w,c
 21674  018392  E104               	bnz	u6590
 21675  018394  0EFE               	movlw	-2
 21676  018396  50E3               	movf	plusw1,w,c
 21677  018398  B4D8               	btfsc	status,2,c
 21678  01839A  D012               	goto	l7118
 21679  01839C                     u6590:
 21680                           
 21681                           ;stkvar	_c @ sp[(-1)+-2]
 21682  01839C  0EFD               	movlw	-3
 21683  01839E  50E3               	movf	plusw1,w,c
 21684  0183A0  0FF7               	addlw	247
 21685  0183A2  6E3F               	movwf	(btemp+10)^0,c
 21686  0183A4  0EFE               	movlw	-2
 21687  0183A6  006F FF8C  F040    	movff	plusw1,btemp+11
 21688  0183AC  0EFF               	movlw	255
 21689  0183AE  2240               	addwfc	(btemp+11)^0,f,c
 21690  0183B0  5040               	movf	(btemp+11)^0,w,c
 21691  0183B2  E104               	bnz	u6600
 21692  0183B4  0E05               	movlw	5
 21693  0183B6  5C3F               	subwf	(btemp+10)^0,w,c
 21694  0183B8  A0D8               	btfss	status,0,c
 21695  0183BA  D002               	goto	l7118
 21696  0183BC                     u6600:
 21697                           
 21698                           ;stkvar	_isspace$4795 @ sp[(-1)+0]
 21699  0183BC  0EFF               	movlw	-1
 21700  0183BE  6AE3               	clrf	plusw1,c
 21701  0183C0                     l7118:
 21702                           
 21703                           ;stkvar	_isspace$4795 @ sp[(-1)+0]
 21704  0183C0  0EFF               	movlw	-1
 21705  0183C2  50E3               	movf	plusw1,w,c
 21706  0183C4  6E35               	movwf	btemp^0,c
 21707  0183C6  6A36               	clrf	(btemp+1)^0,c
 21708                           
 21709                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21710  0183C8  52E5               	movf	postdec1,f,c
 21711  0183CA  52E5               	movf	postdec1,f,c
 21712  0183CC  52E5               	movf	postdec1,f,c
 21713  0183CE  0012               	return		;funcret
 21714  0183D0                     __end_of_isspace:
 21715                           	opt callstack 0
 21716                           
 21717 ;; *************** function _isdigit *****************
 21718 ;; Defined at:
 21719 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  c               2  [STACK] int 
 21722 ;; Auto vars:     Size  Location     Type
 21723 ;;		None
 21724 ;; Return value:  Size  Location     Type
 21725 ;;                  2  [STACK] int 
 21726 ;; Registers used:
 21727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21728 ;; Tracked objects:
 21729 ;;		On entry : 0/0
 21730 ;;		On exit  : 0/0
 21731 ;;		Unchanged: 0/0
 21732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;Total ram usage:        0 bytes
 21738 ;; Hardware stack levels used:    1
 21739 ;; Hardware stack levels required when called:    6
 21740 ;; This function calls:
 21741 ;;		Nothing
 21742 ;; This function is called by:
 21743 ;;		_vfpfcnvrt
 21744 ;;		_atoi
 21745 ;; This function uses a reentrant model
 21746 ;;
 21747                           
 21748                           	psect	text74
 21749  01885C                     __ptext74:
 21750                           	opt callstack 0
 21751  01885C                     _isdigit:
 21752                           	opt callstack 18
 21753                           
 21754                           ;stkvar	_c @ sp[(0)+-2]
 21755                           
 21756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21757                           ;incstack = 0
 21758  01885C  0EFE               	movlw	-2
 21759  01885E  50E3               	movf	plusw1,w,c
 21760  018860  0FD0               	addlw	208
 21761  018862  6E3F               	movwf	(btemp+10)^0,c
 21762  018864  0EFF               	movlw	-1
 21763  018866  006F FF8C  F040    	movff	plusw1,btemp+11
 21764  01886C  0EFF               	movlw	255
 21765  01886E  2240               	addwfc	(btemp+11)^0,f,c
 21766  018870  5040               	movf	(btemp+11)^0,w,c
 21767  018872  E106               	bnz	u5440
 21768  018874  0E0A               	movlw	10
 21769  018876  5C3F               	subwf	(btemp+10)^0,w,c
 21770  018878  B0D8               	btfsc	status,0,c
 21771  01887A  D002               	goto	u5440
 21772  01887C  0E01               	movlw	1
 21773  01887E  D001               	goto	u5450
 21774  018880                     u5440:
 21775  018880  0E00               	movlw	0
 21776  018882                     u5450:
 21777  018882  6E35               	movwf	btemp^0,c
 21778  018884  6A36               	clrf	(btemp+1)^0,c
 21779                           
 21780                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21781  018886  52E5               	movf	postdec1,f,c
 21782  018888  52E5               	movf	postdec1,f,c
 21783  01888A  0012               	return		;funcret
 21784  01888C                     __end_of_isdigit:
 21785                           	opt callstack 0
 21786                           
 21787 ;; *************** function _set_vterm *****************
 21788 ;; Defined at:
 21789 ;;		line 104 in file "mconfig.c"
 21790 ;; Parameters:    Size  Location     Type
 21791 ;;  vterm           1  [STACK] const unsigned char 
 21792 ;; Auto vars:     Size  Location     Type
 21793 ;;		None
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  1  [STACK] unsigned char 
 21796 ;; Registers used:
 21797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 3F/4
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21807 ;;Total ram usage:        0 bytes
 21808 ;; Hardware stack levels used:    1
 21809 ;; Hardware stack levels required when called:    6
 21810 ;; This function calls:
 21811 ;;		Nothing
 21812 ;; This function is called by:
 21813 ;;		_main
 21814 ;;		_check_help
 21815 ;; This function uses a reentrant model
 21816 ;;
 21817                           
 21818                           	psect	text75
 21819  018D88                     __ptext75:
 21820                           	opt callstack 0
 21821  018D88                     _set_vterm:
 21822                           	opt callstack 24
 21823                           
 21824                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 21825                           ;stkvar	_vterm @ sp[(0)+-1]
 21826                           
 21827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21828                           ;incstack = 0
 21829  018D88  0EFF               	movlw	-1
 21830  018D8A  006F FF8C  F040    	movff	plusw1,btemp+11
 21831  018D90  0E03               	movlw	3
 21832  018D92  1640               	andwf	(btemp+11)^0,f,c
 21833  018D94  0104               	movlb	4	; () banked
 21834  018D96  51D8               	movf	(_D+216)& (0+255),w,b
 21835  018D98  1840               	xorwf	(btemp+11)^0,w,c
 21836  018D9A  0BFE               	andlw	-2
 21837  018D9C  1840               	xorwf	(btemp+11)^0,w,c
 21838  018D9E  6FD8               	movwf	(_D+216)& (0+255),b
 21839                           
 21840                           ; BSR set to: 4
 21841                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21842  018DA0  52E5               	movf	postdec1,f,c
 21843  018DA2  0012               	return		;funcret
 21844  018DA4                     __end_of_set_vterm:
 21845                           	opt callstack 0
 21846                           
 21847 ;; *************** function _set_temp_display_help *****************
 21848 ;; Defined at:
 21849 ;;		line 208 in file "mconfig.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;  new_response    1  [STACK] const enum E16501
 21852 ;; Auto vars:     Size  Location     Type
 21853 ;;		None
 21854 ;; Return value:  Size  Location     Type
 21855 ;;                  1  [STACK] enum E16501
 21856 ;; Registers used:
 21857 ;;		wreg, fsr1l, fsr1h
 21858 ;; Tracked objects:
 21859 ;;		On entry : 0/4
 21860 ;;		On exit  : 3F/1
 21861 ;;		Unchanged: 0/0
 21862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21867 ;;Total ram usage:        0 bytes
 21868 ;; Hardware stack levels used:    1
 21869 ;; Hardware stack levels required when called:    6
 21870 ;; This function calls:
 21871 ;;		Nothing
 21872 ;; This function is called by:
 21873 ;;		_check_help
 21874 ;; This function uses a reentrant model
 21875 ;;
 21876                           
 21877                           	psect	text76
 21878  018E72                     __ptext76:
 21879                           	opt callstack 0
 21880  018E72                     _set_temp_display_help:
 21881                           	opt callstack 23
 21882                           
 21883                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21884                           
 21885                           ; BSR set to: 4
 21886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21887                           ;incstack = 0
 21888  018E72  0101               	movlb	1	; () banked
 21889  018E74  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21890                           
 21891                           ; BSR set to: 1
 21892                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 21893                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21894  018E76  0EFF               	movlw	-1
 21895  018E78  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 21896                           
 21897                           ; BSR set to: 1
 21898                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21899  018E7E  52E5               	movf	postdec1,f,c
 21900  018E80  0012               	return		;funcret
 21901  018E82                     __end_of_set_temp_display_help:
 21902                           	opt callstack 0
 21903                           
 21904 ;; *************** function _set_display_info *****************
 21905 ;; Defined at:
 21906 ;;		line 197 in file "mconfig.c"
 21907 ;; Parameters:    Size  Location     Type
 21908 ;;  new_response    1  [STACK] const enum E16501
 21909 ;; Auto vars:     Size  Location     Type
 21910 ;;		None
 21911 ;; Return value:  Size  Location     Type
 21912 ;;                  1  [STACK] enum E16986
 21913 ;; Registers used:
 21914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21915 ;; Tracked objects:
 21916 ;;		On entry : 0/4
 21917 ;;		On exit  : 0/0
 21918 ;;		Unchanged: 0/0
 21919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;Total ram usage:        0 bytes
 21925 ;; Hardware stack levels used:    1
 21926 ;; Hardware stack levels required when called:    7
 21927 ;; This function calls:
 21928 ;;		_TimerDone
 21929 ;; This function is called by:
 21930 ;;		_main
 21931 ;;		_check_help
 21932 ;; This function uses a reentrant model
 21933 ;;
 21934                           
 21935                           	psect	text77
 21936  018CF4                     __ptext77:
 21937                           	opt callstack 0
 21938  018CF4                     _set_display_info:
 21939                           	opt callstack 23
 21940                           
 21941                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 21942                           
 21943                           ; BSR set to: 1
 21944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21945                           ;incstack = 0
 21946  018CF4  0E07               	movlw	7
 21947  018CF6  6EE6               	movwf	postinc1,c
 21948  018CF8  EC05  F0C6         	call	_TimerDone	;wreg free
 21949  018CFC  5035               	movf	btemp^0,w,c
 21950  018CFE  B4D8               	btfsc	status,2,c
 21951  018D00  D006               	goto	l1602
 21952                           
 21953                           ;mconfig.c: 202:   old_info = V.response.info;
 21954  018D02  0101               	movlb	1	; () banked
 21955  018D04  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21956                           
 21957                           ; BSR set to: 1
 21958                           ;mconfig.c: 203:   V.response.info = new_response_info;
 21959                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21960  018D06  0EFF               	movlw	-1
 21961  018D08  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 21962  018D0E                     l1602:
 21963                           
 21964                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21965  018D0E  52E5               	movf	postdec1,f,c
 21966  018D10  0012               	return		;funcret
 21967  018D12                     __end_of_set_display_info:
 21968                           	opt callstack 0
 21969                           
 21970 ;; *************** function _mode_lamp_dim *****************
 21971 ;; Defined at:
 21972 ;;		line 13 in file "mconfig.c"
 21973 ;; Parameters:    Size  Location     Type
 21974 ;;  level           2  [STACK] const unsigned short 
 21975 ;; Auto vars:     Size  Location     Type
 21976 ;;		None
 21977 ;; Return value:  Size  Location     Type
 21978 ;;                  1  [STACK] void 
 21979 ;; Registers used:
 21980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21981 ;; Tracked objects:
 21982 ;;		On entry : 0/1
 21983 ;;		On exit  : 0/0
 21984 ;;		Unchanged: 0/0
 21985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21990 ;;Total ram usage:        0 bytes
 21991 ;; Hardware stack levels used:    1
 21992 ;; Hardware stack levels required when called:    7
 21993 ;; This function calls:
 21994 ;;		_PWM8_LoadDutyValue
 21995 ;; This function is called by:
 21996 ;;		_main
 21997 ;;		_check_help
 21998 ;; This function uses a reentrant model
 21999 ;;
 22000                           
 22001                           	psect	text78
 22002  018DDA                     __ptext78:
 22003                           	opt callstack 0
 22004  018DDA                     _mode_lamp_dim:
 22005                           	opt callstack 23
 22006                           
 22007                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22008                           ;stkvar	_level @ sp[(0)+-2]
 22009                           
 22010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22011                           ;incstack = 0
 22012  018DDA  0EFE               	movlw	-2
 22013  018DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 22014  018DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 22015  018DE8  ECDD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22016                           
 22017                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22018  018DEC  52E5               	movf	postdec1,f,c
 22019  018DEE  52E5               	movf	postdec1,f,c
 22020  018DF0  0012               	return		;funcret
 22021  018DF2                     __end_of_mode_lamp_dim:
 22022                           	opt callstack 0
 22023                           
 22024 ;; *************** function _mode_lamp_bright *****************
 22025 ;; Defined at:
 22026 ;;		line 18 in file "mconfig.c"
 22027 ;; Parameters:    Size  Location     Type
 22028 ;;		None
 22029 ;; Auto vars:     Size  Location     Type
 22030 ;;		None
 22031 ;; Return value:  Size  Location     Type
 22032 ;;                  1  [STACK] void 
 22033 ;; Registers used:
 22034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22035 ;; Tracked objects:
 22036 ;;		On entry : 0/1
 22037 ;;		On exit  : 0/0
 22038 ;;		Unchanged: 0/0
 22039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22044 ;;Total ram usage:        0 bytes
 22045 ;; Hardware stack levels used:    1
 22046 ;; Hardware stack levels required when called:    7
 22047 ;; This function calls:
 22048 ;;		_PWM8_LoadDutyValue
 22049 ;; This function is called by:
 22050 ;;		_check_help
 22051 ;; This function uses a reentrant model
 22052 ;;
 22053                           
 22054                           	psect	text79
 22055  018E90                     __ptext79:
 22056                           	opt callstack 0
 22057  018E90                     _mode_lamp_bright:
 22058                           	opt callstack 22
 22059                           
 22060                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22061                           
 22062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22063                           ;incstack = 0
 22064  018E90  0E2C               	movlw	44
 22065  018E92  6EE6               	movwf	postinc1,c
 22066  018E94  0E01               	movlw	1
 22067  018E96  6EE6               	movwf	postinc1,c
 22068  018E98  ECDD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22069                           
 22070                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22071  018E9C  0012               	return		;funcret
 22072  018E9E                     __end_of_mode_lamp_bright:
 22073                           	opt callstack 0
 22074                           
 22075 ;; *************** function _PWM8_LoadDutyValue *****************
 22076 ;; Defined at:
 22077 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  dutyValue       2  [STACK] unsigned short 
 22080 ;; Auto vars:     Size  Location     Type
 22081 ;;		None
 22082 ;; Return value:  Size  Location     Type
 22083 ;;                  1  [STACK] void 
 22084 ;; Registers used:
 22085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22086 ;; Tracked objects:
 22087 ;;		On entry : 0/1
 22088 ;;		On exit  : 0/0
 22089 ;;		Unchanged: 0/0
 22090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22095 ;;Total ram usage:        0 bytes
 22096 ;; Hardware stack levels used:    1
 22097 ;; Hardware stack levels required when called:    6
 22098 ;; This function calls:
 22099 ;;		Nothing
 22100 ;; This function is called by:
 22101 ;;		_mode_lamp_dim
 22102 ;;		_mode_lamp_bright
 22103 ;; This function uses a reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text80
 22107  0185BA                     __ptext80:
 22108                           	opt callstack 0
 22109  0185BA                     _PWM8_LoadDutyValue:
 22110                           	opt callstack 23
 22111                           
 22112                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22113                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22114                           
 22115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22116                           ;incstack = 0
 22117  0185BA  0EFE               	movlw	-2
 22118  0185BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 22119  0185C2  0EFF               	movlw	-1
 22120  0185C4  006F FF8C  F040    	movff	plusw1,btemp+11
 22121  0185CA  90D8               	bcf	status,0,c
 22122  0185CC  3240               	rrcf	(btemp+11)^0,f,c
 22123  0185CE  323F               	rrcf	(btemp+10)^0,f,c
 22124  0185D0  90D8               	bcf	status,0,c
 22125  0185D2  3240               	rrcf	(btemp+11)^0,f,c
 22126  0185D4  323F               	rrcf	(btemp+10)^0,f,c
 22127  0185D6  503F               	movf	(btemp+10)^0,w,c
 22128  0185D8  6E61               	movwf	97,c	;volatile
 22129                           
 22130                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22131                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22132  0185DA  0EFE               	movlw	-2
 22133  0185DC  006F FF8C  F040    	movff	plusw1,btemp+11
 22134  0185E2  0E03               	movlw	3
 22135  0185E4  1640               	andwf	(btemp+11)^0,f,c
 22136  0185E6  0E06               	movlw	6
 22137  0185E8  6E35               	movwf	btemp^0,c
 22138  0185EA                     u8245:
 22139  0185EA  90D8               	bcf	status,0,c
 22140  0185EC  3640               	rlcf	(btemp+11)^0,f,c
 22141  0185EE  2E35               	decfsz	btemp^0,f,c
 22142  0185F0  D7FC               	goto	u8245
 22143  0185F2  5040               	movf	(btemp+11)^0,w,c
 22144  0185F4  6E60               	movwf	96,c	;volatile
 22145                           
 22146                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22147  0185F6  52E5               	movf	postdec1,f,c
 22148  0185F8  52E5               	movf	postdec1,f,c
 22149  0185FA  0012               	return		;funcret
 22150  0185FC                     __end_of_PWM8_LoadDutyValue:
 22151                           	opt callstack 0
 22152                           
 22153 ;; *************** function _help_button *****************
 22154 ;; Defined at:
 22155 ;;		line 26 in file "mconfig.c"
 22156 ;; Parameters:    Size  Location     Type
 22157 ;;		None
 22158 ;; Auto vars:     Size  Location     Type
 22159 ;;		None
 22160 ;; Return value:  Size  Location     Type
 22161 ;;                  1  [STACK] _Bool 
 22162 ;; Registers used:
 22163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22164 ;; Tracked objects:
 22165 ;;		On entry : 0/1
 22166 ;;		On exit  : 0/0
 22167 ;;		Unchanged: 0/0
 22168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;Total ram usage:        0 bytes
 22174 ;; Hardware stack levels used:    1
 22175 ;; Hardware stack levels required when called:    7
 22176 ;; This function calls:
 22177 ;;		_StartTimer
 22178 ;;		_TimerDone
 22179 ;; This function is called by:
 22180 ;;		_check_help
 22181 ;; This function uses a reentrant model
 22182 ;;
 22183                           
 22184                           	psect	text81
 22185  0186B8                     __ptext81:
 22186                           	opt callstack 0
 22187  0186B8                     _help_button:
 22188                           	opt callstack 22
 22189                           
 22190                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22191                           
 22192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22193                           ;incstack = 0
 22194  0186B8  B0CB               	btfsc	203,0,c	;volatile
 22195  0186BA  D00C               	goto	l1545
 22196                           
 22197                           ;mconfig.c: 29:   V.help = 1;
 22198  0186BC  0101               	movlb	1	; () banked
 22199  0186BE  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22200                           
 22201                           ; BSR set to: 1
 22202                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22203  0186C0  0E08               	movlw	8
 22204  0186C2  6EE6               	movwf	postinc1,c
 22205  0186C4  EC05  F0C6         	call	_TimerDone	;wreg free
 22206  0186C8  5035               	movf	btemp^0,w,c
 22207  0186CA  B4D8               	btfsc	status,2,c
 22208  0186CC  D003               	goto	l1545
 22209                           
 22210                           ;mconfig.c: 31:    return 1;
 22211  0186CE  0E01               	movlw	1
 22212  0186D0  6E35               	movwf	btemp^0,c
 22213  0186D2  0012               	return	
 22214  0186D4                     l1545:
 22215                           
 22216                           ;mconfig.c: 34:  if (!V.help)
 22217  0186D4  0101               	movlb	1	; () banked
 22218  0186D6  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22219  0186D8  D008               	goto	l8646
 22220                           
 22221                           ; BSR set to: 1
 22222                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22223  0186DA  0E2C               	movlw	44
 22224  0186DC  6EE6               	movwf	postinc1,c
 22225  0186DE  0E01               	movlw	1
 22226  0186E0  6EE6               	movwf	postinc1,c
 22227  0186E2  0E08               	movlw	8
 22228  0186E4  6EE6               	movwf	postinc1,c
 22229  0186E6  EC3E  F0C3         	call	_StartTimer	;wreg free
 22230  0186EA                     l8646:
 22231                           
 22232                           ;mconfig.c: 37:  return 0;
 22233  0186EA  0E00               	movlw	0
 22234  0186EC  6E35               	movwf	btemp^0,c
 22235                           
 22236                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22237  0186EE  0012               	return		;funcret
 22238  0186F0                     __end_of_help_button:
 22239                           	opt callstack 0
 22240                           
 22241 ;; *************** function _TimerDone *****************
 22242 ;; Defined at:
 22243 ;;		line 20 in file "timers.c"
 22244 ;; Parameters:    Size  Location     Type
 22245 ;;  timer           1  [STACK] const unsigned char 
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;		None
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1  [STACK] _Bool 
 22250 ;; Registers used:
 22251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/4
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22261 ;;Total ram usage:        0 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:    6
 22264 ;; This function calls:
 22265 ;;		Nothing
 22266 ;; This function is called by:
 22267 ;;		_main
 22268 ;;		_WaitMs
 22269 ;;		_help_button
 22270 ;;		_check_help
 22271 ;;		_set_display_info
 22272 ;; This function uses a reentrant model
 22273 ;;
 22274                           
 22275                           	psect	text82
 22276  018C0A                     __ptext82:
 22277                           	opt callstack 0
 22278  018C0A                     _TimerDone:
 22279                           	opt callstack 23
 22280                           
 22281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22282                           ;incstack = 0
 22283  018C0A  0004               	clrwdt		;# 
 22284                           
 22285                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22286                           ;stkvar	_timer @ sp[(0)+-1]
 22287  018C0C  0EFF               	movlw	-1
 22288  018C0E  50E3               	movf	plusw1,w,c
 22289  018C10  0D02               	mullw	2
 22290  018C12  50F3               	movf	243,w,c
 22291  018C14  0F60               	addlw	low _tickCount
 22292  018C16  6ED9               	movwf	fsr2l,c
 22293  018C18  6ADA               	clrf	fsr2h,c
 22294  018C1A  50DE               	movf	postinc2,w,c
 22295  018C1C  10DE               	iorwf	postinc2,w,c
 22296  018C1E  A4D8               	btfss	status,2,c
 22297  018C20  D002               	goto	l8040
 22298                           
 22299                           ;timers.c: 24:   return 1;
 22300  018C22  0E01               	movlw	1
 22301  018C24  D001               	goto	L22
 22302  018C26                     l8040:
 22303                           
 22304                           ;timers.c: 26:  return 0;
 22305  018C26  0E00               	movlw	0
 22306  018C28                     L22:
 22307  018C28  6E35               	movwf	btemp^0,c
 22308                           
 22309                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22310  018C2A  52E5               	movf	postdec1,f,c
 22311  018C2C  0012               	return		;funcret
 22312  018C2E                     __end_of_TimerDone:
 22313                           	opt callstack 0
 22314                           
 22315 ;; *************** function _StartTimer *****************
 22316 ;; Defined at:
 22317 ;;		line 12 in file "timers.c"
 22318 ;; Parameters:    Size  Location     Type
 22319 ;;  timer           1  [STACK] const unsigned char 
 22320 ;;  count           2  [STACK] const unsigned short 
 22321 ;; Auto vars:     Size  Location     Type
 22322 ;;		None
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  1  [STACK] void 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/4
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22336 ;;Total ram usage:        0 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; Hardware stack levels required when called:    6
 22339 ;; This function calls:
 22340 ;;		Nothing
 22341 ;; This function is called by:
 22342 ;;		_main
 22343 ;;		_WaitMs
 22344 ;;		_help_button
 22345 ;;		_check_help
 22346 ;; This function uses a reentrant model
 22347 ;;
 22348                           
 22349                           	psect	text83
 22350  01867C                     __ptext83:
 22351                           	opt callstack 0
 22352  01867C                     _StartTimer:
 22353                           	opt callstack 21
 22354                           
 22355                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22356                           ;stkvar	_count @ sp[(0)+-3]
 22357                           
 22358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22359                           ;incstack = 0
 22360  01867C  0EFD               	movlw	-3
 22361  01867E  006F FF8C  F03F    	movff	plusw1,btemp+10
 22362  018684  0EFE               	movlw	-2
 22363  018686  006F FF8C  F040    	movff	plusw1,btemp+11
 22364  01868C  90D8               	bcf	status,0,c
 22365  01868E  343F               	rlcf	(btemp+10)^0,w,c
 22366  018690  6E3D               	movwf	(btemp+8)^0,c
 22367  018692  3440               	rlcf	(btemp+11)^0,w,c
 22368  018694  6E3E               	movwf	(btemp+9)^0,c
 22369                           
 22370                           ;stkvar	_timer @ sp[(0)+-1]
 22371  018696  0EFF               	movlw	-1
 22372  018698  50E3               	movf	plusw1,w,c
 22373  01869A  0D02               	mullw	2
 22374  01869C  50F3               	movf	243,w,c
 22375  01869E  0F60               	addlw	low _tickCount
 22376  0186A0  6ED9               	movwf	fsr2l,c
 22377  0186A2  6ADA               	clrf	fsr2h,c
 22378  0186A4  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 22379  0186AA  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 22380                           
 22381                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22382  0186B0  52E5               	movf	postdec1,f,c
 22383  0186B2  52E5               	movf	postdec1,f,c
 22384  0186B4  52E5               	movf	postdec1,f,c
 22385  0186B6  0012               	return		;funcret
 22386  0186B8                     __end_of_StartTimer:
 22387                           	opt callstack 0
 22388                           
 22389 ;; *************** function _display_info *****************
 22390 ;; Defined at:
 22391 ;;		line 187 in file "mconfig.c"
 22392 ;; Parameters:    Size  Location     Type
 22393 ;;		None
 22394 ;; Auto vars:     Size  Location     Type
 22395 ;;		None
 22396 ;; Return value:  Size  Location     Type
 22397 ;;                  1  [STACK] enum E16501
 22398 ;; Registers used:
 22399 ;;		btemp
 22400 ;; Tracked objects:
 22401 ;;		On entry : 0/1
 22402 ;;		On exit  : 0/0
 22403 ;;		Unchanged: 0/0
 22404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22409 ;;Total ram usage:        0 bytes
 22410 ;; Hardware stack levels used:    1
 22411 ;; Hardware stack levels required when called:    6
 22412 ;; This function calls:
 22413 ;;		Nothing
 22414 ;; This function is called by:
 22415 ;;		_check_help
 22416 ;; This function uses a reentrant model
 22417 ;;
 22418                           
 22419                           	psect	text84
 22420  018F02                     __ptext84:
 22421                           	opt callstack 0
 22422  018F02                     _display_info:
 22423                           	opt callstack 23
 22424                           
 22425                           ;mconfig.c: 189:  return V.response.info;
 22426                           
 22427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22428                           ;incstack = 0
 22429  018F02  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 22430                           
 22431                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22432  018F08  0012               	return		;funcret
 22433  018F0A                     __end_of_display_info:
 22434                           	opt callstack 0
 22435                           
 22436 ;; *************** function _display_help *****************
 22437 ;; Defined at:
 22438 ;;		line 192 in file "mconfig.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;		None
 22441 ;; Auto vars:     Size  Location     Type
 22442 ;;		None
 22443 ;; Return value:  Size  Location     Type
 22444 ;;                  1  [STACK] enum E16501
 22445 ;; Registers used:
 22446 ;;		btemp
 22447 ;; Tracked objects:
 22448 ;;		On entry : 3F/1
 22449 ;;		On exit  : 0/0
 22450 ;;		Unchanged: 0/0
 22451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;Total ram usage:        0 bytes
 22457 ;; Hardware stack levels used:    1
 22458 ;; Hardware stack levels required when called:    6
 22459 ;; This function calls:
 22460 ;;		Nothing
 22461 ;; This function is called by:
 22462 ;;		_check_help
 22463 ;; This function uses a reentrant model
 22464 ;;
 22465                           
 22466                           	psect	text85
 22467  018F0A                     __ptext85:
 22468                           	opt callstack 0
 22469  018F0A                     _display_help:
 22470                           	opt callstack 23
 22471                           
 22472                           ;mconfig.c: 194:  return V.response.help_temp;
 22473                           
 22474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22475                           ;incstack = 0
 22476  018F0A  0060  F690  F035   	movff	_V+164,btemp	;volatile
 22477                           
 22478                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22479  018F10  0012               	return		;funcret
 22480  018F12                     __end_of_display_help:
 22481                           	opt callstack 0
 22482                           
 22483 ;; *************** function _check_adc_scan *****************
 22484 ;; Defined at:
 22485 ;;		line 56 in file "daq.c"
 22486 ;; Parameters:    Size  Location     Type
 22487 ;;		None
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;		None
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1  [STACK] _Bool 
 22492 ;; Registers used:
 22493 ;;		btemp
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/4
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:    6
 22506 ;; This function calls:
 22507 ;;		Nothing
 22508 ;; This function is called by:
 22509 ;;		_main
 22510 ;; This function uses a reentrant model
 22511 ;;
 22512                           
 22513                           	psect	text86
 22514  018F12                     __ptext86:
 22515                           	opt callstack 0
 22516  018F12                     _check_adc_scan:
 22517                           	opt callstack 24
 22518                           
 22519                           ;daq.c: 58:  return R.done;
 22520                           
 22521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22522                           ;incstack = 0
 22523  018F12  0060  F328  F035   	movff	_R+39,btemp	;volatile
 22524                           
 22525                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22526  018F18  0012               	return		;funcret
 22527  018F1A                     __end_of_check_adc_scan:
 22528                           	opt callstack 0
 22529                           
 22530 ;; *************** function _SYSTEM_Initialize *****************
 22531 ;; Defined at:
 22532 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22533 ;; Parameters:    Size  Location     Type
 22534 ;;		None
 22535 ;; Auto vars:     Size  Location     Type
 22536 ;;		None
 22537 ;; Return value:  Size  Location     Type
 22538 ;;                  1  [STACK] void 
 22539 ;; Registers used:
 22540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22541 ;; Tracked objects:
 22542 ;;		On entry : 0/0
 22543 ;;		On exit  : 3F/3C
 22544 ;;		Unchanged: 0/0
 22545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22550 ;;Total ram usage:        0 bytes
 22551 ;; Hardware stack levels used:    1
 22552 ;; Hardware stack levels required when called:    8
 22553 ;; This function calls:
 22554 ;;		_ADCC_Initialize
 22555 ;;		_CLKREF_Initialize
 22556 ;;		_DMA1_Initialize
 22557 ;;		_DMA2_Initialize
 22558 ;;		_EXT_INT_Initialize
 22559 ;;		_FVR_Initialize
 22560 ;;		_INTERRUPT_Initialize
 22561 ;;		_OSCILLATOR_Initialize
 22562 ;;		_PIN_MANAGER_Initialize
 22563 ;;		_PMD_Initialize
 22564 ;;		_PWM8_Initialize
 22565 ;;		_SPI1_Initialize
 22566 ;;		_TMR2_Initialize
 22567 ;;		_TMR5_Initialize
 22568 ;;		_TMR6_Initialize
 22569 ;;		_UART1_Initialize
 22570 ;;		_UART2_Initialize
 22571 ;; This function is called by:
 22572 ;;		_main
 22573 ;; This function uses a reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text87
 22577  0184A4                     __ptext87:
 22578                           	opt callstack 0
 22579  0184A4                     _SYSTEM_Initialize:
 22580                           	opt callstack 22
 22581                           
 22582                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22583                           
 22584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22585                           ;incstack = 0
 22586  0184A4  EC18  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 22587                           
 22588                           ; BSR set to: 57
 22589                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22590  0184A8  EC26  F0C7         	call	_PMD_Initialize	;wreg free
 22591                           
 22592                           ; BSR set to: 57
 22593                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22594  0184AC  ECF9  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22595                           
 22596                           ; BSR set to: 58
 22597                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22598  0184B0  EC1B  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 22599                           
 22600                           ; BSR set to: 57
 22601                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22602  0184B4  EC8D  F0C7         	call	_FVR_Initialize	;wreg free
 22603                           
 22604                           ; BSR set to: 62
 22605                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22606  0184B8  EC7B  F0BF         	call	_ADCC_Initialize	;wreg free
 22607                           
 22608                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 22609  0184BC  EC10  F0C7         	call	_PWM8_Initialize	;wreg free
 22610                           
 22611                           ; BSR set to: 63
 22612                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 22613  0184C0  ECF9  F0C6         	call	_TMR2_Initialize	;wreg free
 22614                           
 22615                           ; BSR set to: 57
 22616                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22617  0184C4  ECE4  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22618                           
 22619                           ; BSR set to: 57
 22620                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22621  0184C8  EC89  F0C4         	call	_TMR6_Initialize	;wreg free
 22622                           
 22623                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22624  0184CC  EC75  F0C2         	call	_TMR5_Initialize	;wreg free
 22625                           
 22626                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22627  0184D0  EC4B  F0C0         	call	_UART1_Initialize	;wreg free
 22628                           
 22629                           ; BSR set to: 57
 22630                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22631  0184D4  ECDF  F0C0         	call	_UART2_Initialize	;wreg free
 22632                           
 22633                           ; BSR set to: 57
 22634                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22635  0184D8  EC05  F0C7         	call	_SPI1_Initialize	;wreg free
 22636                           
 22637                           ; BSR set to: 61
 22638                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22639  0184DC  EC69  F0C1         	call	_DMA2_Initialize	;wreg free
 22640                           
 22641                           ; BSR set to: 59
 22642                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22643  0184E0  EC46  F0BF         	call	_DMA1_Initialize	;wreg free
 22644                           
 22645                           ; BSR set to: 59
 22646                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22647  0184E4  EC67  F0C7         	call	_CLKREF_Initialize	;wreg free
 22648                           
 22649                           ; BSR set to: 60
 22650                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22651  0184E8  0012               	return		;funcret
 22652  0184EA                     __end_of_SYSTEM_Initialize:
 22653                           	opt callstack 0
 22654                           
 22655 ;; *************** function _UART2_Initialize *****************
 22656 ;; Defined at:
 22657 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22658 ;; Parameters:    Size  Location     Type
 22659 ;;		None
 22660 ;; Auto vars:     Size  Location     Type
 22661 ;;		None
 22662 ;; Return value:  Size  Location     Type
 22663 ;;                  1  [STACK] void 
 22664 ;; Registers used:
 22665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22666 ;; Tracked objects:
 22667 ;;		On entry : 3F/39
 22668 ;;		On exit  : 3F/39
 22669 ;;		Unchanged: 0/0
 22670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22675 ;;Total ram usage:        0 bytes
 22676 ;; Hardware stack levels used:    1
 22677 ;; Hardware stack levels required when called:    7
 22678 ;; This function calls:
 22679 ;;		_UART2_SetRxInterruptHandler
 22680 ;;		_UART2_SetTxInterruptHandler
 22681 ;; This function is called by:
 22682 ;;		_SYSTEM_Initialize
 22683 ;; This function uses a reentrant model
 22684 ;;
 22685                           
 22686                           	psect	text88
 22687  0181BE                     __ptext88:
 22688                           	opt callstack 0
 22689  0181BE                     _UART2_Initialize:
 22690                           	opt callstack 22
 22691                           
 22692                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22693                           
 22694                           ; BSR set to: 60
 22695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22696                           ;incstack = 0
 22697  0181BE  0139               	movlb	57	; () banked
 22698  0181C0  9596               	bcf	150,2,b	;volatile
 22699                           
 22700                           ; BSR set to: 57
 22701                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22702  0181C2  0E4E               	movlw	low _UART2_Receive_ISR
 22703  0181C4  6EE6               	movwf	postinc1,c
 22704  0181C6  0E8D               	movlw	high _UART2_Receive_ISR
 22705  0181C8  6EE6               	movwf	postinc1,c
 22706  0181CA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22707  0181CC  6EE6               	movwf	postinc1,c
 22708  0181CE  ECEE  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22709                           
 22710                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22711  0181D2  0139               	movlb	57	; () banked
 22712  0181D4  9796               	bcf	150,3,b	;volatile
 22713                           
 22714                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22715  0181D6  0EE6               	movlw	low _UART2_Transmit_ISR
 22716  0181D8  6EE6               	movwf	postinc1,c
 22717  0181DA  0E88               	movlw	high _UART2_Transmit_ISR
 22718  0181DC  6EE6               	movwf	postinc1,c
 22719  0181DE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22720  0181E0  6EE6               	movwf	postinc1,c
 22721  0181E2  ECDA  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22722                           
 22723                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22724  0181E6  013D               	movlb	61	; () banked
 22725  0181E8  6BD4               	clrf	212,b	;volatile
 22726                           
 22727                           ; BSR set to: 61
 22728                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22729  0181EA  6BD6               	clrf	214,b	;volatile
 22730                           
 22731                           ; BSR set to: 61
 22732                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22733  0181EC  6BD8               	clrf	216,b	;volatile
 22734                           
 22735                           ; BSR set to: 61
 22736                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22737  0181EE  0EB0               	movlw	176
 22738  0181F0  6FDA               	movwf	218,b	;volatile
 22739                           
 22740                           ; BSR set to: 61
 22741                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22742  0181F2  0E80               	movlw	128
 22743  0181F4  6FDB               	movwf	219,b	;volatile
 22744                           
 22745                           ; BSR set to: 61
 22746                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22747  0181F6  6BDC               	clrf	220,b	;volatile
 22748                           
 22749                           ; BSR set to: 61
 22750                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22751  0181F8  0E82               	movlw	130
 22752  0181FA  6FDD               	movwf	221,b	;volatile
 22753                           
 22754                           ; BSR set to: 61
 22755                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22756  0181FC  0E06               	movlw	6
 22757  0181FE  6FDE               	movwf	222,b	;volatile
 22758                           
 22759                           ; BSR set to: 61
 22760                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22761  018200  6BDF               	clrf	223,b	;volatile
 22762                           
 22763                           ; BSR set to: 61
 22764                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22765  018202  6BE0               	clrf	224,b	;volatile
 22766                           
 22767                           ; BSR set to: 61
 22768                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22769  018204  6BE1               	clrf	225,b	;volatile
 22770                           
 22771                           ; BSR set to: 61
 22772                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22773  018206  6BE2               	clrf	226,b	;volatile
 22774                           
 22775                           ; BSR set to: 61
 22776                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22777  018208  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 22778                           
 22779                           ; BSR set to: 61
 22780                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22781  01820A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 22782                           
 22783                           ; BSR set to: 61
 22784                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22785  01820C  0E40               	movlw	64
 22786  01820E  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22787                           
 22788                           ; BSR set to: 61
 22789                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22790  018210  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 22791                           
 22792                           ; BSR set to: 61
 22793                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22794  018212  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 22795                           
 22796                           ; BSR set to: 61
 22797                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22798  018214  6A29               	clrf	_uart2RxCount^0,c	;volatile
 22799                           
 22800                           ; BSR set to: 61
 22801                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22802  018216  0139               	movlb	57	; () banked
 22803  018218  8596               	bsf	150,2,b	;volatile
 22804                           
 22805                           ; BSR set to: 57
 22806                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22807  01821A  0012               	return		;funcret
 22808  01821C                     __end_of_UART2_Initialize:
 22809                           	opt callstack 0
 22810                           
 22811 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22812 ;; Defined at:
 22813 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22814 ;; Parameters:    Size  Location     Type
 22815 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22816 ;;		 -> UART2_Transmit_ISR(1), 
 22817 ;; Auto vars:     Size  Location     Type
 22818 ;;		None
 22819 ;; Return value:  Size  Location     Type
 22820 ;;                  1  [STACK] void 
 22821 ;; Registers used:
 22822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22823 ;; Tracked objects:
 22824 ;;		On entry : 3F/39
 22825 ;;		On exit  : 0/0
 22826 ;;		Unchanged: 0/0
 22827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22832 ;;Total ram usage:        0 bytes
 22833 ;; Hardware stack levels used:    1
 22834 ;; Hardware stack levels required when called:    6
 22835 ;; This function calls:
 22836 ;;		Nothing
 22837 ;; This function is called by:
 22838 ;;		_UART2_Initialize
 22839 ;; This function uses a reentrant model
 22840 ;;
 22841                           
 22842                           	psect	text89
 22843  0189B4                     __ptext89:
 22844                           	opt callstack 0
 22845  0189B4                     _UART2_SetTxInterruptHandler:
 22846                           	opt callstack 22
 22847                           
 22848                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22849                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22850                           
 22851                           ; BSR set to: 57
 22852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22853                           ;incstack = 0
 22854  0189B4  50E1               	movf	fsr1l,w,c
 22855  0189B6  0FFD               	addlw	-3
 22856  0189B8  6ED9               	movwf	fsr2l,c
 22857  0189BA  50E2               	movf	fsr1h,w,c
 22858  0189BC  6EDA               	movwf	fsr2h,c
 22859  0189BE  0EFF               	movlw	255
 22860  0189C0  22DA               	addwfc	fsr2h,f,c
 22861  0189C2  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 22862  0189C8  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 22863  0189CE  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 22864                           
 22865                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22866  0189D4  52E5               	movf	postdec1,f,c
 22867  0189D6  52E5               	movf	postdec1,f,c
 22868  0189D8  52E5               	movf	postdec1,f,c
 22869  0189DA  0012               	return		;funcret
 22870  0189DC                     __end_of_UART2_SetTxInterruptHandler:
 22871                           	opt callstack 0
 22872                           
 22873 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22874 ;; Defined at:
 22875 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22876 ;; Parameters:    Size  Location     Type
 22877 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22878 ;;		 -> UART2_Receive_ISR(1), 
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;		None
 22881 ;; Return value:  Size  Location     Type
 22882 ;;                  1  [STACK] void 
 22883 ;; Registers used:
 22884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22885 ;; Tracked objects:
 22886 ;;		On entry : 3F/39
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;Total ram usage:        0 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:    6
 22897 ;; This function calls:
 22898 ;;		Nothing
 22899 ;; This function is called by:
 22900 ;;		_UART2_Initialize
 22901 ;; This function uses a reentrant model
 22902 ;;
 22903                           
 22904                           	psect	text90
 22905  0189DC                     __ptext90:
 22906                           	opt callstack 0
 22907  0189DC                     _UART2_SetRxInterruptHandler:
 22908                           	opt callstack 22
 22909                           
 22910                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22911                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22912                           
 22913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22914                           ;incstack = 0
 22915  0189DC  50E1               	movf	fsr1l,w,c
 22916  0189DE  0FFD               	addlw	-3
 22917  0189E0  6ED9               	movwf	fsr2l,c
 22918  0189E2  50E2               	movf	fsr1h,w,c
 22919  0189E4  6EDA               	movwf	fsr2h,c
 22920  0189E6  0EFF               	movlw	255
 22921  0189E8  22DA               	addwfc	fsr2h,f,c
 22922  0189EA  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 22923  0189F0  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 22924  0189F6  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 22925                           
 22926                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22927  0189FC  52E5               	movf	postdec1,f,c
 22928  0189FE  52E5               	movf	postdec1,f,c
 22929  018A00  52E5               	movf	postdec1,f,c
 22930  018A02  0012               	return		;funcret
 22931  018A04                     __end_of_UART2_SetRxInterruptHandler:
 22932                           	opt callstack 0
 22933                           
 22934 ;; *************** function _UART1_Initialize *****************
 22935 ;; Defined at:
 22936 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22937 ;; Parameters:    Size  Location     Type
 22938 ;;		None
 22939 ;; Auto vars:     Size  Location     Type
 22940 ;;		None
 22941 ;; Return value:  Size  Location     Type
 22942 ;;                  1  [STACK] void 
 22943 ;; Registers used:
 22944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22945 ;; Tracked objects:
 22946 ;;		On entry : 0/39
 22947 ;;		On exit  : 3F/39
 22948 ;;		Unchanged: 0/0
 22949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22954 ;;Total ram usage:        0 bytes
 22955 ;; Hardware stack levels used:    1
 22956 ;; Hardware stack levels required when called:    7
 22957 ;; This function calls:
 22958 ;;		_UART1_SetRxInterruptHandler
 22959 ;;		_UART1_SetTxInterruptHandler
 22960 ;; This function is called by:
 22961 ;;		_SYSTEM_Initialize
 22962 ;; This function uses a reentrant model
 22963 ;;
 22964                           
 22965                           	psect	text91
 22966  018096                     __ptext91:
 22967                           	opt callstack 0
 22968  018096                     _UART1_Initialize:
 22969                           	opt callstack 22
 22970                           
 22971                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22972                           
 22973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22974                           ;incstack = 0
 22975  018096  0139               	movlb	57	; () banked
 22976  018098  9793               	bcf	147,3,b	;volatile
 22977                           
 22978                           ; BSR set to: 57
 22979                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22980  01809A  0E30               	movlw	low _UART1_Receive_ISR
 22981  01809C  6EE6               	movwf	postinc1,c
 22982  01809E  0E8D               	movlw	high _UART1_Receive_ISR
 22983  0180A0  6EE6               	movwf	postinc1,c
 22984  0180A2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22985  0180A4  6EE6               	movwf	postinc1,c
 22986  0180A6  EC16  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 22987                           
 22988                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22989  0180AA  0139               	movlb	57	; () banked
 22990  0180AC  9993               	bcf	147,4,b	;volatile
 22991                           
 22992                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22993  0180AE  0EBA               	movlw	low _UART1_Transmit_ISR
 22994  0180B0  6EE6               	movwf	postinc1,c
 22995  0180B2  0E88               	movlw	high _UART1_Transmit_ISR
 22996  0180B4  6EE6               	movwf	postinc1,c
 22997  0180B6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22998  0180B8  6EE6               	movwf	postinc1,c
 22999  0180BA  EC02  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23000                           
 23001                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23002  0180BE  013D               	movlb	61	; () banked
 23003  0180C0  6BEC               	clrf	236,b	;volatile
 23004                           
 23005                           ; BSR set to: 61
 23006                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23007  0180C2  6BED               	clrf	237,b	;volatile
 23008                           
 23009                           ; BSR set to: 61
 23010                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23011  0180C4  6BEE               	clrf	238,b	;volatile
 23012                           
 23013                           ; BSR set to: 61
 23014                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23015  0180C6  6BEF               	clrf	239,b	;volatile
 23016                           
 23017                           ; BSR set to: 61
 23018                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23019  0180C8  6BF0               	clrf	240,b	;volatile
 23020                           
 23021                           ; BSR set to: 61
 23022                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23023  0180CA  6BF1               	clrf	241,b	;volatile
 23024                           
 23025                           ; BSR set to: 61
 23026                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23027  0180CC  0EB0               	movlw	176
 23028  0180CE  6FF2               	movwf	242,b	;volatile
 23029                           
 23030                           ; BSR set to: 61
 23031                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23032  0180D0  0E80               	movlw	128
 23033  0180D2  6FF3               	movwf	243,b	;volatile
 23034                           
 23035                           ; BSR set to: 61
 23036                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23037  0180D4  6BF4               	clrf	244,b	;volatile
 23038                           
 23039                           ; BSR set to: 61
 23040                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23041  0180D6  0E82               	movlw	130
 23042  0180D8  6FF5               	movwf	245,b	;volatile
 23043                           
 23044                           ; BSR set to: 61
 23045                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23046  0180DA  0E06               	movlw	6
 23047  0180DC  6FF6               	movwf	246,b	;volatile
 23048                           
 23049                           ; BSR set to: 61
 23050                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23051  0180DE  6BF7               	clrf	247,b	;volatile
 23052                           
 23053                           ; BSR set to: 61
 23054                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23055  0180E0  6BF8               	clrf	248,b	;volatile
 23056                           
 23057                           ; BSR set to: 61
 23058                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23059  0180E2  6BF9               	clrf	249,b	;volatile
 23060                           
 23061                           ; BSR set to: 61
 23062                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23063  0180E4  6BFA               	clrf	250,b	;volatile
 23064                           
 23065                           ; BSR set to: 61
 23066                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23067  0180E6  6A34               	clrf	_uart1TxHead^0,c	;volatile
 23068                           
 23069                           ; BSR set to: 61
 23070                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23071  0180E8  6A33               	clrf	_uart1TxTail^0,c	;volatile
 23072                           
 23073                           ; BSR set to: 61
 23074                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23075  0180EA  0E40               	movlw	64
 23076  0180EC  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23077                           
 23078                           ; BSR set to: 61
 23079                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23080  0180EE  6A31               	clrf	_uart1RxHead^0,c	;volatile
 23081                           
 23082                           ; BSR set to: 61
 23083                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23084  0180F0  6A30               	clrf	_uart1RxTail^0,c	;volatile
 23085                           
 23086                           ; BSR set to: 61
 23087                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23088  0180F2  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 23089                           
 23090                           ; BSR set to: 61
 23091                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23092  0180F4  0139               	movlb	57	; () banked
 23093  0180F6  8793               	bsf	147,3,b	;volatile
 23094                           
 23095                           ; BSR set to: 57
 23096                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23097  0180F8  0012               	return		;funcret
 23098  0180FA                     __end_of_UART1_Initialize:
 23099                           	opt callstack 0
 23100                           
 23101 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23102 ;; Defined at:
 23103 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23106 ;;		 -> UART1_Transmit_ISR(1), 
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;		None
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  1  [STACK] void 
 23111 ;; Registers used:
 23112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23113 ;; Tracked objects:
 23114 ;;		On entry : 3F/39
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;Total ram usage:        0 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:    6
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_UART1_Initialize
 23129 ;; This function uses a reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text92
 23133  018A04                     __ptext92:
 23134                           	opt callstack 0
 23135  018A04                     _UART1_SetTxInterruptHandler:
 23136                           	opt callstack 22
 23137                           
 23138                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23139                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23140                           
 23141                           ; BSR set to: 57
 23142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23143                           ;incstack = 0
 23144  018A04  50E1               	movf	fsr1l,w,c
 23145  018A06  0FFD               	addlw	-3
 23146  018A08  6ED9               	movwf	fsr2l,c
 23147  018A0A  50E2               	movf	fsr1h,w,c
 23148  018A0C  6EDA               	movwf	fsr2h,c
 23149  018A0E  0EFF               	movlw	255
 23150  018A10  22DA               	addwfc	fsr2h,f,c
 23151  018A12  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 23152  018A18  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 23153  018A1E  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 23154                           
 23155                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23156  018A24  52E5               	movf	postdec1,f,c
 23157  018A26  52E5               	movf	postdec1,f,c
 23158  018A28  52E5               	movf	postdec1,f,c
 23159  018A2A  0012               	return		;funcret
 23160  018A2C                     __end_of_UART1_SetTxInterruptHandler:
 23161                           	opt callstack 0
 23162                           
 23163 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23164 ;; Defined at:
 23165 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23166 ;; Parameters:    Size  Location     Type
 23167 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23168 ;;		 -> UART1_Receive_ISR(1), 
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;		None
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1  [STACK] void 
 23173 ;; Registers used:
 23174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23175 ;; Tracked objects:
 23176 ;;		On entry : 3F/39
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;Total ram usage:        0 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:    6
 23187 ;; This function calls:
 23188 ;;		Nothing
 23189 ;; This function is called by:
 23190 ;;		_UART1_Initialize
 23191 ;; This function uses a reentrant model
 23192 ;;
 23193                           
 23194                           	psect	text93
 23195  018A2C                     __ptext93:
 23196                           	opt callstack 0
 23197  018A2C                     _UART1_SetRxInterruptHandler:
 23198                           	opt callstack 22
 23199                           
 23200                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23201                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23202                           
 23203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23204                           ;incstack = 0
 23205  018A2C  50E1               	movf	fsr1l,w,c
 23206  018A2E  0FFD               	addlw	-3
 23207  018A30  6ED9               	movwf	fsr2l,c
 23208  018A32  50E2               	movf	fsr1h,w,c
 23209  018A34  6EDA               	movwf	fsr2h,c
 23210  018A36  0EFF               	movlw	255
 23211  018A38  22DA               	addwfc	fsr2h,f,c
 23212  018A3A  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 23213  018A40  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 23214  018A46  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 23215                           
 23216                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23217  018A4C  52E5               	movf	postdec1,f,c
 23218  018A4E  52E5               	movf	postdec1,f,c
 23219  018A50  52E5               	movf	postdec1,f,c
 23220  018A52  0012               	return		;funcret
 23221  018A54                     __end_of_UART1_SetRxInterruptHandler:
 23222                           	opt callstack 0
 23223                           
 23224 ;; *************** function _TMR6_Initialize *****************
 23225 ;; Defined at:
 23226 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23227 ;; Parameters:    Size  Location     Type
 23228 ;;		None
 23229 ;; Auto vars:     Size  Location     Type
 23230 ;;		None
 23231 ;; Return value:  Size  Location     Type
 23232 ;;                  1  [STACK] void 
 23233 ;; Registers used:
 23234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23235 ;; Tracked objects:
 23236 ;;		On entry : 3F/39
 23237 ;;		On exit  : 0/0
 23238 ;;		Unchanged: 0/0
 23239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23244 ;;Total ram usage:        0 bytes
 23245 ;; Hardware stack levels used:    1
 23246 ;; Hardware stack levels required when called:    7
 23247 ;; This function calls:
 23248 ;;		_TMR6_SetInterruptHandler
 23249 ;; This function is called by:
 23250 ;;		_SYSTEM_Initialize
 23251 ;; This function uses a reentrant model
 23252 ;;
 23253                           
 23254                           	psect	text94
 23255  018912                     __ptext94:
 23256                           	opt callstack 0
 23257  018912                     _TMR6_Initialize:
 23258                           	opt callstack 22
 23259                           
 23260                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23261                           
 23262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23263                           ;incstack = 0
 23264  018912  0E01               	movlw	1
 23265  018914  6E96               	movwf	150,c	;volatile
 23266                           
 23267                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23268  018916  6A95               	clrf	149,c	;volatile
 23269                           
 23270                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23271  018918  6A97               	clrf	151,c	;volatile
 23272                           
 23273                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23274  01891A  0E7C               	movlw	124
 23275  01891C  6E93               	movwf	147,c	;volatile
 23276                           
 23277                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23278  01891E  6A92               	clrf	146,c	;volatile
 23279                           
 23280                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23281  018920  0139               	movlb	57	; () banked
 23282  018922  91A9               	bcf	169,0,b	;volatile
 23283                           
 23284                           ; BSR set to: 57
 23285                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23286  018924  8199               	bsf	153,0,b	;volatile
 23287                           
 23288                           ; BSR set to: 57
 23289                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23290  018926  0E30               	movlw	low _TMR6_DefaultInterruptHandler
 23291  018928  6EE6               	movwf	postinc1,c
 23292  01892A  0E85               	movlw	high _TMR6_DefaultInterruptHandler
 23293  01892C  6EE6               	movwf	postinc1,c
 23294  01892E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23295  018930  6EE6               	movwf	postinc1,c
 23296  018932  EC2A  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23297                           
 23298                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23299  018936  0EE0               	movlw	224
 23300  018938  6E94               	movwf	148,c	;volatile
 23301                           
 23302                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23303  01893A  0012               	return		;funcret
 23304  01893C                     __end_of_TMR6_Initialize:
 23305                           	opt callstack 0
 23306                           
 23307 ;; *************** function _TMR6_SetInterruptHandler *****************
 23308 ;; Defined at:
 23309 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23310 ;; Parameters:    Size  Location     Type
 23311 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23312 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23313 ;; Auto vars:     Size  Location     Type
 23314 ;;		None
 23315 ;; Return value:  Size  Location     Type
 23316 ;;                  1  [STACK] void 
 23317 ;; Registers used:
 23318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23319 ;; Tracked objects:
 23320 ;;		On entry : 3F/39
 23321 ;;		On exit  : 0/0
 23322 ;;		Unchanged: 0/0
 23323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23328 ;;Total ram usage:        0 bytes
 23329 ;; Hardware stack levels used:    1
 23330 ;; Hardware stack levels required when called:    6
 23331 ;; This function calls:
 23332 ;;		Nothing
 23333 ;; This function is called by:
 23334 ;;		_TMR6_Initialize
 23335 ;; This function uses a reentrant model
 23336 ;;
 23337                           
 23338                           	psect	text95
 23339  018A54                     __ptext95:
 23340                           	opt callstack 0
 23341  018A54                     _TMR6_SetInterruptHandler:
 23342                           	opt callstack 22
 23343                           
 23344                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23345                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23346                           
 23347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23348                           ;incstack = 0
 23349  018A54  50E1               	movf	fsr1l,w,c
 23350  018A56  0FFD               	addlw	-3
 23351  018A58  6ED9               	movwf	fsr2l,c
 23352  018A5A  50E2               	movf	fsr1h,w,c
 23353  018A5C  6EDA               	movwf	fsr2h,c
 23354  018A5E  0EFF               	movlw	255
 23355  018A60  22DA               	addwfc	fsr2h,f,c
 23356  018A62  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 23357  018A68  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 23358  018A6E  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 23359                           
 23360                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23361  018A74  52E5               	movf	postdec1,f,c
 23362  018A76  52E5               	movf	postdec1,f,c
 23363  018A78  52E5               	movf	postdec1,f,c
 23364  018A7A  0012               	return		;funcret
 23365  018A7C                     __end_of_TMR6_SetInterruptHandler:
 23366                           	opt callstack 0
 23367                           
 23368 ;; *************** function _TMR5_Initialize *****************
 23369 ;; Defined at:
 23370 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23371 ;; Parameters:    Size  Location     Type
 23372 ;;		None
 23373 ;; Auto vars:     Size  Location     Type
 23374 ;;		None
 23375 ;; Return value:  Size  Location     Type
 23376 ;;                  1  [STACK] void 
 23377 ;; Registers used:
 23378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23379 ;; Tracked objects:
 23380 ;;		On entry : 0/39
 23381 ;;		On exit  : 0/0
 23382 ;;		Unchanged: 0/0
 23383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23388 ;;Total ram usage:        0 bytes
 23389 ;; Hardware stack levels used:    1
 23390 ;; Hardware stack levels required when called:    7
 23391 ;; This function calls:
 23392 ;;		_TMR5_SetInterruptHandler
 23393 ;; This function is called by:
 23394 ;;		_SYSTEM_Initialize
 23395 ;; This function uses a reentrant model
 23396 ;;
 23397                           
 23398                           	psect	text96
 23399  0184EA                     __ptext96:
 23400                           	opt callstack 0
 23401  0184EA                     _TMR5_Initialize:
 23402                           	opt callstack 22
 23403                           
 23404                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23405                           
 23406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23407                           ;incstack = 0
 23408  0184EA  6A9B               	clrf	155,c	;volatile
 23409                           
 23410                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23411  0184EC  6A9C               	clrf	156,c	;volatile
 23412                           
 23413                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23414  0184EE  0E01               	movlw	1
 23415  0184F0  6E9D               	movwf	157,c	;volatile
 23416                           
 23417                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23418  0184F2  0E63               	movlw	99
 23419  0184F4  6E99               	movwf	153,c	;volatile
 23420                           
 23421                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23422  0184F6  0EC0               	movlw	192
 23423  0184F8  6E98               	movwf	152,c	;volatile
 23424                           
 23425                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23426  0184FA  5098               	movf	152,w,c	;volatile
 23427  0184FC  006F FE64  F035    	movff	16281,btemp	;volatile
 23428  018502  6A36               	clrf	(btemp+1)^0,c
 23429  018504  0060  F0D4  F036   	movff	btemp,btemp+1
 23430  01850A  6A35               	clrf	btemp^0,c
 23431  01850C  1035               	iorwf	btemp^0,w,c
 23432  01850E  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 23433  018510  5036               	movf	(btemp+1)^0,w,c
 23434  018512  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23435                           
 23436                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23437  018514  0139               	movlb	57	; () banked
 23438  018516  9DA8               	bcf	168,6,b	;volatile
 23439                           
 23440                           ; BSR set to: 57
 23441                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23442  018518  8D98               	bsf	152,6,b	;volatile
 23443                           
 23444                           ; BSR set to: 57
 23445                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23446  01851A  0E44               	movlw	low _TMR5_DefaultInterruptHandler
 23447  01851C  6EE6               	movwf	postinc1,c
 23448  01851E  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23449  018520  6EE6               	movwf	postinc1,c
 23450  018522  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23451  018524  6EE6               	movwf	postinc1,c
 23452  018526  EC3E  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23453                           
 23454                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23455  01852A  0E31               	movlw	49
 23456  01852C  6E9A               	movwf	154,c	;volatile
 23457                           
 23458                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23459  01852E  0012               	return		;funcret
 23460  018530                     __end_of_TMR5_Initialize:
 23461                           	opt callstack 0
 23462                           
 23463 ;; *************** function _TMR5_SetInterruptHandler *****************
 23464 ;; Defined at:
 23465 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23468 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23469 ;; Auto vars:     Size  Location     Type
 23470 ;;		None
 23471 ;; Return value:  Size  Location     Type
 23472 ;;                  1  [STACK] void 
 23473 ;; Registers used:
 23474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23475 ;; Tracked objects:
 23476 ;;		On entry : 3F/39
 23477 ;;		On exit  : 0/0
 23478 ;;		Unchanged: 0/0
 23479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;Total ram usage:        0 bytes
 23485 ;; Hardware stack levels used:    1
 23486 ;; Hardware stack levels required when called:    6
 23487 ;; This function calls:
 23488 ;;		Nothing
 23489 ;; This function is called by:
 23490 ;;		_TMR5_Initialize
 23491 ;; This function uses a reentrant model
 23492 ;;
 23493                           
 23494                           	psect	text97
 23495  018A7C                     __ptext97:
 23496                           	opt callstack 0
 23497  018A7C                     _TMR5_SetInterruptHandler:
 23498                           	opt callstack 22
 23499                           
 23500                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23501                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23502                           
 23503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23504                           ;incstack = 0
 23505  018A7C  50E1               	movf	fsr1l,w,c
 23506  018A7E  0FFD               	addlw	-3
 23507  018A80  6ED9               	movwf	fsr2l,c
 23508  018A82  50E2               	movf	fsr1h,w,c
 23509  018A84  6EDA               	movwf	fsr2h,c
 23510  018A86  0EFF               	movlw	255
 23511  018A88  22DA               	addwfc	fsr2h,f,c
 23512  018A8A  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23513  018A90  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23514  018A96  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23515                           
 23516                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23517  018A9C  52E5               	movf	postdec1,f,c
 23518  018A9E  52E5               	movf	postdec1,f,c
 23519  018AA0  52E5               	movf	postdec1,f,c
 23520  018AA2  0012               	return		;funcret
 23521  018AA4                     __end_of_TMR5_SetInterruptHandler:
 23522                           	opt callstack 0
 23523                           
 23524 ;; *************** function _TMR2_Initialize *****************
 23525 ;; Defined at:
 23526 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23527 ;; Parameters:    Size  Location     Type
 23528 ;;		None
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;		None
 23531 ;; Return value:  Size  Location     Type
 23532 ;;                  1  [STACK] void 
 23533 ;; Registers used:
 23534 ;;		wreg, status,2
 23535 ;; Tracked objects:
 23536 ;;		On entry : 3F/3F
 23537 ;;		On exit  : 3F/39
 23538 ;;		Unchanged: 0/0
 23539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23544 ;;Total ram usage:        0 bytes
 23545 ;; Hardware stack levels used:    1
 23546 ;; Hardware stack levels required when called:    6
 23547 ;; This function calls:
 23548 ;;		Nothing
 23549 ;; This function is called by:
 23550 ;;		_SYSTEM_Initialize
 23551 ;; This function uses a reentrant model
 23552 ;;
 23553                           
 23554                           	psect	text98
 23555  018DF2                     __ptext98:
 23556                           	opt callstack 0
 23557  018DF2                     _TMR2_Initialize:
 23558                           	opt callstack 23
 23559                           
 23560                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23561                           
 23562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23563                           ;incstack = 0
 23564  018DF2  0E01               	movlw	1
 23565  018DF4  6EAE               	movwf	174,c	;volatile
 23566                           
 23567                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23568  018DF6  6AAD               	clrf	173,c	;volatile
 23569                           
 23570                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23571  018DF8  6AAF               	clrf	175,c	;volatile
 23572                           
 23573                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23574  018DFA  0E63               	movlw	99
 23575  018DFC  6EAB               	movwf	171,c	;volatile
 23576                           
 23577                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23578  018DFE  6AAA               	clrf	170,c	;volatile
 23579                           
 23580                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23581  018E00  0139               	movlb	57	; () banked
 23582  018E02  95A4               	bcf	164,2,b	;volatile
 23583                           
 23584                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23585  018E04  0EC0               	movlw	192
 23586  018E06  6EAC               	movwf	172,c	;volatile
 23587                           
 23588                           ; BSR set to: 57
 23589                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23590  018E08  0012               	return		;funcret
 23591  018E0A                     __end_of_TMR2_Initialize:
 23592                           	opt callstack 0
 23593                           
 23594 ;; *************** function _SPI1_Initialize *****************
 23595 ;; Defined at:
 23596 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23597 ;; Parameters:    Size  Location     Type
 23598 ;;		None
 23599 ;; Auto vars:     Size  Location     Type
 23600 ;;		None
 23601 ;; Return value:  Size  Location     Type
 23602 ;;                  1  [STACK] void 
 23603 ;; Registers used:
 23604 ;;		wreg, status,2
 23605 ;; Tracked objects:
 23606 ;;		On entry : 3F/39
 23607 ;;		On exit  : 3F/3D
 23608 ;;		Unchanged: 0/0
 23609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23614 ;;Total ram usage:        0 bytes
 23615 ;; Hardware stack levels used:    1
 23616 ;; Hardware stack levels required when called:    6
 23617 ;; This function calls:
 23618 ;;		Nothing
 23619 ;; This function is called by:
 23620 ;;		_SYSTEM_Initialize
 23621 ;; This function uses a reentrant model
 23622 ;;
 23623                           
 23624                           	psect	text99
 23625  018E0A                     __ptext99:
 23626                           	opt callstack 0
 23627  018E0A                     _SPI1_Initialize:
 23628                           	opt callstack 23
 23629                           
 23630                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23631                           
 23632                           ; BSR set to: 57
 23633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23634                           ;incstack = 0
 23635  018E0A  0E40               	movlw	64
 23636  018E0C  013D               	movlb	61	; () banked
 23637  018E0E  6F15               	movwf	21,b	;volatile
 23638                           
 23639                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23640  018E10  0E03               	movlw	3
 23641  018E12  6F16               	movwf	22,b	;volatile
 23642                           
 23643                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23644  018E14  0E4F               	movlw	79
 23645  018E16  6F19               	movwf	25,b	;volatile
 23646                           
 23647                           ; BSR set to: 61
 23648                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23649  018E18  6B1C               	clrf	28,b	;volatile
 23650                           
 23651                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23652  018E1A  0E83               	movlw	131
 23653  018E1C  6F14               	movwf	20,b	;volatile
 23654                           
 23655                           ; BSR set to: 61
 23656                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23657  018E1E  0012               	return		;funcret
 23658  018E20                     __end_of_SPI1_Initialize:
 23659                           	opt callstack 0
 23660                           
 23661 ;; *************** function _PWM8_Initialize *****************
 23662 ;; Defined at:
 23663 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23664 ;; Parameters:    Size  Location     Type
 23665 ;;		None
 23666 ;; Auto vars:     Size  Location     Type
 23667 ;;		None
 23668 ;; Return value:  Size  Location     Type
 23669 ;;                  1  [STACK] void 
 23670 ;; Registers used:
 23671 ;;		wreg, status,2
 23672 ;; Tracked objects:
 23673 ;;		On entry : 0/3E
 23674 ;;		On exit  : 3F/3F
 23675 ;;		Unchanged: 0/0
 23676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23681 ;;Total ram usage:        0 bytes
 23682 ;; Hardware stack levels used:    1
 23683 ;; Hardware stack levels required when called:    6
 23684 ;; This function calls:
 23685 ;;		Nothing
 23686 ;; This function is called by:
 23687 ;;		_SYSTEM_Initialize
 23688 ;; This function uses a reentrant model
 23689 ;;
 23690                           
 23691                           	psect	text100
 23692  018E20                     __ptext100:
 23693                           	opt callstack 0
 23694  018E20                     _PWM8_Initialize:
 23695                           	opt callstack 23
 23696                           
 23697                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23698                           
 23699                           ; BSR set to: 61
 23700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23701                           ;incstack = 0
 23702  018E20  0E80               	movlw	128
 23703  018E22  6E62               	movwf	98,c	;volatile
 23704                           
 23705                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23706  018E24  6A61               	clrf	97,c	;volatile
 23707                           
 23708                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23709  018E26  0E40               	movlw	64
 23710  018E28  6E60               	movwf	96,c	;volatile
 23711                           
 23712                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23713  018E2A  013F               	movlb	63	; () banked
 23714  018E2C  515F               	movf	95,w,b	;volatile
 23715  018E2E  0B3F               	andlw	-193
 23716  018E30  0940               	iorlw	64
 23717  018E32  6F5F               	movwf	95,b	;volatile
 23718                           
 23719                           ; BSR set to: 63
 23720                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23721  018E34  0012               	return		;funcret
 23722  018E36                     __end_of_PWM8_Initialize:
 23723                           	opt callstack 0
 23724                           
 23725 ;; *************** function _PMD_Initialize *****************
 23726 ;; Defined at:
 23727 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23728 ;; Parameters:    Size  Location     Type
 23729 ;;		None
 23730 ;; Auto vars:     Size  Location     Type
 23731 ;;		None
 23732 ;; Return value:  Size  Location     Type
 23733 ;;                  1  [STACK] void 
 23734 ;; Registers used:
 23735 ;;		None
 23736 ;; Tracked objects:
 23737 ;;		On entry : 3F/39
 23738 ;;		On exit  : 3F/39
 23739 ;;		Unchanged: 0/0
 23740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23745 ;;Total ram usage:        0 bytes
 23746 ;; Hardware stack levels used:    1
 23747 ;; Hardware stack levels required when called:    6
 23748 ;; This function calls:
 23749 ;;		Nothing
 23750 ;; This function is called by:
 23751 ;;		_SYSTEM_Initialize
 23752 ;; This function uses a reentrant model
 23753 ;;
 23754                           
 23755                           	psect	text101
 23756  018E4C                     __ptext101:
 23757                           	opt callstack 0
 23758  018E4C                     _PMD_Initialize:
 23759                           	opt callstack 23
 23760                           
 23761                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23762                           
 23763                           ; BSR set to: 63
 23764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23765                           ;incstack = 0
 23766  018E4C  0139               	movlb	57	; () banked
 23767  018E4E  6BC0               	clrf	192,b	;volatile
 23768                           
 23769                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23770  018E50  6BC1               	clrf	193,b	;volatile
 23771                           
 23772                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23773  018E52  6BC2               	clrf	194,b	;volatile
 23774                           
 23775                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23776  018E54  6BC3               	clrf	195,b	;volatile
 23777                           
 23778                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23779  018E56  6BC4               	clrf	196,b	;volatile
 23780                           
 23781                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23782  018E58  6BC5               	clrf	197,b	;volatile
 23783                           
 23784                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23785  018E5A  6BC6               	clrf	198,b	;volatile
 23786                           
 23787                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23788  018E5C  6BC7               	clrf	199,b	;volatile
 23789                           
 23790                           ; BSR set to: 57
 23791                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23792  018E5E  0012               	return		;funcret
 23793  018E60                     __end_of_PMD_Initialize:
 23794                           	opt callstack 0
 23795                           
 23796 ;; *************** function _PIN_MANAGER_Initialize *****************
 23797 ;; Defined at:
 23798 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23799 ;; Parameters:    Size  Location     Type
 23800 ;;		None
 23801 ;; Auto vars:     Size  Location     Type
 23802 ;;		None
 23803 ;; Return value:  Size  Location     Type
 23804 ;;                  1  [STACK] void 
 23805 ;; Registers used:
 23806 ;;		wreg, status,2
 23807 ;; Tracked objects:
 23808 ;;		On entry : 3F/39
 23809 ;;		On exit  : 3F/3A
 23810 ;;		Unchanged: 0/0
 23811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23816 ;;Total ram usage:        0 bytes
 23817 ;; Hardware stack levels used:    1
 23818 ;; Hardware stack levels required when called:    6
 23819 ;; This function calls:
 23820 ;;		Nothing
 23821 ;; This function is called by:
 23822 ;;		_SYSTEM_Initialize
 23823 ;; This function uses a reentrant model
 23824 ;;
 23825                           
 23826                           	psect	text102
 23827  017BF2                     __ptext102:
 23828                           	opt callstack 0
 23829  017BF2                     _PIN_MANAGER_Initialize:
 23830                           	opt callstack 23
 23831                           
 23832                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23833                           
 23834                           ; BSR set to: 57
 23835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23836                           ;incstack = 0
 23837  017BF2  0E07               	movlw	7
 23838  017BF4  6EBE               	movwf	190,c	;volatile
 23839                           
 23840                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 23841  017BF6  6ABD               	clrf	189,c	;volatile
 23842                           
 23843                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23844  017BF8  6ABA               	clrf	186,c	;volatile
 23845                           
 23846                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23847  017BFA  6ABF               	clrf	191,c	;volatile
 23848                           
 23849                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23850  017BFC  6ABB               	clrf	187,c	;volatile
 23851                           
 23852                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23853  017BFE  0E07               	movlw	7
 23854  017C00  6EBC               	movwf	188,c	;volatile
 23855                           
 23856                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23857  017C02  6AC6               	clrf	198,c	;volatile
 23858                           
 23859                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23860  017C04  0E0F               	movlw	15
 23861  017C06  6EC7               	movwf	199,c	;volatile
 23862                           
 23863                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23864  017C08  68C2               	setf	194,c	;volatile
 23865                           
 23866                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23867  017C0A  0EBF               	movlw	191
 23868  017C0C  6EC3               	movwf	195,c	;volatile
 23869                           
 23870                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23871  017C0E  0E90               	movlw	144
 23872  017C10  6EC4               	movwf	196,c	;volatile
 23873                           
 23874                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23875  017C12  0E0C               	movlw	12
 23876  017C14  6EC5               	movwf	197,c	;volatile
 23877                           
 23878                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23879  017C16  013A               	movlb	58	; () banked
 23880  017C18  6B70               	clrf	112,b	;volatile
 23881                           
 23882                           ; BSR set to: 58
 23883                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23884  017C1A  6B60               	clrf	96,b	;volatile
 23885                           
 23886                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23887  017C1C  0E3C               	movlw	60
 23888  017C1E  6F50               	movwf	80,b	;volatile
 23889                           
 23890                           ; BSR set to: 58
 23891                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23892  017C20  6B80               	clrf	128,b	;volatile
 23893                           
 23894                           ; BSR set to: 58
 23895                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23896  017C22  6B90               	clrf	144,b	;volatile
 23897                           
 23898                           ; BSR set to: 58
 23899                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23900  017C24  6940               	setf	64,b	;volatile
 23901                           
 23902                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23903  017C26  0E0C               	movlw	12
 23904  017C28  6F71               	movwf	113,b	;volatile
 23905                           
 23906                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23907  017C2A  0E0F               	movlw	15
 23908  017C2C  6F91               	movwf	145,b	;volatile
 23909                           
 23910                           ; BSR set to: 58
 23911                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23912  017C2E  6B81               	clrf	129,b	;volatile
 23913                           
 23914                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 23915  017C30  0E87               	movlw	135
 23916  017C32  6F51               	movwf	81,b	;volatile
 23917                           
 23918                           ; BSR set to: 58
 23919                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23920  017C34  6B41               	clrf	65,b	;volatile
 23921                           
 23922                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23923  017C36  0E97               	movlw	151
 23924  017C38  6F61               	movwf	97,b	;volatile
 23925                           
 23926                           ; BSR set to: 58
 23927                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23928  017C3A  6B82               	clrf	130,b	;volatile
 23929                           
 23930                           ; BSR set to: 58
 23931                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23932  017C3C  6B92               	clrf	146,b	;volatile
 23933                           
 23934                           ; BSR set to: 58
 23935                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23936  017C3E  6B42               	clrf	66,b	;volatile
 23937                           
 23938                           ; BSR set to: 58
 23939                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23940  017C40  6B52               	clrf	82,b	;volatile
 23941                           
 23942                           ; BSR set to: 58
 23943                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23944  017C42  6B62               	clrf	98,b	;volatile
 23945                           
 23946                           ; BSR set to: 58
 23947                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23948  017C44  6B72               	clrf	114,b	;volatile
 23949                           
 23950                           ; BSR set to: 58
 23951                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23952  017C46  6943               	setf	67,b	;volatile
 23953                           
 23954                           ; BSR set to: 58
 23955                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23956  017C48  6953               	setf	83,b	;volatile
 23957                           
 23958                           ; BSR set to: 58
 23959                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23960  017C4A  6963               	setf	99,b	;volatile
 23961                           
 23962                           ; BSR set to: 58
 23963                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23964  017C4C  6973               	setf	115,b	;volatile
 23965                           
 23966                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23967  017C4E  0E07               	movlw	7
 23968  017C50  6F83               	movwf	131,b	;volatile
 23969                           
 23970                           ; BSR set to: 58
 23971                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23972  017C52  6993               	setf	147,b	;volatile
 23973                           
 23974                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23975  017C54  0E0F               	movlw	15
 23976  017C56  6FE8               	movwf	232,b	;volatile
 23977                           
 23978                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23979  017C58  0E13               	movlw	19
 23980  017C5A  6FDE               	movwf	222,b	;volatile
 23981                           
 23982                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23983  017C5C  0E16               	movlw	22
 23984  017C5E  6F0E               	movwf	14,b	;volatile
 23985                           
 23986                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23987  017C60  0E1E               	movlw	30
 23988  017C62  6F13               	movwf	19,b	;volatile
 23989                           
 23990                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23991  017C64  0E08               	movlw	8
 23992  017C66  6FC0               	movwf	192,b	;volatile
 23993                           
 23994                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23995  017C68  0E10               	movlw	16
 23996  017C6A  6F19               	movwf	25,b	;volatile
 23997                           
 23998                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23999  017C6C  0E09               	movlw	9
 24000  017C6E  6FC1               	movwf	193,b	;volatile
 24001                           
 24002                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24003  017C70  0E1F               	movlw	31
 24004  017C72  6F15               	movwf	21,b	;volatile
 24005                           
 24006                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24007  017C74  0E13               	movlw	19
 24008  017C76  6F16               	movwf	22,b	;volatile
 24009                           
 24010                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24011  017C78  0E17               	movlw	23
 24012  017C7A  6FE5               	movwf	229,b	;volatile
 24013                           
 24014                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24015  017C7C  0E14               	movlw	20
 24016  017C7E  6FDF               	movwf	223,b	;volatile
 24017                           
 24018                           ; BSR set to: 58
 24019                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24020  017C80  0012               	return		;funcret
 24021  017C82                     __end_of_PIN_MANAGER_Initialize:
 24022                           	opt callstack 0
 24023                           
 24024 ;; *************** function _OSCILLATOR_Initialize *****************
 24025 ;; Defined at:
 24026 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24027 ;; Parameters:    Size  Location     Type
 24028 ;;		None
 24029 ;; Auto vars:     Size  Location     Type
 24030 ;;		None
 24031 ;; Return value:  Size  Location     Type
 24032 ;;                  1  [STACK] void 
 24033 ;; Registers used:
 24034 ;;		wreg, status,2
 24035 ;; Tracked objects:
 24036 ;;		On entry : 3F/3A
 24037 ;;		On exit  : 3F/39
 24038 ;;		Unchanged: 0/0
 24039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24044 ;;Total ram usage:        0 bytes
 24045 ;; Hardware stack levels used:    1
 24046 ;; Hardware stack levels required when called:    6
 24047 ;; This function calls:
 24048 ;;		Nothing
 24049 ;; This function is called by:
 24050 ;;		_SYSTEM_Initialize
 24051 ;; This function uses a reentrant model
 24052 ;;
 24053                           
 24054                           	psect	text103
 24055  018E36                     __ptext103:
 24056                           	opt callstack 0
 24057  018E36                     _OSCILLATOR_Initialize:
 24058                           	opt callstack 23
 24059                           
 24060                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24061                           
 24062                           ; BSR set to: 58
 24063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24064                           ;incstack = 0
 24065  018E36  0E20               	movlw	32
 24066  018E38  0139               	movlb	57	; () banked
 24067  018E3A  6FD9               	movwf	217,b	;volatile
 24068                           
 24069                           ; BSR set to: 57
 24070                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24071  018E3C  6BDB               	clrf	219,b	;volatile
 24072                           
 24073                           ; BSR set to: 57
 24074                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24075  018E3E  6BDD               	clrf	221,b	;volatile
 24076                           
 24077                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24078  018E40  0E02               	movlw	2
 24079  018E42  6FDF               	movwf	223,b	;volatile
 24080                           
 24081                           ; BSR set to: 57
 24082                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24083  018E44  6BDE               	clrf	222,b	;volatile
 24084  018E46                     l171:
 24085                           
 24086                           ; BSR set to: 57
 24087                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24088  018E46  B1DC               	btfsc	220,0,b	;volatile
 24089  018E48  0012               	return	
 24090  018E4A  D7FD               	goto	l171
 24091  018E4C                     __end_of_OSCILLATOR_Initialize:
 24092                           	opt callstack 0
 24093                           
 24094 ;; *************** function _INTERRUPT_Initialize *****************
 24095 ;; Defined at:
 24096 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24097 ;; Parameters:    Size  Location     Type
 24098 ;;		None
 24099 ;; Auto vars:     Size  Location     Type
 24100 ;;  state           1  [STACK] _Bool 
 24101 ;; Return value:  Size  Location     Type
 24102 ;;                  1  [STACK] void 
 24103 ;; Registers used:
 24104 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24105 ;; Tracked objects:
 24106 ;;		On entry : 0/0
 24107 ;;		On exit  : 3F/39
 24108 ;;		Unchanged: 0/0
 24109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24114 ;;Total ram usage:        0 bytes
 24115 ;; Hardware stack levels used:    1
 24116 ;; Hardware stack levels required when called:    6
 24117 ;; This function calls:
 24118 ;;		Nothing
 24119 ;; This function is called by:
 24120 ;;		_SYSTEM_Initialize
 24121 ;; This function uses a reentrant model
 24122 ;;
 24123                           
 24124                           	psect	text104
 24125  018030                     __ptext104:
 24126                           	opt callstack 0
 24127  018030                     _INTERRUPT_Initialize:
 24128                           	opt callstack 0
 24129                           
 24130                           ; BSR set to: 57
 24131                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24132  018030  52E6               	movf	postinc1,f,c
 24133                           
 24134                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24135                           
 24136                           ;incstack = 0
 24137  018032  8AD2               	bsf	210,5,c	;volatile
 24138                           
 24139                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24140  018034  AED2               	btfss	16338,7,c	;volatile
 24141  018036  D003               	goto	u8360
 24142  018038  6A40               	clrf	(btemp+11)^0,c
 24143  01803A  2A40               	incf	(btemp+11)^0,f,c
 24144  01803C  D001               	goto	u8378
 24145  01803E                     u8360:
 24146  01803E  6A40               	clrf	(btemp+11)^0,c
 24147  018040                     u8378:
 24148                           
 24149                           ;stkvar	_state @ sp[(-1)+0]
 24150  018040  0EFF               	movlw	-1
 24151  018042  0060  F103  FFE3   	movff	btemp+11,plusw1
 24152                           
 24153                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24154  018048  9ED2               	bcf	16338,7,c	;volatile
 24155                           
 24156                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24157  01804A  0E55               	movlw	85
 24158  01804C  6ED4               	movwf	212,c	;volatile
 24159                           
 24160                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24161  01804E  0EAA               	movlw	170
 24162  018050  6ED4               	movwf	212,c	;volatile
 24163                           
 24164                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24165  018052  90D4               	bcf	212,0,c	;volatile
 24166                           
 24167                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24168  018054  0138               	movlb	56	; () banked
 24169  018056  6B9F               	clrf	159,b	;volatile
 24170                           
 24171                           ; BSR set to: 56
 24172                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24173  018058  6B9E               	clrf	158,b	;volatile
 24174                           
 24175                           ; BSR set to: 56
 24176                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24177  01805A  0E08               	movlw	8
 24178  01805C  6F9D               	movwf	157,b	;volatile
 24179                           
 24180                           ; BSR set to: 56
 24181                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24182  01805E  0E55               	movlw	85
 24183  018060  6ED4               	movwf	212,c	;volatile
 24184                           
 24185                           ; BSR set to: 56
 24186                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24187  018062  0EAA               	movlw	170
 24188  018064  6ED4               	movwf	212,c	;volatile
 24189                           
 24190                           ; BSR set to: 56
 24191                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24192  018066  80D4               	bsf	212,0,c	;volatile
 24193                           
 24194                           ; BSR set to: 56
 24195                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24196                           ;stkvar	_state @ sp[(-1)+0]
 24197  018068  0EFF               	movlw	-1
 24198  01806A  B0E3               	btfsc	plusw1,0,c
 24199  01806C  D002               	bra	u8385
 24200  01806E  9ED2               	bcf	16338,7,c	;volatile
 24201  018070  D001               	bra	u8386
 24202  018072                     u8385:
 24203  018072  8ED2               	bsf	16338,7,c	;volatile
 24204  018074                     u8386:
 24205                           
 24206                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24207  018074  0139               	movlb	57	; () banked
 24208  018076  8782               	bsf	130,3,b	;volatile
 24209                           
 24210                           ; BSR set to: 57
 24211                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24212  018078  8382               	bsf	130,1,b	;volatile
 24213                           
 24214                           ; BSR set to: 57
 24215                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24216  01807A  8182               	bsf	130,0,b	;volatile
 24217                           
 24218                           ; BSR set to: 57
 24219                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24220  01807C  8582               	bsf	130,2,b	;volatile
 24221                           
 24222                           ; BSR set to: 57
 24223                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24224  01807E  8786               	bsf	134,3,b	;volatile
 24225                           
 24226                           ; BSR set to: 57
 24227                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24228  018080  8586               	bsf	134,2,b	;volatile
 24229                           
 24230                           ; BSR set to: 57
 24231                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24232  018082  8983               	bsf	131,4,b	;volatile
 24233                           
 24234                           ; BSR set to: 57
 24235                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24236  018084  8783               	bsf	131,3,b	;volatile
 24237                           
 24238                           ; BSR set to: 57
 24239                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24240  018086  8181               	bsf	129,0,b	;volatile
 24241                           
 24242                           ; BSR set to: 57
 24243                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 24244  018088  8185               	bsf	133,0,b	;volatile
 24245                           
 24246                           ; BSR set to: 57
 24247                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24248  01808A  8189               	bsf	137,0,b	;volatile
 24249                           
 24250                           ; BSR set to: 57
 24251                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24252  01808C  9D88               	bcf	136,6,b	;volatile
 24253                           
 24254                           ; BSR set to: 57
 24255                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24256  01808E  8581               	bsf	129,2,b	;volatile
 24257                           
 24258                           ; BSR set to: 57
 24259                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24260  018090  8781               	bsf	129,3,b	;volatile
 24261                           
 24262                           ; BSR set to: 57
 24263                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24264  018092  52E5               	movf	postdec1,f,c
 24265  018094  0012               	return		;funcret
 24266  018096                     __end_of_INTERRUPT_Initialize:
 24267                           	opt callstack 0
 24268                           
 24269 ;; *************** function _FVR_Initialize *****************
 24270 ;; Defined at:
 24271 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;		None
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;		None
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  1  [STACK] void 
 24278 ;; Registers used:
 24279 ;;		wreg, status,2
 24280 ;; Tracked objects:
 24281 ;;		On entry : 3F/39
 24282 ;;		On exit  : 3F/3E
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;Total ram usage:        0 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; Hardware stack levels required when called:    6
 24292 ;; This function calls:
 24293 ;;		Nothing
 24294 ;; This function is called by:
 24295 ;;		_SYSTEM_Initialize
 24296 ;; This function uses a reentrant model
 24297 ;;
 24298                           
 24299                           	psect	text105
 24300  018F1A                     __ptext105:
 24301                           	opt callstack 0
 24302  018F1A                     _FVR_Initialize:
 24303                           	opt callstack 23
 24304                           
 24305                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24306                           
 24307                           ; BSR set to: 57
 24308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24309                           ;incstack = 0
 24310  018F1A  0EAF               	movlw	175
 24311  018F1C  013E               	movlb	62	; () banked
 24312  018F1E  6FC1               	movwf	193,b	;volatile
 24313                           
 24314                           ; BSR set to: 62
 24315                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24316  018F20  0012               	return		;funcret
 24317  018F22                     __end_of_FVR_Initialize:
 24318                           	opt callstack 0
 24319                           
 24320 ;; *************** function _EXT_INT_Initialize *****************
 24321 ;; Defined at:
 24322 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 24323 ;; Parameters:    Size  Location     Type
 24324 ;;		None
 24325 ;; Auto vars:     Size  Location     Type
 24326 ;;		None
 24327 ;; Return value:  Size  Location     Type
 24328 ;;                  1  [STACK] void 
 24329 ;; Registers used:
 24330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24331 ;; Tracked objects:
 24332 ;;		On entry : 3F/39
 24333 ;;		On exit  : 3F/39
 24334 ;;		Unchanged: 0/0
 24335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;Total ram usage:        0 bytes
 24341 ;; Hardware stack levels used:    1
 24342 ;; Hardware stack levels required when called:    7
 24343 ;; This function calls:
 24344 ;;		_INT0_SetInterruptHandler
 24345 ;;		_INT1_SetInterruptHandler
 24346 ;; This function is called by:
 24347 ;;		_SYSTEM_Initialize
 24348 ;; This function uses a reentrant model
 24349 ;;
 24350                           
 24351                           	psect	text106
 24352  0187C8                     __ptext106:
 24353                           	opt callstack 0
 24354  0187C8                     _EXT_INT_Initialize:
 24355                           	opt callstack 22
 24356                           
 24357                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 24358                           
 24359                           ; BSR set to: 62
 24360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24361                           ;incstack = 0
 24362  0187C8  0139               	movlb	57	; () banked
 24363  0187CA  91A1               	bcf	161,0,b	;volatile
 24364                           
 24365                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 24366  0187CC  90D2               	bcf	210,0,c	;volatile
 24367                           
 24368                           ; BSR set to: 57
 24369                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24370  0187CE  0E3A               	movlw	low _INT0_DefaultInterruptHandler
 24371  0187D0  6EE6               	movwf	postinc1,c
 24372  0187D2  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24373  0187D4  6EE6               	movwf	postinc1,c
 24374  0187D6  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24375  0187D8  6EE6               	movwf	postinc1,c
 24376  0187DA  EC66  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24377                           
 24378                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 24379  0187DE  0139               	movlb	57	; () banked
 24380  0187E0  8191               	bsf	145,0,b	;volatile
 24381                           
 24382                           ; BSR set to: 57
 24383                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 24384  0187E2  91A5               	bcf	165,0,b	;volatile
 24385                           
 24386                           ; BSR set to: 57
 24387                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 24388  0187E4  92D2               	bcf	210,1,c	;volatile
 24389                           
 24390                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24391  0187E6  0E3C               	movlw	low _INT1_DefaultInterruptHandler
 24392  0187E8  6EE6               	movwf	postinc1,c
 24393  0187EA  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24394  0187EC  6EE6               	movwf	postinc1,c
 24395  0187EE  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24396  0187F0  6EE6               	movwf	postinc1,c
 24397  0187F2  EC52  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24398                           
 24399                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 24400  0187F6  0139               	movlb	57	; () banked
 24401  0187F8  8195               	bsf	149,0,b	;volatile
 24402                           
 24403                           ; BSR set to: 57
 24404                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24405  0187FA  0012               	return		;funcret
 24406  0187FC                     __end_of_EXT_INT_Initialize:
 24407                           	opt callstack 0
 24408                           
 24409 ;; *************** function _INT1_SetInterruptHandler *****************
 24410 ;; Defined at:
 24411 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 24412 ;; Parameters:    Size  Location     Type
 24413 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24414 ;;		 -> INT1_DefaultInterruptHandler(1), 
 24415 ;; Auto vars:     Size  Location     Type
 24416 ;;		None
 24417 ;; Return value:  Size  Location     Type
 24418 ;;                  1  [STACK] void 
 24419 ;; Registers used:
 24420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24421 ;; Tracked objects:
 24422 ;;		On entry : 3F/39
 24423 ;;		On exit  : 0/0
 24424 ;;		Unchanged: 0/0
 24425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24430 ;;Total ram usage:        0 bytes
 24431 ;; Hardware stack levels used:    1
 24432 ;; Hardware stack levels required when called:    6
 24433 ;; This function calls:
 24434 ;;		Nothing
 24435 ;; This function is called by:
 24436 ;;		_EXT_INT_Initialize
 24437 ;; This function uses a reentrant model
 24438 ;;
 24439                           
 24440                           	psect	text107
 24441  018AA4                     __ptext107:
 24442                           	opt callstack 0
 24443  018AA4                     _INT1_SetInterruptHandler:
 24444                           	opt callstack 22
 24445                           
 24446                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24447                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24448                           
 24449                           ; BSR set to: 57
 24450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24451                           ;incstack = 0
 24452  018AA4  50E1               	movf	fsr1l,w,c
 24453  018AA6  0FFD               	addlw	-3
 24454  018AA8  6ED9               	movwf	fsr2l,c
 24455  018AAA  50E2               	movf	fsr1h,w,c
 24456  018AAC  6EDA               	movwf	fsr2h,c
 24457  018AAE  0EFF               	movlw	255
 24458  018AB0  22DA               	addwfc	fsr2h,f,c
 24459  018AB2  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 24460  018AB8  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 24461  018ABE  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 24462                           
 24463                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24464  018AC4  52E5               	movf	postdec1,f,c
 24465  018AC6  52E5               	movf	postdec1,f,c
 24466  018AC8  52E5               	movf	postdec1,f,c
 24467  018ACA  0012               	return		;funcret
 24468  018ACC                     __end_of_INT1_SetInterruptHandler:
 24469                           	opt callstack 0
 24470                           
 24471 ;; *************** function _INT0_SetInterruptHandler *****************
 24472 ;; Defined at:
 24473 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24474 ;; Parameters:    Size  Location     Type
 24475 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24476 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24477 ;; Auto vars:     Size  Location     Type
 24478 ;;		None
 24479 ;; Return value:  Size  Location     Type
 24480 ;;                  1  [STACK] void 
 24481 ;; Registers used:
 24482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24483 ;; Tracked objects:
 24484 ;;		On entry : 3F/39
 24485 ;;		On exit  : 0/0
 24486 ;;		Unchanged: 0/0
 24487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24492 ;;Total ram usage:        0 bytes
 24493 ;; Hardware stack levels used:    1
 24494 ;; Hardware stack levels required when called:    6
 24495 ;; This function calls:
 24496 ;;		Nothing
 24497 ;; This function is called by:
 24498 ;;		_EXT_INT_Initialize
 24499 ;; This function uses a reentrant model
 24500 ;;
 24501                           
 24502                           	psect	text108
 24503  018ACC                     __ptext108:
 24504                           	opt callstack 0
 24505  018ACC                     _INT0_SetInterruptHandler:
 24506                           	opt callstack 22
 24507                           
 24508                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24509                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24510                           
 24511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24512                           ;incstack = 0
 24513  018ACC  50E1               	movf	fsr1l,w,c
 24514  018ACE  0FFD               	addlw	-3
 24515  018AD0  6ED9               	movwf	fsr2l,c
 24516  018AD2  50E2               	movf	fsr1h,w,c
 24517  018AD4  6EDA               	movwf	fsr2h,c
 24518  018AD6  0EFF               	movlw	255
 24519  018AD8  22DA               	addwfc	fsr2h,f,c
 24520  018ADA  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 24521  018AE0  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 24522  018AE6  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 24523                           
 24524                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24525  018AEC  52E5               	movf	postdec1,f,c
 24526  018AEE  52E5               	movf	postdec1,f,c
 24527  018AF0  52E5               	movf	postdec1,f,c
 24528  018AF2  0012               	return		;funcret
 24529  018AF4                     __end_of_INT0_SetInterruptHandler:
 24530                           	opt callstack 0
 24531                           
 24532 ;; *************** function _DMA2_Initialize *****************
 24533 ;; Defined at:
 24534 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24535 ;; Parameters:    Size  Location     Type
 24536 ;;		None
 24537 ;; Auto vars:     Size  Location     Type
 24538 ;;		None
 24539 ;; Return value:  Size  Location     Type
 24540 ;;                  1  [STACK] void 
 24541 ;; Registers used:
 24542 ;;		wreg, status,2
 24543 ;; Tracked objects:
 24544 ;;		On entry : 3F/3D
 24545 ;;		On exit  : 3F/3B
 24546 ;;		Unchanged: 0/0
 24547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24552 ;;Total ram usage:        0 bytes
 24553 ;; Hardware stack levels used:    1
 24554 ;; Hardware stack levels required when called:    6
 24555 ;; This function calls:
 24556 ;;		Nothing
 24557 ;; This function is called by:
 24558 ;;		_SYSTEM_Initialize
 24559 ;; This function uses a reentrant model
 24560 ;;
 24561                           
 24562                           	psect	text109
 24563  0182D2                     __ptext109:
 24564                           	opt callstack 0
 24565  0182D2                     _DMA2_Initialize:
 24566                           	opt callstack 23
 24567                           
 24568                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24569                           
 24570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24571                           ;incstack = 0
 24572  0182D2  0E00               	movlw	0
 24573  0182D4  013B               	movlb	59	; () banked
 24574  0182D6  6FD9               	movwf	217,b	;volatile
 24575  0182D8  0E10               	movlw	16
 24576  0182DA  6FDA               	movwf	218,b	;volatile
 24577  0182DC  0E00               	movlw	0
 24578  0182DE  6FDB               	movwf	219,b	;volatile
 24579                           
 24580                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24581  0182E0  0E3F               	movlw	63
 24582  0182E2  6FD1               	movwf	209,b	;volatile
 24583  0182E4  0EBB               	movlw	187
 24584  0182E6  6FD0               	movwf	208,b	;volatile
 24585                           
 24586                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24587  0182E8  0E03               	movlw	3
 24588  0182EA  6FDD               	movwf	221,b	;volatile
 24589                           
 24590                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24591  0182EC  0E00               	movlw	0
 24592  0182EE  6FD8               	movwf	216,b	;volatile
 24593  0182F0  0E01               	movlw	1
 24594  0182F2  6FD7               	movwf	215,b	;volatile
 24595                           
 24596                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24597  0182F4  0E00               	movlw	0
 24598  0182F6  6FCF               	movwf	207,b	;volatile
 24599  0182F8  0E01               	movlw	1
 24600  0182FA  6FCE               	movwf	206,b	;volatile
 24601                           
 24602                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24603  0182FC  0E46               	movlw	70
 24604  0182FE  6FDF               	movwf	223,b	;volatile
 24605                           
 24606                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24607  018300  0E3D               	movlw	61
 24608  018302  6FDE               	movwf	222,b	;volatile
 24609                           
 24610                           ; BSR set to: 59
 24611                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24612  018304  0139               	movlb	57	; () banked
 24613  018306  97A5               	bcf	165,3,b	;volatile
 24614                           
 24615                           ; BSR set to: 57
 24616                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24617  018308  95A5               	bcf	165,2,b	;volatile
 24618                           
 24619                           ; BSR set to: 57
 24620                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24621  01830A  9BA5               	bcf	165,5,b	;volatile
 24622                           
 24623                           ; BSR set to: 57
 24624                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24625  01830C  99A5               	bcf	165,4,b	;volatile
 24626                           
 24627                           ; BSR set to: 57
 24628                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24629  01830E  9795               	bcf	149,3,b	;volatile
 24630                           
 24631                           ; BSR set to: 57
 24632                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24633  018310  9595               	bcf	149,2,b	;volatile
 24634                           
 24635                           ; BSR set to: 57
 24636                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24637  018312  9B95               	bcf	149,5,b	;volatile
 24638                           
 24639                           ; BSR set to: 57
 24640                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24641  018314  9995               	bcf	149,4,b	;volatile
 24642  018316  9ED2               	bcf	16338,7,c	;# 
 24643  018318  0139               	banksel	14831	;# 
 24644  01831A  0E55               	movlw	85	;# 
 24645  01831C  6FEF               	movwf	14831,b	;# 
 24646  01831E  0EAA               	movlw	170	;# 
 24647  018320  6FEF               	movwf	14831,b	;# 
 24648  018322  81EF               	bsf	14831,0,b	;# 
 24649  018324  8ED2               	bsf	16338,7,c	;# 
 24650                           
 24651                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24652  018326  013B               	movlb	59	; () banked
 24653  018328  6BDC               	clrf	220,b	;volatile
 24654                           
 24655                           ; BSR set to: 59
 24656                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24657  01832A  0012               	return		;funcret
 24658  01832C                     __end_of_DMA2_Initialize:
 24659                           	opt callstack 0
 24660                           
 24661 ;; *************** function _DMA1_Initialize *****************
 24662 ;; Defined at:
 24663 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;		None
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;		None
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1  [STACK] void 
 24670 ;; Registers used:
 24671 ;;		wreg, status,2
 24672 ;; Tracked objects:
 24673 ;;		On entry : 3F/3B
 24674 ;;		On exit  : 3F/3B
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;Total ram usage:        0 bytes
 24682 ;; Hardware stack levels used:    1
 24683 ;; Hardware stack levels required when called:    6
 24684 ;; This function calls:
 24685 ;;		Nothing
 24686 ;; This function is called by:
 24687 ;;		_SYSTEM_Initialize
 24688 ;; This function uses a reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text110
 24692  017E8C                     __ptext110:
 24693                           	opt callstack 0
 24694  017E8C                     _DMA1_Initialize:
 24695                           	opt callstack 23
 24696                           
 24697                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24698                           
 24699                           ; BSR set to: 59
 24700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24701                           ;incstack = 0
 24702  017E8C  0E00               	movlw	0
 24703  017E8E  013B               	movlb	59	; () banked
 24704  017E90  6FF9               	movwf	249,b	;volatile
 24705  017E92  0E10               	movlw	16
 24706  017E94  6FFA               	movwf	250,b	;volatile
 24707  017E96  0E00               	movlw	0
 24708  017E98  6FFB               	movwf	251,b	;volatile
 24709                           
 24710                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24711  017E9A  0E3D               	movlw	61
 24712  017E9C  6FF1               	movwf	241,b	;volatile
 24713  017E9E  0E11               	movlw	17
 24714  017EA0  6FF0               	movwf	240,b	;volatile
 24715                           
 24716                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24717  017EA2  0E03               	movlw	3
 24718  017EA4  6FFD               	movwf	253,b	;volatile
 24719                           
 24720                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24721  017EA6  0E00               	movlw	0
 24722  017EA8  6FF8               	movwf	248,b	;volatile
 24723  017EAA  0E01               	movlw	1
 24724  017EAC  6FF7               	movwf	247,b	;volatile
 24725                           
 24726                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24727  017EAE  0E00               	movlw	0
 24728  017EB0  6FEF               	movwf	239,b	;volatile
 24729  017EB2  0E01               	movlw	1
 24730  017EB4  6FEE               	movwf	238,b	;volatile
 24731                           
 24732                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24733  017EB6  0E15               	movlw	21
 24734  017EB8  6FFF               	movwf	255,b	;volatile
 24735                           
 24736                           ; BSR set to: 59
 24737                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24738  017EBA  6BFE               	clrf	254,b	;volatile
 24739                           
 24740                           ; BSR set to: 59
 24741                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24742  017EBC  0139               	movlb	57	; () banked
 24743  017EBE  93A2               	bcf	162,1,b	;volatile
 24744                           
 24745                           ; BSR set to: 57
 24746                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24747  017EC0  91A2               	bcf	162,0,b	;volatile
 24748                           
 24749                           ; BSR set to: 57
 24750                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24751  017EC2  97A2               	bcf	162,3,b	;volatile
 24752                           
 24753                           ; BSR set to: 57
 24754                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24755  017EC4  95A2               	bcf	162,2,b	;volatile
 24756                           
 24757                           ; BSR set to: 57
 24758                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24759  017EC6  8392               	bsf	146,1,b	;volatile
 24760                           
 24761                           ; BSR set to: 57
 24762                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24763  017EC8  8192               	bsf	146,0,b	;volatile
 24764                           
 24765                           ; BSR set to: 57
 24766                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24767  017ECA  8792               	bsf	146,3,b	;volatile
 24768                           
 24769                           ; BSR set to: 57
 24770                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24771  017ECC  8592               	bsf	146,2,b	;volatile
 24772                           
 24773                           ; BSR set to: 57
 24774                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24775  017ECE  6BF1               	clrf	241,b	;volatile
 24776                           
 24777                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24778  017ED0  0E01               	movlw	1
 24779  017ED2  6FF2               	movwf	242,b	;volatile
 24780                           
 24781                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24782  017ED4  0E04               	movlw	4
 24783  017ED6  6FF3               	movwf	243,b	;volatile
 24784                           
 24785                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24786  017ED8  0E02               	movlw	2
 24787  017EDA  6FF4               	movwf	244,b	;volatile
 24788                           
 24789                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24790  017EDC  0E03               	movlw	3
 24791  017EDE  6FF7               	movwf	247,b	;volatile
 24792  017EE0  9ED2               	bcf	16338,7,c	;# 
 24793  017EE2  0139               	banksel	14831	;# 
 24794  017EE4  0E55               	movlw	85	;# 
 24795  017EE6  6FEF               	movwf	14831,b	;# 
 24796  017EE8  0EAA               	movlw	170	;# 
 24797  017EEA  6FEF               	movwf	14831,b	;# 
 24798  017EEC  81EF               	bsf	14831,0,b	;# 
 24799  017EEE  8ED2               	bsf	16338,7,c	;# 
 24800                           
 24801                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24802  017EF0  013B               	movlb	59	; () banked
 24803  017EF2  6BFC               	clrf	252,b	;volatile
 24804                           
 24805                           ; BSR set to: 59
 24806                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24807  017EF4  0012               	return		;funcret
 24808  017EF6                     __end_of_DMA1_Initialize:
 24809                           	opt callstack 0
 24810                           
 24811 ;; *************** function _CLKREF_Initialize *****************
 24812 ;; Defined at:
 24813 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24814 ;; Parameters:    Size  Location     Type
 24815 ;;		None
 24816 ;; Auto vars:     Size  Location     Type
 24817 ;;		None
 24818 ;; Return value:  Size  Location     Type
 24819 ;;                  1  [STACK] void 
 24820 ;; Registers used:
 24821 ;;		wreg, status,2
 24822 ;; Tracked objects:
 24823 ;;		On entry : 3F/3B
 24824 ;;		On exit  : 3F/3C
 24825 ;;		Unchanged: 0/0
 24826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;Total ram usage:        0 bytes
 24832 ;; Hardware stack levels used:    1
 24833 ;; Hardware stack levels required when called:    6
 24834 ;; This function calls:
 24835 ;;		Nothing
 24836 ;; This function is called by:
 24837 ;;		_SYSTEM_Initialize
 24838 ;; This function uses a reentrant model
 24839 ;;
 24840                           
 24841                           	psect	text111
 24842  018ECE                     __ptext111:
 24843                           	opt callstack 0
 24844  018ECE                     _CLKREF_Initialize:
 24845                           	opt callstack 23
 24846                           
 24847                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24848                           
 24849                           ; BSR set to: 59
 24850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24851                           ;incstack = 0
 24852  018ECE  013C               	movlb	60	; () banked
 24853  018ED0  6BE6               	clrf	230,b	;volatile
 24854                           
 24855                           ; BSR set to: 60
 24856                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24857  018ED2  0E94               	movlw	148
 24858  018ED4  6FE5               	movwf	229,b	;volatile
 24859                           
 24860                           ; BSR set to: 60
 24861                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24862  018ED6  0012               	return		;funcret
 24863  018ED8                     __end_of_CLKREF_Initialize:
 24864                           	opt callstack 0
 24865                           
 24866 ;; *************** function _ADCC_Initialize *****************
 24867 ;; Defined at:
 24868 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;		None
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;		None
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  1  [STACK] void 
 24875 ;; Registers used:
 24876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24877 ;; Tracked objects:
 24878 ;;		On entry : 3F/3E
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24886 ;;Total ram usage:        0 bytes
 24887 ;; Hardware stack levels used:    1
 24888 ;; Hardware stack levels required when called:    7
 24889 ;; This function calls:
 24890 ;;		_ADCC_SetADIInterruptHandler
 24891 ;;		_ADCC_SetADTIInterruptHandler
 24892 ;; This function is called by:
 24893 ;;		_SYSTEM_Initialize
 24894 ;; This function uses a reentrant model
 24895 ;;
 24896                           
 24897                           	psect	text112
 24898  017EF6                     __ptext112:
 24899                           	opt callstack 0
 24900  017EF6                     _ADCC_Initialize:
 24901                           	opt callstack 22
 24902                           
 24903                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24904                           
 24905                           ; BSR set to: 60
 24906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24907                           ;incstack = 0
 24908  017EF6  013E               	movlb	62	; () banked
 24909  017EF8  6BDE               	clrf	222,b	;volatile
 24910                           
 24911                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24912  017EFA  6BDF               	clrf	223,b	;volatile
 24913                           
 24914                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24915  017EFC  6BE0               	clrf	224,b	;volatile
 24916                           
 24917                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24918  017EFE  6BE1               	clrf	225,b	;volatile
 24919                           
 24920                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24921  017F00  6BE4               	clrf	228,b	;volatile
 24922                           
 24923                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24924  017F02  6BE5               	clrf	229,b	;volatile
 24925                           
 24926                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24927  017F04  6BEA               	clrf	234,b	;volatile
 24928                           
 24929                           ; BSR set to: 62
 24930                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24931  017F06  0E40               	movlw	64
 24932  017F08  6FEC               	movwf	236,b	;volatile
 24933                           
 24934                           ; BSR set to: 62
 24935                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24936  017F0A  6BF1               	clrf	241,b	;volatile
 24937                           
 24938                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24939  017F0C  0E20               	movlw	32
 24940  017F0E  6FF3               	movwf	243,b	;volatile
 24941                           
 24942                           ; BSR set to: 62
 24943                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24944  017F10  6BF4               	clrf	244,b	;volatile
 24945                           
 24946                           ; BSR set to: 62
 24947                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24948  017F12  6BF5               	clrf	245,b	;volatile
 24949                           
 24950                           ; BSR set to: 62
 24951                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24952  017F14  6BF6               	clrf	246,b	;volatile
 24953                           
 24954                           ; BSR set to: 62
 24955                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24956  017F16  6BF7               	clrf	247,b	;volatile
 24957                           
 24958                           ; BSR set to: 62
 24959                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24960  017F18  6BF9               	clrf	249,b	;volatile
 24961                           
 24962                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24963  017F1A  0E5B               	movlw	91
 24964  017F1C  6FFA               	movwf	250,b	;volatile
 24965                           
 24966                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24967  017F1E  0E27               	movlw	39
 24968  017F20  6FFB               	movwf	251,b	;volatile
 24969                           
 24970                           ; BSR set to: 62
 24971                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24972  017F22  6BFC               	clrf	252,b	;volatile
 24973                           
 24974                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24975  017F24  0E02               	movlw	2
 24976  017F26  6FFD               	movwf	253,b	;volatile
 24977                           
 24978                           ; BSR set to: 62
 24979                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24980  017F28  6BFE               	clrf	254,b	;volatile
 24981                           
 24982                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24983  017F2A  0E07               	movlw	7
 24984  017F2C  6FFF               	movwf	255,b	;volatile
 24985                           
 24986                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24987  017F2E  0E84               	movlw	132
 24988  017F30  6FF8               	movwf	248,b	;volatile
 24989                           
 24990                           ; BSR set to: 62
 24991                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24992  017F32  0139               	movlb	57	; () banked
 24993  017F34  95A1               	bcf	161,2,b	;volatile
 24994                           
 24995                           ; BSR set to: 57
 24996                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24997  017F36  8591               	bsf	145,2,b	;volatile
 24998                           
 24999                           ; BSR set to: 57
 25000                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25001  017F38  0E3E               	movlw	low _ADCC_DefaultInterruptHandler
 25002  017F3A  6EE6               	movwf	postinc1,c
 25003  017F3C  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25004  017F3E  6EE6               	movwf	postinc1,c
 25005  017F40  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25006  017F42  6EE6               	movwf	postinc1,c
 25007  017F44  EC8E  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25008                           
 25009                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25010  017F48  0139               	movlb	57	; () banked
 25011  017F4A  97A1               	bcf	161,3,b	;volatile
 25012                           
 25013                           ; BSR set to: 57
 25014                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25015  017F4C  8791               	bsf	145,3,b	;volatile
 25016                           
 25017                           ; BSR set to: 57
 25018                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25019  017F4E  0E3E               	movlw	low _ADCC_DefaultInterruptHandler
 25020  017F50  6EE6               	movwf	postinc1,c
 25021  017F52  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25022  017F54  6EE6               	movwf	postinc1,c
 25023  017F56  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25024  017F58  6EE6               	movwf	postinc1,c
 25025  017F5A  EC7A  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25026                           
 25027                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25028  017F5E  0012               	return		;funcret
 25029  017F60                     __end_of_ADCC_Initialize:
 25030                           	opt callstack 0
 25031                           
 25032 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25033 ;; Defined at:
 25034 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25035 ;; Parameters:    Size  Location     Type
 25036 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25037 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25038 ;; Auto vars:     Size  Location     Type
 25039 ;;		None
 25040 ;; Return value:  Size  Location     Type
 25041 ;;                  1  [STACK] void 
 25042 ;; Registers used:
 25043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25044 ;; Tracked objects:
 25045 ;;		On entry : 0/0
 25046 ;;		On exit  : 0/0
 25047 ;;		Unchanged: 0/0
 25048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25053 ;;Total ram usage:        0 bytes
 25054 ;; Hardware stack levels used:    1
 25055 ;; Hardware stack levels required when called:    6
 25056 ;; This function calls:
 25057 ;;		Nothing
 25058 ;; This function is called by:
 25059 ;;		_ADCC_Initialize
 25060 ;;		_start_adc_scan
 25061 ;; This function uses a reentrant model
 25062 ;;
 25063                           
 25064                           	psect	text113
 25065  018AF4                     __ptext113:
 25066                           	opt callstack 0
 25067  018AF4                     _ADCC_SetADTIInterruptHandler:
 25068                           	opt callstack 23
 25069                           
 25070                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25071                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25072                           
 25073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25074                           ;incstack = 0
 25075  018AF4  50E1               	movf	fsr1l,w,c
 25076  018AF6  0FFD               	addlw	-3
 25077  018AF8  6ED9               	movwf	fsr2l,c
 25078  018AFA  50E2               	movf	fsr1h,w,c
 25079  018AFC  6EDA               	movwf	fsr2h,c
 25080  018AFE  0EFF               	movlw	255
 25081  018B00  22DA               	addwfc	fsr2h,f,c
 25082  018B02  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25083  018B08  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25084  018B0E  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25085                           
 25086                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25087  018B14  52E5               	movf	postdec1,f,c
 25088  018B16  52E5               	movf	postdec1,f,c
 25089  018B18  52E5               	movf	postdec1,f,c
 25090  018B1A  0012               	return		;funcret
 25091  018B1C                     __end_of_ADCC_SetADTIInterruptHandler:
 25092                           	opt callstack 0
 25093                           
 25094 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25095 ;; Defined at:
 25096 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25097 ;; Parameters:    Size  Location     Type
 25098 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25099 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25100 ;; Auto vars:     Size  Location     Type
 25101 ;;		None
 25102 ;; Return value:  Size  Location     Type
 25103 ;;                  1  [STACK] void 
 25104 ;; Registers used:
 25105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25106 ;; Tracked objects:
 25107 ;;		On entry : 6/0
 25108 ;;		On exit  : 0/0
 25109 ;;		Unchanged: 0/0
 25110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25115 ;;Total ram usage:        0 bytes
 25116 ;; Hardware stack levels used:    1
 25117 ;; Hardware stack levels required when called:    6
 25118 ;; This function calls:
 25119 ;;		Nothing
 25120 ;; This function is called by:
 25121 ;;		_ADCC_Initialize
 25122 ;;		_start_adc_scan
 25123 ;; This function uses a reentrant model
 25124 ;;
 25125                           
 25126                           	psect	text114
 25127  018B1C                     __ptext114:
 25128                           	opt callstack 0
 25129  018B1C                     _ADCC_SetADIInterruptHandler:
 25130                           	opt callstack 23
 25131                           
 25132                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25133                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25134                           
 25135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25136                           ;incstack = 0
 25137  018B1C  50E1               	movf	fsr1l,w,c
 25138  018B1E  0FFD               	addlw	-3
 25139  018B20  6ED9               	movwf	fsr2l,c
 25140  018B22  50E2               	movf	fsr1h,w,c
 25141  018B24  6EDA               	movwf	fsr2h,c
 25142  018B26  0EFF               	movlw	255
 25143  018B28  22DA               	addwfc	fsr2h,f,c
 25144  018B2A  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25145  018B30  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25146  018B36  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25147                           
 25148                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25149  018B3C  52E5               	movf	postdec1,f,c
 25150  018B3E  52E5               	movf	postdec1,f,c
 25151  018B40  52E5               	movf	postdec1,f,c
 25152  018B42  0012               	return		;funcret
 25153  018B44                     __end_of_ADCC_SetADIInterruptHandler:
 25154                           	opt callstack 0
 25155                           
 25156 ;; *************** function _TMR5_ISR *****************
 25157 ;; Defined at:
 25158 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25159 ;; Parameters:    Size  Location     Type
 25160 ;;		None
 25161 ;; Auto vars:     Size  Location     Type
 25162 ;;		None
 25163 ;; Return value:  Size  Location     Type
 25164 ;;                  1    wreg      void 
 25165 ;; Registers used:
 25166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25167 ;; Tracked objects:
 25168 ;;		On entry : 0/0
 25169 ;;		On exit  : 0/0
 25170 ;;		Unchanged: 0/0
 25171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25176 ;;Total ram usage:        4 bytes
 25177 ;; Hardware stack levels used:    1
 25178 ;; Hardware stack levels required when called:    5
 25179 ;; This function calls:
 25180 ;;		_TMR5_CallBack
 25181 ;;		_TMR5_WriteTimer
 25182 ;; This function is called by:
 25183 ;;		Interrupt level 1
 25184 ;; This function uses a non-reentrant model
 25185 ;;
 25186                           
 25187                           	psect	text115
 25188  01821C                     __ptext115:
 25189                           	opt callstack 0
 25190  01821C                     _TMR5_ISR:
 25191                           	opt callstack 12
 25192                           
 25193                           ;incstack = 0
 25194  01821C  006F FF60  F0E5    	movff	status,??_TMR5_ISR+2
 25195  018222  0060  F100  F0E6   	movff	btemp+11,??_TMR5_ISR+3
 25196  018228  EE15  F3AB         	lfsr	1,___intlo_sp
 25197                           
 25198                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25199  01822C  0139               	movlb	57	; () banked
 25200  01822E  9DA8               	bcf	168,6,b	;volatile
 25201                           
 25202                           ; BSR set to: 57
 25203                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25204  018230  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 25205  018236  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25206  01823C  ECFE  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25207                           
 25208                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25209  018240  0101               	movlb	1	; () banked
 25210  018242  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25211  018244  0100               	movlb	0	; () banked
 25212  018246  6FE3               	movwf	??_TMR5_ISR& (0+255),b
 25213  018248  6BE4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25214  01824A  0E05               	movlw	5
 25215  01824C  27E3               	addwf	??_TMR5_ISR& (0+255),f,b
 25216  01824E  0E00               	movlw	0
 25217  018250  23E4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25218  018252  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25219  018254  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25220  018256  51E3               	movf	??_TMR5_ISR& (0+255),w,b
 25221  018258  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25222  01825A  51E4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25223  01825C  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25224  01825E  A0D8               	btfss	status,0,c
 25225  018260  D004               	goto	i1l1045
 25226                           
 25227                           ; BSR set to: 0
 25228                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25229  018262  EC17  F0C6         	call	_TMR5_CallBack	;wreg free
 25230                           
 25231                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25232  018266  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25233  018268  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25234  01826A                     i1l1045:
 25235  01826A  0060  F398  F040   	movff	??_TMR5_ISR+3,btemp+11
 25236  018270  0060  F397  FFD8   	movff	??_TMR5_ISR+2,status
 25237  018276  0011               	retfie		f
 25238  018278                     __end_of_TMR5_ISR:
 25239                           	opt callstack 0
 25240                           
 25241 ;; *************** function _TMR5_WriteTimer *****************
 25242 ;; Defined at:
 25243 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25244 ;; Parameters:    Size  Location     Type
 25245 ;;  timerVal        2  [STACK] unsigned short 
 25246 ;; Auto vars:     Size  Location     Type
 25247 ;;		None
 25248 ;; Return value:  Size  Location     Type
 25249 ;;                  1  [STACK] void 
 25250 ;; Registers used:
 25251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25252 ;; Tracked objects:
 25253 ;;		On entry : 3F/39
 25254 ;;		On exit  : 0/0
 25255 ;;		Unchanged: 0/0
 25256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25261 ;;Total ram usage:        0 bytes
 25262 ;; Hardware stack levels used:    1
 25263 ;; Hardware stack levels required when called:    3
 25264 ;; This function calls:
 25265 ;;		Nothing
 25266 ;; This function is called by:
 25267 ;;		_TMR5_ISR
 25268 ;; This function uses a reentrant model
 25269 ;;
 25270                           
 25271                           	psect	text116
 25272  0185FC                     __ptext116:
 25273                           	opt callstack 0
 25274  0185FC                     _TMR5_WriteTimer:
 25275                           	opt callstack 13
 25276                           
 25277                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25278                           
 25279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25280                           ;incstack = 0
 25281  0185FC  A49A               	btfss	154,2,c	;volatile
 25282  0185FE  D00F               	goto	l8860
 25283                           
 25284                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25285  018600  909A               	bcf	154,0,c	;volatile
 25286                           
 25287                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25288                           ;stkvar	_timerVal @ sp[(0)+-2]
 25289  018602  0EFF               	movlw	255
 25290  018604  24E1               	addwf	fsr1l,w,c
 25291  018606  6ED9               	movwf	fsr2l,c
 25292  018608  0EFF               	movlw	255
 25293  01860A  20E2               	addwfc	fsr1h,w,c
 25294  01860C  6EDA               	movwf	fsr2h,c
 25295  01860E  50DF               	movf	indf2,w,c
 25296  018610  6E99               	movwf	153,c	;volatile
 25297                           
 25298                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25299                           ;stkvar	_timerVal @ sp[(0)+-2]
 25300  018612  0EFE               	movlw	-2
 25301  018614  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25302                           
 25303                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25304  01861A  809A               	bsf	154,0,c	;volatile
 25305                           
 25306                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25307  01861C  D00C               	goto	l1028
 25308  01861E                     l8860:
 25309                           
 25310                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25311                           ;stkvar	_timerVal @ sp[(0)+-2]
 25312  01861E  0EFF               	movlw	255
 25313  018620  24E1               	addwf	fsr1l,w,c
 25314  018622  6ED9               	movwf	fsr2l,c
 25315  018624  0EFF               	movlw	255
 25316  018626  20E2               	addwfc	fsr1h,w,c
 25317  018628  6EDA               	movwf	fsr2h,c
 25318  01862A  50DF               	movf	indf2,w,c
 25319  01862C  6E99               	movwf	153,c	;volatile
 25320                           
 25321                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25322                           ;stkvar	_timerVal @ sp[(0)+-2]
 25323  01862E  0EFE               	movlw	-2
 25324  018630  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25325  018636                     l1028:
 25326                           
 25327                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25328  018636  52E5               	movf	postdec1,f,c
 25329  018638  52E5               	movf	postdec1,f,c
 25330  01863A  0012               	return		;funcret
 25331  01863C                     __end_of_TMR5_WriteTimer:
 25332                           	opt callstack 0
 25333                           
 25334 ;; *************** function _TMR5_CallBack *****************
 25335 ;; Defined at:
 25336 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25337 ;; Parameters:    Size  Location     Type
 25338 ;;		None
 25339 ;; Auto vars:     Size  Location     Type
 25340 ;;		None
 25341 ;; Return value:  Size  Location     Type
 25342 ;;                  1  [STACK] void 
 25343 ;; Registers used:
 25344 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25345 ;; Tracked objects:
 25346 ;;		On entry : 3F/0
 25347 ;;		On exit  : 0/0
 25348 ;;		Unchanged: 0/0
 25349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25354 ;;Total ram usage:        0 bytes
 25355 ;; Hardware stack levels used:    1
 25356 ;; Hardware stack levels required when called:    4
 25357 ;; This function calls:
 25358 ;;		Absolute function
 25359 ;;		_TMR5_DefaultInterruptHandler
 25360 ;; This function is called by:
 25361 ;;		_TMR5_ISR
 25362 ;; This function uses a reentrant model
 25363 ;;
 25364                           
 25365                           	psect	text117
 25366  018C2E                     __ptext117:
 25367                           	opt callstack 0
 25368  018C2E                     _TMR5_CallBack:
 25369                           	opt callstack 12
 25370                           
 25371                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25372                           
 25373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25374                           ;incstack = 0
 25375  018C2E  0100               	movlb	0	; () banked
 25376  018C30  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25377  018C32  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25378  018C34  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25379  018C36  B4D8               	btfsc	status,2,c
 25380  018C38  0012               	return	
 25381                           
 25382                           ; BSR set to: 0
 25383                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25384  018C3A  D801               	call	u874_28
 25385  018C3C  0012               	return	
 25386  018C3E                     u874_28:
 25387  018C3E  0005               	push	
 25388  018C40  6EFA               	movwf	pclath,c
 25389  018C42  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25390  018C44  6EFD               	movwf	tosl,c
 25391  018C46  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25392  018C48  6EFE               	movwf	tosh,c
 25393  018C4A  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25394  018C4C  6EFF               	movwf	tosu,c
 25395  018C4E  50FA               	movf	pclath,w,c
 25396  018C50  0012               	return		;indir
 25397  018C52                     __end_of_TMR5_CallBack:
 25398                           	opt callstack 0
 25399                           
 25400 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25401 ;; Defined at:
 25402 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25403 ;; Parameters:    Size  Location     Type
 25404 ;;		None
 25405 ;; Auto vars:     Size  Location     Type
 25406 ;;		None
 25407 ;; Return value:  Size  Location     Type
 25408 ;;                  1  [STACK] void 
 25409 ;; Registers used:
 25410 ;;		wreg, status,2, status,0, btemp+11
 25411 ;; Tracked objects:
 25412 ;;		On entry : 3F/0
 25413 ;;		On exit  : 3F/1
 25414 ;;		Unchanged: 0/0
 25415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;Total ram usage:        0 bytes
 25421 ;; Hardware stack levels used:    1
 25422 ;; Hardware stack levels required when called:    3
 25423 ;; This function calls:
 25424 ;;		Nothing
 25425 ;; This function is called by:
 25426 ;;		_TMR5_Initialize
 25427 ;;		_TMR5_CallBack
 25428 ;; This function uses a reentrant model
 25429 ;;
 25430                           
 25431                           	psect	text118
 25432  018B44                     __ptext118:
 25433                           	opt callstack 0
 25434  018B44                     _TMR5_DefaultInterruptHandler:
 25435                           	opt callstack 12
 25436                           
 25437                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25438                           
 25439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25440                           ;incstack = 0
 25441  018B44  A0BE               	btfss	190,0,c	;volatile
 25442  018B46  D002               	goto	u842_20
 25443  018B48  0E01               	movlw	1
 25444  018B4A  D001               	goto	u842_26
 25445  018B4C                     u842_20:
 25446  018B4C  0E00               	movlw	0
 25447  018B4E                     u842_26:
 25448  018B4E  0AFF               	xorlw	255
 25449  018B50  6E40               	movwf	(btemp+11)^0,c
 25450  018B52  50BE               	movf	190,w,c	;volatile
 25451  018B54  1840               	xorwf	(btemp+11)^0,w,c
 25452  018B56  0BFE               	andlw	-2
 25453  018B58  1840               	xorwf	(btemp+11)^0,w,c
 25454  018B5A  6EBE               	movwf	190,c	;volatile
 25455                           
 25456                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25457  018B5C  0E01               	movlw	1
 25458  018B5E  0101               	movlb	1	; () banked
 25459  018B60  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25460  018B62  0E00               	movlw	0
 25461  018B64  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25462  018B66  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25463  018B68  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25464                           
 25465                           ; BSR set to: 1
 25466                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25467  018B6A  0012               	return		;funcret
 25468  018B6C                     __end_of_TMR5_DefaultInterruptHandler:
 25469                           	opt callstack 0
 25470                           
 25471 ;; *************** function _INT0_ISR *****************
 25472 ;; Defined at:
 25473 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25474 ;; Parameters:    Size  Location     Type
 25475 ;;		None
 25476 ;; Auto vars:     Size  Location     Type
 25477 ;;		None
 25478 ;; Return value:  Size  Location     Type
 25479 ;;                  1    wreg      void 
 25480 ;; Registers used:
 25481 ;;		wreg, status,2, status,0, pclath, tosl
 25482 ;; Tracked objects:
 25483 ;;		On entry : 0/0
 25484 ;;		On exit  : 0/0
 25485 ;;		Unchanged: 0/0
 25486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25491 ;;Total ram usage:        0 bytes
 25492 ;; Hardware stack levels used:    1
 25493 ;; Hardware stack levels required when called:    2
 25494 ;; This function calls:
 25495 ;;		_INT0_CallBack
 25496 ;; This function is called by:
 25497 ;;		Interrupt level 2
 25498 ;; This function uses a non-reentrant model
 25499 ;;
 25500                           
 25501                           	psect	text119
 25502  018EA0                     __ptext119:
 25503                           	opt callstack 0
 25504  018EA0                     _INT0_ISR:
 25505                           	opt callstack 12
 25506                           
 25507                           ; BSR set to: 1
 25508                           ;incstack = 0
 25509  018EA0  EE13  F356         	lfsr	1,___inthi_sp
 25510                           
 25511                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25512  018EA4  0139               	movlb	57	; () banked
 25513  018EA6  91A1               	bcf	161,0,b	;volatile
 25514                           
 25515                           ; BSR set to: 57
 25516                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25517  018EA8  EC29  F0C6         	call	_INT0_CallBack	;wreg free
 25518  018EAC  0011               	retfie		f
 25519  018EAE                     __end_of_INT0_ISR:
 25520                           	opt callstack 0
 25521                           
 25522 ;; *************** function _INT0_CallBack *****************
 25523 ;; Defined at:
 25524 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25525 ;; Parameters:    Size  Location     Type
 25526 ;;		None
 25527 ;; Auto vars:     Size  Location     Type
 25528 ;;		None
 25529 ;; Return value:  Size  Location     Type
 25530 ;;                  1  [STACK] void 
 25531 ;; Registers used:
 25532 ;;		wreg, status,2, status,0, pclath, tosl
 25533 ;; Tracked objects:
 25534 ;;		On entry : 3F/39
 25535 ;;		On exit  : 0/0
 25536 ;;		Unchanged: 0/0
 25537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25542 ;;Total ram usage:        0 bytes
 25543 ;; Hardware stack levels used:    1
 25544 ;; Hardware stack levels required when called:    1
 25545 ;; This function calls:
 25546 ;;		Absolute function
 25547 ;;		_INT0_DefaultInterruptHandler
 25548 ;; This function is called by:
 25549 ;;		_INT0_ISR
 25550 ;; This function uses a reentrant model
 25551 ;;
 25552                           
 25553                           	psect	text120
 25554  018C52                     __ptext120:
 25555                           	opt callstack 0
 25556  018C52                     _INT0_CallBack:
 25557                           	opt callstack 12
 25558                           
 25559                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25560                           
 25561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25562                           ;incstack = 0
 25563  018C52  5019               	movf	_INT0_InterruptHandler^0,w,c
 25564  018C54  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25565  018C56  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25566  018C58  B4D8               	btfsc	status,2,c
 25567  018C5A  0012               	return	
 25568                           
 25569                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25570  018C5C  D801               	call	u408_48
 25571  018C5E  0012               	return	
 25572  018C60                     u408_48:
 25573  018C60  0005               	push	
 25574  018C62  6EFA               	movwf	pclath,c
 25575  018C64  5019               	movf	_INT0_InterruptHandler^0,w,c
 25576  018C66  6EFD               	movwf	tosl,c
 25577  018C68  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25578  018C6A  6EFE               	movwf	tosh,c
 25579  018C6C  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25580  018C6E  6EFF               	movwf	tosu,c
 25581  018C70  50FA               	movf	pclath,w,c
 25582  018C72  0012               	return		;indir
 25583  018C74                     __end_of_INT0_CallBack:
 25584                           	opt callstack 0
 25585                           
 25586 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25587 ;; Defined at:
 25588 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25589 ;; Parameters:    Size  Location     Type
 25590 ;;		None
 25591 ;; Auto vars:     Size  Location     Type
 25592 ;;		None
 25593 ;; Return value:  Size  Location     Type
 25594 ;;                  1  [STACK] void 
 25595 ;; Registers used:
 25596 ;;		None
 25597 ;; Tracked objects:
 25598 ;;		On entry : 0/39
 25599 ;;		On exit  : 0/0
 25600 ;;		Unchanged: 0/0
 25601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25606 ;;Total ram usage:        0 bytes
 25607 ;; Hardware stack levels used:    1
 25608 ;; This function calls:
 25609 ;;		Nothing
 25610 ;; This function is called by:
 25611 ;;		_EXT_INT_Initialize
 25612 ;;		_INT0_CallBack
 25613 ;; This function uses a reentrant model
 25614 ;;
 25615                           
 25616                           	psect	text121
 25617  018F3A                     __ptext121:
 25618                           	opt callstack 0
 25619  018F3A                     _INT0_DefaultInterruptHandler:
 25620                           	opt callstack 12
 25621                           
 25622                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25623                           
 25624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25625                           ;incstack = 0
 25626  018F3A  0012               	return		;funcret
 25627  018F3C                     __end_of_INT0_DefaultInterruptHandler:
 25628                           	opt callstack 0
 25629                           
 25630 ;; *************** function _INT1_ISR *****************
 25631 ;; Defined at:
 25632 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 25633 ;; Parameters:    Size  Location     Type
 25634 ;;		None
 25635 ;; Auto vars:     Size  Location     Type
 25636 ;;		None
 25637 ;; Return value:  Size  Location     Type
 25638 ;;                  1    wreg      void 
 25639 ;; Registers used:
 25640 ;;		wreg, status,2, status,0, pclath, tosl
 25641 ;; Tracked objects:
 25642 ;;		On entry : 0/0
 25643 ;;		On exit  : 0/0
 25644 ;;		Unchanged: 0/0
 25645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25650 ;;Total ram usage:        0 bytes
 25651 ;; Hardware stack levels used:    1
 25652 ;; Hardware stack levels required when called:    2
 25653 ;; This function calls:
 25654 ;;		_INT1_CallBack
 25655 ;; This function is called by:
 25656 ;;		Interrupt level 2
 25657 ;; This function uses a non-reentrant model
 25658 ;;
 25659                           
 25660                           	psect	text122
 25661  018EB0                     __ptext122:
 25662                           	opt callstack 0
 25663  018EB0                     _INT1_ISR:
 25664                           	opt callstack 12
 25665                           
 25666                           ;incstack = 0
 25667  018EB0  EE13  F356         	lfsr	1,___inthi_sp
 25668                           
 25669                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 25670  018EB4  0139               	movlb	57	; () banked
 25671  018EB6  91A5               	bcf	165,0,b	;volatile
 25672                           
 25673                           ; BSR set to: 57
 25674                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 25675  018EB8  EC3A  F0C6         	call	_INT1_CallBack	;wreg free
 25676  018EBC  0011               	retfie		f
 25677  018EBE                     __end_of_INT1_ISR:
 25678                           	opt callstack 0
 25679                           
 25680 ;; *************** function _INT1_CallBack *****************
 25681 ;; Defined at:
 25682 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 25683 ;; Parameters:    Size  Location     Type
 25684 ;;		None
 25685 ;; Auto vars:     Size  Location     Type
 25686 ;;		None
 25687 ;; Return value:  Size  Location     Type
 25688 ;;                  1  [STACK] void 
 25689 ;; Registers used:
 25690 ;;		wreg, status,2, status,0, pclath, tosl
 25691 ;; Tracked objects:
 25692 ;;		On entry : 3F/39
 25693 ;;		On exit  : 0/0
 25694 ;;		Unchanged: 0/0
 25695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;Total ram usage:        0 bytes
 25701 ;; Hardware stack levels used:    1
 25702 ;; Hardware stack levels required when called:    1
 25703 ;; This function calls:
 25704 ;;		Absolute function
 25705 ;;		_INT1_DefaultInterruptHandler
 25706 ;; This function is called by:
 25707 ;;		_INT1_ISR
 25708 ;; This function uses a reentrant model
 25709 ;;
 25710                           
 25711                           	psect	text123
 25712  018C74                     __ptext123:
 25713                           	opt callstack 0
 25714  018C74                     _INT1_CallBack:
 25715                           	opt callstack 12
 25716                           
 25717                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 25718                           
 25719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25720                           ;incstack = 0
 25721  018C74  5016               	movf	_INT1_InterruptHandler^0,w,c
 25722  018C76  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25723  018C78  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25724  018C7A  B4D8               	btfsc	status,2,c
 25725  018C7C  0012               	return	
 25726                           
 25727                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 25728  018C7E  D801               	call	u410_48
 25729  018C80  0012               	return	
 25730  018C82                     u410_48:
 25731  018C82  0005               	push	
 25732  018C84  6EFA               	movwf	pclath,c
 25733  018C86  5016               	movf	_INT1_InterruptHandler^0,w,c
 25734  018C88  6EFD               	movwf	tosl,c
 25735  018C8A  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25736  018C8C  6EFE               	movwf	tosh,c
 25737  018C8E  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25738  018C90  6EFF               	movwf	tosu,c
 25739  018C92  50FA               	movf	pclath,w,c
 25740  018C94  0012               	return		;indir
 25741  018C96                     __end_of_INT1_CallBack:
 25742                           	opt callstack 0
 25743                           
 25744 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25745 ;; Defined at:
 25746 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;		None
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1  [STACK] void 
 25753 ;; Registers used:
 25754 ;;		None
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/39
 25757 ;;		On exit  : 0/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;Total ram usage:        0 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; This function calls:
 25767 ;;		Nothing
 25768 ;; This function is called by:
 25769 ;;		_EXT_INT_Initialize
 25770 ;;		_INT1_CallBack
 25771 ;; This function uses a reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text124
 25775  018F3C                     __ptext124:
 25776                           	opt callstack 0
 25777  018F3C                     _INT1_DefaultInterruptHandler:
 25778                           	opt callstack 12
 25779                           
 25780                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25781                           
 25782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25783                           ;incstack = 0
 25784  018F3C  0012               	return		;funcret
 25785  018F3E                     __end_of_INT1_DefaultInterruptHandler:
 25786                           	opt callstack 0
 25787                           
 25788 ;; *************** function _Default_ISR *****************
 25789 ;; Defined at:
 25790 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25791 ;; Parameters:    Size  Location     Type
 25792 ;;		None
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;		None
 25795 ;; Return value:  Size  Location     Type
 25796 ;;                  1    wreg      void 
 25797 ;; Registers used:
 25798 ;;		None
 25799 ;; Tracked objects:
 25800 ;;		On entry : 0/0
 25801 ;;		On exit  : 0/0
 25802 ;;		Unchanged: 0/0
 25803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25808 ;;Total ram usage:        0 bytes
 25809 ;; Hardware stack levels used:    1
 25810 ;; This function calls:
 25811 ;;		Nothing
 25812 ;; This function is called by:
 25813 ;;		Interrupt level 2
 25814 ;; This function uses a non-reentrant model
 25815 ;;
 25816                           
 25817                           	psect	text125
 25818  018F34                     __ptext125:
 25819                           	opt callstack 0
 25820  018F34                     _Default_ISR:
 25821                           	opt callstack 14
 25822                           
 25823                           ;incstack = 0
 25824  018F34  EE13  F356         	lfsr	1,___inthi_sp
 25825  018F38  0011               	retfie		f
 25826  018F3A                     __end_of_Default_ISR:
 25827                           	opt callstack 0
 25828                           
 25829 ;; *************** function _ADCC_ISR *****************
 25830 ;; Defined at:
 25831 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25832 ;; Parameters:    Size  Location     Type
 25833 ;;		None
 25834 ;; Auto vars:     Size  Location     Type
 25835 ;;		None
 25836 ;; Return value:  Size  Location     Type
 25837 ;;                  1    wreg      void 
 25838 ;; Registers used:
 25839 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25840 ;; Tracked objects:
 25841 ;;		On entry : 0/0
 25842 ;;		On exit  : 0/0
 25843 ;;		Unchanged: 0/0
 25844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25849 ;;Total ram usage:        1 bytes
 25850 ;; Hardware stack levels used:    1
 25851 ;; Hardware stack levels required when called:    1
 25852 ;; This function calls:
 25853 ;;		Absolute function
 25854 ;;		_ADCC_DefaultInterruptHandler
 25855 ;;		_adc_int_handler
 25856 ;; This function is called by:
 25857 ;;		Interrupt level 2
 25858 ;; This function uses a non-reentrant model
 25859 ;;
 25860                           
 25861                           	psect	text126
 25862  0186F0                     __ptext126:
 25863                           	opt callstack 0
 25864  0186F0                     _ADCC_ISR:
 25865                           	opt callstack 13
 25866                           
 25867                           ;incstack = 0
 25868  0186F0  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 25869  0186F6  EE13  F356         	lfsr	1,___inthi_sp
 25870                           
 25871                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25872  0186FA  0139               	movlb	57	; () banked
 25873  0186FC  95A1               	bcf	161,2,b	;volatile
 25874                           
 25875                           ; BSR set to: 57
 25876                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25877  0186FE  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25878  018700  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25879  018702  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25880  018704  B4D8               	btfsc	status,2,c
 25881  018706  D00C               	goto	i2u438_49
 25882                           
 25883                           ; BSR set to: 57
 25884                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25885  018708  D801               	call	i2u438_48
 25886  01870A  D00A               	goto	i2u438_49
 25887  01870C                     i2u438_48:
 25888  01870C  0005               	push	
 25889  01870E  6EFA               	movwf	pclath,c
 25890  018710  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25891  018712  6EFD               	movwf	tosl,c
 25892  018714  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25893  018716  6EFE               	movwf	tosh,c
 25894  018718  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25895  01871A  6EFF               	movwf	tosu,c
 25896  01871C  50FA               	movf	pclath,w,c
 25897  01871E  0012               	return		;indir
 25898  018720                     i2u438_49:
 25899  018720  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 25900  018726  0011               	retfie		f
 25901  018728                     __end_of_ADCC_ISR:
 25902                           	opt callstack 0
 25903                           
 25904 ;; *************** function _adc_int_t_handler *****************
 25905 ;; Defined at:
 25906 ;;		line 127 in file "daq.c"
 25907 ;; Parameters:    Size  Location     Type
 25908 ;;		None
 25909 ;; Auto vars:     Size  Location     Type
 25910 ;;		None
 25911 ;; Return value:  Size  Location     Type
 25912 ;;                  1  [STACK] void 
 25913 ;; Registers used:
 25914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25915 ;; Tracked objects:
 25916 ;;		On entry : 3F/39
 25917 ;;		On exit  : 1/0
 25918 ;;		Unchanged: 0/0
 25919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;Total ram usage:        0 bytes
 25925 ;; Hardware stack levels used:    1
 25926 ;; Hardware stack levels required when called:    1
 25927 ;; This function calls:
 25928 ;;		_ADCC_DischargeSampleCapacitor
 25929 ;;		_ADCC_StartConversion
 25930 ;; This function is called by:
 25931 ;;		_start_adc_scan
 25932 ;;		_ADCC_ThresholdISR
 25933 ;; This function uses a reentrant model
 25934 ;;
 25935                           
 25936                           	psect	text127
 25937  017A2E                     __ptext127:
 25938                           	opt callstack 0
 25939  017A2E                     _adc_int_t_handler:
 25940                           	opt callstack 12
 25941                           
 25942                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25943                           
 25944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25945                           ;incstack = 0
 25946  017A2E  013E               	movlb	62	; () banked
 25947  017A30  51E6               	movf	230,w,b	;volatile
 25948  017A32  006F FB9C  F035    	movff	16103,btemp	;volatile
 25949  017A38  6A36               	clrf	(btemp+1)^0,c
 25950  017A3A  0060  F0D4  F036   	movff	btemp,btemp+1
 25951  017A40  6A35               	clrf	btemp^0,c
 25952  017A42  2635               	addwf	btemp^0,f,c
 25953  017A44  0E00               	movlw	0
 25954  017A46  2236               	addwfc	(btemp+1)^0,f,c
 25955  017A48  0100               	movlb	0	; () banked
 25956  017A4A  51C7               	movf	(_R+36)& (0+255),w,b	;volatile
 25957  017A4C  0D02               	mullw	2
 25958  017A4E  50F3               	movf	243,w,c
 25959  017A50  0FA3               	addlw	low _R
 25960  017A52  6ED9               	movwf	fsr2l,c
 25961  017A54  6ADA               	clrf	fsr2h,c
 25962  017A56  0060  F0D7  FFDE   	movff	btemp,postinc2
 25963  017A5C  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 25964  017A62                     l9014:
 25965                           
 25966                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 25967  017A62  0100               	movlb	0	; () banked
 25968  017A64  2BC7               	incf	(_R+36)& (0+255),f,b	;volatile
 25969  017A66  0E0D               	movlw	13
 25970  017A68  65C7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25971  017A6A  D004               	goto	l9022
 25972                           
 25973                           ; BSR set to: 0
 25974                           ;daq.c: 135:    R.done = 1;
 25975  017A6C  0E01               	movlw	1
 25976  017A6E  6FCA               	movwf	(_R+39)& (0+255),b	;volatile
 25977                           
 25978                           ; BSR set to: 0
 25979  017A70  92BE               	bcf	190,1,c	;volatile
 25980  017A72  0012               	return	
 25981  017A74                     l9022:
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25985  017A74  0060  F31C  F040   	movff	_R+36,btemp+11	;volatile
 25986  017A7A  EE20  F0C8         	lfsr	2,_R+37	;volatile
 25987  017A7E  006F FF78  F03D    	movff	postinc2,btemp+8
 25988  017A84  006F FF74  F03E    	movff	postdec2,btemp+9
 25989  017A8A  2A40               	incf	(btemp+11)^0,f,c
 25990  017A8C  D003               	goto	u886_44
 25991  017A8E                     u886_45:
 25992  017A8E  90D8               	bcf	status,0,c
 25993  017A90  323E               	rrcf	(btemp+9)^0,f,c
 25994  017A92  323D               	rrcf	(btemp+8)^0,f,c
 25995  017A94                     u886_44:
 25996  017A94  2E40               	decfsz	(btemp+11)^0,f,c
 25997  017A96  D7FB               	goto	u886_45
 25998  017A98  A03D               	btfss	(btemp+8)^0,0,c
 25999  017A9A  D7E3               	goto	l9014
 26000                           
 26001                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 26002  017A9C  EC7D  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26003                           
 26004                           ; BSR set to: 62
 26005                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 26006  017AA0  0100               	movlb	0	; () banked
 26007  017AA2  51C7               	movf	(_R+36)& (0+255),w,b	;volatile
 26008  017AA4  0B0F               	andlw	15
 26009  017AA6  6EE6               	movwf	postinc1,c
 26010  017AA8  EC30  F0C7         	call	_ADCC_StartConversion	;wreg free
 26011                           
 26012                           ; BSR set to: 62
 26013  017AAC  A2BE               	btfss	190,1,c	;volatile
 26014  017AAE  D002               	goto	u888_40
 26015  017AB0  0E01               	movlw	1
 26016  017AB2  D001               	goto	u888_46
 26017  017AB4                     u888_40:
 26018  017AB4  0E00               	movlw	0
 26019  017AB6                     u888_46:
 26020  017AB6  0AFF               	xorlw	255
 26021  017AB8  6E40               	movwf	(btemp+11)^0,c
 26022  017ABA  4640               	rlncf	(btemp+11)^0,f,c
 26023  017ABC  50BE               	movf	190,w,c	;volatile
 26024  017ABE  1840               	xorwf	(btemp+11)^0,w,c
 26025  017AC0  0BFD               	andlw	-3
 26026  017AC2  1840               	xorwf	(btemp+11)^0,w,c
 26027  017AC4  6EBE               	movwf	190,c	;volatile
 26028                           
 26029                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26030  017AC6  0012               	return		;funcret
 26031  017AC8                     __end_of_adc_int_t_handler:
 26032                           	opt callstack 0
 26033                           
 26034 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26035 ;; Defined at:
 26036 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26037 ;; Parameters:    Size  Location     Type
 26038 ;;		None
 26039 ;; Auto vars:     Size  Location     Type
 26040 ;;		None
 26041 ;; Return value:  Size  Location     Type
 26042 ;;                  1  [STACK] void 
 26043 ;; Registers used:
 26044 ;;		None
 26045 ;; Tracked objects:
 26046 ;;		On entry : 3F/39
 26047 ;;		On exit  : 0/0
 26048 ;;		Unchanged: 0/0
 26049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26054 ;;Total ram usage:        0 bytes
 26055 ;; Hardware stack levels used:    1
 26056 ;; This function calls:
 26057 ;;		Nothing
 26058 ;; This function is called by:
 26059 ;;		_ADCC_Initialize
 26060 ;;		_ADCC_ISR
 26061 ;;		_ADCC_ThresholdISR
 26062 ;; This function uses a reentrant model
 26063 ;;
 26064                           
 26065                           	psect	text128
 26066  018F3E                     __ptext128:
 26067                           	opt callstack 0
 26068  018F3E                     _ADCC_DefaultInterruptHandler:
 26069                           	opt callstack 13
 26070                           
 26071                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26072                           
 26073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26074                           ;incstack = 0
 26075  018F3E  0012               	return		;funcret
 26076  018F40                     __end_of_ADCC_DefaultInterruptHandler:
 26077                           	opt callstack 0
 26078                           
 26079 ;; *************** function _adc_int_handler *****************
 26080 ;; Defined at:
 26081 ;;		line 117 in file "daq.c"
 26082 ;; Parameters:    Size  Location     Type
 26083 ;;		None
 26084 ;; Auto vars:     Size  Location     Type
 26085 ;;		None
 26086 ;; Return value:  Size  Location     Type
 26087 ;;                  1  [STACK] void 
 26088 ;; Registers used:
 26089 ;;		wreg, status,2, status,0, btemp+11
 26090 ;; Tracked objects:
 26091 ;;		On entry : 3F/39
 26092 ;;		On exit  : 0/0
 26093 ;;		Unchanged: 0/0
 26094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26099 ;;Total ram usage:        0 bytes
 26100 ;; Hardware stack levels used:    1
 26101 ;; This function calls:
 26102 ;;		Nothing
 26103 ;; This function is called by:
 26104 ;;		_start_adc_scan
 26105 ;;		_ADCC_ISR
 26106 ;; This function uses a reentrant model
 26107 ;;
 26108                           
 26109                           	psect	text129
 26110  018D12                     __ptext129:
 26111                           	opt callstack 0
 26112  018D12                     _adc_int_handler:
 26113                           	opt callstack 13
 26114                           
 26115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26116                           ;incstack = 0
 26117                           ;daq.c: 120:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 26118  018D12  A4BE               	btfss	190,2,c	;volatile
 26119  018D14  D002               	goto	u432_40
 26120  018D16  0E01               	movlw	1
 26121  018D18  D001               	goto	u432_46
 26122  018D1A                     u432_40:
 26123  018D1A  0E00               	movlw	0
 26124  018D1C                     u432_46:
 26125  018D1C  0AFF               	xorlw	255
 26126  018D1E  6E40               	movwf	(btemp+11)^0,c
 26127  018D20  4640               	rlncf	(btemp+11)^0,f,c
 26128  018D22  4640               	rlncf	(btemp+11)^0,f,c
 26129  018D24  50BE               	movf	190,w,c	;volatile
 26130  018D26  1840               	xorwf	(btemp+11)^0,w,c
 26131  018D28  0BFB               	andlw	-5
 26132  018D2A  1840               	xorwf	(btemp+11)^0,w,c
 26133  018D2C  6EBE               	movwf	190,c	;volatile
 26134                           
 26135                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26136  018D2E  0012               	return		;funcret
 26137  018D30                     __end_of_adc_int_handler:
 26138                           	opt callstack 0
 26139                           
 26140 ;; *************** function _ADCC_ThresholdISR *****************
 26141 ;; Defined at:
 26142 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26143 ;; Parameters:    Size  Location     Type
 26144 ;;		None
 26145 ;; Auto vars:     Size  Location     Type
 26146 ;;		None
 26147 ;; Return value:  Size  Location     Type
 26148 ;;                  1    wreg      void 
 26149 ;; Registers used:
 26150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26151 ;; Tracked objects:
 26152 ;;		On entry : 0/0
 26153 ;;		On exit  : 0/0
 26154 ;;		Unchanged: 0/0
 26155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26158 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26159 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;Total ram usage:        5 bytes
 26161 ;; Hardware stack levels used:    1
 26162 ;; Hardware stack levels required when called:    2
 26163 ;; This function calls:
 26164 ;;		Absolute function
 26165 ;;		_ADCC_DefaultInterruptHandler
 26166 ;;		_adc_int_t_handler
 26167 ;; This function is called by:
 26168 ;;		Interrupt level 2
 26169 ;; This function uses a non-reentrant model
 26170 ;;
 26171                           
 26172                           	psect	text130
 26173  017FC8                     __ptext130:
 26174                           	opt callstack 0
 26175  017FC8                     _ADCC_ThresholdISR:
 26176                           	opt callstack 12
 26177                           
 26178                           ;incstack = 0
 26179  017FC8  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 26180  017FCE  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26181  017FD4  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26182  017FDA  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26183  017FE0  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26184  017FE6  EE13  F356         	lfsr	1,___inthi_sp
 26185                           
 26186                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26187  017FEA  0139               	movlb	57	; () banked
 26188  017FEC  97A1               	bcf	161,3,b	;volatile
 26189                           
 26190                           ; BSR set to: 57
 26191                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26192  017FEE  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26193  017FF0  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26194  017FF2  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26195  017FF4  B4D8               	btfsc	status,2,c
 26196  017FF6  D00C               	goto	i2u890_49
 26197                           
 26198                           ; BSR set to: 57
 26199                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26200  017FF8  D801               	call	i2u890_48
 26201  017FFA  D00A               	goto	i2u890_49
 26202  017FFC                     i2u890_48:
 26203  017FFC  0005               	push	
 26204  017FFE  6EFA               	movwf	pclath,c
 26205  018000  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26206  018002  6EFD               	movwf	tosl,c
 26207  018004  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26208  018006  6EFE               	movwf	tosh,c
 26209  018008  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26210  01800A  6EFF               	movwf	tosu,c
 26211  01800C  50FA               	movf	pclath,w,c
 26212  01800E  0012               	return		;indir
 26213  018010                     i2u890_49:
 26214  018010  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26215  018016  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26216  01801C  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26217  018022  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26218  018028  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 26219  01802E  0011               	retfie		f
 26220  018030                     __end_of_ADCC_ThresholdISR:
 26221                           	opt callstack 0
 26222                           
 26223 ;; *************** function _UART1_tx_vect_isr *****************
 26224 ;; Defined at:
 26225 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26226 ;; Parameters:    Size  Location     Type
 26227 ;;		None
 26228 ;; Auto vars:     Size  Location     Type
 26229 ;;		None
 26230 ;; Return value:  Size  Location     Type
 26231 ;;                  1    wreg      void 
 26232 ;; Registers used:
 26233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26234 ;; Tracked objects:
 26235 ;;		On entry : 0/0
 26236 ;;		On exit  : 0/0
 26237 ;;		Unchanged: 0/0
 26238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26243 ;;Total ram usage:        0 bytes
 26244 ;; Hardware stack levels used:    1
 26245 ;; Hardware stack levels required when called:    1
 26246 ;; This function calls:
 26247 ;;		Absolute function
 26248 ;;		_UART1_Transmit_ISR
 26249 ;; This function is called by:
 26250 ;;		Interrupt level 2
 26251 ;; This function uses a non-reentrant model
 26252 ;;
 26253                           
 26254                           	psect	text131
 26255  018B6C                     __ptext131:
 26256                           	opt callstack 0
 26257  018B6C                     _UART1_tx_vect_isr:
 26258                           	opt callstack 13
 26259                           
 26260                           ;incstack = 0
 26261  018B6C  EE13  F356         	lfsr	1,___inthi_sp
 26262                           
 26263                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26264  018B70  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26265  018B72  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26266  018B74  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26267  018B76  B4D8               	btfsc	status,2,c
 26268  018B78  0011               	retfie		f
 26269                           
 26270                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26271  018B7A  D801               	call	i2u1076_48
 26272  018B7C  0011               	retfie		f
 26273  018B7E                     i2u1076_48:
 26274  018B7E  0005               	push	
 26275  018B80  6EFA               	movwf	pclath,c
 26276  018B82  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26277  018B84  6EFD               	movwf	tosl,c
 26278  018B86  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26279  018B88  6EFE               	movwf	tosh,c
 26280  018B8A  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26281  018B8C  6EFF               	movwf	tosu,c
 26282  018B8E  50FA               	movf	pclath,w,c
 26283  018B90  0012               	return		;indir
 26284  018B92                     __end_of_UART1_tx_vect_isr:
 26285                           	opt callstack 0
 26286                           
 26287 ;; *************** function _UART1_Transmit_ISR *****************
 26288 ;; Defined at:
 26289 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26290 ;; Parameters:    Size  Location     Type
 26291 ;;		None
 26292 ;; Auto vars:     Size  Location     Type
 26293 ;;		None
 26294 ;; Return value:  Size  Location     Type
 26295 ;;                  1  [STACK] void 
 26296 ;; Registers used:
 26297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26298 ;; Tracked objects:
 26299 ;;		On entry : 0/0
 26300 ;;		On exit  : 3B/39
 26301 ;;		Unchanged: 0/0
 26302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;Total ram usage:        0 bytes
 26308 ;; Hardware stack levels used:    1
 26309 ;; This function calls:
 26310 ;;		Nothing
 26311 ;; This function is called by:
 26312 ;;		_UART1_Initialize
 26313 ;;		_UART1_tx_vect_isr
 26314 ;; This function uses a reentrant model
 26315 ;;
 26316                           
 26317                           	psect	text132
 26318  0188BA                     __ptext132:
 26319                           	opt callstack 0
 26320  0188BA                     _UART1_Transmit_ISR:
 26321                           	opt callstack 13
 26322                           
 26323                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26324                           
 26325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26326                           ;incstack = 0
 26327  0188BA  0E40               	movlw	64
 26328  0188BC  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 26329  0188BE  D010               	goto	l581
 26330                           
 26331                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26332  0188C0  0E6C               	movlw	low _uart1TxBuffer
 26333  0188C2  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 26334  0188C4  6ED9               	movwf	fsr2l,c
 26335  0188C6  6ADA               	clrf	fsr2h,c
 26336  0188C8  0E02               	movlw	high _uart1TxBuffer
 26337  0188CA  22DA               	addwfc	fsr2h,f,c
 26338  0188CC  50DF               	movf	indf2,w,c
 26339  0188CE  013D               	movlb	61	; () banked
 26340  0188D0  6FEA               	movwf	234,b	;volatile
 26341                           
 26342                           ; BSR set to: 61
 26343  0188D2  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 26344                           
 26345                           ; BSR set to: 61
 26346                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26347  0188D4  0E3F               	movlw	63
 26348  0188D6  6433               	cpfsgt	_uart1TxTail^0,c
 26349  0188D8  D001               	goto	l8812
 26350                           
 26351                           ; BSR set to: 61
 26352                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26353  0188DA  6A33               	clrf	_uart1TxTail^0,c	;volatile
 26354  0188DC                     l8812:
 26355                           
 26356                           ; BSR set to: 61
 26357                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26358  0188DC  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26359                           
 26360                           ;mcc_generated_files/uart1.c: 222:  } else {
 26361  0188DE  0012               	return	
 26362  0188E0                     l581:
 26363                           
 26364                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26365  0188E0  0139               	movlb	57	; () banked
 26366  0188E2  9993               	bcf	147,4,b	;volatile
 26367                           
 26368                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26369  0188E4  0012               	return		;funcret
 26370  0188E6                     __end_of_UART1_Transmit_ISR:
 26371                           	opt callstack 0
 26372                           
 26373 ;; *************** function _UART1_rx_vect_isr *****************
 26374 ;; Defined at:
 26375 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26376 ;; Parameters:    Size  Location     Type
 26377 ;;		None
 26378 ;; Auto vars:     Size  Location     Type
 26379 ;;		None
 26380 ;; Return value:  Size  Location     Type
 26381 ;;                  1    wreg      void 
 26382 ;; Registers used:
 26383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26384 ;; Tracked objects:
 26385 ;;		On entry : 0/0
 26386 ;;		On exit  : 0/0
 26387 ;;		Unchanged: 0/0
 26388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26393 ;;Total ram usage:        0 bytes
 26394 ;; Hardware stack levels used:    1
 26395 ;; Hardware stack levels required when called:    1
 26396 ;; This function calls:
 26397 ;;		Absolute function
 26398 ;;		_UART1_Receive_ISR
 26399 ;; This function is called by:
 26400 ;;		Interrupt level 2
 26401 ;; This function uses a non-reentrant model
 26402 ;;
 26403                           
 26404                           	psect	text133
 26405  018B94                     __ptext133:
 26406                           	opt callstack 0
 26407  018B94                     _UART1_rx_vect_isr:
 26408                           	opt callstack 13
 26409                           
 26410                           ;incstack = 0
 26411  018B94  EE13  F356         	lfsr	1,___inthi_sp
 26412                           
 26413                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26414  018B98  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26415  018B9A  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26416  018B9C  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26417  018B9E  B4D8               	btfsc	status,2,c
 26418  018BA0  0011               	retfie		f
 26419                           
 26420                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26421  018BA2  D801               	call	i2u1078_48
 26422  018BA4  0011               	retfie		f
 26423  018BA6                     i2u1078_48:
 26424  018BA6  0005               	push	
 26425  018BA8  6EFA               	movwf	pclath,c
 26426  018BAA  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26427  018BAC  6EFD               	movwf	tosl,c
 26428  018BAE  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26429  018BB0  6EFE               	movwf	tosh,c
 26430  018BB2  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26431  018BB4  6EFF               	movwf	tosu,c
 26432  018BB6  50FA               	movf	pclath,w,c
 26433  018BB8  0012               	return		;indir
 26434  018BBA                     __end_of_UART1_rx_vect_isr:
 26435                           	opt callstack 0
 26436                           
 26437 ;; *************** function _UART1_Receive_ISR *****************
 26438 ;; Defined at:
 26439 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26440 ;; Parameters:    Size  Location     Type
 26441 ;;		None
 26442 ;; Auto vars:     Size  Location     Type
 26443 ;;		None
 26444 ;; Return value:  Size  Location     Type
 26445 ;;                  1  [STACK] void 
 26446 ;; Registers used:
 26447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26448 ;; Tracked objects:
 26449 ;;		On entry : 0/0
 26450 ;;		On exit  : 0/0
 26451 ;;		Unchanged: 0/0
 26452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;Total ram usage:        0 bytes
 26458 ;; Hardware stack levels used:    1
 26459 ;; This function calls:
 26460 ;;		Nothing
 26461 ;; This function is called by:
 26462 ;;		_UART1_Initialize
 26463 ;;		_UART1_rx_vect_isr
 26464 ;; This function uses a reentrant model
 26465 ;;
 26466                           
 26467                           	psect	text134
 26468  018D30                     __ptext134:
 26469                           	opt callstack 0
 26470  018D30                     _UART1_Receive_ISR:
 26471                           	opt callstack 13
 26472                           
 26473                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26474                           
 26475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26476                           ;incstack = 0
 26477  018D30  0E00               	movlw	low _uart1RxBuffer
 26478  018D32  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 26479  018D34  6ED9               	movwf	fsr2l,c
 26480  018D36  6ADA               	clrf	fsr2h,c
 26481  018D38  0E05               	movlw	high _uart1RxBuffer
 26482  018D3A  22DA               	addwfc	fsr2h,f,c
 26483  018D3C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26484  018D42  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 26485                           
 26486                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26487  018D44  2831               	incf	_uart1RxHead^0,w,c
 26488  018D46  B4D8               	btfsc	status,2,c
 26489                           
 26490                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26491  018D48  6A31               	clrf	_uart1RxHead^0,c	;volatile
 26492                           
 26493                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26494  018D4A  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 26495                           
 26496                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26497  018D4C  0012               	return		;funcret
 26498  018D4E                     __end_of_UART1_Receive_ISR:
 26499                           	opt callstack 0
 26500                           
 26501 ;; *************** function _UART2_tx_vect_isr *****************
 26502 ;; Defined at:
 26503 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26504 ;; Parameters:    Size  Location     Type
 26505 ;;		None
 26506 ;; Auto vars:     Size  Location     Type
 26507 ;;		None
 26508 ;; Return value:  Size  Location     Type
 26509 ;;                  1    wreg      void 
 26510 ;; Registers used:
 26511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26512 ;; Tracked objects:
 26513 ;;		On entry : 0/0
 26514 ;;		On exit  : 0/0
 26515 ;;		Unchanged: 0/0
 26516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26521 ;;Total ram usage:        0 bytes
 26522 ;; Hardware stack levels used:    1
 26523 ;; Hardware stack levels required when called:    1
 26524 ;; This function calls:
 26525 ;;		Absolute function
 26526 ;;		_UART2_Transmit_ISR
 26527 ;; This function is called by:
 26528 ;;		Interrupt level 2
 26529 ;; This function uses a non-reentrant model
 26530 ;;
 26531                           
 26532                           	psect	text135
 26533  018BBC                     __ptext135:
 26534                           	opt callstack 0
 26535  018BBC                     _UART2_tx_vect_isr:
 26536                           	opt callstack 13
 26537                           
 26538                           ;incstack = 0
 26539  018BBC  EE13  F356         	lfsr	1,___inthi_sp
 26540                           
 26541                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26542  018BC0  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26543  018BC2  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26544  018BC4  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26545  018BC6  B4D8               	btfsc	status,2,c
 26546  018BC8  0011               	retfie		f
 26547                           
 26548                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26549  018BCA  D801               	call	i2u1080_48
 26550  018BCC  0011               	retfie		f
 26551  018BCE                     i2u1080_48:
 26552  018BCE  0005               	push	
 26553  018BD0  6EFA               	movwf	pclath,c
 26554  018BD2  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26555  018BD4  6EFD               	movwf	tosl,c
 26556  018BD6  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26557  018BD8  6EFE               	movwf	tosh,c
 26558  018BDA  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26559  018BDC  6EFF               	movwf	tosu,c
 26560  018BDE  50FA               	movf	pclath,w,c
 26561  018BE0  0012               	return		;indir
 26562  018BE2                     __end_of_UART2_tx_vect_isr:
 26563                           	opt callstack 0
 26564                           
 26565 ;; *************** function _UART2_Transmit_ISR *****************
 26566 ;; Defined at:
 26567 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26568 ;; Parameters:    Size  Location     Type
 26569 ;;		None
 26570 ;; Auto vars:     Size  Location     Type
 26571 ;;		None
 26572 ;; Return value:  Size  Location     Type
 26573 ;;                  1  [STACK] void 
 26574 ;; Registers used:
 26575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26576 ;; Tracked objects:
 26577 ;;		On entry : 0/0
 26578 ;;		On exit  : 3B/39
 26579 ;;		Unchanged: 0/0
 26580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26585 ;;Total ram usage:        0 bytes
 26586 ;; Hardware stack levels used:    1
 26587 ;; This function calls:
 26588 ;;		Nothing
 26589 ;; This function is called by:
 26590 ;;		_UART2_Initialize
 26591 ;;		_UART2_tx_vect_isr
 26592 ;; This function uses a reentrant model
 26593 ;;
 26594                           
 26595                           	psect	text136
 26596  0188E6                     __ptext136:
 26597                           	opt callstack 0
 26598  0188E6                     _UART2_Transmit_ISR:
 26599                           	opt callstack 13
 26600                           
 26601                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26602                           
 26603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26604                           ;incstack = 0
 26605  0188E6  0E40               	movlw	64
 26606  0188E8  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 26607  0188EA  D010               	goto	l701
 26608                           
 26609                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26610  0188EC  0E00               	movlw	low _uart2TxBuffer
 26611  0188EE  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 26612  0188F0  6ED9               	movwf	fsr2l,c
 26613  0188F2  6ADA               	clrf	fsr2h,c
 26614  0188F4  0E03               	movlw	high _uart2TxBuffer
 26615  0188F6  22DA               	addwfc	fsr2h,f,c
 26616  0188F8  50DF               	movf	indf2,w,c
 26617  0188FA  013D               	movlb	61	; () banked
 26618  0188FC  6FD2               	movwf	210,b	;volatile
 26619                           
 26620                           ; BSR set to: 61
 26621  0188FE  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 26622                           
 26623                           ; BSR set to: 61
 26624                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26625  018900  0E3F               	movlw	63
 26626  018902  642D               	cpfsgt	_uart2TxTail^0,c
 26627  018904  D001               	goto	l8834
 26628                           
 26629                           ; BSR set to: 61
 26630                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26631  018906  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 26632  018908                     l8834:
 26633                           
 26634                           ; BSR set to: 61
 26635                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26636  018908  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26637                           
 26638                           ;mcc_generated_files/uart2.c: 224:     }
 26639  01890A  0012               	return	
 26640  01890C                     l701:
 26641                           
 26642                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26643  01890C  0139               	movlb	57	; () banked
 26644  01890E  9796               	bcf	150,3,b	;volatile
 26645                           
 26646                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26647  018910  0012               	return		;funcret
 26648  018912                     __end_of_UART2_Transmit_ISR:
 26649                           	opt callstack 0
 26650                           
 26651 ;; *************** function _UART2_rx_vect_isr *****************
 26652 ;; Defined at:
 26653 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26654 ;; Parameters:    Size  Location     Type
 26655 ;;		None
 26656 ;; Auto vars:     Size  Location     Type
 26657 ;;		None
 26658 ;; Return value:  Size  Location     Type
 26659 ;;                  1    wreg      void 
 26660 ;; Registers used:
 26661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26662 ;; Tracked objects:
 26663 ;;		On entry : 0/0
 26664 ;;		On exit  : 0/0
 26665 ;;		Unchanged: 0/0
 26666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26671 ;;Total ram usage:        0 bytes
 26672 ;; Hardware stack levels used:    1
 26673 ;; Hardware stack levels required when called:    1
 26674 ;; This function calls:
 26675 ;;		Absolute function
 26676 ;;		_UART2_Receive_ISR
 26677 ;; This function is called by:
 26678 ;;		Interrupt level 2
 26679 ;; This function uses a non-reentrant model
 26680 ;;
 26681                           
 26682                           	psect	text137
 26683  018BE4                     __ptext137:
 26684                           	opt callstack 0
 26685  018BE4                     _UART2_rx_vect_isr:
 26686                           	opt callstack 13
 26687                           
 26688                           ;incstack = 0
 26689  018BE4  EE13  F356         	lfsr	1,___inthi_sp
 26690                           
 26691                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26692  018BE8  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26693  018BEA  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26694  018BEC  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26695  018BEE  B4D8               	btfsc	status,2,c
 26696  018BF0  0011               	retfie		f
 26697                           
 26698                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26699  018BF2  D801               	call	i2u1082_48
 26700  018BF4  0011               	retfie		f
 26701  018BF6                     i2u1082_48:
 26702  018BF6  0005               	push	
 26703  018BF8  6EFA               	movwf	pclath,c
 26704  018BFA  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26705  018BFC  6EFD               	movwf	tosl,c
 26706  018BFE  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26707  018C00  6EFE               	movwf	tosh,c
 26708  018C02  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26709  018C04  6EFF               	movwf	tosu,c
 26710  018C06  50FA               	movf	pclath,w,c
 26711  018C08  0012               	return		;indir
 26712  018C0A                     __end_of_UART2_rx_vect_isr:
 26713                           	opt callstack 0
 26714                           
 26715 ;; *************** function _UART2_Receive_ISR *****************
 26716 ;; Defined at:
 26717 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26718 ;; Parameters:    Size  Location     Type
 26719 ;;		None
 26720 ;; Auto vars:     Size  Location     Type
 26721 ;;		None
 26722 ;; Return value:  Size  Location     Type
 26723 ;;                  1  [STACK] void 
 26724 ;; Registers used:
 26725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26726 ;; Tracked objects:
 26727 ;;		On entry : 0/0
 26728 ;;		On exit  : 0/0
 26729 ;;		Unchanged: 0/0
 26730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26735 ;;Total ram usage:        0 bytes
 26736 ;; Hardware stack levels used:    1
 26737 ;; This function calls:
 26738 ;;		Nothing
 26739 ;; This function is called by:
 26740 ;;		_UART2_Initialize
 26741 ;;		_UART2_rx_vect_isr
 26742 ;; This function uses a reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text138
 26746  018D4E                     __ptext138:
 26747                           	opt callstack 0
 26748  018D4E                     _UART2_Receive_ISR:
 26749                           	opt callstack 13
 26750                           
 26751                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26752                           
 26753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26754                           ;incstack = 0
 26755  018D4E  0E00               	movlw	low _uart2RxBuffer
 26756  018D50  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 26757  018D52  6ED9               	movwf	fsr2l,c
 26758  018D54  6ADA               	clrf	fsr2h,c
 26759  018D56  0E06               	movlw	high _uart2RxBuffer
 26760  018D58  22DA               	addwfc	fsr2h,f,c
 26761  018D5A  006F F743 FFDF     	movff	15824,indf2	;volatile
 26762  018D60  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 26763                           
 26764                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26765  018D62  282B               	incf	_uart2RxHead^0,w,c
 26766  018D64  B4D8               	btfsc	status,2,c
 26767                           
 26768                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26769  018D66  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 26770                           
 26771                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26772  018D68  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 26773                           
 26774                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26775  018D6A  0012               	return		;funcret
 26776  018D6C                     __end_of_UART2_Receive_ISR:
 26777                           	opt callstack 0
 26778                           
 26779 ;; *************** function _TMR6_ISR *****************
 26780 ;; Defined at:
 26781 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26782 ;; Parameters:    Size  Location     Type
 26783 ;;		None
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;		None
 26786 ;; Return value:  Size  Location     Type
 26787 ;;                  1    wreg      void 
 26788 ;; Registers used:
 26789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26790 ;; Tracked objects:
 26791 ;;		On entry : 0/0
 26792 ;;		On exit  : 0/0
 26793 ;;		Unchanged: 0/0
 26794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26798 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26799 ;;Total ram usage:        1 bytes
 26800 ;; Hardware stack levels used:    1
 26801 ;; Hardware stack levels required when called:    2
 26802 ;; This function calls:
 26803 ;;		_TMR6_CallBack
 26804 ;; This function is called by:
 26805 ;;		Interrupt level 2
 26806 ;; This function uses a non-reentrant model
 26807 ;;
 26808                           
 26809                           	psect	text139
 26810  018DC0                     __ptext139:
 26811                           	opt callstack 0
 26812  018DC0                     _TMR6_ISR:
 26813                           	opt callstack 12
 26814                           
 26815                           ;incstack = 0
 26816  018DC0  0060  F0D4  F0E2   	movff	btemp,??_TMR6_ISR
 26817  018DC6  EE13  F356         	lfsr	1,___inthi_sp
 26818                           
 26819                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26820  018DCA  0139               	movlb	57	; () banked
 26821  018DCC  91A9               	bcf	169,0,b	;volatile
 26822                           
 26823                           ; BSR set to: 57
 26824                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26825  018DCE  EC4B  F0C6         	call	_TMR6_CallBack	;wreg free
 26826  018DD2  0060  F388  F035   	movff	??_TMR6_ISR,btemp
 26827  018DD8  0011               	retfie		f
 26828  018DDA                     __end_of_TMR6_ISR:
 26829                           	opt callstack 0
 26830                           
 26831 ;; *************** function _TMR6_CallBack *****************
 26832 ;; Defined at:
 26833 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26834 ;; Parameters:    Size  Location     Type
 26835 ;;		None
 26836 ;; Auto vars:     Size  Location     Type
 26837 ;;		None
 26838 ;; Return value:  Size  Location     Type
 26839 ;;                  1  [STACK] void 
 26840 ;; Registers used:
 26841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26842 ;; Tracked objects:
 26843 ;;		On entry : 3F/39
 26844 ;;		On exit  : 0/0
 26845 ;;		Unchanged: 0/0
 26846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26851 ;;Total ram usage:        0 bytes
 26852 ;; Hardware stack levels used:    1
 26853 ;; Hardware stack levels required when called:    1
 26854 ;; This function calls:
 26855 ;;		Absolute function
 26856 ;;		_TMR6_DefaultInterruptHandler
 26857 ;; This function is called by:
 26858 ;;		_TMR6_ISR
 26859 ;; This function uses a reentrant model
 26860 ;;
 26861                           
 26862                           	psect	text140
 26863  018C96                     __ptext140:
 26864                           	opt callstack 0
 26865  018C96                     _TMR6_CallBack:
 26866                           	opt callstack 12
 26867                           
 26868                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26869                           
 26870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26871                           ;incstack = 0
 26872  018C96  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26873  018C98  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 26874  018C9A  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 26875  018C9C  B4D8               	btfsc	status,2,c
 26876  018C9E  0012               	return	
 26877                           
 26878                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26879  018CA0  D801               	call	u871_48
 26880  018CA2  0012               	return	
 26881  018CA4                     u871_48:
 26882  018CA4  0005               	push	
 26883  018CA6  6EFA               	movwf	pclath,c
 26884  018CA8  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26885  018CAA  6EFD               	movwf	tosl,c
 26886  018CAC  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 26887  018CAE  6EFE               	movwf	tosh,c
 26888  018CB0  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 26889  018CB2  6EFF               	movwf	tosu,c
 26890  018CB4  50FA               	movf	pclath,w,c
 26891  018CB6  0012               	return		;indir
 26892  018CB8                     __end_of_TMR6_CallBack:
 26893                           	opt callstack 0
 26894                           
 26895 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26896 ;; Defined at:
 26897 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26898 ;; Parameters:    Size  Location     Type
 26899 ;;		None
 26900 ;; Auto vars:     Size  Location     Type
 26901 ;;  i               1  [STACK] unsigned char 
 26902 ;; Return value:  Size  Location     Type
 26903 ;;                  1  [STACK] void 
 26904 ;; Registers used:
 26905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26906 ;; Tracked objects:
 26907 ;;		On entry : 0/39
 26908 ;;		On exit  : 0/0
 26909 ;;		Unchanged: 0/0
 26910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26915 ;;Total ram usage:        0 bytes
 26916 ;; Hardware stack levels used:    1
 26917 ;; This function calls:
 26918 ;;		Nothing
 26919 ;; This function is called by:
 26920 ;;		_TMR6_Initialize
 26921 ;;		_TMR6_CallBack
 26922 ;; This function uses a reentrant model
 26923 ;;
 26924                           
 26925                           	psect	text141
 26926  018530                     __ptext141:
 26927                           	opt callstack 0
 26928  018530                     _TMR6_DefaultInterruptHandler:
 26929                           	opt callstack 0
 26930                           
 26931                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26932  018530  52E6               	movf	postinc1,f,c
 26933                           
 26934                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26935                           ;stkvar	_i @ sp[(-1)+0]
 26936                           
 26937                           ;incstack = 0
 26938  018532  0EFF               	movlw	-1
 26939  018534  6AE3               	clrf	plusw1,c
 26940  018536                     l8568:
 26941                           
 26942                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26943                           ;stkvar	_i @ sp[(-1)+0]
 26944  018536  0EFF               	movlw	-1
 26945  018538  50E3               	movf	plusw1,w,c
 26946  01853A  0D02               	mullw	2
 26947  01853C  50F3               	movf	243,w,c
 26948  01853E  0F60               	addlw	low _tickCount
 26949  018540  6ED9               	movwf	fsr2l,c
 26950  018542  6ADA               	clrf	fsr2h,c
 26951  018544  50DE               	movf	postinc2,w,c
 26952  018546  10DE               	iorwf	postinc2,w,c
 26953  018548  B4D8               	btfsc	status,2,c
 26954  01854A  D00A               	goto	l8572
 26955                           
 26956                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26957                           ;stkvar	_i @ sp[(-1)+0]
 26958  01854C  0EFF               	movlw	-1
 26959  01854E  50E3               	movf	plusw1,w,c
 26960  018550  0D02               	mullw	2
 26961  018552  50F3               	movf	243,w,c
 26962  018554  0F60               	addlw	low _tickCount
 26963  018556  6ED9               	movwf	fsr2l,c
 26964  018558  6ADA               	clrf	fsr2h,c
 26965  01855A  06DE               	decf	postinc2,f,c
 26966  01855C  0E00               	movlw	0
 26967  01855E  5ADD               	subwfb	postdec2,f,c
 26968  018560                     l8572:
 26969                           
 26970                           ;mcc_generated_files/tmr6.c: 207:  }
 26971                           ;stkvar	_i @ sp[(-1)+0]
 26972  018560  0EFF               	movlw	-1
 26973  018562  2AE3               	incf	plusw1,f,c
 26974                           
 26975                           ;stkvar	_i @ sp[(-1)+0]
 26976  018564  0EFF               	movlw	-1
 26977  018566  006F FF8C  F035    	movff	plusw1,btemp
 26978  01856C  0E0B               	movlw	11
 26979  01856E  6435               	cpfsgt	btemp^0,c
 26980  018570  D7E2               	goto	l8568
 26981                           
 26982                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26983  018572  52E5               	movf	postdec1,f,c
 26984  018574  0012               	return		;funcret
 26985  018576                     __end_of_TMR6_DefaultInterruptHandler:
 26986                           	opt callstack 0
 26987                           
 26988 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26989 ;; Defined at:
 26990 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26991 ;; Parameters:    Size  Location     Type
 26992 ;;		None
 26993 ;; Auto vars:     Size  Location     Type
 26994 ;;		None
 26995 ;; Return value:  Size  Location     Type
 26996 ;;                  1    wreg      void 
 26997 ;; Registers used:
 26998 ;;		None
 26999 ;; Tracked objects:
 27000 ;;		On entry : 0/0
 27001 ;;		On exit  : 3F/0
 27002 ;;		Unchanged: 0/0
 27003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27008 ;;Total ram usage:        0 bytes
 27009 ;; Hardware stack levels used:    1
 27010 ;; This function calls:
 27011 ;;		Nothing
 27012 ;; This function is called by:
 27013 ;;		Interrupt level 2
 27014 ;; This function uses a non-reentrant model
 27015 ;;
 27016                           
 27017                           	psect	text142
 27018  018EC0                     __ptext142:
 27019                           	opt callstack 0
 27020  018EC0                     _DMA1_DMASCNT_ISR:
 27021                           	opt callstack 14
 27022                           
 27023                           ;incstack = 0
 27024  018EC0  EE13  F356         	lfsr	1,___inthi_sp
 27025                           
 27026                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27027  018EC4  0139               	movlb	57	; () banked
 27028  018EC6  91A2               	bcf	162,0,b	;volatile
 27029                           
 27030                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27031  018EC8  0100               	movlb	0	; () banked
 27032  018ECA  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 27033                           
 27034                           ; BSR set to: 0
 27035  018ECC  0011               	retfie		f
 27036  018ECE                     __end_of_DMA1_DMASCNT_ISR:
 27037                           	opt callstack 0
 27038                           
 27039 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27040 ;; Defined at:
 27041 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27042 ;; Parameters:    Size  Location     Type
 27043 ;;		None
 27044 ;; Auto vars:     Size  Location     Type
 27045 ;;		None
 27046 ;; Return value:  Size  Location     Type
 27047 ;;                  1    wreg      void 
 27048 ;; Registers used:
 27049 ;;		None
 27050 ;; Tracked objects:
 27051 ;;		On entry : 0/0
 27052 ;;		On exit  : 3F/39
 27053 ;;		Unchanged: 0/0
 27054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27059 ;;Total ram usage:        0 bytes
 27060 ;; Hardware stack levels used:    1
 27061 ;; This function calls:
 27062 ;;		Nothing
 27063 ;; This function is called by:
 27064 ;;		Interrupt level 2
 27065 ;; This function uses a non-reentrant model
 27066 ;;
 27067                           
 27068                           	psect	text143
 27069  018ED8                     __ptext143:
 27070                           	opt callstack 0
 27071  018ED8                     _DMA1_DMADCNT_ISR:
 27072                           	opt callstack 14
 27073                           
 27074                           ; BSR set to: 0
 27075                           ;incstack = 0
 27076  018ED8  EE13  F356         	lfsr	1,___inthi_sp
 27077                           
 27078                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27079  018EDC  0139               	movlb	57	; () banked
 27080  018EDE  93A2               	bcf	162,1,b	;volatile
 27081                           
 27082                           ; BSR set to: 57
 27083  018EE0  0011               	retfie		f
 27084  018EE2                     __end_of_DMA1_DMADCNT_ISR:
 27085                           	opt callstack 0
 27086                           
 27087 ;; *************** function _DMA1_DMAA_ISR *****************
 27088 ;; Defined at:
 27089 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;		None
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;		None
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1    wreg      void 
 27096 ;; Registers used:
 27097 ;;		None
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/0
 27100 ;;		On exit  : 3F/39
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27107 ;;Total ram usage:        0 bytes
 27108 ;; Hardware stack levels used:    1
 27109 ;; This function calls:
 27110 ;;		Nothing
 27111 ;; This function is called by:
 27112 ;;		Interrupt level 2
 27113 ;; This function uses a non-reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text144
 27117  018EE4                     __ptext144:
 27118                           	opt callstack 0
 27119  018EE4                     _DMA1_DMAA_ISR:
 27120                           	opt callstack 14
 27121                           
 27122                           ; BSR set to: 57
 27123                           ;incstack = 0
 27124  018EE4  EE13  F356         	lfsr	1,___inthi_sp
 27125                           
 27126                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27127  018EE8  0139               	movlb	57	; () banked
 27128  018EEA  97A2               	bcf	162,3,b	;volatile
 27129                           
 27130                           ; BSR set to: 57
 27131  018EEC  0011               	retfie		f
 27132  018EEE                     __end_of_DMA1_DMAA_ISR:
 27133                           	opt callstack 0
 27134                           
 27135 ;; *************** function _DMA1_DMAOR_ISR *****************
 27136 ;; Defined at:
 27137 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27138 ;; Parameters:    Size  Location     Type
 27139 ;;		None
 27140 ;; Auto vars:     Size  Location     Type
 27141 ;;		None
 27142 ;; Return value:  Size  Location     Type
 27143 ;;                  1    wreg      void 
 27144 ;; Registers used:
 27145 ;;		None
 27146 ;; Tracked objects:
 27147 ;;		On entry : 0/0
 27148 ;;		On exit  : 3F/39
 27149 ;;		Unchanged: 0/0
 27150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27155 ;;Total ram usage:        0 bytes
 27156 ;; Hardware stack levels used:    1
 27157 ;; This function calls:
 27158 ;;		Nothing
 27159 ;; This function is called by:
 27160 ;;		Interrupt level 2
 27161 ;; This function uses a non-reentrant model
 27162 ;;
 27163                           
 27164                           	psect	text145
 27165  018EF0                     __ptext145:
 27166                           	opt callstack 0
 27167  018EF0                     _DMA1_DMAOR_ISR:
 27168                           	opt callstack 14
 27169                           
 27170                           ; BSR set to: 57
 27171                           ;incstack = 0
 27172  018EF0  EE13  F356         	lfsr	1,___inthi_sp
 27173                           
 27174                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27175  018EF4  0139               	movlb	57	; () banked
 27176  018EF6  95A2               	bcf	162,2,b	;volatile
 27177                           
 27178                           ; BSR set to: 57
 27179  018EF8  0011               	retfie		f
 27180  018EFA                     __end_of_DMA1_DMAOR_ISR:
 27181                           	opt callstack 0
 27182                           
 27183                           ;
 27184                           ; Interrupt Vector Table @ 0x8
 27185                           ;
 27186                           
 27187                           	psect	ivt0x8
 27188  000008                     __pivt0x8:
 27189                           	opt callstack 0
 27190  000008                     ivt0x8_base:
 27191                           	opt callstack 0
 27192                           
 27193                           ; Vector 0 : SWINT
 27194  000008  63CD               	dw	_Default_ISR shr (0+2)
 27195                           
 27196                           ; Vector 1 : HLVD
 27197  00000A  63CD               	dw	_Default_ISR shr (0+2)
 27198                           
 27199                           ; Vector 2 : OSF
 27200  00000C  63CD               	dw	_Default_ISR shr (0+2)
 27201                           
 27202                           ; Vector 3 : CSW
 27203  00000E  63CD               	dw	_Default_ISR shr (0+2)
 27204                           
 27205                           ; Vector 4 : NVM
 27206  000010  63CD               	dw	_Default_ISR shr (0+2)
 27207                           
 27208                           ; Vector 5 : SCAN
 27209  000012  63CD               	dw	_Default_ISR shr (0+2)
 27210                           
 27211                           ; Vector 6 : CRC
 27212  000014  63CD               	dw	_Default_ISR shr (0+2)
 27213                           
 27214                           ; Vector 7 : IOC
 27215  000016  63CD               	dw	_Default_ISR shr (0+2)
 27216                           
 27217                           ; Vector 8 : INT0
 27218  000018  63A8               	dw	_INT0_ISR shr (0+2)
 27219                           
 27220                           ; Vector 9 : ZCD
 27221  00001A  63CD               	dw	_Default_ISR shr (0+2)
 27222                           
 27223                           ; Vector 10 : AD
 27224  00001C  61BC               	dw	_ADCC_ISR shr (0+2)
 27225                           
 27226                           ; Vector 11 : ADT
 27227  00001E  5FF2               	dw	_ADCC_ThresholdISR shr (0+2)
 27228                           
 27229                           ; Vector 12 : CMP1
 27230  000020  63CD               	dw	_Default_ISR shr (0+2)
 27231                           
 27232                           ; Vector 13 : SMT1
 27233  000022  63CD               	dw	_Default_ISR shr (0+2)
 27234                           
 27235                           ; Vector 14 : SMT1PRA
 27236  000024  63CD               	dw	_Default_ISR shr (0+2)
 27237                           
 27238                           ; Vector 15 : SMT1PRW
 27239  000026  63CD               	dw	_Default_ISR shr (0+2)
 27240                           
 27241                           ; Vector 16 : DMA1SCNT
 27242  000028  63B0               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27243                           
 27244                           ; Vector 17 : DMA1DCNT
 27245  00002A  63B6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27246                           
 27247                           ; Vector 18 : DMA1OR
 27248  00002C  63BC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27249                           
 27250                           ; Vector 19 : DMA1A
 27251  00002E  63B9               	dw	_DMA1_DMAA_ISR shr (0+2)
 27252                           
 27253                           ; Vector 20 : SPI1RX
 27254  000030  63CD               	dw	_Default_ISR shr (0+2)
 27255                           
 27256                           ; Vector 21 : SPI1TX
 27257  000032  63CD               	dw	_Default_ISR shr (0+2)
 27258                           
 27259                           ; Vector 22 : SPI1
 27260  000034  63CD               	dw	_Default_ISR shr (0+2)
 27261                           
 27262                           ; Vector 23 : I2C1RX
 27263  000036  63CD               	dw	_Default_ISR shr (0+2)
 27264                           
 27265                           ; Vector 24 : I2C1TX
 27266  000038  63CD               	dw	_Default_ISR shr (0+2)
 27267                           
 27268                           ; Vector 25 : I2C1
 27269  00003A  63CD               	dw	_Default_ISR shr (0+2)
 27270                           
 27271                           ; Vector 26 : I2C1E
 27272  00003C  63CD               	dw	_Default_ISR shr (0+2)
 27273                           
 27274                           ; Vector 27 : U1RX
 27275  00003E  62E5               	dw	_UART1_rx_vect_isr shr (0+2)
 27276                           
 27277                           ; Vector 28 : U1TX
 27278  000040  62DB               	dw	_UART1_tx_vect_isr shr (0+2)
 27279                           
 27280                           ; Vector 29 : U1E
 27281  000042  63CD               	dw	_Default_ISR shr (0+2)
 27282                           
 27283                           ; Vector 30 : U1
 27284  000044  63CD               	dw	_Default_ISR shr (0+2)
 27285                           
 27286                           ; Vector 31 : TMR0
 27287  000046  63CD               	dw	_Default_ISR shr (0+2)
 27288                           
 27289                           ; Vector 32 : TMR1
 27290  000048  63CD               	dw	_Default_ISR shr (0+2)
 27291                           
 27292                           ; Vector 33 : TMR1G
 27293  00004A  63CD               	dw	_Default_ISR shr (0+2)
 27294                           
 27295                           ; Vector 34 : TMR2
 27296  00004C  63CD               	dw	_Default_ISR shr (0+2)
 27297                           
 27298                           ; Vector 35 : CCP1
 27299  00004E  63CD               	dw	_Default_ISR shr (0+2)
 27300                           
 27301                           ; Vector 36 : Undefined
 27302  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27303                           
 27304                           ; Vector 37 : NCO1
 27305  000052  63CD               	dw	_Default_ISR shr (0+2)
 27306                           
 27307                           ; Vector 38 : CWG1
 27308  000054  63CD               	dw	_Default_ISR shr (0+2)
 27309                           
 27310                           ; Vector 39 : CLC1
 27311  000056  63CD               	dw	_Default_ISR shr (0+2)
 27312                           
 27313                           ; Vector 40 : INT1
 27314  000058  63AC               	dw	_INT1_ISR shr (0+2)
 27315                           
 27316                           ; Vector 41 : CMP2
 27317  00005A  63CD               	dw	_Default_ISR shr (0+2)
 27318                           
 27319                           ; Vector 42 : DMA2SCNT
 27320  00005C  63CD               	dw	_Default_ISR shr (0+2)
 27321                           
 27322                           ; Vector 43 : DMA2DCNT
 27323  00005E  63CD               	dw	_Default_ISR shr (0+2)
 27324                           
 27325                           ; Vector 44 : DMA2OR
 27326  000060  63CD               	dw	_Default_ISR shr (0+2)
 27327                           
 27328                           ; Vector 45 : DMA2A
 27329  000062  63CD               	dw	_Default_ISR shr (0+2)
 27330                           
 27331                           ; Vector 46 : I2C2RX
 27332  000064  63CD               	dw	_Default_ISR shr (0+2)
 27333                           
 27334                           ; Vector 47 : I2C2TX
 27335  000066  63CD               	dw	_Default_ISR shr (0+2)
 27336                           
 27337                           ; Vector 48 : I2C2
 27338  000068  63CD               	dw	_Default_ISR shr (0+2)
 27339                           
 27340                           ; Vector 49 : I2C2E
 27341  00006A  63CD               	dw	_Default_ISR shr (0+2)
 27342                           
 27343                           ; Vector 50 : U2RX
 27344  00006C  62F9               	dw	_UART2_rx_vect_isr shr (0+2)
 27345                           
 27346                           ; Vector 51 : U2TX
 27347  00006E  62EF               	dw	_UART2_tx_vect_isr shr (0+2)
 27348                           
 27349                           ; Vector 52 : U2E
 27350  000070  63CD               	dw	_Default_ISR shr (0+2)
 27351                           
 27352                           ; Vector 53 : U2
 27353  000072  63CD               	dw	_Default_ISR shr (0+2)
 27354                           
 27355                           ; Vector 54 : TMR3
 27356  000074  63CD               	dw	_Default_ISR shr (0+2)
 27357                           
 27358                           ; Vector 55 : TMR3G
 27359  000076  63CD               	dw	_Default_ISR shr (0+2)
 27360                           
 27361                           ; Vector 56 : TMR4
 27362  000078  63CD               	dw	_Default_ISR shr (0+2)
 27363                           
 27364                           ; Vector 57 : CCP2
 27365  00007A  63CD               	dw	_Default_ISR shr (0+2)
 27366                           
 27367                           ; Vector 58 : Undefined
 27368  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27369                           
 27370                           ; Vector 59 : CWG2
 27371  00007E  63CD               	dw	_Default_ISR shr (0+2)
 27372                           
 27373                           ; Vector 60 : CLC2
 27374  000080  63CD               	dw	_Default_ISR shr (0+2)
 27375                           
 27376                           ; Vector 61 : INT2
 27377  000082  63CD               	dw	_Default_ISR shr (0+2)
 27378                           
 27379                           ; Vector 62 : Undefined
 27380  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27381                           
 27382                           ; Vector 63 : Undefined
 27383  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27384                           
 27385                           ; Vector 64 : Undefined
 27386  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27387                           
 27388                           ; Vector 65 : Undefined
 27389  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27390                           
 27391                           ; Vector 66 : Undefined
 27392  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27393                           
 27394                           ; Vector 67 : Undefined
 27395  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27396                           
 27397                           ; Vector 68 : Undefined
 27398  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27399                           
 27400                           ; Vector 69 : Undefined
 27401  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27402                           
 27403                           ; Vector 70 : TMR5
 27404  000094  6087               	dw	_TMR5_ISR shr (0+2)
 27405                           
 27406                           ; Vector 71 : TMR5G
 27407  000096  63CD               	dw	_Default_ISR shr (0+2)
 27408                           
 27409                           ; Vector 72 : TMR6
 27410  000098  6370               	dw	_TMR6_ISR shr (0+2)
 27411                           
 27412                           ; Vector 73 : CCP3
 27413  00009A  63CD               	dw	_Default_ISR shr (0+2)
 27414                           
 27415                           ; Vector 74 : CWG3
 27416  00009C  63CD               	dw	_Default_ISR shr (0+2)
 27417                           
 27418                           ; Vector 75 : CLC3
 27419  00009E  63CD               	dw	_Default_ISR shr (0+2)
 27420                           
 27421                           ; Vector 76 : Undefined
 27422  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27423                           
 27424                           ; Vector 77 : Undefined
 27425  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27426                           
 27427                           ; Vector 78 : Undefined
 27428  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27429                           
 27430                           ; Vector 79 : Undefined
 27431  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27432                           
 27433                           ; Vector 80 : CCP4
 27434  0000A8  63CD               	dw	_Default_ISR shr (0+2)
 27435                           
 27436                           ; Vector 81 : CLC4
 27437  0000AA  63CD               	dw	_Default_ISR shr (0+2)
 27438  0000AC                     ivt0x8_undefint:
 27439                           	opt callstack 0
 27440  0000AC  00FF               	reset	
 27441                           
 27442                           	psect	text146
 27443  000000                     __ptext146:
 27444                           	opt callstack 0
 27445                           
 27446                           	psect	param0
 27447  0000                     
 27448                           	psect	temp
 27449  000035                     btemp:
 27450                           	opt callstack 0
 27451  000035                     	ds	32
 27452  0000                     wtemp0	set	btemp
 27453  0000                     wtemp1	set	btemp+2
 27454  0000                     wtemp2	set	btemp+4
 27455  0000                     wtemp3	set	btemp+6
 27456  0000                     wtemp4	set	btemp+8
 27457  0000                     wtemp5	set	btemp+10
 27458  0000                     wtemp8	set	btemp+1
 27459  0000                     ttemp0	set	btemp
 27460  0000                     ttemp1	set	btemp+3
 27461  0000                     ttemp2	set	btemp+6
 27462  0000                     ttemp3	set	btemp+9
 27463  0000                     ttemp5	set	btemp+1
 27464  0000                     ttemp6	set	btemp+4
 27465  0000                     ttemp7	set	btemp+8
 27466  0000                     ltemp0	set	btemp
 27467  0000                     ltemp1	set	btemp+4
 27468  0000                     ltemp2	set	btemp+8
 27469  0000                     lltemp0	set	btemp
 27470  0000                     lltemp1	set	btemp+8
 27471  0000                     lltemp2	set	btemp+16
 27472  0000                     lltemp3	set	btemp+24
 27473                           tosu	equ	0x3FFF
 27474                           tosh	equ	0x3FFE
 27475                           tosl	equ	0x3FFD
 27476                           stkptr	equ	0x3FFC
 27477                           pclatu	equ	0x3FFB
 27478                           pclath	equ	0x3FFA
 27479                           pcl	equ	0x3FF9
 27480                           tblptru	equ	0x3FF8
 27481                           tblptrh	equ	0x3FF7
 27482                           tblptrl	equ	0x3FF6
 27483                           tablat	equ	0x3FF5
 27484                           prodh	equ	0x3FF4
 27485                           prodl	equ	0x3FF3
 27486                           indf0	equ	0x3FEF
 27487                           postinc0	equ	0x3FEE
 27488                           postdec0	equ	0x3FED
 27489                           preinc0	equ	0x3FEC
 27490                           plusw0	equ	0x3FEB
 27491                           fsr0h	equ	0x3FEA
 27492                           fsr0l	equ	0x3FE9
 27493                           wreg	equ	0x3FE8
 27494                           indf1	equ	0x3FE7
 27495                           postinc1	equ	0x3FE6
 27496                           postdec1	equ	0x3FE5
 27497                           preinc1	equ	0x3FE4
 27498                           plusw1	equ	0x3FE3
 27499                           fsr1h	equ	0x3FE2
 27500                           fsr1l	equ	0x3FE1
 27501                           bsr	equ	0x3FE0
 27502                           indf2	equ	0x3FDF
 27503                           postinc2	equ	0x3FDE
 27504                           postdec2	equ	0x3FDD
 27505                           preinc2	equ	0x3FDC
 27506                           plusw2	equ	0x3FDB
 27507                           fsr2h	equ	0x3FDA
 27508                           fsr2l	equ	0x3FD9
 27509                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        250
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     135
    BANK1           256      0     251
    BANK2           256      0     252
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4823_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3973tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323308
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      87       5       84.4%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     656      58        0.0%
DATA                 0      0     656       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 19 01:00:02 2019

                     _SPI1_Exchange8bit 8CB8                __end_of_set_display_info 8D12  
                                     _C 0200                                       _D 0400  
                                     _P 0094                                       _R 00A3  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 8AA4                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8F22  
                           __CFG_LVP$ON 000000                                     l171 8E46  
                                   l701 890C                                     l581 88E0  
                                   l835 8CC6                                     _GIE 01FE97  
                                   _abs 845E                                     _pad 7064  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8DF2  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8C52  
                    _UART1_Transmit_ISR 88BA                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8C74                            __CFG_ZCD$OFF 000000  
                                  l1028 8636                                    l1250 4346  
                                  l1242 419A                                    l1252 434C  
                                  l1329 8282                                    l1602 8D0E  
                                  l2308 6900                                    l2270 76CE  
                                  l1545 86D4                                    l1465 7836  
                                  l2281 6A62                                    l2274 698E  
                                  l1810 123A                                    l1562 7282  
                                  l1554 5F5E                                    l2700 849E  
                                  l1484 8740                                    l1469 7BEA  
                                  l1558 60BA                                    l1654 3756  
                                  l2560 305C                                    l1913 4CB2  
                                  l1754 70C0                                    l2731 5A42  
                                  l2548 31CC                                    l2629 2A10  
                                  l1774 3DB4                                    l1854 0B1A  
                  _ADCC_StartConversion 8E60                                    l1839 066A  
                                  l7000 69DC                                    l1928 458C  
                                  l2593 3CCC                                    l2841 5EA2  
                                  l1699 6478                                    l6116 79B2  
                                  l7012 6A60                                    l7004 6A2A  
                                  l7020 83EE                                    l6300 3090  
                                  l2692 660E                                    l1892 5384  
                                  l2669 62B8                                    l6118 79D4  
                                  l6230 2DD8                                    l6150 2AB0  
                                  l7030 67EA                                    l7102 6CA0  
                                  l6304 309C                                    l6232 2DEA  
                                  l6240 2E24                                    l6216 2D46  
                                  l6144 2A70                                    l6400 65AC  
                                  l2856 7E08                                    l6330 3128  
                                  l6314 30C4                                    l6226 2DB8  
                                  l6162 2B2E                                    l6154 2AC6  
                                  l6410 6606                                    l1978 21E6  
                                  l2795 6F42                                    l6500 55BA  
                                  l6340 3154                                    l6260 2ED2  
                                  l6236 2DF4                                    l6180 2BE6  
                                  l6156 2AF6                                    l6404 65B0  
                                  l2869 7D84                                    l7118 83C0  
                                  l6318 30CA                                    l6174 2BA0  
                                  l7054 6898                                    l7046 686C  
                                  l7070 6666                                    l8040 8C26  
                                  l6512 5654                                    l6600 3890  
                                  l6352 31AC                                    l6344 316C  
                                  l6280 2FE6                                    l6264 2EDC  
                                  l6168 2B60                                    l7056 68AE  
                                  l7048 6888                                    l8120 874A  
                                  l8200 6298                                    l6506 560E  
                                  l6610 38E6                                    l6346 317C  
                                  l6290 3040                                    l6282 300C  
                                  l6258 2EC0                                    l6186 2C08  
                                  l6178 2BB6                                    l6442 4A20  
                                  l7082 6738                                    l6524 5726  
                                  l6700 3C0C                                    l6612 3916  
                                  l6268 2F0E                                    l6428 7DF8  
                                  l9022 7A74                                    l9014 7A62  
                                  l6606 38D0                                    l6462 4BD6  
                                  l7094 6BF4                                    l6560 5BDE  
                                  l6552 5B32                                    l6544 5AAA  
                                  l6720 3CB0                                    l6712 3C78  
                                  l6632 39A8                                    l6624 398E  
                                  l6456 4B3E                                    l6386 848E  
                                  l6706 3C48                                    l6650 3A6E  
                                  l6642 3A38                                    l6618 3954  
                                  l6298 307E                                    l6466 4C44  
                                  l6458 4B8E                                    l8170 6198  
                                  l6652 3A80                                    l6660 3AD8  
                                  l6580 37B2                                    l9300 74C2  
                                  l6484 7D74                                    l8180 6202  
                                  l8172 61B6                                    l6910 6AC6  
                                  l6718 3CA0                                    l6590 3808  
                                  l6830 2820                                    l6742 2286  
                                  l8190 6236                                    l8182 6218  
                                  l8166 6174                                    l8158 6108  
                                  l6904 6AA6                                    l6672 3B22  
                                  l6592 3838                                    l6824 2804  
                                  l6760 2354                                    l6744 228C  
                                  l6736 2246                                    l8168 6182  
                                  l9306 7CA0                                    l6690 3B98  
                                  l6666 3B06                                    l6658 3AD4  
                                  l6586 37F2                                    l6834 2846  
                                  l6762 235A                                    l6754 2314  
                                  l6746 22BC                                    l8178 61E4  
                                  l7708 5A32                                    l9308 7CCC  
                                  l9340 3DEE                                    l9332 3DA4  
                                  l6932 6BA0                                    l6924 6B6C  
                                  l6676 3B48                                    l6844 2890  
                                  l6772 23AC                                    l6764 238A  
                                  l9500 0602                                    l9404 00F0  
                                  l9412 0146                                    l7724 5D14  
                                  l8700 3456                                    l9270 7AD8  
                                  l6686 3B92                                    l6862 2950  
                                  l9422 01EA                                    l9430 0258  
                                  l7726 5D80                                    l7672 57F2  
                                  l9280 7090                                    l9344 3E0C  
                                  l6952 6F96                                    l6944 6F6C  
                                  l6848 2896                                    l9520 06F0  
                                  l9440 02FC                                    l9424 0216  
                                  l8720 365C                                    l8712 3550  
                                  l7690 58CC                                    l7682 5888  
                                  l7674 5814                                    l9258 6E58  
                                  l9274 7B16                                    l9290 7106  
                                  l9354 401E                                    l6970 704A  
                                  l6962 7016                                    l6858 290A  
                                  l9602 0D90                                    l9610 0EA2  
                                  l9426 022C                                    l8572 8560  
                                  l8812 88DC                                    l7692 58F0  
                                  l9284 70B8                                    l6948 6F7E  
                                  l6876 29BE                                    l6868 297A  
                                  l9516 06B8                                    l9460 0406  
                                  l8708 3488                                    l8646 86EA  
                                  l7694 592E                                    l9294 7150  
                                  l9286 70CA                                    l9374 40D0  
                                  l6982 7698                                    l6878 29D8  
                                  l9622 0F3A                                    l9550 0A48  
                                  l9526 077A                                    l9462 0470  
                                  l9710 53BA                                    l8726 3724  
                                  l8734 3736                                    l8750 62FA  
                                  l8568 8536                                    l7688 58B4  
                                  l9560 0B34                                    l9536 0926  
                                  l9456 0396                                    l9448 032A  
                                  l9392 00AC                                    l8834 8908  
                                  l7698 5996                                    l9378 410C  
                                  l6898 6A90                                    l6986 76CC  
                                  l6978 7656                                    l6994 694C  
                                  l9490 0594                                    l9482 057C  
                                  l9466 04D2                                    l9714 53F6  
                                  l8762 633E                                    l8860 861E  
                                  l9636 0FD6                                    l9484 058E  
                                  l9732 5518                                    l9724 54B0  
                                  l9638 0FF0                                    l9574 0C32  
                                  l9558 0B12                                    l9478 0554  
                                  l9718 5426                                    l9822 4748  
                                  l9806 4652                                    l9830 47CE  
                                  l9910 165C                                    l8686 3206  
                                  l8758 6326                                    l9648 1092  
                                  l9728 54DC                                    l9920 16F4  
                                  l8696 3350                                    l9674 119A  
                                  l9658 10E2                                    l9586 0CBA  
                                  l9594 0D24                                    l9498 05F6  
                                  l9754 4CFE                                    l9746 4CA2  
                                  l9764 4EF4                                    l9932 1834  
                                  l9694 5306                                    l9846 48B8  
                                  l9870 1360                                    l8958 7E18  
                                  STR_1 FF66                                    l9792 45B6  
                                  l9952 1A46                                    l9944 198E  
                                  l9928 17E0                                    l9872 1376  
                                  STR_2 FF97                                    STR_3 FFD2  
                                  l9786 457C                                    l9890 14A8  
                                  STR_4 FF55                                    STR_5 FF77  
                                  l9956 1A7A                                    l9892 14E2  
                                  l9868 1326                                    STR_6 FF97  
                                  STR_7 FFD2                                    l9798 45F2  
                                  l9894 14F8                                    STR_8 FF44  
                                  STR_9 FFA6                                    l9976 1BDA  
                                  l9986 1C88                                    l9996 1DAA  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 8820  
                                  u5030 3118                                    u5110 8822  
                                  u6000 239A                                    u5035 3108  
                                  u5060 3138                                    u5220 65FE  
                                  u5300 4A04                                    u6110 28E4  
                                  u5230 6600                                    u6015 252E  
                                  u5215 65E0                                    u5160 8472  
                                  u6200 6B8C                                    u6120 291E  
                                  u5400 85B0                                    u6025 25F6  
                                  u6130 2964                                    u5170 6530  
                                  u5410 7D32                                    _T6PR 003F93  
                                  u6115 28D4                                    u6035 27BE  
                                  u5340 4AE4                                    u5260 7DB6  
                                  u5420 7D34                                    _PMD0 0039C0  
                                  u5501 5614                                    u5325 4A3E  
                                  _PMD1 0039C1                                    u4630 7A02  
                                  u5510 564E                                    u6310 76C8  
                                  u6070 2888                                    u5326 4A44  
                                  u5270 7DB8                                    _PMD2 0039C2  
                                  u5175 6526                                    u5327 4A52  
                                  _PMD3 0039C3                                    u5440 8880  
                                  u5520 5680                                    u6400 6818  
                                  u5360 4BBC                                    _PMD4 0039C4  
                                  u5345 4ADA                                    _PMD5 0039C5  
                                  u5450 8882                                    u5610 5AFA  
                                  u6250 6FC2                                    u5290 49B8  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5540 575E                                    u5620 5B2C  
                                  u6180 6AF2                                    u4820 2E1C  
                                  u4660 8850                                    u6500 6692  
                                  u4637 79F4                                    u6405 680E  
                                  u5365 4BB2                                    u5470 55B4  
                                  u5630 5B5E                                    u6270 7036  
                                  u4830 2E3C                                    u4670 8852  
                                  u5390 85AE                                    u5295 49AE  
                                  u6600 83BC                                    u5560 57B0  
                                  u6520 6770                                    u4825 2E0C  
                                  u5490 560A                                    u5650 5C16  
                                  u5810 3B00                                    u6370 83EA  
                                  u4930 302E                                    u4770 2D6C  
                                  u6450 68B6                                    u9100 6E4C  
                                  u5900 3C20                                    u4780 2D8C  
                                  u6380 67CA                                    u6540 6BEE  
                                  u4781 2D86                                    u5670 5C68  
                                  u5590 5AA4                                    u5910 3C5C  
                                  u6470 68E0                                    u6390 67DE  
                                  u6550 6C20                                    u9120 6EC8  
                                  u8320 622C                                    u6385 67C0  
                                  u6481 6626                                    u5850 3B8A  
                                  u4970 30A2                                    u4890 2F04  
                                  u6490 6660                                    u6570 6CD8  
                                  u7700 59DC                                    u9300 4032  
                                  u9220 3D06                                    u8245 85EA  
                                  u6590 839C                                    u7710 59DE  
                                  u9230 3D08                                    u4990 30BC  
                                  u4798 2D8E                                    u9311 4062  
                                  u4895 2EF4                                    u8360 803E  
                                  u9320 4078                                    u9400 00DA  
                                  u7800 5E76                                    u8600 3594  
                                  u9321 4076                                    u9330 408C  
                                  u9250 3D78                                    u5890 3BE6  
                                  u8514 3220                                    u8610 62D8  
                                  u8515 321A                                    u9340 4090  
                                  u9180 753C                                    u9270 3D8A  
                                  u9430 0194                                    u7750 5DAE  
                                  u8534 3242                                    u5895 3BD6  
                                  u7807 5E68                                    u8535 323C  
                                  u7680 5884                                    u9360 40A6  
                                  u9520 050E                                    u9440 0196  
                                  u8385 8072                                    u8386 8074  
                                  u8378 8040                                    u9290 3DDA  
                                  u8554 3470                                    u9187 752E  
                                  u8555 346A                                    u9620 0648  
                                  u7757 5DA0                                    u9550 0562  
                                  u9470 02A6                                    u7790 5E48  
                                  u8574 356A                                    u8494 31F0  
                                  u8575 3564                                    u8495 31EA  
                                  u9480 02A8                                    u8594 358C  
                                  _PLLR 01CEE0                                    u7795 5E42  
                                  u8595 3586                                    u9580 05C6  
                                  u7797 5E34                                    u9850 10B8  
                                  u9690 0A18                                    u9870 116E  
                                  u9790 0EE4                                    u9950 541C  
                                  u9880 1170                                    u9960 5462  
                                  u9990 553E                                    u9967 5454  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8728                           __CFG_FCMEN$ON 000000  
                                  _dbuf 02AC                                    _atoi 57D8  
                                  _ctoa 7C82                                    _main 4156  
                                  _dtoa 3CD6                                    _nanf 80FA  
                                  _seed 009B                                    _prec 0020  
                                  _nout 001C                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 529A                                    btemp 0035  
                                  _utoa 4C6E                                    _xtoa 4548  
                __end_of_check_adc_scan 8F1A                           ___fpclassifyf 6482  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0026  
             __end_of_SPI1_Exchange8bit 8CD6                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8B94                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0055                        __end_of_INT0_ISR 8EAE  
                      __end_of_INT1_ISR 8EBE          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 783E           __end_of_OSCILLATOR_Initialize 8E4C  
                                 l10020 1FDC                                   l10006 1E60  
                                 l10040 216E                                   l10104 7868  
                                 l10034 2114                                   l10050 2192  
                                 l10106 78A8                                   l10044 2172  
                                 l10072 5046                                   l10306 5F2E  
                                 l10092 521C                                   l10084 516E  
                                 l10156 793E                                   l10078 5104  
                                 l10190 719A                                   l10318 6056  
                                 l10434 4350                                   l10436 437E  
                                 l10456 43D6                                   l10448 43B2  
                                 l10392 41A2                                   l10466 4502  
                                 l10394 41B4                                   l10386 417C  
                                 l10388 4184                                   l10478 4536  
                                 PRLOCK 0039EF                         __end_of___aodiv 57D8  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 31D6                                   _ADCLK 003EFF  
                       __end_of___aomod 5C8C                                   _ADPCH 003EF1  
                       __end_of___fldiv 3CD6                                   _ADREF 003EFD  
                       __end_of___awdiv 6BBA                         __end_of___flneg 8418  
                                 STR_10 FFA6                                   STR_11 FF32  
                                 STR_20 FFBF                                   STR_12 FFFC  
                                 STR_13 FFF9                                   STR_21 FF88  
                                 STR_22 FF88                                   STR_23 FF88  
                                 STR_15 FFB3                                   STR_16 FFC9  
                                 STR_24 FEE1                                   STR_33 FF0B  
                                 STR_17 FF0C                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF0C                                   STR_42 FFEA  
                                 STR_34 FFD7                                   STR_26 FF1F  
                                 STR_51 FFED                                   STR_35 FFDF  
                                 STR_19 FFBF                                   STR_27 FEF9  
                                 STR_44 FFEA                         __end_of___awmod 7064  
                                 STR_53 FFED                                   STR_61 FFF6  
                                 STR_46 FFF0                                   STR_38 FFDB  
                                 STR_63 FFF6                                   STR_39 FFE3  
                                 STR_48 FFF0                                   STR_56 FFF3  
                                 _ADRPT 003EEC                                   STR_65 FFE7  
                                 STR_58 FFF3                                   STR_67 FFE7  
                       __end_of___flmul 2A1A                         __end_of___flsub 845E  
                       __end_of___fltol 690A                                   u10010 4C88  
                                 u10200 47EA                                   u10120 464A  
                                 u10041 4F36                                   u10050 4F4C  
                                 u10130 469E                                   u10051 4F4A  
                                 u10211 481A                                   u10060 4F60  
                                 u10220 4830                                   u10140 46A0  
                                 u10300 13C0                                   u10221 482E  
                                 u10070 4F64                                   u10230 4844  
                                 u10310 13E6                                   u10240 4848  
                                 u10160 46FE                                   u10170 4700  
                                 u10090 4562                                   u10410 1748  
                                 u10340 1540                                   u10190 47CA  
                                 u10430 18BC                                   u10350 1542  
                                 u10360 1568                                   u10530 1EB4  
                                 u10290 13BE                                   u10610 5290  
                       __end_of___lodiv 6798                                   u10195 47AC  
                                 u10460 1B34                                   u10550 2064  
                                 u10470 1B36                                   u10640 791E  
                                 u10730 60A6                                   _U1P1H 003DED  
                                 u10740 60A8                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 6CFA  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0004  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 00E2                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8F34  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8B6C                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8278                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8DDA                            _DMA1CON1bits 003BFD  
                                 _flags 0022                                   _fputc 6E28  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 85BA  
                                 _fputs 7AC8                         __end_of_isdigit 888C  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0055  
                                 _srand 8794                                   _width 001E  
                                 _putch 8DA4                         __end_of_islower 882C  
                       __end_of_isspace 83D0                _INT1_SetInterruptHandler 8AA4  
                       __end_of_isupper 885C                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0035  
                                 ltemp1 0039                                   ltemp2 003D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0035  
                                 ttemp1 0038                                   ttemp2 003B  
                                 ttemp3 003E                                   ttemp5 0036  
                                 ttemp6 0039                                   ttemp7 003D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8A54  
           _UART1_SetRxInterruptHandler 8A2C                                   wtemp0 0035  
                                 wtemp1 0037                                   wtemp2 0039  
                                 wtemp3 003B                                   wtemp4 003D  
                                 wtemp5 003F                                   wtemp8 0036  
                       __end_of_sprintf 7390                         __end_of_tolower 7E12  
                       __end_of_strncmp 5EAC                         __end_of_toupper 7D8E  
                   ??_UART1_tx_vect_isr 00E2               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8BBA                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 84EA                   __end_of_ringBufS_init 89B4  
                       __initialization 754E                       _UART2_rx_vect_isr 8BE4  
                          __end_of_atoi 5A4C                            __end_of_ctoa 7D0A  
                          __end_of_main 4548                            __end_of_dtoa 4156  
                          __end_of_nanf 815C                            __end_of_stoa 5558  
                          __end_of_utoa 4FAE                            __end_of_xtoa 4902  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0055  
               __end_of_TMR2_Initialize 8E0A                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8A7C                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 00E2               __end_of_UART1_tx_vect_isr 8B92  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8912  
                       _PWM8_Initialize 8E20                        _UART1_Initialize 8096  
                     _UART2_tx_vect_isr 8BBC                      _UART2_Transmit_ISR 88E6  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7F60  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 85BA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0055                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 826A  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8E90                                  u410_48 8C82  
                                _SCANPR 0039F7                                  u432_40 8D1A  
                                u432_46 8D1C                                  u408_48 8C60  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u842_20 8B4C  
                                u842_26 8B4E                                  u871_48 8CA4  
                                u874_28 8C3E                                  u886_44 7A94  
                                u886_45 7A8E                                  u888_40 7AB4  
                                u888_46 7AB6                        __end_of___xxtofl 62C2  
 __end_of_ADCC_DischargeSampleCapacitor 8F02  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8EFA                __end_of_send_lcd_cmd_dma 837E  
                   ??_UART2_tx_vect_isr 00E2               __end_of_UART2_rx_vect_isr 8C0A  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8ECE  
                      _UART2_Initialize 81BE                                  _WaitMs 8728  
                       _conv_raw_result 31D6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 690A  
                                ___fleq 7614                       _ADCC_ThresholdISR 7FC8  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7B60  
                                _efgtoa 0000                                  _floorf 4902  
                    ?_ADCC_ThresholdISR 0055                                  _memset 4FAE  
                  __size_of_help_button 0038                                  clear_0 759A  
                                clear_1 75AE                                  clear_2 75C0  
                                clear_3 75CC                                  clear_4 75D8  
                                clear_5 75E4                                  clear_6 75F0  
                                clear_7 75FC                                  _printf 815C  
                    _eaDogM_WriteString 78E6                                  _strcpy 747A  
                             ?_ADCC_ISR 0055                                  _strlen 798C  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7EF6  
                        _PMD_Initialize 8E4C               __end_of_UART2_tx_vect_isr 8BE2  
                                lltemp0 0035                                  lltemp1 003D  
                                lltemp2 0045                                  lltemp3 004D  
                   ??_ADCC_ThresholdISR 0056                  __end_of_start_adc_scan 7FC8  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 82D2  
                      __end_of_vfprintf 78E6                              _StartTimer 867C  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8530  
                     _SYSTEM_Initialize 84A4                              __accesstop 0060  
               __end_of__initialization 760E                               ?_INT0_ISR 0055  
                             ?_INT1_ISR 0055                    __end_of_display_help 8F12  
                  __end_of_display_info 8F0A               __end_of_CLKREF_Initialize 8ED8  
                         ___rparam_used 000000              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 85FC                   _set_temp_display_help 8E72  
             __end_of_ADCC_ThresholdISR 8030                  __end_of_ringBufS_flush 7BF2  
                        __pcstackCOMRAM 0055                              ___inthi_sp 0F56  
                            ___intlo_sp 17AB                            __pidataBANK0 863C  
                          __pidataBANK1 76D8                               ?_TMR5_ISR 0055  
                             ?_TMR6_ISR 0055                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6F4C                           __end_of_fputs 7B60  
                         __end_of_srand 87C8                   __end_of_TMR5_CallBack 8C52  
                         __end_of_putch 8DBE                 __end_of_PWM8_Initialize 8E36  
               __end_of_TMR6_Initialize 893C                       _adc_int_t_handler 7A2E  
                __end_of_PMD_Initialize 8E60                              ??_ADCC_ISR 0055  
                 __end_of_TMR6_CallBack 8CB8             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8EE4  
                        _clear_adc_scan 8F22                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0013               __end_of_SYSTEM_Initialize 84EA  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5EAC  
               __end_of_conv_raw_result 375C                   _INT0_InterruptHandler 0019  
                            ??_INT0_ISR 0055                              ??_INT1_ISR 0055  
                     __end_of_TimerDone 8C2E                        _DMA1_DMADCNT_ISR 8ED8  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8D88  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8A7C  
               __end_of_ADCC_Initialize 7F60                              ??_TMR5_ISR 00E3  
             __end_of_adc_int_t_handler 7AC8                              ??_TMR6_ISR 00E2  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8B1C   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8AF4                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8D30  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8F28                          ?_DMA1_DMAA_ISR 0055  
                      _DMA1_DMASCNT_ISR 8EC0                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0055  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 863C  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8DDA  
                               __Lparam 0000                __end_of_UART1_Initialize 80FA  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5558  
                               ___fladd 2A1A                                 ___aomod 5A4C  
                               ___fldiv 375C                                 ___awdiv 6A6C  
                               ___flneg 83D0                                 ___awmod 6F4C  
                               ___flmul 21F0                                 ___flsub 8418  
                               ___fltol 6798                                 ___lodiv 6618  
                               ___lomod 6BBA               __end_of_UART1_Receive_ISR 8D4E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 747A                                 __pcinit 754E  
              __end_of_mode_lamp_bright 8E9E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 001E                     _eaDogM_WriteCommand 8E82  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 4156                                 __ptext1 7F60  
                               __ptext2 8E60                                 __ptext3 8EFA  
                               __ptext4 8794                                 __ptext5 7390  
                               __ptext6 893C                                 __ptext7 8964  
                               __ptext8 8CB8                                 __ptext9 898C  
                     _UART2_Receive_ISR 8D4E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8E36  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               us557999 57C2                                 us653999 6782  
                               _isalpha 8576                                 _isdigit 885C  
                               us568999 5C7A                                 us921999 3CF0  
                               us658999 6CEA                                 _mode_sw 0028  
                               us990999 52AC                       __end_of_lp_filter 6482  
                               _islower 87FC                                 _isspace 837E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 821C                                 _isupper 882C  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 7286  
                               _tolower 7D8E                   __size_of_display_help 0008  
                               _utctime 008C                   __size_of_display_info 0008  
                               _strncmp 5C8C                                 _toupper 7D0A  
                  end_of_initialization 760E               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8A2C             _UART1_SetTxInterruptHandler 8A04  
   __end_of_UART2_SetRxInterruptHandler 8A04             _UART2_SetRxInterruptHandler 89DC  
                             i2u1080_48 8BCE                               i2u1082_48 8BF6  
                             i2u1076_48 8B7E                               i2u1078_48 8BA6  
                     __end_of_set_vterm 8DA4                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 009A  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8F34  
             __end_of_UART2_Receive_ISR 8D6C                          wdtdelay@dcount 0090  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 00E3  
                 _INT1_InterruptHandler 0016                               _PORTBbits 003FCB  
              _TMR6_SetInterruptHandler 8A54                            _display_help 8F0A  
                 _TMR5_InterruptHandler 0098                            _display_info 8F02  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 0038  
   __end_of_ADCC_SetADIInterruptHandler 8B44             _ADCC_SetADIInterruptHandler 8B1C  
                            _update_lcd 7178                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7E8C  
                       _SPI1_Initialize 8E0A                   __end_of_get_vterm_ptr 88BA  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 000E  
                        __end_of_WaitMs 875E            __end_of_INTERRUPT_Initialize 8096  
                            _vterm_dump 6CFA                          __end_of___flge 6A6C  
                        __end_of___fleq 76D8    __end_of_INT0_DefaultInterruptHandler 8F3C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8F3A  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 82D2  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4C6E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0084                          __end_of_memset 529A  
                        __end_of_printf 81BE                __end_of_DMA1_DMADCNT_ISR 8EE2  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8C74  
                        __end_of_strcpy 754E                          __end_of_strlen 7A2E  
                   start_initialization 754E    __end_of_TMR5_DefaultInterruptHandler 8B6C  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8B44  
       __size_of_PIN_MANAGER_Initialize 0090                             __end_of_abs 84A4  
                 __end_of_INT1_CallBack 8C96               __size_of_set_display_info 001E  
                           __end_of_pad 7178                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 898C           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 6618                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 026C                __end_of_DMA1_DMASCNT_ISR 8ECE  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR 8EF0  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8C0A  
                         _ringBufS_init 898C                             __pdataBANK0 00A3  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
            __end_of_EXT_INT_Initialize 87FC                     __end_of_help_button 86F0  
       __end_of_eaDogM_WriteStringAtPos 8794                 __end_of_DMA1_Initialize 7EF6  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 8AF4  
                         __pcstackBANK0 00E2                __size_of_TMR2_Initialize 0018  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8E20  
              _UART1_RxInterruptHandler 000D                _UART2_TxInterruptHandler 0010  
                             __end_of_T FEE1                        _convert_adc_data 7E12  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7390  
                __end_of_DMA1_DMAOR_ISR 8EFA                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0001                  __size_of_TMR6_CallBack 0022  
               __end_of_DMA2_Initialize 832C                  _PIN_MANAGER_Initialize 7BF2  
                  __end_of_wait_lcd_set 8F2E                           __pmediumconst FE50  
                             __ptext100 8E20                               __ptext101 8E4C  
                             __ptext110 7E8C                               __ptext102 7BF2  
                             __ptext111 8ECE                               __ptext103 8E36  
                             __ptext120 8C52                               __ptext112 7EF6  
                             __ptext104 8030                               __ptext121 8F3A  
                             __ptext113 8AF4                               __ptext105 8F1A  
                             __ptext130 7FC8                               __ptext122 8EB0  
                             __ptext114 8B1C                               __ptext106 87C8  
                             __ptext131 8B6C                               __ptext123 8C74  
                             __ptext115 821C                               __ptext107 8AA4  
                             __ptext140 8C96                               __ptext132 88BA  
                             __ptext124 8F3C                               __ptext116 85FC  
                             __ptext108 8ACC                               __ptext141 8530  
                             __ptext133 8B94                               __ptext125 8F34  
                             __ptext117 8C2E                               __ptext109 82D2  
                             __ptext142 8EC0                               __ptext134 8D30  
                             __ptext126 86F0                               __ptext118 8B44  
                             __ptext143 8ED8                               __ptext135 8BBC  
                             __ptext127 7A2E                               __ptext119 8EA0  
                             __ptext144 8EE4                               __ptext136 88E6  
                             __ptext128 8F3E                               __ptext145 8EF0  
                             __ptext137 8BE4                               __ptext129 8D12  
                             __ptext146 0000                               __ptext138 8D4E  
                             __ptext139 8DC0                      __end_of_StartTimer 86B8  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 86F0                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 62C2  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 8030                                _T6CLKCON 003F96  
                       ?_DMA1_DMAOR_ISR 0055                                _INT0_ISR 8EA0  
                              _INT1_ISR 8EB0                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0060                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              i2u438_48 870C                                i2u438_49 8720  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u890_48 7FFC  
                              i2u890_49 8010                __size_of_TMR5_Initialize 0046  
                             _set_vterm 8D88                     __size_of_update_lcd 010E  
                           _help_button 86B8              __end_of_UART1_Transmit_ISR 88E6  
                              _TMR5_ISR 821C                                _TMR6_ISR 8DC0  
                             _port_data 00D2                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8C2E  
                            _ADCON0bits 003EF8                      __end_of_check_help 60BE  
                             _start_lcd 8F2E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8C96  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8CF4                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7562                               copy_data1 7584  
              _INT0_SetInterruptHandler 8ACC                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 0032     __end_of_UART2_SetTxInterruptHandler 89DC  
           _UART2_SetTxInterruptHandler 89B4                                __Hparam0 0000  
                          _uart1RxCount 002F                            _uart2RxCount 0029  
                              __Lparam0 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0586  
                         _wait_lcd_done 8D6C                            _send_lcd_cmd 8964  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8D12  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                   __end_of_DMA1_DMAA_ISR 8EEE  
                    ___fpclassifyf@F463 0088    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 01BB                                ___xxtofl 60BE  
                     ?_DMA1_DMADCNT_ISR 0055                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 8E90                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 00E3                                __ptext10 8E82  
                              __ptext11 7E12                                __ptext20 7286  
                              __ptext12 62C2                                __ptext21 888C  
                              __ptext13 31D6                                __ptext30 8F2E  
                              __ptext22 8728                                __ptext14 80FA  
                              __ptext31 7B60                                __ptext23 7178  
                              __ptext15 8CD6                                __ptext40 4C6E  
                              __ptext32 4FAE                                __ptext24 875E  
                              __ptext16 60BE                                __ptext41 6BBA  
                              __ptext33 815C                                __ptext25 832C  
                              __ptext17 8F22                                __ptext50 6482  
                              __ptext42 6618                                __ptext34 783E  
                              __ptext26 8D6C                                __ptext18 5EAC  
                              __ptext51 6798                                __ptext43 5C8C  
                              __ptext35 1244                                __ptext27 8278  
                              __ptext19 6CFA                                __ptext60 6A6C  
                              __ptext52 8418                                __ptext44 529A  
                              __ptext36 4548                                __ptext28 78E6  
                              __ptext61 3CD6                                __ptext53 2A1A  
                              __ptext45 0000                                __ptext37 7D0A  
                              __ptext29 8F28                                __ptext70 8DA4  
                              __ptext62 845E                                __ptext54 83D0  
                              __ptext46 7D8E                                __ptext38 87FC  
                              __ptext71 7794                                __ptext63 5A4C  
                              __ptext55 21F0                                __ptext47 882C  
                              __ptext39 8576                                __ptext80 85BA  
                              __ptext72 57D8                                __ptext64 5558  
                              __ptext56 690A                                __ptext48 747A  
                              __ptext81 86B8                                __ptext73 837E  
                              __ptext65 7C82                                __ptext57 7614  
                              __ptext49 4902                                __ptext90 89DC  
                              __ptext82 8C0A                                __ptext74 885C  
                              __ptext66 7064                                __ptext58 375C  
                              __ptext91 8096                                __ptext83 867C  
                              __ptext75 8D88                                __ptext67 798C  
                              __ptext59 6F4C                                __ptext92 8A04  
                              __ptext84 8F02                                __ptext76 8E72  
                              __ptext68 7AC8                                __ptext93 8A2C  
                              __ptext85 8F0A                                __ptext77 8CF4  
                              __ptext69 6E28                                __ptext94 8912  
                              __ptext86 8F12                                __ptext78 8DDA  
                              __ptext95 8A54                                __ptext87 84A4  
                              __ptext79 8E90                                __ptext96 84EA  
                              __ptext88 81BE                                __ptext97 8A7C  
                              __ptext89 89B4                                __ptext98 8DF2  
                              __ptext99 8E0A                        __size_of_isupper 0030  
                              us1002999 4CD4                                us1011999 45C8  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7794                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 03F2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0055  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0007                               stoa@F1166 00CB  
                    ??_DMA1_DMASCNT_ISR 00E3            __end_of_ADCC_StartConversion 8E72  
                              _spi_link 0078                                _wdtdelay 8278  
            __end_of_UART2_Transmit_ISR 8912                                _vfprintf 783E  
              __end_of_convert_adc_data 7E8C              __end_of_PWM8_LoadDutyValue 85FC  
  __end_of_INT1_DefaultInterruptHandler 8F3E   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8F3C                           ??_Default_ISR 0055  
                           _uart1RxHead 0031                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0034                             _uart2RxHead 002B  
                           _uart1RxTail 0030                          _get_raw_result 8CD6  
                           _uart2TxHead 002E                             _uart1TxTail 0033  
                           _uart2RxTail 002A                             _uart2TxTail 002D  
                          _wait_lcd_set 8F28                      _EXT_INT_Initialize 87C8  
  __end_of_TMR6_DefaultInterruptHandler 8576   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 8530    __end_of_ADCC_DefaultInterruptHandler 8F40  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8F3E  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 893C          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8E82                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 798C                   __end_of_mode_lamp_dim 8DF2  
               __end_of_adc_int_handler 8D30                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 7286  
                _uart2TxBufferRemaining 002C                          _FVR_Initialize 8F1A  
                __end_of_get_raw_result 8CF4                        _send_lcd_cmd_dma 832C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0024  
      __end_of_INT1_SetInterruptHandler 8ACC               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 00E3                _UART1_TxInterruptHandler 000A  
             __end_of_send_lcd_cmd_long 8964                 __size_of_start_adc_scan 0068  
                   __end_of_Default_ISR 8F3A          __end_of_PIN_MANAGER_Initialize 7C82  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6E28  
               _eaDogM_WriteStringAtPos 875E                           _get_vterm_ptr 888C  
                        _check_adc_scan 8F12               __size_of_UART2_Initialize 005E  
