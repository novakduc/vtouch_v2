

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov  4 03:52:39 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=4,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=4,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=4,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=4,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=4,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   162                           	psect	text139,global,reloc=4,class=CODE,delta=1
   163                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   164                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   165  0000                     
   166                           ; Version 2.10
   167                           ; Generated 31/07/2019 GMT
   168                           ; 
   169                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution.
   183                           ; 
   184                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   185                           ;        software without specific prior written permission.
   186                           ; 
   187                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   188                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   189                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   190                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   191                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   192                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   193                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   194                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   195                           ; 
   196                           ; 
   197                           ; Code-generator required, PIC18F57K42 Definitions
   198                           ; 
   199                           ; SFR Addresses
   200  0000                     
   201 ;;_mode	offset	0
   202 ;;_channel	offset=-1 (param)
   203 ;;_s	offset=-2 (param)
   204 ;;_cmd	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_data	offset=-1 (param)
   207 ;;__this	offset=-2 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_chan	offset=-1 (param)
   210 ;;_to_what	offset=-2 (param)
   211 ;;_index	offset=-1 (param)
   212 ;;_arg	offset	0
   213 ;;_exp	offset	4
   214 ;;_sign	offset=-1 (param)
   215 ;;_val	offset=-5 (param)
   216 ;;_flipper	offset=-1 (param)
   217 ;;_f	offset	0
   218 ;;_ap	offset	6
   219 ;;_s	offset=-3 (param)
   220 ;;_fmt	offset=-5 (param)
   221 ;;_line	offset=-1 (param)
   222 ;;_vterm	offset=-2 (param)
   223 ;;_numMilliseconds	offset=-2 (param)
   224 ;;_vterm	offset=-1 (param)
   225 ;;_r	offset=-1 (param)
   226 ;;_c	offset=-2 (param)
   227 ;;_strPtr	offset=-4 (param)
   228 ;;_strPtr	offset=-1 (param)
   229 ;;_delay	offset=-4 (param)
   230 ;;_strPtr	offset=-2 (param)
   231 ;;__this	offset=-2 (param)
   232 ;;_clearBuffer	offset=-3 (param)
   233 ;;_s	offset	0
   234 ;;_k	offset	2
   235 ;;_dest	offset=-2 (param)
   236 ;;_c	offset=-4 (param)
   237 ;;_n	offset=-6 (param)
   238 ;;_ap	offset	0
   239 ;;_fmt	offset=-3 (param)
   240 ;;_cfmt	offset	0
   241 ;;_fp	offset=-2 (param)
   242 ;;_fmt	offset=-4 (param)
   243 ;;_ap	offset=-6 (param)
   244 ;;_vfpfcnvrt$4136	offset	0
   245 ;;_vfpfcnvrt$4142	offset	2
   246 ;;_vfpfcnvrt$4135	offset	4
   247 ;;_llu	offset	6
   248 ;;_ll	offset	14
   249 ;;_f	offset	22
   250 ;;_ct	offset	26
   251 ;;_cp	offset	29
   252 ;;_c	offset	31
   253 ;;_fp	offset=-2 (param)
   254 ;;_fmt	offset=-4 (param)
   255 ;;_ap	offset=-6 (param)
   256 ;;_xtoa$4121	offset	0
   257 ;;_xtoa$4120	offset	2
   258 ;;_n	offset	4
   259 ;;_c	offset	12
   260 ;;_i	offset	14
   261 ;;_w	offset	16
   262 ;;_p	offset	18
   263 ;;_fp	offset=-2 (param)
   264 ;;_d	offset=-10 (param)
   265 ;;_x	offset=-11 (param)
   266 ;;_toupper$4773	offset	0
   267 ;;_c	offset=-2 (param)
   268 ;;_c	offset=-2 (param)
   269 ;;_c	offset=-2 (param)
   270 ;;_r	offset	0
   271 ;;_l	offset	2
   272 ;;__l	offset=-2 (param)
   273 ;;__r	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_nuls	offset	0
   276 ;;_l	offset	7
   277 ;;_p	offset	9
   278 ;;_cp	offset	11
   279 ;;_w	offset	13
   280 ;;_i	offset	15
   281 ;;_fp	offset=-2 (param)
   282 ;;_s	offset=-4 (param)
   283 ;;_efgtoa$4100	offset	0
   284 ;;_efgtoa$4099	offset	2
   285 ;;_efgtoa$4098	offset	4
   286 ;;_efgtoa$4094	offset	6
   287 ;;_efgtoa$4090	offset	8
   288 ;;_efgtoa$4089	offset	10
   289 ;;_u	offset	12
   290 ;;_g	offset	16
   291 ;;_l	offset	20
   292 ;;_h	offset	24
   293 ;;_ou	offset	28
   294 ;;_n	offset	32
   295 ;;_e	offset	34
   296 ;;_i	offset	36
   297 ;;_w	offset	38
   298 ;;_p	offset	40
   299 ;;_sign	offset	42
   300 ;;_d	offset	44
   301 ;;_ne	offset	46
   302 ;;_m	offset	48
   303 ;;_pp	offset	50
   304 ;;_t	offset	52
   305 ;;_mode	offset	54
   306 ;;_nmode	offset	55
   307 ;;_fp	offset=-2 (param)
   308 ;;_f	offset=-6 (param)
   309 ;;_c	offset=-7 (param)
   310 ;;_tolower$4758	offset	0
   311 ;;_c	offset=-2 (param)
   312 ;;_c	offset=-2 (param)
   313 ;;_d	offset	0
   314 ;;_s	offset	2
   315 ;;_dest	offset=-2 (param)
   316 ;;_src	offset=-4 (param)
   317 ;;_u	offset	0
   318 ;;_m	offset	4
   319 ;;_e	offset	8
   320 ;;_x	offset=-4 (param)
   321 ;;_u	offset	0
   322 ;;_e	offset	4
   323 ;;_x	offset=-4 (param)
   324 ;;_exp1	offset	0
   325 ;;_sign1	offset	1
   326 ;;_f1	offset=-4 (param)
   327 ;;_b	offset=-4 (param)
   328 ;;_a	offset=-8 (param)
   329 ;;_grs	offset	0
   330 ;;_bexp	offset	1
   331 ;;_aexp	offset	2
   332 ;;_signs	offset	3
   333 ;;_b	offset=-4 (param)
   334 ;;_a	offset=-8 (param)
   335 ;;_f1	offset=-4 (param)
   336 ;;_prod	offset	0
   337 ;;_grs	offset	4
   338 ;;_temp	offset	8
   339 ;;_bexp	offset	10
   340 ;;_aexp	offset	11
   341 ;;_sign	offset	12
   342 ;;_b	offset=-4 (param)
   343 ;;_a	offset=-8 (param)
   344 ;;_ff1	offset=-4 (param)
   345 ;;_ff2	offset=-8 (param)
   346 ;;_ff1	offset=-4 (param)
   347 ;;_ff2	offset=-8 (param)
   348 ;;_grs	offset	0
   349 ;;_rem	offset	4
   350 ;;_new_exp	offset	8
   351 ;;_aexp	offset	10
   352 ;;_bexp	offset	11
   353 ;;_sign	offset	12
   354 ;;_b	offset=-4 (param)
   355 ;;_a	offset=-8 (param)
   356 ;;_sign	offset	0
   357 ;;_counter	offset	1
   358 ;;_dividend	offset=-2 (param)
   359 ;;_divisor	offset=-4 (param)
   360 ;;_quotient	offset	0
   361 ;;_sign	offset	2
   362 ;;_counter	offset	3
   363 ;;_dividend	offset=-2 (param)
   364 ;;_divisor	offset=-4 (param)
   365 ;;_dtoa$4066	offset	0
   366 ;;_n	offset	2
   367 ;;_i	offset	10
   368 ;;_s	offset	12
   369 ;;_w	offset	14
   370 ;;_p	offset	16
   371 ;;_fp	offset=-2 (param)
   372 ;;_d	offset=-10 (param)
   373 ;;_a	offset=-2 (param)
   374 ;;_sign	offset	0
   375 ;;_counter	offset	1
   376 ;;_dividend	offset=-8 (param)
   377 ;;_divisor	offset=-16 (param)
   378 ;;_quotient	offset	0
   379 ;;_sign	offset	8
   380 ;;_counter	offset	9
   381 ;;_dividend	offset=-8 (param)
   382 ;;_divisor	offset=-16 (param)
   383 ;;_w	offset	0
   384 ;;_fp	offset=-2 (param)
   385 ;;_c	offset=-3 (param)
   386 ;;_w	offset	0
   387 ;;_i	offset	2
   388 ;;_fp	offset=-2 (param)
   389 ;;_buf	offset=-4 (param)
   390 ;;_p	offset=-6 (param)
   391 ;;_a	offset	0
   392 ;;_s	offset=-2 (param)
   393 ;;_i	offset	0
   394 ;;_c	offset	2
   395 ;;_s	offset=-2 (param)
   396 ;;_fp	offset=-4 (param)
   397 ;;_c	offset=-2 (param)
   398 ;;_fp	offset=-4 (param)
   399 ;;_c	offset=-1 (param)
   400 ;;__this	offset=-2 (param)
   401 ;;_c	offset=-3 (param)
   402 ;;_atoi$4619	offset	0
   403 ;;_atoi$4617	offset	2
   404 ;;_atoi$4618	offset	4
   405 ;;_n	offset	5
   406 ;;_neg	offset	7
   407 ;;_s	offset=-2 (param)
   408 ;;_isspace$4657	offset	0
   409 ;;_c	offset=-2 (param)
   410 ;;_c	offset=-2 (param)
   411 ;;_vterm	offset=-1 (param)
   412 ;;_new_response_info	offset=-1 (param)
   413 ;;_new_response_info	offset=-1 (param)
   414 ;;_level	offset=-2 (param)
   415 ;;_dutyValue	offset=-2 (param)
   416 ;;_timer	offset=-1 (param)
   417 ;;_timer	offset=-1 (param)
   418 ;;_count	offset=-3 (param)
   419 ;;_InterruptHandler	offset=-3 (param)
   420 ;;_InterruptHandler	offset=-3 (param)
   421 ;;_InterruptHandler	offset=-3 (param)
   422 ;;_InterruptHandler	offset=-3 (param)
   423 ;;_InterruptHandler	offset=-3 (param)
   424 ;;_InterruptHandler	offset=-3 (param)
   425 ;;_state	offset	0
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_InterruptHandler	offset=-3 (param)
   428 ;;_InterruptHandler	offset=-3 (param)
   429 ;;_InterruptHandler	offset=-3 (param)
   430 ;;_timerVal	offset=-2 (param)
   431 ;;_channel	offset=-1 (param)
   432 ;;_i	offset	0
   433                           
   434                           	psect	idataBANK0
   435  017C22                     __pidataBANK0:
   436                           	opt callstack 0
   437                           
   438                           ;initializer for stoa@F1166
   439  017C22  28                 	db	40
   440  017C23  6E                 	db	110
   441  017C24  75                 	db	117
   442  017C25  6C                 	db	108
   443  017C26  6C                 	db	108
   444  017C27  29                 	db	41
   445  017C28  00                 	db	0
   446                           
   447                           ;initializer for _port_data
   448  017C29  FF                 	db	255
   449  017C2A  00                 	db	0
   450  017C2B  FF                 	db	255
   451  017C2C  00                 	db	0
   452  017C2D  FF                 	db	255
   453  017C2E  00                 	db	0
   454  017C2F  FF                 	db	255
   455  017C30  00                 	db	0
   456  017C31  FF                 	db	255
   457  017C32  00                 	db	0
   458  017C33  FF                 	db	255
   459  017C34  00                 	db	0
   460  017C35  FF                 	db	255
   461  017C36  00                 	db	0
   462  017C37  FF                 	db	255
   463  017C38  00                 	db	0
   464                           
   465                           	psect	idataBANK2
   466  016620                     __pidataBANK2:
   467                           	opt callstack 0
   468                           
   469                           ;initializer for _V
   470  016620  00                 	db	0
   471  016621  00                 	db	0
   472  016622  00                 	db	0
   473  016623  00                 	db	0
   474  016624  00                 	db	0
   475  016625  00                 	db	0
   476  016626  00                 	db	0
   477  016627  00                 	db	0
   478  016628  00                 	db	0
   479  016629  00                 	db	0
   480  01662A  00                 	db	0
   481  01662B  00                 	db	0
   482  01662C  00                 	db	0
   483  01662D  00                 	db	0
   484  01662E  00                 	db	0
   485  01662F  00                 	db	0
   486  016630  00                 	db	0
   487  016631  00                 	db	0
   488  016632  00                 	db	0
   489  016633  00                 	db	0
   490  016634  00                 	db	0
   491  016635  00                 	db	0
   492  016636  00                 	db	0
   493  016637  00                 	db	0
   494  016638  00                 	db	0
   495  016639  00                 	db	0
   496  01663A  00                 	db	0
   497  01663B  00                 	db	0
   498  01663C  00                 	db	0
   499  01663D  00                 	db	0
   500  01663E  00                 	db	0
   501  01663F  00                 	db	0
   502  016640  00                 	db	0
   503  016641  00                 	db	0
   504  016642  00                 	db	0
   505  016643  00                 	db	0
   506  016644  00                 	db	0
   507  016645  00                 	db	0
   508  016646  00                 	db	0
   509  016647  00                 	db	0
   510  016648  00                 	db	0
   511  016649  00                 	db	0
   512  01664A  00                 	db	0
   513  01664B  00                 	db	0
   514  01664C  00                 	db	0
   515  01664D  00                 	db	0
   516  01664E  00                 	db	0
   517  01664F  00                 	db	0
   518  016650  00                 	db	0
   519  016651  00                 	db	0
   520  016652  00                 	db	0
   521  016653  00                 	db	0
   522  016654  00                 	db	0
   523  016655  00                 	db	0
   524  016656  00                 	db	0
   525  016657  00                 	db	0
   526  016658  00                 	db	0
   527  016659  00                 	db	0
   528  01665A  00                 	db	0
   529  01665B  00                 	db	0
   530  01665C  00                 	db	0
   531  01665D  00                 	db	0
   532  01665E  00                 	db	0
   533  01665F  00                 	db	0
   534  016660  00                 	db	0
   535  016661  00                 	db	0
   536  016662  00                 	db	0
   537  016663  00                 	db	0
   538  016664  00                 	db	0
   539  016665  00                 	db	0
   540  016666  00                 	db	0
   541  016667  00                 	db	0
   542  016668  00                 	db	0
   543  016669  00                 	db	0
   544  01666A  00                 	db	0
   545  01666B  00                 	db	0
   546  01666C  00                 	db	0
   547  01666D  00                 	db	0
   548  01666E  00                 	db	0
   549  01666F  00                 	db	0
   550  016670  00                 	db	0
   551  016671  00                 	db	0
   552  016672  00                 	db	0
   553  016673  00                 	db	0
   554  016674  00                 	db	0
   555  016675  00                 	db	0
   556  016676  00                 	db	0
   557  016677  00                 	db	0
   558  016678  00                 	db	0
   559  016679  00                 	db	0
   560  01667A  00                 	db	0
   561  01667B  00                 	db	0
   562  01667C  00                 	db	0
   563  01667D  00                 	db	0
   564  01667E  00                 	db	0
   565  01667F  00                 	db	0
   566  016680  00                 	db	0
   567  016681  00                 	db	0
   568  016682  00                 	db	0
   569  016683  00                 	db	0
   570  016684  00                 	db	0
   571  016685  00                 	db	0
   572  016686  00                 	db	0
   573  016687  00                 	db	0
   574  016688  00                 	db	0
   575  016689  00                 	db	0
   576  01668A  00                 	db	0
   577  01668B  00                 	db	0
   578  01668C  00                 	db	0
   579  01668D  00                 	db	0
   580  01668E  00                 	db	0
   581  01668F  00                 	db	0
   582  016690  00                 	db	0
   583  016691  00                 	db	0
   584  016692  00                 	db	0
   585  016693  00                 	db	0
   586  016694  00                 	db	0
   587  016695  00                 	db	0
   588  016696  00                 	db	0
   589  016697  00                 	db	0
   590  016698  00                 	db	0
   591  016699  00                 	db	0
   592  01669A  00                 	db	0
   593  01669B  00                 	db	0
   594  01669C  00                 	db	0
   595  01669D  00                 	db	0
   596  01669E  00                 	db	0
   597  01669F  00                 	db	0
   598  0166A0  00                 	db	0
   599  0166A1  0000               	dw	0
   600  0166A3  0000               	dw	0
   601  0166A5  0000               	dw	0
   602  0166A7  0000               	dw	0
   603  0166A9  0000               	dw	0
   604  0166AB  0000               	dw	0
   605  0166AD  00                 	db	0
   606  0166AE  00                 	db	0
   607  0166AF  00                 	db	0
   608  0166B0  00                 	db	0
   609  0166B1  00                 	db	0
   610  0166B2  00                 	db	0
   611  0166B3  00                 	db	0
   612  0166B4  00                 	db	0
   613  0166B5  0000               	dw	0
   614  0166B7  0000               	dw	0
   615  0166B9  0000               	dw	0
   616  0166BB  0000               	dw	0
   617  0166BD  0000               	dw	0
   618  0166BF  0000               	dw	0
   619  0166C1  0000               	dw	0
   620  0166C3  0000               	dw	0
   621  0166C5  0000               	dw	0
   622  0166C7  00                 	db	0
   623  0166C8  00                 	db	0
   624  0166C9  00                 	db	0
   625  0166CA  00                 	db	0
   626  0166CB  00                 	db	0
   627  0166CC  00                 	db	0
   628  0166CD  00                 	db	0
   629  0166CE  00                 	db	0
   630  0166CF  00                 	db	0
   631  0166D0  00                 	db	0
   632  0166D1  00                 	db	0
   633  0166D2  00                 	db	0
   634  0166D3  0000               	dw	0
   635  0166D5  0000               	dw	0
   636  0166D7  01                 	db	1
   637  0166D8  00                 	db	0
   638  0166D9  01                 	db	1
   639  0166DA  00                 	db	0
   640  0166DB  2D                 	db	45
   641  0166DC  00                 	db	0
   642                           
   643                           	psect	mediumconst
   644  00FE72                     __pmediumconst:
   645                           	opt callstack 0
   646  00FE72  00                 	db	0
   647  00FE73                     _T:
   648                           	opt callstack 0
   649  00FE73  63                 	db	99
   650  00FE74  6F                 	db	111
   651  00FE75  6D                 	db	109
   652  00FE76  6D                 	db	109
   653  00FE77  61                 	db	97
   654  00FE78  6E                 	db	110
   655  00FE79  64                 	db	100
   656  00FE7A  73                 	db	115
   657  00FE7B  20                 	db	32
   658  00FE7C  31                 	db	49
   659  00FE7D  00                 	db	0
   660  00FE7E  00                 	db	0
   661  00FE7F  00                 	db	0
   662  00FE80  00                 	db	0
   663  00FE81  00                 	db	0
   664  00FE82  00                 	db	0
   665  00FE83  00                 	db	0
   666  00FE84  00                 	db	0
   667  00FE85  64                 	db	100
   668  00FE86  69                 	db	105
   669  00FE87  73                 	db	115
   670  00FE88  70                 	db	112
   671  00FE89  6C                 	db	108
   672  00FE8A  61                 	db	97
   673  00FE8B  79                 	db	121
   674  00FE8C  73                 	db	115
   675  00FE8D  20                 	db	32
   676  00FE8E  31                 	db	49
   677  00FE8F  00                 	db	0
   678  00FE90  00                 	db	0
   679  00FE91  00                 	db	0
   680  00FE92  00                 	db	0
   681  00FE93  00                 	db	0
   682  00FE94  00                 	db	0
   683  00FE95  00                 	db	0
   684  00FE96  00                 	db	0
   685  00FE97  63                 	db	99
   686  00FE98  6F                 	db	111
   687  00FE99  6D                 	db	109
   688  00FE9A  6D                 	db	109
   689  00FE9B  61                 	db	97
   690  00FE9C  6E                 	db	110
   691  00FE9D  64                 	db	100
   692  00FE9E  73                 	db	115
   693  00FE9F  20                 	db	32
   694  00FEA0  32                 	db	50
   695  00FEA1  00                 	db	0
   696  00FEA2  00                 	db	0
   697  00FEA3  00                 	db	0
   698  00FEA4  00                 	db	0
   699  00FEA5  00                 	db	0
   700  00FEA6  00                 	db	0
   701  00FEA7  00                 	db	0
   702  00FEA8  00                 	db	0
   703  00FEA9  64                 	db	100
   704  00FEAA  69                 	db	105
   705  00FEAB  73                 	db	115
   706  00FEAC  70                 	db	112
   707  00FEAD  6C                 	db	108
   708  00FEAE  61                 	db	97
   709  00FEAF  79                 	db	121
   710  00FEB0  73                 	db	115
   711  00FEB1  20                 	db	32
   712  00FEB2  32                 	db	50
   713  00FEB3  00                 	db	0
   714  00FEB4  00                 	db	0
   715  00FEB5  00                 	db	0
   716  00FEB6  00                 	db	0
   717  00FEB7  00                 	db	0
   718  00FEB8  00                 	db	0
   719  00FEB9  00                 	db	0
   720  00FEBA  00                 	db	0
   721  00FEBB  63                 	db	99
   722  00FEBC  6F                 	db	111
   723  00FEBD  6D                 	db	109
   724  00FEBE  6D                 	db	109
   725  00FEBF  61                 	db	97
   726  00FEC0  6E                 	db	110
   727  00FEC1  64                 	db	100
   728  00FEC2  73                 	db	115
   729  00FEC3  20                 	db	32
   730  00FEC4  33                 	db	51
   731  00FEC5  00                 	db	0
   732  00FEC6  00                 	db	0
   733  00FEC7  00                 	db	0
   734  00FEC8  00                 	db	0
   735  00FEC9  00                 	db	0
   736  00FECA  00                 	db	0
   737  00FECB  00                 	db	0
   738  00FECC  00                 	db	0
   739  00FECD  64                 	db	100
   740  00FECE  69                 	db	105
   741  00FECF  73                 	db	115
   742  00FED0  70                 	db	112
   743  00FED1  6C                 	db	108
   744  00FED2  61                 	db	97
   745  00FED3  79                 	db	121
   746  00FED4  73                 	db	115
   747  00FED5  20                 	db	32
   748  00FED6  33                 	db	51
   749  00FED7  00                 	db	0
   750  00FED8  00                 	db	0
   751  00FED9  00                 	db	0
   752  00FEDA  00                 	db	0
   753  00FEDB  00                 	db	0
   754  00FEDC  00                 	db	0
   755  00FEDD  00                 	db	0
   756  00FEDE  00                 	db	0
   757  00FEDF  63                 	db	99
   758  00FEE0  6F                 	db	111
   759  00FEE1  6D                 	db	109
   760  00FEE2  6D                 	db	109
   761  00FEE3  61                 	db	97
   762  00FEE4  6E                 	db	110
   763  00FEE5  64                 	db	100
   764  00FEE6  73                 	db	115
   765  00FEE7  20                 	db	32
   766  00FEE8  34                 	db	52
   767  00FEE9  00                 	db	0
   768  00FEEA  00                 	db	0
   769  00FEEB  00                 	db	0
   770  00FEEC  00                 	db	0
   771  00FEED  00                 	db	0
   772  00FEEE  00                 	db	0
   773  00FEEF  00                 	db	0
   774  00FEF0  00                 	db	0
   775  00FEF1  64                 	db	100
   776  00FEF2  69                 	db	105
   777  00FEF3  73                 	db	115
   778  00FEF4  70                 	db	112
   779  00FEF5  6C                 	db	108
   780  00FEF6  61                 	db	97
   781  00FEF7  79                 	db	121
   782  00FEF8  73                 	db	115
   783  00FEF9  20                 	db	32
   784  00FEFA  34                 	db	52
   785  00FEFB  00                 	db	0
   786  00FEFC  00                 	db	0
   787  00FEFD  00                 	db	0
   788  00FEFE  00                 	db	0
   789  00FEFF  00                 	db	0
   790  00FF00  00                 	db	0
   791  00FF01  00                 	db	0
   792  00FF02  00                 	db	0
   793  00FF03                     __end_of_T:
   794                           	opt callstack 0
   795  0000                     _IVTADL	set	14493
   796  0000                     _IVTADH	set	14494
   797  0000                     _IVTADU	set	14495
   798  0000                     _PIR4bits	set	14756
   799  0000                     _PIE8bits	set	14744
   800  0000                     _PIR8bits	set	14760
   801  0000                     _SCANPR	set	14839
   802  0000                     _DMA2PR	set	14836
   803  0000                     _DMA1PR	set	14835
   804  0000                     _MAINPR	set	14834
   805  0000                     _ISRPR	set	14833
   806  0000                     _PIE2bits	set	14738
   807  0000                     _PIR2bits	set	14754
   808  0000                     _PIE9bits	set	14745
   809  0000                     _PIR9bits	set	14761
   810  0000                     _PIE6bits	set	14742
   811  0000                     _PIE3bits	set	14739
   812  0000                     _PMD7	set	14791
   813  0000                     _PMD6	set	14790
   814  0000                     _PMD5	set	14789
   815  0000                     _PMD4	set	14788
   816  0000                     _PMD3	set	14787
   817  0000                     _PMD2	set	14786
   818  0000                     _PMD1	set	14785
   819  0000                     _PMD0	set	14784
   820  0000                     _OSCTUNE	set	14814
   821  0000                     _OSCFRQ	set	14815
   822  0000                     _OSCEN	set	14813
   823  0000                     _OSCCON3	set	14811
   824  0000                     _OSCCON1	set	14809
   825  0000                     _IPR8bits	set	14728
   826  0000                     _IPR9bits	set	14729
   827  0000                     _IPR5bits	set	14725
   828  0000                     _IPR1bits	set	14721
   829  0000                     _IPR3bits	set	14723
   830  0000                     _IPR6bits	set	14726
   831  0000                     _IPR2bits	set	14722
   832  0000                     _PIE5bits	set	14741
   833  0000                     _PIE1bits	set	14737
   834  0000                     _PIR5bits	set	14757
   835  0000                     _PIR1bits	set	14753
   836  0000                     _PLLR	set	118496
   837  0000                     _SPI1SDIPPS	set	15071
   838  0000                     _U1RXPPS	set	15077
   839  0000                     _RC6PPS	set	14870
   840  0000                     _RC5PPS	set	14869
   841  0000                     _INT1PPS	set	15041
   842  0000                     _RD1PPS	set	14873
   843  0000                     _INT0PPS	set	15040
   844  0000                     _RC3PPS	set	14867
   845  0000                     _RB6PPS	set	14862
   846  0000                     _SPI1SCKPPS	set	15070
   847  0000                     _U2RXPPS	set	15080
   848  0000                     _SLRCONF	set	14995
   849  0000                     _SLRCONE	set	14979
   850  0000                     _SLRCOND	set	14963
   851  0000                     _SLRCONC	set	14947
   852  0000                     _SLRCONB	set	14931
   853  0000                     _SLRCONA	set	14915
   854  0000                     _ODCOND	set	14962
   855  0000                     _ODCONC	set	14946
   856  0000                     _ODCONB	set	14930
   857  0000                     _ODCONA	set	14914
   858  0000                     _ODCONF	set	14994
   859  0000                     _ODCONE	set	14978
   860  0000                     _WPUC	set	14945
   861  0000                     _WPUA	set	14913
   862  0000                     _WPUB	set	14929
   863  0000                     _WPUE	set	14977
   864  0000                     _WPUF	set	14993
   865  0000                     _WPUD	set	14961
   866  0000                     _ANSELA	set	14912
   867  0000                     _ANSELF	set	14992
   868  0000                     _ANSELE	set	14976
   869  0000                     _ANSELB	set	14928
   870  0000                     _ANSELC	set	14944
   871  0000                     _ANSELD	set	14960
   872  0000                     _DMA2SSA	set	15321
   873  0000                     _DMA1SSA	set	15353
   874  0000                     _DMA2DSZ	set	15310
   875  0000                     _DMA2SSZ	set	15319
   876  0000                     _DMA2DSA	set	15312
   877  0000                     _DMA1DSZ	set	15342
   878  0000                     _DMA1SSZ	set	15351
   879  0000                     _DMA1DSA	set	15344
   880  0000                     _DMA1CON0bits	set	15356
   881  0000                     _DMA1CON1bits	set	15357
   882  0000                     _DMA2CON0	set	15324
   883  0000                     _DMA2AIRQ	set	15326
   884  0000                     _DMA2SIRQ	set	15327
   885  0000                     _DMA2CON1	set	15325
   886  0000                     _DMA1CON0	set	15356
   887  0000                     _DMA1AIRQ	set	15358
   888  0000                     _DMA1SIRQ	set	15359
   889  0000                     _DMA1CON1	set	15357
   890  0000                     _CLKRCON	set	15589
   891  0000                     _CLKRCLK	set	15590
   892  0000                     _SPI1INTFbits	set	15642
   893  0000                     _SPI1RXB	set	15632
   894  0000                     _SPI1TXB	set	15633
   895  0000                     _SPI1TCNTL	set	15634
   896  0000                     _SPI1CON0	set	15636
   897  0000                     _SPI1CLK	set	15644
   898  0000                     _SPI1BAUD	set	15641
   899  0000                     _SPI1CON2	set	15638
   900  0000                     _SPI1CON1	set	15637
   901  0000                     _U2RXB	set	15824
   902  0000                     _U2TXB	set	15826
   903  0000                     _U2ERRIE	set	15842
   904  0000                     _U2ERRIR	set	15841
   905  0000                     _U2UIR	set	15840
   906  0000                     _U2FIFO	set	15839
   907  0000                     _U2BRGH	set	15838
   908  0000                     _U2BRGL	set	15837
   909  0000                     _U2CON2	set	15836
   910  0000                     _U2CON1	set	15835
   911  0000                     _U2CON0	set	15834
   912  0000                     _U2P3L	set	15832
   913  0000                     _U2P2L	set	15830
   914  0000                     _U2P1L	set	15828
   915  0000                     _U1RXB	set	15848
   916  0000                     _U1TXB	set	15850
   917  0000                     _U1ERRIE	set	15866
   918  0000                     _U1ERRIR	set	15865
   919  0000                     _U1UIR	set	15864
   920  0000                     _U1FIFO	set	15863
   921  0000                     _U1BRGH	set	15862
   922  0000                     _U1BRGL	set	15861
   923  0000                     _U1CON2	set	15860
   924  0000                     _U1CON1	set	15859
   925  0000                     _U1CON0	set	15858
   926  0000                     _U1P3H	set	15857
   927  0000                     _U1P3L	set	15856
   928  0000                     _U1P2H	set	15855
   929  0000                     _U1P2L	set	15854
   930  0000                     _U1P1H	set	15853
   931  0000                     _U1P1L	set	15852
   932  0000                     _FVRCON	set	16065
   933  0000                     _ADFLTRL	set	16102
   934  0000                     _ADFLTRH	set	16103
   935  0000                     _ADCON0bits	set	16120
   936  0000                     _ADCON0	set	16120
   937  0000                     _ADCLK	set	16127
   938  0000                     _ADACT	set	16126
   939  0000                     _ADREF	set	16125
   940  0000                     _ADSTAT	set	16124
   941  0000                     _ADCON3	set	16123
   942  0000                     _ADCON2	set	16122
   943  0000                     _ADCON1	set	16121
   944  0000                     _ADPREH	set	16119
   945  0000                     _ADPREL	set	16118
   946  0000                     _ADCAP	set	16117
   947  0000                     _ADACQH	set	16116
   948  0000                     _ADACQL	set	16115
   949  0000                     _ADPCH	set	16113
   950  0000                     _ADRPT	set	16108
   951  0000                     _ADACCU	set	16106
   952  0000                     _ADSTPTH	set	16101
   953  0000                     _ADSTPTL	set	16100
   954  0000                     _ADUTHH	set	16097
   955  0000                     _ADUTHL	set	16096
   956  0000                     _ADLTHH	set	16095
   957  0000                     _ADLTHL	set	16094
   958  0000                     _CCPTMRS1bits	set	16223
   959  0000                     _LATCbits	set	16316
   960  0000                     _LATDbits	set	16317
   961  0000                     _PORTBbits	set	16331
   962  0000                     _T2CON	set	16300
   963  0000                     _T2TMR	set	16298
   964  0000                     _T2PR	set	16299
   965  0000                     _T2RST	set	16303
   966  0000                     _T2HLT	set	16301
   967  0000                     _T2CLKCON	set	16302
   968  0000                     _PWM8DCL	set	16224
   969  0000                     _PWM8DCH	set	16225
   970  0000                     _PWM8CON	set	16226
   971  0000                     _LATEbits	set	16318
   972  0000                     _T5CONbits	set	16282
   973  0000                     _T5CON	set	16282
   974  0000                     _TMR5L	set	16280
   975  0000                     _TMR5H	set	16281
   976  0000                     _T5CLK	set	16285
   977  0000                     _T5GATE	set	16284
   978  0000                     _T5GCON	set	16283
   979  0000                     _T6CON	set	16276
   980  0000                     _T6TMR	set	16274
   981  0000                     _T6PR	set	16275
   982  0000                     _T6RST	set	16279
   983  0000                     _T6HLT	set	16277
   984  0000                     _T6CLKCON	set	16278
   985  0000                     _TRISD	set	16325
   986  0000                     _TRISC	set	16324
   987  0000                     _TRISB	set	16323
   988  0000                     _TRISA	set	16322
   989  0000                     _TRISF	set	16327
   990  0000                     _TRISE	set	16326
   991  0000                     _LATC	set	16316
   992  0000                     _LATB	set	16315
   993  0000                     _LATF	set	16319
   994  0000                     _LATA	set	16314
   995  0000                     _LATD	set	16317
   996  0000                     _LATE	set	16318
   997  0000                     _IVTLOCKbits	set	16340
   998  0000                     _IVTLOCK	set	16340
   999  0000                     _INTCON0bits	set	16338
  1000  0000                     _GIE	set	130711
  1001  00FF03                     
  1002                           ; BSR set to: 57
  1003  00FF03  20                 	db	32
  1004  00FF04  4D                 	db	77	;'M'
  1005  00FF05  65                 	db	101	;'e'
  1006  00FF06  73                 	db	115	;'s'
  1007  00FF07  67                 	db	103	;'g'
  1008  00FF08  20                 	db	32
  1009  00FF09  25                 	db	37
  1010  00FF0A  64                 	db	100	;'d'
  1011  00FF0B  20                 	db	32
  1012  00FF0C  53                 	db	83	;'S'
  1013  00FF0D  74                 	db	116	;'t'
  1014  00FF0E  61                 	db	97	;'a'
  1015  00FF0F  63                 	db	99	;'c'
  1016  00FF10  6B                 	db	107	;'k'
  1017  00FF11  20                 	db	32
  1018  00FF12  25                 	db	37
  1019  00FF13  64                 	db	100	;'d'
  1020  00FF14  20                 	db	32
  1021  00FF15  20                 	db	32
  1022  00FF16  20                 	db	32
  1023  00FF17  20                 	db	32
  1024  00FF18  20                 	db	32
  1025  00FF19  20                 	db	32
  1026  00FF1A  00                 	db	0
  1027  00FF1B                     STR_26:
  1028                           
  1029                           ; BSR set to: 57
  1030  00FF1B  20                 	db	32
  1031  00FF1C  20                 	db	32
  1032  00FF1D  20                 	db	32
  1033  00FF1E  20                 	db	32
  1034  00FF1F  20                 	db	32
  1035  00FF20  20                 	db	32
  1036  00FF21  20                 	db	32
  1037  00FF22  20                 	db	32
  1038  00FF23  20                 	db	32
  1039  00FF24  20                 	db	32
  1040  00FF25  20                 	db	32
  1041  00FF26  20                 	db	32
  1042  00FF27  20                 	db	32
  1043  00FF28  20                 	db	32
  1044  00FF29  20                 	db	32
  1045  00FF2A  20                 	db	32
  1046  00FF2B  20                 	db	32
  1047  00FF2C  20                 	db	32
  1048  00FF2D  00                 	db	0
  1049  00FF2E                     STR_16:
  1050                           
  1051                           ; BSR set to: 57
  1052  00FF2E  48                 	db	72	;'H'
  1053  00FF2F  45                 	db	69	;'E'
  1054  00FF30  4C                 	db	76	;'L'
  1055  00FF31  50                 	db	80	;'P'
  1056  00FF32  20                 	db	32
  1057  00FF33  25                 	db	37
  1058  00FF34  73                 	db	115	;'s'
  1059  00FF35  20                 	db	32
  1060  00FF36  20                 	db	32
  1061  00FF37  20                 	db	32
  1062  00FF38  20                 	db	32
  1063  00FF39  20                 	db	32
  1064  00FF3A  20                 	db	32
  1065  00FF3B  20                 	db	32
  1066  00FF3C  20                 	db	32
  1067  00FF3D  20                 	db	32
  1068  00FF3E  20                 	db	32
  1069  00FF3F  20                 	db	32
  1070  00FF40  00                 	db	0
  1071  00FF41                     
  1072                           ; BSR set to: 57
  1073  00FF41  44                 	db	68	;'D'
  1074  00FF42  49                 	db	73	;'I'
  1075  00FF43  53                 	db	83	;'S'
  1076  00FF44  50                 	db	80	;'P'
  1077  00FF45  4C                 	db	76	;'L'
  1078  00FF46  41                 	db	65	;'A'
  1079  00FF47  59                 	db	89	;'Y'
  1080  00FF48  20                 	db	32
  1081  00FF49  25                 	db	37
  1082  00FF4A  73                 	db	115	;'s'
  1083  00FF4B  20                 	db	32
  1084  00FF4C  20                 	db	32
  1085  00FF4D  20                 	db	32
  1086  00FF4E  20                 	db	32
  1087  00FF4F  20                 	db	32
  1088  00FF50  20                 	db	32
  1089  00FF51  20                 	db	32
  1090  00FF52  20                 	db	32
  1091  00FF53  00                 	db	0
  1092  00FF54                     STR_8:
  1093                           
  1094                           ; BSR set to: 57
  1095  00FF54  20                 	db	32
  1096  00FF55  56                 	db	86	;'V'
  1097  00FF56  54                 	db	84	;'T'
  1098  00FF57  45                 	db	69	;'E'
  1099  00FF58  52                 	db	82	;'R'
  1100  00FF59  4D                 	db	77	;'M'
  1101  00FF5A  20                 	db	32
  1102  00FF5B  23                 	db	35
  1103  00FF5C  32                 	db	50	;'2'
  1104  00FF5D  20                 	db	32
  1105  00FF5E  20                 	db	32
  1106  00FF5F  20                 	db	32
  1107  00FF60  20                 	db	32
  1108  00FF61  20                 	db	32
  1109  00FF62  20                 	db	32
  1110  00FF63  20                 	db	32
  1111  00FF64  00                 	db	0
  1112  00FF65                     STR_4:
  1113                           
  1114                           ; BSR set to: 57
  1115  00FF65  20                 	db	32
  1116  00FF66  4E                 	db	78	;'N'
  1117  00FF67  53                 	db	83	;'S'
  1118  00FF68  41                 	db	65	;'A'
  1119  00FF69  53                 	db	83	;'S'
  1120  00FF6A  50                 	db	80	;'P'
  1121  00FF6B  4F                 	db	79	;'O'
  1122  00FF6C  4F                 	db	79	;'O'
  1123  00FF6D  4B                 	db	75	;'K'
  1124  00FF6E  20                 	db	32
  1125  00FF6F  20                 	db	32
  1126  00FF70  20                 	db	32
  1127  00FF71  20                 	db	32
  1128  00FF72  20                 	db	32
  1129  00FF73  20                 	db	32
  1130  00FF74  20                 	db	32
  1131  00FF75  00                 	db	0
  1132  00FF76                     STR_1:
  1133                           
  1134                           ; BSR set to: 57
  1135  00FF76  20                 	db	32
  1136  00FF77  4D                 	db	77	;'M'
  1137  00FF78  42                 	db	66	;'B'
  1138  00FF79  4D                 	db	77	;'M'
  1139  00FF7A  43                 	db	67	;'C'
  1140  00FF7B  20                 	db	32
  1141  00FF7C  53                 	db	83	;'S'
  1142  00FF7D  4F                 	db	79	;'O'
  1143  00FF7E  4C                 	db	76	;'L'
  1144  00FF7F  41                 	db	65	;'A'
  1145  00FF80  52                 	db	82	;'R'
  1146  00FF81  4D                 	db	77	;'M'
  1147  00FF82  4F                 	db	79	;'O'
  1148  00FF83  4E                 	db	78	;'N'
  1149  00FF84  20                 	db	32
  1150  00FF85  20                 	db	32
  1151  00FF86  00                 	db	0
  1152  00FF87                     STR_5:
  1153                           
  1154                           ; BSR set to: 57
  1155  00FF87  20                 	db	32
  1156  00FF88  53                 	db	83	;'S'
  1157  00FF89  45                 	db	69	;'E'
  1158  00FF8A  51                 	db	81	;'Q'
  1159  00FF8B  55                 	db	85	;'U'
  1160  00FF8C  45                 	db	69	;'E'
  1161  00FF8D  4E                 	db	78	;'N'
  1162  00FF8E  43                 	db	67	;'C'
  1163  00FF8F  45                 	db	69	;'E'
  1164  00FF90  20                 	db	32
  1165  00FF91  54                 	db	84	;'T'
  1166  00FF92  45                 	db	69	;'E'
  1167  00FF93  53                 	db	83	;'S'
  1168  00FF94  54                 	db	84	;'T'
  1169  00FF95  20                 	db	32
  1170  00FF96  20                 	db	32
  1171  00FF97  00                 	db	0
  1172  00FF98                     STR_20:
  1173                           
  1174                           ; BSR set to: 57
  1175  00FF98  76                 	db	118	;'v'
  1176  00FF99  74                 	db	116	;'t'
  1177  00FF9A  65                 	db	101	;'e'
  1178  00FF9B  72                 	db	114	;'r'
  1179  00FF9C  6D                 	db	109	;'m'
  1180  00FF9D  20                 	db	32
  1181  00FF9E  25                 	db	37
  1182  00FF9F  78                 	db	120	;'x'
  1183  00FFA0  3A                 	db	58	;':'
  1184  00FFA1  25                 	db	37
  1185  00FFA2  78                 	db	120	;'x'
  1186  00FFA3  20                 	db	32
  1187  00FFA4  20                 	db	32
  1188  00FFA5  20                 	db	32
  1189  00FFA6  00                 	db	0
  1190  00FFA7                     STR_2:
  1191                           
  1192                           ; BSR set to: 57
  1193  00FFA7  20                 	db	32
  1194  00FFA8  56                 	db	86	;'V'
  1195  00FFA9  65                 	db	101	;'e'
  1196  00FFAA  72                 	db	114	;'r'
  1197  00FFAB  73                 	db	115	;'s'
  1198  00FFAC  69                 	db	105	;'i'
  1199  00FFAD  6F                 	db	111	;'o'
  1200  00FFAE  6E                 	db	110	;'n'
  1201  00FFAF  20                 	db	32
  1202  00FFB0  25                 	db	37
  1203  00FFB1  73                 	db	115	;'s'
  1204  00FFB2  20                 	db	32
  1205  00FFB3  20                 	db	32
  1206  00FFB4  20                 	db	32
  1207  00FFB5  00                 	db	0
  1208  00FFB6                     STR_9:
  1209                           
  1210                           ; BSR set to: 57
  1211  00FFB6  25                 	db	37
  1212  00FFB7  64                 	db	100	;'d'
  1213  00FFB8  20                 	db	32
  1214  00FFB9  25                 	db	37
  1215  00FFBA  32                 	db	50	;'2'
  1216  00FFBB  2E                 	db	46
  1217  00FFBC  32                 	db	50	;'2'
  1218  00FFBD  66                 	db	102	;'f'
  1219  00FFBE  20                 	db	32
  1220  00FFBF  20                 	db	32
  1221  00FFC0  20                 	db	32
  1222  00FFC1  23                 	db	35
  1223  00FFC2  00                 	db	0
  1224  00FFC3                     STR_14:
  1225                           
  1226                           ; BSR set to: 57
  1227  00FFC3  4E                 	db	78	;'N'
  1228  00FFC4  6F                 	db	111	;'o'
  1229  00FFC5  76                 	db	118	;'v'
  1230  00FFC6  20                 	db	32
  1231  00FFC7  20                 	db	32
  1232  00FFC8  33                 	db	51	;'3'
  1233  00FFC9  20                 	db	32
  1234  00FFCA  32                 	db	50	;'2'
  1235  00FFCB  30                 	db	48	;'0'
  1236  00FFCC  31                 	db	49	;'1'
  1237  00FFCD  39                 	db	57	;'9'
  1238  00FFCE  00                 	db	0
  1239  00FFCF                     STR_18:
  1240                           
  1241                           ; BSR set to: 57
  1242  00FFCF  25                 	db	37
  1243  00FFD0  73                 	db	115	;'s'
  1244  00FFD1  20                 	db	32
  1245  00FFD2  20                 	db	32
  1246  00FFD3  20                 	db	32
  1247  00FFD4  20                 	db	32
  1248  00FFD5  20                 	db	32
  1249  00FFD6  20                 	db	32
  1250  00FFD7  20                 	db	32
  1251  00FFD8  00                 	db	0
  1252  00FFD9                     STR_15:
  1253                           
  1254                           ; BSR set to: 57
  1255  00FFD9  31                 	db	49	;'1'
  1256  00FFDA  39                 	db	57	;'9'
  1257  00FFDB  3A                 	db	58	;':'
  1258  00FFDC  35                 	db	53	;'5'
  1259  00FFDD  32                 	db	50	;'2'
  1260  00FFDE  3A                 	db	58	;':'
  1261  00FFDF  33                 	db	51	;'3'
  1262  00FFE0  34                 	db	52	;'4'
  1263  00FFE1  00                 	db	0
  1264  00FFE2                     STR_32:
  1265                           
  1266                           ; BSR set to: 57
  1267  00FFE2  49                 	db	73	;'I'
  1268  00FFE3  4E                 	db	78	;'N'
  1269  00FFE4  46                 	db	70	;'F'
  1270  00FFE5  00                 	db	0
  1271  00FFE6                     STR_36:
  1272                           
  1273                           ; BSR set to: 57
  1274  00FFE6  4E                 	db	78	;'N'
  1275  00FFE7  41                 	db	65	;'A'
  1276  00FFE8  4E                 	db	78	;'N'
  1277  00FFE9  00                 	db	0
  1278  00FFEA                     STR_33:
  1279                           
  1280                           ; BSR set to: 57
  1281  00FFEA  69                 	db	105	;'i'
  1282  00FFEB  6E                 	db	110	;'n'
  1283  00FFEC  66                 	db	102	;'f'
  1284  00FFED  00                 	db	0
  1285  00FFEE                     STR_37:
  1286                           
  1287                           ; BSR set to: 57
  1288  00FFEE  6E                 	db	110	;'n'
  1289  00FFEF  61                 	db	97	;'a'
  1290  00FFF0  6E                 	db	110	;'n'
  1291  00FFF1  00                 	db	0
  1292  00FFF2                     STR_3:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFF2  30                 	db	48	;'0'
  1296  00FFF3  2E                 	db	46
  1297  00FFF4  37                 	db	55	;'7'
  1298  00FFF5  00                 	db	0
  1299  00FFF6                     STR_40:
  1300                           
  1301                           ; BSR set to: 57
  1302  00FFF6  6C                 	db	108	;'l'
  1303  00FFF7  66                 	db	102	;'f'
  1304  00FFF8  00                 	db	0
  1305  00FFF9                     STR_12:
  1306                           
  1307                           ; BSR set to: 57
  1308  00FFF9  25                 	db	37
  1309  00FFFA  63                 	db	99	;'c'
  1310  00FFFB  00                 	db	0
  1311  00FFFC                     STR_11:
  1312                           
  1313                           ; BSR set to: 57
  1314  00FFFC  25                 	db	37
  1315  00FFFD  73                 	db	115	;'s'
  1316  00FFFE  00                 	db	0
  1317  0000                     
  1318                           ; #config settings
  1319  00FFFF  00                 	db	0	; dummy byte at the end
  1320  0000                     
  1321                           	psect	cinit
  1322  016496                     __pcinit:
  1323                           	opt callstack 0
  1324  016496                     start_initialization:
  1325                           	opt callstack 0
  1326  016496                     __initialization:
  1327                           	opt callstack 0
  1328                           
  1329                           ; Initialize objects allocated to BANK2 (189 bytes)
  1330                           ; load TBLPTR registers with __pidataBANK2
  1331  016496  0E20               	movlw	low __pidataBANK2
  1332  016498  6EF6               	movwf	tblptrl,c
  1333  01649A  0E66               	movlw	high __pidataBANK2
  1334  01649C  6EF7               	movwf	tblptrh,c
  1335  01649E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1336  0164A0  6EF8               	movwf	tblptru,c
  1337  0164A2  EE00  F200         	lfsr	0,__pdataBANK2
  1338  0164A6  EE20 F0BD          	lfsr	2,189
  1339  0164AA                     copy_data0:
  1340  0164AA  0009               	tblrd		*+
  1341  0164AC  006F FFD7 FFEE     	movff	tablat,postinc0
  1342  0164B2  50DD               	movf	postdec2,w,c
  1343  0164B4  50D9               	movf	fsr2l,w,c
  1344  0164B6  E1F9               	bnz	copy_data0
  1345                           
  1346                           ; Initialize objects allocated to BANK0 (23 bytes)
  1347                           ; load TBLPTR registers with __pidataBANK0
  1348  0164B8  0E22               	movlw	low __pidataBANK0
  1349  0164BA  6EF6               	movwf	tblptrl,c
  1350  0164BC  0E7C               	movlw	high __pidataBANK0
  1351  0164BE  6EF7               	movwf	tblptrh,c
  1352  0164C0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1353  0164C2  6EF8               	movwf	tblptru,c
  1354  0164C4  EE00  F0BD         	lfsr	0,__pdataBANK0
  1355  0164C8  EE20 F017          	lfsr	2,23
  1356  0164CC                     copy_data1:
  1357  0164CC  0009               	tblrd		*+
  1358  0164CE  006F FFD7 FFEE     	movff	tablat,postinc0
  1359  0164D4  50DD               	movf	postdec2,w,c
  1360  0164D6  50D9               	movf	fsr2l,w,c
  1361  0164D8  E1F9               	bnz	copy_data1
  1362                           
  1363                           ; Clear objects allocated to BANK6 (255 bytes)
  1364  0164DA  EE01  F200         	lfsr	0,__pbssBANK6
  1365  0164DE  EE20 F0FF          	lfsr	2,255
  1366  0164E2                     clear_0:
  1367  0164E2  6AEE               	clrf	postinc0,c
  1368  0164E4  50DD               	movf	postdec2,w,c
  1369  0164E6  50D9               	movf	fsr2l,w,c
  1370  0164E8  E1FC               	bnz	clear_0
  1371  0164EA  50DA               	movf	fsr2h,w,c
  1372  0164EC  E1FA               	bnz	clear_0
  1373                           
  1374                           ; Clear objects allocated to BANK5 (255 bytes)
  1375  0164EE  EE01  F100         	lfsr	0,__pbssBANK5
  1376  0164F2  EE20 F0FF          	lfsr	2,255
  1377  0164F6                     clear_1:
  1378  0164F6  6AEE               	clrf	postinc0,c
  1379  0164F8  50DD               	movf	postdec2,w,c
  1380  0164FA  50D9               	movf	fsr2l,w,c
  1381  0164FC  E1FC               	bnz	clear_1
  1382  0164FE  50DA               	movf	fsr2h,w,c
  1383  016500  E1FA               	bnz	clear_1
  1384                           
  1385                           ; Clear objects allocated to BANK4 (218 bytes)
  1386  016502  EE01  F000         	lfsr	0,__pbssBANK4
  1387  016506  0EDA               	movlw	218
  1388  016508                     clear_2:
  1389  016508  6AEE               	clrf	postinc0,c
  1390  01650A  06E8               	decf	wreg,f,c
  1391  01650C  E1FD               	bnz	clear_2
  1392                           
  1393                           ; Clear objects allocated to BANK3 (134 bytes)
  1394  01650E  EE00  F300         	lfsr	0,__pbssBANK3
  1395  016512  0E86               	movlw	134
  1396  016514                     clear_3:
  1397  016514  6AEE               	clrf	postinc0,c
  1398  016516  06E8               	decf	wreg,f,c
  1399  016518  E1FD               	bnz	clear_3
  1400                           
  1401                           ; Clear objects allocated to BANK2 (64 bytes)
  1402  01651A  EE00  F2BD         	lfsr	0,__pbssBANK2
  1403  01651E  0E40               	movlw	64
  1404  016520                     clear_4:
  1405  016520  6AEE               	clrf	postinc0,c
  1406  016522  06E8               	decf	wreg,f,c
  1407  016524  E1FD               	bnz	clear_4
  1408                           
  1409                           ; Clear objects allocated to BANK1 (248 bytes)
  1410  016526  EE00  F100         	lfsr	0,__pbssBANK1
  1411  01652A  0EF8               	movlw	248
  1412  01652C                     clear_5:
  1413  01652C  6AEE               	clrf	postinc0,c
  1414  01652E  06E8               	decf	wreg,f,c
  1415  016530  E1FD               	bnz	clear_5
  1416                           
  1417                           ; Clear objects allocated to BANK0 (93 bytes)
  1418  016532  EE00  F060         	lfsr	0,__pbssBANK0
  1419  016536  0E5D               	movlw	93
  1420  016538                     clear_6:
  1421  016538  6AEE               	clrf	postinc0,c
  1422  01653A  06E8               	decf	wreg,f,c
  1423  01653C  E1FD               	bnz	clear_6
  1424                           
  1425                           ; Clear objects allocated to COMRAM (52 bytes)
  1426  01653E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1427  016542  0E34               	movlw	52
  1428  016544                     clear_7:
  1429  016544  6AEE               	clrf	postinc0,c
  1430  016546  06E8               	decf	wreg,f,c
  1431  016548  E1FD               	bnz	clear_7
  1432                           
  1433                           ;
  1434                           ; Setup IVTBASE
  1435                           ;
  1436  01654A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1437  01654C  6ED5               	movwf	213,c
  1438  01654E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1439  016550  6ED6               	movwf	214,c
  1440  016552  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1441  016554  6ED7               	movwf	215,c
  1442  016556                     end_of_initialization:
  1443                           	opt callstack 0
  1444  016556                     __end_of__initialization:
  1445                           	opt callstack 0
  1446  016556  0100               	movlb	0
  1447  016558  EFB1  F09B         	goto	_main	;jump to C main() function
  1448                           
  1449                           	psect	bssCOMRAM
  1450  000001                     __pbssCOMRAM:
  1451                           	opt callstack 0
  1452  000001                     _TMR6_InterruptHandler:
  1453                           	opt callstack 0
  1454  000001                     	ds	3
  1455  000004                     _ADCC_ADTI_InterruptHandler:
  1456                           	opt callstack 0
  1457  000004                     	ds	3
  1458  000007                     _ADCC_ADI_InterruptHandler:
  1459                           	opt callstack 0
  1460  000007                     	ds	3
  1461  00000A                     _UART1_TxInterruptHandler:
  1462                           	opt callstack 0
  1463  00000A                     	ds	3
  1464  00000D                     _UART1_RxInterruptHandler:
  1465                           	opt callstack 0
  1466  00000D                     	ds	3
  1467  000010                     _UART2_TxInterruptHandler:
  1468                           	opt callstack 0
  1469  000010                     	ds	3
  1470  000013                     _UART2_RxInterruptHandler:
  1471                           	opt callstack 0
  1472  000013                     	ds	3
  1473  000016                     _INT1_InterruptHandler:
  1474                           	opt callstack 0
  1475  000016                     	ds	3
  1476  000019                     _INT0_InterruptHandler:
  1477                           	opt callstack 0
  1478  000019                     	ds	3
  1479  00001C                     _nout:
  1480                           	opt callstack 0
  1481  00001C                     	ds	2
  1482  00001E                     _width:
  1483                           	opt callstack 0
  1484  00001E                     	ds	2
  1485  000020                     _prec:
  1486                           	opt callstack 0
  1487  000020                     	ds	2
  1488  000022                     _flags:
  1489                           	opt callstack 0
  1490  000022                     	ds	2
  1491  000024                     TMR5_ISR@CountCallBack:
  1492                           	opt callstack 0
  1493  000024                     	ds	2
  1494  000026                     _timer5ReloadVal:
  1495                           	opt callstack 0
  1496  000026                     	ds	2
  1497  000028                     _mode_sw:
  1498                           	opt callstack 0
  1499  000028                     	ds	1
  1500  000029                     _uart2RxCount:
  1501                           	opt callstack 0
  1502  000029                     	ds	1
  1503  00002A                     _uart2RxTail:
  1504                           	opt callstack 0
  1505  00002A                     	ds	1
  1506  00002B                     _uart2RxHead:
  1507                           	opt callstack 0
  1508  00002B                     	ds	1
  1509  00002C                     _uart2TxBufferRemaining:
  1510                           	opt callstack 0
  1511  00002C                     	ds	1
  1512  00002D                     _uart2TxTail:
  1513                           	opt callstack 0
  1514  00002D                     	ds	1
  1515  00002E                     _uart2TxHead:
  1516                           	opt callstack 0
  1517  00002E                     	ds	1
  1518  00002F                     _uart1RxCount:
  1519                           	opt callstack 0
  1520  00002F                     	ds	1
  1521  000030                     _uart1RxTail:
  1522                           	opt callstack 0
  1523  000030                     	ds	1
  1524  000031                     _uart1RxHead:
  1525                           	opt callstack 0
  1526  000031                     	ds	1
  1527  000032                     _uart1TxBufferRemaining:
  1528                           	opt callstack 0
  1529  000032                     	ds	1
  1530  000033                     _uart1TxTail:
  1531                           	opt callstack 0
  1532  000033                     	ds	1
  1533  000034                     _uart1TxHead:
  1534                           	opt callstack 0
  1535  000034                     	ds	1
  1536                           
  1537                           	psect	bssBANK0
  1538  000060                     __pbssBANK0:
  1539                           	opt callstack 0
  1540  000060                     _R:
  1541                           	opt callstack 0
  1542  000060                     	ds	34
  1543  000082                     _tickCount:
  1544                           	opt callstack 0
  1545  000082                     	ds	24
  1546  00009A                     _spi_link:
  1547                           	opt callstack 0
  1548  00009A                     	ds	12
  1549  0000A6                     floorf@F524:
  1550                           	opt callstack 0
  1551  0000A6                     	ds	4
  1552  0000AA                     ___fpclassifyf@F463:
  1553                           	opt callstack 0
  1554  0000AA                     	ds	4
  1555  0000AE                     wdtdelay@dcount:
  1556                           	opt callstack 0
  1557  0000AE                     	ds	4
  1558  0000B2                     _TMR5_InterruptHandler:
  1559                           	opt callstack 0
  1560  0000B2                     	ds	3
  1561  0000B5                     _seed:
  1562                           	opt callstack 0
  1563  0000B5                     	ds	8
  1564                           
  1565                           	psect	dataBANK0
  1566  0000BD                     __pdataBANK0:
  1567                           	opt callstack 0
  1568  0000BD                     stoa@F1166:
  1569                           	opt callstack 0
  1570  0000BD                     	ds	7
  1571  0000C4                     _port_data:
  1572                           	opt callstack 0
  1573  0000C4                     	ds	16
  1574                           
  1575                           	psect	bssBANK1
  1576  000100                     __pbssBANK1:
  1577                           	opt callstack 0
  1578  000100                     _C:
  1579                           	opt callstack 0
  1580  000100                     	ds	104
  1581  000168                     _uart1TxBuffer:
  1582                           	opt callstack 0
  1583  000168                     	ds	64
  1584  0001A8                     _dbuf:
  1585                           	opt callstack 0
  1586  0001A8                     	ds	80
  1587                           
  1588                           	psect	bssBANK2
  1589  0002BD                     __pbssBANK2:
  1590                           	opt callstack 0
  1591  0002BD                     _uart2TxBuffer:
  1592                           	opt callstack 0
  1593  0002BD                     	ds	64
  1594                           
  1595                           	psect	dataBANK2
  1596  000200                     __pdataBANK2:
  1597                           	opt callstack 0
  1598  000200                     _V:
  1599                           	opt callstack 0
  1600  000200                     	ds	189
  1601                           
  1602                           	psect	bssBANK3
  1603  000300                     __pbssBANK3:
  1604                           	opt callstack 0
  1605  000300                     _ring_buf2:
  1606                           	opt callstack 0
  1607  000300                     	ds	67
  1608  000343                     _ring_buf1:
  1609                           	opt callstack 0
  1610  000343                     	ds	67
  1611                           
  1612                           	psect	bssBANK4
  1613  000400                     __pbssBANK4:
  1614                           	opt callstack 0
  1615  000400                     _D:
  1616                           	opt callstack 0
  1617  000400                     	ds	218
  1618                           
  1619                           	psect	bssBANK5
  1620  000500                     __pbssBANK5:
  1621                           	opt callstack 0
  1622  000500                     _uart1RxBuffer:
  1623                           	opt callstack 0
  1624  000500                     	ds	255
  1625                           
  1626                           	psect	bssBANK6
  1627  000600                     __pbssBANK6:
  1628                           	opt callstack 0
  1629  000600                     _uart2RxBuffer:
  1630                           	opt callstack 0
  1631  000600                     	ds	255
  1632                           
  1633                           	psect	cstackBANK0
  1634  0000D4                     __pcstackBANK0:
  1635                           	opt callstack 0
  1636  0000D4                     ??_TMR6_ISR:
  1637                           
  1638                           ; 1 bytes @ 0x0
  1639  0000D4                     	ds	1
  1640  0000D5                     ??_TMR5_ISR:
  1641                           
  1642                           ; 1 bytes @ 0x1
  1643  0000D5                     	ds	4
  1644                           
  1645                           	psect	cstackCOMRAM
  1646  000055                     __pcstackCOMRAM:
  1647                           	opt callstack 0
  1648  000055                     ??_ADCC_ISR:
  1649  000055                     
  1650                           ; 1 bytes @ 0x0
  1651  000055                     	ds	1
  1652  000056                     ??_ADCC_ThresholdISR:
  1653                           
  1654                           ; 1 bytes @ 0x1
  1655  000056                     	ds	5
  1656                           
  1657 ;;
  1658 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1659 ;;
  1660 ;; *************** function _main *****************
  1661 ;; Defined at:
  1662 ;;		line 149 in file "main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  mode            1  [STACK] enum E17005
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1  [STACK] void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels required when called:   19
  1682 ;; This function calls:
  1683 ;;		_SYSTEM_Initialize
  1684 ;;		_StartTimer
  1685 ;;		_TimerDone
  1686 ;;		_WaitMs
  1687 ;;		_check_adc_scan
  1688 ;;		_check_help
  1689 ;;		_clear_adc_scan
  1690 ;;		_conv_raw_result
  1691 ;;		_eaDogM_WriteCommand
  1692 ;;		_get_raw_result
  1693 ;;		_get_vterm_ptr
  1694 ;;		_init_display
  1695 ;;		_mode_lamp_dim
  1696 ;;		_set_display_info
  1697 ;;		_set_vterm
  1698 ;;		_sprintf
  1699 ;;		_srand
  1700 ;;		_start_adc_scan
  1701 ;;		_update_lcd
  1702 ;; This function is called by:
  1703 ;;		Startup code after reset
  1704 ;; This function uses a reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text0
  1708  013762                     __ptext0:
  1709                           	opt callstack 0
  1710  013762                     _main:
  1711                           	opt callstack 0
  1712                           
  1713                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1714  013762  52E6               	movf	postinc1,f,c
  1715                           
  1716                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1717                           
  1718                           ;incstack = 0
  1719  013764  EC86  F0B9         	call	_SYSTEM_Initialize	;wreg free
  1720                           
  1721                           ; BSR set to: 60
  1722                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1723  013768  8ED2               	bsf	210,7,c	;volatile
  1724                           
  1725                           ; BSR set to: 60
  1726                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1727  01376A  8CD2               	bsf	210,6,c	;volatile
  1728                           
  1729                           ; BSR set to: 60
  1730                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1731  01376C  0102               	movlb	2	; () banked
  1732  01376E  6B00               	clrf	_V& (0+255),b	;volatile
  1733                           
  1734                           ; BSR set to: 2
  1735                           ;main.c: 167:  WaitMs(300);
  1736  013770  0E2C               	movlw	44
  1737  013772  6EE6               	movwf	postinc1,c
  1738  013774  0E01               	movlw	1
  1739  013776  6EE6               	movwf	postinc1,c
  1740  013778  ECA8  F0BA         	call	_WaitMs	;wreg free
  1741                           
  1742                           ;main.c: 168:  if (PORTBbits.RB0) {
  1743  01377C  A0CB               	btfss	203,0,c	;volatile
  1744  01377E  D004               	goto	l9828
  1745                           
  1746                           ;main.c: 169:   mode = UI_STATE_HOST;
  1747                           ;stkvar	_mode @ sp[(-1)+0]
  1748  013780  0EFF               	movlw	-1
  1749  013782  6AE3               	clrf	plusw1,c
  1750  013784  2AE3               	incf	plusw1,f,c
  1751                           
  1752                           ;main.c: 170:  } else {
  1753  013786  D004               	goto	l9830
  1754  013788                     l9828:
  1755                           
  1756                           ;main.c: 171:   mode = UI_STATE_LOG;
  1757                           ;stkvar	_mode @ sp[(-1)+0]
  1758  013788  0EFF               	movlw	-1
  1759  01378A  6AE3               	clrf	plusw1,c
  1760  01378C  80E3               	bsf	plusw1,0,c
  1761  01378E  82E3               	bsf	plusw1,1,c	;indir
  1762  013790                     l9830:
  1763                           
  1764                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1765                           ;stkvar	_mode @ sp[(-1)+0]
  1766  013790  0EFF               	movlw	-1
  1767  013792  04E3               	decf	plusw1,w,c
  1768  013794  A4D8               	btfss	status,2,c
  1769  013796  D007               	goto	l1240
  1770                           
  1771                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1772  013798  80BD               	bsf	189,0,c	;volatile
  1773                           
  1774                           ;main.c: 176:   V.mode_pwm = 70;
  1775  01379A  0E00               	movlw	0
  1776  01379C  0102               	movlb	2	; () banked
  1777  01379E  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1778  0137A0  0E46               	movlw	70
  1779  0137A2  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1780                           
  1781                           ;main.c: 177:  } else {
  1782  0137A4  D004               	goto	l9834
  1783  0137A6                     l1240:
  1784  0137A6  90BD               	bcf	189,0,c	;volatile
  1785                           
  1786                           ;main.c: 179:   V.mode_pwm = 0;
  1787  0137A8  0102               	movlb	2	; () banked
  1788  0137AA  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1789  0137AC  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1790  0137AE                     l9834:
  1791                           
  1792                           ; BSR set to: 2
  1793                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1794  0137AE  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1795  0137B4  0060  FA83  FFE6   	movff	_V+160,postinc1
  1796  0137BA  ECF9  F0BD         	call	_mode_lamp_dim	;wreg free
  1797  0137BE  D0CB               	goto	l9876
  1798  0137C0                     l9836:
  1799                           
  1800                           ; BSR set to: 2
  1801                           ;main.c: 192:    init_display();
  1802  0137C0  EC6C  F0B1         	call	_init_display	;wreg free
  1803                           
  1804                           ; BSR set to: 61
  1805                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1806  0137C4  0E0C               	movlw	12
  1807  0137C6  6EE6               	movwf	postinc1,c
  1808  0137C8  EC59  F0BE         	call	_eaDogM_WriteCommand	;wreg free
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 195:    V.ui_state = mode;
  1812                           ;stkvar	_mode @ sp[(-1)+0]
  1813  0137CC  0EFF               	movlw	-1
  1814  0137CE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 196:    srand(1957);
  1818  0137D4  0EA5               	movlw	165
  1819  0137D6  6EE6               	movwf	postinc1,c
  1820  0137D8  0E07               	movlw	7
  1821  0137DA  6EE6               	movwf	postinc1,c
  1822  0137DC  ECDE  F0BA         	call	_srand	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 197:    set_vterm(0);
  1826  0137E0  0E00               	movlw	0
  1827  0137E2  6EE6               	movwf	postinc1,c
  1828  0137E4  ECC4  F0BD         	call	_set_vterm	;wreg free
  1829                           
  1830                           ; BSR set to: 4
  1831                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1832  0137E8  0E76               	movlw	low STR_1
  1833  0137EA  6EE6               	movwf	postinc1,c
  1834  0137EC  0EFF               	movlw	high STR_1
  1835  0137EE  6EE6               	movwf	postinc1,c
  1836  0137F0  0E00               	movlw	0
  1837  0137F2  6EE6               	movwf	postinc1,c
  1838  0137F4  0E00               	movlw	0
  1839  0137F6  6EE6               	movwf	postinc1,c
  1840  0137F8  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1841  0137FC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1842  013802  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1843  013808  0E04               	movlw	4
  1844  01380A  6EE6               	movwf	postinc1,c
  1845  01380C  ECE7  F0B0         	call	_sprintf	;wreg free
  1846                           
  1847                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.7");
  1848  013810  0EF2               	movlw	low STR_3
  1849  013812  6EE6               	movwf	postinc1,c
  1850  013814  0EFF               	movlw	high STR_3
  1851  013816  6EE6               	movwf	postinc1,c
  1852  013818  0EA7               	movlw	low STR_2
  1853  01381A  6EE6               	movwf	postinc1,c
  1854  01381C  0EFF               	movlw	high STR_2
  1855  01381E  6EE6               	movwf	postinc1,c
  1856  013820  0E00               	movlw	0
  1857  013822  6EE6               	movwf	postinc1,c
  1858  013824  0E01               	movlw	1
  1859  013826  6EE6               	movwf	postinc1,c
  1860  013828  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1861  01382C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1862  013832  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1863  013838  0E06               	movlw	6
  1864  01383A  6EE6               	movwf	postinc1,c
  1865  01383C  ECE7  F0B0         	call	_sprintf	;wreg free
  1866                           
  1867                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1868  013840  0E65               	movlw	low STR_4
  1869  013842  6EE6               	movwf	postinc1,c
  1870  013844  0EFF               	movlw	high STR_4
  1871  013846  6EE6               	movwf	postinc1,c
  1872  013848  0E00               	movlw	0
  1873  01384A  6EE6               	movwf	postinc1,c
  1874  01384C  0E02               	movlw	2
  1875  01384E  6EE6               	movwf	postinc1,c
  1876  013850  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1877  013854  0060  F0D7  FFE6   	movff	btemp,postinc1
  1878  01385A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1879  013860  0E04               	movlw	4
  1880  013862  6EE6               	movwf	postinc1,c
  1881  013864  ECE7  F0B0         	call	_sprintf	;wreg free
  1882                           
  1883                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1884  013868  0E87               	movlw	low STR_5
  1885  01386A  6EE6               	movwf	postinc1,c
  1886  01386C  0EFF               	movlw	high STR_5
  1887  01386E  6EE6               	movwf	postinc1,c
  1888  013870  0E02               	movlw	2
  1889  013872  6EE6               	movwf	postinc1,c
  1890  013874  0E00               	movlw	0
  1891  013876  6EE6               	movwf	postinc1,c
  1892  013878  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1893  01387C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1894  013882  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1895  013888  0E04               	movlw	4
  1896  01388A  6EE6               	movwf	postinc1,c
  1897  01388C  ECE7  F0B0         	call	_sprintf	;wreg free
  1898                           
  1899                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.7");
  1900  013890  0EF2               	movlw	low STR_3
  1901  013892  6EE6               	movwf	postinc1,c
  1902  013894  0EFF               	movlw	high STR_3
  1903  013896  6EE6               	movwf	postinc1,c
  1904  013898  0EA7               	movlw	low STR_2
  1905  01389A  6EE6               	movwf	postinc1,c
  1906  01389C  0EFF               	movlw	high STR_2
  1907  01389E  6EE6               	movwf	postinc1,c
  1908  0138A0  0E02               	movlw	2
  1909  0138A2  6EE6               	movwf	postinc1,c
  1910  0138A4  0E01               	movlw	1
  1911  0138A6  6EE6               	movwf	postinc1,c
  1912  0138A8  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1913  0138AC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1914  0138B2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1915  0138B8  0E06               	movlw	6
  1916  0138BA  6EE6               	movwf	postinc1,c
  1917  0138BC  ECE7  F0B0         	call	_sprintf	;wreg free
  1918                           
  1919                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1920  0138C0  0E54               	movlw	low STR_8
  1921  0138C2  6EE6               	movwf	postinc1,c
  1922  0138C4  0EFF               	movlw	high STR_8
  1923  0138C6  6EE6               	movwf	postinc1,c
  1924  0138C8  0E02               	movlw	2
  1925  0138CA  6EE6               	movwf	postinc1,c
  1926  0138CC  0E02               	movlw	2
  1927  0138CE  6EE6               	movwf	postinc1,c
  1928  0138D0  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  1929  0138D4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1930  0138DA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1931  0138E0  0E04               	movlw	4
  1932  0138E2  6EE6               	movwf	postinc1,c
  1933  0138E4  ECE7  F0B0         	call	_sprintf	;wreg free
  1934                           
  1935                           ;main.c: 204:    update_lcd(0);
  1936  0138E8  0E00               	movlw	0
  1937  0138EA  6EE6               	movwf	postinc1,c
  1938  0138EC  EC60  F0B0         	call	_update_lcd	;wreg free
  1939                           
  1940                           ;main.c: 205:    WaitMs(3000);
  1941  0138F0  0EB8               	movlw	184
  1942  0138F2  6EE6               	movwf	postinc1,c
  1943  0138F4  0E0B               	movlw	11
  1944  0138F6  6EE6               	movwf	postinc1,c
  1945  0138F8  ECA8  F0BA         	call	_WaitMs	;wreg free
  1946                           
  1947                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 100);
  1948  0138FC  0E64               	movlw	100
  1949  0138FE  6EE6               	movwf	postinc1,c
  1950  013900  0E00               	movlw	0
  1951  013902  6EE6               	movwf	postinc1,c
  1952  013904  0E0A               	movlw	10
  1953  013906  6EE6               	movwf	postinc1,c
  1954  013908  EC52  F0BA         	call	_StartTimer	;wreg free
  1955                           
  1956                           ;main.c: 207:    StartTimer(TMR_ADC, 200);
  1957  01390C  0EC8               	movlw	200
  1958  01390E  6EE6               	movwf	postinc1,c
  1959  013910  0E00               	movlw	0
  1960  013912  6EE6               	movwf	postinc1,c
  1961  013914  0E01               	movlw	1
  1962  013916  6EE6               	movwf	postinc1,c
  1963  013918  EC52  F0BA         	call	_StartTimer	;wreg free
  1964                           
  1965                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  1966  01391C  0EB8               	movlw	184
  1967  01391E  6EE6               	movwf	postinc1,c
  1968  013920  0E0B               	movlw	11
  1969  013922  6EE6               	movwf	postinc1,c
  1970  013924  0E07               	movlw	7
  1971  013926  6EE6               	movwf	postinc1,c
  1972  013928  EC52  F0BA         	call	_StartTimer	;wreg free
  1973                           
  1974                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  1975  01392C  0EDC               	movlw	220
  1976  01392E  6EE6               	movwf	postinc1,c
  1977  013930  0E05               	movlw	5
  1978  013932  6EE6               	movwf	postinc1,c
  1979  013934  0E0B               	movlw	11
  1980  013936  6EE6               	movwf	postinc1,c
  1981  013938  EC52  F0BA         	call	_StartTimer	;wreg free
  1982                           
  1983                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  1984  01393C  0EB8               	movlw	184
  1985  01393E  6EE6               	movwf	postinc1,c
  1986  013940  0E0B               	movlw	11
  1987  013942  6EE6               	movwf	postinc1,c
  1988  013944  0E09               	movlw	9
  1989  013946  6EE6               	movwf	postinc1,c
  1990  013948  EC52  F0BA         	call	_StartTimer	;wreg free
  1991                           
  1992                           ;main.c: 212:    start_adc_scan();
  1993  01394C  EC7D  F0B7         	call	_start_adc_scan	;wreg free
  1994                           
  1995                           ;main.c: 214:    break;
  1996  013950  D016               	goto	l9878
  1997  013952                     l1249:
  1998                           
  1999                           ; BSR set to: 2
  2000                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2001  013952  6B00               	clrf	_V& (0+255),b	;volatile
  2002                           
  2003                           ;main.c: 222:    break;
  2004  013954  D014               	goto	l9878
  2005  013956                     l9876:
  2006  013956  0102               	movlb	2	; () banked
  2007  013958  5100               	movf	_V& (0+255),w,b	;volatile
  2008  01395A  6E3F               	movwf	(btemp+10)^0,c
  2009  01395C  6A40               	clrf	(btemp+11)^0,c
  2010                           
  2011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2012                           ; Switch size 1, requested type "simple"
  2013                           ; Number of cases is 1, Range of values is 0 to 0
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte            4     3 (average)
  2017                           ;	Chosen strategy is simple_byte
  2018  01395E  5040               	movf	(btemp+11)^0,w,c
  2019  013960  0A00               	xorlw	0	; case 0
  2020  013962  A4D8               	btfss	status,2,c
  2021  013964  D7F6               	goto	l1249
  2022                           
  2023                           ; BSR set to: 2
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 4, Range of values is 0 to 4
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte           13     7 (average)
  2029                           ;	Chosen strategy is simple_byte
  2030  013966  503F               	movf	(btemp+10)^0,w,c
  2031  013968  0A00               	xorlw	0	; case 0
  2032  01396A  B4D8               	btfsc	status,2,c
  2033  01396C  D729               	goto	l9836
  2034  01396E  0A01               	xorlw	1	; case 1
  2035  013970  B4D8               	btfsc	status,2,c
  2036  013972  D005               	goto	l9878
  2037  013974  0A02               	xorlw	2	; case 3
  2038  013976  B4D8               	btfsc	status,2,c
  2039  013978  D002               	goto	l9878
  2040  01397A  0A07               	xorlw	7	; case 4
  2041  01397C  D7EA               	goto	l1249
  2042  01397E                     l9878:
  2043                           
  2044                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2045  01397E  0E01               	movlw	1
  2046  013980  6EE6               	movwf	postinc1,c
  2047  013982  EC05  F0BD         	call	_TimerDone	;wreg free
  2048  013986  5035               	movf	btemp^0,w,c
  2049  013988  B4D8               	btfsc	status,2,c
  2050  01398A  D035               	goto	l9890
  2051  01398C  EC9D  F0BE         	call	_check_adc_scan	;wreg free
  2052  013990  5035               	movf	btemp^0,w,c
  2053  013992  B4D8               	btfsc	status,2,c
  2054  013994  D030               	goto	l9890
  2055                           
  2056                           ;main.c: 229:    C.calc[C_BATT] = conv_raw_result(C_BATT, C_CONV);
  2057  013996  0E00               	movlw	0
  2058  013998  6EE6               	movwf	postinc1,c
  2059  01399A  0E00               	movlw	0
  2060  01399C  6EE6               	movwf	postinc1,c
  2061  01399E  EC4C  F0AB         	call	_conv_raw_result	;wreg free
  2062  0139A2  0060  F0D4  F100   	movff	btemp,_C
  2063  0139A8  0060  F0D8  F101   	movff	btemp+1,_C+1
  2064  0139AE  0060  F0DC  F102   	movff	btemp+2,_C+2
  2065  0139B4  0060  F0E0  F103   	movff	btemp+3,_C+3
  2066                           
  2067                           ;main.c: 230:    C.calc[V_CC] = conv_raw_result(V_CC, V_CONV);
  2068  0139BA  0E01               	movlw	1
  2069  0139BC  6EE6               	movwf	postinc1,c
  2070  0139BE  0E02               	movlw	2
  2071  0139C0  6EE6               	movwf	postinc1,c
  2072  0139C2  EC4C  F0AB         	call	_conv_raw_result	;wreg free
  2073  0139C6  0060  F0D4  F108   	movff	btemp,_C+8
  2074  0139CC  0060  F0D8  F109   	movff	btemp+1,_C+9
  2075  0139D2  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2076  0139D8  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2077                           
  2078                           ;main.c: 234:    clear_adc_scan();
  2079  0139DE  ECA5  F0BE         	call	_clear_adc_scan	;wreg free
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;main.c: 235:    start_adc_scan();
  2083  0139E2  EC7D  F0B7         	call	_start_adc_scan	;wreg free
  2084                           
  2085                           ;main.c: 236:    StartTimer(TMR_ADC, 200);
  2086  0139E6  0EC8               	movlw	200
  2087  0139E8  6EE6               	movwf	postinc1,c
  2088  0139EA  0E00               	movlw	0
  2089  0139EC  6EE6               	movwf	postinc1,c
  2090  0139EE  0E01               	movlw	1
  2091  0139F0  6EE6               	movwf	postinc1,c
  2092  0139F2  EC52  F0BA         	call	_StartTimer	;wreg free
  2093  0139F6                     l9890:
  2094                           
  2095                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2096                           
  2097                           ;main.c: 239:   if (V.ticks) {
  2098  0139F6  0E0A               	movlw	10
  2099  0139F8  6EE6               	movwf	postinc1,c
  2100  0139FA  EC05  F0BD         	call	_TimerDone	;wreg free
  2101  0139FE  5035               	movf	btemp^0,w,c
  2102  013A00  B4D8               	btfsc	status,2,c
  2103  013A02  D06B               	goto	l9906
  2104                           
  2105                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2106  013A04  0E09               	movlw	9
  2107  013A06  6EE6               	movwf	postinc1,c
  2108  013A08  EC05  F0BD         	call	_TimerDone	;wreg free
  2109  013A0C  5035               	movf	btemp^0,w,c
  2110  013A0E  B4D8               	btfsc	status,2,c
  2111  013A10  D004               	goto	l9898
  2112                           
  2113                           ;main.c: 245:     set_display_info(DIS_STR);
  2114  013A12  0E00               	movlw	0
  2115  013A14  6EE6               	movwf	postinc1,c
  2116  013A16  EC7A  F0BD         	call	_set_display_info	;wreg free
  2117  013A1A                     l9898:
  2118                           
  2119                           ;main.c: 247:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2120  013A1A  0060  F403  FFE6   	movff	_C,postinc1
  2121  013A20  0060  F407  FFE6   	movff	_C+1,postinc1
  2122  013A26  0060  F40B  FFE6   	movff	_C+2,postinc1
  2123  013A2C  0060  F40F  FFE6   	movff	_C+3,postinc1
  2124  013A32  0E00               	movlw	0
  2125  013A34  6EE6               	movwf	postinc1,c
  2126  013A36  EC6B  F0BD         	call	_get_raw_result	;wreg free
  2127  013A3A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2128  013A40  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2129  013A46  0EB6               	movlw	low STR_9
  2130  013A48  6EE6               	movwf	postinc1,c
  2131  013A4A  0EFF               	movlw	high STR_9
  2132  013A4C  6EE6               	movwf	postinc1,c
  2133  013A4E  0E00               	movlw	0
  2134  013A50  6EE6               	movwf	postinc1,c
  2135  013A52  0E01               	movlw	1
  2136  013A54  6EE6               	movwf	postinc1,c
  2137  013A56  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  2138  013A5A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2139  013A60  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2140  013A66  0E0A               	movlw	10
  2141  013A68  6EE6               	movwf	postinc1,c
  2142  013A6A  ECE7  F0B0         	call	_sprintf	;wreg free
  2143                           
  2144                           ;main.c: 248:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2145  013A6E  0060  F423  FFE6   	movff	_C+8,postinc1
  2146  013A74  0060  F427  FFE6   	movff	_C+9,postinc1
  2147  013A7A  0060  F42B  FFE6   	movff	_C+10,postinc1
  2148  013A80  0060  F42F  FFE6   	movff	_C+11,postinc1
  2149  013A86  0E02               	movlw	2
  2150  013A88  6EE6               	movwf	postinc1,c
  2151  013A8A  EC6B  F0BD         	call	_get_raw_result	;wreg free
  2152  013A8E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2153  013A94  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2154  013A9A  0EB6               	movlw	low STR_9
  2155  013A9C  6EE6               	movwf	postinc1,c
  2156  013A9E  0EFF               	movlw	high STR_9
  2157  013AA0  6EE6               	movwf	postinc1,c
  2158  013AA2  0E00               	movlw	0
  2159  013AA4  6EE6               	movwf	postinc1,c
  2160  013AA6  0E02               	movlw	2
  2161  013AA8  6EE6               	movwf	postinc1,c
  2162  013AAA  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  2163  013AAE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2164  013AB4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2165  013ABA  0E0A               	movlw	10
  2166  013ABC  6EE6               	movwf	postinc1,c
  2167  013ABE  ECE7  F0B0         	call	_sprintf	;wreg free
  2168                           
  2169                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 100);
  2170  013AC2  0E64               	movlw	100
  2171  013AC4  6EE6               	movwf	postinc1,c
  2172  013AC6  0E00               	movlw	0
  2173  013AC8  6EE6               	movwf	postinc1,c
  2174  013ACA  0E0A               	movlw	10
  2175  013ACC  6EE6               	movwf	postinc1,c
  2176  013ACE  EC52  F0BA         	call	_StartTimer	;wreg free
  2177                           
  2178                           ;main.c: 250:    update_lcd(0);
  2179  013AD2  0E00               	movlw	0
  2180  013AD4  6EE6               	movwf	postinc1,c
  2181  013AD6  EC60  F0B0         	call	_update_lcd	;wreg free
  2182  013ADA                     l9906:
  2183                           
  2184                           ;main.c: 256:   check_help(V.flipper);
  2185  013ADA  0102               	movlb	2	; () banked
  2186  013ADC  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2187  013ADE  6EE6               	movwf	postinc1,c
  2188  013AE0  EC92  F0A7         	call	_check_help	;wreg free
  2189                           
  2190                           ;main.c: 261:   if (V.set_sequ) {
  2191  013AE4  0102               	movlb	2	; () banked
  2192  013AE6  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2193  013AE8  D736               	goto	l9876
  2194                           
  2195                           ; BSR set to: 2
  2196                           ;main.c: 262:    if (TimerDone(TMR_INFO)) {
  2197  013AEA  0E07               	movlw	7
  2198  013AEC  6EE6               	movwf	postinc1,c
  2199  013AEE  EC05  F0BD         	call	_TimerDone	;wreg free
  2200  013AF2  5035               	movf	btemp^0,w,c
  2201  013AF4  B4D8               	btfsc	status,2,c
  2202  013AF6  D00B               	goto	l9918
  2203                           
  2204                           ;main.c: 263:     V.set_sequ = 0;
  2205  013AF8  0102               	movlb	2	; () banked
  2206  013AFA  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2207                           
  2208                           ; BSR set to: 2
  2209                           ;main.c: 264:     set_vterm(0);
  2210  013AFC  0E00               	movlw	0
  2211  013AFE  6EE6               	movwf	postinc1,c
  2212  013B00  ECC4  F0BD         	call	_set_vterm	;wreg free
  2213                           
  2214                           ; BSR set to: 4
  2215                           ;main.c: 265:     update_lcd(0);
  2216  013B04  0E00               	movlw	0
  2217  013B06  6EE6               	movwf	postinc1,c
  2218  013B08  EC60  F0B0         	call	_update_lcd	;wreg free
  2219                           
  2220                           ;main.c: 266:    } else {
  2221  013B0C  D724               	goto	l9876
  2222  013B0E                     l9918:
  2223                           
  2224                           ;main.c: 267:     set_vterm(2);
  2225  013B0E  0E02               	movlw	2
  2226  013B10  6EE6               	movwf	postinc1,c
  2227  013B12  ECC4  F0BD         	call	_set_vterm	;wreg free
  2228                           
  2229                           ; BSR set to: 4
  2230                           ;main.c: 268:     update_lcd(2);
  2231  013B16  0E02               	movlw	2
  2232  013B18  6EE6               	movwf	postinc1,c
  2233  013B1A  EC60  F0B0         	call	_update_lcd	;wreg free
  2234  013B1E  D71B               	goto	l9876
  2235  013B20                     __end_of_main:
  2236                           	opt callstack 0
  2237                           
  2238 ;; *************** function _start_adc_scan *****************
  2239 ;; Defined at:
  2240 ;;		line 29 in file "daq.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1  [STACK] _Bool 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/4
  2251 ;;		On exit  : 1/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    7
  2261 ;; This function calls:
  2262 ;;		_ADCC_SetADIInterruptHandler
  2263 ;;		_ADCC_SetADTIInterruptHandler
  2264 ;;		_ADCC_StartConversion
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text1
  2271  016EFA                     __ptext1:
  2272                           	opt callstack 0
  2273  016EFA                     _start_adc_scan:
  2274                           	opt callstack 23
  2275                           
  2276                           ;daq.c: 31:  if (R.done)
  2277                           
  2278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2279                           ;incstack = 0
  2280  016EFA  0100               	movlb	0	; () banked
  2281  016EFC  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2282  016EFE  A4D8               	btfss	status,2,c
  2283  016F00  0012               	return	
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;daq.c: 34:  R.scan_index = 0;
  2287  016F02  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2291  016F04  013A               	movlb	58	; () banked
  2292  016F06  5140               	movf	64,w,b	;volatile
  2293  016F08  006E F940  F035    	movff	14928,btemp	;volatile
  2294  016F0E  6A36               	clrf	(btemp+1)^0,c
  2295  016F10  0060  F0D4  F036   	movff	btemp,btemp+1
  2296  016F16  6A35               	clrf	btemp^0,c
  2297  016F18  2635               	addwf	btemp^0,f,c
  2298  016F1A  0E00               	movlw	0
  2299  016F1C  2236               	addwfc	(btemp+1)^0,f,c
  2300  016F1E  0E77               	movlw	119
  2301  016F20  1435               	andwf	btemp^0,w,c
  2302  016F22  0100               	movlb	0	; () banked
  2303  016F24  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2304  016F26  0E3C               	movlw	60
  2305  016F28  1436               	andwf	(btemp+1)^0,w,c
  2306  016F2A  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2310  016F2C  0E12               	movlw	low _adc_int_handler
  2311  016F2E  6EE6               	movwf	postinc1,c
  2312  016F30  0E7B               	movlw	high _adc_int_handler
  2313  016F32  6EE6               	movwf	postinc1,c
  2314  016F34  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2315  016F36  6EE6               	movwf	postinc1,c
  2316  016F38  ECA2  F0BC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2317                           
  2318                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2319  016F3C  0E10               	movlw	low _adc_int_t_handler
  2320  016F3E  6EE6               	movwf	postinc1,c
  2321  016F40  0E6A               	movlw	high _adc_int_t_handler
  2322  016F42  6EE6               	movwf	postinc1,c
  2323  016F44  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2324  016F46  6EE6               	movwf	postinc1,c
  2325  016F48  EC8E  F0BC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2326                           
  2327                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2328  016F4C  0100               	movlb	0	; () banked
  2329  016F4E  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2330  016F50  0B0F               	andlw	15
  2331  016F52  6EE6               	movwf	postinc1,c
  2332  016F54  EC48  F0BE         	call	_ADCC_StartConversion	;wreg free
  2333                           
  2334                           ; BSR set to: 62
  2335  016F58  82BE               	bsf	190,1,c	;volatile
  2336                           
  2337                           ; BSR set to: 62
  2338  016F5A  84BE               	bsf	190,2,c	;volatile
  2339                           
  2340                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2341  016F5C  0012               	return		;funcret
  2342  016F5E                     __end_of_start_adc_scan:
  2343                           	opt callstack 0
  2344                           
  2345 ;; *************** function _ADCC_StartConversion *****************
  2346 ;; Defined at:
  2347 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  channel         1  [STACK] enum E16136
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1  [STACK] void 
  2354 ;; Registers used:
  2355 ;;		fsr1l, fsr1h
  2356 ;; Tracked objects:
  2357 ;;		On entry : 3F/0
  2358 ;;		On exit  : 3F/3E
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    6
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_start_adc_scan
  2372 ;;		_adc_int_t_handler
  2373 ;; This function uses a reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text2
  2377  017C90                     __ptext2:
  2378                           	opt callstack 0
  2379  017C90                     _ADCC_StartConversion:
  2380                           	opt callstack 6
  2381                           
  2382                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2383                           ;stkvar	_channel @ sp[(0)+-1]
  2384                           
  2385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2386                           ;incstack = 0
  2387  017C90  0EFF               	movlw	-1
  2388  017C92  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2389                           
  2390                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2391  017C98  013E               	movlb	62	; () banked
  2392  017C9A  8FF8               	bsf	248,7,b	;volatile
  2393                           
  2394                           ; BSR set to: 62
  2395                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2396  017C9C  81F8               	bsf	248,0,b	;volatile
  2397                           
  2398                           ; BSR set to: 62
  2399                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2400  017C9E  52E5               	movf	postdec1,f,c
  2401  017CA0  0012               	return		;funcret
  2402  017CA2                     __end_of_ADCC_StartConversion:
  2403                           	opt callstack 0
  2404                           
  2405 ;; *************** function _srand *****************
  2406 ;; Defined at:
  2407 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  s               2  [STACK] unsigned int 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1  [STACK] void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2416 ;; Tracked objects:
  2417 ;;		On entry : 3F/0
  2418 ;;		On exit  : 3F/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    6
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text3
  2436  0175BC                     __ptext3:
  2437                           	opt callstack 0
  2438  0175BC                     _srand:
  2439                           	opt callstack 24
  2440                           
  2441                           ;stkvar	_s @ sp[(0)+-2]
  2442                           
  2443                           ; BSR set to: 62
  2444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2445                           ;incstack = 0
  2446  0175BC  0EFE               	movlw	-2
  2447  0175BE  50E3               	movf	plusw1,w,c
  2448  0175C0  0FFF               	addlw	255
  2449  0175C2  6E3F               	movwf	(btemp+10)^0,c
  2450  0175C4  0EFF               	movlw	-1
  2451  0175C6  006F FF8C  F040    	movff	plusw1,btemp+11
  2452  0175CC  0EFF               	movlw	255
  2453  0175CE  2240               	addwfc	(btemp+11)^0,f,c
  2454  0175D0  0060  F0FC  F0B5   	movff	btemp+10,_seed
  2455  0175D6  0060  F100  F0B6   	movff	btemp+11,_seed+1
  2456  0175DC  0100               	movlb	0	; () banked
  2457  0175DE  6BB7               	clrf	(_seed+2)& (0+255),b
  2458  0175E0  6BB8               	clrf	(_seed+3)& (0+255),b
  2459  0175E2  6BB9               	clrf	(_seed+4)& (0+255),b
  2460  0175E4  6BBA               	clrf	(_seed+5)& (0+255),b
  2461  0175E6  6BBB               	clrf	(_seed+6)& (0+255),b
  2462  0175E8  6BBC               	clrf	(_seed+7)& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2466  0175EA  52E5               	movf	postdec1,f,c
  2467  0175EC  52E5               	movf	postdec1,f,c
  2468  0175EE  0012               	return		;funcret
  2469  0175F0                     __end_of_srand:
  2470                           	opt callstack 0
  2471                           
  2472 ;; *************** function _init_display *****************
  2473 ;; Defined at:
  2474 ;;		line 37 in file "eadog.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1  [STACK] void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/2
  2485 ;;		On exit  : 3F/3D
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    8
  2495 ;; This function calls:
  2496 ;;		_ringBufS_init
  2497 ;;		_send_lcd_cmd
  2498 ;;		_send_lcd_cmd_long
  2499 ;;		_wdtdelay
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;; This function uses a reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text4
  2506  0162D8                     __ptext4:
  2507                           	opt callstack 0
  2508  0162D8                     _init_display:
  2509                           	opt callstack 22
  2510                           
  2511                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2512                           
  2513                           ; BSR set to: 0
  2514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2515                           ;incstack = 0
  2516  0162D8  0E43               	movlw	low _ring_buf1
  2517  0162DA  0100               	movlb	0	; () banked
  2518  0162DC  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2519  0162DE  0E03               	movlw	high _ring_buf1
  2520  0162E0  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2521                           
  2522                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2523  0162E2  0E00               	movlw	low _ring_buf2
  2524  0162E4  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2525  0162E6  0E03               	movlw	high _ring_buf2
  2526  0162E8  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2530  0162EA  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2531  0162F0  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2532  0162F6  ECDA  F0BB         	call	_ringBufS_init	;wreg free
  2533                           
  2534                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2535  0162FA  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2536  016300  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2537  016306  ECDA  F0BB         	call	_ringBufS_init	;wreg free
  2538                           
  2539                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2540  01630A  84BE               	bsf	190,2,c	;volatile
  2541  01630C  84BC               	bsf	188,2,c	;volatile
  2542                           
  2543                           ;eadog.c: 46:  wdtdelay(350000);
  2544  01630E  0E30               	movlw	48
  2545  016310  6EE6               	movwf	postinc1,c
  2546  016312  0E57               	movlw	87
  2547  016314  6EE6               	movwf	postinc1,c
  2548  016316  0E05               	movlw	5
  2549  016318  6EE6               	movwf	postinc1,c
  2550  01631A  0E00               	movlw	0
  2551  01631C  6EE6               	movwf	postinc1,c
  2552  01631E  EC70  F0B8         	call	_wdtdelay	;wreg free
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2556  016322  0E39               	movlw	57
  2557  016324  6EE6               	movwf	postinc1,c
  2558  016326  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2562  01632A  0E1D               	movlw	29
  2563  01632C  6EE6               	movwf	postinc1,c
  2564  01632E  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2568  016332  0E50               	movlw	80
  2569  016334  6EE6               	movwf	postinc1,c
  2570  016336  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2574  01633A  0E6C               	movlw	108
  2575  01633C  6EE6               	movwf	postinc1,c
  2576  01633E  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2580  016342  0E76               	movlw	118
  2581  016344  6EE6               	movwf	postinc1,c
  2582  016346  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2586  01634A  0E38               	movlw	56
  2587  01634C  6EE6               	movwf	postinc1,c
  2588  01634E  ECB2  F0BB         	call	_send_lcd_cmd_long	;wreg free
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2592  016352  0E0F               	movlw	15
  2593  016354  6EE6               	movwf	postinc1,c
  2594  016356  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2598  01635A  0E01               	movlw	1
  2599  01635C  6EE6               	movwf	postinc1,c
  2600  01635E  ECB2  F0BB         	call	_send_lcd_cmd_long	;wreg free
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2604  016362  0E02               	movlw	2
  2605  016364  6EE6               	movwf	postinc1,c
  2606  016366  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2610  01636A  0E06               	movlw	6
  2611  01636C  6EE6               	movwf	postinc1,c
  2612  01636E  ECC6  F0BB         	call	_send_lcd_cmd	;wreg free
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;eadog.c: 57:  wdtdelay(30);
  2616  016372  0E1E               	movlw	30
  2617  016374  6EE6               	movwf	postinc1,c
  2618  016376  0E00               	movlw	0
  2619  016378  6EE6               	movwf	postinc1,c
  2620  01637A  0E00               	movlw	0
  2621  01637C  6EE6               	movwf	postinc1,c
  2622  01637E  0E00               	movlw	0
  2623  016380  6EE6               	movwf	postinc1,c
  2624  016382  EC70  F0B8         	call	_wdtdelay	;wreg free
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2628  016386  0E02               	movlw	2
  2629  016388  013D               	movlb	61	; () banked
  2630  01638A  6F16               	movwf	22,b	;volatile
  2631                           
  2632                           ; BSR set to: 61
  2633                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2634  01638C  0E40               	movlw	64
  2635  01638E  6F15               	movwf	21,b	;volatile
  2636                           
  2637                           ; BSR set to: 61
  2638                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2639  016390  0E83               	movlw	131
  2640  016392  6F14               	movwf	20,b	;volatile
  2641                           
  2642                           ; BSR set to: 61
  2643                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2644  016394  931A               	bcf	26,1,b	;volatile
  2645                           
  2646                           ; BSR set to: 61
  2647                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2648  016396  0E3F               	movlw	-193
  2649  016398  013B               	movlb	59	; () banked
  2650  01639A  17FD               	andwf	253,f,b	;volatile
  2651                           
  2652                           ; BSR set to: 59
  2653                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2654  01639C  9BFD               	bcf	253,5,b	;volatile
  2655                           
  2656                           ; BSR set to: 59
  2657                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2658  01639E  51FD               	movf	253,w,b	;volatile
  2659  0163A0  0BF9               	andlw	-7
  2660  0163A2  0902               	iorlw	2
  2661  0163A4  6FFD               	movwf	253,b	;volatile
  2662                           
  2663                           ; BSR set to: 59
  2664                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2665  0163A6  0EE7               	movlw	-25
  2666  0163A8  17FD               	andwf	253,f,b	;volatile
  2667                           
  2668                           ; BSR set to: 59
  2669                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2670  0163AA  81FD               	bsf	253,0,b	;volatile
  2671                           
  2672                           ; BSR set to: 59
  2673                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2674  0163AC  0E43               	movlw	low _ring_buf1
  2675  0163AE  6FF9               	movwf	249,b	;volatile
  2676  0163B0  0E03               	movlw	high _ring_buf1
  2677  0163B2  6FFA               	movwf	250,b	;volatile
  2678  0163B4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2679  0163B6  6FFB               	movwf	251,b	;volatile
  2680                           
  2681                           ; BSR set to: 59
  2682                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2683  0163B8  9BFC               	bcf	252,5,b	;volatile
  2684                           
  2685                           ; BSR set to: 59
  2686                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2687  0163BA  013D               	movlb	61	; () banked
  2688  0163BC  831A               	bsf	26,1,b	;volatile
  2689                           
  2690                           ; BSR set to: 61
  2691                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2692  0163BE  94BE               	bcf	190,2,c	;volatile
  2693                           
  2694                           ; BSR set to: 61
  2695                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2696  0163C0  0012               	return		;funcret
  2697  0163C2                     __end_of_init_display:
  2698                           	opt callstack 0
  2699                           
  2700 ;; *************** function _send_lcd_cmd_long *****************
  2701 ;; Defined at:
  2702 ;;		line 114 in file "eadog.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  cmd             1  [STACK] const unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1  [STACK] void 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2711 ;; Tracked objects:
  2712 ;;		On entry : 3F/0
  2713 ;;		On exit  : 3F/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    7
  2723 ;; This function calls:
  2724 ;;		_SPI1_Exchange8bit
  2725 ;;		_wdtdelay
  2726 ;; This function is called by:
  2727 ;;		_init_display
  2728 ;; This function uses a reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text5
  2732  017764                     __ptext5:
  2733                           	opt callstack 0
  2734  017764                     _send_lcd_cmd_long:
  2735                           	opt callstack 22
  2736                           
  2737                           ; BSR set to: 61
  2738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2739                           ;incstack = 0
  2740                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2741  017764  92BC               	bcf	188,1,c	;volatile
  2742                           
  2743                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2744  017766  94BC               	bcf	188,2,c	;volatile
  2745                           
  2746                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2747                           ;stkvar	_cmd @ sp[(0)+-1]
  2748  017768  0EFF               	movlw	-1
  2749  01776A  50E3               	movf	plusw1,w,c
  2750  01776C  6EE6               	movwf	postinc1,c
  2751  01776E  EC5C  F0BD         	call	_SPI1_Exchange8bit	;wreg free
  2752                           
  2753                           ; BSR set to: 57
  2754                           ;eadog.c: 119:  wdtdelay(800);
  2755  017772  0E20               	movlw	32
  2756  017774  6EE6               	movwf	postinc1,c
  2757  017776  0E03               	movlw	3
  2758  017778  6EE6               	movwf	postinc1,c
  2759  01777A  0E00               	movlw	0
  2760  01777C  6EE6               	movwf	postinc1,c
  2761  01777E  0E00               	movlw	0
  2762  017780  6EE6               	movwf	postinc1,c
  2763  017782  EC70  F0B8         	call	_wdtdelay	;wreg free
  2764                           
  2765                           ; BSR set to: 0
  2766  017786  82BC               	bsf	188,1,c	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2770  017788  52E5               	movf	postdec1,f,c
  2771  01778A  0012               	return		;funcret
  2772  01778C                     __end_of_send_lcd_cmd_long:
  2773                           	opt callstack 0
  2774                           
  2775 ;; *************** function _send_lcd_cmd *****************
  2776 ;; Defined at:
  2777 ;;		line 102 in file "eadog.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  cmd             1  [STACK] const unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1  [STACK] void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2786 ;; Tracked objects:
  2787 ;;		On entry : 3F/0
  2788 ;;		On exit  : 3F/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    7
  2798 ;; This function calls:
  2799 ;;		_SPI1_Exchange8bit
  2800 ;;		_wdtdelay
  2801 ;; This function is called by:
  2802 ;;		_init_display
  2803 ;; This function uses a reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text6
  2807  01778C                     __ptext6:
  2808                           	opt callstack 0
  2809  01778C                     _send_lcd_cmd:
  2810                           	opt callstack 22
  2811                           
  2812                           ; BSR set to: 0
  2813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2814                           ;incstack = 0
  2815                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2816  01778C  92BC               	bcf	188,1,c	;volatile
  2817                           
  2818                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2819  01778E  94BC               	bcf	188,2,c	;volatile
  2820                           
  2821                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2822                           ;stkvar	_cmd @ sp[(0)+-1]
  2823  017790  0EFF               	movlw	-1
  2824  017792  50E3               	movf	plusw1,w,c
  2825  017794  6EE6               	movwf	postinc1,c
  2826  017796  EC5C  F0BD         	call	_SPI1_Exchange8bit	;wreg free
  2827                           
  2828                           ; BSR set to: 57
  2829                           ;eadog.c: 107:  wdtdelay(30);
  2830  01779A  0E1E               	movlw	30
  2831  01779C  6EE6               	movwf	postinc1,c
  2832  01779E  0E00               	movlw	0
  2833  0177A0  6EE6               	movwf	postinc1,c
  2834  0177A2  0E00               	movlw	0
  2835  0177A4  6EE6               	movwf	postinc1,c
  2836  0177A6  0E00               	movlw	0
  2837  0177A8  6EE6               	movwf	postinc1,c
  2838  0177AA  EC70  F0B8         	call	_wdtdelay	;wreg free
  2839                           
  2840                           ; BSR set to: 0
  2841  0177AE  82BC               	bsf	188,1,c	;volatile
  2842                           
  2843                           ; BSR set to: 0
  2844                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2845  0177B0  52E5               	movf	postdec1,f,c
  2846  0177B2  0012               	return		;funcret
  2847  0177B4                     __end_of_send_lcd_cmd:
  2848                           	opt callstack 0
  2849                           
  2850 ;; *************** function _SPI1_Exchange8bit *****************
  2851 ;; Defined at:
  2852 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  data            1  [STACK] unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1  [STACK] unsigned char 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 3F/39
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    6
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_send_lcd_cmd
  2877 ;;		_send_lcd_cmd_long
  2878 ;; This function uses a reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text7
  2882  017AB8                     __ptext7:
  2883                           	opt callstack 0
  2884  017AB8                     _SPI1_Exchange8bit:
  2885                           	opt callstack 22
  2886                           
  2887                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2888                           
  2889                           ; BSR set to: 0
  2890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2891                           ;incstack = 0
  2892  017AB8  0E01               	movlw	1
  2893  017ABA  013D               	movlb	61	; () banked
  2894  017ABC  6F12               	movwf	18,b	;volatile
  2895                           
  2896                           ; BSR set to: 61
  2897                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2898                           ;stkvar	_data @ sp[(0)+-1]
  2899  017ABE  0EFF               	movlw	-1
  2900  017AC0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2901  017AC6                     l835:
  2902                           
  2903                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2904  017AC6  0139               	movlb	57	; () banked
  2905  017AC8  A9A2               	btfss	162,4,b	;volatile
  2906  017ACA  D7FD               	goto	l835
  2907                           
  2908                           ; BSR set to: 57
  2909                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2910  017ACC  006F F440  F035    	movff	15632,btemp	;volatile
  2911                           
  2912                           ; BSR set to: 57
  2913                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2914  017AD2  52E5               	movf	postdec1,f,c
  2915  017AD4  0012               	return		;funcret
  2916  017AD6                     __end_of_SPI1_Exchange8bit:
  2917                           	opt callstack 0
  2918                           
  2919 ;; *************** function _ringBufS_init *****************
  2920 ;; Defined at:
  2921 ;;		line 22 in file "ringbufs.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  _this           2  [STACK] PTR volatile struct ring
  2924 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1  [STACK] void 
  2929 ;; Registers used:
  2930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    7
  2943 ;; This function calls:
  2944 ;;		_memset
  2945 ;; This function is called by:
  2946 ;;		_init_display
  2947 ;; This function uses a reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text8
  2951  0177B4                     __ptext8:
  2952                           	opt callstack 0
  2953  0177B4                     _ringBufS_init:
  2954                           	opt callstack 22
  2955                           
  2956                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2957                           
  2958                           ; BSR set to: 57
  2959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2960                           ;incstack = 0
  2961  0177B4  0E43               	movlw	67
  2962  0177B6  6EE6               	movwf	postinc1,c
  2963  0177B8  0E00               	movlw	0
  2964  0177BA  6EE6               	movwf	postinc1,c
  2965  0177BC  0E00               	movlw	0
  2966  0177BE  6EE6               	movwf	postinc1,c
  2967  0177C0  0E00               	movlw	0
  2968  0177C2  6EE6               	movwf	postinc1,c
  2969                           
  2970                           ;stkvar	__this @ sp[(-4)+-2]
  2971  0177C4  0EFA               	movlw	-6
  2972  0177C6  006F FF8F FFE6     	movff	plusw1,postinc1
  2973  0177CC  006F FF8F FFE6     	movff	plusw1,postinc1
  2974  0177D2  EC23  F0A1         	call	_memset	;wreg free
  2975                           
  2976                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2977  0177D6  52E5               	movf	postdec1,f,c
  2978  0177D8  52E5               	movf	postdec1,f,c
  2979  0177DA  0012               	return		;funcret
  2980  0177DC                     __end_of_ringBufS_init:
  2981                           	opt callstack 0
  2982                           
  2983 ;; *************** function _eaDogM_WriteCommand *****************
  2984 ;; Defined at:
  2985 ;;		line 160 in file "eadog.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  cmd             1  [STACK] const unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1  [STACK] void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2994 ;; Tracked objects:
  2995 ;;		On entry : 3F/3D
  2996 ;;		On exit  : 3F/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:   16
  3006 ;; This function calls:
  3007 ;;		_send_lcd_cmd_dma
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text9
  3014  017CB2                     __ptext9:
  3015                           	opt callstack 0
  3016  017CB2                     _eaDogM_WriteCommand:
  3017                           	opt callstack 14
  3018                           
  3019                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3020                           ;stkvar	_cmd @ sp[(0)+-1]
  3021                           
  3022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3023                           ;incstack = 0
  3024  017CB2  0EFF               	movlw	-1
  3025  017CB4  50E3               	movf	plusw1,w,c
  3026  017CB6  6EE6               	movwf	postinc1,c
  3027  017CB8  ECCA  F0B8         	call	_send_lcd_cmd_dma	;wreg free
  3028                           
  3029                           ; BSR set to: 0
  3030                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3031  017CBC  52E5               	movf	postdec1,f,c
  3032  017CBE  0012               	return		;funcret
  3033  017CC0                     __end_of_eaDogM_WriteCommand:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _conv_raw_result *****************
  3037 ;; Defined at:
  3038 ;;		line 71 in file "daq.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  chan            1  [STACK] enum E16136
  3041 ;;  to_what         1  [STACK] enum E16198
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  4  [STACK] float 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/4
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    7
  3060 ;; This function calls:
  3061 ;;		___fldiv
  3062 ;;		___flmul
  3063 ;;		___xxtofl
  3064 ;;		_get_raw_result
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text10
  3071  015698                     __ptext10:
  3072                           	opt callstack 0
  3073  015698                     _conv_raw_result:
  3074                           	opt callstack 23
  3075                           
  3076                           ;daq.c: 71: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 72: {;
      +                          daq.c: 73:  switch (to_what) {
  3077                           
  3078                           ; BSR set to: 0
  3079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3080                           ;incstack = 0
  3081  015698  D0AD               	goto	l8484
  3082  01569A                     l8458:
  3083                           
  3084                           ;daq.c: 75:   return 25.0;
  3085  01569A  0E00               	movlw	0
  3086  01569C  6E35               	movwf	btemp^0,c
  3087  01569E  0E00               	movlw	0
  3088  0156A0  6E36               	movwf	(btemp+1)^0,c
  3089  0156A2  0EC8               	movlw	200
  3090  0156A4  6E37               	movwf	(btemp+2)^0,c
  3091  0156A6  0E41               	movlw	65
  3092  0156A8  D0A3               	goto	L1
  3093  0156AA                     l8464:
  3094                           
  3095                           ;daq.c: 78:   return((float) get_raw_result(chan) * 1.25) / 1000.0;
  3096  0156AA  0E00               	movlw	0
  3097  0156AC  6EE6               	movwf	postinc1,c
  3098  0156AE  0E00               	movlw	0
  3099  0156B0  6EE6               	movwf	postinc1,c
  3100  0156B2  0E7A               	movlw	122
  3101  0156B4  6EE6               	movwf	postinc1,c
  3102  0156B6  0E44               	movlw	68
  3103  0156B8  6EE6               	movwf	postinc1,c
  3104  0156BA  0E00               	movlw	0
  3105  0156BC  6EE6               	movwf	postinc1,c
  3106  0156BE  0E00               	movlw	0
  3107  0156C0  6EE6               	movwf	postinc1,c
  3108  0156C2  0EA0               	movlw	160
  3109  0156C4  6EE6               	movwf	postinc1,c
  3110  0156C6  0E3F               	movlw	63
  3111  0156C8  6EE6               	movwf	postinc1,c
  3112                           
  3113                           ;stkvar	_chan @ sp[(-8)+-1]
  3114  0156CA  0EF7               	movlw	-9
  3115  0156CC  50E3               	movf	plusw1,w,c
  3116  0156CE  6EE6               	movwf	postinc1,c
  3117  0156D0  EC6B  F0BD         	call	_get_raw_result	;wreg free
  3118  0156D4  0060  F0D4  F03F   	movff	btemp,btemp+10
  3119  0156DA  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3120  0156E0  503F               	movf	(btemp+10)^0,w,c
  3121  0156E2  6E39               	movwf	(btemp+4)^0,c
  3122  0156E4  5040               	movf	(btemp+11)^0,w,c
  3123  0156E6  6E3A               	movwf	(btemp+5)^0,c
  3124  0156E8  6A3B               	clrf	(btemp+6)^0,c
  3125  0156EA  6A3C               	clrf	(btemp+7)^0,c
  3126  0156EC  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3127  0156F2  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3128  0156F8  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3129  0156FE  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3130  015704  0E00               	movlw	0
  3131  015706  6EE6               	movwf	postinc1,c
  3132  015708  EC9B  F0A8         	call	___xxtofl	;wreg free
  3133  01570C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3134  015712  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3135  015718  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3136  01571E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3137  015724  ECC1  F08E         	call	___flmul	;wreg free
  3138  015728  0060  F0D7  FFE6   	movff	btemp,postinc1
  3139  01572E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3140  015734  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3141  01573A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3142  015740  ECB4  F096         	call	___fldiv	;wreg free
  3143  015744  D06A               	goto	l1648
  3144  015746                     l8470:
  3145                           
  3146                           ;daq.c: 81:   return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3147  015746  0E00               	movlw	0
  3148  015748  6EE6               	movwf	postinc1,c
  3149  01574A  0E00               	movlw	0
  3150  01574C  6EE6               	movwf	postinc1,c
  3151  01574E  0E7A               	movlw	122
  3152  015750  6EE6               	movwf	postinc1,c
  3153  015752  0E44               	movlw	68
  3154  015754  6EE6               	movwf	postinc1,c
  3155  015756  0E61               	movlw	97
  3156  015758  6EE6               	movwf	postinc1,c
  3157  01575A  0E03               	movlw	3
  3158  01575C  6EE6               	movwf	postinc1,c
  3159  01575E  0E04               	movlw	4
  3160  015760  6EE6               	movwf	postinc1,c
  3161  015762  0E41               	movlw	65
  3162  015764  6EE6               	movwf	postinc1,c
  3163                           
  3164                           ;stkvar	_chan @ sp[(-8)+-1]
  3165  015766  0EF7               	movlw	-9
  3166  015768  50E3               	movf	plusw1,w,c
  3167  01576A  6EE6               	movwf	postinc1,c
  3168  01576C  EC6B  F0BD         	call	_get_raw_result	;wreg free
  3169  015770  0060  F0D4  F03F   	movff	btemp,btemp+10
  3170  015776  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3171  01577C  503F               	movf	(btemp+10)^0,w,c
  3172  01577E  6E39               	movwf	(btemp+4)^0,c
  3173  015780  5040               	movf	(btemp+11)^0,w,c
  3174  015782  6E3A               	movwf	(btemp+5)^0,c
  3175  015784  6A3B               	clrf	(btemp+6)^0,c
  3176  015786  6A3C               	clrf	(btemp+7)^0,c
  3177  015788  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3178  01578E  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3179  015794  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3180  01579A  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3181  0157A0  0E00               	movlw	0
  3182  0157A2  6EE6               	movwf	postinc1,c
  3183  0157A4  EC9B  F0A8         	call	___xxtofl	;wreg free
  3184  0157A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3185  0157AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3186  0157B4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3187  0157BA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3188  0157C0  ECC1  F08E         	call	___flmul	;wreg free
  3189  0157C4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3190  0157CA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3191  0157D0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3192  0157D6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3193  0157DC  ECB4  F096         	call	___fldiv	;wreg free
  3194  0157E0  D01C               	goto	l1648
  3195  0157E2                     l8476:
  3196                           
  3197                           ;daq.c: 84:   return 0.0;
  3198  0157E2  0E00               	movlw	0
  3199  0157E4  6E35               	movwf	btemp^0,c
  3200  0157E6  0E00               	movlw	0
  3201  0157E8  6E36               	movwf	(btemp+1)^0,c
  3202  0157EA  0E00               	movlw	0
  3203  0157EC  6E37               	movwf	(btemp+2)^0,c
  3204  0157EE  0E00               	movlw	0
  3205  0157F0                     L1:
  3206  0157F0  6E38               	movwf	(btemp+3)^0,c
  3207  0157F2  D013               	goto	l1648
  3208  0157F4                     l8484:
  3209                           
  3210                           ;stkvar	_to_what @ sp[(0)+-2]
  3211  0157F4  0EFE               	movlw	-2
  3212  0157F6  50E3               	movf	plusw1,w,c
  3213  0157F8  6E3F               	movwf	(btemp+10)^0,c
  3214  0157FA  6A40               	clrf	(btemp+11)^0,c
  3215                           
  3216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3217                           ; Switch size 1, requested type "simple"
  3218                           ; Number of cases is 1, Range of values is 0 to 0
  3219                           ; switch strategies available:
  3220                           ; Name         Instructions Cycles
  3221                           ; simple_byte            4     3 (average)
  3222                           ;	Chosen strategy is simple_byte
  3223  0157FC  5040               	movf	(btemp+11)^0,w,c
  3224  0157FE  0A00               	xorlw	0	; case 0
  3225  015800  A4D8               	btfss	status,2,c
  3226  015802  D7EF               	goto	l8476
  3227                           
  3228                           ; Switch size 1, requested type "simple"
  3229                           ; Number of cases is 3, Range of values is 0 to 2
  3230                           ; switch strategies available:
  3231                           ; Name         Instructions Cycles
  3232                           ; simple_byte           10     6 (average)
  3233                           ;	Chosen strategy is simple_byte
  3234  015804  503F               	movf	(btemp+10)^0,w,c
  3235  015806  0A00               	xorlw	0	; case 0
  3236  015808  B4D8               	btfsc	status,2,c
  3237  01580A  D74F               	goto	l8464
  3238  01580C  0A01               	xorlw	1	; case 1
  3239  01580E  B4D8               	btfsc	status,2,c
  3240  015810  D79A               	goto	l8470
  3241  015812  0A03               	xorlw	3	; case 2
  3242  015814  B4D8               	btfsc	status,2,c
  3243  015816  D741               	goto	l8458
  3244  015818  D7E4               	goto	l8476
  3245  01581A                     l1648:
  3246                           
  3247                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3248  01581A  52E5               	movf	postdec1,f,c
  3249  01581C  52E5               	movf	postdec1,f,c
  3250  01581E  0012               	return		;funcret
  3251  015820                     __end_of_conv_raw_result:
  3252                           	opt callstack 0
  3253                           
  3254 ;; *************** function _get_raw_result *****************
  3255 ;; Defined at:
  3256 ;;		line 63 in file "daq.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  index           1  [STACK] enum E16136
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  2  [STACK] unsigned short 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/4
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    6
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;;		_conv_raw_result
  3282 ;; This function uses a reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text11
  3286  017AD6                     __ptext11:
  3287                           	opt callstack 0
  3288  017AD6                     _get_raw_result:
  3289                           	opt callstack 24
  3290                           
  3291                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  3292                           ;stkvar	_index @ sp[(0)+-1]
  3293                           
  3294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3295                           ;incstack = 0
  3296  017AD6  0EFF               	movlw	-1
  3297  017AD8  50E3               	movf	plusw1,w,c
  3298  017ADA  0D02               	mullw	2
  3299  017ADC  50F3               	movf	243,w,c
  3300  017ADE  0F60               	addlw	low _R
  3301  017AE0  6ED9               	movwf	fsr2l,c
  3302  017AE2  6ADA               	clrf	fsr2h,c
  3303  017AE4  006F FF78  F035    	movff	postinc2,btemp
  3304  017AEA  006F FF74  F036    	movff	postdec2,btemp+1
  3305                           
  3306                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3307  017AF0  52E5               	movf	postdec1,f,c
  3308  017AF2  0012               	return		;funcret
  3309  017AF4                     __end_of_get_raw_result:
  3310                           	opt callstack 0
  3311                           
  3312 ;; *************** function ___xxtofl *****************
  3313 ;; Defined at:
  3314 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  sign            1  [STACK] unsigned char 
  3317 ;;  val             4  [STACK] long 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  arg             4  [STACK] unsigned long 
  3320 ;;  exp             1  [STACK] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  4  [STACK] unsigned char 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/4
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3334 ;;Total ram usage:        0 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    6
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_conv_raw_result
  3341 ;; This function uses a reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text12
  3345  015136                     __ptext12:
  3346                           	opt callstack 0
  3347  015136                     ___xxtofl:
  3348                           	opt callstack 0
  3349                           
  3350                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3351  015136  0E05               	movlw	5
  3352  015138  26E1               	addwf	fsr1l,f,c
  3353  01513A  0E00               	movlw	0
  3354  01513C  22E2               	addwfc	fsr1h,f,c
  3355                           
  3356                           ;stkvar	_sign @ sp[(-5)+-1]
  3357                           
  3358                           ;incstack = 0
  3359  01513E  0EFA               	movlw	-6
  3360  015140  50E3               	movf	plusw1,w,c
  3361  015142  B4D8               	btfsc	status,2,c
  3362  015144  D01D               	goto	l8224
  3363                           
  3364                           ;stkvar	_val @ sp[(-5)+-5]
  3365  015146  0EF9               	movlw	-7
  3366  015148  AEE3               	btfss	plusw1,7,c
  3367  01514A  D01A               	goto	l8224
  3368                           
  3369                           ;stkvar	_val @ sp[(-5)+-5]
  3370  01514C  0EF6               	movlw	-10
  3371  01514E  006F FF8C  F03D    	movff	plusw1,btemp+8
  3372  015154  0EF7               	movlw	-9
  3373  015156  006F FF8C  F03E    	movff	plusw1,btemp+9
  3374  01515C  0EF8               	movlw	-8
  3375  01515E  006F FF8C  F03F    	movff	plusw1,btemp+10
  3376  015164  0EF9               	movlw	-7
  3377  015166  006F FF8C  F040    	movff	plusw1,btemp+11
  3378  01516C  1E3D               	comf	(btemp+8)^0,f,c
  3379  01516E  1E3E               	comf	(btemp+9)^0,f,c
  3380  015170  1E3F               	comf	(btemp+10)^0,f,c
  3381  015172  1E40               	comf	(btemp+11)^0,f,c
  3382  015174  2A3D               	incf	(btemp+8)^0,f,c
  3383  015176  0E00               	movlw	0
  3384  015178  223E               	addwfc	(btemp+9)^0,f,c
  3385  01517A  223F               	addwfc	(btemp+10)^0,f,c
  3386  01517C  2240               	addwfc	(btemp+11)^0,f,c
  3387  01517E  D010               	goto	L2
  3388  015180                     l8224:
  3389                           
  3390                           ;stkvar	_val @ sp[(-5)+-5]
  3391  015180  0EF6               	movlw	-10
  3392  015182  006F FF8C  F03D    	movff	plusw1,btemp+8
  3393  015188  0EF7               	movlw	-9
  3394  01518A  006F FF8C  F03E    	movff	plusw1,btemp+9
  3395  015190  0EF8               	movlw	-8
  3396  015192  006F FF8C  F03F    	movff	plusw1,btemp+10
  3397  015198  0EF9               	movlw	-7
  3398  01519A  006F FF8C  F040    	movff	plusw1,btemp+11
  3399  0151A0                     L2:
  3400                           
  3401                           ;stkvar	_arg @ sp[(-5)+0]
  3402  0151A0  0EFB               	movlw	-5
  3403  0151A2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3404  0151A8  0EFC               	movlw	-4
  3405  0151AA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3406  0151B0  0EFD               	movlw	-3
  3407  0151B2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3408  0151B8  0EFE               	movlw	-2
  3409  0151BA  0060  F103  FFE3   	movff	btemp+11,plusw1
  3410                           
  3411                           ;stkvar	_val @ sp[(-5)+-5]
  3412  0151C0  0EF6               	movlw	-10
  3413  0151C2  50E3               	movf	plusw1,w,c
  3414  0151C4  E113               	bnz	l8232
  3415  0151C6  0EF7               	movlw	-9
  3416  0151C8  50E3               	movf	plusw1,w,c
  3417  0151CA  E110               	bnz	l8232
  3418  0151CC  0EF8               	movlw	-8
  3419  0151CE  50E3               	movf	plusw1,w,c
  3420  0151D0  E10D               	bnz	l8232
  3421  0151D2  0EF9               	movlw	-7
  3422  0151D4  50E3               	movf	plusw1,w,c
  3423  0151D6  A4D8               	btfss	status,2,c
  3424  0151D8  D009               	goto	l8232
  3425  0151DA  0E00               	movlw	0
  3426  0151DC  6E35               	movwf	btemp^0,c
  3427  0151DE  0E00               	movlw	0
  3428  0151E0  6E36               	movwf	(btemp+1)^0,c
  3429  0151E2  0E00               	movlw	0
  3430  0151E4  6E37               	movwf	(btemp+2)^0,c
  3431  0151E6  0E00               	movlw	0
  3432  0151E8  6E38               	movwf	(btemp+3)^0,c
  3433  0151EA  D0A2               	goto	l2606
  3434  0151EC                     l8232:
  3435  0151EC  0E96               	movlw	150
  3436  0151EE  6E40               	movwf	(btemp+11)^0,c
  3437                           
  3438                           ;stkvar	_exp @ sp[(-5)+4]
  3439  0151F0  0EFF               	movlw	-1
  3440  0151F2  0060  F103  FFE3   	movff	btemp+11,plusw1
  3441  0151F8  D00B               	goto	l8236
  3442  0151FA                     l8234:
  3443                           
  3444                           ;stkvar	_exp @ sp[(-5)+4]
  3445  0151FA  0EFF               	movlw	-1
  3446  0151FC  2AE3               	incf	plusw1,f,c
  3447                           
  3448                           ;stkvar	_arg @ sp[(-5)+0]
  3449  0151FE  90D8               	bcf	status,0,c
  3450  015200  0EFE               	movlw	-2
  3451  015202  32E3               	rrcf	plusw1,f,c
  3452  015204  0EFD               	movlw	-3
  3453  015206  32E3               	rrcf	plusw1,f,c
  3454  015208  0EFC               	movlw	-4
  3455  01520A  32E3               	rrcf	plusw1,f,c
  3456  01520C  0EFB               	movlw	-5
  3457  01520E  32E3               	rrcf	plusw1,f,c
  3458  015210                     l8236:
  3459                           
  3460                           ;stkvar	_arg @ sp[(-5)+0]
  3461  015210  50E1               	movf	fsr1l,w,c
  3462  015212  0FFB               	addlw	-5
  3463  015214  6ED9               	movwf	fsr2l,c
  3464  015216  50E2               	movf	fsr1h,w,c
  3465  015218  6EDA               	movwf	fsr2h,c
  3466  01521A  0EFF               	movlw	255
  3467  01521C  22DA               	addwfc	fsr2h,f,c
  3468  01521E  52DE               	movf	postinc2,f,c
  3469  015220  52DE               	movf	postinc2,f,c
  3470  015222  52DE               	movf	postinc2,f,c
  3471  015224  0EFE               	movlw	254
  3472  015226  14DD               	andwf	postdec2,w,c
  3473  015228  B4D8               	btfsc	status,2,c
  3474  01522A  D018               	goto	l8244
  3475  01522C  D7E6               	goto	l8234
  3476  01522E                     l8238:
  3477                           
  3478                           ;stkvar	_exp @ sp[(-5)+4]
  3479  01522E  0EFF               	movlw	-1
  3480  015230  2AE3               	incf	plusw1,f,c
  3481                           
  3482                           ;stkvar	_arg @ sp[(-5)+0]
  3483  015232  50E1               	movf	fsr1l,w,c
  3484  015234  0FFB               	addlw	-5
  3485  015236  6ED9               	movwf	fsr2l,c
  3486  015238  50E2               	movf	fsr1h,w,c
  3487  01523A  6EDA               	movwf	fsr2h,c
  3488  01523C  0EFF               	movlw	255
  3489  01523E  22DA               	addwfc	fsr2h,f,c
  3490  015240  2ADE               	incf	postinc2,f,c
  3491  015242  0E00               	movlw	0
  3492  015244  22DE               	addwfc	postinc2,f,c
  3493  015246  22DE               	addwfc	postinc2,f,c
  3494  015248  22DE               	addwfc	postinc2,f,c
  3495                           
  3496                           ;stkvar	_arg @ sp[(-5)+0]
  3497  01524A  90D8               	bcf	status,0,c
  3498  01524C  0EFE               	movlw	-2
  3499  01524E  32E3               	rrcf	plusw1,f,c
  3500  015250  0EFD               	movlw	-3
  3501  015252  32E3               	rrcf	plusw1,f,c
  3502  015254  0EFC               	movlw	-4
  3503  015256  32E3               	rrcf	plusw1,f,c
  3504  015258  0EFB               	movlw	-5
  3505  01525A  32E3               	rrcf	plusw1,f,c
  3506  01525C                     l8244:
  3507                           
  3508                           ;stkvar	_arg @ sp[(-5)+0]
  3509  01525C  50E1               	movf	fsr1l,w,c
  3510  01525E  0FFB               	addlw	-5
  3511  015260  6ED9               	movwf	fsr2l,c
  3512  015262  50E2               	movf	fsr1h,w,c
  3513  015264  6EDA               	movwf	fsr2h,c
  3514  015266  0EFF               	movlw	255
  3515  015268  22DA               	addwfc	fsr2h,f,c
  3516  01526A  52DE               	movf	postinc2,f,c
  3517  01526C  52DE               	movf	postinc2,f,c
  3518  01526E  52DE               	movf	postinc2,f,c
  3519  015270  0EFF               	movlw	255
  3520  015272  14DD               	andwf	postdec2,w,c
  3521  015274  B4D8               	btfsc	status,2,c
  3522  015276  D00C               	goto	l8248
  3523  015278  D7DA               	goto	l8238
  3524  01527A                     l8246:
  3525                           
  3526                           ;stkvar	_exp @ sp[(-5)+4]
  3527  01527A  0EFF               	movlw	-1
  3528  01527C  06E3               	decf	plusw1,f,c
  3529                           
  3530                           ;stkvar	_arg @ sp[(-5)+0]
  3531  01527E  90D8               	bcf	status,0,c
  3532  015280  0EFB               	movlw	-5
  3533  015282  36E3               	rlcf	plusw1,f,c
  3534  015284  0EFC               	movlw	-4
  3535  015286  36E3               	rlcf	plusw1,f,c
  3536  015288  0EFD               	movlw	-3
  3537  01528A  36E3               	rlcf	plusw1,f,c
  3538  01528C  0EFE               	movlw	-2
  3539  01528E  36E3               	rlcf	plusw1,f,c
  3540  015290                     l8248:
  3541                           
  3542                           ;stkvar	_arg @ sp[(-5)+0]
  3543  015290  0EFD               	movlw	-3
  3544  015292  BEE3               	btfsc	plusw1,7,c
  3545  015294  D007               	goto	u7750
  3546                           
  3547                           ;stkvar	_exp @ sp[(-5)+4]
  3548  015296  0EFF               	movlw	-1
  3549  015298  006F FF8C  F035    	movff	plusw1,btemp
  3550  01529E  0E02               	movlw	2
  3551  0152A0  6035               	cpfslt	btemp^0,c
  3552  0152A2  D7EB               	goto	l8246
  3553  0152A4                     u7750:
  3554                           
  3555                           ;stkvar	_exp @ sp[(-5)+4]
  3556  0152A4  0EFF               	movlw	-1
  3557  0152A6  B0E3               	btfsc	plusw1,0,c
  3558  0152A8  D002               	goto	l8256
  3559                           
  3560                           ;stkvar	_arg @ sp[(-5)+0]
  3561  0152AA  0EFD               	movlw	-3
  3562  0152AC  9EE3               	bcf	plusw1,7,c
  3563  0152AE                     l8256:
  3564                           
  3565                           ;stkvar	_exp @ sp[(-5)+4]
  3566  0152AE  50E1               	movf	fsr1l,w,c
  3567  0152B0  0FFF               	addlw	-1
  3568  0152B2  6ED9               	movwf	fsr2l,c
  3569  0152B4  50E2               	movf	fsr1h,w,c
  3570  0152B6  6EDA               	movwf	fsr2h,c
  3571  0152B8  0EFF               	movlw	255
  3572  0152BA  22DA               	addwfc	fsr2h,f,c
  3573  0152BC  90D8               	bcf	status,0,c
  3574  0152BE  32DF               	rrcf	indf2,f,c
  3575                           
  3576                           ;stkvar	_exp @ sp[(-5)+4]
  3577  0152C0  0EFF               	movlw	-1
  3578  0152C2  006F FF8C  F040    	movff	plusw1,btemp+11
  3579  0152C8  0060  F100  F039   	movff	btemp+11,btemp+4
  3580  0152CE  6A3A               	clrf	(btemp+5)^0,c
  3581  0152D0  6A3B               	clrf	(btemp+6)^0,c
  3582  0152D2  6A3C               	clrf	(btemp+7)^0,c
  3583  0152D4  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  3584  0152DA  6A3B               	clrf	(btemp+6)^0,c
  3585  0152DC  6A3A               	clrf	(btemp+5)^0,c
  3586  0152DE  6A39               	clrf	(btemp+4)^0,c
  3587                           
  3588                           ;stkvar	_arg @ sp[(-5)+0]
  3589  0152E0  50E1               	movf	fsr1l,w,c
  3590  0152E2  0FFB               	addlw	-5
  3591  0152E4  6ED9               	movwf	fsr2l,c
  3592  0152E6  50E2               	movf	fsr1h,w,c
  3593  0152E8  6EDA               	movwf	fsr2h,c
  3594  0152EA  0EFF               	movlw	255
  3595  0152EC  22DA               	addwfc	fsr2h,f,c
  3596  0152EE  5039               	movf	(btemp+4)^0,w,c
  3597  0152F0  12DE               	iorwf	postinc2,f,c
  3598  0152F2  503A               	movf	(btemp+5)^0,w,c
  3599  0152F4  12DE               	iorwf	postinc2,f,c
  3600  0152F6  503B               	movf	(btemp+6)^0,w,c
  3601  0152F8  12DE               	iorwf	postinc2,f,c
  3602  0152FA  503C               	movf	(btemp+7)^0,w,c
  3603  0152FC  12DE               	iorwf	postinc2,f,c
  3604                           
  3605                           ;stkvar	_sign @ sp[(-5)+-1]
  3606  0152FE  0EFA               	movlw	-6
  3607  015300  50E3               	movf	plusw1,w,c
  3608  015302  B4D8               	btfsc	status,2,c
  3609  015304  D005               	goto	l8266
  3610                           
  3611                           ;stkvar	_val @ sp[(-5)+-5]
  3612  015306  0EF9               	movlw	-7
  3613  015308  AEE3               	btfss	plusw1,7,c
  3614  01530A  D002               	goto	l8266
  3615                           
  3616                           ;stkvar	_arg @ sp[(-5)+0]
  3617  01530C  0EFE               	movlw	-2
  3618  01530E  8EE3               	bsf	plusw1,7,c
  3619  015310                     l8266:
  3620                           
  3621                           ;stkvar	_arg @ sp[(-5)+0]
  3622  015310  0EFB               	movlw	-5
  3623  015312  006F FF8C  F035    	movff	plusw1,btemp
  3624  015318  0EFC               	movlw	-4
  3625  01531A  006F FF8C  F036    	movff	plusw1,btemp+1
  3626  015320  0EFD               	movlw	-3
  3627  015322  006F FF8C  F037    	movff	plusw1,btemp+2
  3628  015328  0EFE               	movlw	-2
  3629  01532A  006F FF8C  F038    	movff	plusw1,btemp+3
  3630  015330                     l2606:
  3631                           
  3632                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  3633  015330  0EF6               	movlw	246
  3634  015332  26E1               	addwf	fsr1l,f,c
  3635  015334  0EFF               	movlw	255
  3636  015336  22E2               	addwfc	fsr1h,f,c
  3637  015338  0012               	return		;funcret
  3638  01533A                     __end_of___xxtofl:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _clear_adc_scan *****************
  3642 ;; Defined at:
  3643 ;;		line 55 in file "daq.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1  [STACK] void 
  3650 ;; Registers used:
  3651 ;;		None
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/4
  3654 ;;		On exit  : 3F/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    6
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text13
  3672  017D4A                     __ptext13:
  3673                           	opt callstack 0
  3674  017D4A                     _clear_adc_scan:
  3675                           	opt callstack 24
  3676                           
  3677                           ;daq.c: 57:  R.done = 0;
  3678                           
  3679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3680                           ;incstack = 0
  3681  017D4A  0100               	movlb	0	; () banked
  3682  017D4C  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3686  017D4E  0012               	return		;funcret
  3687  017D50                     __end_of_clear_adc_scan:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _check_help *****************
  3691 ;; Defined at:
  3692 ;;		line 40 in file "mconfig.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  flipper         1  [STACK] _Bool 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1  [STACK] void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3701 ;; Tracked objects:
  3702 ;;		On entry : 3F/2
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:   18
  3713 ;; This function calls:
  3714 ;;		_StartTimer
  3715 ;;		_TimerDone
  3716 ;;		_display_help
  3717 ;;		_display_info
  3718 ;;		_get_vterm_ptr
  3719 ;;		_help_button
  3720 ;;		_mode_lamp_bright
  3721 ;;		_mode_lamp_dim
  3722 ;;		_set_display_info
  3723 ;;		_set_temp_display_help
  3724 ;;		_set_vterm
  3725 ;;		_sprintf
  3726 ;;		_update_lcd
  3727 ;;		_vterm_dump
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text14
  3734  014F24                     __ptext14:
  3735                           	opt callstack 0
  3736  014F24                     _check_help:
  3737                           	opt callstack 12
  3738                           
  3739                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  3740                           
  3741                           ; BSR set to: 0
  3742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3743                           ;incstack = 0
  3744  014F24  EC70  F0BA         	call	_help_button	;wreg free
  3745  014F28  5035               	movf	btemp^0,w,c
  3746  014F2A  B4D8               	btfsc	status,2,c
  3747  014F2C  D0D0               	goto	l9760
  3748  014F2E  EC95  F0BE         	call	_display_info	;wreg free
  3749  014F32  0435               	decf	btemp^0,w,c
  3750  014F34  B4D8               	btfsc	status,2,c
  3751  014F36  D0CB               	goto	l9760
  3752                           
  3753                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  3754  014F38  0EDC               	movlw	220
  3755  014F3A  6EE6               	movwf	postinc1,c
  3756  014F3C  0E05               	movlw	5
  3757  014F3E  6EE6               	movwf	postinc1,c
  3758  014F40  0E0B               	movlw	11
  3759  014F42  6EE6               	movwf	postinc1,c
  3760  014F44  EC52  F0BA         	call	_StartTimer	;wreg free
  3761                           
  3762                           ;mconfig.c: 47:   if (V.debug)
  3763  014F48  0102               	movlb	2	; () banked
  3764  014F4A  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  3765                           
  3766                           ; BSR set to: 2
  3767                           ;mconfig.c: 48:    vterm_dump();
  3768  014F4C  EC21  F0AE         	call	_vterm_dump	;wreg free
  3769                           
  3770                           ;mconfig.c: 50:   set_vterm(1);
  3771  014F50  0E01               	movlw	1
  3772  014F52  6EE6               	movwf	postinc1,c
  3773  014F54  ECC4  F0BD         	call	_set_vterm	;wreg free
  3774                           
  3775                           ; BSR set to: 4
  3776                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  3777  014F58  EC95  F0BE         	call	_display_info	;wreg free
  3778  014F5C  5035               	movf	btemp^0,w,c
  3779  014F5E  6EE6               	movwf	postinc1,c
  3780  014F60  EC51  F0BE         	call	_set_temp_display_help	;wreg free
  3781                           
  3782                           ; BSR set to: 2
  3783                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  3784  014F64  0E01               	movlw	1
  3785  014F66  6EE6               	movwf	postinc1,c
  3786  014F68  EC7A  F0BD         	call	_set_display_info	;wreg free
  3787                           
  3788                           ;mconfig.c: 53:   if (flipper) {
  3789                           ;stkvar	_flipper @ sp[(0)+-1]
  3790  014F6C  0EFF               	movlw	-1
  3791  014F6E  50E3               	movf	plusw1,w,c
  3792  014F70  B4D8               	btfsc	status,2,c
  3793  014F72  D019               	goto	l9748
  3794                           
  3795                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  3796  014F74  0EC3               	movlw	low STR_14
  3797  014F76  6EE6               	movwf	postinc1,c
  3798  014F78  0EFF               	movlw	high STR_14
  3799  014F7A  6EE6               	movwf	postinc1,c
  3800  014F7C  0E2E               	movlw	low STR_16
  3801  014F7E  6EE6               	movwf	postinc1,c
  3802  014F80  0EFF               	movlw	high STR_16
  3803  014F82  6EE6               	movwf	postinc1,c
  3804  014F84  0E01               	movlw	1
  3805  014F86  6EE6               	movwf	postinc1,c
  3806  014F88  0E00               	movlw	0
  3807  014F8A  6EE6               	movwf	postinc1,c
  3808  014F8C  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  3809  014F90  0060  F0D7  FFE6   	movff	btemp,postinc1
  3810  014F96  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3811  014F9C  0E06               	movlw	6
  3812  014F9E  6EE6               	movwf	postinc1,c
  3813  014FA0  ECE7  F0B0         	call	_sprintf	;wreg free
  3814                           
  3815                           ;mconfig.c: 55:   } else {
  3816  014FA4  D018               	goto	l1551
  3817  014FA6                     l9748:
  3818                           
  3819                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  3820  014FA6  0ED9               	movlw	low STR_15
  3821  014FA8  6EE6               	movwf	postinc1,c
  3822  014FAA  0EFF               	movlw	high STR_15
  3823  014FAC  6EE6               	movwf	postinc1,c
  3824  014FAE  0E2E               	movlw	low STR_16
  3825  014FB0  6EE6               	movwf	postinc1,c
  3826  014FB2  0EFF               	movlw	high STR_16
  3827  014FB4  6EE6               	movwf	postinc1,c
  3828  014FB6  0E01               	movlw	1
  3829  014FB8  6EE6               	movwf	postinc1,c
  3830  014FBA  0E00               	movlw	0
  3831  014FBC  6EE6               	movwf	postinc1,c
  3832  014FBE  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  3833  014FC2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3834  014FC8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3835  014FCE  0E06               	movlw	6
  3836  014FD0  6EE6               	movwf	postinc1,c
  3837  014FD2  ECE7  F0B0         	call	_sprintf	;wreg free
  3838  014FD6                     l1551:
  3839                           
  3840                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  3841  014FD6  0102               	movlb	2	; () banked
  3842  014FD8  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3843  014FDA  32E8               	rrcf	wreg,f,c
  3844  014FDC  32E8               	rrcf	wreg,f,c
  3845  014FDE  0B03               	andlw	3
  3846  014FE0  0D24               	mullw	36
  3847  014FE2  0E12               	movlw	18
  3848  014FE4  26F3               	addwf	243,f,c
  3849  014FE6  0E00               	movlw	0
  3850  014FE8  22F4               	addwfc	244,f,c
  3851  014FEA  0E73               	movlw	low _T
  3852  014FEC  6E3F               	movwf	(btemp+10)^0,c
  3853  014FEE  0EFE               	movlw	high _T
  3854  014FF0  6E40               	movwf	(btemp+11)^0,c
  3855  014FF2  50F3               	movf	243,w,c
  3856  014FF4  263F               	addwf	(btemp+10)^0,f,c
  3857  014FF6  50F4               	movf	244,w,c
  3858  014FF8  2240               	addwfc	(btemp+11)^0,f,c
  3859  014FFA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3860  015000  0060  F103  FFE6   	movff	btemp+11,postinc1
  3861  015006  0ECF               	movlw	low STR_18
  3862  015008  6EE6               	movwf	postinc1,c
  3863  01500A  0EFF               	movlw	high STR_18
  3864  01500C  6EE6               	movwf	postinc1,c
  3865  01500E  0E01               	movlw	1
  3866  015010  6EE6               	movwf	postinc1,c
  3867  015012  0E01               	movlw	1
  3868  015014  6EE6               	movwf	postinc1,c
  3869  015016  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  3870  01501A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3871  015020  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3872  015026  0E06               	movlw	6
  3873  015028  6EE6               	movwf	postinc1,c
  3874  01502A  ECE7  F0B0         	call	_sprintf	;wreg free
  3875                           
  3876                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  3877  01502E  0102               	movlb	2	; () banked
  3878  015030  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3879  015032  32E8               	rrcf	wreg,f,c
  3880  015034  32E8               	rrcf	wreg,f,c
  3881  015036  0B03               	andlw	3
  3882  015038  0D24               	mullw	36
  3883  01503A  0E73               	movlw	low _T
  3884  01503C  6E3F               	movwf	(btemp+10)^0,c
  3885  01503E  0EFE               	movlw	high _T
  3886  015040  6E40               	movwf	(btemp+11)^0,c
  3887  015042  50F3               	movf	243,w,c
  3888  015044  263F               	addwf	(btemp+10)^0,f,c
  3889  015046  50F4               	movf	244,w,c
  3890  015048  2240               	addwfc	(btemp+11)^0,f,c
  3891  01504A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3892  015050  0060  F103  FFE6   	movff	btemp+11,postinc1
  3893  015056  0ECF               	movlw	low STR_18
  3894  015058  6EE6               	movwf	postinc1,c
  3895  01505A  0EFF               	movlw	high STR_18
  3896  01505C  6EE6               	movwf	postinc1,c
  3897  01505E  0E01               	movlw	1
  3898  015060  6EE6               	movwf	postinc1,c
  3899  015062  0E02               	movlw	2
  3900  015064  6EE6               	movwf	postinc1,c
  3901  015066  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  3902  01506A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3903  015070  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3904  015076  0E06               	movlw	6
  3905  015078  6EE6               	movwf	postinc1,c
  3906  01507A  ECE7  F0B0         	call	_sprintf	;wreg free
  3907                           
  3908                           ;mconfig.c: 60:   V.help_id++;
  3909  01507E  EE20  F2A9         	lfsr	2,_V+169	;volatile
  3910  015082  30DF               	rrcf	223,w,c
  3911  015084  6E40               	movwf	(btemp+11)^0,c
  3912  015086  3240               	rrcf	(btemp+11)^0,f,c
  3913  015088  3040               	rrcf	(btemp+11)^0,w,c
  3914  01508A  0B03               	andlw	3
  3915  01508C  6E40               	movwf	(btemp+11)^0,c
  3916  01508E  2A40               	incf	(btemp+11)^0,f,c
  3917  015090  3640               	rlcf	(btemp+11)^0,f,c
  3918  015092  3640               	rlcf	(btemp+11)^0,f,c
  3919  015094  3640               	rlcf	(btemp+11)^0,f,c
  3920  015096  50DF               	movf	223,w,c
  3921  015098  1840               	xorwf	(btemp+11)^0,w,c
  3922  01509A  0BE7               	andlw	-25
  3923  01509C  1840               	xorwf	(btemp+11)^0,w,c
  3924  01509E  6EDF               	movwf	223,c
  3925                           
  3926                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  3927  0150A0  0EB8               	movlw	184
  3928  0150A2  6EE6               	movwf	postinc1,c
  3929  0150A4  0E0B               	movlw	11
  3930  0150A6  6EE6               	movwf	postinc1,c
  3931  0150A8  0E09               	movlw	9
  3932  0150AA  6EE6               	movwf	postinc1,c
  3933  0150AC  EC52  F0BA         	call	_StartTimer	;wreg free
  3934                           
  3935                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  3936  0150B0  0EB8               	movlw	184
  3937  0150B2  6EE6               	movwf	postinc1,c
  3938  0150B4  0E0B               	movlw	11
  3939  0150B6  6EE6               	movwf	postinc1,c
  3940  0150B8  0E07               	movlw	7
  3941  0150BA  6EE6               	movwf	postinc1,c
  3942  0150BC  EC52  F0BA         	call	_StartTimer	;wreg free
  3943                           
  3944                           ;mconfig.c: 63:   mode_lamp_bright();
  3945  0150C0  EC60  F0BE         	call	_mode_lamp_bright	;wreg free
  3946                           
  3947                           ;mconfig.c: 64:   update_lcd(1);
  3948  0150C4  0E01               	movlw	1
  3949  0150C6  6EE6               	movwf	postinc1,c
  3950  0150C8  EC60  F0B0         	call	_update_lcd	;wreg free
  3951                           
  3952                           ;mconfig.c: 65:  } else {
  3953  0150CC  D032               	goto	l1555
  3954  0150CE                     l9760:
  3955                           
  3956                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  3957  0150CE  0E09               	movlw	9
  3958  0150D0  6EE6               	movwf	postinc1,c
  3959  0150D2  EC05  F0BD         	call	_TimerDone	;wreg free
  3960  0150D6  5035               	movf	btemp^0,w,c
  3961  0150D8  B4D8               	btfsc	status,2,c
  3962  0150DA  D02B               	goto	l1555
  3963                           
  3964                           ;mconfig.c: 67:    set_vterm(0);
  3965  0150DC  0E00               	movlw	0
  3966  0150DE  6EE6               	movwf	postinc1,c
  3967  0150E0  ECC4  F0BD         	call	_set_vterm	;wreg free
  3968                           
  3969                           ; BSR set to: 4
  3970                           ;mconfig.c: 68:    V.help = 0;
  3971  0150E4  0102               	movlb	2	; () banked
  3972  0150E6  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  3973                           
  3974                           ; BSR set to: 2
  3975                           ;mconfig.c: 69:    set_display_info(display_help());
  3976  0150E8  EC99  F0BE         	call	_display_help	;wreg free
  3977  0150EC  5035               	movf	btemp^0,w,c
  3978  0150EE  6EE6               	movwf	postinc1,c
  3979  0150F0  EC7A  F0BD         	call	_set_display_info	;wreg free
  3980                           
  3981                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  3982  0150F4  0060  FA7F  FFE6   	movff	_V+159,postinc1
  3983  0150FA  0060  FA83  FFE6   	movff	_V+160,postinc1
  3984  015100  ECF9  F0BD         	call	_mode_lamp_dim	;wreg free
  3985                           
  3986                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  3987  015104  0E0B               	movlw	11
  3988  015106  6EE6               	movwf	postinc1,c
  3989  015108  EC05  F0BD         	call	_TimerDone	;wreg free
  3990  01510C  5035               	movf	btemp^0,w,c
  3991  01510E  B4D8               	btfsc	status,2,c
  3992  015110  D010               	goto	l1555
  3993                           
  3994                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  3995  015112  0102               	movlb	2	; () banked
  3996  015114  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  3997  015116  A4D8               	btfss	status,2,c
  3998  015118  D002               	goto	u9730
  3999  01511A  0E01               	movlw	1
  4000  01511C  D001               	goto	u9740
  4001  01511E                     u9730:
  4002  01511E  0E00               	movlw	0
  4003  015120                     u9740:
  4004  015120  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  4005                           
  4006                           ; BSR set to: 2
  4007                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4008  015122  0EDC               	movlw	220
  4009  015124  6EE6               	movwf	postinc1,c
  4010  015126  0E05               	movlw	5
  4011  015128  6EE6               	movwf	postinc1,c
  4012  01512A  0E0B               	movlw	11
  4013  01512C  6EE6               	movwf	postinc1,c
  4014  01512E  EC52  F0BA         	call	_StartTimer	;wreg free
  4015  015132                     l1555:
  4016                           
  4017                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4018  015132  52E5               	movf	postdec1,f,c
  4019  015134  0012               	return		;funcret
  4020  015136                     __end_of_check_help:
  4021                           	opt callstack 0
  4022                           
  4023 ;; *************** function _vterm_dump *****************
  4024 ;; Defined at:
  4025 ;;		line 118 in file "mconfig.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1  [STACK] void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4034 ;; Tracked objects:
  4035 ;;		On entry : 3F/2
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:   17
  4046 ;; This function calls:
  4047 ;;		_WaitMs
  4048 ;;		_eaDogM_WriteStringAtPos
  4049 ;;		_get_vterm_ptr
  4050 ;;		_sprintf
  4051 ;;		_wait_lcd_done
  4052 ;; This function is called by:
  4053 ;;		_check_help
  4054 ;; This function uses a reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text15
  4058  015C42                     __ptext15:
  4059                           	opt callstack 0
  4060  015C42                     _vterm_dump:
  4061                           	opt callstack 12
  4062                           
  4063                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4064                           
  4065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4066                           ;incstack = 0
  4067  015C42  0E01               	movlw	1
  4068  015C44  6EE6               	movwf	postinc1,c
  4069  015C46  0E00               	movlw	0
  4070  015C48  6EE6               	movwf	postinc1,c
  4071  015C4A  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4072  015C4E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4073  015C54  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4074  015C5A  0E00               	movlw	0
  4075  015C5C  6EE6               	movwf	postinc1,c
  4076  015C5E  0E00               	movlw	0
  4077  015C60  6EE6               	movwf	postinc1,c
  4078  015C62  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4079  015C66  0060  F0D7  FFE6   	movff	btemp,postinc1
  4080  015C6C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4081  015C72  0E98               	movlw	low STR_20
  4082  015C74  6EE6               	movwf	postinc1,c
  4083  015C76  0EFF               	movlw	high STR_20
  4084  015C78  6EE6               	movwf	postinc1,c
  4085  015C7A  0E01               	movlw	low (_V+1)
  4086  015C7C  6EE6               	movwf	postinc1,c
  4087  015C7E  0E02               	movlw	high (_V+1)
  4088  015C80  6EE6               	movwf	postinc1,c
  4089  015C82  0E08               	movlw	8
  4090  015C84  6EE6               	movwf	postinc1,c
  4091  015C86  ECE7  F0B0         	call	_sprintf	;wreg free
  4092                           
  4093                           ;mconfig.c: 121:  wait_lcd_done();
  4094  015C8A  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4098  015C8E  0E01               	movlw	low (_V+1)
  4099  015C90  6EE6               	movwf	postinc1,c
  4100  015C92  0E02               	movlw	high (_V+1)
  4101  015C94  6EE6               	movwf	postinc1,c
  4102  015C96  0E00               	movlw	0
  4103  015C98  6EE6               	movwf	postinc1,c
  4104  015C9A  0E00               	movlw	0
  4105  015C9C  6EE6               	movwf	postinc1,c
  4106  015C9E  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4107                           
  4108                           ; BSR set to: 59
  4109                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4110  015CA2  0E01               	movlw	1
  4111  015CA4  6EE6               	movwf	postinc1,c
  4112  015CA6  0E01               	movlw	1
  4113  015CA8  6EE6               	movwf	postinc1,c
  4114  015CAA  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4115  015CAE  0060  F0D7  FFE6   	movff	btemp,postinc1
  4116  015CB4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4117  015CBA  0E00               	movlw	0
  4118  015CBC  6EE6               	movwf	postinc1,c
  4119  015CBE  0E01               	movlw	1
  4120  015CC0  6EE6               	movwf	postinc1,c
  4121  015CC2  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4122  015CC6  0060  F0D7  FFE6   	movff	btemp,postinc1
  4123  015CCC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4124  015CD2  0E98               	movlw	low STR_20
  4125  015CD4  6EE6               	movwf	postinc1,c
  4126  015CD6  0EFF               	movlw	high STR_20
  4127  015CD8  6EE6               	movwf	postinc1,c
  4128  015CDA  0E01               	movlw	low (_V+1)
  4129  015CDC  6EE6               	movwf	postinc1,c
  4130  015CDE  0E02               	movlw	high (_V+1)
  4131  015CE0  6EE6               	movwf	postinc1,c
  4132  015CE2  0E08               	movlw	8
  4133  015CE4  6EE6               	movwf	postinc1,c
  4134  015CE6  ECE7  F0B0         	call	_sprintf	;wreg free
  4135                           
  4136                           ;mconfig.c: 124:  wait_lcd_done();
  4137  015CEA  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4138                           
  4139                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4140  015CEE  0E01               	movlw	low (_V+1)
  4141  015CF0  6EE6               	movwf	postinc1,c
  4142  015CF2  0E02               	movlw	high (_V+1)
  4143  015CF4  6EE6               	movwf	postinc1,c
  4144  015CF6  0E00               	movlw	0
  4145  015CF8  6EE6               	movwf	postinc1,c
  4146  015CFA  0E01               	movlw	1
  4147  015CFC  6EE6               	movwf	postinc1,c
  4148  015CFE  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4149                           
  4150                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4151  015D02  0E01               	movlw	1
  4152  015D04  6EE6               	movwf	postinc1,c
  4153  015D06  0E02               	movlw	2
  4154  015D08  6EE6               	movwf	postinc1,c
  4155  015D0A  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4156  015D0E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4157  015D14  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4158  015D1A  0E00               	movlw	0
  4159  015D1C  6EE6               	movwf	postinc1,c
  4160  015D1E  0E02               	movlw	2
  4161  015D20  6EE6               	movwf	postinc1,c
  4162  015D22  EC5A  F0BB         	call	_get_vterm_ptr	;wreg free
  4163  015D26  0060  F0D7  FFE6   	movff	btemp,postinc1
  4164  015D2C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4165  015D32  0E98               	movlw	low STR_20
  4166  015D34  6EE6               	movwf	postinc1,c
  4167  015D36  0EFF               	movlw	high STR_20
  4168  015D38  6EE6               	movwf	postinc1,c
  4169  015D3A  0E01               	movlw	low (_V+1)
  4170  015D3C  6EE6               	movwf	postinc1,c
  4171  015D3E  0E02               	movlw	high (_V+1)
  4172  015D40  6EE6               	movwf	postinc1,c
  4173  015D42  0E08               	movlw	8
  4174  015D44  6EE6               	movwf	postinc1,c
  4175  015D46  ECE7  F0B0         	call	_sprintf	;wreg free
  4176                           
  4177                           ;mconfig.c: 127:  wait_lcd_done();
  4178  015D4A  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4182  015D4E  0E01               	movlw	low (_V+1)
  4183  015D50  6EE6               	movwf	postinc1,c
  4184  015D52  0E02               	movlw	high (_V+1)
  4185  015D54  6EE6               	movwf	postinc1,c
  4186  015D56  0E00               	movlw	0
  4187  015D58  6EE6               	movwf	postinc1,c
  4188  015D5A  0E02               	movlw	2
  4189  015D5C  6EE6               	movwf	postinc1,c
  4190  015D5E  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4191                           
  4192                           ; BSR set to: 59
  4193                           ;mconfig.c: 129:  WaitMs(3000);
  4194  015D62  0EB8               	movlw	184
  4195  015D64  6EE6               	movwf	postinc1,c
  4196  015D66  0E0B               	movlw	11
  4197  015D68  6EE6               	movwf	postinc1,c
  4198  015D6A  ECA8  F0BA         	call	_WaitMs	;wreg free
  4199                           
  4200                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4201  015D6E  0012               	return		;funcret
  4202  015D70                     __end_of_vterm_dump:
  4203                           	opt callstack 0
  4204                           
  4205 ;; *************** function _sprintf *****************
  4206 ;; Defined at:
  4207 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  s               2  [STACK] PTR unsigned char 
  4210 ;;		 -> D.lcd(216), D(218), V(189), 
  4211 ;;  fmt             2  [STACK] PTR const unsigned char 
  4212 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4213 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4214 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4215 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4216 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4217 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  f               6  [STACK] struct _IO_FILE
  4220 ;;  ap              2  [STACK] PTR void [1]
  4221 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4222 ;;  ret             2    0        int 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2  [STACK] int 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/4
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:   14
  4239 ;; This function calls:
  4240 ;;		_vfprintf
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;;		_check_help
  4244 ;;		_vterm_dump
  4245 ;; This function uses a reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text16
  4249  0161CE                     __ptext16:
  4250                           	opt callstack 0
  4251  0161CE                     _sprintf:
  4252                           	opt callstack 0
  4253                           
  4254                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4255  0161CE  0E08               	movlw	8
  4256  0161D0  26E1               	addwf	fsr1l,f,c
  4257  0161D2  0E00               	movlw	0
  4258  0161D4  22E2               	addwfc	fsr1h,f,c
  4259                           
  4260                           ;incstack = 0
  4261  0161D6  0EFE               	movlw	254
  4262  0161D8  6E3F               	movwf	(btemp+10)^0,c
  4263  0161DA  0EFF               	movlw	255
  4264  0161DC  6E40               	movwf	(btemp+11)^0,c
  4265                           
  4266                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4267  0161DE  0EF5               	movlw	245
  4268  0161E0  24E1               	addwf	fsr1l,w,c
  4269  0161E2  6E3D               	movwf	(btemp+8)^0,c
  4270  0161E4  0EFF               	movlw	255
  4271  0161E6  20E2               	addwfc	fsr1h,w,c
  4272  0161E8  6E3E               	movwf	(btemp+9)^0,c
  4273  0161EA  503F               	movf	(btemp+10)^0,w,c
  4274  0161EC  263D               	addwf	(btemp+8)^0,f,c
  4275  0161EE  5040               	movf	(btemp+11)^0,w,c
  4276  0161F0  223E               	addwfc	(btemp+9)^0,f,c
  4277                           
  4278                           ;stkvar	_ap @ sp[(-8)+6]
  4279  0161F2  0EFF               	movlw	-1
  4280  0161F4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4281  0161FA  0EFE               	movlw	-2
  4282  0161FC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4283                           
  4284                           ;stkvar	_s @ sp[(-8)+-3]
  4285  016202  0EF5               	movlw	-11
  4286  016204  006F FF8C  F03F    	movff	plusw1,btemp+10
  4287  01620A  0EF6               	movlw	-10
  4288  01620C  006F FF8C  F040    	movff	plusw1,btemp+11
  4289                           
  4290                           ;stkvar	_f @ sp[(-8)+0]
  4291  016212  0EF9               	movlw	-7
  4292  016214  0060  F103  FFE3   	movff	btemp+11,plusw1
  4293  01621A  0EF8               	movlw	-8
  4294  01621C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4295                           
  4296                           ;stkvar	_f @ sp[(-8)+0]
  4297  016222  0EFA               	movlw	250
  4298  016224  24E1               	addwf	fsr1l,w,c
  4299  016226  6ED9               	movwf	fsr2l,c
  4300  016228  0EFF               	movlw	255
  4301  01622A  20E2               	addwfc	fsr1h,w,c
  4302  01622C  6EDA               	movwf	fsr2h,c
  4303  01622E  0E00               	movlw	0
  4304  016230  6EDE               	movwf	postinc2,c
  4305  016232  0E00               	movlw	0
  4306  016234  6EDD               	movwf	postdec2,c
  4307                           
  4308                           ;stkvar	_f @ sp[(-8)+0]
  4309  016236  0EFC               	movlw	252
  4310  016238  24E1               	addwf	fsr1l,w,c
  4311  01623A  6ED9               	movwf	fsr2l,c
  4312  01623C  0EFF               	movlw	255
  4313  01623E  20E2               	addwfc	fsr1h,w,c
  4314  016240  6EDA               	movwf	fsr2h,c
  4315  016242  0E00               	movlw	0
  4316  016244  6EDE               	movwf	postinc2,c
  4317  016246  0E00               	movlw	0
  4318  016248  6EDD               	movwf	postdec2,c
  4319                           
  4320                           ;stkvar	_ap @ sp[(-8)+6]
  4321  01624A  0EFE               	movlw	254
  4322  01624C  24E1               	addwf	fsr1l,w,c
  4323  01624E  6E35               	movwf	btemp^0,c
  4324  016250  0EFF               	movlw	255
  4325  016252  20E2               	addwfc	fsr1h,w,c
  4326  016254  6E36               	movwf	(btemp+1)^0,c
  4327  016256  0060  F0D7  FFE6   	movff	btemp,postinc1
  4328  01625C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4329                           
  4330                           ;stkvar	_fmt @ sp[(-10)+-5]
  4331  016262  0EF1               	movlw	-15
  4332  016264  006F FF8F FFE6     	movff	plusw1,postinc1
  4333  01626A  006F FF8F FFE6     	movff	plusw1,postinc1
  4334                           
  4335                           ;stkvar	_f @ sp[(-12)+0]
  4336  016270  0EF4               	movlw	244
  4337  016272  24E1               	addwf	fsr1l,w,c
  4338  016274  6E35               	movwf	btemp^0,c
  4339  016276  0EFF               	movlw	255
  4340  016278  20E2               	addwfc	fsr1h,w,c
  4341  01627A  6E36               	movwf	(btemp+1)^0,c
  4342  01627C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4343  016282  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4344  016288  ECC4  F0B3         	call	_vfprintf	;wreg free
  4345                           
  4346                           ;stkvar	_f @ sp[(-8)+0]
  4347  01628C  0EFA               	movlw	250
  4348  01628E  24E1               	addwf	fsr1l,w,c
  4349  016290  6ED9               	movwf	fsr2l,c
  4350  016292  0EFF               	movlw	255
  4351  016294  20E2               	addwfc	fsr1h,w,c
  4352  016296  6EDA               	movwf	fsr2h,c
  4353  016298  006F FF78  F03F    	movff	postinc2,btemp+10
  4354  01629E  006F FF74  F040    	movff	postdec2,btemp+11
  4355                           
  4356                           ;stkvar	_s @ sp[(-8)+-3]
  4357  0162A4  0EF5               	movlw	-11
  4358  0162A6  006F FF8C  F03D    	movff	plusw1,btemp+8
  4359  0162AC  0EF6               	movlw	-10
  4360  0162AE  006F FF8C  F03E    	movff	plusw1,btemp+9
  4361  0162B4  503F               	movf	(btemp+10)^0,w,c
  4362  0162B6  243D               	addwf	(btemp+8)^0,w,c
  4363  0162B8  6ED9               	movwf	fsr2l,c
  4364  0162BA  5040               	movf	(btemp+11)^0,w,c
  4365  0162BC  203E               	addwfc	(btemp+9)^0,w,c
  4366  0162BE  6EDA               	movwf	fsr2h,c
  4367  0162C0  0E00               	movlw	0
  4368  0162C2  6EDF               	movwf	indf2,c
  4369                           
  4370                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  4371  0162C4  0EF8               	movlw	248
  4372  0162C6  26E1               	addwf	fsr1l,f,c
  4373  0162C8  0EFF               	movlw	255
  4374  0162CA  22E2               	addwfc	fsr1h,f,c
  4375  0162CC  52E5               	movf	postdec1,f,c
  4376  0162CE  50E7               	movf	indf1,w,c
  4377  0162D0  5EE1               	subwf	fsr1l,f,c
  4378  0162D2  0E00               	movlw	0
  4379  0162D4  5AE2               	subwfb	fsr1h,f,c
  4380  0162D6  0012               	return		;funcret
  4381  0162D8                     __end_of_sprintf:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function _get_vterm_ptr *****************
  4385 ;; Defined at:
  4386 ;;		line 113 in file "mconfig.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  line            1  [STACK] unsigned char 
  4389 ;;  vterm           1  [STACK] unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2  [STACK] PTR unsigned char 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/4
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    6
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;;		_check_help
  4413 ;;		_vterm_dump
  4414 ;; This function uses a reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text17
  4418  0176B4                     __ptext17:
  4419                           	opt callstack 0
  4420  0176B4                     _get_vterm_ptr:
  4421                           	opt callstack 24
  4422                           
  4423                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  4424                           ;stkvar	_vterm @ sp[(0)+-2]
  4425                           
  4426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4427                           ;incstack = 0
  4428  0176B4  0EFE               	movlw	-2
  4429  0176B6  50E3               	movf	plusw1,w,c
  4430  0176B8  0B03               	andlw	3
  4431  0176BA  0D36               	mullw	54
  4432  0176BC  0E00               	movlw	low _D
  4433  0176BE  6E35               	movwf	btemp^0,c
  4434  0176C0  0E04               	movlw	high _D
  4435  0176C2  6E36               	movwf	(btemp+1)^0,c
  4436  0176C4  50F3               	movf	243,w,c
  4437  0176C6  2635               	addwf	btemp^0,f,c
  4438  0176C8  50F4               	movf	244,w,c
  4439  0176CA  2236               	addwfc	(btemp+1)^0,f,c
  4440                           
  4441                           ;stkvar	_line @ sp[(0)+-1]
  4442  0176CC  0EFF               	movlw	-1
  4443  0176CE  50E3               	movf	plusw1,w,c
  4444  0176D0  0B03               	andlw	3
  4445  0176D2  0D12               	mullw	18
  4446  0176D4  50F3               	movf	243,w,c
  4447  0176D6  2635               	addwf	btemp^0,f,c
  4448  0176D8  50F4               	movf	244,w,c
  4449  0176DA  2236               	addwfc	(btemp+1)^0,f,c
  4450                           
  4451                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4452  0176DC  52E5               	movf	postdec1,f,c
  4453  0176DE  52E5               	movf	postdec1,f,c
  4454  0176E0  0012               	return		;funcret
  4455  0176E2                     __end_of_get_vterm_ptr:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function _WaitMs *****************
  4459 ;; Defined at:
  4460 ;;		line 32 in file "timers.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  numMilliseco    2  [STACK] const unsigned short 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1  [STACK] void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/2
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    7
  4481 ;; This function calls:
  4482 ;;		_StartTimer
  4483 ;;		_TimerDone
  4484 ;; This function is called by:
  4485 ;;		_main
  4486 ;;		_vterm_dump
  4487 ;; This function uses a reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text18
  4491  017550                     __ptext18:
  4492                           	opt callstack 0
  4493  017550                     _WaitMs:
  4494                           	opt callstack 21
  4495                           
  4496                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  4497                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4498                           
  4499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4500                           ;incstack = 0
  4501  017550  0EFE               	movlw	-2
  4502  017552  006F FF8F FFE6     	movff	plusw1,postinc1
  4503  017558  006F FF8F FFE6     	movff	plusw1,postinc1
  4504  01755E  0E00               	movlw	0
  4505  017560  6EE6               	movwf	postinc1,c
  4506  017562  EC52  F0BA         	call	_StartTimer	;wreg free
  4507                           
  4508                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4509  017566  D005               	goto	l7720
  4510  017568                     l1481:
  4511                           
  4512                           ;timers.c: 36:   __nop();
  4513  017568  F000               	nop	
  4514                           
  4515                           ;timers.c: 37:   __nop();
  4516  01756A  F000               	nop	
  4517                           
  4518                           ;timers.c: 38:   __nop();
  4519  01756C  F000               	nop	
  4520                           
  4521                           ;timers.c: 39:   __nop();
  4522  01756E  F000               	nop	
  4523  017570  0004               	clrwdt		;# 
  4524  017572                     l7720:
  4525                           
  4526                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4527  017572  0E00               	movlw	0
  4528  017574  6EE6               	movwf	postinc1,c
  4529  017576  EC05  F0BD         	call	_TimerDone	;wreg free
  4530  01757A  5035               	movf	btemp^0,w,c
  4531  01757C  B4D8               	btfsc	status,2,c
  4532  01757E  D7F4               	goto	l1481
  4533                           
  4534                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4535  017580  52E5               	movf	postdec1,f,c
  4536  017582  52E5               	movf	postdec1,f,c
  4537  017584  0012               	return		;funcret
  4538  017586                     __end_of_WaitMs:
  4539                           	opt callstack 0
  4540                           
  4541 ;; *************** function _update_lcd *****************
  4542 ;; Defined at:
  4543 ;;		line 82 in file "mconfig.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  vterm           1  [STACK] unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1  [STACK] unsigned char 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/4
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:   17
  4564 ;; This function calls:
  4565 ;;		_eaDogM_WriteStringAtPos
  4566 ;;		_wait_lcd_done
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;;		_check_help
  4570 ;; This function uses a reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text19
  4574  0160C0                     __ptext19:
  4575                           	opt callstack 0
  4576  0160C0                     _update_lcd:
  4577                           	opt callstack 13
  4578                           
  4579                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  4580                           ;stkvar	_vterm @ sp[(0)+-1]
  4581                           
  4582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4583                           ;incstack = 0
  4584  0160C0  0EFF               	movlw	-1
  4585  0160C2  006F FF8C  F035    	movff	plusw1,btemp
  4586  0160C8  0E03               	movlw	3
  4587  0160CA  1635               	andwf	btemp^0,f,c
  4588  0160CC  0EFF               	movlw	-1
  4589  0160CE  0060  F0D7  FFE3   	movff	btemp,plusw1
  4590                           
  4591                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  4592  0160D4  0104               	movlb	4	; () banked
  4593  0160D6  A1D8               	btfss	(_D+216)& (0+255),0,b
  4594  0160D8  D004               	goto	l9632
  4595                           
  4596                           ; BSR set to: 4
  4597                           ;stkvar	_vterm @ sp[(0)+-1]
  4598  0160DA  0EFF               	movlw	-1
  4599  0160DC  50E3               	movf	plusw1,w,c
  4600  0160DE  B4D8               	btfsc	status,2,c
  4601  0160E0  D074               	goto	l1559
  4602  0160E2                     l9632:
  4603                           
  4604                           ; BSR set to: 4
  4605                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  4606                           ;stkvar	_vterm @ sp[(0)+-1]
  4607  0160E2  0EFF               	movlw	-1
  4608  0160E4  50E3               	movf	plusw1,w,c
  4609  0160E6  0D36               	mullw	54
  4610  0160E8  0E10               	movlw	low (_D+16)
  4611  0160EA  24F3               	addwf	243,w,c
  4612  0160EC  6ED9               	movwf	fsr2l,c
  4613  0160EE  0E04               	movlw	high (_D+16)
  4614  0160F0  20F4               	addwfc	prodh,w,c
  4615  0160F2  6EDA               	movwf	fsr2h,c
  4616  0160F4  0E00               	movlw	0
  4617  0160F6  6EDF               	movwf	indf2,c
  4618                           
  4619                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  4620                           ;stkvar	_vterm @ sp[(0)+-1]
  4621  0160F8  0EFF               	movlw	-1
  4622  0160FA  50E3               	movf	plusw1,w,c
  4623  0160FC  0D36               	mullw	54
  4624  0160FE  0E22               	movlw	low (_D+34)
  4625  016100  24F3               	addwf	243,w,c
  4626  016102  6ED9               	movwf	fsr2l,c
  4627  016104  0E04               	movlw	high (_D+34)
  4628  016106  20F4               	addwfc	prodh,w,c
  4629  016108  6EDA               	movwf	fsr2h,c
  4630  01610A  0E00               	movlw	0
  4631  01610C  6EDF               	movwf	indf2,c
  4632                           
  4633                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  4634                           ;stkvar	_vterm @ sp[(0)+-1]
  4635  01610E  0EFF               	movlw	-1
  4636  016110  50E3               	movf	plusw1,w,c
  4637  016112  0D36               	mullw	54
  4638  016114  0E34               	movlw	low (_D+52)
  4639  016116  24F3               	addwf	243,w,c
  4640  016118  6ED9               	movwf	fsr2l,c
  4641  01611A  0E04               	movlw	high (_D+52)
  4642  01611C  20F4               	addwfc	prodh,w,c
  4643  01611E  6EDA               	movwf	fsr2h,c
  4644  016120  0E00               	movlw	0
  4645  016122  6EDF               	movwf	indf2,c
  4646                           
  4647                           ; BSR set to: 4
  4648                           ;mconfig.c: 92:  wait_lcd_done();
  4649  016124  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  4653                           ;stkvar	_vterm @ sp[(0)+-1]
  4654  016128  0EFF               	movlw	-1
  4655  01612A  50E3               	movf	plusw1,w,c
  4656  01612C  0D36               	mullw	54
  4657  01612E  0E00               	movlw	low _D
  4658  016130  6E3F               	movwf	(btemp+10)^0,c
  4659  016132  0E04               	movlw	high _D
  4660  016134  6E40               	movwf	(btemp+11)^0,c
  4661  016136  50F3               	movf	243,w,c
  4662  016138  263F               	addwf	(btemp+10)^0,f,c
  4663  01613A  50F4               	movf	244,w,c
  4664  01613C  2240               	addwfc	(btemp+11)^0,f,c
  4665  01613E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4666  016144  0060  F103  FFE6   	movff	btemp+11,postinc1
  4667  01614A  0E00               	movlw	0
  4668  01614C  6EE6               	movwf	postinc1,c
  4669  01614E  0E00               	movlw	0
  4670  016150  6EE6               	movwf	postinc1,c
  4671  016152  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4672                           
  4673                           ; BSR set to: 59
  4674                           ;mconfig.c: 94:  wait_lcd_done();
  4675  016156  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  4679                           ;stkvar	_vterm @ sp[(0)+-1]
  4680  01615A  0EFF               	movlw	-1
  4681  01615C  50E3               	movf	plusw1,w,c
  4682  01615E  0D36               	mullw	54
  4683  016160  0E00               	movlw	low _D
  4684  016162  6E3F               	movwf	(btemp+10)^0,c
  4685  016164  0E04               	movlw	high _D
  4686  016166  6E40               	movwf	(btemp+11)^0,c
  4687  016168  0E12               	movlw	18
  4688  01616A  263F               	addwf	(btemp+10)^0,f,c
  4689  01616C  0E00               	movlw	0
  4690  01616E  2240               	addwfc	(btemp+11)^0,f,c
  4691  016170  50F3               	movf	243,w,c
  4692  016172  263F               	addwf	(btemp+10)^0,f,c
  4693  016174  50F4               	movf	244,w,c
  4694  016176  2240               	addwfc	(btemp+11)^0,f,c
  4695  016178  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4696  01617E  0060  F103  FFE6   	movff	btemp+11,postinc1
  4697  016184  0E00               	movlw	0
  4698  016186  6EE6               	movwf	postinc1,c
  4699  016188  0E01               	movlw	1
  4700  01618A  6EE6               	movwf	postinc1,c
  4701  01618C  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4702                           
  4703                           ; BSR set to: 59
  4704                           ;mconfig.c: 96:  wait_lcd_done();
  4705  016190  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  4709                           ;stkvar	_vterm @ sp[(0)+-1]
  4710  016194  0EFF               	movlw	-1
  4711  016196  50E3               	movf	plusw1,w,c
  4712  016198  0D36               	mullw	54
  4713  01619A  0E00               	movlw	low _D
  4714  01619C  6E3F               	movwf	(btemp+10)^0,c
  4715  01619E  0E04               	movlw	high _D
  4716  0161A0  6E40               	movwf	(btemp+11)^0,c
  4717  0161A2  0E24               	movlw	36
  4718  0161A4  263F               	addwf	(btemp+10)^0,f,c
  4719  0161A6  0E00               	movlw	0
  4720  0161A8  2240               	addwfc	(btemp+11)^0,f,c
  4721  0161AA  50F3               	movf	243,w,c
  4722  0161AC  263F               	addwf	(btemp+10)^0,f,c
  4723  0161AE  50F4               	movf	244,w,c
  4724  0161B0  2240               	addwfc	(btemp+11)^0,f,c
  4725  0161B2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4726  0161B8  0060  F103  FFE6   	movff	btemp+11,postinc1
  4727  0161BE  0E00               	movlw	0
  4728  0161C0  6EE6               	movwf	postinc1,c
  4729  0161C2  0E02               	movlw	2
  4730  0161C4  6EE6               	movwf	postinc1,c
  4731  0161C6  ECC3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4732  0161CA                     l1559:
  4733                           
  4734                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4735  0161CA  52E5               	movf	postdec1,f,c
  4736  0161CC  0012               	return		;funcret
  4737  0161CE                     __end_of_update_lcd:
  4738                           	opt callstack 0
  4739                           
  4740 ;; *************** function _eaDogM_WriteStringAtPos *****************
  4741 ;; Defined at:
  4742 ;;		line 252 in file "eadog.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  r               1  [STACK] const unsigned char 
  4745 ;;  c               1  [STACK] const unsigned char 
  4746 ;;  strPtr          2  [STACK] PTR unsigned char 
  4747 ;;		 -> D.lcd(216), D(218), V(189), 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1  [STACK] void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4754 ;; Tracked objects:
  4755 ;;		On entry : 3F/0
  4756 ;;		On exit  : 3F/3B
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   16
  4766 ;; This function calls:
  4767 ;;		_eaDogM_WriteString
  4768 ;;		_send_lcd_cmd_dma
  4769 ;; This function is called by:
  4770 ;;		_update_lcd
  4771 ;;		_vterm_dump
  4772 ;; This function uses a reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text20
  4776  017586                     __ptext20:
  4777                           	opt callstack 0
  4778  017586                     _eaDogM_WriteStringAtPos:
  4779                           	opt callstack 13
  4780                           
  4781                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4782                           ;stkvar	_c @ sp[(0)+-2]
  4783                           
  4784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4785                           ;incstack = 0
  4786  017586  0EFE               	movlw	-2
  4787  017588  006F FF8C  F040    	movff	plusw1,btemp+11
  4788                           
  4789                           ;stkvar	_r @ sp[(0)+-1]
  4790  01758E  0EFF               	movlw	-1
  4791  017590  50E3               	movf	plusw1,w,c
  4792  017592  0D10               	mullw	16
  4793  017594  50F3               	movf	243,w,c
  4794  017596  2440               	addwf	(btemp+11)^0,w,c
  4795  017598  0F80               	addlw	128
  4796  01759A  6EE6               	movwf	postinc1,c
  4797  01759C  ECCA  F0B8         	call	_send_lcd_cmd_dma	;wreg free
  4798                           
  4799                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  4800                           ;stkvar	_strPtr @ sp[(0)+-4]
  4801  0175A0  0EFC               	movlw	-4
  4802  0175A2  006F FF8F FFE6     	movff	plusw1,postinc1
  4803  0175A8  006F FF8F FFE6     	movff	plusw1,postinc1
  4804  0175AE  EC18  F0B4         	call	_eaDogM_WriteString	;wreg free
  4805                           
  4806                           ; BSR set to: 59
  4807                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  4808  0175B2  52E5               	movf	postdec1,f,c
  4809  0175B4  52E5               	movf	postdec1,f,c
  4810  0175B6  52E5               	movf	postdec1,f,c
  4811  0175B8  52E5               	movf	postdec1,f,c
  4812  0175BA  0012               	return		;funcret
  4813  0175BC                     __end_of_eaDogM_WriteStringAtPos:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function _send_lcd_cmd_dma *****************
  4817 ;; Defined at:
  4818 ;;		line 205 in file "eadog.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  strPtr          1  [STACK] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1  [STACK] void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/3D
  4829 ;;		On exit  : 3F/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:   15
  4839 ;; This function calls:
  4840 ;;		_printf
  4841 ;;		_ringBufS_flush
  4842 ;;		_start_lcd
  4843 ;;		_wait_lcd_done
  4844 ;;		_wait_lcd_set
  4845 ;; This function is called by:
  4846 ;;		_eaDogM_WriteCommand
  4847 ;;		_eaDogM_WriteStringAtPos
  4848 ;; This function uses a reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text21
  4852  017194                     __ptext21:
  4853                           	opt callstack 0
  4854  017194                     _send_lcd_cmd_dma:
  4855                           	opt callstack 13
  4856                           
  4857                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  4858                           
  4859                           ; BSR set to: 59
  4860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4861                           ;incstack = 0
  4862  017194  ECA8  F0BE         	call	_wait_lcd_set	;wreg free
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  4866  017198  0E00               	movlw	0
  4867  01719A  6EE6               	movwf	postinc1,c
  4868  01719C  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  4869  0171A2  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  4870  0171A8  EC53  F0B5         	call	_ringBufS_flush	;wreg free
  4871  0171AC  92BC               	bcf	188,1,c	;volatile
  4872  0171AE  94BC               	bcf	188,2,c	;volatile
  4873                           
  4874                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  4875  0171B0  013B               	movlb	59	; () banked
  4876  0171B2  9FFC               	bcf	252,7,b	;volatile
  4877                           
  4878                           ; BSR set to: 59
  4879                           ;eadog.c: 214:  DMA1SSZ = 1;
  4880  0171B4  0E00               	movlw	0
  4881  0171B6  6FF8               	movwf	248,b	;volatile
  4882  0171B8  0E01               	movlw	1
  4883  0171BA  6FF7               	movwf	247,b	;volatile
  4884                           
  4885                           ; BSR set to: 59
  4886                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  4887  0171BC  8FFC               	bsf	252,7,b	;volatile
  4888                           
  4889                           ; BSR set to: 59
  4890                           ;eadog.c: 216:  printf("%c", strPtr);
  4891                           ;stkvar	_strPtr @ sp[(0)+-1]
  4892  0171BE  0EFF               	movlw	-1
  4893  0171C0  50E3               	movf	plusw1,w,c
  4894  0171C2  6EE6               	movwf	postinc1,c
  4895  0171C4  0E00               	movlw	0
  4896  0171C6  6EE6               	movwf	postinc1,c
  4897  0171C8  0EF9               	movlw	low STR_12
  4898  0171CA  6EE6               	movwf	postinc1,c
  4899  0171CC  0EFF               	movlw	high STR_12
  4900  0171CE  6EE6               	movwf	postinc1,c
  4901  0171D0  0E04               	movlw	4
  4902  0171D2  6EE6               	movwf	postinc1,c
  4903  0171D4  ECE1  F0B7         	call	_printf	;wreg free
  4904                           
  4905                           ;eadog.c: 217:  start_lcd();
  4906  0171D8  ECAB  F0BE         	call	_start_lcd	;wreg free
  4907                           
  4908                           ; BSR set to: 59
  4909                           ;eadog.c: 218:  wait_lcd_done();
  4910  0171DC  ECB6  F0BD         	call	_wait_lcd_done	;wreg free
  4911                           
  4912                           ; BSR set to: 0
  4913  0171E0  82BC               	bsf	188,1,c	;volatile
  4914                           
  4915                           ; BSR set to: 0
  4916                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4917  0171E2  52E5               	movf	postdec1,f,c
  4918  0171E4  0012               	return		;funcret
  4919  0171E6                     __end_of_send_lcd_cmd_dma:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function _wait_lcd_done *****************
  4923 ;; Defined at:
  4924 ;;		line 141 in file "eadog.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1  [STACK] void 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/2
  4935 ;;		On exit  : 3F/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;Total ram usage:        0 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    7
  4945 ;; This function calls:
  4946 ;;		_wdtdelay
  4947 ;; This function is called by:
  4948 ;;		_send_lcd_cmd_dma
  4949 ;;		_update_lcd
  4950 ;;		_vterm_dump
  4951 ;; This function uses a reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text22
  4955  017B6C                     __ptext22:
  4956                           	opt callstack 0
  4957  017B6C                     _wait_lcd_done:
  4958                           	opt callstack 22
  4959                           
  4960                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  4961                           
  4962                           ; BSR set to: 0
  4963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4964                           ;incstack = 0
  4965  017B6C  0100               	movlb	0	; () banked
  4966  017B6E  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  4967  017B70  D7FD               	goto	_wait_lcd_done
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;eadog.c: 144:  wdtdelay(50);
  4971  017B72  0E32               	movlw	50
  4972  017B74  6EE6               	movwf	postinc1,c
  4973  017B76  0E00               	movlw	0
  4974  017B78  6EE6               	movwf	postinc1,c
  4975  017B7A  0E00               	movlw	0
  4976  017B7C  6EE6               	movwf	postinc1,c
  4977  017B7E  0E00               	movlw	0
  4978  017B80  6EE6               	movwf	postinc1,c
  4979  017B82  EC70  F0B8         	call	_wdtdelay	;wreg free
  4980                           
  4981                           ; BSR set to: 0
  4982                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4983  017B86  0012               	return		;funcret
  4984  017B88                     __end_of_wait_lcd_done:
  4985                           	opt callstack 0
  4986                           
  4987 ;; *************** function _wdtdelay *****************
  4988 ;; Defined at:
  4989 ;;		line 22 in file "eadog.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  delay           4  [STACK] const unsigned long 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1  [STACK] void 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 3F/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5007 ;;Total ram usage:        0 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    6
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_init_display
  5014 ;;		_send_lcd_cmd
  5015 ;;		_send_lcd_cmd_long
  5016 ;;		_wait_lcd_done
  5017 ;; This function uses a reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text23
  5021  0170E0                     __ptext23:
  5022                           	opt callstack 0
  5023  0170E0                     _wdtdelay:
  5024                           	opt callstack 22
  5025                           
  5026                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5027                           
  5028                           ; BSR set to: 0
  5029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5030                           ;incstack = 0
  5031  0170E0  0100               	movlb	0	; () banked
  5032  0170E2  6BAE               	clrf	wdtdelay@dcount& (0+255),b
  5033  0170E4  6BAF               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5034  0170E6  6BB0               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5035  0170E8  6BB1               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5036  0170EA                     l1326:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;eadog.c: 27:   __nop();
  5040  0170EA  F000               	nop	
  5041  0170EC  0004               	clrwdt		;# 
  5042                           
  5043                           ;eadog.c: 29:  };
  5044  0170EE  0E01               	movlw	1
  5045  0170F0  0100               	movlb	0	; () banked
  5046  0170F2  27AE               	addwf	wdtdelay@dcount& (0+255),f,b
  5047  0170F4  0E00               	movlw	0
  5048  0170F6  23AF               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5049  0170F8  23B0               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5050  0170FA  23B1               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;stkvar	_delay @ sp[(0)+-4]
  5054  0170FC  0EFC               	movlw	-4
  5055  0170FE  006F FF8C  F035    	movff	plusw1,btemp
  5056  017104  51AE               	movf	wdtdelay@dcount& (0+255),w,b
  5057  017106  5C35               	subwf	btemp^0,w,c
  5058  017108  0EFD               	movlw	-3
  5059  01710A  006F FF8C  F035    	movff	plusw1,btemp
  5060  017110  51AF               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5061  017112  5835               	subwfb	btemp^0,w,c
  5062  017114  0EFE               	movlw	-2
  5063  017116  006F FF8C  F035    	movff	plusw1,btemp
  5064  01711C  51B0               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5065  01711E  5835               	subwfb	btemp^0,w,c
  5066  017120  0EFF               	movlw	-1
  5067  017122  006F FF8C  F035    	movff	plusw1,btemp
  5068  017128  51B1               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5069  01712A  5835               	subwfb	btemp^0,w,c
  5070  01712C  B0D8               	btfsc	status,0,c
  5071  01712E  D7DD               	goto	l1326
  5072                           
  5073                           ; BSR set to: 0
  5074                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5075  017130  52E5               	movf	postdec1,f,c
  5076  017132  52E5               	movf	postdec1,f,c
  5077  017134  52E5               	movf	postdec1,f,c
  5078  017136  52E5               	movf	postdec1,f,c
  5079  017138  0012               	return		;funcret
  5080  01713A                     __end_of_wdtdelay:
  5081                           	opt callstack 0
  5082                           
  5083 ;; *************** function _eaDogM_WriteString *****************
  5084 ;; Defined at:
  5085 ;;		line 184 in file "eadog.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  strPtr          2  [STACK] PTR unsigned char 
  5088 ;;		 -> D.lcd(216), D(218), V(189), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1  [STACK] void 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5095 ;; Tracked objects:
  5096 ;;		On entry : 3F/0
  5097 ;;		On exit  : 3F/3B
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:   15
  5107 ;; This function calls:
  5108 ;;		_printf
  5109 ;;		_ringBufS_flush
  5110 ;;		_start_lcd
  5111 ;;		_strlen
  5112 ;;		_wait_lcd_set
  5113 ;; This function is called by:
  5114 ;;		_eaDogM_WriteStringAtPos
  5115 ;; This function uses a reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text24
  5119  016830                     __ptext24:
  5120                           	opt callstack 0
  5121  016830                     _eaDogM_WriteString:
  5122                           	opt callstack 13
  5123                           
  5124                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5125                           
  5126                           ; BSR set to: 0
  5127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5128                           ;incstack = 0
  5129  016830  ECA8  F0BE         	call	_wait_lcd_set	;wreg free
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5133  016834  0E00               	movlw	0
  5134  016836  6EE6               	movwf	postinc1,c
  5135  016838  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5136  01683E  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5137  016844  EC53  F0B5         	call	_ringBufS_flush	;wreg free
  5138  016848  94BC               	bcf	188,2,c	;volatile
  5139                           
  5140                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5141                           ;stkvar	_strPtr @ sp[(0)+-2]
  5142  01684A  0EFE               	movlw	-2
  5143  01684C  006F FF8F FFE6     	movff	plusw1,postinc1
  5144  016852  006F FF8F FFE6     	movff	plusw1,postinc1
  5145  016858  EC6B  F0B4         	call	_strlen	;wreg free
  5146  01685C  5036               	movf	(btemp+1)^0,w,c
  5147  01685E  E104               	bnz	u9640
  5148  016860  0E41               	movlw	65
  5149  016862  5C35               	subwf	btemp^0,w,c
  5150  016864  A0D8               	btfss	status,0,c
  5151  016866  D010               	goto	l9598
  5152  016868                     u9640:
  5153                           
  5154                           ;stkvar	_strPtr @ sp[(0)+-2]
  5155  016868  0EFE               	movlw	-2
  5156  01686A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5157  016870  0EFF               	movlw	-1
  5158  016872  006F FF8C  F040    	movff	plusw1,btemp+11
  5159  016878  0E40               	movlw	64
  5160  01687A  243F               	addwf	(btemp+10)^0,w,c
  5161  01687C  6ED9               	movwf	fsr2l,c
  5162  01687E  0E00               	movlw	0
  5163  016880  2040               	addwfc	(btemp+11)^0,w,c
  5164  016882  6EDA               	movwf	fsr2h,c
  5165  016884  0E00               	movlw	0
  5166  016886  6EDF               	movwf	indf2,c
  5167  016888                     l9598:
  5168                           
  5169                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5170  016888  013B               	movlb	59	; () banked
  5171  01688A  9FFC               	bcf	252,7,b	;volatile
  5172                           
  5173                           ; BSR set to: 59
  5174                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5175                           ;stkvar	_strPtr @ sp[(0)+-2]
  5176  01688C  0EFE               	movlw	-2
  5177  01688E  006F FF8F FFE6     	movff	plusw1,postinc1
  5178  016894  006F FF8F FFE6     	movff	plusw1,postinc1
  5179  01689A  EC6B  F0B4         	call	_strlen	;wreg free
  5180  01689E  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5181  0168A4  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5182                           
  5183                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5184  0168AA  013B               	movlb	59	; () banked
  5185  0168AC  8FFC               	bsf	252,7,b	;volatile
  5186                           
  5187                           ; BSR set to: 59
  5188                           ;eadog.c: 195:  printf("%s", strPtr);
  5189                           ;stkvar	_strPtr @ sp[(0)+-2]
  5190  0168AE  0EFE               	movlw	-2
  5191  0168B0  006F FF8F FFE6     	movff	plusw1,postinc1
  5192  0168B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5193  0168BC  0EFC               	movlw	low STR_11
  5194  0168BE  6EE6               	movwf	postinc1,c
  5195  0168C0  0EFF               	movlw	high STR_11
  5196  0168C2  6EE6               	movwf	postinc1,c
  5197  0168C4  0E04               	movlw	4
  5198  0168C6  6EE6               	movwf	postinc1,c
  5199  0168C8  ECE1  F0B7         	call	_printf	;wreg free
  5200                           
  5201                           ;eadog.c: 196:  start_lcd();
  5202  0168CC  ECAB  F0BE         	call	_start_lcd	;wreg free
  5203                           
  5204                           ; BSR set to: 59
  5205                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5206  0168D0  52E5               	movf	postdec1,f,c
  5207  0168D2  52E5               	movf	postdec1,f,c
  5208  0168D4  0012               	return		;funcret
  5209  0168D6                     __end_of_eaDogM_WriteString:
  5210                           	opt callstack 0
  5211                           
  5212 ;; *************** function _wait_lcd_set *****************
  5213 ;; Defined at:
  5214 ;;		line 131 in file "eadog.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1  [STACK] void 
  5221 ;; Registers used:
  5222 ;;		None
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/3D
  5225 ;;		On exit  : 3F/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    6
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_eaDogM_WriteString
  5239 ;;		_send_lcd_cmd_dma
  5240 ;; This function uses a reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text25
  5244  017D50                     __ptext25:
  5245                           	opt callstack 0
  5246  017D50                     _wait_lcd_set:
  5247                           	opt callstack 21
  5248                           
  5249                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5250                           
  5251                           ; BSR set to: 59
  5252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5253                           ;incstack = 0
  5254  017D50  0100               	movlb	0	; () banked
  5255  017D52  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5259  017D54  0012               	return		;funcret
  5260  017D56                     __end_of_wait_lcd_set:
  5261                           	opt callstack 0
  5262                           
  5263 ;; *************** function _start_lcd *****************
  5264 ;; Defined at:
  5265 ;;		line 126 in file "eadog.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1  [STACK] void 
  5272 ;; Registers used:
  5273 ;;		None
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/3B
  5276 ;;		On exit  : 3F/3B
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    6
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_eaDogM_WriteString
  5290 ;;		_send_lcd_cmd_dma
  5291 ;; This function uses a reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text26
  5295  017D56                     __ptext26:
  5296                           	opt callstack 0
  5297  017D56                     _start_lcd:
  5298                           	opt callstack 21
  5299                           
  5300                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5301                           
  5302                           ; BSR set to: 0
  5303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5304                           ;incstack = 0
  5305  017D56  013B               	movlb	59	; () banked
  5306  017D58  8DFC               	bsf	252,6,b	;volatile
  5307                           
  5308                           ; BSR set to: 59
  5309                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5310  017D5A  0012               	return		;funcret
  5311  017D5C                     __end_of_start_lcd:
  5312                           	opt callstack 0
  5313                           
  5314 ;; *************** function _ringBufS_flush *****************
  5315 ;; Defined at:
  5316 ;;		line 76 in file "ringbufs.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5319 ;;		 -> ring_buf1(67), 
  5320 ;;  clearBuffer     1  [STACK] const char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1  [STACK] void 
  5325 ;; Registers used:
  5326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5327 ;; Tracked objects:
  5328 ;;		On entry : 3F/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    7
  5339 ;; This function calls:
  5340 ;;		_memset
  5341 ;; This function is called by:
  5342 ;;		_eaDogM_WriteString
  5343 ;;		_send_lcd_cmd_dma
  5344 ;; This function uses a reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text27
  5348  016AA6                     __ptext27:
  5349                           	opt callstack 0
  5350  016AA6                     _ringBufS_flush:
  5351                           	opt callstack 20
  5352                           
  5353                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5354                           ;stkvar	__this @ sp[(0)+-2]
  5355                           
  5356                           ; BSR set to: 59
  5357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5358                           ;incstack = 0
  5359  016AA6  0EFE               	movlw	-2
  5360  016AA8  006F FF8C  F03F    	movff	plusw1,btemp+10
  5361  016AAE  0EFF               	movlw	-1
  5362  016AB0  006F FF8C  F040    	movff	plusw1,btemp+11
  5363  016AB6  0E42               	movlw	66
  5364  016AB8  243F               	addwf	(btemp+10)^0,w,c
  5365  016ABA  6ED9               	movwf	fsr2l,c
  5366  016ABC  0E00               	movlw	0
  5367  016ABE  2040               	addwfc	(btemp+11)^0,w,c
  5368  016AC0  6EDA               	movwf	fsr2h,c
  5369  016AC2  0E00               	movlw	0
  5370  016AC4  6EDF               	movwf	indf2,c
  5371                           
  5372                           ;ringbufs.c: 79:  _this->head = 0;
  5373                           ;stkvar	__this @ sp[(0)+-2]
  5374  016AC6  0EFE               	movlw	-2
  5375  016AC8  006F FF8C  F03F    	movff	plusw1,btemp+10
  5376  016ACE  0EFF               	movlw	-1
  5377  016AD0  006F FF8C  F040    	movff	plusw1,btemp+11
  5378  016AD6  0E40               	movlw	64
  5379  016AD8  243F               	addwf	(btemp+10)^0,w,c
  5380  016ADA  6ED9               	movwf	fsr2l,c
  5381  016ADC  0E00               	movlw	0
  5382  016ADE  2040               	addwfc	(btemp+11)^0,w,c
  5383  016AE0  6EDA               	movwf	fsr2h,c
  5384  016AE2  0E00               	movlw	0
  5385  016AE4  6EDF               	movwf	indf2,c
  5386                           
  5387                           ;ringbufs.c: 80:  _this->tail = 0;
  5388                           ;stkvar	__this @ sp[(0)+-2]
  5389  016AE6  0EFE               	movlw	-2
  5390  016AE8  006F FF8C  F03F    	movff	plusw1,btemp+10
  5391  016AEE  0EFF               	movlw	-1
  5392  016AF0  006F FF8C  F040    	movff	plusw1,btemp+11
  5393  016AF6  0E41               	movlw	65
  5394  016AF8  243F               	addwf	(btemp+10)^0,w,c
  5395  016AFA  6ED9               	movwf	fsr2l,c
  5396  016AFC  0E00               	movlw	0
  5397  016AFE  2040               	addwfc	(btemp+11)^0,w,c
  5398  016B00  6EDA               	movwf	fsr2h,c
  5399  016B02  0E00               	movlw	0
  5400  016B04  6EDF               	movwf	indf2,c
  5401                           
  5402                           ;ringbufs.c: 81:  if (clearBuffer) {
  5403                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5404  016B06  0EFD               	movlw	-3
  5405  016B08  50E3               	movf	plusw1,w,c
  5406  016B0A  B4D8               	btfsc	status,2,c
  5407  016B0C  D011               	goto	l1466
  5408                           
  5409                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5410  016B0E  0E40               	movlw	64
  5411  016B10  6EE6               	movwf	postinc1,c
  5412  016B12  0E00               	movlw	0
  5413  016B14  6EE6               	movwf	postinc1,c
  5414  016B16  0E00               	movlw	0
  5415  016B18  6EE6               	movwf	postinc1,c
  5416  016B1A  0E00               	movlw	0
  5417  016B1C  6EE6               	movwf	postinc1,c
  5418                           
  5419                           ;stkvar	__this @ sp[(-4)+-2]
  5420  016B1E  0EFA               	movlw	-6
  5421  016B20  006F FF8F FFE6     	movff	plusw1,postinc1
  5422  016B26  006F FF8F FFE6     	movff	plusw1,postinc1
  5423  016B2C  EC23  F0A1         	call	_memset	;wreg free
  5424  016B30                     l1466:
  5425                           
  5426                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5427  016B30  52E5               	movf	postdec1,f,c
  5428  016B32  52E5               	movf	postdec1,f,c
  5429  016B34  52E5               	movf	postdec1,f,c
  5430  016B36  0012               	return		;funcret
  5431  016B38                     __end_of_ringBufS_flush:
  5432                           	opt callstack 0
  5433                           
  5434 ;; *************** function _memset *****************
  5435 ;; Defined at:
  5436 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  dest            2  [STACK] PTR void 
  5439 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5440 ;;  c               2  [STACK] int 
  5441 ;;  n               2  [STACK] unsigned int 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  s               2  [STACK] PTR unsigned char 
  5444 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5445 ;;  k               2  [STACK] unsigned int 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2  [STACK] PTR void 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5459 ;;Total ram usage:        0 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    6
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_ringBufS_init
  5466 ;;		_ringBufS_flush
  5467 ;; This function uses a reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text28
  5471  014246                     __ptext28:
  5472                           	opt callstack 0
  5473  014246                     _memset:
  5474                           	opt callstack 0
  5475                           
  5476                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5477  014246  52E6               	movf	postinc1,f,c
  5478  014248  52E6               	movf	postinc1,f,c
  5479  01424A  52E6               	movf	postinc1,f,c
  5480  01424C  52E6               	movf	postinc1,f,c
  5481                           
  5482                           ;stkvar	_dest @ sp[(-4)+-2]
  5483                           
  5484                           ;incstack = 0
  5485  01424E  0EFA               	movlw	-6
  5486  014250  006F FF8C  F03F    	movff	plusw1,btemp+10
  5487  014256  0EFB               	movlw	-5
  5488  014258  006F FF8C  F040    	movff	plusw1,btemp+11
  5489                           
  5490                           ;stkvar	_s @ sp[(-4)+0]
  5491  01425E  0EFD               	movlw	-3
  5492  014260  0060  F103  FFE3   	movff	btemp+11,plusw1
  5493  014266  0EFC               	movlw	-4
  5494  014268  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5495                           
  5496                           ;stkvar	_n @ sp[(-4)+-6]
  5497  01426E  0EF6               	movlw	-10
  5498  014270  006F FF8C  F035    	movff	plusw1,btemp
  5499  014276  0EF7               	movlw	-9
  5500  014278  50E3               	movf	plusw1,w,c
  5501  01427A  1035               	iorwf	btemp^0,w,c
  5502  01427C  B4D8               	btfsc	status,2,c
  5503  01427E  D154               	goto	u9610
  5504                           
  5505                           ;stkvar	_c @ sp[(-4)+-4]
  5506                           ;stkvar	_s @ sp[(-4)+0]
  5507  014280  0EFC               	movlw	-4
  5508  014282  006F FF8F FFD9     	movff	plusw1,fsr2l
  5509  014288  0EFD               	movlw	-3
  5510  01428A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5511  014290  0EF8               	movlw	-8
  5512  014292  006F FF8F FFDF     	movff	plusw1,indf2
  5513                           
  5514                           ;stkvar	_c @ sp[(-4)+-4]
  5515                           ;stkvar	_n @ sp[(-4)+-6]
  5516                           ;stkvar	_s @ sp[(-4)+0]
  5517  014298  0EFC               	movlw	-4
  5518  01429A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5519  0142A0  0EFD               	movlw	-3
  5520  0142A2  006F FF8C  F040    	movff	plusw1,btemp+11
  5521  0142A8  0EF6               	movlw	-10
  5522  0142AA  50E3               	movf	plusw1,w,c
  5523  0142AC  263F               	addwf	(btemp+10)^0,f,c
  5524  0142AE  0EF7               	movlw	-9
  5525  0142B0  50E3               	movf	plusw1,w,c
  5526  0142B2  2240               	addwfc	(btemp+11)^0,f,c
  5527  0142B4  0EFF               	movlw	255
  5528  0142B6  243F               	addwf	(btemp+10)^0,w,c
  5529  0142B8  6ED9               	movwf	fsr2l,c
  5530  0142BA  0EFF               	movlw	255
  5531  0142BC  2040               	addwfc	(btemp+11)^0,w,c
  5532  0142BE  6EDA               	movwf	fsr2h,c
  5533  0142C0  0EF8               	movlw	-8
  5534  0142C2  006F FF8F FFDF     	movff	plusw1,indf2
  5535                           
  5536                           ;stkvar	_n @ sp[(-4)+-6]
  5537  0142C8  0EF7               	movlw	-9
  5538  0142CA  50E3               	movf	plusw1,w,c
  5539  0142CC  E108               	bnz	l9514
  5540  0142CE  0EF6               	movlw	-10
  5541  0142D0  006F FF8C  F035    	movff	plusw1,btemp
  5542  0142D6  0E03               	movlw	3
  5543  0142D8  5E35               	subwf	btemp^0,f,c
  5544  0142DA  A0D8               	btfss	status,0,c
  5545  0142DC  D125               	goto	u9610
  5546  0142DE                     l9514:
  5547                           
  5548                           ;stkvar	_c @ sp[(-4)+-4]
  5549                           ;stkvar	_s @ sp[(-4)+0]
  5550  0142DE  0EFC               	movlw	-4
  5551  0142E0  006F FF8C  F03F    	movff	plusw1,btemp+10
  5552  0142E6  0EFD               	movlw	-3
  5553  0142E8  006F FF8C  F040    	movff	plusw1,btemp+11
  5554  0142EE  0E01               	movlw	1
  5555  0142F0  243F               	addwf	(btemp+10)^0,w,c
  5556  0142F2  6ED9               	movwf	fsr2l,c
  5557  0142F4  0E00               	movlw	0
  5558  0142F6  2040               	addwfc	(btemp+11)^0,w,c
  5559  0142F8  6EDA               	movwf	fsr2h,c
  5560  0142FA  0EF8               	movlw	-8
  5561  0142FC  006F FF8F FFDF     	movff	plusw1,indf2
  5562                           
  5563                           ;stkvar	_c @ sp[(-4)+-4]
  5564                           ;stkvar	_s @ sp[(-4)+0]
  5565  014302  0EFC               	movlw	-4
  5566  014304  006F FF8C  F03F    	movff	plusw1,btemp+10
  5567  01430A  0EFD               	movlw	-3
  5568  01430C  006F FF8C  F040    	movff	plusw1,btemp+11
  5569  014312  0E02               	movlw	2
  5570  014314  243F               	addwf	(btemp+10)^0,w,c
  5571  014316  6ED9               	movwf	fsr2l,c
  5572  014318  0E00               	movlw	0
  5573  01431A  2040               	addwfc	(btemp+11)^0,w,c
  5574  01431C  6EDA               	movwf	fsr2h,c
  5575  01431E  0EF8               	movlw	-8
  5576  014320  006F FF8F FFDF     	movff	plusw1,indf2
  5577                           
  5578                           ;stkvar	_c @ sp[(-4)+-4]
  5579                           ;stkvar	_n @ sp[(-4)+-6]
  5580                           ;stkvar	_s @ sp[(-4)+0]
  5581  014326  0EFC               	movlw	-4
  5582  014328  006F FF8C  F03F    	movff	plusw1,btemp+10
  5583  01432E  0EFD               	movlw	-3
  5584  014330  006F FF8C  F040    	movff	plusw1,btemp+11
  5585  014336  0EF6               	movlw	-10
  5586  014338  50E3               	movf	plusw1,w,c
  5587  01433A  263F               	addwf	(btemp+10)^0,f,c
  5588  01433C  0EF7               	movlw	-9
  5589  01433E  50E3               	movf	plusw1,w,c
  5590  014340  2240               	addwfc	(btemp+11)^0,f,c
  5591  014342  0EFE               	movlw	254
  5592  014344  243F               	addwf	(btemp+10)^0,w,c
  5593  014346  6ED9               	movwf	fsr2l,c
  5594  014348  0EFF               	movlw	255
  5595  01434A  2040               	addwfc	(btemp+11)^0,w,c
  5596  01434C  6EDA               	movwf	fsr2h,c
  5597  01434E  0EF8               	movlw	-8
  5598  014350  006F FF8F FFDF     	movff	plusw1,indf2
  5599                           
  5600                           ;stkvar	_c @ sp[(-4)+-4]
  5601                           ;stkvar	_n @ sp[(-4)+-6]
  5602                           ;stkvar	_s @ sp[(-4)+0]
  5603  014356  0EFC               	movlw	-4
  5604  014358  006F FF8C  F03F    	movff	plusw1,btemp+10
  5605  01435E  0EFD               	movlw	-3
  5606  014360  006F FF8C  F040    	movff	plusw1,btemp+11
  5607  014366  0EF6               	movlw	-10
  5608  014368  50E3               	movf	plusw1,w,c
  5609  01436A  263F               	addwf	(btemp+10)^0,f,c
  5610  01436C  0EF7               	movlw	-9
  5611  01436E  50E3               	movf	plusw1,w,c
  5612  014370  2240               	addwfc	(btemp+11)^0,f,c
  5613  014372  0EFD               	movlw	253
  5614  014374  243F               	addwf	(btemp+10)^0,w,c
  5615  014376  6ED9               	movwf	fsr2l,c
  5616  014378  0EFF               	movlw	255
  5617  01437A  2040               	addwfc	(btemp+11)^0,w,c
  5618  01437C  6EDA               	movwf	fsr2h,c
  5619  01437E  0EF8               	movlw	-8
  5620  014380  006F FF8F FFDF     	movff	plusw1,indf2
  5621                           
  5622                           ;stkvar	_n @ sp[(-4)+-6]
  5623  014386  0EF7               	movlw	-9
  5624  014388  50E3               	movf	plusw1,w,c
  5625  01438A  E108               	bnz	l9520
  5626  01438C  0EF6               	movlw	-10
  5627  01438E  006F FF8C  F035    	movff	plusw1,btemp
  5628  014394  0E07               	movlw	7
  5629  014396  5E35               	subwf	btemp^0,f,c
  5630  014398  A0D8               	btfss	status,0,c
  5631  01439A  D0C6               	goto	u9610
  5632  01439C                     l9520:
  5633                           
  5634                           ;stkvar	_c @ sp[(-4)+-4]
  5635                           ;stkvar	_s @ sp[(-4)+0]
  5636  01439C  0EFC               	movlw	-4
  5637  01439E  006F FF8C  F03F    	movff	plusw1,btemp+10
  5638  0143A4  0EFD               	movlw	-3
  5639  0143A6  006F FF8C  F040    	movff	plusw1,btemp+11
  5640  0143AC  0E03               	movlw	3
  5641  0143AE  243F               	addwf	(btemp+10)^0,w,c
  5642  0143B0  6ED9               	movwf	fsr2l,c
  5643  0143B2  0E00               	movlw	0
  5644  0143B4  2040               	addwfc	(btemp+11)^0,w,c
  5645  0143B6  6EDA               	movwf	fsr2h,c
  5646  0143B8  0EF8               	movlw	-8
  5647  0143BA  006F FF8F FFDF     	movff	plusw1,indf2
  5648                           
  5649                           ;stkvar	_c @ sp[(-4)+-4]
  5650                           ;stkvar	_n @ sp[(-4)+-6]
  5651                           ;stkvar	_s @ sp[(-4)+0]
  5652  0143C0  0EFC               	movlw	-4
  5653  0143C2  006F FF8C  F03F    	movff	plusw1,btemp+10
  5654  0143C8  0EFD               	movlw	-3
  5655  0143CA  006F FF8C  F040    	movff	plusw1,btemp+11
  5656  0143D0  0EF6               	movlw	-10
  5657  0143D2  50E3               	movf	plusw1,w,c
  5658  0143D4  263F               	addwf	(btemp+10)^0,f,c
  5659  0143D6  0EF7               	movlw	-9
  5660  0143D8  50E3               	movf	plusw1,w,c
  5661  0143DA  2240               	addwfc	(btemp+11)^0,f,c
  5662  0143DC  0EFC               	movlw	252
  5663  0143DE  243F               	addwf	(btemp+10)^0,w,c
  5664  0143E0  6ED9               	movwf	fsr2l,c
  5665  0143E2  0EFF               	movlw	255
  5666  0143E4  2040               	addwfc	(btemp+11)^0,w,c
  5667  0143E6  6EDA               	movwf	fsr2h,c
  5668  0143E8  0EF8               	movlw	-8
  5669  0143EA  006F FF8F FFDF     	movff	plusw1,indf2
  5670                           
  5671                           ;stkvar	_n @ sp[(-4)+-6]
  5672  0143F0  0EF7               	movlw	-9
  5673  0143F2  50E3               	movf	plusw1,w,c
  5674  0143F4  E108               	bnz	l9526
  5675  0143F6  0EF6               	movlw	-10
  5676  0143F8  006F FF8C  F035    	movff	plusw1,btemp
  5677  0143FE  0E09               	movlw	9
  5678  014400  5E35               	subwf	btemp^0,f,c
  5679  014402  A0D8               	btfss	status,0,c
  5680  014404  D091               	goto	u9610
  5681  014406                     l9526:
  5682                           
  5683                           ;stkvar	_s @ sp[(-4)+0]
  5684  014406  0EFC               	movlw	-4
  5685  014408  006F FF8C  F03F    	movff	plusw1,btemp+10
  5686  01440E  1E3F               	comf	(btemp+10)^0,f,c
  5687  014410  0EFD               	movlw	-3
  5688  014412  006F FF8C  F040    	movff	plusw1,btemp+11
  5689  014418  1E40               	comf	(btemp+11)^0,f,c
  5690  01441A  2A3F               	incf	(btemp+10)^0,f,c
  5691  01441C  B4D8               	btfsc	status,2,c
  5692  01441E  2A40               	incf	(btemp+11)^0,f,c
  5693  014420  0E03               	movlw	3
  5694  014422  163F               	andwf	(btemp+10)^0,f,c
  5695  014424  0E00               	movlw	0
  5696  014426  1640               	andwf	(btemp+11)^0,f,c
  5697                           
  5698                           ;stkvar	_k @ sp[(-4)+2]
  5699  014428  0EFE               	movlw	-2
  5700  01442A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5701  014430  0EFF               	movlw	-1
  5702  014432  0060  F103  FFE3   	movff	btemp+11,plusw1
  5703                           
  5704                           ;stkvar	_k @ sp[(-4)+2]
  5705                           ;stkvar	_s @ sp[(-4)+0]
  5706  014438  0EFC               	movlw	-4
  5707  01443A  50E3               	movf	plusw1,w,c
  5708  01443C  6E35               	movwf	btemp^0,c
  5709  01443E  0EFE               	movlw	-2
  5710  014440  50E3               	movf	plusw1,w,c
  5711  014442  2635               	addwf	btemp^0,f,c
  5712  014444  0EFC               	movlw	-4
  5713  014446  0060  F0D7  FFE3   	movff	btemp,plusw1
  5714  01444C  0EFD               	movlw	-3
  5715  01444E  50E3               	movf	plusw1,w,c
  5716  014450  6E35               	movwf	btemp^0,c
  5717  014452  0EFF               	movlw	-1
  5718  014454  50E3               	movf	plusw1,w,c
  5719  014456  2235               	addwfc	btemp^0,f,c
  5720  014458  0EFD               	movlw	-3
  5721  01445A  0060  F0D7  FFE3   	movff	btemp,plusw1
  5722                           
  5723                           ;stkvar	_k @ sp[(-4)+2]
  5724                           ;stkvar	_n @ sp[(-4)+-6]
  5725  014460  0EF6               	movlw	-10
  5726  014462  50E3               	movf	plusw1,w,c
  5727  014464  6E35               	movwf	btemp^0,c
  5728  014466  0EFE               	movlw	-2
  5729  014468  50E3               	movf	plusw1,w,c
  5730  01446A  5E35               	subwf	btemp^0,f,c
  5731  01446C  0EF6               	movlw	-10
  5732  01446E  0060  F0D7  FFE3   	movff	btemp,plusw1
  5733  014474  0EF7               	movlw	-9
  5734  014476  50E3               	movf	plusw1,w,c
  5735  014478  6E35               	movwf	btemp^0,c
  5736  01447A  0EFF               	movlw	-1
  5737  01447C  50E3               	movf	plusw1,w,c
  5738  01447E  5A35               	subwfb	btemp^0,f,c
  5739  014480  0EF7               	movlw	-9
  5740  014482  0060  F0D7  FFE3   	movff	btemp,plusw1
  5741  014488  0EFC               	movlw	252
  5742  01448A  6E3F               	movwf	(btemp+10)^0,c
  5743  01448C  0EFF               	movlw	255
  5744  01448E  6E40               	movwf	(btemp+11)^0,c
  5745                           
  5746                           ;stkvar	_n @ sp[(-4)+-6]
  5747  014490  0EF6               	movlw	-10
  5748  014492  006F FF8C  F035    	movff	plusw1,btemp
  5749  014498  503F               	movf	(btemp+10)^0,w,c
  5750  01449A  1635               	andwf	btemp^0,f,c
  5751  01449C  0EF6               	movlw	-10
  5752  01449E  0060  F0D7  FFE3   	movff	btemp,plusw1
  5753  0144A4  0EF7               	movlw	-9
  5754  0144A6  006F FF8C  F035    	movff	plusw1,btemp
  5755  0144AC  5040               	movf	(btemp+11)^0,w,c
  5756  0144AE  1635               	andwf	btemp^0,f,c
  5757  0144B0  0EF7               	movlw	-9
  5758  0144B2  D02E               	goto	L3
  5759  0144B4                     l9534:
  5760                           
  5761                           ;stkvar	_c @ sp[(-4)+-4]
  5762                           ;stkvar	_s @ sp[(-4)+0]
  5763  0144B4  0EFC               	movlw	-4
  5764  0144B6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5765  0144BC  0EFD               	movlw	-3
  5766  0144BE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5767  0144C4  0EF8               	movlw	-8
  5768  0144C6  006F FF8F FFDF     	movff	plusw1,indf2
  5769                           
  5770                           ;stkvar	_n @ sp[(-4)+-6]
  5771  0144CC  0EF6               	movlw	-10
  5772  0144CE  006F FF8C  F035    	movff	plusw1,btemp
  5773  0144D4  0E01               	movlw	1
  5774  0144D6  5E35               	subwf	btemp^0,f,c
  5775  0144D8  0EF6               	movlw	-10
  5776  0144DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  5777  0144E0  0EF7               	movlw	-9
  5778  0144E2  006F FF8C  F035    	movff	plusw1,btemp
  5779  0144E8  0E00               	movlw	0
  5780  0144EA  5A35               	subwfb	btemp^0,f,c
  5781  0144EC  0EF7               	movlw	-9
  5782  0144EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  5783                           
  5784                           ;stkvar	_s @ sp[(-4)+0]
  5785  0144F4  0EFC               	movlw	-4
  5786  0144F6  50E3               	movf	plusw1,w,c
  5787  0144F8  0F01               	addlw	1
  5788  0144FA  6E35               	movwf	btemp^0,c
  5789  0144FC  0EFC               	movlw	-4
  5790  0144FE  0060  F0D7  FFE3   	movff	btemp,plusw1
  5791  014504  6A35               	clrf	btemp^0,c
  5792  014506  0EFD               	movlw	-3
  5793  014508  50E3               	movf	plusw1,w,c
  5794  01450A  2035               	addwfc	btemp^0,w,c
  5795  01450C  6E35               	movwf	btemp^0,c
  5796  01450E  0EFD               	movlw	-3
  5797  014510                     L3:
  5798  014510  0060  F0D7  FFE3   	movff	btemp,plusw1
  5799                           
  5800                           ;stkvar	_n @ sp[(-4)+-6]
  5801  014516  0EF6               	movlw	-10
  5802  014518  006F FF8C  F035    	movff	plusw1,btemp
  5803  01451E  0EF7               	movlw	-9
  5804  014520  50E3               	movf	plusw1,w,c
  5805  014522  1035               	iorwf	btemp^0,w,c
  5806  014524  A4D8               	btfss	status,2,c
  5807  014526  D7C6               	goto	l9534
  5808  014528                     u9610:
  5809                           
  5810                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5811  014528  0EF6               	movlw	246
  5812  01452A  26E1               	addwf	fsr1l,f,c
  5813  01452C  0EFF               	movlw	255
  5814  01452E  22E2               	addwfc	fsr1h,f,c
  5815  014530  0012               	return		;funcret
  5816  014532                     __end_of_memset:
  5817                           	opt callstack 0
  5818                           
  5819 ;; *************** function _printf *****************
  5820 ;; Defined at:
  5821 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  fmt             2  [STACK] PTR const unsigned char 
  5824 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  ap              2  [STACK] PTR void [1]
  5827 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5828 ;;  ret             2    0        int 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2  [STACK] int 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5833 ;; Tracked objects:
  5834 ;;		On entry : 3F/3B
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   14
  5845 ;; This function calls:
  5846 ;;		_vfprintf
  5847 ;; This function is called by:
  5848 ;;		_eaDogM_WriteString
  5849 ;;		_send_lcd_cmd_dma
  5850 ;; This function uses a reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text29
  5854  016FC2                     __ptext29:
  5855                           	opt callstack 0
  5856  016FC2                     _printf:
  5857                           	opt callstack 0
  5858                           
  5859                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5860  016FC2  52E6               	movf	postinc1,f,c
  5861  016FC4  52E6               	movf	postinc1,f,c
  5862                           
  5863                           ;stkvar	?_printf @ sp[(-2)+-3]
  5864                           
  5865                           ;incstack = 0
  5866  016FC6  0EFB               	movlw	251
  5867  016FC8  24E1               	addwf	fsr1l,w,c
  5868  016FCA  6E3F               	movwf	(btemp+10)^0,c
  5869  016FCC  0EFF               	movlw	255
  5870  016FCE  20E2               	addwfc	fsr1h,w,c
  5871  016FD0  6E40               	movwf	(btemp+11)^0,c
  5872                           
  5873                           ;stkvar	_ap @ sp[(-2)+0]
  5874  016FD2  0EFF               	movlw	-1
  5875  016FD4  0060  F103  FFE3   	movff	btemp+11,plusw1
  5876  016FDA  0EFE               	movlw	-2
  5877  016FDC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5878                           
  5879                           ;stkvar	_ap @ sp[(-2)+0]
  5880  016FE2  0EFE               	movlw	254
  5881  016FE4  24E1               	addwf	fsr1l,w,c
  5882  016FE6  6E35               	movwf	btemp^0,c
  5883  016FE8  0EFF               	movlw	255
  5884  016FEA  20E2               	addwfc	fsr1h,w,c
  5885  016FEC  6E36               	movwf	(btemp+1)^0,c
  5886  016FEE  0060  F0D7  FFE6   	movff	btemp,postinc1
  5887  016FF4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5888                           
  5889                           ;stkvar	_fmt @ sp[(-4)+-3]
  5890  016FFA  0EF9               	movlw	-7
  5891  016FFC  006F FF8F FFE6     	movff	plusw1,postinc1
  5892  017002  006F FF8F FFE6     	movff	plusw1,postinc1
  5893  017008  0E00               	movlw	0
  5894  01700A  6EE6               	movwf	postinc1,c
  5895  01700C  0E00               	movlw	0
  5896  01700E  6EE6               	movwf	postinc1,c
  5897  017010  ECC4  F0B3         	call	_vfprintf	;wreg free
  5898                           
  5899                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  5900  017014  52E5               	movf	postdec1,f,c
  5901  017016  52E5               	movf	postdec1,f,c
  5902  017018  52E5               	movf	postdec1,f,c
  5903  01701A  50E7               	movf	indf1,w,c
  5904  01701C  5EE1               	subwf	fsr1l,f,c
  5905  01701E  0E00               	movlw	0
  5906  017020  5AE2               	subwfb	fsr1h,f,c
  5907  017022  0012               	return		;funcret
  5908  017024                     __end_of_printf:
  5909                           	opt callstack 0
  5910                           
  5911 ;; *************** function _vfprintf *****************
  5912 ;; Defined at:
  5913 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5916 ;;		 -> f(6), NULL(0), 
  5917 ;;  fmt             2  [STACK] PTR const unsigned char 
  5918 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  5919 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  5920 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  5921 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  5922 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  5923 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  5924 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  5925 ;;  ap              2  [STACK] PTR PTR void 
  5926 ;;		 -> ap(2), ap(2), 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  cfmt            2  [STACK] PTR unsigned char 
  5929 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  5930 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  5931 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  5932 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  5933 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  5934 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  5935 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  2  [STACK] int 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/4
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5949 ;;Total ram usage:        0 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:   13
  5952 ;; This function calls:
  5953 ;;		_vfpfcnvrt
  5954 ;; This function is called by:
  5955 ;;		_sprintf
  5956 ;;		_printf
  5957 ;; This function uses a reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text30
  5961  016788                     __ptext30:
  5962                           	opt callstack 0
  5963  016788                     _vfprintf:
  5964                           	opt callstack 0
  5965                           
  5966                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5967  016788  52E6               	movf	postinc1,f,c
  5968  01678A  52E6               	movf	postinc1,f,c
  5969                           
  5970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5971                           ;stkvar	_fmt @ sp[(-2)+-4]
  5972                           
  5973                           ;incstack = 0
  5974  01678C  0EFA               	movlw	-6
  5975  01678E  006F FF8C  F03F    	movff	plusw1,btemp+10
  5976  016794  0EFB               	movlw	-5
  5977  016796  006F FF8C  F040    	movff	plusw1,btemp+11
  5978                           
  5979                           ;stkvar	_cfmt @ sp[(-2)+0]
  5980  01679C  0EFF               	movlw	-1
  5981  01679E  0060  F103  FFE3   	movff	btemp+11,plusw1
  5982  0167A4  0EFE               	movlw	-2
  5983  0167A6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5984                           
  5985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5986  0167AC  6A1C               	clrf	_nout^0,c
  5987  0167AE  6A1D               	clrf	(_nout+1)^0,c
  5988                           
  5989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5990  0167B0  D020               	goto	l9548
  5991  0167B2                     l9546:
  5992                           
  5993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5994                           ;stkvar	_ap @ sp[(-2)+-6]
  5995  0167B2  0EF8               	movlw	-8
  5996  0167B4  006F FF8F FFE6     	movff	plusw1,postinc1
  5997  0167BA  006F FF8F FFE6     	movff	plusw1,postinc1
  5998                           
  5999                           ;stkvar	_cfmt @ sp[(-4)+0]
  6000  0167C0  0EFC               	movlw	252
  6001  0167C2  24E1               	addwf	fsr1l,w,c
  6002  0167C4  6E35               	movwf	btemp^0,c
  6003  0167C6  0EFF               	movlw	255
  6004  0167C8  20E2               	addwfc	fsr1h,w,c
  6005  0167CA  6E36               	movwf	(btemp+1)^0,c
  6006  0167CC  0060  F0D7  FFE6   	movff	btemp,postinc1
  6007  0167D2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6008                           
  6009                           ;stkvar	_fp @ sp[(-6)+-2]
  6010  0167D8  0EF8               	movlw	-8
  6011  0167DA  006F FF8F FFE6     	movff	plusw1,postinc1
  6012  0167E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6013  0167E6  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6014  0167EA  5035               	movf	btemp^0,w,c
  6015  0167EC  261C               	addwf	_nout^0,f,c
  6016  0167EE  5036               	movf	(btemp+1)^0,w,c
  6017  0167F0  221D               	addwfc	(_nout+1)^0,f,c
  6018  0167F2                     l9548:
  6019                           
  6020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6021                           ;stkvar	_cfmt @ sp[(-2)+0]
  6022  0167F2  50E1               	movf	fsr1l,w,c
  6023  0167F4  0FFE               	addlw	-2
  6024  0167F6  6ED9               	movwf	fsr2l,c
  6025  0167F8  50E2               	movf	fsr1h,w,c
  6026  0167FA  6EDA               	movwf	fsr2h,c
  6027  0167FC  0EFF               	movlw	255
  6028  0167FE  22DA               	addwfc	fsr2h,f,c
  6029  016800  006F FF7B FFF6     	movff	postinc2,tblptrl
  6030  016806  006F FF77 FFF7     	movff	postdec2,tblptrh
  6031  01680C                     	if	0	;tblptru may be non-zero
  6032  01680C                     	endif
  6033  01680C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6034  01680C  0E00               	movlw	low (__mediumconst shr (0+16))
  6035  01680E  6EF8               	movwf	tblptru,c
  6036  016810                     	endif
  6037  016810  0008               	tblrd		*
  6038  016812  50F5               	movf	tablat,w,c
  6039  016814  0900               	iorlw	0
  6040  016816  A4D8               	btfss	status,2,c
  6041  016818  D7CC               	goto	l9546
  6042                           
  6043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6044  01681A  0060  F070  F035   	movff	_nout,btemp
  6045  016820  0060  F074  F036   	movff	_nout+1,btemp+1
  6046                           
  6047                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6048  016826  0EF8               	movlw	248
  6049  016828  26E1               	addwf	fsr1l,f,c
  6050  01682A  0EFF               	movlw	255
  6051  01682C  22E2               	addwfc	fsr1h,f,c
  6052  01682E  0012               	return		;funcret
  6053  016830                     __end_of_vfprintf:
  6054                           	opt callstack 0
  6055                           
  6056 ;; *************** function _vfpfcnvrt *****************
  6057 ;; Defined at:
  6058 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6061 ;;		 -> f(6), NULL(0), 
  6062 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6063 ;;		 -> cfmt(2), 
  6064 ;;  ap              2  [STACK] PTR PTR void 
  6065 ;;		 -> ap(2), ap(2), 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  llu             8  [STACK] unsigned long long 
  6068 ;;  ll              8  [STACK] long long 
  6069 ;;  f               4  [STACK] long long 
  6070 ;;  ct              3  [STACK] unsigned char [3]
  6071 ;;  vp              3    0        PTR void 
  6072 ;;  cp              2  [STACK] PTR unsigned char 
  6073 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6074 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6075 ;;		 -> STR_3(4), V(189), 
  6076 ;;  i               2    0        int 
  6077 ;;  done            2    0        int 
  6078 ;;  c               1  [STACK] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2  [STACK] int 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/4
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:   12
  6095 ;; This function calls:
  6096 ;;		_atoi
  6097 ;;		_ctoa
  6098 ;;		_dtoa
  6099 ;;		_efgtoa
  6100 ;;		_fputc
  6101 ;;		_isdigit
  6102 ;;		_isupper
  6103 ;;		_stoa
  6104 ;;		_strncmp
  6105 ;;		_tolower
  6106 ;;		_xtoa
  6107 ;; This function is called by:
  6108 ;;		_vfprintf
  6109 ;; This function uses a reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text31
  6113  011244                     __ptext31:
  6114                           	opt callstack 0
  6115  011244                     _vfpfcnvrt:
  6116                           	opt callstack 0
  6117                           
  6118                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6119  011244  0E20               	movlw	32
  6120  011246  26E1               	addwf	fsr1l,f,c
  6121  011248  0E00               	movlw	0
  6122  01124A  22E2               	addwfc	fsr1h,f,c
  6123                           
  6124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6125                           ;stkvar	_fmt @ sp[(-32)+-4]
  6126                           
  6127                           ;incstack = 0
  6128  01124C  0EDC               	movlw	-36
  6129  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6130  011254  0EDD               	movlw	-35
  6131  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6132  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6133  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6134  011268                     	if	0	;tblptru may be non-zero
  6135  011268                     	endif
  6136  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6137  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6138  01126A  6EF8               	movwf	tblptru,c
  6139  01126C                     	endif
  6140  01126C  0008               	tblrd		*
  6141  01126E  50F5               	movf	tablat,w,c
  6142  011270  0A25               	xorlw	37
  6143  011272  A4D8               	btfss	status,2,c
  6144  011274  EF92  F08E         	goto	l9492
  6145                           
  6146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6147                           ;stkvar	_fmt @ sp[(-32)+-4]
  6148  011278  0EDC               	movlw	-36
  6149  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6150  011280  0EDD               	movlw	-35
  6151  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6152  011288  2ADE               	incf	postinc2,f,c
  6153  01128A  0E00               	movlw	0
  6154  01128C  22DD               	addwfc	postdec2,f,c
  6155                           
  6156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6157  01128E  6A1E               	clrf	_width^0,c
  6158  011290  6A1F               	clrf	(_width+1)^0,c
  6159  011292  6A22               	clrf	_flags^0,c
  6160  011294  6A23               	clrf	(_flags+1)^0,c
  6161                           
  6162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6163  011296  6820               	setf	_prec^0,c
  6164  011298  6821               	setf	(_prec+1)^0,c
  6165                           
  6166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6167                           ;stkvar	_fmt @ sp[(-32)+-4]
  6168  01129A  0EDC               	movlw	-36
  6169  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6170  0112A2  0EDD               	movlw	-35
  6171  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6172  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6173  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6174  0112B6                     	if	0	;tblptru may be non-zero
  6175  0112B6                     	endif
  6176  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6177  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6178  0112B8  6EF8               	movwf	tblptru,c
  6179  0112BA                     	endif
  6180  0112BA  0008               	tblrd		*
  6181  0112BC  50F5               	movf	tablat,w,c
  6182  0112BE  0A2A               	xorlw	42
  6183  0112C0  A4D8               	btfss	status,2,c
  6184  0112C2  D031               	goto	l9356
  6185                           
  6186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6187                           ;stkvar	_fmt @ sp[(-32)+-4]
  6188  0112C4  0EDC               	movlw	-36
  6189  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6190  0112CC  0EDD               	movlw	-35
  6191  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6192  0112D4  2ADE               	incf	postinc2,f,c
  6193  0112D6  0E00               	movlw	0
  6194  0112D8  22DD               	addwfc	postdec2,f,c
  6195                           
  6196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6197                           ;stkvar	_ap @ sp[(-32)+-6]
  6198  0112DA  0EDA               	movlw	-38
  6199  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6200  0112E2  0EDB               	movlw	-37
  6201  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6202  0112EA  0E02               	movlw	2
  6203  0112EC  5EDE               	subwf	postinc2,f,c
  6204  0112EE  0E00               	movlw	0
  6205  0112F0  5ADD               	subwfb	postdec2,f,c
  6206  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6207  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6208  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6209  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6210  01130A  006F FF78  F01E    	movff	postinc2,_width
  6211  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6212                           
  6213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6214  011316  AE1F               	btfss	(_width+1)^0,7,c
  6215  011318  D066               	goto	u9370
  6216                           
  6217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6218  01131A  8022               	bsf	_flags^0,0,c
  6219                           
  6220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6221  01131C  6C1E               	negf	_width^0,c
  6222  01131E  1E1F               	comf	(_width+1)^0,f,c
  6223  011320  B0D8               	btfsc	status,0,c
  6224  011322  2A1F               	incf	(_width+1)^0,f,c
  6225  011324  D060               	goto	u9370
  6226  011326                     l9356:
  6227                           
  6228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6229                           ;stkvar	_fmt @ sp[(-32)+-4]
  6230  011326  0EDC               	movlw	-36
  6231  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6232  01132E  0EDD               	movlw	-35
  6233  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6234  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6235  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6236  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6237  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6238  01134E  EC38  F0A5         	call	_atoi	;wreg free
  6239  011352  0060  F0D4  F01E   	movff	btemp,_width
  6240  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6241                           
  6242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6243  01135E  D00B               	goto	l9360
  6244  011360                     l9358:
  6245                           
  6246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6247                           ;stkvar	_fmt @ sp[(-32)+-4]
  6248  011360  0EDC               	movlw	-36
  6249  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6250  011368  0EDD               	movlw	-35
  6251  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6252  011370  2ADE               	incf	postinc2,f,c
  6253  011372  0E00               	movlw	0
  6254  011374  22DD               	addwfc	postdec2,f,c
  6255  011376                     l9360:
  6256  011376  0ED0               	movlw	208
  6257  011378  6E3F               	movwf	(btemp+10)^0,c
  6258  01137A  0EFF               	movlw	255
  6259  01137C  6E40               	movwf	(btemp+11)^0,c
  6260                           
  6261                           ;stkvar	_fmt @ sp[(-32)+-4]
  6262  01137E  0EDC               	movlw	-36
  6263  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6264  011386  0EDD               	movlw	-35
  6265  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6266  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6267  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6268  01139A                     	if	0	;tblptru may be non-zero
  6269  01139A                     	endif
  6270  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6271  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6272  01139C  6EF8               	movwf	tblptru,c
  6273  01139E                     	endif
  6274  01139E  0008               	tblrd		*
  6275  0113A0  50F5               	movf	tablat,w,c
  6276  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6277  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6278  0113A6  503F               	movf	(btemp+10)^0,w,c
  6279  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6280  0113AA  5040               	movf	(btemp+11)^0,w,c
  6281  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6282  0113AE  503E               	movf	(btemp+9)^0,w,c
  6283  0113B0  E106               	bnz	u9350
  6284  0113B2  0E0A               	movlw	10
  6285  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6286  0113B6  B0D8               	btfsc	status,0,c
  6287  0113B8  D002               	goto	u9350
  6288  0113BA  0E01               	movlw	1
  6289  0113BC  D001               	goto	u9360
  6290  0113BE                     u9350:
  6291  0113BE  0E00               	movlw	0
  6292  0113C0                     u9360:
  6293  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6294  0113C2  6A40               	clrf	(btemp+11)^0,c
  6295                           
  6296                           ;stkvar	_vfpfcnvrt$4135 @ sp[(-32)+4]
  6297  0113C4  0EE4               	movlw	-28
  6298  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6299  0113CC  0EE5               	movlw	-27
  6300  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6301                           
  6302                           ;stkvar	_vfpfcnvrt$4135 @ sp[(-32)+4]
  6303  0113D4  0EE4               	movlw	-28
  6304  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6305  0113DC  0EE5               	movlw	-27
  6306  0113DE  50E3               	movf	plusw1,w,c
  6307  0113E0  1035               	iorwf	btemp^0,w,c
  6308  0113E2  A4D8               	btfss	status,2,c
  6309  0113E4  D7BD               	goto	l9358
  6310  0113E6                     u9370:
  6311                           
  6312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6313                           ;stkvar	_fmt @ sp[(-32)+-4]
  6314  0113E6  0EDC               	movlw	-36
  6315  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6316  0113EE  0EDD               	movlw	-35
  6317  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6318  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6319  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6320  011402                     	if	0	;tblptru may be non-zero
  6321  011402                     	endif
  6322  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6323  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6324  011404  6EF8               	movwf	tblptru,c
  6325  011406                     	endif
  6326  011406  0008               	tblrd		*
  6327  011408  50F5               	movf	tablat,w,c
  6328  01140A  0A2E               	xorlw	46
  6329  01140C  A4D8               	btfss	status,2,c
  6330  01140E  D0AC               	goto	u9420
  6331                           
  6332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6333  011410  6A20               	clrf	_prec^0,c
  6334  011412  6A21               	clrf	(_prec+1)^0,c
  6335                           
  6336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6337                           ;stkvar	_fmt @ sp[(-32)+-4]
  6338  011414  0EDC               	movlw	-36
  6339  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6340  01141C  0EDD               	movlw	-35
  6341  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6342  011424  2ADE               	incf	postinc2,f,c
  6343  011426  0E00               	movlw	0
  6344  011428  22DD               	addwfc	postdec2,f,c
  6345                           
  6346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6347                           ;stkvar	_fmt @ sp[(-32)+-4]
  6348  01142A  0EDC               	movlw	-36
  6349  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6350  011432  0EDD               	movlw	-35
  6351  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6352  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6353  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  6354  011446                     	if	0	;tblptru may be non-zero
  6355  011446                     	endif
  6356  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6357  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  6358  011448  6EF8               	movwf	tblptru,c
  6359  01144A                     	endif
  6360  01144A  0008               	tblrd		*
  6361  01144C  50F5               	movf	tablat,w,c
  6362  01144E  0A2A               	xorlw	42
  6363  011450  A4D8               	btfss	status,2,c
  6364  011452  D02A               	goto	l9378
  6365                           
  6366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  6367                           ;stkvar	_fmt @ sp[(-32)+-4]
  6368  011454  0EDC               	movlw	-36
  6369  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  6370  01145C  0EDD               	movlw	-35
  6371  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6372  011464  2ADE               	incf	postinc2,f,c
  6373  011466  0E00               	movlw	0
  6374  011468  22DD               	addwfc	postdec2,f,c
  6375                           
  6376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6377                           ;stkvar	_ap @ sp[(-32)+-6]
  6378  01146A  0EDA               	movlw	-38
  6379  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6380  011472  0EDB               	movlw	-37
  6381  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  6382  01147A  0E02               	movlw	2
  6383  01147C  5EDE               	subwf	postinc2,f,c
  6384  01147E  0E00               	movlw	0
  6385  011480  5ADD               	subwfb	postdec2,f,c
  6386  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  6387  011488  006F FF74  F040    	movff	postdec2,btemp+11
  6388  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6389  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6390  01149A  006F FF78  F020    	movff	postinc2,_prec
  6391  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  6392                           
  6393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  6394  0114A6  D060               	goto	u9420
  6395  0114A8                     l9378:
  6396                           
  6397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  6398                           ;stkvar	_fmt @ sp[(-32)+-4]
  6399  0114A8  0EDC               	movlw	-36
  6400  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6401  0114B0  0EDD               	movlw	-35
  6402  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6403  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  6404  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  6405  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6406  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  6407  0114D0  EC38  F0A5         	call	_atoi	;wreg free
  6408  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  6409  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  6410                           
  6411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6412  0114E0  D00B               	goto	l9382
  6413  0114E2                     l9380:
  6414                           
  6415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  6416                           ;stkvar	_fmt @ sp[(-32)+-4]
  6417  0114E2  0EDC               	movlw	-36
  6418  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6419  0114EA  0EDD               	movlw	-35
  6420  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6421  0114F2  2ADE               	incf	postinc2,f,c
  6422  0114F4  0E00               	movlw	0
  6423  0114F6  22DD               	addwfc	postdec2,f,c
  6424  0114F8                     l9382:
  6425  0114F8  0ED0               	movlw	208
  6426  0114FA  6E3F               	movwf	(btemp+10)^0,c
  6427  0114FC  0EFF               	movlw	255
  6428  0114FE  6E40               	movwf	(btemp+11)^0,c
  6429                           
  6430                           ;stkvar	_fmt @ sp[(-32)+-4]
  6431  011500  0EDC               	movlw	-36
  6432  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  6433  011508  0EDD               	movlw	-35
  6434  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6435  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  6436  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  6437  01151C                     	if	0	;tblptru may be non-zero
  6438  01151C                     	endif
  6439  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6440  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  6441  01151E  6EF8               	movwf	tblptru,c
  6442  011520                     	endif
  6443  011520  0008               	tblrd		*
  6444  011522  50F5               	movf	tablat,w,c
  6445  011524  6E3D               	movwf	(btemp+8)^0,c
  6446  011526  6A3E               	clrf	(btemp+9)^0,c
  6447  011528  503F               	movf	(btemp+10)^0,w,c
  6448  01152A  263D               	addwf	(btemp+8)^0,f,c
  6449  01152C  5040               	movf	(btemp+11)^0,w,c
  6450  01152E  223E               	addwfc	(btemp+9)^0,f,c
  6451  011530  503E               	movf	(btemp+9)^0,w,c
  6452  011532  E106               	bnz	u9400
  6453  011534  0E0A               	movlw	10
  6454  011536  5C3D               	subwf	(btemp+8)^0,w,c
  6455  011538  B0D8               	btfsc	status,0,c
  6456  01153A  D002               	goto	u9400
  6457  01153C  0E01               	movlw	1
  6458  01153E  D001               	goto	u9410
  6459  011540                     u9400:
  6460  011540  0E00               	movlw	0
  6461  011542                     u9410:
  6462  011542  6E3F               	movwf	(btemp+10)^0,c
  6463  011544  6A40               	clrf	(btemp+11)^0,c
  6464                           
  6465                           ;stkvar	_vfpfcnvrt$4136 @ sp[(-32)+0]
  6466  011546  0EE0               	movlw	-32
  6467  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6468  01154E  0EE1               	movlw	-31
  6469  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  6470                           
  6471                           ;stkvar	_vfpfcnvrt$4136 @ sp[(-32)+0]
  6472  011556  0EE0               	movlw	-32
  6473  011558  006F FF8C  F035    	movff	plusw1,btemp
  6474  01155E  0EE1               	movlw	-31
  6475  011560  50E3               	movf	plusw1,w,c
  6476  011562  1035               	iorwf	btemp^0,w,c
  6477  011564  A4D8               	btfss	status,2,c
  6478  011566  D7BD               	goto	l9380
  6479  011568                     u9420:
  6480                           
  6481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  6482                           ;stkvar	_fmt @ sp[(-32)+-4]
  6483  011568  0EDC               	movlw	-36
  6484  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6485  011570  0EDD               	movlw	-35
  6486  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  6487  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  6488  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6489  011584                     	if	0	;tblptru may be non-zero
  6490  011584                     	endif
  6491  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6492  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  6493  011586  6EF8               	movwf	tblptru,c
  6494  011588                     	endif
  6495  011588  0008               	tblrd		*
  6496  01158A  50F5               	movf	tablat,w,c
  6497  01158C  6EE6               	movwf	postinc1,c
  6498  01158E  0E00               	movlw	0
  6499  011590  6EE6               	movwf	postinc1,c
  6500  011592  EC6A  F0B6         	call	_tolower	;wreg free
  6501                           
  6502                           ;stkvar	_ct @ sp[(-32)+26]
  6503  011596  0EFA               	movlw	-6
  6504  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  6505                           
  6506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  6507                           ;stkvar	_ct @ sp[(-32)+26]
  6508  01159E  0EFA               	movlw	-6
  6509  0115A0  50E3               	movf	plusw1,w,c
  6510  0115A2  B4D8               	btfsc	status,2,c
  6511  0115A4  D05B               	goto	l9398
  6512                           
  6513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  6514                           ;stkvar	_ct @ sp[(-32)+26]
  6515  0115A6  0EFB               	movlw	251
  6516  0115A8  24E1               	addwf	fsr1l,w,c
  6517  0115AA  6ED9               	movwf	fsr2l,c
  6518  0115AC  0EFF               	movlw	255
  6519  0115AE  20E2               	addwfc	fsr1h,w,c
  6520  0115B0  6EDA               	movwf	fsr2h,c
  6521                           
  6522                           ;stkvar	_fmt @ sp[(-32)+-4]
  6523  0115B2  0EDC               	movlw	-36
  6524  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  6525  0115BA  0EDD               	movlw	-35
  6526  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  6527  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  6528  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  6529  0115CE  0E01               	movlw	1
  6530  0115D0  263F               	addwf	(btemp+10)^0,f,c
  6531  0115D2  0E00               	movlw	0
  6532  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  6533  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6534  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6535  0115E2                     	if	0	;tblptru may be non-zero
  6536  0115E2                     	endif
  6537  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6538  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  6539  0115E4  6EF8               	movwf	tblptru,c
  6540  0115E6                     	endif
  6541  0115E6  0008               	tblrd		*
  6542  0115E8  50F5               	movf	tablat,w,c
  6543  0115EA  6EE6               	movwf	postinc1,c
  6544  0115EC  0E00               	movlw	0
  6545  0115EE  6EE6               	movwf	postinc1,c
  6546  0115F0  EC6A  F0B6         	call	_tolower	;wreg free
  6547  0115F4  5035               	movf	btemp^0,w,c
  6548  0115F6  6EDF               	movwf	indf2,c
  6549                           
  6550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  6551                           ;stkvar	_ct @ sp[(-32)+26]
  6552  0115F8  0EFB               	movlw	251
  6553  0115FA  24E1               	addwf	fsr1l,w,c
  6554  0115FC  6ED9               	movwf	fsr2l,c
  6555  0115FE  0EFF               	movlw	255
  6556  011600  20E2               	addwfc	fsr1h,w,c
  6557  011602  6EDA               	movwf	fsr2h,c
  6558  011604  50DF               	movf	indf2,w,c
  6559  011606  B4D8               	btfsc	status,2,c
  6560  011608  D029               	goto	l9398
  6561                           
  6562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  6563                           ;stkvar	_ct @ sp[(-32)+26]
  6564  01160A  0EFC               	movlw	252
  6565  01160C  24E1               	addwf	fsr1l,w,c
  6566  01160E  6ED9               	movwf	fsr2l,c
  6567  011610  0EFF               	movlw	255
  6568  011612  20E2               	addwfc	fsr1h,w,c
  6569  011614  6EDA               	movwf	fsr2h,c
  6570                           
  6571                           ;stkvar	_fmt @ sp[(-32)+-4]
  6572  011616  0EDC               	movlw	-36
  6573  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  6574  01161E  0EDD               	movlw	-35
  6575  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  6576  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  6577  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  6578  011632  0E02               	movlw	2
  6579  011634  263F               	addwf	(btemp+10)^0,f,c
  6580  011636  0E00               	movlw	0
  6581  011638  2240               	addwfc	(btemp+11)^0,f,c
  6582  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6583  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6584  011646                     	if	0	;tblptru may be non-zero
  6585  011646                     	endif
  6586  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6587  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  6588  011648  6EF8               	movwf	tblptru,c
  6589  01164A                     	endif
  6590  01164A  0008               	tblrd		*
  6591  01164C  50F5               	movf	tablat,w,c
  6592  01164E  6EE6               	movwf	postinc1,c
  6593  011650  0E00               	movlw	0
  6594  011652  6EE6               	movwf	postinc1,c
  6595  011654  EC6A  F0B6         	call	_tolower	;wreg free
  6596  011658  5035               	movf	btemp^0,w,c
  6597  01165A  6EDF               	movwf	indf2,c
  6598  01165C                     l9398:
  6599                           
  6600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6601                           ;stkvar	_fmt @ sp[(-32)+-4]
  6602  01165C  0EDC               	movlw	-36
  6603  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6604  011664  0EDD               	movlw	-35
  6605  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  6606  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6607  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  6608  011678                     	if	0	;tblptru may be non-zero
  6609  011678                     	endif
  6610  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6611  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  6612  01167A  6EF8               	movwf	tblptru,c
  6613  01167C                     	endif
  6614  01167C  0008               	tblrd		*
  6615  01167E  50F5               	movf	tablat,w,c
  6616  011680  0A63               	xorlw	99
  6617  011682  A4D8               	btfss	status,2,c
  6618  011684  D036               	goto	l9408
  6619                           
  6620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6621                           ;stkvar	_fmt @ sp[(-32)+-4]
  6622  011686  0EDC               	movlw	-36
  6623  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  6624  01168E  0EDD               	movlw	-35
  6625  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  6626  011696  2ADE               	incf	postinc2,f,c
  6627  011698  0E00               	movlw	0
  6628  01169A  22DD               	addwfc	postdec2,f,c
  6629                           
  6630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6631                           ;stkvar	_ap @ sp[(-32)+-6]
  6632  01169C  0EDA               	movlw	-38
  6633  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6634  0116A4  0EDB               	movlw	-37
  6635  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6636  0116AC  0E02               	movlw	2
  6637  0116AE  5EDE               	subwf	postinc2,f,c
  6638  0116B0  0E00               	movlw	0
  6639  0116B2  5ADD               	subwfb	postdec2,f,c
  6640  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  6641  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  6642  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6643  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6644  0116CC  50DF               	movf	indf2,w,c
  6645  0116CE  6E40               	movwf	(btemp+11)^0,c
  6646                           
  6647                           ;stkvar	_c @ sp[(-32)+31]
  6648  0116D0  0EFF               	movlw	-1
  6649  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6650                           
  6651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6652                           ;stkvar	_c @ sp[(-32)+31]
  6653  0116D8  0EFF               	movlw	-1
  6654  0116DA  50E3               	movf	plusw1,w,c
  6655  0116DC  6EE6               	movwf	postinc1,c
  6656                           
  6657                           ;stkvar	_fp @ sp[(-33)+-2]
  6658  0116DE  0EDD               	movlw	-35
  6659  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6660  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  6661  0116EC  ECE4  F0B5         	call	_ctoa	;wreg free
  6662  0116F0  D343               	goto	l1923
  6663  0116F2                     l9408:
  6664                           
  6665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6666                           ;stkvar	_fmt @ sp[(-32)+-4]
  6667  0116F2  0EDC               	movlw	-36
  6668  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6669  0116FA  0EDD               	movlw	-35
  6670  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6671  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  6672  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  6673  01170E                     	if	0	;tblptru may be non-zero
  6674  01170E                     	endif
  6675  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6676  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  6677  011710  6EF8               	movwf	tblptru,c
  6678  011712                     	endif
  6679  011712  0008               	tblrd		*
  6680  011714  50F5               	movf	tablat,w,c
  6681  011716  0A64               	xorlw	100
  6682  011718  B4D8               	btfsc	status,2,c
  6683  01171A  D015               	goto	u9470
  6684                           
  6685                           ;stkvar	_fmt @ sp[(-32)+-4]
  6686  01171C  0EDC               	movlw	-36
  6687  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6688  011724  0EDD               	movlw	-35
  6689  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  6690  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6691  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  6692  011738                     	if	0	;tblptru may be non-zero
  6693  011738                     	endif
  6694  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6695  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  6696  01173A  6EF8               	movwf	tblptru,c
  6697  01173C                     	endif
  6698  01173C  0008               	tblrd		*
  6699  01173E  50F5               	movf	tablat,w,c
  6700  011740  0A69               	xorlw	105
  6701  011742  A4D8               	btfss	status,2,c
  6702  011744  D075               	goto	l9420
  6703  011746                     u9470:
  6704                           
  6705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6706                           ;stkvar	_fmt @ sp[(-32)+-4]
  6707  011746  0EDC               	movlw	-36
  6708  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  6709  01174E  0EDD               	movlw	-35
  6710  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  6711  011756  2ADE               	incf	postinc2,f,c
  6712  011758  0E00               	movlw	0
  6713  01175A  22DD               	addwfc	postdec2,f,c
  6714                           
  6715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6716                           ;stkvar	_ap @ sp[(-32)+-6]
  6717  01175C  0EDA               	movlw	-38
  6718  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6719  011764  0EDB               	movlw	-37
  6720  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  6721  01176C  0E02               	movlw	2
  6722  01176E  5EDE               	subwf	postinc2,f,c
  6723  011770  0E00               	movlw	0
  6724  011772  5ADD               	subwfb	postdec2,f,c
  6725  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  6726  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  6727  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6728  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6729  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  6730  011792  006F FF74  F040    	movff	postdec2,btemp+11
  6731                           
  6732                           ;stkvar	_ll @ sp[(-32)+14]
  6733  011798  0EEE               	movlw	-18
  6734  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6735  0117A0  0EEF               	movlw	-17
  6736  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6737  0117A8  6A35               	clrf	btemp^0,c
  6738  0117AA  BEE3               	btfsc	plusw1,7,c
  6739  0117AC  6835               	setf	btemp^0,c
  6740  0117AE  0EF0               	movlw	-16
  6741  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6742  0117B6  0EF1               	movlw	-15
  6743  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6744  0117BE  0EF2               	movlw	-14
  6745  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6746  0117C6  0EF3               	movlw	-13
  6747  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6748  0117CE  0EF4               	movlw	-12
  6749  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6750  0117D6  0EF5               	movlw	-11
  6751  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6752                           
  6753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6754                           ;stkvar	_ll @ sp[(-32)+14]
  6755  0117DE  50E1               	movf	fsr1l,w,c
  6756  0117E0  0FEE               	addlw	-18
  6757  0117E2  6ED9               	movwf	fsr2l,c
  6758  0117E4  50E2               	movf	fsr1h,w,c
  6759  0117E6  6EDA               	movwf	fsr2h,c
  6760  0117E8  0EFF               	movlw	255
  6761  0117EA  22DA               	addwfc	fsr2h,f,c
  6762  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  6763  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  6764  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  6765  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  6766  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  6767  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  6768  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  6769  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  6770                           
  6771                           ;stkvar	_fp @ sp[(-40)+-2]
  6772  01181C  0ED6               	movlw	-42
  6773  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  6774  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  6775  01182A  EC71  F099         	call	_dtoa	;wreg free
  6776  01182E  D2A4               	goto	l1923
  6777  011830                     l9420:
  6778                           
  6779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  6780                           ;stkvar	_ct @ sp[(-32)+26]
  6781  011830  0EFA               	movlw	-6
  6782  011832  006F FF8C  F035    	movff	plusw1,btemp
  6783  011838  0E66               	movlw	102
  6784  01183A  1835               	xorwf	btemp^0,w,c
  6785  01183C  A4D8               	btfss	status,2,c
  6786  01183E  D06E               	goto	l9432
  6787                           
  6788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  6789                           ;stkvar	_fmt @ sp[(-32)+-4]
  6790  011840  0EDC               	movlw	-36
  6791  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  6792  011848  0EDD               	movlw	-35
  6793  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6794  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  6795  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  6796  01185C                     	if	0	;tblptru may be non-zero
  6797  01185C                     	endif
  6798  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6799  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  6800  01185E  6EF8               	movwf	tblptru,c
  6801  011860                     	endif
  6802                           
  6803                           ;stkvar	_c @ sp[(-32)+31]
  6804  011860  0008               	tblrd		*
  6805  011862  0EFF               	movlw	-1
  6806  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  6807                           
  6808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  6809                           ;stkvar	_fmt @ sp[(-32)+-4]
  6810  01186A  0EDC               	movlw	-36
  6811  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6812  011872  0EDD               	movlw	-35
  6813  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  6814  01187A  2ADE               	incf	postinc2,f,c
  6815  01187C  0E00               	movlw	0
  6816  01187E  22DD               	addwfc	postdec2,f,c
  6817                           
  6818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  6819                           ;stkvar	_ap @ sp[(-32)+-6]
  6820  011880  0EDA               	movlw	-38
  6821  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  6822  011888  0EDB               	movlw	-37
  6823  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6824  011890  0E04               	movlw	4
  6825  011892  5EDE               	subwf	postinc2,f,c
  6826  011894  0E00               	movlw	0
  6827  011896  5ADD               	subwfb	postdec2,f,c
  6828  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  6829  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  6830  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6831  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6832  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  6833  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  6834  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  6835  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  6836                           
  6837                           ;stkvar	_f @ sp[(-32)+22]
  6838  0118C8  0EF6               	movlw	-10
  6839  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  6840  0118D0  0EF7               	movlw	-9
  6841  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  6842  0118D8  0EF8               	movlw	-8
  6843  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6844  0118E0  0EF9               	movlw	-7
  6845  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6846  0118E8                     l9428:
  6847                           
  6848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  6849                           ;stkvar	_c @ sp[(-32)+31]
  6850  0118E8  0EFF               	movlw	-1
  6851  0118EA  50E3               	movf	plusw1,w,c
  6852  0118EC  6EE6               	movwf	postinc1,c
  6853                           
  6854                           ;stkvar	_f @ sp[(-33)+22]
  6855  0118EE  0EF5               	movlw	-11
  6856  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  6857  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6858  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6859  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  6860                           
  6861                           ;stkvar	_fp @ sp[(-37)+-2]
  6862  011908  0ED9               	movlw	-39
  6863  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  6864  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  6865  011916  EC00  F080         	call	_efgtoa	;wreg free
  6866  01191A  D22E               	goto	l1923
  6867  01191C                     l9432:
  6868                           
  6869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6870  01191C  0E02               	movlw	2
  6871  01191E  6EE6               	movwf	postinc1,c
  6872  011920  0E00               	movlw	0
  6873  011922  6EE6               	movwf	postinc1,c
  6874  011924  0EF6               	movlw	low STR_40
  6875  011926  6EE6               	movwf	postinc1,c
  6876  011928  0EFF               	movlw	high STR_40
  6877  01192A  6EE6               	movwf	postinc1,c
  6878                           
  6879                           ;stkvar	_ct @ sp[(-36)+26]
  6880  01192C  0EF6               	movlw	246
  6881  01192E  24E1               	addwf	fsr1l,w,c
  6882  011930  6E35               	movwf	btemp^0,c
  6883  011932  0EFF               	movlw	255
  6884  011934  20E2               	addwfc	fsr1h,w,c
  6885  011936  6E36               	movwf	(btemp+1)^0,c
  6886  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  6887  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6888  011944  EC9D  F0A9         	call	_strncmp	;wreg free
  6889  011948  5035               	movf	btemp^0,w,c
  6890  01194A  1036               	iorwf	(btemp+1)^0,w,c
  6891  01194C  A4D8               	btfss	status,2,c
  6892  01194E  D096               	goto	l9452
  6893                           
  6894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6895                           ;stkvar	_fmt @ sp[(-32)+-4]
  6896  011950  0EDC               	movlw	-36
  6897  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  6898  011958  0EDD               	movlw	-35
  6899  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6900  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  6901  011966  006F FF74  F040    	movff	postdec2,btemp+11
  6902  01196C  0E01               	movlw	1
  6903  01196E  263F               	addwf	(btemp+10)^0,f,c
  6904  011970  0E00               	movlw	0
  6905  011972  2240               	addwfc	(btemp+11)^0,f,c
  6906  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6907  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6908  011980                     	if	0	;tblptru may be non-zero
  6909  011980                     	endif
  6910  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6911  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  6912  011982  6EF8               	movwf	tblptru,c
  6913  011984                     	endif
  6914                           
  6915                           ;stkvar	_c @ sp[(-32)+31]
  6916  011984  0008               	tblrd		*
  6917  011986  0EFF               	movlw	-1
  6918  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  6919  01198E  0EBF               	movlw	191
  6920  011990  6E3F               	movwf	(btemp+10)^0,c
  6921  011992  0EFF               	movlw	255
  6922  011994  6E40               	movwf	(btemp+11)^0,c
  6923                           
  6924                           ;stkvar	_fmt @ sp[(-32)+-4]
  6925  011996  0EDC               	movlw	-36
  6926  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  6927  01199E  0EDD               	movlw	-35
  6928  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6929  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6930  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6931  0119B2                     	if	0	;tblptru may be non-zero
  6932  0119B2                     	endif
  6933  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6934  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6935  0119B4  6EF8               	movwf	tblptru,c
  6936  0119B6                     	endif
  6937  0119B6  0008               	tblrd		*
  6938  0119B8  50F5               	movf	tablat,w,c
  6939  0119BA  6E3D               	movwf	(btemp+8)^0,c
  6940  0119BC  6A3E               	clrf	(btemp+9)^0,c
  6941  0119BE  503F               	movf	(btemp+10)^0,w,c
  6942  0119C0  263D               	addwf	(btemp+8)^0,f,c
  6943  0119C2  5040               	movf	(btemp+11)^0,w,c
  6944  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  6945  0119C6  503E               	movf	(btemp+9)^0,w,c
  6946  0119C8  E106               	bnz	u9500
  6947  0119CA  0E1A               	movlw	26
  6948  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  6949  0119CE  B0D8               	btfsc	status,0,c
  6950  0119D0  D002               	goto	u9500
  6951  0119D2  0E01               	movlw	1
  6952  0119D4  D001               	goto	u9510
  6953  0119D6                     u9500:
  6954  0119D6  0E00               	movlw	0
  6955  0119D8                     u9510:
  6956  0119D8  6E3F               	movwf	(btemp+10)^0,c
  6957  0119DA  6A40               	clrf	(btemp+11)^0,c
  6958                           
  6959                           ;stkvar	_vfpfcnvrt$4142 @ sp[(-32)+2]
  6960  0119DC  0EE2               	movlw	-30
  6961  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6962  0119E4  0EE3               	movlw	-29
  6963  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  6964                           
  6965                           ;stkvar	_vfpfcnvrt$4142 @ sp[(-32)+2]
  6966  0119EC  0EE2               	movlw	-30
  6967  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  6968  0119F4  0EE3               	movlw	-29
  6969  0119F6  50E3               	movf	plusw1,w,c
  6970  0119F8  1035               	iorwf	btemp^0,w,c
  6971                           
  6972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6973                           ;stkvar	_ap @ sp[(-32)+-6]
  6974                           
  6975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  6976                           
  6977                           ;stkvar	_f @ sp[(-32)+22]
  6978                           
  6979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  6980                           ;stkvar	_ap @ sp[(-32)+-6]
  6981  0119FA  0EDA               	movlw	-38
  6982  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6983  011A02  0EDB               	movlw	-37
  6984  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  6985  011A0A  0E04               	movlw	4
  6986  011A0C  5EDE               	subwf	postinc2,f,c
  6987  011A0E  0E00               	movlw	0
  6988  011A10  5ADD               	subwfb	postdec2,f,c
  6989  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  6990  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  6991  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6992  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6993  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  6994  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  6995  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  6996  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  6997                           
  6998                           ;stkvar	_f @ sp[(-32)+22]
  6999  011A42  0EF6               	movlw	-10
  7000  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7001  011A4A  0EF7               	movlw	-9
  7002  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7003  011A52  0EF8               	movlw	-8
  7004  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7005  011A5A  0EF9               	movlw	-7
  7006  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7007                           
  7008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7009                           ;stkvar	_fmt @ sp[(-32)+-4]
  7010  011A62  0EDC               	movlw	-36
  7011  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7012  011A6A  0EDD               	movlw	-35
  7013  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7014  011A72  0E02               	movlw	2
  7015  011A74  26DE               	addwf	postinc2,f,c
  7016  011A76  0E00               	movlw	0
  7017  011A78  22DD               	addwfc	postdec2,f,c
  7018  011A7A  D736               	goto	l9428
  7019  011A7C                     l9452:
  7020                           
  7021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7022                           ;stkvar	_fmt @ sp[(-32)+-4]
  7023  011A7C  0EDC               	movlw	-36
  7024  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7025  011A84  0EDD               	movlw	-35
  7026  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7027  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7028  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7029  011A98                     	if	0	;tblptru may be non-zero
  7030  011A98                     	endif
  7031  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7032  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7033  011A9A  6EF8               	movwf	tblptru,c
  7034  011A9C                     	endif
  7035  011A9C  0008               	tblrd		*
  7036  011A9E  50F5               	movf	tablat,w,c
  7037  011AA0  0A73               	xorlw	115
  7038  011AA2  A4D8               	btfss	status,2,c
  7039  011AA4  D042               	goto	l9462
  7040                           
  7041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7042                           ;stkvar	_fmt @ sp[(-32)+-4]
  7043  011AA6  0EDC               	movlw	-36
  7044  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7045  011AAE  0EDD               	movlw	-35
  7046  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7047  011AB6  2ADE               	incf	postinc2,f,c
  7048  011AB8  0E00               	movlw	0
  7049  011ABA  22DD               	addwfc	postdec2,f,c
  7050                           
  7051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7052                           ;stkvar	_ap @ sp[(-32)+-6]
  7053  011ABC  0EDA               	movlw	-38
  7054  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7055  011AC4  0EDB               	movlw	-37
  7056  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7057  011ACC  0E02               	movlw	2
  7058  011ACE  5EDE               	subwf	postinc2,f,c
  7059  011AD0  0E00               	movlw	0
  7060  011AD2  5ADD               	subwfb	postdec2,f,c
  7061  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7062  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7063  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7064  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7065  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7066  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7067                           
  7068                           ;stkvar	_cp @ sp[(-32)+29]
  7069  011AF8  0EFE               	movlw	-2
  7070  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7071  011B00  0EFD               	movlw	-3
  7072  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7073                           
  7074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7075                           ;stkvar	_cp @ sp[(-32)+29]
  7076  011B08  0EFD               	movlw	-3
  7077  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7078  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7079                           
  7080                           ;stkvar	_fp @ sp[(-34)+-2]
  7081  011B16  0EDC               	movlw	-36
  7082  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7083  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7084  011B24  EC99  F0A2         	call	_stoa	;wreg free
  7085  011B28  D127               	goto	l1923
  7086  011B2A                     l9462:
  7087                           
  7088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7089                           ;stkvar	_fmt @ sp[(-32)+-4]
  7090  011B2A  0EDC               	movlw	-36
  7091  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7092  011B32  0EDD               	movlw	-35
  7093  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7094  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7095  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7096  011B46                     	if	0	;tblptru may be non-zero
  7097  011B46                     	endif
  7098  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7099  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7100  011B48  6EF8               	movwf	tblptru,c
  7101  011B4A                     	endif
  7102  011B4A  0008               	tblrd		*
  7103  011B4C  50F5               	movf	tablat,w,c
  7104  011B4E  0A78               	xorlw	120
  7105  011B50  B4D8               	btfsc	status,2,c
  7106  011B52  D015               	goto	u9550
  7107                           
  7108                           ;stkvar	_fmt @ sp[(-32)+-4]
  7109  011B54  0EDC               	movlw	-36
  7110  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7111  011B5C  0EDD               	movlw	-35
  7112  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7113  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7114  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7115  011B70                     	if	0	;tblptru may be non-zero
  7116  011B70                     	endif
  7117  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7118  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7119  011B72  6EF8               	movwf	tblptru,c
  7120  011B74                     	endif
  7121  011B74  0008               	tblrd		*
  7122  011B76  50F5               	movf	tablat,w,c
  7123  011B78  0A58               	xorlw	88
  7124  011B7A  A4D8               	btfss	status,2,c
  7125  011B7C  D094               	goto	l9476
  7126  011B7E                     u9550:
  7127                           
  7128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7129                           ;stkvar	_fmt @ sp[(-32)+-4]
  7130  011B7E  0EDC               	movlw	-36
  7131  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7132  011B86  0EDD               	movlw	-35
  7133  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7134  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7135  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7136  011B9A                     	if	0	;tblptru may be non-zero
  7137  011B9A                     	endif
  7138  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7139  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7140  011B9C  6EF8               	movwf	tblptru,c
  7141  011B9E                     	endif
  7142                           
  7143                           ;stkvar	_c @ sp[(-32)+31]
  7144  011B9E  0008               	tblrd		*
  7145  011BA0  0EFF               	movlw	-1
  7146  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7147                           
  7148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7149                           ;stkvar	_fmt @ sp[(-32)+-4]
  7150  011BA8  0EDC               	movlw	-36
  7151  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7152  011BB0  0EDD               	movlw	-35
  7153  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7154  011BB8  2ADE               	incf	postinc2,f,c
  7155  011BBA  0E00               	movlw	0
  7156  011BBC  22DD               	addwfc	postdec2,f,c
  7157                           
  7158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7159                           ;stkvar	_ap @ sp[(-32)+-6]
  7160  011BBE  0EDA               	movlw	-38
  7161  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7162  011BC6  0EDB               	movlw	-37
  7163  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7164  011BCE  0E02               	movlw	2
  7165  011BD0  5EDE               	subwf	postinc2,f,c
  7166  011BD2  0E00               	movlw	0
  7167  011BD4  5ADD               	subwfb	postdec2,f,c
  7168  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7169  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7170  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7171  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7172  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7173  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7174  011BFA  503F               	movf	(btemp+10)^0,w,c
  7175  011BFC  6E45               	movwf	(btemp+16)^0,c
  7176  011BFE  5040               	movf	(btemp+11)^0,w,c
  7177  011C00  6E46               	movwf	(btemp+17)^0,c
  7178  011C02  6A47               	clrf	(btemp+18)^0,c
  7179  011C04  6A48               	clrf	(btemp+19)^0,c
  7180  011C06  6A49               	clrf	(btemp+20)^0,c
  7181  011C08  6A4A               	clrf	(btemp+21)^0,c
  7182  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7183  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7184                           
  7185                           ;stkvar	_llu @ sp[(-32)+6]
  7186  011C0E  0EE6               	movlw	-26
  7187  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7188  011C16  0EE7               	movlw	-25
  7189  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7190  011C1E  0EE8               	movlw	-24
  7191  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7192  011C26  0EE9               	movlw	-23
  7193  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7194  011C2E  0EEA               	movlw	-22
  7195  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7196  011C36  0EEB               	movlw	-21
  7197  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7198  011C3E  0EEC               	movlw	-20
  7199  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7200  011C46  0EED               	movlw	-19
  7201  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7202                           
  7203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7204                           ;stkvar	_c @ sp[(-32)+31]
  7205  011C4E  0EFF               	movlw	-1
  7206  011C50  50E3               	movf	plusw1,w,c
  7207  011C52  6EE6               	movwf	postinc1,c
  7208                           
  7209                           ;stkvar	_llu @ sp[(-33)+6]
  7210  011C54  50E1               	movf	fsr1l,w,c
  7211  011C56  0FE5               	addlw	-27
  7212  011C58  6ED9               	movwf	fsr2l,c
  7213  011C5A  50E2               	movf	fsr1h,w,c
  7214  011C5C  6EDA               	movwf	fsr2h,c
  7215  011C5E  0EFF               	movlw	255
  7216  011C60  22DA               	addwfc	fsr2h,f,c
  7217  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7218  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7219  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7220  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7221  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7222  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7223  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7224  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7225                           
  7226                           ;stkvar	_fp @ sp[(-41)+-2]
  7227  011C92  0ED5               	movlw	-43
  7228  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7229  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7230  011CA0  EC90  F09D         	call	_xtoa	;wreg free
  7231  011CA4  D069               	goto	l1923
  7232  011CA6                     l9476:
  7233                           
  7234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7235                           ;stkvar	_fmt @ sp[(-32)+-4]
  7236  011CA6  0EDC               	movlw	-36
  7237  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7238  011CAE  0EDD               	movlw	-35
  7239  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7240  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7241  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7242  011CC2                     	if	0	;tblptru may be non-zero
  7243  011CC2                     	endif
  7244  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7245  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7246  011CC4  6EF8               	movwf	tblptru,c
  7247  011CC6                     	endif
  7248  011CC6  0008               	tblrd		*
  7249  011CC8  50F5               	movf	tablat,w,c
  7250  011CCA  0A25               	xorlw	37
  7251  011CCC  A4D8               	btfss	status,2,c
  7252  011CCE  D01A               	goto	l9486
  7253                           
  7254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7255                           ;stkvar	_fmt @ sp[(-32)+-4]
  7256  011CD0  0EDC               	movlw	-36
  7257  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7258  011CD8  0EDD               	movlw	-35
  7259  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7260  011CE0  2ADE               	incf	postinc2,f,c
  7261  011CE2  0E00               	movlw	0
  7262  011CE4  22DD               	addwfc	postdec2,f,c
  7263                           
  7264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7265                           ;stkvar	_fp @ sp[(-32)+-2]
  7266  011CE6  0EDE               	movlw	-34
  7267  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7268  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7269  011CF4  0E25               	movlw	37
  7270  011CF6  6EE6               	movwf	postinc1,c
  7271  011CF8  0E00               	movlw	0
  7272  011CFA  6EE6               	movwf	postinc1,c
  7273  011CFC  ECB8  F0AE         	call	_fputc	;wreg free
  7274  011D00                     l9482:
  7275                           
  7276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7277  011D00  0E01               	movlw	1
  7278  011D02  D00C               	goto	L4
  7279  011D04                     l9486:
  7280                           
  7281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7282                           ;stkvar	_fmt @ sp[(-32)+-4]
  7283  011D04  0EDC               	movlw	-36
  7284  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7285  011D0C  0EDD               	movlw	-35
  7286  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7287  011D14  2ADE               	incf	postinc2,f,c
  7288  011D16  0E00               	movlw	0
  7289  011D18  22DD               	addwfc	postdec2,f,c
  7290                           
  7291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7292  011D1A  0E00               	movlw	0
  7293  011D1C                     L4:
  7294  011D1C  6E35               	movwf	btemp^0,c
  7295  011D1E  0E00               	movlw	0
  7296  011D20  6E36               	movwf	(btemp+1)^0,c
  7297  011D22  D02A               	goto	l1923
  7298  011D24                     l9492:
  7299                           
  7300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7301                           ;stkvar	_fp @ sp[(-32)+-2]
  7302  011D24  0EDE               	movlw	-34
  7303  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7304  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7305                           
  7306                           ;stkvar	_fmt @ sp[(-34)+-4]
  7307  011D32  0EDA               	movlw	-38
  7308  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7309  011D3A  0EDB               	movlw	-37
  7310  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7311  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7312  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7313  011D4E                     	if	0	;tblptru may be non-zero
  7314  011D4E                     	endif
  7315  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7316  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7317  011D50  6EF8               	movwf	tblptru,c
  7318  011D52                     	endif
  7319  011D52  0008               	tblrd		*
  7320  011D54  50F5               	movf	tablat,w,c
  7321  011D56  6EE6               	movwf	postinc1,c
  7322  011D58  0E00               	movlw	0
  7323  011D5A  6EE6               	movwf	postinc1,c
  7324  011D5C  ECB8  F0AE         	call	_fputc	;wreg free
  7325                           
  7326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7327                           ;stkvar	_fmt @ sp[(-32)+-4]
  7328  011D60  0EDC               	movlw	-36
  7329  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7330  011D68  0EDD               	movlw	-35
  7331  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7332  011D70  2ADE               	incf	postinc2,f,c
  7333  011D72  0E00               	movlw	0
  7334  011D74  22DD               	addwfc	postdec2,f,c
  7335  011D76  D7C4               	goto	l9482
  7336  011D78                     l1923:
  7337                           
  7338                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7339  011D78  0EDA               	movlw	218
  7340  011D7A  26E1               	addwf	fsr1l,f,c
  7341  011D7C  0EFF               	movlw	255
  7342  011D7E  22E2               	addwfc	fsr1h,f,c
  7343  011D80  0012               	return		;funcret
  7344  011D82                     __end_of_vfpfcnvrt:
  7345                           	opt callstack 0
  7346                           
  7347 ;; *************** function _xtoa *****************
  7348 ;; Defined at:
  7349 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7352 ;;		 -> f(6), NULL(0), 
  7353 ;;  d               8  [STACK] unsigned long long 
  7354 ;;  x               1  [STACK] unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  n               8  [STACK] unsigned long long 
  7357 ;;  c               2  [STACK] int 
  7358 ;;  i               2  [STACK] int 
  7359 ;;  w               2  [STACK] int 
  7360 ;;  p               2  [STACK] int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2  [STACK] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/4
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:   11
  7377 ;; This function calls:
  7378 ;;		_isalpha
  7379 ;;		_isupper
  7380 ;;		_pad
  7381 ;;		_toupper
  7382 ;; This function is called by:
  7383 ;;		_vfpfcnvrt
  7384 ;; This function uses a reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text32
  7388  013B20                     __ptext32:
  7389                           	opt callstack 0
  7390  013B20                     _xtoa:
  7391                           	opt callstack 0
  7392                           
  7393                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7394  013B20  0E14               	movlw	20
  7395  013B22  26E1               	addwf	fsr1l,f,c
  7396  013B24  0E00               	movlw	0
  7397  013B26  22E2               	addwfc	fsr1h,f,c
  7398                           
  7399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7400                           
  7401                           ;incstack = 0
  7402  013B28  AE21               	btfss	(_prec+1)^0,7,c
  7403                           
  7404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7405  013B2A  9222               	bcf	_flags^0,1,c
  7406                           
  7407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7408  013B2C  BE21               	btfsc	(_prec+1)^0,7,c
  7409  013B2E  D005               	goto	u9150
  7410  013B30  5021               	movf	(_prec+1)^0,w,c
  7411  013B32  E110               	bnz	l9274
  7412  013B34  0420               	decf	_prec^0,w,c
  7413  013B36  B0D8               	btfsc	status,0,c
  7414  013B38  D00D               	goto	l9274
  7415  013B3A                     u9150:
  7416  013B3A  0E01               	movlw	1
  7417  013B3C  6E3F               	movwf	(btemp+10)^0,c
  7418  013B3E  0E00               	movlw	0
  7419  013B40  6E40               	movwf	(btemp+11)^0,c
  7420                           
  7421                           ;stkvar	_p @ sp[(-20)+18]
  7422  013B42  0EFE               	movlw	-2
  7423  013B44  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7424  013B4A  0EFF               	movlw	-1
  7425  013B4C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7426  013B52  D008               	goto	l1873
  7427  013B54                     l9274:
  7428                           
  7429                           ;stkvar	_p @ sp[(-20)+18]
  7430  013B54  0EFE               	movlw	-2
  7431  013B56  0060  F083  FFE3   	movff	_prec,plusw1
  7432  013B5C  0EFF               	movlw	-1
  7433  013B5E  0060  F087  FFE3   	movff	_prec+1,plusw1
  7434  013B64                     l1873:
  7435                           
  7436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7437                           ;stkvar	_w @ sp[(-20)+16]
  7438  013B64  0EFC               	movlw	-4
  7439  013B66  0060  F07B  FFE3   	movff	_width,plusw1
  7440  013B6C  0EFD               	movlw	-3
  7441  013B6E  0060  F07F  FFE3   	movff	_width+1,plusw1
  7442                           
  7443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7444  013B74  A822               	btfss	_flags^0,4,c
  7445  013B76  D00B               	goto	l9280
  7446                           
  7447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7448                           ;stkvar	_w @ sp[(-20)+16]
  7449  013B78  50E1               	movf	fsr1l,w,c
  7450  013B7A  0FFC               	addlw	-4
  7451  013B7C  6ED9               	movwf	fsr2l,c
  7452  013B7E  50E2               	movf	fsr1h,w,c
  7453  013B80  6EDA               	movwf	fsr2h,c
  7454  013B82  0EFF               	movlw	255
  7455  013B84  22DA               	addwfc	fsr2h,f,c
  7456  013B86  0EFE               	movlw	254
  7457  013B88  26DE               	addwf	postinc2,f,c
  7458  013B8A  0EFF               	movlw	255
  7459  013B8C  22DD               	addwfc	postdec2,f,c
  7460  013B8E                     l9280:
  7461                           
  7462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7463                           ;stkvar	_d @ sp[(-20)+-10]
  7464  013B8E  0EE2               	movlw	226
  7465  013B90  24E1               	addwf	fsr1l,w,c
  7466  013B92  6ED9               	movwf	fsr2l,c
  7467  013B94  0EFF               	movlw	255
  7468  013B96  20E2               	addwfc	fsr1h,w,c
  7469  013B98  6EDA               	movwf	fsr2h,c
  7470                           
  7471                           ;stkvar	_n @ sp[(-20)+4]
  7472  013B9A  0E08               	movlw	8
  7473  013B9C  6E35               	movwf	btemp^0,c
  7474  013B9E  0EF0               	movlw	-16
  7475  013BA0                     us917999:
  7476  013BA0  006F FF7B FFE3     	movff	postinc2,plusw1
  7477  013BA6  28E8               	incf	wreg,w,c
  7478  013BA8  2E35               	decfsz	btemp^0,f,c
  7479  013BAA  D7FA               	bra	us917999
  7480                           
  7481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7482  013BAC  0E4F               	movlw	79
  7483  013BAE  6E3F               	movwf	(btemp+10)^0,c
  7484  013BB0  0E00               	movlw	0
  7485  013BB2  6E40               	movwf	(btemp+11)^0,c
  7486                           
  7487                           ;stkvar	_i @ sp[(-20)+14]
  7488  013BB4  0EFA               	movlw	-6
  7489  013BB6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7490  013BBC  0EFB               	movlw	-5
  7491  013BBE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7492                           
  7493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7494  013BC4  0101               	movlb	1	; () banked
  7495  013BC6  6BF7               	clrf	(_dbuf+79)& (0+255),b
  7496                           
  7497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7498  013BC8  D0EE               	goto	l9318
  7499  013BCA                     l9286:
  7500                           
  7501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  7502                           ;stkvar	_i @ sp[(-20)+14]
  7503  013BCA  50E1               	movf	fsr1l,w,c
  7504  013BCC  0FFA               	addlw	-6
  7505  013BCE  6ED9               	movwf	fsr2l,c
  7506  013BD0  50E2               	movf	fsr1h,w,c
  7507  013BD2  6EDA               	movwf	fsr2h,c
  7508  013BD4  0EFF               	movlw	255
  7509  013BD6  22DA               	addwfc	fsr2h,f,c
  7510  013BD8  06DE               	decf	postinc2,f,c
  7511  013BDA  0E00               	movlw	0
  7512  013BDC  5ADD               	subwfb	postdec2,f,c
  7513                           
  7514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7515                           ;stkvar	_n @ sp[(-20)+4]
  7516  013BDE  0EF0               	movlw	-16
  7517  013BE0  006F FF8C  F03F    	movff	plusw1,btemp+10
  7518  013BE6  0EF1               	movlw	-15
  7519  013BE8  006F FF8C  F040    	movff	plusw1,btemp+11
  7520  013BEE  0E0F               	movlw	15
  7521  013BF0  163F               	andwf	(btemp+10)^0,f,c
  7522  013BF2  0E00               	movlw	0
  7523  013BF4  1640               	andwf	(btemp+11)^0,f,c
  7524                           
  7525                           ;stkvar	_c @ sp[(-20)+12]
  7526  013BF6  0EF8               	movlw	-8
  7527  013BF8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7528  013BFE  0EF9               	movlw	-7
  7529  013C00  0060  F103  FFE3   	movff	btemp+11,plusw1
  7530                           
  7531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7532                           ;stkvar	_c @ sp[(-20)+12]
  7533  013C06  0EF9               	movlw	-7
  7534  013C08  BEE3               	btfsc	plusw1,7,c
  7535  013C0A  D00F               	goto	l9294
  7536  013C0C  0EF9               	movlw	-7
  7537  013C0E  50E3               	movf	plusw1,w,c
  7538  013C10  E108               	bnz	u9180
  7539  013C12  0EF8               	movlw	-8
  7540  013C14  006F FF8C  F035    	movff	plusw1,btemp
  7541  013C1A  0E0A               	movlw	10
  7542  013C1C  5E35               	subwf	btemp^0,f,c
  7543  013C1E  A0D8               	btfss	status,0,c
  7544  013C20  D004               	goto	l9294
  7545  013C22                     u9180:
  7546                           
  7547                           ;stkvar	_c @ sp[(-20)+12]
  7548  013C22  0EF8               	movlw	-8
  7549  013C24  50E3               	movf	plusw1,w,c
  7550  013C26  0F57               	addlw	87
  7551  013C28  D003               	goto	L5
  7552  013C2A                     l9294:
  7553                           
  7554                           ;stkvar	_c @ sp[(-20)+12]
  7555  013C2A  0EF8               	movlw	-8
  7556  013C2C  50E3               	movf	plusw1,w,c
  7557  013C2E  0F30               	addlw	48
  7558  013C30                     L5:
  7559  013C30  6E3F               	movwf	(btemp+10)^0,c
  7560  013C32  0EF9               	movlw	-7
  7561  013C34  006F FF8C  F040    	movff	plusw1,btemp+11
  7562  013C3A  0E00               	movlw	0
  7563  013C3C  2240               	addwfc	(btemp+11)^0,f,c
  7564                           
  7565                           ;stkvar	_c @ sp[(-20)+12]
  7566  013C3E  0EF8               	movlw	-8
  7567  013C40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7568  013C46  0EF9               	movlw	-7
  7569  013C48  0060  F103  FFE3   	movff	btemp+11,plusw1
  7570  013C4E  0EBF               	movlw	191
  7571  013C50  6E3F               	movwf	(btemp+10)^0,c
  7572  013C52  0EFF               	movlw	255
  7573  013C54  6E40               	movwf	(btemp+11)^0,c
  7574                           
  7575                           ;stkvar	_x @ sp[(-20)+-11]
  7576  013C56  0EE1               	movlw	-31
  7577  013C58  50E3               	movf	plusw1,w,c
  7578  013C5A  6E3D               	movwf	(btemp+8)^0,c
  7579  013C5C  6A3E               	clrf	(btemp+9)^0,c
  7580  013C5E  503F               	movf	(btemp+10)^0,w,c
  7581  013C60  263D               	addwf	(btemp+8)^0,f,c
  7582  013C62  5040               	movf	(btemp+11)^0,w,c
  7583  013C64  223E               	addwfc	(btemp+9)^0,f,c
  7584  013C66  503E               	movf	(btemp+9)^0,w,c
  7585  013C68  E106               	bnz	u9190
  7586  013C6A  0E1A               	movlw	26
  7587  013C6C  5C3D               	subwf	(btemp+8)^0,w,c
  7588  013C6E  B0D8               	btfsc	status,0,c
  7589  013C70  D002               	goto	u9190
  7590  013C72  0E01               	movlw	1
  7591  013C74  D001               	goto	u9200
  7592  013C76                     u9190:
  7593  013C76  0E00               	movlw	0
  7594  013C78                     u9200:
  7595  013C78  6E3F               	movwf	(btemp+10)^0,c
  7596  013C7A  6A40               	clrf	(btemp+11)^0,c
  7597                           
  7598                           ;stkvar	_xtoa$4120 @ sp[(-20)+2]
  7599  013C7C  0EEE               	movlw	-18
  7600  013C7E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7601  013C84  0EEF               	movlw	-17
  7602  013C86  0060  F103  FFE3   	movff	btemp+11,plusw1
  7603                           
  7604                           ;stkvar	_xtoa$4120 @ sp[(-20)+2]
  7605  013C8C  0EEE               	movlw	-18
  7606  013C8E  006F FF8C  F035    	movff	plusw1,btemp
  7607  013C94  0EEF               	movlw	-17
  7608  013C96  50E3               	movf	plusw1,w,c
  7609  013C98  1035               	iorwf	btemp^0,w,c
  7610  013C9A  B4D8               	btfsc	status,2,c
  7611  013C9C  D041               	goto	l9310
  7612  013C9E  0E9F               	movlw	159
  7613  013CA0  6E3F               	movwf	(btemp+10)^0,c
  7614  013CA2  0EFF               	movlw	255
  7615  013CA4  6E40               	movwf	(btemp+11)^0,c
  7616                           
  7617                           ;stkvar	_c @ sp[(-20)+12]
  7618  013CA6  0EF8               	movlw	-8
  7619  013CA8  006F FF8C  F03D    	movff	plusw1,btemp+8
  7620  013CAE  0EF9               	movlw	-7
  7621  013CB0  006F FF8C  F03E    	movff	plusw1,btemp+9
  7622  013CB6  0E20               	movlw	32
  7623  013CB8  123D               	iorwf	(btemp+8)^0,f,c
  7624  013CBA  0E00               	movlw	0
  7625  013CBC  123E               	iorwf	(btemp+9)^0,f,c
  7626  013CBE  503F               	movf	(btemp+10)^0,w,c
  7627  013CC0  263D               	addwf	(btemp+8)^0,f,c
  7628  013CC2  5040               	movf	(btemp+11)^0,w,c
  7629  013CC4  223E               	addwfc	(btemp+9)^0,f,c
  7630  013CC6  503E               	movf	(btemp+9)^0,w,c
  7631  013CC8  E106               	bnz	u9220
  7632  013CCA  0E1A               	movlw	26
  7633  013CCC  5C3D               	subwf	(btemp+8)^0,w,c
  7634  013CCE  B0D8               	btfsc	status,0,c
  7635  013CD0  D002               	goto	u9220
  7636  013CD2  0E01               	movlw	1
  7637  013CD4  D001               	goto	u9230
  7638  013CD6                     u9220:
  7639  013CD6  0E00               	movlw	0
  7640  013CD8                     u9230:
  7641  013CD8  6E3F               	movwf	(btemp+10)^0,c
  7642  013CDA  6A40               	clrf	(btemp+11)^0,c
  7643                           
  7644                           ;stkvar	_xtoa$4121 @ sp[(-20)+0]
  7645  013CDC  0EEC               	movlw	-20
  7646  013CDE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7647  013CE4  0EED               	movlw	-19
  7648  013CE6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7649                           
  7650                           ;stkvar	_xtoa$4121 @ sp[(-20)+0]
  7651  013CEC  0EEC               	movlw	-20
  7652  013CEE  006F FF8C  F035    	movff	plusw1,btemp
  7653  013CF4  0EED               	movlw	-19
  7654  013CF6  50E3               	movf	plusw1,w,c
  7655  013CF8  1035               	iorwf	btemp^0,w,c
  7656  013CFA  B4D8               	btfsc	status,2,c
  7657  013CFC  D011               	goto	l9310
  7658                           
  7659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7660                           ;stkvar	_c @ sp[(-20)+12]
  7661  013CFE  0EF8               	movlw	-8
  7662  013D00  006F FF8F FFE6     	movff	plusw1,postinc1
  7663  013D06  006F FF8F FFE6     	movff	plusw1,postinc1
  7664  013D0C  EC28  F0B6         	call	_toupper	;wreg free
  7665                           
  7666                           ;stkvar	_c @ sp[(-20)+12]
  7667  013D10  0EF8               	movlw	-8
  7668  013D12  0060  F0D7  FFE3   	movff	btemp,plusw1
  7669  013D18  0EF9               	movlw	-7
  7670  013D1A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  7671  013D20                     l9310:
  7672                           
  7673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7674                           ;stkvar	_c @ sp[(-20)+12]
  7675                           ;stkvar	_i @ sp[(-20)+14]
  7676  013D20  0EFA               	movlw	-6
  7677  013D22  006F FF8C  F03F    	movff	plusw1,btemp+10
  7678  013D28  0EFB               	movlw	-5
  7679  013D2A  006F FF8C  F040    	movff	plusw1,btemp+11
  7680  013D30  0EA8               	movlw	low _dbuf
  7681  013D32  243F               	addwf	(btemp+10)^0,w,c
  7682  013D34  6ED9               	movwf	fsr2l,c
  7683  013D36  0E01               	movlw	high _dbuf
  7684  013D38  2040               	addwfc	(btemp+11)^0,w,c
  7685  013D3A  6EDA               	movwf	fsr2h,c
  7686  013D3C  0EF8               	movlw	-8
  7687  013D3E  006F FF8F FFDF     	movff	plusw1,indf2
  7688                           
  7689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  7690                           ;stkvar	_p @ sp[(-20)+18]
  7691  013D44  50E1               	movf	fsr1l,w,c
  7692  013D46  0FFE               	addlw	-2
  7693  013D48  6ED9               	movwf	fsr2l,c
  7694  013D4A  50E2               	movf	fsr1h,w,c
  7695  013D4C  6EDA               	movwf	fsr2h,c
  7696  013D4E  0EFF               	movlw	255
  7697  013D50  22DA               	addwfc	fsr2h,f,c
  7698  013D52  06DE               	decf	postinc2,f,c
  7699  013D54  0E00               	movlw	0
  7700  013D56  5ADD               	subwfb	postdec2,f,c
  7701                           
  7702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  7703                           ;stkvar	_w @ sp[(-20)+16]
  7704  013D58  50E1               	movf	fsr1l,w,c
  7705  013D5A  0FFC               	addlw	-4
  7706  013D5C  6ED9               	movwf	fsr2l,c
  7707  013D5E  50E2               	movf	fsr1h,w,c
  7708  013D60  6EDA               	movwf	fsr2h,c
  7709  013D62  0EFF               	movlw	255
  7710  013D64  22DA               	addwfc	fsr2h,f,c
  7711  013D66  06DE               	decf	postinc2,f,c
  7712  013D68  0E00               	movlw	0
  7713  013D6A  5ADD               	subwfb	postdec2,f,c
  7714                           
  7715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7716  013D6C  0E04               	movlw	4
  7717  013D6E  6E40               	movwf	(btemp+11)^0,c
  7718                           
  7719                           ;stkvar	_n @ sp[(-20)+4]
  7720  013D70  50E1               	movf	fsr1l,w,c
  7721  013D72  0FF0               	addlw	-16
  7722  013D74  6ED9               	movwf	fsr2l,c
  7723  013D76  50E2               	movf	fsr1h,w,c
  7724  013D78  6EDA               	movwf	fsr2h,c
  7725  013D7A  0EFF               	movlw	255
  7726  013D7C  22DA               	addwfc	fsr2h,f,c
  7727  013D7E  2840               	incf	(btemp+11)^0,w,c
  7728  013D80  52DE               	movf	postinc2,f,c
  7729  013D82  D00F               	goto	u9250
  7730  013D84                     u9255:
  7731  013D84  52DE               	movf	postinc2,f,c
  7732  013D86  52DE               	movf	postinc2,f,c
  7733  013D88  52DE               	movf	postinc2,f,c
  7734  013D8A  52DE               	movf	postinc2,f,c
  7735  013D8C  52DE               	movf	postinc2,f,c
  7736  013D8E  52DE               	movf	postinc2,f,c
  7737  013D90  90D8               	bcf	status,0,c
  7738  013D92  32DD               	rrcf	postdec2,f,c
  7739  013D94  32DD               	rrcf	postdec2,f,c
  7740  013D96  32DD               	rrcf	postdec2,f,c
  7741  013D98  32DD               	rrcf	postdec2,f,c
  7742  013D9A  32DD               	rrcf	postdec2,f,c
  7743  013D9C  32DD               	rrcf	postdec2,f,c
  7744  013D9E  32DD               	rrcf	postdec2,f,c
  7745  013DA0  32DE               	rrcf	postinc2,f,c
  7746  013DA2                     u9250:
  7747  013DA2  2EE8               	decfsz	wreg,f,c
  7748  013DA4  D7EF               	goto	u9255
  7749  013DA6                     l9318:
  7750                           
  7751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7752                           ;stkvar	_i @ sp[(-20)+14]
  7753  013DA6  0EFB               	movlw	-5
  7754  013DA8  BEE3               	btfsc	plusw1,7,c
  7755  013DAA  D03A               	goto	u9300
  7756  013DAC  0EFB               	movlw	-5
  7757  013DAE  50E3               	movf	plusw1,w,c
  7758  013DB0  E108               	bnz	u9260
  7759  013DB2  0EFA               	movlw	-6
  7760  013DB4  006F FF8C  F035    	movff	plusw1,btemp
  7761  013DBA  0E02               	movlw	2
  7762  013DBC  5E35               	subwf	btemp^0,f,c
  7763  013DBE  A0D8               	btfss	status,0,c
  7764  013DC0  D02F               	goto	u9300
  7765  013DC2                     u9260:
  7766                           
  7767                           ;stkvar	_n @ sp[(-20)+4]
  7768  013DC2  0EF0               	movlw	-16
  7769  013DC4  50E3               	movf	plusw1,w,c
  7770  013DC6  E115               	bnz	u9271
  7771  013DC8  0EF1               	movlw	-15
  7772  013DCA  50E3               	movf	plusw1,w,c
  7773  013DCC  E112               	bnz	u9271
  7774  013DCE  0EF2               	movlw	-14
  7775  013DD0  50E3               	movf	plusw1,w,c
  7776  013DD2  E10F               	bnz	u9271
  7777  013DD4  0EF3               	movlw	-13
  7778  013DD6  50E3               	movf	plusw1,w,c
  7779  013DD8  E10C               	bnz	u9271
  7780  013DDA  0EF4               	movlw	-12
  7781  013DDC  50E3               	movf	plusw1,w,c
  7782  013DDE  E109               	bnz	u9271
  7783  013DE0  0EF5               	movlw	-11
  7784  013DE2  50E3               	movf	plusw1,w,c
  7785  013DE4  E106               	bnz	u9271
  7786  013DE6  0EF6               	movlw	-10
  7787  013DE8  50E3               	movf	plusw1,w,c
  7788  013DEA  E103               	bnz	u9271
  7789  013DEC  0EF7               	movlw	-9
  7790  013DEE  50E3               	movf	plusw1,w,c
  7791  013DF0  A4D8               	btfss	status,2,c
  7792  013DF2                     u9271:
  7793  013DF2  D6EB               	goto	l9286
  7794                           
  7795                           ;stkvar	_p @ sp[(-20)+18]
  7796  013DF4  0EFF               	movlw	-1
  7797  013DF6  BEE3               	btfsc	plusw1,7,c
  7798  013DF8  D007               	goto	u9280
  7799  013DFA  0EFF               	movlw	-1
  7800  013DFC  50E3               	movf	plusw1,w,c
  7801  013DFE  E103               	bnz	u9281
  7802  013E00  0EFE               	movlw	-2
  7803  013E02  04E3               	decf	plusw1,w,c
  7804  013E04  B0D8               	btfsc	status,0,c
  7805  013E06                     u9281:
  7806  013E06  D6E1               	goto	l9286
  7807  013E08                     u9280:
  7808                           
  7809                           ;stkvar	_w @ sp[(-20)+16]
  7810  013E08  0EFD               	movlw	-3
  7811  013E0A  BEE3               	btfsc	plusw1,7,c
  7812  013E0C  D009               	goto	u9300
  7813  013E0E  0EFD               	movlw	-3
  7814  013E10  50E3               	movf	plusw1,w,c
  7815  013E12  E104               	bnz	u9290
  7816  013E14  0EFC               	movlw	-4
  7817  013E16  04E3               	decf	plusw1,w,c
  7818  013E18  A0D8               	btfss	status,0,c
  7819  013E1A  D002               	goto	u9300
  7820  013E1C                     u9290:
  7821  013E1C  B222               	btfsc	_flags^0,1,c
  7822  013E1E  D6D5               	goto	l9286
  7823  013E20                     u9300:
  7824                           
  7825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7826  013E20  A822               	btfss	_flags^0,4,c
  7827  013E22  D036               	goto	l9334
  7828                           
  7829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  7830                           ;stkvar	_i @ sp[(-20)+14]
  7831  013E24  50E1               	movf	fsr1l,w,c
  7832  013E26  0FFA               	addlw	-6
  7833  013E28  6ED9               	movwf	fsr2l,c
  7834  013E2A  50E2               	movf	fsr1h,w,c
  7835  013E2C  6EDA               	movwf	fsr2h,c
  7836  013E2E  0EFF               	movlw	255
  7837  013E30  22DA               	addwfc	fsr2h,f,c
  7838  013E32  06DE               	decf	postinc2,f,c
  7839  013E34  0E00               	movlw	0
  7840  013E36  5ADD               	subwfb	postdec2,f,c
  7841                           
  7842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7843                           ;stkvar	_x @ sp[(-20)+-11]
  7844                           ;stkvar	_i @ sp[(-20)+14]
  7845  013E38  0EFA               	movlw	-6
  7846  013E3A  006F FF8C  F03F    	movff	plusw1,btemp+10
  7847  013E40  0EFB               	movlw	-5
  7848  013E42  006F FF8C  F040    	movff	plusw1,btemp+11
  7849  013E48  0EA8               	movlw	low _dbuf
  7850  013E4A  243F               	addwf	(btemp+10)^0,w,c
  7851  013E4C  6ED9               	movwf	fsr2l,c
  7852  013E4E  0E01               	movlw	high _dbuf
  7853  013E50  2040               	addwfc	(btemp+11)^0,w,c
  7854  013E52  6EDA               	movwf	fsr2h,c
  7855  013E54  0EE1               	movlw	-31
  7856  013E56  006F FF8F FFDF     	movff	plusw1,indf2
  7857                           
  7858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  7859                           ;stkvar	_i @ sp[(-20)+14]
  7860  013E5C  50E1               	movf	fsr1l,w,c
  7861  013E5E  0FFA               	addlw	-6
  7862  013E60  6ED9               	movwf	fsr2l,c
  7863  013E62  50E2               	movf	fsr1h,w,c
  7864  013E64  6EDA               	movwf	fsr2h,c
  7865  013E66  0EFF               	movlw	255
  7866  013E68  22DA               	addwfc	fsr2h,f,c
  7867  013E6A  06DE               	decf	postinc2,f,c
  7868  013E6C  0E00               	movlw	0
  7869  013E6E  5ADD               	subwfb	postdec2,f,c
  7870                           
  7871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7872                           ;stkvar	_i @ sp[(-20)+14]
  7873  013E70  0EFA               	movlw	-6
  7874  013E72  006F FF8C  F03F    	movff	plusw1,btemp+10
  7875  013E78  0EFB               	movlw	-5
  7876  013E7A  006F FF8C  F040    	movff	plusw1,btemp+11
  7877  013E80  0EA8               	movlw	low _dbuf
  7878  013E82  243F               	addwf	(btemp+10)^0,w,c
  7879  013E84  6ED9               	movwf	fsr2l,c
  7880  013E86  0E01               	movlw	high _dbuf
  7881  013E88  2040               	addwfc	(btemp+11)^0,w,c
  7882  013E8A  6EDA               	movwf	fsr2h,c
  7883  013E8C  0E30               	movlw	48
  7884  013E8E  6EDF               	movwf	indf2,c
  7885  013E90                     l9334:
  7886                           
  7887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7888                           ;stkvar	_w @ sp[(-20)+16]
  7889  013E90  0EFC               	movlw	-4
  7890  013E92  006F FF8F FFE6     	movff	plusw1,postinc1
  7891  013E98  006F FF8F FFE6     	movff	plusw1,postinc1
  7892                           
  7893                           ;stkvar	_i @ sp[(-22)+14]
  7894  013E9E  0EA8               	movlw	low _dbuf
  7895  013EA0  6E3F               	movwf	(btemp+10)^0,c
  7896  013EA2  0E01               	movlw	high _dbuf
  7897  013EA4  6E40               	movwf	(btemp+11)^0,c
  7898  013EA6  0EF8               	movlw	-8
  7899  013EA8  50E3               	movf	plusw1,w,c
  7900  013EAA  263F               	addwf	(btemp+10)^0,f,c
  7901  013EAC  0EF9               	movlw	-7
  7902  013EAE  50E3               	movf	plusw1,w,c
  7903  013EB0  2240               	addwfc	(btemp+11)^0,f,c
  7904  013EB2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7905  013EB8  0060  F103  FFE6   	movff	btemp+11,postinc1
  7906                           
  7907                           ;stkvar	_fp @ sp[(-24)+-2]
  7908  013EBE  0EE6               	movlw	-26
  7909  013EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  7910  013EC6  006F FF8F FFE6     	movff	plusw1,postinc1
  7911  013ECC  ECD6  F0AF         	call	_pad	;wreg free
  7912                           
  7913                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7914  013ED0  0EE1               	movlw	225
  7915  013ED2  26E1               	addwf	fsr1l,f,c
  7916  013ED4  0EFF               	movlw	255
  7917  013ED6  22E2               	addwfc	fsr1h,f,c
  7918  013ED8  0012               	return		;funcret
  7919  013EDA                     __end_of_xtoa:
  7920                           	opt callstack 0
  7921                           
  7922 ;; *************** function _toupper *****************
  7923 ;; Defined at:
  7924 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  c               2  [STACK] int 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  2  [STACK] int 
  7931 ;; Registers used:
  7932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/1
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7942 ;;Total ram usage:        0 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    7
  7945 ;; This function calls:
  7946 ;;		_islower
  7947 ;; This function is called by:
  7948 ;;		_xtoa
  7949 ;; This function uses a reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text33
  7953  016C50                     __ptext33:
  7954                           	opt callstack 0
  7955  016C50                     _toupper:
  7956                           	opt callstack 0
  7957                           
  7958                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7959  016C50  52E6               	movf	postinc1,f,c
  7960  016C52  52E6               	movf	postinc1,f,c
  7961                           
  7962                           ;stkvar	_c @ sp[(-2)+-2]
  7963                           
  7964                           ;incstack = 0
  7965  016C54  0EFC               	movlw	-4
  7966  016C56  50E3               	movf	plusw1,w,c
  7967  016C58  0F9F               	addlw	159
  7968  016C5A  6E3F               	movwf	(btemp+10)^0,c
  7969  016C5C  0EFD               	movlw	-3
  7970  016C5E  006F FF8C  F040    	movff	plusw1,btemp+11
  7971  016C64  0EFF               	movlw	255
  7972  016C66  2240               	addwfc	(btemp+11)^0,f,c
  7973  016C68  5040               	movf	(btemp+11)^0,w,c
  7974  016C6A  E106               	bnz	u4980
  7975  016C6C  0E1A               	movlw	26
  7976  016C6E  5C3F               	subwf	(btemp+10)^0,w,c
  7977  016C70  B0D8               	btfsc	status,0,c
  7978  016C72  D002               	goto	u4980
  7979  016C74  0E01               	movlw	1
  7980  016C76  D001               	goto	u4990
  7981  016C78                     u4980:
  7982  016C78  0E00               	movlw	0
  7983  016C7A                     u4990:
  7984  016C7A  6E3F               	movwf	(btemp+10)^0,c
  7985  016C7C  6A40               	clrf	(btemp+11)^0,c
  7986                           
  7987                           ;stkvar	_toupper$4773 @ sp[(-2)+0]
  7988  016C7E  0EFE               	movlw	-2
  7989  016C80  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7990  016C86  0EFF               	movlw	-1
  7991  016C88  0060  F103  FFE3   	movff	btemp+11,plusw1
  7992                           
  7993                           ;stkvar	_toupper$4773 @ sp[(-2)+0]
  7994  016C8E  0EFE               	movlw	-2
  7995  016C90  006F FF8C  F035    	movff	plusw1,btemp
  7996  016C96  0EFF               	movlw	-1
  7997  016C98  50E3               	movf	plusw1,w,c
  7998  016C9A  1035               	iorwf	btemp^0,w,c
  7999  016C9C  B4D8               	btfsc	status,2,c
  8000  016C9E  D00D               	goto	l6214
  8001                           
  8002                           ;stkvar	_c @ sp[(-2)+-2]
  8003  016CA0  0EFC               	movlw	-4
  8004  016CA2  006F FF8C  F035    	movff	plusw1,btemp
  8005  016CA8  0EFD               	movlw	-3
  8006  016CAA  006F FF8C  F036    	movff	plusw1,btemp+1
  8007  016CB0  0E5F               	movlw	95
  8008  016CB2  1635               	andwf	btemp^0,f,c
  8009  016CB4  0E00               	movlw	0
  8010  016CB6  1636               	andwf	(btemp+1)^0,f,c
  8011  016CB8  D008               	goto	l2803
  8012  016CBA                     l6214:
  8013                           
  8014                           ;stkvar	_c @ sp[(-2)+-2]
  8015  016CBA  0EFC               	movlw	-4
  8016  016CBC  006F FF8C  F035    	movff	plusw1,btemp
  8017  016CC2  0EFD               	movlw	-3
  8018  016CC4  006F FF8C  F036    	movff	plusw1,btemp+1
  8019  016CCA                     l2803:
  8020                           
  8021                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8022  016CCA  52E5               	movf	postdec1,f,c
  8023  016CCC  52E5               	movf	postdec1,f,c
  8024  016CCE  52E5               	movf	postdec1,f,c
  8025  016CD0  52E5               	movf	postdec1,f,c
  8026  016CD2  0012               	return		;funcret
  8027  016CD4                     __end_of_toupper:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function _islower *****************
  8031 ;; Defined at:
  8032 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  c               2  [STACK] int 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  2  [STACK] int 
  8039 ;; Registers used:
  8040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    6
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_toupper
  8057 ;; This function uses a reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text34
  8061  017624                     __ptext34:
  8062                           	opt callstack 0
  8063  017624                     _islower:
  8064                           	opt callstack 16
  8065                           
  8066                           ;stkvar	_c @ sp[(0)+-2]
  8067                           
  8068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8069                           ;incstack = 0
  8070  017624  0EFE               	movlw	-2
  8071  017626  50E3               	movf	plusw1,w,c
  8072  017628  0F9F               	addlw	159
  8073  01762A  6E3F               	movwf	(btemp+10)^0,c
  8074  01762C  0EFF               	movlw	-1
  8075  01762E  006F FF8C  F040    	movff	plusw1,btemp+11
  8076  017634  0EFF               	movlw	255
  8077  017636  2240               	addwfc	(btemp+11)^0,f,c
  8078  017638  5040               	movf	(btemp+11)^0,w,c
  8079  01763A  E106               	bnz	u4670
  8080  01763C  0E1A               	movlw	26
  8081  01763E  5C3F               	subwf	(btemp+10)^0,w,c
  8082  017640  B0D8               	btfsc	status,0,c
  8083  017642  D002               	goto	u4670
  8084  017644  0E01               	movlw	1
  8085  017646  D001               	goto	u4680
  8086  017648                     u4670:
  8087  017648  0E00               	movlw	0
  8088  01764A                     u4680:
  8089  01764A  6E35               	movwf	btemp^0,c
  8090  01764C  6A36               	clrf	(btemp+1)^0,c
  8091                           
  8092                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8093  01764E  52E5               	movf	postdec1,f,c
  8094  017650  52E5               	movf	postdec1,f,c
  8095  017652  0012               	return		;funcret
  8096  017654                     __end_of_islower:
  8097                           	opt callstack 0
  8098                           
  8099 ;; *************** function _isalpha *****************
  8100 ;; Defined at:
  8101 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  c               2  [STACK] int 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  2  [STACK] int 
  8108 ;; Registers used:
  8109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;Total ram usage:        0 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    6
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_xtoa
  8126 ;; This function uses a reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text35
  8130  0173DE                     __ptext35:
  8131                           	opt callstack 0
  8132  0173DE                     _isalpha:
  8133                           	opt callstack 17
  8134                           
  8135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8136                           ;incstack = 0
  8137  0173DE  0E9F               	movlw	159
  8138  0173E0  6E3F               	movwf	(btemp+10)^0,c
  8139  0173E2  0EFF               	movlw	255
  8140  0173E4  6E40               	movwf	(btemp+11)^0,c
  8141                           
  8142                           ;stkvar	_c @ sp[(0)+-2]
  8143  0173E6  0EFE               	movlw	-2
  8144  0173E8  006F FF8C  F03D    	movff	plusw1,btemp+8
  8145  0173EE  0EFF               	movlw	-1
  8146  0173F0  006F FF8C  F03E    	movff	plusw1,btemp+9
  8147  0173F6  0E20               	movlw	32
  8148  0173F8  123D               	iorwf	(btemp+8)^0,f,c
  8149  0173FA  0E00               	movlw	0
  8150  0173FC  123E               	iorwf	(btemp+9)^0,f,c
  8151  0173FE  503F               	movf	(btemp+10)^0,w,c
  8152  017400  263D               	addwf	(btemp+8)^0,f,c
  8153  017402  5040               	movf	(btemp+11)^0,w,c
  8154  017404  223E               	addwfc	(btemp+9)^0,f,c
  8155  017406  503E               	movf	(btemp+9)^0,w,c
  8156  017408  E106               	bnz	u4960
  8157  01740A  0E1A               	movlw	26
  8158  01740C  5C3D               	subwf	(btemp+8)^0,w,c
  8159  01740E  B0D8               	btfsc	status,0,c
  8160  017410  D002               	goto	u4960
  8161  017412  0E01               	movlw	1
  8162  017414  D001               	goto	u4970
  8163  017416                     u4960:
  8164  017416  0E00               	movlw	0
  8165  017418                     u4970:
  8166  017418  6E35               	movwf	btemp^0,c
  8167  01741A  6A36               	clrf	(btemp+1)^0,c
  8168                           
  8169                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8170  01741C  52E5               	movf	postdec1,f,c
  8171  01741E  52E5               	movf	postdec1,f,c
  8172  017420  0012               	return		;funcret
  8173  017422                     __end_of_isalpha:
  8174                           	opt callstack 0
  8175                           
  8176 ;; *************** function _strncmp *****************
  8177 ;; Defined at:
  8178 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  _l              2  [STACK] PTR const unsigned char 
  8181 ;;		 -> ct(3), 
  8182 ;;  _r              2  [STACK] PTR const unsigned char 
  8183 ;;		 -> STR_42(3), 
  8184 ;;  n               2  [STACK] unsigned int 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  r               2  [STACK] PTR const unsigned char 
  8187 ;;		 -> STR_42(3), 
  8188 ;;  l               2  [STACK] PTR const unsigned char 
  8189 ;;		 -> ct(3), 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  2  [STACK] int 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/4
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    6
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_vfpfcnvrt
  8210 ;; This function uses a reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text36
  8214  01533A                     __ptext36:
  8215                           	opt callstack 0
  8216  01533A                     _strncmp:
  8217                           	opt callstack 0
  8218                           
  8219                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8220  01533A  52E6               	movf	postinc1,f,c
  8221  01533C  52E6               	movf	postinc1,f,c
  8222  01533E  52E6               	movf	postinc1,f,c
  8223  015340  52E6               	movf	postinc1,f,c
  8224                           
  8225                           ;stkvar	__l @ sp[(-4)+-2]
  8226                           
  8227                           ;incstack = 0
  8228  015342  0EFA               	movlw	-6
  8229  015344  006F FF8C  F03F    	movff	plusw1,btemp+10
  8230  01534A  0EFB               	movlw	-5
  8231  01534C  006F FF8C  F040    	movff	plusw1,btemp+11
  8232                           
  8233                           ;stkvar	_l @ sp[(-4)+2]
  8234  015352  0EFF               	movlw	-1
  8235  015354  0060  F103  FFE3   	movff	btemp+11,plusw1
  8236  01535A  0EFE               	movlw	-2
  8237  01535C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8238                           
  8239                           ;stkvar	__r @ sp[(-4)+-4]
  8240  015362  0EF8               	movlw	-8
  8241  015364  006F FF8C  F03F    	movff	plusw1,btemp+10
  8242  01536A  0EF9               	movlw	-7
  8243  01536C  006F FF8C  F040    	movff	plusw1,btemp+11
  8244                           
  8245                           ;stkvar	_r @ sp[(-4)+0]
  8246  015372  0EFD               	movlw	-3
  8247  015374  0060  F103  FFE3   	movff	btemp+11,plusw1
  8248  01537A  0EFC               	movlw	-4
  8249  01537C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8250                           
  8251                           ;stkvar	_n @ sp[(-4)+-6]
  8252  015382  0EF6               	movlw	-10
  8253  015384  006F FF8C  F035    	movff	plusw1,btemp
  8254  01538A  0E01               	movlw	1
  8255  01538C  5E35               	subwf	btemp^0,f,c
  8256  01538E  0EF6               	movlw	-10
  8257  015390  0060  F0D7  FFE3   	movff	btemp,plusw1
  8258  015396  0EF7               	movlw	-9
  8259  015398  006F FF8C  F035    	movff	plusw1,btemp
  8260  01539E  0E00               	movlw	0
  8261  0153A0  5A35               	subwfb	btemp^0,f,c
  8262  0153A2  0EF7               	movlw	-9
  8263  0153A4  0060  F0D7  FFE3   	movff	btemp,plusw1
  8264  0153AA  0EF6               	movlw	-10
  8265  0153AC  28E3               	incf	plusw1,w,c
  8266  0153AE  E13F               	bnz	l7372
  8267  0153B0  0EF7               	movlw	-9
  8268  0153B2  28E3               	incf	plusw1,w,c
  8269  0153B4  A4D8               	btfss	status,2,c
  8270  0153B6  D03B               	goto	l7372
  8271  0153B8  0E00               	movlw	0
  8272  0153BA  6E35               	movwf	btemp^0,c
  8273  0153BC  0E00               	movlw	0
  8274  0153BE  6E36               	movwf	(btemp+1)^0,c
  8275  0153C0  D09B               	goto	l2775
  8276  0153C2                     l7370:
  8277                           
  8278                           ;stkvar	_l @ sp[(-4)+2]
  8279  0153C2  0EFE               	movlw	-2
  8280  0153C4  50E3               	movf	plusw1,w,c
  8281  0153C6  0F01               	addlw	1
  8282  0153C8  6E35               	movwf	btemp^0,c
  8283  0153CA  0EFE               	movlw	-2
  8284  0153CC  0060  F0D7  FFE3   	movff	btemp,plusw1
  8285  0153D2  6A35               	clrf	btemp^0,c
  8286  0153D4  0EFF               	movlw	-1
  8287  0153D6  50E3               	movf	plusw1,w,c
  8288  0153D8  2035               	addwfc	btemp^0,w,c
  8289  0153DA  6E35               	movwf	btemp^0,c
  8290  0153DC  0EFF               	movlw	-1
  8291  0153DE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8292                           
  8293                           ;stkvar	_r @ sp[(-4)+0]
  8294  0153E4  0EFC               	movlw	-4
  8295  0153E6  50E3               	movf	plusw1,w,c
  8296  0153E8  0F01               	addlw	1
  8297  0153EA  6E35               	movwf	btemp^0,c
  8298  0153EC  0EFC               	movlw	-4
  8299  0153EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8300  0153F4  6A35               	clrf	btemp^0,c
  8301  0153F6  0EFD               	movlw	-3
  8302  0153F8  50E3               	movf	plusw1,w,c
  8303  0153FA  2035               	addwfc	btemp^0,w,c
  8304  0153FC  6E35               	movwf	btemp^0,c
  8305  0153FE  0EFD               	movlw	-3
  8306  015400  0060  F0D7  FFE3   	movff	btemp,plusw1
  8307                           
  8308                           ;stkvar	_n @ sp[(-4)+-6]
  8309  015406  0EF6               	movlw	-10
  8310  015408  006F FF8C  F035    	movff	plusw1,btemp
  8311  01540E  0E01               	movlw	1
  8312  015410  5E35               	subwf	btemp^0,f,c
  8313  015412  0EF6               	movlw	-10
  8314  015414  0060  F0D7  FFE3   	movff	btemp,plusw1
  8315  01541A  0EF7               	movlw	-9
  8316  01541C  006F FF8C  F035    	movff	plusw1,btemp
  8317  015422  0E00               	movlw	0
  8318  015424  5A35               	subwfb	btemp^0,f,c
  8319  015426  0EF7               	movlw	-9
  8320  015428  0060  F0D7  FFE3   	movff	btemp,plusw1
  8321  01542E                     l7372:
  8322                           
  8323                           ;stkvar	_l @ sp[(-4)+2]
  8324  01542E  0EFE               	movlw	-2
  8325  015430  006F FF8F FFD9     	movff	plusw1,fsr2l
  8326  015436  0EFF               	movlw	-1
  8327  015438  006F FF8F FFDA     	movff	plusw1,fsr2h
  8328  01543E  50DF               	movf	indf2,w,c
  8329  015440  B4D8               	btfsc	status,2,c
  8330  015442  D03B               	goto	u7160
  8331                           
  8332                           ;stkvar	_r @ sp[(-4)+0]
  8333  015444  50E1               	movf	fsr1l,w,c
  8334  015446  0FFC               	addlw	-4
  8335  015448  6ED9               	movwf	fsr2l,c
  8336  01544A  50E2               	movf	fsr1h,w,c
  8337  01544C  6EDA               	movwf	fsr2h,c
  8338  01544E  0EFF               	movlw	255
  8339  015450  22DA               	addwfc	fsr2h,f,c
  8340  015452  006F FF7B FFF6     	movff	postinc2,tblptrl
  8341  015458  006F FF77 FFF7     	movff	postdec2,tblptrh
  8342  01545E                     	if	0	;tblptru may be non-zero
  8343  01545E                     	endif
  8344  01545E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8345  01545E  0E00               	movlw	low (__mediumconst shr (0+16))
  8346  015460  6EF8               	movwf	tblptru,c
  8347  015462                     	endif
  8348  015462  0008               	tblrd		*
  8349  015464  50F5               	movf	tablat,w,c
  8350  015466  0900               	iorlw	0
  8351  015468  B4D8               	btfsc	status,2,c
  8352  01546A  D027               	goto	u7160
  8353                           
  8354                           ;stkvar	_n @ sp[(-4)+-6]
  8355  01546C  0EF6               	movlw	-10
  8356  01546E  006F FF8C  F035    	movff	plusw1,btemp
  8357  015474  0EF7               	movlw	-9
  8358  015476  50E3               	movf	plusw1,w,c
  8359  015478  1035               	iorwf	btemp^0,w,c
  8360  01547A  B4D8               	btfsc	status,2,c
  8361  01547C  D01E               	goto	u7160
  8362                           
  8363                           ;stkvar	_l @ sp[(-4)+2]
  8364  01547E  0EFE               	movlw	-2
  8365  015480  006F FF8F FFD9     	movff	plusw1,fsr2l
  8366  015486  0EFF               	movlw	-1
  8367  015488  006F FF8F FFDA     	movff	plusw1,fsr2h
  8368  01548E  50DF               	movf	indf2,w,c
  8369  015490  6E40               	movwf	(btemp+11)^0,c
  8370                           
  8371                           ;stkvar	_r @ sp[(-4)+0]
  8372  015492  50E1               	movf	fsr1l,w,c
  8373  015494  0FFC               	addlw	-4
  8374  015496  6ED9               	movwf	fsr2l,c
  8375  015498  50E2               	movf	fsr1h,w,c
  8376  01549A  6EDA               	movwf	fsr2h,c
  8377  01549C  0EFF               	movlw	255
  8378  01549E  22DA               	addwfc	fsr2h,f,c
  8379  0154A0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8380  0154A6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8381  0154AC                     	if	0	;tblptru may be non-zero
  8382  0154AC                     	endif
  8383  0154AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8384  0154AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8385  0154AE  6EF8               	movwf	tblptru,c
  8386  0154B0                     	endif
  8387  0154B0  0008               	tblrd		*
  8388  0154B2  50F5               	movf	tablat,w,c
  8389  0154B4  1840               	xorwf	(btemp+11)^0,w,c
  8390  0154B6  B4D8               	btfsc	status,2,c
  8391  0154B8  D784               	goto	l7370
  8392  0154BA                     u7160:
  8393                           
  8394                           ;stkvar	_l @ sp[(-4)+2]
  8395  0154BA  0EFE               	movlw	-2
  8396  0154BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8397  0154C2  0EFF               	movlw	-1
  8398  0154C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8399  0154CA  50DF               	movf	indf2,w,c
  8400  0154CC  6E35               	movwf	btemp^0,c
  8401  0154CE  6A36               	clrf	(btemp+1)^0,c
  8402                           
  8403                           ;stkvar	_r @ sp[(-4)+0]
  8404  0154D0  50E1               	movf	fsr1l,w,c
  8405  0154D2  0FFC               	addlw	-4
  8406  0154D4  6ED9               	movwf	fsr2l,c
  8407  0154D6  50E2               	movf	fsr1h,w,c
  8408  0154D8  6EDA               	movwf	fsr2h,c
  8409  0154DA  0EFF               	movlw	255
  8410  0154DC  22DA               	addwfc	fsr2h,f,c
  8411  0154DE  006F FF7B FFF6     	movff	postinc2,tblptrl
  8412  0154E4  006F FF77 FFF7     	movff	postdec2,tblptrh
  8413  0154EA                     	if	0	;tblptru may be non-zero
  8414  0154EA                     	endif
  8415  0154EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8416  0154EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8417  0154EC  6EF8               	movwf	tblptru,c
  8418  0154EE                     	endif
  8419  0154EE  0008               	tblrd		*
  8420  0154F0  50F5               	movf	tablat,w,c
  8421  0154F2  5E35               	subwf	btemp^0,f,c
  8422  0154F4  0E00               	movlw	0
  8423  0154F6  5A36               	subwfb	(btemp+1)^0,f,c
  8424  0154F8                     l2775:
  8425                           
  8426                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  8427  0154F8  0EF6               	movlw	246
  8428  0154FA  26E1               	addwf	fsr1l,f,c
  8429  0154FC  0EFF               	movlw	255
  8430  0154FE  22E2               	addwfc	fsr1h,f,c
  8431  015500  0012               	return		;funcret
  8432  015502                     __end_of_strncmp:
  8433                           	opt callstack 0
  8434                           
  8435 ;; *************** function _stoa *****************
  8436 ;; Defined at:
  8437 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8440 ;;		 -> f(6), NULL(0), 
  8441 ;;  s               2  [STACK] PTR unsigned char 
  8442 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  8443 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  8444 ;;		 -> STR_3(4), V(189), 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  nuls            7  [STACK] unsigned char [7]
  8447 ;;  l               2  [STACK] int 
  8448 ;;  p               2  [STACK] int 
  8449 ;;  cp              2  [STACK] PTR unsigned char 
  8450 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  8451 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  8452 ;;		 -> STR_7(4), STR_3(4), V(189), 
  8453 ;;  w               2  [STACK] int 
  8454 ;;  i               2  [STACK] int 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  2  [STACK] int 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/4
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:    9
  8471 ;; This function calls:
  8472 ;;		_fputc
  8473 ;;		_strlen
  8474 ;; This function is called by:
  8475 ;;		_vfpfcnvrt
  8476 ;; This function uses a reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text37
  8480  014532                     __ptext37:
  8481                           	opt callstack 0
  8482  014532                     _stoa:
  8483                           	opt callstack 0
  8484                           
  8485                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8486  014532  0E11               	movlw	17
  8487  014534  26E1               	addwf	fsr1l,f,c
  8488  014536  0E00               	movlw	0
  8489  014538  22E2               	addwfc	fsr1h,f,c
  8490                           
  8491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8492                           
  8493                           ;incstack = 0
  8494  01453A  EE20  F0BD         	lfsr	2,stoa@F1166
  8495                           
  8496                           ;stkvar	_nuls @ sp[(-17)+0]
  8497  01453E  0E07               	movlw	7
  8498  014540  6E35               	movwf	btemp^0,c
  8499  014542  0EEF               	movlw	-17
  8500  014544                     us904999:
  8501  014544  006F FF7B FFE3     	movff	postinc2,plusw1
  8502  01454A  28E8               	incf	wreg,w,c
  8503  01454C  2E35               	decfsz	btemp^0,f,c
  8504  01454E  D7FA               	bra	us904999
  8505                           
  8506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8507                           ;stkvar	_s @ sp[(-17)+-4]
  8508  014550  0EEB               	movlw	-21
  8509  014552  006F FF8C  F03F    	movff	plusw1,btemp+10
  8510  014558  0EEC               	movlw	-20
  8511  01455A  006F FF8C  F040    	movff	plusw1,btemp+11
  8512                           
  8513                           ;stkvar	_cp @ sp[(-17)+11]
  8514  014560  0EFB               	movlw	-5
  8515  014562  0060  F103  FFE3   	movff	btemp+11,plusw1
  8516  014568  0EFA               	movlw	-6
  8517  01456A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8518                           
  8519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8520                           ;stkvar	_cp @ sp[(-17)+11]
  8521  014570  0EFA               	movlw	-6
  8522  014572  006F FF8C  F035    	movff	plusw1,btemp
  8523  014578  0EFB               	movlw	-5
  8524  01457A  50E3               	movf	plusw1,w,c
  8525  01457C  1035               	iorwf	btemp^0,w,c
  8526  01457E  A4D8               	btfss	status,2,c
  8527  014580  D00E               	goto	l9222
  8528                           
  8529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8530                           ;stkvar	_nuls @ sp[(-17)+0]
  8531  014582  0EEF               	movlw	239
  8532  014584  24E1               	addwf	fsr1l,w,c
  8533  014586  6E3F               	movwf	(btemp+10)^0,c
  8534  014588  0EFF               	movlw	255
  8535  01458A  20E2               	addwfc	fsr1h,w,c
  8536  01458C  6E40               	movwf	(btemp+11)^0,c
  8537                           
  8538                           ;stkvar	_cp @ sp[(-17)+11]
  8539  01458E  0EFB               	movlw	-5
  8540  014590  0060  F103  FFE3   	movff	btemp+11,plusw1
  8541  014596  0EFA               	movlw	-6
  8542  014598  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8543  01459E                     l9222:
  8544                           
  8545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8546                           ;stkvar	_cp @ sp[(-17)+11]
  8547  01459E  0EFA               	movlw	-6
  8548  0145A0  006F FF8F FFE6     	movff	plusw1,postinc1
  8549  0145A6  006F FF8F FFE6     	movff	plusw1,postinc1
  8550  0145AC  EC6B  F0B4         	call	_strlen	;wreg free
  8551                           
  8552                           ;stkvar	_l @ sp[(-17)+7]
  8553  0145B0  0EF6               	movlw	-10
  8554  0145B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8555  0145B8  0EF7               	movlw	-9
  8556  0145BA  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8557                           
  8558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8559                           ;stkvar	_p @ sp[(-17)+9]
  8560  0145C0  0EF8               	movlw	-8
  8561  0145C2  0060  F083  FFE3   	movff	_prec,plusw1
  8562  0145C8  0EF9               	movlw	-7
  8563  0145CA  0060  F087  FFE3   	movff	_prec+1,plusw1
  8564                           
  8565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8566                           ;stkvar	_p @ sp[(-17)+9]
  8567  0145D0  0EF9               	movlw	-7
  8568  0145D2  BEE3               	btfsc	plusw1,7,c
  8569  0145D4  D023               	goto	l1852
  8570                           
  8571                           ;stkvar	_l @ sp[(-17)+7]
  8572                           ;stkvar	_p @ sp[(-17)+9]
  8573  0145D6  50E1               	movf	fsr1l,w,c
  8574  0145D8  0FF8               	addlw	-8
  8575  0145DA  6ED9               	movwf	fsr2l,c
  8576  0145DC  50E2               	movf	fsr1h,w,c
  8577  0145DE  6EDA               	movwf	fsr2h,c
  8578  0145E0  0EFF               	movlw	255
  8579  0145E2  22DA               	addwfc	fsr2h,f,c
  8580  0145E4  0EF6               	movlw	-10
  8581  0145E6  50E3               	movf	plusw1,w,c
  8582  0145E8  5CDE               	subwf	postinc2,w,c
  8583  0145EA  50DE               	movf	postinc2,w,c
  8584  0145EC  0A80               	xorlw	128
  8585  0145EE  6E35               	movwf	btemp^0,c
  8586  0145F0  0EF7               	movlw	-9
  8587  0145F2  50E3               	movf	plusw1,w,c
  8588  0145F4  0A80               	xorlw	128
  8589  0145F6  5835               	subwfb	btemp^0,w,c
  8590  0145F8  B0D8               	btfsc	status,0,c
  8591  0145FA  D010               	goto	l1852
  8592                           
  8593                           ;stkvar	_p @ sp[(-17)+9]
  8594                           ;stkvar	_l @ sp[(-17)+7]
  8595  0145FC  0EF8               	movlw	-8
  8596  0145FE  006F FF8C  F035    	movff	plusw1,btemp
  8597  014604  0EF6               	movlw	-10
  8598  014606  0060  F0D7  FFE3   	movff	btemp,plusw1
  8599  01460C  0EF9               	movlw	-7
  8600  01460E  006F FF8C  F035    	movff	plusw1,btemp
  8601  014614  0EF7               	movlw	-9
  8602  014616  0060  F0D7  FFE3   	movff	btemp,plusw1
  8603  01461C                     l1852:
  8604                           
  8605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8606                           ;stkvar	_l @ sp[(-17)+7]
  8607                           ;stkvar	_p @ sp[(-17)+9]
  8608  01461C  0EF6               	movlw	-10
  8609  01461E  006F FF8C  F035    	movff	plusw1,btemp
  8610  014624  0EF8               	movlw	-8
  8611  014626  0060  F0D7  FFE3   	movff	btemp,plusw1
  8612  01462C  0EF7               	movlw	-9
  8613  01462E  006F FF8C  F035    	movff	plusw1,btemp
  8614  014634  0EF9               	movlw	-7
  8615  014636  0060  F0D7  FFE3   	movff	btemp,plusw1
  8616                           
  8617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8618                           ;stkvar	_w @ sp[(-17)+13]
  8619  01463C  0EFC               	movlw	-4
  8620  01463E  0060  F07B  FFE3   	movff	_width,plusw1
  8621  014644  0EFD               	movlw	-3
  8622  014646  0060  F07F  FFE3   	movff	_width+1,plusw1
  8623                           
  8624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8625  01464C  A022               	btfss	_flags^0,0,c
  8626  01464E  D01F               	goto	l9242
  8627  014650  D031               	goto	u9090
  8628  014652                     l9238:
  8629                           
  8630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8631                           ;stkvar	_fp @ sp[(-17)+-2]
  8632  014652  0EED               	movlw	-19
  8633  014654  006F FF8F FFE6     	movff	plusw1,postinc1
  8634  01465A  006F FF8F FFE6     	movff	plusw1,postinc1
  8635  014660  0E20               	movlw	32
  8636  014662  6EE6               	movwf	postinc1,c
  8637  014664  0E00               	movlw	0
  8638  014666  6EE6               	movwf	postinc1,c
  8639  014668  ECB8  F0AE         	call	_fputc	;wreg free
  8640                           
  8641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8642                           ;stkvar	_l @ sp[(-17)+7]
  8643  01466C  0EF6               	movlw	-10
  8644  01466E  50E3               	movf	plusw1,w,c
  8645  014670  0F01               	addlw	1
  8646  014672  6E35               	movwf	btemp^0,c
  8647  014674  0EF6               	movlw	-10
  8648  014676  0060  F0D7  FFE3   	movff	btemp,plusw1
  8649  01467C  6A35               	clrf	btemp^0,c
  8650  01467E  0EF7               	movlw	-9
  8651  014680  50E3               	movf	plusw1,w,c
  8652  014682  2035               	addwfc	btemp^0,w,c
  8653  014684  6E35               	movwf	btemp^0,c
  8654  014686  0EF7               	movlw	-9
  8655  014688  0060  F0D7  FFE3   	movff	btemp,plusw1
  8656  01468E                     l9242:
  8657                           
  8658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8659                           ;stkvar	_w @ sp[(-17)+13]
  8660                           ;stkvar	_l @ sp[(-17)+7]
  8661  01468E  50E1               	movf	fsr1l,w,c
  8662  014690  0FF6               	addlw	-10
  8663  014692  6ED9               	movwf	fsr2l,c
  8664  014694  50E2               	movf	fsr1h,w,c
  8665  014696  6EDA               	movwf	fsr2h,c
  8666  014698  0EFF               	movlw	255
  8667  01469A  22DA               	addwfc	fsr2h,f,c
  8668  01469C  0EFC               	movlw	-4
  8669  01469E  50E3               	movf	plusw1,w,c
  8670  0146A0  5CDE               	subwf	postinc2,w,c
  8671  0146A2  50DE               	movf	postinc2,w,c
  8672  0146A4  0A80               	xorlw	128
  8673  0146A6  6E35               	movwf	btemp^0,c
  8674  0146A8  0EFD               	movlw	-3
  8675  0146AA  50E3               	movf	plusw1,w,c
  8676  0146AC  0A80               	xorlw	128
  8677  0146AE  5835               	subwfb	btemp^0,w,c
  8678  0146B0  A0D8               	btfss	status,0,c
  8679  0146B2  D7CF               	goto	l9238
  8680  0146B4                     u9090:
  8681                           
  8682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8683                           ;stkvar	_i @ sp[(-17)+15]
  8684  0146B4  0EFE               	movlw	-2
  8685  0146B6  6AE3               	clrf	plusw1,c
  8686  0146B8  0EFF               	movlw	-1
  8687  0146BA  6AE3               	clrf	plusw1,c
  8688                           
  8689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8690  0146BC  D045               	goto	l9252
  8691  0146BE                     l9246:
  8692                           
  8693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8694                           ;stkvar	_fp @ sp[(-17)+-2]
  8695  0146BE  0EED               	movlw	-19
  8696  0146C0  006F FF8F FFE6     	movff	plusw1,postinc1
  8697  0146C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8698                           
  8699                           ;stkvar	_cp @ sp[(-19)+11]
  8700  0146CC  0EF8               	movlw	-8
  8701  0146CE  006F FF8F FFF6     	movff	plusw1,tblptrl
  8702  0146D4  0EF9               	movlw	-7
  8703  0146D6  006F FF8F FFF7     	movff	plusw1,tblptrh
  8704  0146DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8705  0146DE  6EF8               	movwf	tblptru,c
  8706  0146E0  0E1F               	movlw	(high __ramtop+-1)
  8707  0146E2  64F7               	cpfsgt	tblptrh,c
  8708  0146E4  D003               	bra	u9107
  8709  0146E6  0008               	tblrd		*
  8710  0146E8  50F5               	movf	tablat,w,c
  8711  0146EA  D007               	bra	u9100
  8712  0146EC                     u9107:
  8713  0146EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8714  0146F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8715  0146F8  50EF               	movf	indf0,w,c
  8716  0146FA                     u9100:
  8717  0146FA  6EE6               	movwf	postinc1,c
  8718  0146FC  0E00               	movlw	0
  8719  0146FE  6EE6               	movwf	postinc1,c
  8720  014700  ECB8  F0AE         	call	_fputc	;wreg free
  8721                           
  8722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8723                           ;stkvar	_cp @ sp[(-17)+11]
  8724  014704  0EFA               	movlw	-6
  8725  014706  50E3               	movf	plusw1,w,c
  8726  014708  0F01               	addlw	1
  8727  01470A  6E35               	movwf	btemp^0,c
  8728  01470C  0EFA               	movlw	-6
  8729  01470E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8730  014714  6A35               	clrf	btemp^0,c
  8731  014716  0EFB               	movlw	-5
  8732  014718  50E3               	movf	plusw1,w,c
  8733  01471A  2035               	addwfc	btemp^0,w,c
  8734  01471C  6E35               	movwf	btemp^0,c
  8735  01471E  0EFB               	movlw	-5
  8736  014720  0060  F0D7  FFE3   	movff	btemp,plusw1
  8737                           
  8738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8739                           ;stkvar	_i @ sp[(-17)+15]
  8740  014726  0EFE               	movlw	-2
  8741  014728  50E3               	movf	plusw1,w,c
  8742  01472A  0F01               	addlw	1
  8743  01472C  6E35               	movwf	btemp^0,c
  8744  01472E  0EFE               	movlw	-2
  8745  014730  0060  F0D7  FFE3   	movff	btemp,plusw1
  8746  014736  6A35               	clrf	btemp^0,c
  8747  014738  0EFF               	movlw	-1
  8748  01473A  50E3               	movf	plusw1,w,c
  8749  01473C  2035               	addwfc	btemp^0,w,c
  8750  01473E  6E35               	movwf	btemp^0,c
  8751  014740  0EFF               	movlw	-1
  8752  014742  0060  F0D7  FFE3   	movff	btemp,plusw1
  8753  014748                     l9252:
  8754                           
  8755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8756                           ;stkvar	_p @ sp[(-17)+9]
  8757                           ;stkvar	_i @ sp[(-17)+15]
  8758  014748  50E1               	movf	fsr1l,w,c
  8759  01474A  0FFE               	addlw	-2
  8760  01474C  6ED9               	movwf	fsr2l,c
  8761  01474E  50E2               	movf	fsr1h,w,c
  8762  014750  6EDA               	movwf	fsr2h,c
  8763  014752  0EFF               	movlw	255
  8764  014754  22DA               	addwfc	fsr2h,f,c
  8765  014756  0EF8               	movlw	-8
  8766  014758  50E3               	movf	plusw1,w,c
  8767  01475A  5CDE               	subwf	postinc2,w,c
  8768  01475C  50DE               	movf	postinc2,w,c
  8769  01475E  0A80               	xorlw	128
  8770  014760  6E35               	movwf	btemp^0,c
  8771  014762  0EF9               	movlw	-7
  8772  014764  50E3               	movf	plusw1,w,c
  8773  014766  0A80               	xorlw	128
  8774  014768  5835               	subwfb	btemp^0,w,c
  8775  01476A  A0D8               	btfss	status,0,c
  8776  01476C  D7A8               	goto	l9246
  8777                           
  8778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8779  01476E  B022               	btfsc	_flags^0,0,c
  8780  014770  D01F               	goto	l9260
  8781  014772  D031               	goto	u9130
  8782  014774                     l9256:
  8783                           
  8784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8785                           ;stkvar	_fp @ sp[(-17)+-2]
  8786  014774  0EED               	movlw	-19
  8787  014776  006F FF8F FFE6     	movff	plusw1,postinc1
  8788  01477C  006F FF8F FFE6     	movff	plusw1,postinc1
  8789  014782  0E20               	movlw	32
  8790  014784  6EE6               	movwf	postinc1,c
  8791  014786  0E00               	movlw	0
  8792  014788  6EE6               	movwf	postinc1,c
  8793  01478A  ECB8  F0AE         	call	_fputc	;wreg free
  8794                           
  8795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8796                           ;stkvar	_l @ sp[(-17)+7]
  8797  01478E  0EF6               	movlw	-10
  8798  014790  50E3               	movf	plusw1,w,c
  8799  014792  0F01               	addlw	1
  8800  014794  6E35               	movwf	btemp^0,c
  8801  014796  0EF6               	movlw	-10
  8802  014798  0060  F0D7  FFE3   	movff	btemp,plusw1
  8803  01479E  6A35               	clrf	btemp^0,c
  8804  0147A0  0EF7               	movlw	-9
  8805  0147A2  50E3               	movf	plusw1,w,c
  8806  0147A4  2035               	addwfc	btemp^0,w,c
  8807  0147A6  6E35               	movwf	btemp^0,c
  8808  0147A8  0EF7               	movlw	-9
  8809  0147AA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8810  0147B0                     l9260:
  8811                           
  8812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8813                           ;stkvar	_w @ sp[(-17)+13]
  8814                           ;stkvar	_l @ sp[(-17)+7]
  8815  0147B0  50E1               	movf	fsr1l,w,c
  8816  0147B2  0FF6               	addlw	-10
  8817  0147B4  6ED9               	movwf	fsr2l,c
  8818  0147B6  50E2               	movf	fsr1h,w,c
  8819  0147B8  6EDA               	movwf	fsr2h,c
  8820  0147BA  0EFF               	movlw	255
  8821  0147BC  22DA               	addwfc	fsr2h,f,c
  8822  0147BE  0EFC               	movlw	-4
  8823  0147C0  50E3               	movf	plusw1,w,c
  8824  0147C2  5CDE               	subwf	postinc2,w,c
  8825  0147C4  50DE               	movf	postinc2,w,c
  8826  0147C6  0A80               	xorlw	128
  8827  0147C8  6E35               	movwf	btemp^0,c
  8828  0147CA  0EFD               	movlw	-3
  8829  0147CC  50E3               	movf	plusw1,w,c
  8830  0147CE  0A80               	xorlw	128
  8831  0147D0  5835               	subwfb	btemp^0,w,c
  8832  0147D2  A0D8               	btfss	status,0,c
  8833  0147D4  D7CF               	goto	l9256
  8834  0147D6                     u9130:
  8835                           
  8836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  8837                           ;stkvar	_l @ sp[(-17)+7]
  8838  0147D6  0EF6               	movlw	-10
  8839  0147D8  006F FF8C  F035    	movff	plusw1,btemp
  8840  0147DE  0EF7               	movlw	-9
  8841  0147E0  006F FF8C  F036    	movff	plusw1,btemp+1
  8842                           
  8843                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8844  0147E6  0EEB               	movlw	235
  8845  0147E8  26E1               	addwf	fsr1l,f,c
  8846  0147EA  0EFF               	movlw	255
  8847  0147EC  22E2               	addwfc	fsr1h,f,c
  8848  0147EE  0012               	return		;funcret
  8849  0147F0                     __end_of_stoa:
  8850                           	opt callstack 0
  8851                           
  8852 ;; *************** function _efgtoa *****************
  8853 ;; Defined at:
  8854 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8857 ;;		 -> f(6), NULL(0), 
  8858 ;;  f               4  [STACK] PTR struct _IO_FILE
  8859 ;;  c               1  [STACK] unsigned char 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;  u               4  [STACK] unsigned char 
  8862 ;;  g               4  [STACK] unsigned char 
  8863 ;;  l               4  [STACK] unsigned char 
  8864 ;;  h               4  [STACK] unsigned char 
  8865 ;;  ou              4  [STACK] unsigned char 
  8866 ;;  n               2  [STACK] int 
  8867 ;;  e               2  [STACK] int 
  8868 ;;  i               2  [STACK] int 
  8869 ;;  w               2  [STACK] int 
  8870 ;;  p               2  [STACK] int 
  8871 ;;  sign            2  [STACK] int 
  8872 ;;  d               2  [STACK] int 
  8873 ;;  ne              2  [STACK] int 
  8874 ;;  m               2  [STACK] int 
  8875 ;;  pp              2  [STACK] int 
  8876 ;;  t               2  [STACK] int 
  8877 ;;  mode            1  [STACK] unsigned char 
  8878 ;;  nmode           1  [STACK] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  2  [STACK] int 
  8881 ;; Registers used:
  8882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/4
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:   11
  8895 ;; This function calls:
  8896 ;;		___awdiv
  8897 ;;		___awmod
  8898 ;;		___fladd
  8899 ;;		___fldiv
  8900 ;;		___fleq
  8901 ;;		___flge
  8902 ;;		___flmul
  8903 ;;		___flneg
  8904 ;;		___flsub
  8905 ;;		___fltol
  8906 ;;		___fpclassifyf
  8907 ;;		_floorf
  8908 ;;		_isupper
  8909 ;;		_pad
  8910 ;;		_strcpy
  8911 ;;		_tolower
  8912 ;; This function is called by:
  8913 ;;		_vfpfcnvrt
  8914 ;; This function uses a reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text38
  8918  010000                     __ptext38:
  8919                           	opt callstack 0
  8920  010000                     _efgtoa:
  8921                           	opt callstack 0
  8922                           
  8923                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8924  010000  0E38               	movlw	56
  8925  010002  26E1               	addwf	fsr1l,f,c
  8926  010004  0E00               	movlw	0
  8927  010006  22E2               	addwfc	fsr1h,f,c
  8928                           
  8929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  8930                           ;stkvar	_sign @ sp[(-56)+42]
  8931                           
  8932                           ;incstack = 0
  8933  010008  0EF2               	movlw	-14
  8934  01000A  6AE3               	clrf	plusw1,c
  8935  01000C  0EF3               	movlw	-13
  8936  01000E  6AE3               	clrf	plusw1,c
  8937                           
  8938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  8939                           ;stkvar	_f @ sp[(-56)+-6]
  8940  010010  0EC2               	movlw	-62
  8941  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  8942  010018  0EC3               	movlw	-61
  8943  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  8944  010020  0EC4               	movlw	-60
  8945  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  8946  010028  0EC5               	movlw	-59
  8947  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  8948                           
  8949                           ;stkvar	_g @ sp[(-56)+16]
  8950  010030  0ED8               	movlw	-40
  8951  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8952  010038  0ED9               	movlw	-39
  8953  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8954  010040  0EDA               	movlw	-38
  8955  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8956  010048  0EDB               	movlw	-37
  8957  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  8958                           
  8959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  8960                           ;stkvar	_g @ sp[(-56)+16]
  8961  010050  0EDB               	movlw	-37
  8962  010052  AEE3               	btfss	plusw1,7,c
  8963  010054  D02B               	goto	l8920
  8964                           
  8965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  8966  010056  0E01               	movlw	1
  8967  010058  6E3F               	movwf	(btemp+10)^0,c
  8968  01005A  0E00               	movlw	0
  8969  01005C  6E40               	movwf	(btemp+11)^0,c
  8970                           
  8971                           ;stkvar	_sign @ sp[(-56)+42]
  8972  01005E  0EF2               	movlw	-14
  8973  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8974  010066  0EF3               	movlw	-13
  8975  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  8976                           
  8977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  8978                           ;stkvar	_g @ sp[(-56)+16]
  8979  01006E  0ED8               	movlw	-40
  8980  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  8981  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  8982  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  8983  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  8984  010088  EC1C  F0B9         	call	___flneg	;wreg free
  8985                           
  8986                           ;stkvar	_g @ sp[(-56)+16]
  8987  01008C  0ED8               	movlw	-40
  8988  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8989  010094  0ED9               	movlw	-39
  8990  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8991  01009C  0EDA               	movlw	-38
  8992  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  8993  0100A4  0EDB               	movlw	-37
  8994  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  8995  0100AC                     l8920:
  8996                           
  8997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  8998                           ;stkvar	_n @ sp[(-56)+32]
  8999  0100AC  0EE8               	movlw	-24
  9000  0100AE  6AE3               	clrf	plusw1,c
  9001  0100B0  0EE9               	movlw	-23
  9002  0100B2  6AE3               	clrf	plusw1,c
  9003                           
  9004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9005                           ;stkvar	_w @ sp[(-56)+38]
  9006  0100B4  0EEE               	movlw	-18
  9007  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9008  0100BC  0EEF               	movlw	-17
  9009  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9010                           
  9011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9012                           ;stkvar	_sign @ sp[(-56)+42]
  9013  0100C4  0EF2               	movlw	-14
  9014  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9015  0100CC  0EF3               	movlw	-13
  9016  0100CE  50E3               	movf	plusw1,w,c
  9017  0100D0  1035               	iorwf	btemp^0,w,c
  9018  0100D2  A4D8               	btfss	status,2,c
  9019  0100D4  D002               	goto	u8540
  9020  0100D6  A422               	btfss	_flags^0,2,c
  9021  0100D8  D036               	goto	l8940
  9022  0100DA                     u8540:
  9023                           
  9024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9025                           ;stkvar	_sign @ sp[(-56)+42]
  9026  0100DA  0EF2               	movlw	-14
  9027  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9028  0100E2  0EF3               	movlw	-13
  9029  0100E4  50E3               	movf	plusw1,w,c
  9030  0100E6  1035               	iorwf	btemp^0,w,c
  9031  0100E8  A4D8               	btfss	status,2,c
  9032  0100EA  D002               	goto	l8932
  9033  0100EC  0E2B               	movlw	43
  9034  0100EE  D001               	goto	L6
  9035  0100F0                     l8932:
  9036  0100F0  0E2D               	movlw	45
  9037  0100F2                     L6:
  9038  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9039  0100F4  0E00               	movlw	0
  9040  0100F6  6E40               	movwf	(btemp+11)^0,c
  9041                           
  9042                           ;stkvar	_efgtoa$4089 @ sp[(-56)+10]
  9043  0100F8  0ED2               	movlw	-46
  9044  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9045  010100  0ED3               	movlw	-45
  9046  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9047                           
  9048                           ;stkvar	_efgtoa$4089 @ sp[(-56)+10]
  9049  010108  0ED2               	movlw	-46
  9050  01010A  006F FF8C  F1A8    	movff	plusw1,_dbuf
  9051                           
  9052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9053                           ;stkvar	_n @ sp[(-56)+32]
  9054  010110  0EE8               	movlw	-24
  9055  010112  50E3               	movf	plusw1,w,c
  9056  010114  0F01               	addlw	1
  9057  010116  6E35               	movwf	btemp^0,c
  9058  010118  0EE8               	movlw	-24
  9059  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9060  010120  6A35               	clrf	btemp^0,c
  9061  010122  0EE9               	movlw	-23
  9062  010124  50E3               	movf	plusw1,w,c
  9063  010126  2035               	addwfc	btemp^0,w,c
  9064  010128  6E35               	movwf	btemp^0,c
  9065  01012A  0EE9               	movlw	-23
  9066  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9067                           
  9068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9069                           ;stkvar	_w @ sp[(-56)+38]
  9070  010132  50E1               	movf	fsr1l,w,c
  9071  010134  0FEE               	addlw	-18
  9072  010136  6ED9               	movwf	fsr2l,c
  9073  010138  50E2               	movf	fsr1h,w,c
  9074  01013A  6EDA               	movwf	fsr2h,c
  9075  01013C  0EFF               	movlw	255
  9076  01013E  22DA               	addwfc	fsr2h,f,c
  9077  010140  06DE               	decf	postinc2,f,c
  9078  010142  0E00               	movlw	0
  9079  010144  5ADD               	subwfb	postdec2,f,c
  9080  010146                     l8940:
  9081                           
  9082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9083                           ;stkvar	_g @ sp[(-56)+16]
  9084  010146  0ED8               	movlw	-40
  9085  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9086  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9087  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9088  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9089  010160  EC81  F0AA         	call	___fpclassifyf	;wreg free
  9090  010164  0435               	decf	btemp^0,w,c
  9091  010166  1036               	iorwf	(btemp+1)^0,w,c
  9092  010168  A4D8               	btfss	status,2,c
  9093  01016A  D076               	goto	l8958
  9094  01016C  0EBF               	movlw	191
  9095  01016E  6E3F               	movwf	(btemp+10)^0,c
  9096  010170  0EFF               	movlw	255
  9097  010172  6E40               	movwf	(btemp+11)^0,c
  9098                           
  9099                           ;stkvar	_c @ sp[(-56)+-7]
  9100  010174  0EC1               	movlw	-63
  9101  010176  50E3               	movf	plusw1,w,c
  9102  010178  6E3D               	movwf	(btemp+8)^0,c
  9103  01017A  6A3E               	clrf	(btemp+9)^0,c
  9104  01017C  503F               	movf	(btemp+10)^0,w,c
  9105  01017E  263D               	addwf	(btemp+8)^0,f,c
  9106  010180  5040               	movf	(btemp+11)^0,w,c
  9107  010182  223E               	addwfc	(btemp+9)^0,f,c
  9108  010184  503E               	movf	(btemp+9)^0,w,c
  9109  010186  E106               	bnz	u8570
  9110  010188  0E1A               	movlw	26
  9111  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9112  01018C  B0D8               	btfsc	status,0,c
  9113  01018E  D002               	goto	u8570
  9114  010190  0E01               	movlw	1
  9115  010192  D001               	goto	u8580
  9116  010194                     u8570:
  9117  010194  0E00               	movlw	0
  9118  010196                     u8580:
  9119  010196  6E3F               	movwf	(btemp+10)^0,c
  9120  010198  6A40               	clrf	(btemp+11)^0,c
  9121                           
  9122                           ;stkvar	_efgtoa$4090 @ sp[(-56)+8]
  9123  01019A  0ED0               	movlw	-48
  9124  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9125  0101A2  0ED1               	movlw	-47
  9126  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9127                           
  9128                           ;stkvar	_efgtoa$4090 @ sp[(-56)+8]
  9129  0101AA  0ED0               	movlw	-48
  9130  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9131  0101B2  0ED1               	movlw	-47
  9132  0101B4  50E3               	movf	plusw1,w,c
  9133  0101B6  1035               	iorwf	btemp^0,w,c
  9134  0101B8  B4D8               	btfsc	status,2,c
  9135  0101BA  D017               	goto	l8950
  9136                           
  9137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9138  0101BC  0EE2               	movlw	low STR_32
  9139  0101BE  6EE6               	movwf	postinc1,c
  9140  0101C0  0EFF               	movlw	high STR_32
  9141  0101C2  6EE6               	movwf	postinc1,c
  9142                           
  9143                           ;stkvar	_n @ sp[(-58)+32]
  9144  0101C4  0EA8               	movlw	low _dbuf
  9145  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9146  0101C8  0E01               	movlw	high _dbuf
  9147  0101CA  6E40               	movwf	(btemp+11)^0,c
  9148  0101CC  0EE6               	movlw	-26
  9149  0101CE  50E3               	movf	plusw1,w,c
  9150  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9151  0101D2  0EE7               	movlw	-25
  9152  0101D4  50E3               	movf	plusw1,w,c
  9153  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9154  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9155  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9156  0101E4  ECE1  F0B1         	call	_strcpy	;wreg free
  9157                           
  9158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9159  0101E8  D016               	goto	l8952
  9160  0101EA                     l8950:
  9161                           
  9162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9163  0101EA  0EEA               	movlw	low STR_33
  9164  0101EC  6EE6               	movwf	postinc1,c
  9165  0101EE  0EFF               	movlw	high STR_33
  9166  0101F0  6EE6               	movwf	postinc1,c
  9167                           
  9168                           ;stkvar	_n @ sp[(-58)+32]
  9169  0101F2  0EA8               	movlw	low _dbuf
  9170  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9171  0101F6  0E01               	movlw	high _dbuf
  9172  0101F8  6E40               	movwf	(btemp+11)^0,c
  9173  0101FA  0EE6               	movlw	-26
  9174  0101FC  50E3               	movf	plusw1,w,c
  9175  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9176  010200  0EE7               	movlw	-25
  9177  010202  50E3               	movf	plusw1,w,c
  9178  010204  2240               	addwfc	(btemp+11)^0,f,c
  9179  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9180  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9181  010212  ECE1  F0B1         	call	_strcpy	;wreg free
  9182  010216                     l8952:
  9183                           
  9184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9185                           ;stkvar	_w @ sp[(-56)+38]
  9186  010216  50E1               	movf	fsr1l,w,c
  9187  010218  0FEE               	addlw	-18
  9188  01021A  6ED9               	movwf	fsr2l,c
  9189  01021C  50E2               	movf	fsr1h,w,c
  9190  01021E  6EDA               	movwf	fsr2h,c
  9191  010220  0EFF               	movlw	255
  9192  010222  22DA               	addwfc	fsr2h,f,c
  9193  010224  0EFD               	movlw	253
  9194  010226  26DE               	addwf	postinc2,f,c
  9195  010228  0EFF               	movlw	255
  9196  01022A  22DD               	addwfc	postdec2,f,c
  9197  01022C                     l8954:
  9198                           
  9199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9200                           ;stkvar	_w @ sp[(-56)+38]
  9201  01022C  0EEE               	movlw	-18
  9202  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9203  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9204  01023A  0EA8               	movlw	low _dbuf
  9205  01023C  6EE6               	movwf	postinc1,c
  9206  01023E  0E01               	movlw	high _dbuf
  9207  010240  6EE6               	movwf	postinc1,c
  9208                           
  9209                           ;stkvar	_fp @ sp[(-60)+-2]
  9210  010242  0EC2               	movlw	-62
  9211  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9212  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9213  010250  ECD6  F0AF         	call	_pad	;wreg free
  9214  010254  EF1D  F089         	goto	l1770
  9215  010258                     l8958:
  9216                           
  9217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9218                           ;stkvar	_g @ sp[(-56)+16]
  9219  010258  0ED8               	movlw	-40
  9220  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9221  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9222  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9223  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9224  010272  EC81  F0AA         	call	___fpclassifyf	;wreg free
  9225  010276  5035               	movf	btemp^0,w,c
  9226  010278  1036               	iorwf	(btemp+1)^0,w,c
  9227  01027A  A4D8               	btfss	status,2,c
  9228  01027C  D056               	goto	l8976
  9229  01027E  0EBF               	movlw	191
  9230  010280  6E3F               	movwf	(btemp+10)^0,c
  9231  010282  0EFF               	movlw	255
  9232  010284  6E40               	movwf	(btemp+11)^0,c
  9233                           
  9234                           ;stkvar	_c @ sp[(-56)+-7]
  9235  010286  0EC1               	movlw	-63
  9236  010288  50E3               	movf	plusw1,w,c
  9237  01028A  6E3D               	movwf	(btemp+8)^0,c
  9238  01028C  6A3E               	clrf	(btemp+9)^0,c
  9239  01028E  503F               	movf	(btemp+10)^0,w,c
  9240  010290  263D               	addwf	(btemp+8)^0,f,c
  9241  010292  5040               	movf	(btemp+11)^0,w,c
  9242  010294  223E               	addwfc	(btemp+9)^0,f,c
  9243  010296  503E               	movf	(btemp+9)^0,w,c
  9244  010298  E106               	bnz	u8610
  9245  01029A  0E1A               	movlw	26
  9246  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9247  01029E  B0D8               	btfsc	status,0,c
  9248  0102A0  D002               	goto	u8610
  9249  0102A2  0E01               	movlw	1
  9250  0102A4  D001               	goto	u8620
  9251  0102A6                     u8610:
  9252  0102A6  0E00               	movlw	0
  9253  0102A8                     u8620:
  9254  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9255  0102AA  6A40               	clrf	(btemp+11)^0,c
  9256                           
  9257                           ;stkvar	_efgtoa$4094 @ sp[(-56)+6]
  9258  0102AC  0ECE               	movlw	-50
  9259  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9260  0102B4  0ECF               	movlw	-49
  9261  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9262                           
  9263                           ;stkvar	_efgtoa$4094 @ sp[(-56)+6]
  9264  0102BC  0ECE               	movlw	-50
  9265  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9266  0102C4  0ECF               	movlw	-49
  9267  0102C6  50E3               	movf	plusw1,w,c
  9268  0102C8  1035               	iorwf	btemp^0,w,c
  9269  0102CA  B4D8               	btfsc	status,2,c
  9270  0102CC  D017               	goto	l8968
  9271                           
  9272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9273  0102CE  0EE6               	movlw	low STR_36
  9274  0102D0  6EE6               	movwf	postinc1,c
  9275  0102D2  0EFF               	movlw	high STR_36
  9276  0102D4  6EE6               	movwf	postinc1,c
  9277                           
  9278                           ;stkvar	_n @ sp[(-58)+32]
  9279  0102D6  0EA8               	movlw	low _dbuf
  9280  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9281  0102DA  0E01               	movlw	high _dbuf
  9282  0102DC  6E40               	movwf	(btemp+11)^0,c
  9283  0102DE  0EE6               	movlw	-26
  9284  0102E0  50E3               	movf	plusw1,w,c
  9285  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9286  0102E4  0EE7               	movlw	-25
  9287  0102E6  50E3               	movf	plusw1,w,c
  9288  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9289  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9290  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9291  0102F6  ECE1  F0B1         	call	_strcpy	;wreg free
  9292                           
  9293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9294  0102FA  D78D               	goto	l8952
  9295  0102FC                     l8968:
  9296                           
  9297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9298  0102FC  0EEE               	movlw	low STR_37
  9299  0102FE  6EE6               	movwf	postinc1,c
  9300  010300  0EFF               	movlw	high STR_37
  9301  010302  6EE6               	movwf	postinc1,c
  9302                           
  9303                           ;stkvar	_n @ sp[(-58)+32]
  9304  010304  0EA8               	movlw	low _dbuf
  9305  010306  6E3F               	movwf	(btemp+10)^0,c
  9306  010308  0E01               	movlw	high _dbuf
  9307  01030A  6E40               	movwf	(btemp+11)^0,c
  9308  01030C  0EE6               	movlw	-26
  9309  01030E  50E3               	movf	plusw1,w,c
  9310  010310  263F               	addwf	(btemp+10)^0,f,c
  9311  010312  0EE7               	movlw	-25
  9312  010314  50E3               	movf	plusw1,w,c
  9313  010316  2240               	addwfc	(btemp+11)^0,f,c
  9314  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9315  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9316  010324  ECE1  F0B1         	call	_strcpy	;wreg free
  9317  010328  D776               	goto	l8952
  9318  01032A                     l8976:
  9319                           
  9320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9321  01032A  0E00               	movlw	0
  9322  01032C  6E3D               	movwf	(btemp+8)^0,c
  9323  01032E  0E00               	movlw	0
  9324  010330  6E3E               	movwf	(btemp+9)^0,c
  9325  010332  0E80               	movlw	128
  9326  010334  6E3F               	movwf	(btemp+10)^0,c
  9327  010336  0E3F               	movlw	63
  9328  010338  6E40               	movwf	(btemp+11)^0,c
  9329                           
  9330                           ;stkvar	_u @ sp[(-56)+12]
  9331  01033A  0ED4               	movlw	-44
  9332  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9333  010342  0ED5               	movlw	-43
  9334  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9335  01034A  0ED6               	movlw	-42
  9336  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9337  010352  0ED7               	movlw	-41
  9338  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9339                           
  9340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9341                           ;stkvar	_e @ sp[(-56)+34]
  9342  01035A  0EEA               	movlw	-22
  9343  01035C  6AE3               	clrf	plusw1,c
  9344  01035E  0EEB               	movlw	-21
  9345  010360  6AE3               	clrf	plusw1,c
  9346                           
  9347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9348  010362  0E00               	movlw	0
  9349  010364  6EE6               	movwf	postinc1,c
  9350  010366  0E00               	movlw	0
  9351  010368  6EE6               	movwf	postinc1,c
  9352  01036A  0E00               	movlw	0
  9353  01036C  6EE6               	movwf	postinc1,c
  9354  01036E  0E00               	movlw	0
  9355  010370  6EE6               	movwf	postinc1,c
  9356                           
  9357                           ;stkvar	_g @ sp[(-60)+16]
  9358  010372  0ED4               	movlw	-44
  9359  010374  006F FF8F FFE6     	movff	plusw1,postinc1
  9360  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  9361  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  9362  010386  006F FF8F FFE6     	movff	plusw1,postinc1
  9363  01038C  ECAE  F0B2         	call	___fleq	;wreg free
  9364  010390  A035               	btfss	btemp& (0+255),0,c
  9365  010392  D039               	goto	l8988
  9366  010394  D0BC               	goto	u8660
  9367  010396                     l8984:
  9368                           
  9369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  9370  010396  0E00               	movlw	0
  9371  010398  6EE6               	movwf	postinc1,c
  9372  01039A  0E00               	movlw	0
  9373  01039C  6EE6               	movwf	postinc1,c
  9374  01039E  0E20               	movlw	32
  9375  0103A0  6EE6               	movwf	postinc1,c
  9376  0103A2  0E41               	movlw	65
  9377  0103A4  6EE6               	movwf	postinc1,c
  9378                           
  9379                           ;stkvar	_u @ sp[(-60)+12]
  9380  0103A6  0ED0               	movlw	-48
  9381  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9382  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9383  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9384  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9385  0103C0  ECC1  F08E         	call	___flmul	;wreg free
  9386                           
  9387                           ;stkvar	_u @ sp[(-56)+12]
  9388  0103C4  0ED4               	movlw	-44
  9389  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9390  0103CC  0ED5               	movlw	-43
  9391  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9392  0103D4  0ED6               	movlw	-42
  9393  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9394  0103DC  0ED7               	movlw	-41
  9395  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9396                           
  9397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  9398                           ;stkvar	_e @ sp[(-56)+34]
  9399  0103E4  0EEA               	movlw	-22
  9400  0103E6  50E3               	movf	plusw1,w,c
  9401  0103E8  0F01               	addlw	1
  9402  0103EA  6E35               	movwf	btemp^0,c
  9403  0103EC  0EEA               	movlw	-22
  9404  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  9405  0103F4  6A35               	clrf	btemp^0,c
  9406  0103F6  0EEB               	movlw	-21
  9407  0103F8  50E3               	movf	plusw1,w,c
  9408  0103FA  2035               	addwfc	btemp^0,w,c
  9409  0103FC  6E35               	movwf	btemp^0,c
  9410  0103FE  0EEB               	movlw	-21
  9411  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
  9412  010406                     l8988:
  9413                           
  9414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  9415  010406  0E00               	movlw	0
  9416  010408  6EE6               	movwf	postinc1,c
  9417  01040A  0E00               	movlw	0
  9418  01040C  6EE6               	movwf	postinc1,c
  9419  01040E  0E20               	movlw	32
  9420  010410  6EE6               	movwf	postinc1,c
  9421  010412  0E41               	movlw	65
  9422  010414  6EE6               	movwf	postinc1,c
  9423                           
  9424                           ;stkvar	_u @ sp[(-60)+12]
  9425  010416  0ED0               	movlw	-48
  9426  010418  006F FF8F FFE6     	movff	plusw1,postinc1
  9427  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
  9428  010424  006F FF8F FFE6     	movff	plusw1,postinc1
  9429  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
  9430  010430  ECC1  F08E         	call	___flmul	;wreg free
  9431  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
  9432  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9433  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9434  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9435                           
  9436                           ;stkvar	_g @ sp[(-60)+16]
  9437  01044C  0ED4               	movlw	-44
  9438  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
  9439  010454  006F FF8F FFE6     	movff	plusw1,postinc1
  9440  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
  9441  010460  006F FF8F FFE6     	movff	plusw1,postinc1
  9442  010466  ECC9  F0AC         	call	___flge	;wreg free
  9443  01046A  A035               	btfss	btemp& (0+255),0,c
  9444  01046C  D032               	goto	l8994
  9445  01046E  D793               	goto	l8984
  9446  010470                     l8990:
  9447                           
  9448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  9449  010470  0E00               	movlw	0
  9450  010472  6EE6               	movwf	postinc1,c
  9451  010474  0E00               	movlw	0
  9452  010476  6EE6               	movwf	postinc1,c
  9453  010478  0E20               	movlw	32
  9454  01047A  6EE6               	movwf	postinc1,c
  9455  01047C  0E41               	movlw	65
  9456  01047E  6EE6               	movwf	postinc1,c
  9457                           
  9458                           ;stkvar	_u @ sp[(-60)+12]
  9459  010480  0ED0               	movlw	-48
  9460  010482  006F FF8F FFE6     	movff	plusw1,postinc1
  9461  010488  006F FF8F FFE6     	movff	plusw1,postinc1
  9462  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
  9463  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  9464  01049A  ECB4  F096         	call	___fldiv	;wreg free
  9465                           
  9466                           ;stkvar	_u @ sp[(-56)+12]
  9467  01049E  0ED4               	movlw	-44
  9468  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9469  0104A6  0ED5               	movlw	-43
  9470  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9471  0104AE  0ED6               	movlw	-42
  9472  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9473  0104B6  0ED7               	movlw	-41
  9474  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9475                           
  9476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  9477                           ;stkvar	_e @ sp[(-56)+34]
  9478  0104BE  50E1               	movf	fsr1l,w,c
  9479  0104C0  0FEA               	addlw	-22
  9480  0104C2  6ED9               	movwf	fsr2l,c
  9481  0104C4  50E2               	movf	fsr1h,w,c
  9482  0104C6  6EDA               	movwf	fsr2h,c
  9483  0104C8  0EFF               	movlw	255
  9484  0104CA  22DA               	addwfc	fsr2h,f,c
  9485  0104CC  06DE               	decf	postinc2,f,c
  9486  0104CE  0E00               	movlw	0
  9487  0104D0  5ADD               	subwfb	postdec2,f,c
  9488  0104D2                     l8994:
  9489                           
  9490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  9491                           ;stkvar	_u @ sp[(-56)+12]
  9492  0104D2  0ED4               	movlw	-44
  9493  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9494  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9495  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9496  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9497                           
  9498                           ;stkvar	_g @ sp[(-60)+16]
  9499  0104EC  0ED4               	movlw	-44
  9500  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9501  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9502  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9503  010500  006F FF8F FFE6     	movff	plusw1,postinc1
  9504  010506  ECC9  F0AC         	call	___flge	;wreg free
  9505  01050A  A035               	btfss	btemp& (0+255),0,c
  9506  01050C  D7B1               	goto	l8990
  9507  01050E                     u8660:
  9508                           
  9509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  9510                           ;stkvar	_c @ sp[(-56)+-7]
  9511  01050E  0EC1               	movlw	-63
  9512  010510  50E3               	movf	plusw1,w,c
  9513  010512  6EE6               	movwf	postinc1,c
  9514  010514  0E00               	movlw	0
  9515  010516  6EE6               	movwf	postinc1,c
  9516  010518  EC6A  F0B6         	call	_tolower	;wreg free
  9517                           
  9518                           ;stkvar	_mode @ sp[(-56)+54]
  9519  01051C  0EFE               	movlw	-2
  9520  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9521                           
  9522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  9523                           ;stkvar	_mode @ sp[(-56)+54]
  9524                           ;stkvar	_nmode @ sp[(-56)+55]
  9525  010524  0EFE               	movlw	-2
  9526  010526  006F FF8C  F035    	movff	plusw1,btemp
  9527  01052C  0EFF               	movlw	-1
  9528  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9529                           
  9530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  9531                           ;stkvar	_mode @ sp[(-56)+54]
  9532  010534  0EFE               	movlw	-2
  9533  010536  006F FF8C  F035    	movff	plusw1,btemp
  9534  01053C  0E67               	movlw	103
  9535  01053E  1835               	xorwf	btemp^0,w,c
  9536  010540  A4D8               	btfss	status,2,c
  9537  010542  D025               	goto	l9012
  9538                           
  9539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  9540  010544  5020               	movf	_prec^0,w,c
  9541  010546  1021               	iorwf	(_prec+1)^0,w,c
  9542  010548  A4D8               	btfss	status,2,c
  9543  01054A  D004               	goto	l9006
  9544                           
  9545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  9546  01054C  0E00               	movlw	0
  9547  01054E  6E21               	movwf	(_prec+1)^0,c
  9548  010550  0E01               	movlw	1
  9549  010552  6E20               	movwf	_prec^0,c
  9550  010554                     l9006:
  9551                           
  9552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  9553  010554  BE21               	btfsc	(_prec+1)^0,7,c
  9554  010556  D005               	goto	u8690
  9555  010558  5021               	movf	(_prec+1)^0,w,c
  9556  01055A  E110               	bnz	l9010
  9557  01055C  0420               	decf	_prec^0,w,c
  9558  01055E  B0D8               	btfsc	status,0,c
  9559  010560  D00D               	goto	l9010
  9560  010562                     u8690:
  9561  010562  0E06               	movlw	6
  9562  010564  6E3F               	movwf	(btemp+10)^0,c
  9563  010566  0E00               	movlw	0
  9564  010568  6E40               	movwf	(btemp+11)^0,c
  9565                           
  9566                           ;stkvar	_p @ sp[(-56)+40]
  9567  01056A  0EF0               	movlw	-16
  9568  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9569  010572  0EF1               	movlw	-15
  9570  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
  9571  01057A  D00C               	goto	l9018
  9572  01057C                     l9010:
  9573                           
  9574                           ;stkvar	_p @ sp[(-56)+40]
  9575  01057C  0EF0               	movlw	-16
  9576  01057E  0060  F083  FFE3   	movff	_prec,plusw1
  9577  010584  0EF1               	movlw	-15
  9578  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
  9579  01058C  D003               	goto	l9018
  9580  01058E                     l9012:
  9581                           
  9582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  9583  01058E  AE21               	btfss	(_prec+1)^0,7,c
  9584  010590  D7F5               	goto	l9010
  9585  010592  D7E7               	goto	u8690
  9586  010594                     l9018:
  9587                           
  9588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  9589                           ;stkvar	_mode @ sp[(-56)+54]
  9590  010594  0EFE               	movlw	-2
  9591  010596  006F FF8C  F035    	movff	plusw1,btemp
  9592  01059C  0E67               	movlw	103
  9593  01059E  1835               	xorwf	btemp^0,w,c
  9594  0105A0  A4D8               	btfss	status,2,c
  9595  0105A2  D02F               	goto	l9028
  9596                           
  9597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  9598                           ;stkvar	_e @ sp[(-56)+34]
  9599  0105A4  0EEB               	movlw	-21
  9600  0105A6  AEE3               	btfss	plusw1,7,c
  9601  0105A8  D00E               	goto	u8720
  9602  0105AA  0EEA               	movlw	-22
  9603  0105AC  006F FF8C  F035    	movff	plusw1,btemp
  9604  0105B2  0EFC               	movlw	252
  9605  0105B4  5E35               	subwf	btemp^0,f,c
  9606  0105B6  0EEB               	movlw	-21
  9607  0105B8  006F FF8C  F035    	movff	plusw1,btemp
  9608  0105BE  0EFF               	movlw	255
  9609  0105C0  5A35               	subwfb	btemp^0,f,c
  9610  0105C2  A0D8               	btfss	status,0,c
  9611  0105C4  D018               	goto	l9026
  9612  0105C6                     u8720:
  9613                           
  9614                           ;stkvar	_e @ sp[(-56)+34]
  9615                           ;stkvar	_p @ sp[(-56)+40]
  9616  0105C6  0EF0               	movlw	-16
  9617  0105C8  50E3               	movf	plusw1,w,c
  9618  0105CA  0FFF               	addlw	255
  9619  0105CC  6E3F               	movwf	(btemp+10)^0,c
  9620  0105CE  0EF1               	movlw	-15
  9621  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
  9622  0105D6  0EFF               	movlw	255
  9623  0105D8  2240               	addwfc	(btemp+11)^0,f,c
  9624  0105DA  0EEA               	movlw	-22
  9625  0105DC  50E3               	movf	plusw1,w,c
  9626  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
  9627  0105E0  5040               	movf	(btemp+11)^0,w,c
  9628  0105E2  0A80               	xorlw	128
  9629  0105E4  6E35               	movwf	btemp^0,c
  9630  0105E6  0EEB               	movlw	-21
  9631  0105E8  50E3               	movf	plusw1,w,c
  9632  0105EA  0A80               	xorlw	128
  9633  0105EC  5835               	subwfb	btemp^0,w,c
  9634  0105EE  A0D8               	btfss	status,0,c
  9635  0105F0  D002               	goto	l9026
  9636                           
  9637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  9638  0105F2  0E66               	movlw	102
  9639  0105F4  D001               	goto	L7
  9640  0105F6                     l9026:
  9641                           
  9642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  9643  0105F6  0E65               	movlw	101
  9644  0105F8                     L7:
  9645  0105F8  6E40               	movwf	(btemp+11)^0,c
  9646                           
  9647                           ;stkvar	_nmode @ sp[(-56)+55]
  9648  0105FA  0EFF               	movlw	-1
  9649  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9650  010602                     l9028:
  9651                           
  9652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  9653                           ;stkvar	_p @ sp[(-56)+40]
  9654                           ;stkvar	_m @ sp[(-56)+48]
  9655  010602  0EF0               	movlw	-16
  9656  010604  006F FF8C  F035    	movff	plusw1,btemp
  9657  01060A  0EF8               	movlw	-8
  9658  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9659  010612  0EF1               	movlw	-15
  9660  010614  006F FF8C  F035    	movff	plusw1,btemp
  9661  01061A  0EF9               	movlw	-7
  9662  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9663                           
  9664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  9665                           ;stkvar	_mode @ sp[(-56)+54]
  9666  010622  0EFE               	movlw	-2
  9667  010624  006F FF8C  F035    	movff	plusw1,btemp
  9668  01062A  0E67               	movlw	103
  9669  01062C  1835               	xorwf	btemp^0,w,c
  9670  01062E  A4D8               	btfss	status,2,c
  9671  010630  D00B               	goto	u8760
  9672                           
  9673                           ;stkvar	_nmode @ sp[(-56)+55]
  9674  010632  0EFF               	movlw	-1
  9675  010634  006F FF8C  F035    	movff	plusw1,btemp
  9676  01063A  0E66               	movlw	102
  9677  01063C  1835               	xorwf	btemp^0,w,c
  9678  01063E  A4D8               	btfss	status,2,c
  9679  010640  D014               	goto	l1799
  9680                           
  9681                           ;stkvar	_e @ sp[(-56)+34]
  9682  010642  0EEB               	movlw	-21
  9683  010644  AEE3               	btfss	plusw1,7,c
  9684  010646  D011               	goto	l1799
  9685  010648                     u8760:
  9686                           
  9687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  9688                           ;stkvar	_m @ sp[(-56)+48]
  9689  010648  0EF8               	movlw	-8
  9690  01064A  50E3               	movf	plusw1,w,c
  9691  01064C  0F01               	addlw	1
  9692  01064E  6E35               	movwf	btemp^0,c
  9693  010650  0EF8               	movlw	-8
  9694  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
  9695  010658  6A35               	clrf	btemp^0,c
  9696  01065A  0EF9               	movlw	-7
  9697  01065C  50E3               	movf	plusw1,w,c
  9698  01065E  2035               	addwfc	btemp^0,w,c
  9699  010660  6E35               	movwf	btemp^0,c
  9700  010662  0EF9               	movlw	-7
  9701  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
  9702  01066A                     l1799:
  9703                           
  9704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  9705                           ;stkvar	_nmode @ sp[(-56)+55]
  9706  01066A  0EFF               	movlw	-1
  9707  01066C  006F FF8C  F035    	movff	plusw1,btemp
  9708  010672  0E66               	movlw	102
  9709  010674  1835               	xorwf	btemp^0,w,c
  9710  010676  A4D8               	btfss	status,2,c
  9711  010678  D03B               	goto	l9048
  9712                           
  9713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  9714                           ;stkvar	_e @ sp[(-56)+34]
  9715  01067A  0EEB               	movlw	-21
  9716  01067C  AEE3               	btfss	plusw1,7,c
  9717  01067E  D01C               	goto	l9044
  9718                           
  9719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  9720  010680  0E00               	movlw	0
  9721  010682  6E3D               	movwf	(btemp+8)^0,c
  9722  010684  0E00               	movlw	0
  9723  010686  6E3E               	movwf	(btemp+9)^0,c
  9724  010688  0E80               	movlw	128
  9725  01068A  6E3F               	movwf	(btemp+10)^0,c
  9726  01068C  0E3F               	movlw	63
  9727  01068E  6E40               	movwf	(btemp+11)^0,c
  9728                           
  9729                           ;stkvar	_u @ sp[(-56)+12]
  9730  010690  0ED4               	movlw	-44
  9731  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9732  010698  0ED5               	movlw	-43
  9733  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9734  0106A0  0ED6               	movlw	-42
  9735  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9736  0106A8  0ED7               	movlw	-41
  9737  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
  9738                           
  9739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  9740                           ;stkvar	_e @ sp[(-56)+34]
  9741  0106B0  0EEA               	movlw	-22
  9742  0106B2  6AE3               	clrf	plusw1,c
  9743  0106B4  0EEB               	movlw	-21
  9744  0106B6  6AE3               	clrf	plusw1,c
  9745  0106B8                     l9044:
  9746                           
  9747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  9748                           ;stkvar	_mode @ sp[(-56)+54]
  9749  0106B8  0EFE               	movlw	-2
  9750  0106BA  006F FF8C  F035    	movff	plusw1,btemp
  9751  0106C0  0E67               	movlw	103
  9752  0106C2  1835               	xorwf	btemp^0,w,c
  9753  0106C4  B4D8               	btfsc	status,2,c
  9754  0106C6  D014               	goto	l9048
  9755                           
  9756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
  9757                           ;stkvar	_e @ sp[(-56)+34]
  9758                           ;stkvar	_m @ sp[(-56)+48]
  9759  0106C8  0EF8               	movlw	-8
  9760  0106CA  50E3               	movf	plusw1,w,c
  9761  0106CC  6E35               	movwf	btemp^0,c
  9762  0106CE  0EEA               	movlw	-22
  9763  0106D0  50E3               	movf	plusw1,w,c
  9764  0106D2  2635               	addwf	btemp^0,f,c
  9765  0106D4  0EF8               	movlw	-8
  9766  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9767  0106DC  0EF9               	movlw	-7
  9768  0106DE  50E3               	movf	plusw1,w,c
  9769  0106E0  6E35               	movwf	btemp^0,c
  9770  0106E2  0EEB               	movlw	-21
  9771  0106E4  50E3               	movf	plusw1,w,c
  9772  0106E6  2235               	addwfc	btemp^0,f,c
  9773  0106E8  0EF9               	movlw	-7
  9774  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9775  0106F0                     l9048:
  9776                           
  9777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  9778                           ;stkvar	_i @ sp[(-56)+36]
  9779  0106F0  0EEC               	movlw	-20
  9780  0106F2  6AE3               	clrf	plusw1,c
  9781  0106F4  0EED               	movlw	-19
  9782  0106F6  6AE3               	clrf	plusw1,c
  9783                           
  9784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  9785                           ;stkvar	_g @ sp[(-56)+16]
  9786  0106F8  0ED8               	movlw	-40
  9787  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
  9788  010700  0ED9               	movlw	-39
  9789  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
  9790  010708  0EDA               	movlw	-38
  9791  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9792  010710  0EDB               	movlw	-37
  9793  010712  006F FF8C  F040    	movff	plusw1,btemp+11
  9794                           
  9795                           ;stkvar	_h @ sp[(-56)+24]
  9796  010718  0EE0               	movlw	-32
  9797  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9798  010720  0EE1               	movlw	-31
  9799  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9800  010728  0EE2               	movlw	-30
  9801  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9802  010730  0EE3               	movlw	-29
  9803  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
  9804                           
  9805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  9806                           ;stkvar	_u @ sp[(-56)+12]
  9807  010738  0ED4               	movlw	-44
  9808  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
  9809  010740  0ED5               	movlw	-43
  9810  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
  9811  010748  0ED6               	movlw	-42
  9812  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9813  010750  0ED7               	movlw	-41
  9814  010752  006F FF8C  F040    	movff	plusw1,btemp+11
  9815                           
  9816                           ;stkvar	_ou @ sp[(-56)+28]
  9817  010758  0EE4               	movlw	-28
  9818  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9819  010760  0EE5               	movlw	-27
  9820  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9821  010768  0EE6               	movlw	-26
  9822  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9823  010770  0EE7               	movlw	-25
  9824  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
  9825                           
  9826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  9827  010778  D0D6               	goto	l9064
  9828  01077A                     l9054:
  9829                           
  9830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  9831                           ;stkvar	_u @ sp[(-56)+12]
  9832  01077A  0ED4               	movlw	-44
  9833  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
  9834  010782  006F FF8F FFE6     	movff	plusw1,postinc1
  9835  010788  006F FF8F FFE6     	movff	plusw1,postinc1
  9836  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
  9837                           
  9838                           ;stkvar	_h @ sp[(-60)+24]
  9839  010794  0EDC               	movlw	-36
  9840  010796  006F FF8F FFE6     	movff	plusw1,postinc1
  9841  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
  9842  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9843  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9844  0107AE  ECB4  F096         	call	___fldiv	;wreg free
  9845  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  9846  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9847  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9848  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9849  0107CA  EC6D  F09F         	call	_floorf	;wreg free
  9850                           
  9851                           ;stkvar	_l @ sp[(-56)+20]
  9852  0107CE  0EDC               	movlw	-36
  9853  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9854  0107D6  0EDD               	movlw	-35
  9855  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9856  0107DE  0EDE               	movlw	-34
  9857  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9858  0107E6  0EDF               	movlw	-33
  9859  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9860                           
  9861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  9862                           ;stkvar	_l @ sp[(-56)+20]
  9863  0107EE  0EDC               	movlw	-36
  9864  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9865  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9866  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9867  010802  006F FF8F FFE6     	movff	plusw1,postinc1
  9868  010808  EC10  F0AC         	call	___fltol	;wreg free
  9869  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
  9870  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
  9871                           
  9872                           ;stkvar	_d @ sp[(-56)+44]
  9873  010818  0EF4               	movlw	-12
  9874  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9875  010820  0EF5               	movlw	-11
  9876  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
  9877                           
  9878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  9879                           ;stkvar	_u @ sp[(-56)+12]
  9880  010828  0ED4               	movlw	-44
  9881  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
  9882  010830  006F FF8F FFE6     	movff	plusw1,postinc1
  9883  010836  006F FF8F FFE6     	movff	plusw1,postinc1
  9884  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
  9885                           
  9886                           ;stkvar	_l @ sp[(-60)+20]
  9887  010842  0ED8               	movlw	-40
  9888  010844  006F FF8F FFE6     	movff	plusw1,postinc1
  9889  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
  9890  010850  006F FF8F FFE6     	movff	plusw1,postinc1
  9891  010856  006F FF8F FFE6     	movff	plusw1,postinc1
  9892  01085C  ECC1  F08E         	call	___flmul	;wreg free
  9893  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
  9894  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9895  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9896  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9897                           
  9898                           ;stkvar	_h @ sp[(-60)+24]
  9899  010878  0EDC               	movlw	-36
  9900  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
  9901  010880  006F FF8F FFE6     	movff	plusw1,postinc1
  9902  010886  006F FF8F FFE6     	movff	plusw1,postinc1
  9903  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
  9904  010892  EC40  F0B9         	call	___flsub	;wreg free
  9905                           
  9906                           ;stkvar	_h @ sp[(-56)+24]
  9907  010896  0EE0               	movlw	-32
  9908  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
  9909  01089E  0EE1               	movlw	-31
  9910  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9911  0108A6  0EE2               	movlw	-30
  9912  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9913  0108AE  0EE3               	movlw	-29
  9914  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9915                           
  9916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  9917  0108B6  0E00               	movlw	0
  9918  0108B8  6EE6               	movwf	postinc1,c
  9919  0108BA  0E00               	movlw	0
  9920  0108BC  6EE6               	movwf	postinc1,c
  9921  0108BE  0E20               	movlw	32
  9922  0108C0  6EE6               	movwf	postinc1,c
  9923  0108C2  0E41               	movlw	65
  9924  0108C4  6EE6               	movwf	postinc1,c
  9925                           
  9926                           ;stkvar	_u @ sp[(-60)+12]
  9927  0108C6  0ED0               	movlw	-48
  9928  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9929  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9930  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9931  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9932  0108E0  ECB4  F096         	call	___fldiv	;wreg free
  9933                           
  9934                           ;stkvar	_u @ sp[(-56)+12]
  9935  0108E4  0ED4               	movlw	-44
  9936  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9937  0108EC  0ED5               	movlw	-43
  9938  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9939  0108F4  0ED6               	movlw	-42
  9940  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9941  0108FC  0ED7               	movlw	-41
  9942  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9943                           
  9944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  9945                           ;stkvar	_i @ sp[(-56)+36]
  9946  010904  0EEC               	movlw	-20
  9947  010906  50E3               	movf	plusw1,w,c
  9948  010908  0F01               	addlw	1
  9949  01090A  6E35               	movwf	btemp^0,c
  9950  01090C  0EEC               	movlw	-20
  9951  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9952  010914  6A35               	clrf	btemp^0,c
  9953  010916  0EED               	movlw	-19
  9954  010918  50E3               	movf	plusw1,w,c
  9955  01091A  2035               	addwfc	btemp^0,w,c
  9956  01091C  6E35               	movwf	btemp^0,c
  9957  01091E  0EED               	movlw	-19
  9958  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
  9959  010926                     l9064:
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  9962                           ;stkvar	_m @ sp[(-56)+48]
  9963                           ;stkvar	_i @ sp[(-56)+36]
  9964  010926  50E1               	movf	fsr1l,w,c
  9965  010928  0FEC               	addlw	-20
  9966  01092A  6ED9               	movwf	fsr2l,c
  9967  01092C  50E2               	movf	fsr1h,w,c
  9968  01092E  6EDA               	movwf	fsr2h,c
  9969  010930  0EFF               	movlw	255
  9970  010932  22DA               	addwfc	fsr2h,f,c
  9971  010934  0EF8               	movlw	-8
  9972  010936  50E3               	movf	plusw1,w,c
  9973  010938  5CDE               	subwf	postinc2,w,c
  9974  01093A  50DE               	movf	postinc2,w,c
  9975  01093C  0A80               	xorlw	128
  9976  01093E  6E35               	movwf	btemp^0,c
  9977  010940  0EF9               	movlw	-7
  9978  010942  50E3               	movf	plusw1,w,c
  9979  010944  0A80               	xorlw	128
  9980  010946  5835               	subwfb	btemp^0,w,c
  9981  010948  A0D8               	btfss	status,0,c
  9982  01094A  D717               	goto	l9054
  9983                           
  9984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  9985  01094C  0E00               	movlw	0
  9986  01094E  6EE6               	movwf	postinc1,c
  9987  010950  0E00               	movlw	0
  9988  010952  6EE6               	movwf	postinc1,c
  9989  010954  0EA0               	movlw	160
  9990  010956  6EE6               	movwf	postinc1,c
  9991  010958  0E40               	movlw	64
  9992  01095A  6EE6               	movwf	postinc1,c
  9993                           
  9994                           ;stkvar	_u @ sp[(-60)+12]
  9995  01095C  0ED0               	movlw	-48
  9996  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
  9997  010964  006F FF8F FFE6     	movff	plusw1,postinc1
  9998  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
  9999  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10000  010976  ECC1  F08E         	call	___flmul	;wreg free
 10001                           
 10002                           ;stkvar	_l @ sp[(-56)+20]
 10003  01097A  0EDC               	movlw	-36
 10004  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10005  010982  0EDD               	movlw	-35
 10006  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10007  01098A  0EDE               	movlw	-34
 10008  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10009  010992  0EDF               	movlw	-33
 10010  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10011                           
 10012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10013                           ;stkvar	_l @ sp[(-56)+20]
 10014  01099A  0EDC               	movlw	-36
 10015  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10016  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10017  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10018  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10019                           
 10020                           ;stkvar	_h @ sp[(-60)+24]
 10021  0109B4  0EDC               	movlw	-36
 10022  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10023  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10024  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10025  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10026  0109CE  ECC9  F0AC         	call	___flge	;wreg free
 10027  0109D2  A035               	btfss	btemp& (0+255),0,c
 10028  0109D4  D021               	goto	u8830
 10029                           
 10030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10031                           ;stkvar	_l @ sp[(-56)+20]
 10032                           
 10033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10034                           
 10035                           ;stkvar	_l @ sp[(-56)+20]
 10036                           
 10037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10038  0109D6  0EDC               	movlw	-36
 10039  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10040  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10041  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10042  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10043                           
 10044                           ;stkvar	_h @ sp[(-60)+24]
 10045  0109F0  0EDC               	movlw	-36
 10046  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10047  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10048  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10049  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10050  010A0A  ECAE  F0B2         	call	___fleq	;wreg free
 10051  010A0E  A035               	btfss	btemp& (0+255),0,c
 10052  010A10  D01B               	goto	l9078
 10053                           
 10054                           ;stkvar	_d @ sp[(-56)+44]
 10055  010A12  0EF4               	movlw	-12
 10056  010A14  B0E3               	btfsc	plusw1,0,c
 10057  010A16  D018               	goto	l9078
 10058  010A18                     u8830:
 10059                           
 10060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10061  010A18  0E00               	movlw	0
 10062  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10063  010A1C  0E00               	movlw	0
 10064  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10065  010A20  0E00               	movlw	0
 10066  010A22  6E3F               	movwf	(btemp+10)^0,c
 10067  010A24  0E00               	movlw	0
 10068  010A26  6E40               	movwf	(btemp+11)^0,c
 10069                           
 10070                           ;stkvar	_l @ sp[(-56)+20]
 10071  010A28  0EDC               	movlw	-36
 10072  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10073  010A30  0EDD               	movlw	-35
 10074  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10075  010A38  0EDE               	movlw	-34
 10076  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10077  010A40  0EDF               	movlw	-33
 10078  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10079  010A48                     l9078:
 10080                           
 10081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10082                           ;stkvar	_l @ sp[(-56)+20]
 10083  010A48  0EDC               	movlw	-36
 10084  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10085  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10086  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10087  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10088                           
 10089                           ;stkvar	_g @ sp[(-60)+16]
 10090  010A62  0ED4               	movlw	-44
 10091  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10092  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10093  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10094  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10095  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10096                           
 10097                           ;stkvar	_h @ sp[(-56)+24]
 10098  010A80  0EE0               	movlw	-32
 10099  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10100  010A88  0EE1               	movlw	-31
 10101  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10102  010A90  0EE2               	movlw	-30
 10103  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10104  010A98  0EE3               	movlw	-29
 10105  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10106                           
 10107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10108                           ;stkvar	_ou @ sp[(-56)+28]
 10109  010AA0  0EE4               	movlw	-28
 10110  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10111  010AA8  0EE5               	movlw	-27
 10112  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10113  010AB0  0EE6               	movlw	-26
 10114  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10115  010AB8  0EE7               	movlw	-25
 10116  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10117                           
 10118                           ;stkvar	_u @ sp[(-56)+12]
 10119  010AC0  0ED4               	movlw	-44
 10120  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10121  010AC8  0ED5               	movlw	-43
 10122  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10123  010AD0  0ED6               	movlw	-42
 10124  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10125  010AD8  0ED7               	movlw	-41
 10126  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10127                           
 10128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10129                           ;stkvar	_nmode @ sp[(-56)+55]
 10130  010AE0  0EFF               	movlw	-1
 10131  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10132  010AE8  0E65               	movlw	101
 10133  010AEA  1835               	xorwf	btemp^0,w,c
 10134  010AEC  B4D8               	btfsc	status,2,c
 10135  010AEE  D011               	goto	l9086
 10136                           
 10137                           ;stkvar	_e @ sp[(-56)+34]
 10138                           ;stkvar	_ne @ sp[(-56)+46]
 10139  010AF0  0EEA               	movlw	-22
 10140  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10141  010AF8  0EF6               	movlw	-10
 10142  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10143  010B00  0EEB               	movlw	-21
 10144  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10145  010B08  0EF7               	movlw	-9
 10146  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10147  010B10  D004               	goto	l1814
 10148  010B12                     l9086:
 10149                           
 10150                           ;stkvar	_ne @ sp[(-56)+46]
 10151  010B12  0EF6               	movlw	-10
 10152  010B14  6AE3               	clrf	plusw1,c
 10153  010B16  0EF7               	movlw	-9
 10154  010B18  6AE3               	clrf	plusw1,c
 10155  010B1A                     l1814:
 10156                           
 10157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10158                           ;stkvar	_pp @ sp[(-56)+50]
 10159  010B1A  0EFA               	movlw	-6
 10160  010B1C  6AE3               	clrf	plusw1,c
 10161  010B1E  0EFB               	movlw	-5
 10162  010B20  6AE3               	clrf	plusw1,c
 10163                           
 10164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10165                           ;stkvar	_t @ sp[(-56)+52]
 10166  010B22  0EFC               	movlw	-4
 10167  010B24  6AE3               	clrf	plusw1,c
 10168  010B26  0EFD               	movlw	-3
 10169  010B28  6AE3               	clrf	plusw1,c
 10170                           
 10171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10172                           ;stkvar	_i @ sp[(-56)+36]
 10173  010B2A  0EEC               	movlw	-20
 10174  010B2C  6AE3               	clrf	plusw1,c
 10175  010B2E  0EED               	movlw	-19
 10176  010B30  6AE3               	clrf	plusw1,c
 10177                           
 10178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10179  010B32  D1B7               	goto	l9138
 10180  010B34                     l9088:
 10181                           
 10182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10183                           ;stkvar	_u @ sp[(-56)+12]
 10184  010B34  0ED4               	movlw	-44
 10185  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10186  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10187  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10188  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10189                           
 10190                           ;stkvar	_h @ sp[(-60)+24]
 10191  010B4E  0EDC               	movlw	-36
 10192  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10193  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10194  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10195  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10196  010B68  ECB4  F096         	call	___fldiv	;wreg free
 10197  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10198  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10199  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10200  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10201  010B84  EC6D  F09F         	call	_floorf	;wreg free
 10202                           
 10203                           ;stkvar	_l @ sp[(-56)+20]
 10204  010B88  0EDC               	movlw	-36
 10205  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10206  010B90  0EDD               	movlw	-35
 10207  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10208  010B98  0EDE               	movlw	-34
 10209  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10210  010BA0  0EDF               	movlw	-33
 10211  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10212                           
 10213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10214                           ;stkvar	_l @ sp[(-56)+20]
 10215  010BA8  0EDC               	movlw	-36
 10216  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10217  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10218  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10219  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10220  010BC2  EC10  F0AC         	call	___fltol	;wreg free
 10221  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10222  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10223                           
 10224                           ;stkvar	_d @ sp[(-56)+44]
 10225  010BD2  0EF4               	movlw	-12
 10226  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10227  010BDA  0EF5               	movlw	-11
 10228  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10231  010BE2  B822               	btfsc	_flags^0,4,c
 10232  010BE4  D026               	goto	l9102
 10233                           
 10234                           ;stkvar	_d @ sp[(-56)+44]
 10235  010BE6  0EF4               	movlw	-12
 10236  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10237  010BEE  0EF5               	movlw	-11
 10238  010BF0  50E3               	movf	plusw1,w,c
 10239  010BF2  1035               	iorwf	btemp^0,w,c
 10240  010BF4  A4D8               	btfss	status,2,c
 10241  010BF6  D01D               	goto	l9102
 10242                           
 10243                           ;stkvar	_mode @ sp[(-56)+54]
 10244  010BF8  0EFE               	movlw	-2
 10245  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10246  010C00  0E67               	movlw	103
 10247  010C02  1835               	xorwf	btemp^0,w,c
 10248  010C04  A4D8               	btfss	status,2,c
 10249  010C06  D015               	goto	l9102
 10250                           
 10251                           ;stkvar	_ne @ sp[(-56)+46]
 10252  010C08  0EF7               	movlw	-9
 10253  010C0A  AEE3               	btfss	plusw1,7,c
 10254  010C0C  D012               	goto	l9102
 10255                           
 10256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10257                           ;stkvar	_t @ sp[(-56)+52]
 10258  010C0E  0EFC               	movlw	-4
 10259  010C10  50E3               	movf	plusw1,w,c
 10260  010C12  0F01               	addlw	1
 10261  010C14  6E35               	movwf	btemp^0,c
 10262  010C16  0EFC               	movlw	-4
 10263  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10264  010C1E  6A35               	clrf	btemp^0,c
 10265  010C20  0EFD               	movlw	-3
 10266  010C22  50E3               	movf	plusw1,w,c
 10267  010C24  2035               	addwfc	btemp^0,w,c
 10268  010C26  6E35               	movwf	btemp^0,c
 10269  010C28  0EFD               	movlw	-3
 10270  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10271                           
 10272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10273  010C30  D0AF               	goto	l9130
 10274  010C32                     l9102:
 10275                           
 10276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10277                           ;stkvar	_pp @ sp[(-56)+50]
 10278  010C32  0EFA               	movlw	-6
 10279  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10280  010C3A  0EFB               	movlw	-5
 10281  010C3C  50E3               	movf	plusw1,w,c
 10282  010C3E  1035               	iorwf	btemp^0,w,c
 10283  010C40  A4D8               	btfss	status,2,c
 10284  010C42  D070               	goto	l9122
 10285                           
 10286                           ;stkvar	_ne @ sp[(-56)+46]
 10287  010C44  0EF7               	movlw	-9
 10288  010C46  AEE3               	btfss	plusw1,7,c
 10289  010C48  D06D               	goto	l9122
 10290                           
 10291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10292                           ;stkvar	_n @ sp[(-56)+32]
 10293  010C4A  0EE8               	movlw	-24
 10294  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10295  010C52  0EE9               	movlw	-23
 10296  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10297  010C5A  0EA8               	movlw	low _dbuf
 10298  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10299  010C5E  6ED9               	movwf	fsr2l,c
 10300  010C60  0E01               	movlw	high _dbuf
 10301  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10302  010C64  6EDA               	movwf	fsr2h,c
 10303  010C66  0E2E               	movlw	46
 10304  010C68  6EDF               	movwf	indf2,c
 10305                           
 10306                           ;stkvar	_n @ sp[(-56)+32]
 10307  010C6A  0EE8               	movlw	-24
 10308  010C6C  50E3               	movf	plusw1,w,c
 10309  010C6E  0F01               	addlw	1
 10310  010C70  6E35               	movwf	btemp^0,c
 10311  010C72  0EE8               	movlw	-24
 10312  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10313  010C7A  6A35               	clrf	btemp^0,c
 10314  010C7C  0EE9               	movlw	-23
 10315  010C7E  50E3               	movf	plusw1,w,c
 10316  010C80  2035               	addwfc	btemp^0,w,c
 10317  010C82  6E35               	movwf	btemp^0,c
 10318  010C84  0EE9               	movlw	-23
 10319  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10320                           
 10321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10322                           ;stkvar	_w @ sp[(-56)+38]
 10323  010C8C  50E1               	movf	fsr1l,w,c
 10324  010C8E  0FEE               	addlw	-18
 10325  010C90  6ED9               	movwf	fsr2l,c
 10326  010C92  50E2               	movf	fsr1h,w,c
 10327  010C94  6EDA               	movwf	fsr2h,c
 10328  010C96  0EFF               	movlw	255
 10329  010C98  22DA               	addwfc	fsr2h,f,c
 10330  010C9A  06DE               	decf	postinc2,f,c
 10331  010C9C  0E00               	movlw	0
 10332  010C9E  5ADD               	subwfb	postdec2,f,c
 10333                           
 10334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10335  010CA0  0E01               	movlw	1
 10336  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10337  010CA4  0E00               	movlw	0
 10338  010CA6  6E40               	movwf	(btemp+11)^0,c
 10339                           
 10340                           ;stkvar	_pp @ sp[(-56)+50]
 10341  010CA8  0EFA               	movlw	-6
 10342  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10343  010CB0  0EFB               	movlw	-5
 10344  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10345  010CB8  D035               	goto	l9122
 10346  010CBA                     l9114:
 10347                           
 10348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10349                           ;stkvar	_n @ sp[(-56)+32]
 10350  010CBA  0EE8               	movlw	-24
 10351  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10352  010CC2  0EE9               	movlw	-23
 10353  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 10354  010CCA  0EA8               	movlw	low _dbuf
 10355  010CCC  243F               	addwf	(btemp+10)^0,w,c
 10356  010CCE  6ED9               	movwf	fsr2l,c
 10357  010CD0  0E01               	movlw	high _dbuf
 10358  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 10359  010CD4  6EDA               	movwf	fsr2h,c
 10360  010CD6  0E30               	movlw	48
 10361  010CD8  6EDF               	movwf	indf2,c
 10362                           
 10363                           ;stkvar	_n @ sp[(-56)+32]
 10364  010CDA  0EE8               	movlw	-24
 10365  010CDC  50E3               	movf	plusw1,w,c
 10366  010CDE  0F01               	addlw	1
 10367  010CE0  6E35               	movwf	btemp^0,c
 10368  010CE2  0EE8               	movlw	-24
 10369  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 10370  010CEA  6A35               	clrf	btemp^0,c
 10371  010CEC  0EE9               	movlw	-23
 10372  010CEE  50E3               	movf	plusw1,w,c
 10373  010CF0  2035               	addwfc	btemp^0,w,c
 10374  010CF2  6E35               	movwf	btemp^0,c
 10375  010CF4  0EE9               	movlw	-23
 10376  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10377                           
 10378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 10379                           ;stkvar	_w @ sp[(-56)+38]
 10380  010CFC  50E1               	movf	fsr1l,w,c
 10381  010CFE  0FEE               	addlw	-18
 10382  010D00  6ED9               	movwf	fsr2l,c
 10383  010D02  50E2               	movf	fsr1h,w,c
 10384  010D04  6EDA               	movwf	fsr2h,c
 10385  010D06  0EFF               	movlw	255
 10386  010D08  22DA               	addwfc	fsr2h,f,c
 10387  010D0A  06DE               	decf	postinc2,f,c
 10388  010D0C  0E00               	movlw	0
 10389  010D0E  5ADD               	subwfb	postdec2,f,c
 10390                           
 10391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 10392                           ;stkvar	_t @ sp[(-56)+52]
 10393  010D10  50E1               	movf	fsr1l,w,c
 10394  010D12  0FFC               	addlw	-4
 10395  010D14  6ED9               	movwf	fsr2l,c
 10396  010D16  50E2               	movf	fsr1h,w,c
 10397  010D18  6EDA               	movwf	fsr2h,c
 10398  010D1A  0EFF               	movlw	255
 10399  010D1C  22DA               	addwfc	fsr2h,f,c
 10400  010D1E  06DE               	decf	postinc2,f,c
 10401  010D20  0E00               	movlw	0
 10402  010D22  5ADD               	subwfb	postdec2,f,c
 10403  010D24                     l9122:
 10404                           
 10405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 10406                           ;stkvar	_t @ sp[(-56)+52]
 10407  010D24  0EFC               	movlw	-4
 10408  010D26  006F FF8C  F035    	movff	plusw1,btemp
 10409  010D2C  0EFD               	movlw	-3
 10410  010D2E  50E3               	movf	plusw1,w,c
 10411  010D30  1035               	iorwf	btemp^0,w,c
 10412  010D32  A4D8               	btfss	status,2,c
 10413  010D34  D7C2               	goto	l9114
 10414                           
 10415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 10416                           ;stkvar	_n @ sp[(-56)+32]
 10417  010D36  0EE8               	movlw	-24
 10418  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 10419  010D3E  0EE9               	movlw	-23
 10420  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 10421  010D46  0EA8               	movlw	low _dbuf
 10422  010D48  243F               	addwf	(btemp+10)^0,w,c
 10423  010D4A  6ED9               	movwf	fsr2l,c
 10424  010D4C  0E01               	movlw	high _dbuf
 10425  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 10426  010D50  6EDA               	movwf	fsr2h,c
 10427                           
 10428                           ;stkvar	_d @ sp[(-56)+44]
 10429  010D52  0EF4               	movlw	-12
 10430  010D54  50E3               	movf	plusw1,w,c
 10431  010D56  0F30               	addlw	48
 10432  010D58  6EDF               	movwf	indf2,c
 10433                           
 10434                           ;stkvar	_n @ sp[(-56)+32]
 10435  010D5A  0EE8               	movlw	-24
 10436  010D5C  50E3               	movf	plusw1,w,c
 10437  010D5E  0F01               	addlw	1
 10438  010D60  6E35               	movwf	btemp^0,c
 10439  010D62  0EE8               	movlw	-24
 10440  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 10441  010D6A  6A35               	clrf	btemp^0,c
 10442  010D6C  0EE9               	movlw	-23
 10443  010D6E  50E3               	movf	plusw1,w,c
 10444  010D70  2035               	addwfc	btemp^0,w,c
 10445  010D72  6E35               	movwf	btemp^0,c
 10446  010D74  0EE9               	movlw	-23
 10447  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 10448                           
 10449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 10450                           ;stkvar	_w @ sp[(-56)+38]
 10451  010D7C  50E1               	movf	fsr1l,w,c
 10452  010D7E  0FEE               	addlw	-18
 10453  010D80  6ED9               	movwf	fsr2l,c
 10454  010D82  50E2               	movf	fsr1h,w,c
 10455  010D84  6EDA               	movwf	fsr2h,c
 10456  010D86  0EFF               	movlw	255
 10457  010D88  22DA               	addwfc	fsr2h,f,c
 10458  010D8A  06DE               	decf	postinc2,f,c
 10459  010D8C  0E00               	movlw	0
 10460  010D8E  5ADD               	subwfb	postdec2,f,c
 10461  010D90                     l9130:
 10462                           
 10463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 10464                           ;stkvar	_u @ sp[(-56)+12]
 10465  010D90  0ED4               	movlw	-44
 10466  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 10467  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10468  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10469  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10470                           
 10471                           ;stkvar	_l @ sp[(-60)+20]
 10472  010DAA  0ED8               	movlw	-40
 10473  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10474  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10475  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10476  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 10477  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 10478  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 10479  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10480  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10481  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10482                           
 10483                           ;stkvar	_h @ sp[(-60)+24]
 10484  010DE0  0EDC               	movlw	-36
 10485  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 10486  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10487  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10488  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10489  010DFA  EC40  F0B9         	call	___flsub	;wreg free
 10490                           
 10491                           ;stkvar	_h @ sp[(-56)+24]
 10492  010DFE  0EE0               	movlw	-32
 10493  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 10494  010E06  0EE1               	movlw	-31
 10495  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10496  010E0E  0EE2               	movlw	-30
 10497  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10498  010E16  0EE3               	movlw	-29
 10499  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10500                           
 10501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 10502  010E1E  0E00               	movlw	0
 10503  010E20  6EE6               	movwf	postinc1,c
 10504  010E22  0E00               	movlw	0
 10505  010E24  6EE6               	movwf	postinc1,c
 10506  010E26  0E20               	movlw	32
 10507  010E28  6EE6               	movwf	postinc1,c
 10508  010E2A  0E41               	movlw	65
 10509  010E2C  6EE6               	movwf	postinc1,c
 10510                           
 10511                           ;stkvar	_u @ sp[(-60)+12]
 10512  010E2E  0ED0               	movlw	-48
 10513  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 10514  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 10515  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10516  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 10517  010E48  ECB4  F096         	call	___fldiv	;wreg free
 10518                           
 10519                           ;stkvar	_u @ sp[(-56)+12]
 10520  010E4C  0ED4               	movlw	-44
 10521  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10522  010E54  0ED5               	movlw	-43
 10523  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10524  010E5C  0ED6               	movlw	-42
 10525  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10526  010E64  0ED7               	movlw	-41
 10527  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10528                           
 10529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 10530                           ;stkvar	_ne @ sp[(-56)+46]
 10531  010E6C  50E1               	movf	fsr1l,w,c
 10532  010E6E  0FF6               	addlw	-10
 10533  010E70  6ED9               	movwf	fsr2l,c
 10534  010E72  50E2               	movf	fsr1h,w,c
 10535  010E74  6EDA               	movwf	fsr2h,c
 10536  010E76  0EFF               	movlw	255
 10537  010E78  22DA               	addwfc	fsr2h,f,c
 10538  010E7A  06DE               	decf	postinc2,f,c
 10539  010E7C  0E00               	movlw	0
 10540  010E7E  5ADD               	subwfb	postdec2,f,c
 10541                           
 10542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 10543                           ;stkvar	_i @ sp[(-56)+36]
 10544  010E80  0EEC               	movlw	-20
 10545  010E82  50E3               	movf	plusw1,w,c
 10546  010E84  0F01               	addlw	1
 10547  010E86  6E35               	movwf	btemp^0,c
 10548  010E88  0EEC               	movlw	-20
 10549  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10550  010E90  6A35               	clrf	btemp^0,c
 10551  010E92  0EED               	movlw	-19
 10552  010E94  50E3               	movf	plusw1,w,c
 10553  010E96  2035               	addwfc	btemp^0,w,c
 10554  010E98  6E35               	movwf	btemp^0,c
 10555  010E9A  0EED               	movlw	-19
 10556  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10557  010EA2                     l9138:
 10558                           
 10559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10560                           ;stkvar	_m @ sp[(-56)+48]
 10561                           ;stkvar	_i @ sp[(-56)+36]
 10562  010EA2  50E1               	movf	fsr1l,w,c
 10563  010EA4  0FEC               	addlw	-20
 10564  010EA6  6ED9               	movwf	fsr2l,c
 10565  010EA8  50E2               	movf	fsr1h,w,c
 10566  010EAA  6EDA               	movwf	fsr2h,c
 10567  010EAC  0EFF               	movlw	255
 10568  010EAE  22DA               	addwfc	fsr2h,f,c
 10569  010EB0  0EF8               	movlw	-8
 10570  010EB2  50E3               	movf	plusw1,w,c
 10571  010EB4  5CDE               	subwf	postinc2,w,c
 10572  010EB6  50DE               	movf	postinc2,w,c
 10573  010EB8  0A80               	xorlw	128
 10574  010EBA  6E35               	movwf	btemp^0,c
 10575  010EBC  0EF9               	movlw	-7
 10576  010EBE  50E3               	movf	plusw1,w,c
 10577  010EC0  0A80               	xorlw	128
 10578  010EC2  5835               	subwfb	btemp^0,w,c
 10579  010EC4  B0D8               	btfsc	status,0,c
 10580  010EC6  D00E               	goto	u8930
 10581                           
 10582                           ;stkvar	_n @ sp[(-56)+32]
 10583  010EC8  0EE9               	movlw	-23
 10584  010ECA  BEE3               	btfsc	plusw1,7,c
 10585  010ECC  D633               	goto	l9088
 10586  010ECE  0EE9               	movlw	-23
 10587  010ED0  50E3               	movf	plusw1,w,c
 10588  010ED2  E108               	bnz	u8930
 10589  010ED4  0EE8               	movlw	-24
 10590  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 10591  010EDC  0E4B               	movlw	75
 10592  010EDE  5E35               	subwf	btemp^0,f,c
 10593  010EE0  A0D8               	btfss	status,0,c
 10594  010EE2  D628               	goto	l9088
 10595  010EE4                     u8930:
 10596                           
 10597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 10598                           ;stkvar	_pp @ sp[(-56)+50]
 10599  010EE4  0EFA               	movlw	-6
 10600  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 10601  010EEC  0EFB               	movlw	-5
 10602  010EEE  50E3               	movf	plusw1,w,c
 10603  010EF0  1035               	iorwf	btemp^0,w,c
 10604  010EF2  B4D8               	btfsc	status,2,c
 10605  010EF4  A822               	btfss	_flags^0,4,c
 10606  010EF6  D021               	goto	l9150
 10607                           
 10608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 10609                           ;stkvar	_n @ sp[(-56)+32]
 10610  010EF8  0EE8               	movlw	-24
 10611  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10612  010F00  0EE9               	movlw	-23
 10613  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 10614  010F08  0EA8               	movlw	low _dbuf
 10615  010F0A  243F               	addwf	(btemp+10)^0,w,c
 10616  010F0C  6ED9               	movwf	fsr2l,c
 10617  010F0E  0E01               	movlw	high _dbuf
 10618  010F10  2040               	addwfc	(btemp+11)^0,w,c
 10619  010F12  6EDA               	movwf	fsr2h,c
 10620  010F14  0E2E               	movlw	46
 10621  010F16  6EDF               	movwf	indf2,c
 10622                           
 10623                           ;stkvar	_n @ sp[(-56)+32]
 10624  010F18  0EE8               	movlw	-24
 10625  010F1A  50E3               	movf	plusw1,w,c
 10626  010F1C  0F01               	addlw	1
 10627  010F1E  6E35               	movwf	btemp^0,c
 10628  010F20  0EE8               	movlw	-24
 10629  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 10630  010F28  6A35               	clrf	btemp^0,c
 10631  010F2A  0EE9               	movlw	-23
 10632  010F2C  50E3               	movf	plusw1,w,c
 10633  010F2E  2035               	addwfc	btemp^0,w,c
 10634  010F30  6E35               	movwf	btemp^0,c
 10635  010F32  0EE9               	movlw	-23
 10636  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 10637  010F3A                     l9150:
 10638                           
 10639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 10640                           ;stkvar	_n @ sp[(-56)+32]
 10641  010F3A  0EE8               	movlw	-24
 10642  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10643  010F42  0EE9               	movlw	-23
 10644  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 10645  010F4A  0EA8               	movlw	low _dbuf
 10646  010F4C  243F               	addwf	(btemp+10)^0,w,c
 10647  010F4E  6ED9               	movwf	fsr2l,c
 10648  010F50  0E01               	movlw	high _dbuf
 10649  010F52  2040               	addwfc	(btemp+11)^0,w,c
 10650  010F54  6EDA               	movwf	fsr2h,c
 10651  010F56  0E00               	movlw	0
 10652  010F58  6EDF               	movwf	indf2,c
 10653                           
 10654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 10655                           ;stkvar	_nmode @ sp[(-56)+55]
 10656  010F5A  0EFF               	movlw	-1
 10657  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 10658  010F62  0E65               	movlw	101
 10659  010F64  1835               	xorwf	btemp^0,w,c
 10660  010F66  A4D8               	btfss	status,2,c
 10661  010F68  EF16  F081         	goto	l8954
 10662                           
 10663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 10664  010F6C  0E4F               	movlw	79
 10665  010F6E  6E3F               	movwf	(btemp+10)^0,c
 10666  010F70  0E00               	movlw	0
 10667  010F72  6E40               	movwf	(btemp+11)^0,c
 10668                           
 10669                           ;stkvar	_i @ sp[(-56)+36]
 10670  010F74  0EEC               	movlw	-20
 10671  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10672  010F7C  0EED               	movlw	-19
 10673  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10674                           
 10675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 10676                           ;stkvar	_i @ sp[(-56)+36]
 10677  010F84  0EEC               	movlw	-20
 10678  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 10679  010F8C  0EED               	movlw	-19
 10680  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 10681  010F94  0EA8               	movlw	low _dbuf
 10682  010F96  243F               	addwf	(btemp+10)^0,w,c
 10683  010F98  6ED9               	movwf	fsr2l,c
 10684  010F9A  0E01               	movlw	high _dbuf
 10685  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 10686  010F9E  6EDA               	movwf	fsr2h,c
 10687  010FA0  0E00               	movlw	0
 10688  010FA2  6EDF               	movwf	indf2,c
 10689                           
 10690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 10691                           ;stkvar	_sign @ sp[(-56)+42]
 10692  010FA4  0EF2               	movlw	-14
 10693  010FA6  6AE3               	clrf	plusw1,c
 10694  010FA8  0EF3               	movlw	-13
 10695  010FAA  6AE3               	clrf	plusw1,c
 10696                           
 10697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 10698                           ;stkvar	_e @ sp[(-56)+34]
 10699  010FAC  0EEB               	movlw	-21
 10700  010FAE  AEE3               	btfss	plusw1,7,c
 10701  010FB0  D012               	goto	l9164
 10702                           
 10703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 10704  010FB2  0E01               	movlw	1
 10705  010FB4  6E3F               	movwf	(btemp+10)^0,c
 10706  010FB6  0E00               	movlw	0
 10707  010FB8  6E40               	movwf	(btemp+11)^0,c
 10708                           
 10709                           ;stkvar	_sign @ sp[(-56)+42]
 10710  010FBA  0EF2               	movlw	-14
 10711  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10712  010FC2  0EF3               	movlw	-13
 10713  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 10714                           
 10715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 10716                           ;stkvar	_e @ sp[(-56)+34]
 10717                           ;stkvar	_e @ sp[(-56)+34]
 10718  010FCA  0EEA               	movlw	-22
 10719  010FCC  6CE3               	negf	plusw1,c
 10720  010FCE  0EEB               	movlw	-21
 10721  010FD0  1EE3               	comf	plusw1,f,c
 10722  010FD2  B0D8               	btfsc	status,0,c
 10723  010FD4  2AE3               	incf	plusw1,f,c
 10724  010FD6                     l9164:
 10725                           
 10726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 10727  010FD6  0E02               	movlw	2
 10728  010FD8  6E3F               	movwf	(btemp+10)^0,c
 10729  010FDA  0E00               	movlw	0
 10730  010FDC  6E40               	movwf	(btemp+11)^0,c
 10731                           
 10732                           ;stkvar	_p @ sp[(-56)+40]
 10733  010FDE  0EF0               	movlw	-16
 10734  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10735  010FE6  0EF1               	movlw	-15
 10736  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 10737                           
 10738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 10739  010FEE  D051               	goto	l9176
 10740  010FF0                     l9166:
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 10743                           ;stkvar	_i @ sp[(-56)+36]
 10744  010FF0  50E1               	movf	fsr1l,w,c
 10745  010FF2  0FEC               	addlw	-20
 10746  010FF4  6ED9               	movwf	fsr2l,c
 10747  010FF6  50E2               	movf	fsr1h,w,c
 10748  010FF8  6EDA               	movwf	fsr2h,c
 10749  010FFA  0EFF               	movlw	255
 10750  010FFC  22DA               	addwfc	fsr2h,f,c
 10751  010FFE  06DE               	decf	postinc2,f,c
 10752  011000  0E00               	movlw	0
 10753  011002  5ADD               	subwfb	postdec2,f,c
 10754                           
 10755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 10756                           ;stkvar	_i @ sp[(-56)+36]
 10757  011004  0EEC               	movlw	-20
 10758  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 10759  01100C  0EED               	movlw	-19
 10760  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 10761  011014  0EA8               	movlw	low _dbuf
 10762  011016  243F               	addwf	(btemp+10)^0,w,c
 10763  011018  6ED9               	movwf	fsr2l,c
 10764  01101A  0E01               	movlw	high _dbuf
 10765  01101C  2040               	addwfc	(btemp+11)^0,w,c
 10766  01101E  6EDA               	movwf	fsr2h,c
 10767  011020  0E0A               	movlw	10
 10768  011022  6EE6               	movwf	postinc1,c
 10769  011024  0E00               	movlw	0
 10770  011026  6EE6               	movwf	postinc1,c
 10771                           
 10772                           ;stkvar	_e @ sp[(-58)+34]
 10773  011028  0EE8               	movlw	-24
 10774  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 10775  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 10776  011036  EC4A  F0AF         	call	___awmod	;wreg free
 10777  01103A  5035               	movf	btemp^0,w,c
 10778  01103C  0F30               	addlw	48
 10779  01103E  6EDF               	movwf	indf2,c
 10780                           
 10781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 10782  011040  0E0A               	movlw	10
 10783  011042  6EE6               	movwf	postinc1,c
 10784  011044  0E00               	movlw	0
 10785  011046  6EE6               	movwf	postinc1,c
 10786                           
 10787                           ;stkvar	_e @ sp[(-58)+34]
 10788  011048  0EE8               	movlw	-24
 10789  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 10790  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 10791  011056  EC7A  F0AD         	call	___awdiv	;wreg free
 10792                           
 10793                           ;stkvar	_e @ sp[(-56)+34]
 10794  01105A  0EEA               	movlw	-22
 10795  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10796  011062  0EEB               	movlw	-21
 10797  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10798                           
 10799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 10800                           ;stkvar	_p @ sp[(-56)+40]
 10801  01106A  50E1               	movf	fsr1l,w,c
 10802  01106C  0FF0               	addlw	-16
 10803  01106E  6ED9               	movwf	fsr2l,c
 10804  011070  50E2               	movf	fsr1h,w,c
 10805  011072  6EDA               	movwf	fsr2h,c
 10806  011074  0EFF               	movlw	255
 10807  011076  22DA               	addwfc	fsr2h,f,c
 10808  011078  06DE               	decf	postinc2,f,c
 10809  01107A  0E00               	movlw	0
 10810  01107C  5ADD               	subwfb	postdec2,f,c
 10811                           
 10812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 10813                           ;stkvar	_w @ sp[(-56)+38]
 10814  01107E  50E1               	movf	fsr1l,w,c
 10815  011080  0FEE               	addlw	-18
 10816  011082  6ED9               	movwf	fsr2l,c
 10817  011084  50E2               	movf	fsr1h,w,c
 10818  011086  6EDA               	movwf	fsr2h,c
 10819  011088  0EFF               	movlw	255
 10820  01108A  22DA               	addwfc	fsr2h,f,c
 10821  01108C  06DE               	decf	postinc2,f,c
 10822  01108E  0E00               	movlw	0
 10823  011090  5ADD               	subwfb	postdec2,f,c
 10824  011092                     l9176:
 10825                           
 10826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 10827                           ;stkvar	_e @ sp[(-56)+34]
 10828  011092  0EEA               	movlw	-22
 10829  011094  006F FF8C  F035    	movff	plusw1,btemp
 10830  01109A  0EEB               	movlw	-21
 10831  01109C  50E3               	movf	plusw1,w,c
 10832  01109E  1035               	iorwf	btemp^0,w,c
 10833  0110A0  A4D8               	btfss	status,2,c
 10834  0110A2  D7A6               	goto	l9166
 10835                           
 10836                           ;stkvar	_p @ sp[(-56)+40]
 10837  0110A4  0EF1               	movlw	-15
 10838  0110A6  BEE3               	btfsc	plusw1,7,c
 10839  0110A8  D007               	goto	u8990
 10840  0110AA  0EF1               	movlw	-15
 10841  0110AC  50E3               	movf	plusw1,w,c
 10842  0110AE  E1A0               	bnz	l9166
 10843  0110B0  0EF0               	movlw	-16
 10844  0110B2  04E3               	decf	plusw1,w,c
 10845  0110B4  B0D8               	btfsc	status,0,c
 10846  0110B6  D79C               	goto	l9166
 10847  0110B8                     u8990:
 10848                           
 10849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 10850                           ;stkvar	_i @ sp[(-56)+36]
 10851  0110B8  50E1               	movf	fsr1l,w,c
 10852  0110BA  0FEC               	addlw	-20
 10853  0110BC  6ED9               	movwf	fsr2l,c
 10854  0110BE  50E2               	movf	fsr1h,w,c
 10855  0110C0  6EDA               	movwf	fsr2h,c
 10856  0110C2  0EFF               	movlw	255
 10857  0110C4  22DA               	addwfc	fsr2h,f,c
 10858  0110C6  06DE               	decf	postinc2,f,c
 10859  0110C8  0E00               	movlw	0
 10860  0110CA  5ADD               	subwfb	postdec2,f,c
 10861                           
 10862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 10863                           ;stkvar	_sign @ sp[(-56)+42]
 10864  0110CC  0EF2               	movlw	-14
 10865  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 10866  0110D4  0EF3               	movlw	-13
 10867  0110D6  50E3               	movf	plusw1,w,c
 10868  0110D8  1035               	iorwf	btemp^0,w,c
 10869  0110DA  A4D8               	btfss	status,2,c
 10870  0110DC  D002               	goto	l9186
 10871  0110DE  0E2B               	movlw	43
 10872  0110E0  D001               	goto	L8
 10873  0110E2                     l9186:
 10874  0110E2  0E2D               	movlw	45
 10875  0110E4                     L8:
 10876  0110E4  6E3F               	movwf	(btemp+10)^0,c
 10877  0110E6  0E00               	movlw	0
 10878  0110E8  6E40               	movwf	(btemp+11)^0,c
 10879                           
 10880                           ;stkvar	_efgtoa$4098 @ sp[(-56)+4]
 10881  0110EA  0ECC               	movlw	-52
 10882  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10883  0110F2  0ECD               	movlw	-51
 10884  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 10885                           
 10886                           ;stkvar	_efgtoa$4098 @ sp[(-56)+4]
 10887                           ;stkvar	_i @ sp[(-56)+36]
 10888  0110FA  0EEC               	movlw	-20
 10889  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10890  011102  0EED               	movlw	-19
 10891  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 10892  01110A  0EA8               	movlw	low _dbuf
 10893  01110C  243F               	addwf	(btemp+10)^0,w,c
 10894  01110E  6ED9               	movwf	fsr2l,c
 10895  011110  0E01               	movlw	high _dbuf
 10896  011112  2040               	addwfc	(btemp+11)^0,w,c
 10897  011114  6EDA               	movwf	fsr2h,c
 10898  011116  0ECC               	movlw	-52
 10899  011118  006F FF8F FFDF     	movff	plusw1,indf2
 10900                           
 10901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 10902                           ;stkvar	_w @ sp[(-56)+38]
 10903  01111E  50E1               	movf	fsr1l,w,c
 10904  011120  0FEE               	addlw	-18
 10905  011122  6ED9               	movwf	fsr2l,c
 10906  011124  50E2               	movf	fsr1h,w,c
 10907  011126  6EDA               	movwf	fsr2h,c
 10908  011128  0EFF               	movlw	255
 10909  01112A  22DA               	addwfc	fsr2h,f,c
 10910  01112C  06DE               	decf	postinc2,f,c
 10911  01112E  0E00               	movlw	0
 10912  011130  5ADD               	subwfb	postdec2,f,c
 10913                           
 10914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10915                           ;stkvar	_i @ sp[(-56)+36]
 10916  011132  50E1               	movf	fsr1l,w,c
 10917  011134  0FEC               	addlw	-20
 10918  011136  6ED9               	movwf	fsr2l,c
 10919  011138  50E2               	movf	fsr1h,w,c
 10920  01113A  6EDA               	movwf	fsr2h,c
 10921  01113C  0EFF               	movlw	255
 10922  01113E  22DA               	addwfc	fsr2h,f,c
 10923  011140  06DE               	decf	postinc2,f,c
 10924  011142  0E00               	movlw	0
 10925  011144  5ADD               	subwfb	postdec2,f,c
 10926  011146  0EBF               	movlw	191
 10927  011148  6E3F               	movwf	(btemp+10)^0,c
 10928  01114A  0EFF               	movlw	255
 10929  01114C  6E40               	movwf	(btemp+11)^0,c
 10930                           
 10931                           ;stkvar	_c @ sp[(-56)+-7]
 10932  01114E  0EC1               	movlw	-63
 10933  011150  50E3               	movf	plusw1,w,c
 10934  011152  6E3D               	movwf	(btemp+8)^0,c
 10935  011154  6A3E               	clrf	(btemp+9)^0,c
 10936  011156  503F               	movf	(btemp+10)^0,w,c
 10937  011158  263D               	addwf	(btemp+8)^0,f,c
 10938  01115A  5040               	movf	(btemp+11)^0,w,c
 10939  01115C  223E               	addwfc	(btemp+9)^0,f,c
 10940  01115E  503E               	movf	(btemp+9)^0,w,c
 10941  011160  E106               	bnz	u9010
 10942  011162  0E1A               	movlw	26
 10943  011164  5C3D               	subwf	(btemp+8)^0,w,c
 10944  011166  B0D8               	btfsc	status,0,c
 10945  011168  D002               	goto	u9010
 10946  01116A  0E01               	movlw	1
 10947  01116C  D001               	goto	u9020
 10948  01116E                     u9010:
 10949  01116E  0E00               	movlw	0
 10950  011170                     u9020:
 10951  011170  6E3F               	movwf	(btemp+10)^0,c
 10952  011172  6A40               	clrf	(btemp+11)^0,c
 10953                           
 10954                           ;stkvar	_efgtoa$4100 @ sp[(-56)+0]
 10955  011174  0EC8               	movlw	-56
 10956  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10957  01117C  0EC9               	movlw	-55
 10958  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10959                           
 10960                           ;stkvar	_efgtoa$4100 @ sp[(-56)+0]
 10961  011184  0EC8               	movlw	-56
 10962  011186  006F FF8C  F035    	movff	plusw1,btemp
 10963  01118C  0EC9               	movlw	-55
 10964  01118E  50E3               	movf	plusw1,w,c
 10965  011190  1035               	iorwf	btemp^0,w,c
 10966  011192  A4D8               	btfss	status,2,c
 10967  011194  D002               	goto	l9202
 10968  011196  0E65               	movlw	101
 10969  011198  D001               	goto	L9
 10970  01119A                     l9202:
 10971  01119A  0E45               	movlw	69
 10972  01119C                     L9:
 10973  01119C  6E3F               	movwf	(btemp+10)^0,c
 10974  01119E  0E00               	movlw	0
 10975  0111A0  6E40               	movwf	(btemp+11)^0,c
 10976                           
 10977                           ;stkvar	_efgtoa$4099 @ sp[(-56)+2]
 10978  0111A2  0ECA               	movlw	-54
 10979  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10980  0111AA  0ECB               	movlw	-53
 10981  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10982                           
 10983                           ;stkvar	_efgtoa$4099 @ sp[(-56)+2]
 10984                           ;stkvar	_i @ sp[(-56)+36]
 10985  0111B2  0EEC               	movlw	-20
 10986  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 10987  0111BA  0EED               	movlw	-19
 10988  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 10989  0111C2  0EA8               	movlw	low _dbuf
 10990  0111C4  243F               	addwf	(btemp+10)^0,w,c
 10991  0111C6  6ED9               	movwf	fsr2l,c
 10992  0111C8  0E01               	movlw	high _dbuf
 10993  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 10994  0111CC  6EDA               	movwf	fsr2h,c
 10995  0111CE  0ECA               	movlw	-54
 10996  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 10997                           
 10998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 10999                           ;stkvar	_w @ sp[(-56)+38]
 11000  0111D6  50E1               	movf	fsr1l,w,c
 11001  0111D8  0FEE               	addlw	-18
 11002  0111DA  6ED9               	movwf	fsr2l,c
 11003  0111DC  50E2               	movf	fsr1h,w,c
 11004  0111DE  6EDA               	movwf	fsr2h,c
 11005  0111E0  0EFF               	movlw	255
 11006  0111E2  22DA               	addwfc	fsr2h,f,c
 11007  0111E4  06DE               	decf	postinc2,f,c
 11008  0111E6  0E00               	movlw	0
 11009  0111E8  5ADD               	subwfb	postdec2,f,c
 11010                           
 11011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11012                           ;stkvar	_i @ sp[(-56)+36]
 11013  0111EA  0EEC               	movlw	-20
 11014  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11015  0111F2  0EED               	movlw	-19
 11016  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11017  0111FA  0EA8               	movlw	low _dbuf
 11018  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11019  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11020  011200  0E01               	movlw	high _dbuf
 11021  011202  2040               	addwfc	(btemp+11)^0,w,c
 11022  011204  6E3E               	movwf	(btemp+9)^0,c
 11023  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11024  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11025                           
 11026                           ;stkvar	_n @ sp[(-58)+32]
 11027  011212  0EA8               	movlw	low _dbuf
 11028  011214  6E3F               	movwf	(btemp+10)^0,c
 11029  011216  0E01               	movlw	high _dbuf
 11030  011218  6E40               	movwf	(btemp+11)^0,c
 11031  01121A  0EE6               	movlw	-26
 11032  01121C  50E3               	movf	plusw1,w,c
 11033  01121E  263F               	addwf	(btemp+10)^0,f,c
 11034  011220  0EE7               	movlw	-25
 11035  011222  50E3               	movf	plusw1,w,c
 11036  011224  2240               	addwfc	(btemp+11)^0,f,c
 11037  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11038  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11039  011232  ECE1  F0B1         	call	_strcpy	;wreg free
 11040  011236  EF16  F081         	goto	l8954
 11041  01123A                     l1770:
 11042                           
 11043                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11044  01123A  0EC1               	movlw	193
 11045  01123C  26E1               	addwf	fsr1l,f,c
 11046  01123E  0EFF               	movlw	255
 11047  011240  22E2               	addwfc	fsr1h,f,c
 11048  011242  0012               	return		;funcret
 11049  011244                     __end_of_efgtoa:
 11050                           	opt callstack 0
 11051                           
 11052 ;; *************** function _tolower *****************
 11053 ;; Defined at:
 11054 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  c               2  [STACK] int 
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;		None
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  2  [STACK] int 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/4
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11072 ;;Total ram usage:        0 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:    7
 11075 ;; This function calls:
 11076 ;;		_isupper
 11077 ;; This function is called by:
 11078 ;;		_efgtoa
 11079 ;;		_vfpfcnvrt
 11080 ;; This function uses a reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text39
 11084  016CD4                     __ptext39:
 11085                           	opt callstack 0
 11086  016CD4                     _tolower:
 11087                           	opt callstack 0
 11088                           
 11089                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11090  016CD4  52E6               	movf	postinc1,f,c
 11091  016CD6  52E6               	movf	postinc1,f,c
 11092                           
 11093                           ;stkvar	_c @ sp[(-2)+-2]
 11094                           
 11095                           ;incstack = 0
 11096  016CD8  0EFC               	movlw	-4
 11097  016CDA  50E3               	movf	plusw1,w,c
 11098  016CDC  0FBF               	addlw	191
 11099  016CDE  6E3F               	movwf	(btemp+10)^0,c
 11100  016CE0  0EFD               	movlw	-3
 11101  016CE2  006F FF8C  F040    	movff	plusw1,btemp+11
 11102  016CE8  0EFF               	movlw	255
 11103  016CEA  2240               	addwfc	(btemp+11)^0,f,c
 11104  016CEC  5040               	movf	(btemp+11)^0,w,c
 11105  016CEE  E106               	bnz	u4830
 11106  016CF0  0E1A               	movlw	26
 11107  016CF2  5C3F               	subwf	(btemp+10)^0,w,c
 11108  016CF4  B0D8               	btfsc	status,0,c
 11109  016CF6  D002               	goto	u4830
 11110  016CF8  0E01               	movlw	1
 11111  016CFA  D001               	goto	u4840
 11112  016CFC                     u4830:
 11113  016CFC  0E00               	movlw	0
 11114  016CFE                     u4840:
 11115  016CFE  6E3F               	movwf	(btemp+10)^0,c
 11116  016D00  6A40               	clrf	(btemp+11)^0,c
 11117                           
 11118                           ;stkvar	_tolower$4758 @ sp[(-2)+0]
 11119  016D02  0EFE               	movlw	-2
 11120  016D04  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11121  016D0A  0EFF               	movlw	-1
 11122  016D0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11123                           
 11124                           ;stkvar	_tolower$4758 @ sp[(-2)+0]
 11125  016D12  0EFE               	movlw	-2
 11126  016D14  006F FF8C  F035    	movff	plusw1,btemp
 11127  016D1A  0EFF               	movlw	-1
 11128  016D1C  50E3               	movf	plusw1,w,c
 11129  016D1E  1035               	iorwf	btemp^0,w,c
 11130  016D20  B4D8               	btfsc	status,2,c
 11131  016D22  D00D               	goto	l6158
 11132                           
 11133                           ;stkvar	_c @ sp[(-2)+-2]
 11134  016D24  0EFC               	movlw	-4
 11135  016D26  006F FF8C  F035    	movff	plusw1,btemp
 11136  016D2C  0EFD               	movlw	-3
 11137  016D2E  006F FF8C  F036    	movff	plusw1,btemp+1
 11138  016D34  0E20               	movlw	32
 11139  016D36  1235               	iorwf	btemp^0,f,c
 11140  016D38  0E00               	movlw	0
 11141  016D3A  1236               	iorwf	(btemp+1)^0,f,c
 11142  016D3C  D008               	goto	l2790
 11143  016D3E                     l6158:
 11144                           
 11145                           ;stkvar	_c @ sp[(-2)+-2]
 11146  016D3E  0EFC               	movlw	-4
 11147  016D40  006F FF8C  F035    	movff	plusw1,btemp
 11148  016D46  0EFD               	movlw	-3
 11149  016D48  006F FF8C  F036    	movff	plusw1,btemp+1
 11150  016D4E                     l2790:
 11151                           
 11152                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11153  016D4E  52E5               	movf	postdec1,f,c
 11154  016D50  52E5               	movf	postdec1,f,c
 11155  016D52  52E5               	movf	postdec1,f,c
 11156  016D54  52E5               	movf	postdec1,f,c
 11157  016D56  0012               	return		;funcret
 11158  016D58                     __end_of_tolower:
 11159                           	opt callstack 0
 11160                           
 11161 ;; *************** function _isupper *****************
 11162 ;; Defined at:
 11163 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  c               2  [STACK] int 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;		None
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  2  [STACK] int 
 11170 ;; Registers used:
 11171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11181 ;;Total ram usage:        0 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    6
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_efgtoa
 11188 ;;		_xtoa
 11189 ;;		_vfpfcnvrt
 11190 ;;		_tolower
 11191 ;; This function uses a reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text40
 11195  017654                     __ptext40:
 11196                           	opt callstack 0
 11197  017654                     _isupper:
 11198                           	opt callstack 17
 11199                           
 11200                           ;stkvar	_c @ sp[(0)+-2]
 11201                           
 11202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11203                           ;incstack = 0
 11204  017654  0EFE               	movlw	-2
 11205  017656  50E3               	movf	plusw1,w,c
 11206  017658  0FBF               	addlw	191
 11207  01765A  6E3F               	movwf	(btemp+10)^0,c
 11208  01765C  0EFF               	movlw	-1
 11209  01765E  006F FF8C  F040    	movff	plusw1,btemp+11
 11210  017664  0EFF               	movlw	255
 11211  017666  2240               	addwfc	(btemp+11)^0,f,c
 11212  017668  5040               	movf	(btemp+11)^0,w,c
 11213  01766A  E106               	bnz	u4230
 11214  01766C  0E1A               	movlw	26
 11215  01766E  5C3F               	subwf	(btemp+10)^0,w,c
 11216  017670  B0D8               	btfsc	status,0,c
 11217  017672  D002               	goto	u4230
 11218  017674  0E01               	movlw	1
 11219  017676  D001               	goto	u4240
 11220  017678                     u4230:
 11221  017678  0E00               	movlw	0
 11222  01767A                     u4240:
 11223  01767A  6E35               	movwf	btemp^0,c
 11224  01767C  6A36               	clrf	(btemp+1)^0,c
 11225                           
 11226                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11227  01767E  52E5               	movf	postdec1,f,c
 11228  017680  52E5               	movf	postdec1,f,c
 11229  017682  0012               	return		;funcret
 11230  017684                     __end_of_isupper:
 11231                           	opt callstack 0
 11232                           
 11233 ;; *************** function _strcpy *****************
 11234 ;; Defined at:
 11235 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  dest            2  [STACK] PTR unsigned char 
 11238 ;;		 -> dbuf(80), 
 11239 ;;  src             2  [STACK] PTR const unsigned char 
 11240 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11241 ;;		 -> dbuf(80), 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  d               2  [STACK] PTR unsigned char 
 11244 ;;		 -> dbuf(80), 
 11245 ;;  s               2  [STACK] PTR const unsigned char 
 11246 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11247 ;;		 -> dbuf(80), 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  2  [STACK] PTR unsigned char 
 11250 ;; Registers used:
 11251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/4
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11261 ;;Total ram usage:        0 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    6
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_efgtoa
 11268 ;; This function uses a reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text41
 11272  0163C2                     __ptext41:
 11273                           	opt callstack 0
 11274  0163C2                     _strcpy:
 11275                           	opt callstack 0
 11276                           
 11277                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11278  0163C2  52E6               	movf	postinc1,f,c
 11279  0163C4  52E6               	movf	postinc1,f,c
 11280  0163C6  52E6               	movf	postinc1,f,c
 11281  0163C8  52E6               	movf	postinc1,f,c
 11282                           
 11283                           ;stkvar	_src @ sp[(-4)+-4]
 11284                           
 11285                           ;incstack = 0
 11286  0163CA  0EF8               	movlw	-8
 11287  0163CC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11288  0163D2  0EF9               	movlw	-7
 11289  0163D4  006F FF8C  F040    	movff	plusw1,btemp+11
 11290                           
 11291                           ;stkvar	_s @ sp[(-4)+2]
 11292  0163DA  0EFF               	movlw	-1
 11293  0163DC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11294  0163E2  0EFE               	movlw	-2
 11295  0163E4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11296                           
 11297                           ;stkvar	_dest @ sp[(-4)+-2]
 11298  0163EA  0EFA               	movlw	-6
 11299  0163EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11300  0163F2  0EFB               	movlw	-5
 11301  0163F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11302                           
 11303                           ;stkvar	_d @ sp[(-4)+0]
 11304  0163FA  0EFD               	movlw	-3
 11305  0163FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11306  016402  0EFC               	movlw	-4
 11307  016404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11308  01640A                     l8828:
 11309                           
 11310                           ;stkvar	_s @ sp[(-4)+2]
 11311  01640A  50E1               	movf	fsr1l,w,c
 11312  01640C  0FFE               	addlw	-2
 11313  01640E  6ED9               	movwf	fsr2l,c
 11314  016410  50E2               	movf	fsr1h,w,c
 11315  016412  6EDA               	movwf	fsr2h,c
 11316  016414  0EFF               	movlw	255
 11317  016416  22DA               	addwfc	fsr2h,f,c
 11318  016418  006F FF7C  F03F    	movff	indf2,btemp+10
 11319  01641E  0E01               	movlw	1
 11320  016420  26DE               	addwf	postinc2,f,c
 11321  016422  006F FF7C  F040    	movff	indf2,btemp+11
 11322  016428  0E00               	movlw	0
 11323  01642A  22DD               	addwfc	postdec2,f,c
 11324  01642C  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11325  016432  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11326  016438  0E00               	movlw	low (__mediumconst shr (0+16))
 11327  01643A  6EF8               	movwf	tblptru,c
 11328                           
 11329                           ;stkvar	_d @ sp[(-4)+0]
 11330  01643C  50E1               	movf	fsr1l,w,c
 11331  01643E  0FFC               	addlw	-4
 11332  016440  6ED9               	movwf	fsr2l,c
 11333  016442  50E2               	movf	fsr1h,w,c
 11334  016444  6EDA               	movwf	fsr2h,c
 11335  016446  0EFF               	movlw	255
 11336  016448  22DA               	addwfc	fsr2h,f,c
 11337  01644A  006F FF7C  F03F    	movff	indf2,btemp+10
 11338  016450  0E01               	movlw	1
 11339  016452  26DE               	addwf	postinc2,f,c
 11340  016454  006F FF7C  F040    	movff	indf2,btemp+11
 11341  01645A  0E00               	movlw	0
 11342  01645C  22DD               	addwfc	postdec2,f,c
 11343  01645E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11344  016464  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11345  01646A  0E1F               	movlw	(high __ramtop+-1)
 11346  01646C  64F7               	cpfsgt	tblptrh,c
 11347  01646E  D003               	bra	u8327
 11348  016470  0008               	tblrd		*
 11349  016472  50F5               	movf	tablat,w,c
 11350  016474  D007               	bra	u8320
 11351  016476                     u8327:
 11352  016476  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11353  01647C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11354  016482  50EF               	movf	indf0,w,c
 11355  016484                     u8320:
 11356  016484  6EDF               	movwf	indf2,c
 11357  016486  50DF               	movf	indf2,w,c
 11358  016488  A4D8               	btfss	status,2,c
 11359  01648A  D7BF               	goto	l8828
 11360                           
 11361                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 11362  01648C  0EF8               	movlw	248
 11363  01648E  26E1               	addwf	fsr1l,f,c
 11364  016490  0EFF               	movlw	255
 11365  016492  22E2               	addwfc	fsr1h,f,c
 11366  016494  0012               	return		;funcret
 11367  016496                     __end_of_strcpy:
 11368                           	opt callstack 0
 11369                           
 11370 ;; *************** function _floorf *****************
 11371 ;; Defined at:
 11372 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  x               4  [STACK] float 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  u               4  [STACK] struct .
 11377 ;;  m               4  [STACK] unsigned long 
 11378 ;;  e               2  [STACK] int 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  4  [STACK] float 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/4
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11392 ;;Total ram usage:        0 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    6
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_efgtoa
 11399 ;; This function uses a reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text42
 11403  013EDA                     __ptext42:
 11404                           	opt callstack 0
 11405  013EDA                     _floorf:
 11406                           	opt callstack 0
 11407                           
 11408                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11409  013EDA  0E0A               	movlw	10
 11410  013EDC  26E1               	addwf	fsr1l,f,c
 11411  013EDE  0E00               	movlw	0
 11412  013EE0  22E2               	addwfc	fsr1h,f,c
 11413                           
 11414                           ;incstack = 0
 11415  013EE2  0060  F298  F03D   	movff	floorf@F524,btemp+8
 11416  013EE8  0060  F29C  F03E   	movff	floorf@F524+1,btemp+9
 11417  013EEE  0060  F2A0  F03F   	movff	floorf@F524+2,btemp+10
 11418  013EF4  0060  F2A4  F040   	movff	floorf@F524+3,btemp+11
 11419                           
 11420                           ;stkvar	_u @ sp[(-10)+0]
 11421  013EFA  0EF6               	movlw	-10
 11422  013EFC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11423  013F02  0EF7               	movlw	-9
 11424  013F04  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11425  013F0A  0EF8               	movlw	-8
 11426  013F0C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11427  013F12  0EF9               	movlw	-7
 11428  013F14  0060  F103  FFE3   	movff	btemp+11,plusw1
 11429                           
 11430                           ;stkvar	_x @ sp[(-10)+-4]
 11431  013F1A  0EF2               	movlw	-14
 11432  013F1C  006F FF8C  F03D    	movff	plusw1,btemp+8
 11433  013F22  0EF3               	movlw	-13
 11434  013F24  006F FF8C  F03E    	movff	plusw1,btemp+9
 11435  013F2A  0EF4               	movlw	-12
 11436  013F2C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11437  013F32  0EF5               	movlw	-11
 11438  013F34  006F FF8C  F040    	movff	plusw1,btemp+11
 11439                           
 11440                           ;stkvar	_u @ sp[(-10)+0]
 11441  013F3A  0EF6               	movlw	-10
 11442  013F3C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11443  013F42  0EF7               	movlw	-9
 11444  013F44  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11445  013F4A  0EF8               	movlw	-8
 11446  013F4C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11447  013F52  0EF9               	movlw	-7
 11448  013F54  0060  F103  FFE3   	movff	btemp+11,plusw1
 11449  013F5A  0E81               	movlw	129
 11450  013F5C  6E3F               	movwf	(btemp+10)^0,c
 11451  013F5E  0EFF               	movlw	255
 11452  013F60  6E40               	movwf	(btemp+11)^0,c
 11453                           
 11454                           ;stkvar	_u @ sp[(-10)+0]
 11455  013F62  0EF6               	movlw	-10
 11456  013F64  006F FF8C  F039    	movff	plusw1,btemp+4
 11457  013F6A  0EF7               	movlw	-9
 11458  013F6C  006F FF8C  F03A    	movff	plusw1,btemp+5
 11459  013F72  0EF8               	movlw	-8
 11460  013F74  006F FF8C  F03B    	movff	plusw1,btemp+6
 11461  013F7A  0EF9               	movlw	-7
 11462  013F7C  006F FF8C  F03C    	movff	plusw1,btemp+7
 11463  013F82  0E18               	movlw	24
 11464  013F84  D005               	goto	u4860
 11465  013F86                     u4865:
 11466  013F86  90D8               	bcf	status,0,c
 11467  013F88  323C               	rrcf	(btemp+7)^0,f,c
 11468  013F8A  323B               	rrcf	(btemp+6)^0,f,c
 11469  013F8C  323A               	rrcf	(btemp+5)^0,f,c
 11470  013F8E  3239               	rrcf	(btemp+4)^0,f,c
 11471  013F90                     u4860:
 11472  013F90  2EE8               	decfsz	wreg,f,c
 11473  013F92  D7F9               	goto	u4865
 11474  013F94  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 11475  013F9A  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 11476  013FA0  0EFF               	movlw	255
 11477  013FA2  163D               	andwf	(btemp+8)^0,f,c
 11478  013FA4  0E00               	movlw	0
 11479  013FA6  163E               	andwf	(btemp+9)^0,f,c
 11480  013FA8  503F               	movf	(btemp+10)^0,w,c
 11481  013FAA  263D               	addwf	(btemp+8)^0,f,c
 11482  013FAC  5040               	movf	(btemp+11)^0,w,c
 11483  013FAE  223E               	addwfc	(btemp+9)^0,f,c
 11484                           
 11485                           ;stkvar	_e @ sp[(-10)+8]
 11486  013FB0  0EFE               	movlw	-2
 11487  013FB2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11488  013FB8  0EFF               	movlw	-1
 11489  013FBA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11490                           
 11491                           ;stkvar	_e @ sp[(-10)+8]
 11492  013FC0  0EFF               	movlw	-1
 11493  013FC2  BEE3               	btfsc	plusw1,7,c
 11494  013FC4  D019               	goto	l6172
 11495  013FC6  0EFF               	movlw	-1
 11496  013FC8  50E3               	movf	plusw1,w,c
 11497  013FCA  E108               	bnz	u4870
 11498  013FCC  0EFE               	movlw	-2
 11499  013FCE  006F FF8C  F035    	movff	plusw1,btemp
 11500  013FD4  0E17               	movlw	23
 11501  013FD6  5E35               	subwf	btemp^0,f,c
 11502  013FD8  A0D8               	btfss	status,0,c
 11503  013FDA  D00E               	goto	l6172
 11504  013FDC                     u4870:
 11505                           
 11506                           ;stkvar	_x @ sp[(-10)+-4]
 11507  013FDC  0EF2               	movlw	-14
 11508  013FDE  006F FF8C  F035    	movff	plusw1,btemp
 11509  013FE4  0EF3               	movlw	-13
 11510  013FE6  006F FF8C  F036    	movff	plusw1,btemp+1
 11511  013FEC  0EF4               	movlw	-12
 11512  013FEE  006F FF8C  F037    	movff	plusw1,btemp+2
 11513  013FF4  0EF5               	movlw	-11
 11514  013FF6  D11F               	goto	L10
 11515  013FF8                     l6172:
 11516                           
 11517                           ;stkvar	_e @ sp[(-10)+8]
 11518  013FF8  0EFF               	movlw	-1
 11519  013FFA  BEE3               	btfsc	plusw1,7,c
 11520  013FFC  D0B4               	goto	l6188
 11521                           
 11522                           ;stkvar	_e @ sp[(-10)+8]
 11523  013FFE  0EFE               	movlw	-2
 11524  014000  006F FF8C  F040    	movff	plusw1,btemp+11
 11525  014006  0EFF               	movlw	255
 11526  014008  6E39               	movwf	(btemp+4)^0,c
 11527  01400A  0EFF               	movlw	255
 11528  01400C  6E3A               	movwf	(btemp+5)^0,c
 11529  01400E  0E7F               	movlw	127
 11530  014010  6E3B               	movwf	(btemp+6)^0,c
 11531  014012  0E00               	movlw	0
 11532  014014  6E3C               	movwf	(btemp+7)^0,c
 11533  014016                     u4895:
 11534  014016  6640               	tstfsz	(btemp+11)^0,c
 11535  014018  D001               	goto	u4896
 11536  01401A  D007               	goto	u4897
 11537  01401C                     u4896:
 11538  01401C  343C               	rlcf	(btemp+7)^0,w,c
 11539  01401E  323C               	rrcf	(btemp+7)^0,f,c
 11540  014020  323B               	rrcf	(btemp+6)^0,f,c
 11541  014022  323A               	rrcf	(btemp+5)^0,f,c
 11542  014024  3239               	rrcf	(btemp+4)^0,f,c
 11543  014026  2E40               	decfsz	(btemp+11)^0,f,c
 11544  014028  D7F6               	goto	u4895
 11545  01402A                     u4897:
 11546                           
 11547                           ;stkvar	_m @ sp[(-10)+4]
 11548  01402A  0EFA               	movlw	-6
 11549  01402C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 11550  014032  0EFB               	movlw	-5
 11551  014034  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 11552  01403A  0EFC               	movlw	-4
 11553  01403C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11554  014042  0EFD               	movlw	-3
 11555  014044  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11556                           
 11557                           ;stkvar	_m @ sp[(-10)+4]
 11558                           ;stkvar	_u @ sp[(-10)+0]
 11559  01404A  0EF6               	movlw	-10
 11560  01404C  006F FF8C  F03D    	movff	plusw1,btemp+8
 11561  014052  0EF7               	movlw	-9
 11562  014054  006F FF8C  F03E    	movff	plusw1,btemp+9
 11563  01405A  0EF8               	movlw	-8
 11564  01405C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11565  014062  0EF9               	movlw	-7
 11566  014064  006F FF8C  F040    	movff	plusw1,btemp+11
 11567  01406A  0EFA               	movlw	-6
 11568  01406C  50E3               	movf	plusw1,w,c
 11569  01406E  163D               	andwf	(btemp+8)^0,f,c
 11570  014070  0EFB               	movlw	-5
 11571  014072  50E3               	movf	plusw1,w,c
 11572  014074  163E               	andwf	(btemp+9)^0,f,c
 11573  014076  0EFC               	movlw	-4
 11574  014078  50E3               	movf	plusw1,w,c
 11575  01407A  163F               	andwf	(btemp+10)^0,f,c
 11576  01407C  0EFD               	movlw	-3
 11577  01407E  50E3               	movf	plusw1,w,c
 11578  014080  1640               	andwf	(btemp+11)^0,f,c
 11579  014082  503D               	movf	(btemp+8)^0,w,c
 11580  014084  103E               	iorwf	(btemp+9)^0,w,c
 11581  014086  103F               	iorwf	(btemp+10)^0,w,c
 11582  014088  1040               	iorwf	(btemp+11)^0,w,c
 11583  01408A  B4D8               	btfsc	status,2,c
 11584  01408C  D7A7               	goto	u4870
 11585                           
 11586                           ;stkvar	_u @ sp[(-10)+0]
 11587  01408E  0EF6               	movlw	-10
 11588  014090  006F FF8C  F03D    	movff	plusw1,btemp+8
 11589  014096  0EF7               	movlw	-9
 11590  014098  006F FF8C  F03E    	movff	plusw1,btemp+9
 11591  01409E  0EF8               	movlw	-8
 11592  0140A0  006F FF8C  F03F    	movff	plusw1,btemp+10
 11593  0140A6  0EF9               	movlw	-7
 11594  0140A8  006F FF8C  F040    	movff	plusw1,btemp+11
 11595  0140AE  0E20               	movlw	32
 11596  0140B0  D005               	goto	u4910
 11597  0140B2                     u4915:
 11598  0140B2  90D8               	bcf	status,0,c
 11599  0140B4  3240               	rrcf	(btemp+11)^0,f,c
 11600  0140B6  323F               	rrcf	(btemp+10)^0,f,c
 11601  0140B8  323E               	rrcf	(btemp+9)^0,f,c
 11602  0140BA  323D               	rrcf	(btemp+8)^0,f,c
 11603  0140BC                     u4910:
 11604  0140BC  2EE8               	decfsz	wreg,f,c
 11605  0140BE  D7F9               	goto	u4915
 11606  0140C0  503D               	movf	(btemp+8)^0,w,c
 11607  0140C2  B4D8               	btfsc	status,2,c
 11608  0140C4  D028               	goto	l6186
 11609                           
 11610                           ;stkvar	_m @ sp[(-10)+4]
 11611                           ;stkvar	_u @ sp[(-10)+0]
 11612  0140C6  0EF6               	movlw	-10
 11613  0140C8  50E3               	movf	plusw1,w,c
 11614  0140CA  6E35               	movwf	btemp^0,c
 11615  0140CC  0EFA               	movlw	-6
 11616  0140CE  50E3               	movf	plusw1,w,c
 11617  0140D0  2635               	addwf	btemp^0,f,c
 11618  0140D2  0EF6               	movlw	-10
 11619  0140D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 11620  0140DA  0EF7               	movlw	-9
 11621  0140DC  50E3               	movf	plusw1,w,c
 11622  0140DE  6E35               	movwf	btemp^0,c
 11623  0140E0  0EFB               	movlw	-5
 11624  0140E2  50E3               	movf	plusw1,w,c
 11625  0140E4  2235               	addwfc	btemp^0,f,c
 11626  0140E6  0EF7               	movlw	-9
 11627  0140E8  0060  F0D7  FFE3   	movff	btemp,plusw1
 11628  0140EE  0EF8               	movlw	-8
 11629  0140F0  50E3               	movf	plusw1,w,c
 11630  0140F2  6E35               	movwf	btemp^0,c
 11631  0140F4  0EFC               	movlw	-4
 11632  0140F6  50E3               	movf	plusw1,w,c
 11633  0140F8  2235               	addwfc	btemp^0,f,c
 11634  0140FA  0EF8               	movlw	-8
 11635  0140FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 11636  014102  0EF9               	movlw	-7
 11637  014104  50E3               	movf	plusw1,w,c
 11638  014106  6E35               	movwf	btemp^0,c
 11639  014108  0EFD               	movlw	-3
 11640  01410A  50E3               	movf	plusw1,w,c
 11641  01410C  2235               	addwfc	btemp^0,f,c
 11642  01410E  0EF9               	movlw	-7
 11643  014110  0060  F0D7  FFE3   	movff	btemp,plusw1
 11644  014116                     l6186:
 11645                           
 11646                           ;stkvar	_m @ sp[(-10)+4]
 11647  014116  0EFA               	movlw	-6
 11648  014118  006F FF8C  F03D    	movff	plusw1,btemp+8
 11649  01411E  0EFB               	movlw	-5
 11650  014120  006F FF8C  F03E    	movff	plusw1,btemp+9
 11651  014126  0EFC               	movlw	-4
 11652  014128  006F FF8C  F03F    	movff	plusw1,btemp+10
 11653  01412E  0EFD               	movlw	-3
 11654  014130  006F FF8C  F040    	movff	plusw1,btemp+11
 11655  014136  1C3D               	comf	(btemp+8)^0,w,c
 11656  014138  6E39               	movwf	(btemp+4)^0,c
 11657  01413A  1C3E               	comf	(btemp+9)^0,w,c
 11658  01413C  6E3A               	movwf	(btemp+5)^0,c
 11659  01413E  1C3F               	comf	(btemp+10)^0,w,c
 11660  014140  6E3B               	movwf	(btemp+6)^0,c
 11661  014142  1C40               	comf	(btemp+11)^0,w,c
 11662  014144  6E3C               	movwf	(btemp+7)^0,c
 11663                           
 11664                           ;stkvar	_u @ sp[(-10)+0]
 11665  014146  50E1               	movf	fsr1l,w,c
 11666  014148  0FF6               	addlw	-10
 11667  01414A  6ED9               	movwf	fsr2l,c
 11668  01414C  50E2               	movf	fsr1h,w,c
 11669  01414E  6EDA               	movwf	fsr2h,c
 11670  014150  0EFF               	movlw	255
 11671  014152  22DA               	addwfc	fsr2h,f,c
 11672  014154  5039               	movf	(btemp+4)^0,w,c
 11673  014156  16DE               	andwf	postinc2,f,c
 11674  014158  503A               	movf	(btemp+5)^0,w,c
 11675  01415A  16DE               	andwf	postinc2,f,c
 11676  01415C  503B               	movf	(btemp+6)^0,w,c
 11677  01415E  16DE               	andwf	postinc2,f,c
 11678  014160  503C               	movf	(btemp+7)^0,w,c
 11679  014162  16DE               	andwf	postinc2,f,c
 11680  014164  D05B               	goto	l6196
 11681  014166                     l6188:
 11682                           
 11683                           ;stkvar	_u @ sp[(-10)+0]
 11684  014166  0EF6               	movlw	-10
 11685  014168  006F FF8C  F03D    	movff	plusw1,btemp+8
 11686  01416E  0EF7               	movlw	-9
 11687  014170  006F FF8C  F03E    	movff	plusw1,btemp+9
 11688  014176  0EF8               	movlw	-8
 11689  014178  006F FF8C  F03F    	movff	plusw1,btemp+10
 11690  01417E  0EF9               	movlw	-7
 11691  014180  006F FF8C  F040    	movff	plusw1,btemp+11
 11692  014186  0E20               	movlw	32
 11693  014188  D005               	goto	u4930
 11694  01418A                     u4935:
 11695  01418A  90D8               	bcf	status,0,c
 11696  01418C  3240               	rrcf	(btemp+11)^0,f,c
 11697  01418E  323F               	rrcf	(btemp+10)^0,f,c
 11698  014190  323E               	rrcf	(btemp+9)^0,f,c
 11699  014192  323D               	rrcf	(btemp+8)^0,f,c
 11700  014194                     u4930:
 11701  014194  2EE8               	decfsz	wreg,f,c
 11702  014196  D7F9               	goto	u4935
 11703  014198  663D               	tstfsz	(btemp+8)^0,c
 11704  01419A  D009               	goto	l6192
 11705                           
 11706                           ;stkvar	_u @ sp[(-10)+0]
 11707  01419C  0EF6               	movlw	-10
 11708  01419E  6AE3               	clrf	plusw1,c
 11709  0141A0  0EF7               	movlw	-9
 11710  0141A2  6AE3               	clrf	plusw1,c
 11711  0141A4  0EF8               	movlw	-8
 11712  0141A6  6AE3               	clrf	plusw1,c
 11713  0141A8  0EF9               	movlw	-7
 11714  0141AA  6AE3               	clrf	plusw1,c
 11715  0141AC  D037               	goto	l6196
 11716  0141AE                     l6192:
 11717                           
 11718                           ;stkvar	_u @ sp[(-10)+0]
 11719  0141AE  0EF6               	movlw	-10
 11720  0141B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 11721  0141B6  0EF7               	movlw	-9
 11722  0141B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 11723  0141BE  0EF8               	movlw	-8
 11724  0141C0  006F FF8C  F03F    	movff	plusw1,btemp+10
 11725  0141C6  0EF9               	movlw	-7
 11726  0141C8  006F FF8C  F040    	movff	plusw1,btemp+11
 11727  0141CE  90D8               	bcf	status,0,c
 11728  0141D0  343D               	rlcf	(btemp+8)^0,w,c
 11729  0141D2  6E39               	movwf	(btemp+4)^0,c
 11730  0141D4  343E               	rlcf	(btemp+9)^0,w,c
 11731  0141D6  6E3A               	movwf	(btemp+5)^0,c
 11732  0141D8  343F               	rlcf	(btemp+10)^0,w,c
 11733  0141DA  6E3B               	movwf	(btemp+6)^0,c
 11734  0141DC  3440               	rlcf	(btemp+11)^0,w,c
 11735  0141DE  6E3C               	movwf	(btemp+7)^0,c
 11736  0141E0  5039               	movf	(btemp+4)^0,w,c
 11737  0141E2  103A               	iorwf	(btemp+5)^0,w,c
 11738  0141E4  103B               	iorwf	(btemp+6)^0,w,c
 11739  0141E6  103C               	iorwf	(btemp+7)^0,w,c
 11740  0141E8  B4D8               	btfsc	status,2,c
 11741  0141EA  D018               	goto	l6196
 11742  0141EC  0E00               	movlw	0
 11743  0141EE  6E3D               	movwf	(btemp+8)^0,c
 11744  0141F0  0E00               	movlw	0
 11745  0141F2  6E3E               	movwf	(btemp+9)^0,c
 11746  0141F4  0E80               	movlw	128
 11747  0141F6  6E3F               	movwf	(btemp+10)^0,c
 11748  0141F8  0EBF               	movlw	191
 11749  0141FA  6E40               	movwf	(btemp+11)^0,c
 11750                           
 11751                           ;stkvar	_u @ sp[(-10)+0]
 11752  0141FC  0EF6               	movlw	-10
 11753  0141FE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11754  014204  0EF7               	movlw	-9
 11755  014206  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11756  01420C  0EF8               	movlw	-8
 11757  01420E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11758  014214  0EF9               	movlw	-7
 11759  014216  0060  F103  FFE3   	movff	btemp+11,plusw1
 11760  01421C                     l6196:
 11761                           
 11762                           ;stkvar	_u @ sp[(-10)+0]
 11763  01421C  0EF6               	movlw	-10
 11764  01421E  006F FF8C  F035    	movff	plusw1,btemp
 11765  014224  0EF7               	movlw	-9
 11766  014226  006F FF8C  F036    	movff	plusw1,btemp+1
 11767  01422C  0EF8               	movlw	-8
 11768  01422E  006F FF8C  F037    	movff	plusw1,btemp+2
 11769  014234  0EF9               	movlw	-7
 11770  014236                     L10:
 11771  014236  006F FF8C  F038    	movff	plusw1,btemp+3
 11772                           
 11773                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11774  01423C  0EF2               	movlw	242
 11775  01423E  26E1               	addwf	fsr1l,f,c
 11776  014240  0EFF               	movlw	255
 11777  014242  22E2               	addwfc	fsr1h,f,c
 11778  014244  0012               	return		;funcret
 11779  014246                     __end_of_floorf:
 11780                           	opt callstack 0
 11781                           
 11782 ;; *************** function ___fpclassifyf *****************
 11783 ;; Defined at:
 11784 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  x               4  [STACK] float 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  u               4  [STACK] struct .
 11789 ;;  e               2  [STACK] int 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  2  [STACK] int 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/4
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; Hardware stack levels required when called:    6
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_efgtoa
 11810 ;; This function uses a reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text43
 11814  015502                     __ptext43:
 11815                           	opt callstack 0
 11816  015502                     ___fpclassifyf:
 11817                           	opt callstack 0
 11818                           
 11819                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11820  015502  0E06               	movlw	6
 11821  015504  26E1               	addwf	fsr1l,f,c
 11822  015506  0E00               	movlw	0
 11823  015508  22E2               	addwfc	fsr1h,f,c
 11824                           
 11825                           ;incstack = 0
 11826  01550A  0060  F2A8  F03D   	movff	___fpclassifyf@F463,btemp+8
 11827  015510  0060  F2AC  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 11828  015516  0060  F2B0  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 11829  01551C  0060  F2B4  F040   	movff	___fpclassifyf@F463+3,btemp+11
 11830                           
 11831                           ;stkvar	_u @ sp[(-6)+0]
 11832  015522  0EFA               	movlw	-6
 11833  015524  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11834  01552A  0EFB               	movlw	-5
 11835  01552C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11836  015532  0EFC               	movlw	-4
 11837  015534  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11838  01553A  0EFD               	movlw	-3
 11839  01553C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11840                           
 11841                           ;stkvar	_x @ sp[(-6)+-4]
 11842  015542  0EF6               	movlw	-10
 11843  015544  006F FF8C  F03D    	movff	plusw1,btemp+8
 11844  01554A  0EF7               	movlw	-9
 11845  01554C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11846  015552  0EF8               	movlw	-8
 11847  015554  006F FF8C  F03F    	movff	plusw1,btemp+10
 11848  01555A  0EF9               	movlw	-7
 11849  01555C  006F FF8C  F040    	movff	plusw1,btemp+11
 11850                           
 11851                           ;stkvar	_u @ sp[(-6)+0]
 11852  015562  0EFA               	movlw	-6
 11853  015564  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11854  01556A  0EFB               	movlw	-5
 11855  01556C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11856  015572  0EFC               	movlw	-4
 11857  015574  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11858  01557A  0EFD               	movlw	-3
 11859  01557C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11860                           
 11861                           ;stkvar	_u @ sp[(-6)+0]
 11862  015582  0EFA               	movlw	-6
 11863  015584  006F FF8C  F03D    	movff	plusw1,btemp+8
 11864  01558A  0EFB               	movlw	-5
 11865  01558C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11866  015592  0EFC               	movlw	-4
 11867  015594  006F FF8C  F03F    	movff	plusw1,btemp+10
 11868  01559A  0EFD               	movlw	-3
 11869  01559C  006F FF8C  F040    	movff	plusw1,btemp+11
 11870  0155A2  0E18               	movlw	24
 11871  0155A4  D005               	goto	u4740
 11872  0155A6                     u4745:
 11873  0155A6  90D8               	bcf	status,0,c
 11874  0155A8  3240               	rrcf	(btemp+11)^0,f,c
 11875  0155AA  323F               	rrcf	(btemp+10)^0,f,c
 11876  0155AC  323E               	rrcf	(btemp+9)^0,f,c
 11877  0155AE  323D               	rrcf	(btemp+8)^0,f,c
 11878  0155B0                     u4740:
 11879  0155B0  2EE8               	decfsz	wreg,f,c
 11880  0155B2  D7F9               	goto	u4745
 11881  0155B4  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 11882  0155BA  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 11883  0155C0  0EFF               	movlw	255
 11884  0155C2  163B               	andwf	(btemp+6)^0,f,c
 11885  0155C4  0E00               	movlw	0
 11886  0155C6  163C               	andwf	(btemp+7)^0,f,c
 11887                           
 11888                           ;stkvar	_e @ sp[(-6)+4]
 11889  0155C8  0EFE               	movlw	-2
 11890  0155CA  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11891  0155D0  0EFF               	movlw	-1
 11892  0155D2  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11893                           
 11894                           ;stkvar	_e @ sp[(-6)+4]
 11895  0155D8  0EFE               	movlw	-2
 11896  0155DA  006F FF8C  F035    	movff	plusw1,btemp
 11897  0155E0  0EFF               	movlw	-1
 11898  0155E2  50E3               	movf	plusw1,w,c
 11899  0155E4  1035               	iorwf	btemp^0,w,c
 11900  0155E6  A4D8               	btfss	status,2,c
 11901  0155E8  D023               	goto	l6134
 11902                           
 11903                           ;stkvar	_u @ sp[(-6)+0]
 11904  0155EA  0EFA               	movlw	-6
 11905  0155EC  006F FF8C  F03D    	movff	plusw1,btemp+8
 11906  0155F2  0EFB               	movlw	-5
 11907  0155F4  006F FF8C  F03E    	movff	plusw1,btemp+9
 11908  0155FA  0EFC               	movlw	-4
 11909  0155FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11910  015602  0EFD               	movlw	-3
 11911  015604  006F FF8C  F040    	movff	plusw1,btemp+11
 11912  01560A  90D8               	bcf	status,0,c
 11913  01560C  343D               	rlcf	(btemp+8)^0,w,c
 11914  01560E  6E39               	movwf	(btemp+4)^0,c
 11915  015610  343E               	rlcf	(btemp+9)^0,w,c
 11916  015612  6E3A               	movwf	(btemp+5)^0,c
 11917  015614  343F               	rlcf	(btemp+10)^0,w,c
 11918  015616  6E3B               	movwf	(btemp+6)^0,c
 11919  015618  3440               	rlcf	(btemp+11)^0,w,c
 11920  01561A  6E3C               	movwf	(btemp+7)^0,c
 11921  01561C  5039               	movf	(btemp+4)^0,w,c
 11922  01561E  103A               	iorwf	(btemp+5)^0,w,c
 11923  015620  103B               	iorwf	(btemp+6)^0,w,c
 11924  015622  103C               	iorwf	(btemp+7)^0,w,c
 11925  015624  A4D8               	btfss	status,2,c
 11926  015626  D002               	goto	l6130
 11927  015628  0E02               	movlw	2
 11928  01562A  D02E               	goto	L11
 11929  01562C                     l6130:
 11930  01562C  0E03               	movlw	3
 11931  01562E  D02C               	goto	L11
 11932  015630                     l6134:
 11933                           
 11934                           ;stkvar	_e @ sp[(-6)+4]
 11935  015630  0EFE               	movlw	-2
 11936  015632  28E3               	incf	plusw1,w,c
 11937  015634  E128               	bnz	l6140
 11938  015636  0EFF               	movlw	-1
 11939  015638  50E3               	movf	plusw1,w,c
 11940  01563A  A4D8               	btfss	status,2,c
 11941  01563C  D024               	goto	l6140
 11942                           
 11943                           ;stkvar	_u @ sp[(-6)+0]
 11944  01563E  0EFA               	movlw	-6
 11945  015640  006F FF8C  F03D    	movff	plusw1,btemp+8
 11946  015646  0EFB               	movlw	-5
 11947  015648  006F FF8C  F03E    	movff	plusw1,btemp+9
 11948  01564E  0EFC               	movlw	-4
 11949  015650  006F FF8C  F03F    	movff	plusw1,btemp+10
 11950  015656  0EFD               	movlw	-3
 11951  015658  006F FF8C  F040    	movff	plusw1,btemp+11
 11952  01565E  0E09               	movlw	9
 11953  015660                     u4785:
 11954  015660  90D8               	bcf	status,0,c
 11955  015662  363D               	rlcf	(btemp+8)^0,f,c
 11956  015664  363E               	rlcf	(btemp+9)^0,f,c
 11957  015666  363F               	rlcf	(btemp+10)^0,f,c
 11958  015668  3640               	rlcf	(btemp+11)^0,f,c
 11959  01566A  2EE8               	decfsz	wreg,f,c
 11960  01566C  D7F9               	goto	u4785
 11961  01566E  503D               	movf	(btemp+8)^0,w,c
 11962  015670  103E               	iorwf	(btemp+9)^0,w,c
 11963  015672  103F               	iorwf	(btemp+10)^0,w,c
 11964  015674  1040               	iorwf	(btemp+11)^0,w,c
 11965  015676  A4D8               	btfss	status,2,c
 11966  015678  D002               	goto	u4790
 11967  01567A  0E01               	movlw	1
 11968  01567C  D001               	goto	u4800
 11969  01567E                     u4790:
 11970  01567E  0E00               	movlw	0
 11971  015680                     u4800:
 11972  015680  6E35               	movwf	btemp^0,c
 11973  015682  6A36               	clrf	(btemp+1)^0,c
 11974  015684  D004               	goto	l2629
 11975  015686                     l6140:
 11976  015686  0E04               	movlw	4
 11977  015688                     L11:
 11978  015688  6E35               	movwf	btemp^0,c
 11979  01568A  0E00               	movlw	0
 11980  01568C  6E36               	movwf	(btemp+1)^0,c
 11981  01568E                     l2629:
 11982                           
 11983                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 11984  01568E  0EF6               	movlw	246
 11985  015690  26E1               	addwf	fsr1l,f,c
 11986  015692  0EFF               	movlw	255
 11987  015694  22E2               	addwfc	fsr1h,f,c
 11988  015696  0012               	return		;funcret
 11989  015698                     __end_of___fpclassifyf:
 11990                           	opt callstack 0
 11991                           
 11992 ;; *************** function ___fltol *****************
 11993 ;; Defined at:
 11994 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  f1              4  [STACK] int 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;  exp1            1  [STACK] unsigned char 
 11999 ;;  sign1           1  [STACK] unsigned char 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  4  [STACK] long 
 12002 ;; Registers used:
 12003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/4
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12013 ;;Total ram usage:        0 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:    6
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_efgtoa
 12020 ;; This function uses a reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text44
 12024  015820                     __ptext44:
 12025                           	opt callstack 0
 12026  015820                     ___fltol:
 12027                           	opt callstack 0
 12028                           
 12029                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12030  015820  52E6               	movf	postinc1,f,c
 12031  015822  52E6               	movf	postinc1,f,c
 12032                           
 12033                           ;stkvar	_f1 @ sp[(-2)+-4]
 12034                           
 12035                           ;incstack = 0
 12036  015824  0EFA               	movlw	-6
 12037  015826  006F FF8C  F03D    	movff	plusw1,btemp+8
 12038  01582C  0EFB               	movlw	-5
 12039  01582E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12040  015834  0EFC               	movlw	-4
 12041  015836  006F FF8C  F03F    	movff	plusw1,btemp+10
 12042  01583C  0EFD               	movlw	-3
 12043  01583E  006F FF8C  F040    	movff	plusw1,btemp+11
 12044  015844  0E18               	movlw	24
 12045  015846  D005               	goto	u5950
 12046  015848                     u5955:
 12047  015848  90D8               	bcf	status,0,c
 12048  01584A  3240               	rrcf	(btemp+11)^0,f,c
 12049  01584C  323F               	rrcf	(btemp+10)^0,f,c
 12050  01584E  323E               	rrcf	(btemp+9)^0,f,c
 12051  015850  323D               	rrcf	(btemp+8)^0,f,c
 12052  015852                     u5950:
 12053  015852  2EE8               	decfsz	wreg,f,c
 12054  015854  D7F9               	goto	u5955
 12055                           
 12056                           ;stkvar	_exp1 @ sp[(-2)+0]
 12057  015856  0EFE               	movlw	-2
 12058  015858  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12059  01585E  0EFE               	movlw	-2
 12060  015860  50E3               	movf	plusw1,w,c
 12061  015862  A4D8               	btfss	status,2,c
 12062  015864  D006               	goto	l6760
 12063  015866                     u5960:
 12064  015866  0E00               	movlw	0
 12065  015868  6E35               	movwf	btemp^0,c
 12066  01586A  6A36               	clrf	(btemp+1)^0,c
 12067  01586C  6A37               	clrf	(btemp+2)^0,c
 12068  01586E  6A38               	clrf	(btemp+3)^0,c
 12069  015870  D08B               	goto	l2245
 12070  015872                     l6760:
 12071                           
 12072                           ;stkvar	_f1 @ sp[(-2)+-4]
 12073  015872  0EFA               	movlw	-6
 12074  015874  006F FF8C  F03D    	movff	plusw1,btemp+8
 12075  01587A  0EFB               	movlw	-5
 12076  01587C  006F FF8C  F03E    	movff	plusw1,btemp+9
 12077  015882  0EFC               	movlw	-4
 12078  015884  006F FF8C  F03F    	movff	plusw1,btemp+10
 12079  01588A  0EFD               	movlw	-3
 12080  01588C  006F FF8C  F040    	movff	plusw1,btemp+11
 12081  015892  0E20               	movlw	32
 12082  015894  D005               	goto	u5970
 12083  015896                     u5975:
 12084  015896  90D8               	bcf	status,0,c
 12085  015898  3240               	rrcf	(btemp+11)^0,f,c
 12086  01589A  323F               	rrcf	(btemp+10)^0,f,c
 12087  01589C  323E               	rrcf	(btemp+9)^0,f,c
 12088  01589E  323D               	rrcf	(btemp+8)^0,f,c
 12089  0158A0                     u5970:
 12090  0158A0  2EE8               	decfsz	wreg,f,c
 12091  0158A2  D7F9               	goto	u5975
 12092                           
 12093                           ;stkvar	_sign1 @ sp[(-2)+1]
 12094  0158A4  0EFF               	movlw	-1
 12095  0158A6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12096                           
 12097                           ;stkvar	_f1 @ sp[(-2)+-4]
 12098  0158AC  0EFC               	movlw	-4
 12099  0158AE  8EE3               	bsf	plusw1,7,c
 12100                           
 12101                           ;stkvar	_f1 @ sp[(-2)+-4]
 12102  0158B0  50E1               	movf	fsr1l,w,c
 12103  0158B2  0FFA               	addlw	-6
 12104  0158B4  6ED9               	movwf	fsr2l,c
 12105  0158B6  50E2               	movf	fsr1h,w,c
 12106  0158B8  6EDA               	movwf	fsr2h,c
 12107  0158BA  0EFF               	movlw	255
 12108  0158BC  22DA               	addwfc	fsr2h,f,c
 12109  0158BE  0EFF               	movlw	255
 12110  0158C0  16DE               	andwf	postinc2,f,c
 12111  0158C2  0EFF               	movlw	255
 12112  0158C4  16DE               	andwf	postinc2,f,c
 12113  0158C6  0EFF               	movlw	255
 12114  0158C8  16DE               	andwf	postinc2,f,c
 12115  0158CA  0E00               	movlw	0
 12116  0158CC  16DE               	andwf	postinc2,f,c
 12117                           
 12118                           ;stkvar	_exp1 @ sp[(-2)+0]
 12119  0158CE  0EFE               	movlw	-2
 12120  0158D0  006F FF8C  F035    	movff	plusw1,btemp
 12121  0158D6  0E96               	movlw	150
 12122  0158D8  5E35               	subwf	btemp^0,f,c
 12123  0158DA  0EFE               	movlw	-2
 12124  0158DC  0060  F0D7  FFE3   	movff	btemp,plusw1
 12125                           
 12126                           ;stkvar	_exp1 @ sp[(-2)+0]
 12127  0158E2  0EFE               	movlw	-2
 12128  0158E4  AEE3               	btfss	plusw1,7,c
 12129  0158E6  D014               	goto	l6778
 12130                           
 12131                           ;stkvar	_exp1 @ sp[(-2)+0]
 12132  0158E8  0EFE               	movlw	-2
 12133  0158EA  50E3               	movf	plusw1,w,c
 12134  0158EC  0A80               	xorlw	128
 12135  0158EE  0F97               	addlw	151
 12136  0158F0  A0D8               	btfss	status,0,c
 12137  0158F2  D7B9               	goto	u5960
 12138  0158F4                     l6776:
 12139                           
 12140                           ;stkvar	_f1 @ sp[(-2)+-4]
 12141  0158F4  90D8               	bcf	status,0,c
 12142  0158F6  0EFD               	movlw	-3
 12143  0158F8  32E3               	rrcf	plusw1,f,c
 12144  0158FA  0EFC               	movlw	-4
 12145  0158FC  32E3               	rrcf	plusw1,f,c
 12146  0158FE  0EFB               	movlw	-5
 12147  015900  32E3               	rrcf	plusw1,f,c
 12148  015902  0EFA               	movlw	-6
 12149  015904  32E3               	rrcf	plusw1,f,c
 12150                           
 12151                           ;stkvar	_exp1 @ sp[(-2)+0]
 12152  015906  0EFE               	movlw	-2
 12153  015908  2AE3               	incf	plusw1,f,c
 12154  01590A  B4D8               	btfsc	status,2,c
 12155  01590C  D018               	goto	u6020
 12156  01590E  D7F2               	goto	l6776
 12157  015910                     l6778:
 12158                           
 12159                           ;stkvar	_exp1 @ sp[(-2)+0]
 12160  015910  0EFE               	movlw	-2
 12161  015912  006F FF8C  F035    	movff	plusw1,btemp
 12162  015918  0E1F               	movlw	31
 12163  01591A  6435               	cpfsgt	btemp^0,c
 12164  01591C  D00C               	goto	l6786
 12165  01591E  D7A3               	goto	u5960
 12166  015920                     l6784:
 12167                           
 12168                           ;stkvar	_f1 @ sp[(-2)+-4]
 12169  015920  90D8               	bcf	status,0,c
 12170  015922  0EFA               	movlw	-6
 12171  015924  36E3               	rlcf	plusw1,f,c
 12172  015926  0EFB               	movlw	-5
 12173  015928  36E3               	rlcf	plusw1,f,c
 12174  01592A  0EFC               	movlw	-4
 12175  01592C  36E3               	rlcf	plusw1,f,c
 12176  01592E  0EFD               	movlw	-3
 12177  015930  36E3               	rlcf	plusw1,f,c
 12178                           
 12179                           ;stkvar	_exp1 @ sp[(-2)+0]
 12180  015932  0EFE               	movlw	-2
 12181  015934  06E3               	decf	plusw1,f,c
 12182  015936                     l6786:
 12183                           
 12184                           ;stkvar	_exp1 @ sp[(-2)+0]
 12185  015936  0EFE               	movlw	-2
 12186  015938  50E3               	movf	plusw1,w,c
 12187  01593A  A4D8               	btfss	status,2,c
 12188  01593C  D7F1               	goto	l6784
 12189  01593E                     u6020:
 12190                           
 12191                           ;stkvar	_sign1 @ sp[(-2)+1]
 12192  01593E  0EFF               	movlw	-1
 12193  015940  50E3               	movf	plusw1,w,c
 12194  015942  B4D8               	btfsc	status,2,c
 12195  015944  D011               	goto	u6040
 12196                           
 12197                           ;stkvar	_f1 @ sp[(-2)+-4]
 12198                           ;stkvar	_f1 @ sp[(-2)+-4]
 12199  015946  0EFA               	movlw	-6
 12200  015948  6CE3               	negf	plusw1,c
 12201  01594A  0EFB               	movlw	-5
 12202  01594C  1EE3               	comf	plusw1,f,c
 12203  01594E  0EFC               	movlw	-4
 12204  015950  1EE3               	comf	plusw1,f,c
 12205  015952  0EFD               	movlw	-3
 12206  015954  1EE3               	comf	plusw1,f,c
 12207  015956  E308               	bnc	u6040
 12208  015958  0EFB               	movlw	-5
 12209  01595A  2AE3               	incf	plusw1,f,c
 12210  01595C  E305               	bnc	u6040
 12211  01595E  0EFC               	movlw	-4
 12212  015960  2AE3               	incf	plusw1,f,c
 12213  015962  E302               	bnc	u6040
 12214  015964  0EFD               	movlw	-3
 12215  015966  2AE3               	incf	plusw1,f,c
 12216  015968                     u6040:
 12217                           
 12218                           ;stkvar	_f1 @ sp[(-2)+-4]
 12219  015968  0EFA               	movlw	-6
 12220  01596A  006F FF8C  F035    	movff	plusw1,btemp
 12221  015970  0EFB               	movlw	-5
 12222  015972  006F FF8C  F036    	movff	plusw1,btemp+1
 12223  015978  0EFC               	movlw	-4
 12224  01597A  006F FF8C  F037    	movff	plusw1,btemp+2
 12225  015980  0EFD               	movlw	-3
 12226  015982  006F FF8C  F038    	movff	plusw1,btemp+3
 12227  015988                     l2245:
 12228                           
 12229                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12230  015988  0EFA               	movlw	250
 12231  01598A  26E1               	addwf	fsr1l,f,c
 12232  01598C  0EFF               	movlw	255
 12233  01598E  22E2               	addwfc	fsr1h,f,c
 12234  015990  0012               	return		;funcret
 12235  015992                     __end_of___fltol:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function ___flsub *****************
 12239 ;; Defined at:
 12240 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  b               4  [STACK] long 
 12243 ;;  a               4  [STACK] long 
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  4  [STACK] long 
 12248 ;; Registers used:
 12249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/4
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;Total ram usage:        0 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    7
 12262 ;; This function calls:
 12263 ;;		___fladd
 12264 ;; This function is called by:
 12265 ;;		_efgtoa
 12266 ;; This function uses a reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text45
 12270  017280                     __ptext45:
 12271                           	opt callstack 0
 12272  017280                     ___flsub:
 12273                           	opt callstack 16
 12274                           
 12275                           ;stkvar	_a @ sp[(0)+-8]
 12276                           
 12277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12278                           ;incstack = 0
 12279  017280  0EFB               	movlw	-5
 12280  017282  7EE3               	btg	plusw1,7,c
 12281                           
 12282                           ;stkvar	_a @ sp[(0)+-8]
 12283  017284  0EF8               	movlw	-8
 12284  017286  006F FF8F FFE6     	movff	plusw1,postinc1
 12285  01728C  006F FF8F FFE6     	movff	plusw1,postinc1
 12286  017292  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  017298  006F FF8F FFE6     	movff	plusw1,postinc1
 12288                           
 12289                           ;stkvar	_b @ sp[(-4)+-4]
 12290  01729E  0EF8               	movlw	-8
 12291  0172A0  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  0172A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12293  0172AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12294  0172B2  006F FF8F FFE6     	movff	plusw1,postinc1
 12295  0172B8  ECD6  F092         	call	___fladd	;wreg free
 12296                           
 12297                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12298  0172BC  0EF8               	movlw	248
 12299  0172BE  26E1               	addwf	fsr1l,f,c
 12300  0172C0  0EFF               	movlw	255
 12301  0172C2  22E2               	addwfc	fsr1h,f,c
 12302  0172C4  0012               	return		;funcret
 12303  0172C6                     __end_of___flsub:
 12304                           	opt callstack 0
 12305                           
 12306 ;; *************** function ___fladd *****************
 12307 ;; Defined at:
 12308 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  b               4  [STACK] long 
 12311 ;;  a               4  [STACK] long 
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;  grs             1  [STACK] unsigned char 
 12314 ;;  bexp            1  [STACK] unsigned char 
 12315 ;;  aexp            1  [STACK] unsigned char 
 12316 ;;  signs           1  [STACK] unsigned char 
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  4  [STACK] unsigned char 
 12319 ;; Registers used:
 12320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/4
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    6
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_efgtoa
 12337 ;;		___flsub
 12338 ;; This function uses a reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text46
 12342  0125AC                     __ptext46:
 12343                           	opt callstack 0
 12344  0125AC                     ___fladd:
 12345                           	opt callstack 0
 12346                           
 12347                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12348  0125AC  52E6               	movf	postinc1,f,c
 12349  0125AE  52E6               	movf	postinc1,f,c
 12350  0125B0  52E6               	movf	postinc1,f,c
 12351  0125B2  52E6               	movf	postinc1,f,c
 12352                           
 12353                           ;stkvar	_b @ sp[(-4)+-4]
 12354                           
 12355                           ;incstack = 0
 12356  0125B4  0EFB               	movlw	251
 12357  0125B6  24E1               	addwf	fsr1l,w,c
 12358  0125B8  6ED9               	movwf	fsr2l,c
 12359  0125BA  0EFF               	movlw	255
 12360  0125BC  20E2               	addwfc	fsr1h,w,c
 12361  0125BE  6EDA               	movwf	fsr2h,c
 12362  0125C0  50DF               	movf	indf2,w,c
 12363  0125C2  6E40               	movwf	(btemp+11)^0,c
 12364  0125C4  0E80               	movlw	128
 12365  0125C6  1640               	andwf	(btemp+11)^0,f,c
 12366                           
 12367                           ;stkvar	_signs @ sp[(-4)+3]
 12368  0125C8  0EFF               	movlw	-1
 12369  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12370                           
 12371                           ;stkvar	_b @ sp[(-4)+-4]
 12372  0125D0  0EFB               	movlw	251
 12373  0125D2  24E1               	addwf	fsr1l,w,c
 12374  0125D4  6ED9               	movwf	fsr2l,c
 12375  0125D6  0EFF               	movlw	255
 12376  0125D8  20E2               	addwfc	fsr1h,w,c
 12377  0125DA  6EDA               	movwf	fsr2h,c
 12378  0125DC  50DF               	movf	indf2,w,c
 12379  0125DE  6E40               	movwf	(btemp+11)^0,c
 12380  0125E0  90D8               	bcf	status,0,c
 12381  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 12382  0125E4  6E3F               	movwf	(btemp+10)^0,c
 12383                           
 12384                           ;stkvar	_bexp @ sp[(-4)+1]
 12385  0125E6  0EFD               	movlw	-3
 12386  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12387                           
 12388                           ;stkvar	_b @ sp[(-4)+-4]
 12389  0125EE  0EFA               	movlw	250
 12390  0125F0  24E1               	addwf	fsr1l,w,c
 12391  0125F2  6ED9               	movwf	fsr2l,c
 12392  0125F4  0EFF               	movlw	255
 12393  0125F6  20E2               	addwfc	fsr1h,w,c
 12394  0125F8  6EDA               	movwf	fsr2h,c
 12395  0125FA  AEDF               	btfss	indf2,7,c
 12396  0125FC  D002               	goto	l5874
 12397                           
 12398                           ;stkvar	_bexp @ sp[(-4)+1]
 12399  0125FE  0EFD               	movlw	-3
 12400  012600  80E3               	bsf	plusw1,0,c
 12401  012602                     l5874:
 12402                           
 12403                           ;stkvar	_bexp @ sp[(-4)+1]
 12404  012602  0EFD               	movlw	-3
 12405  012604  50E3               	movf	plusw1,w,c
 12406  012606  B4D8               	btfsc	status,2,c
 12407  012608  D027               	goto	l5884
 12408                           
 12409                           ;stkvar	_bexp @ sp[(-4)+1]
 12410  01260A  0EFD               	movlw	-3
 12411  01260C  28E3               	incf	plusw1,w,c
 12412  01260E  A4D8               	btfss	status,2,c
 12413  012610  D018               	goto	l5880
 12414  012612  0E00               	movlw	0
 12415  012614  6E3D               	movwf	(btemp+8)^0,c
 12416  012616  0E00               	movlw	0
 12417  012618  6E3E               	movwf	(btemp+9)^0,c
 12418  01261A  0E00               	movlw	0
 12419  01261C  6E3F               	movwf	(btemp+10)^0,c
 12420  01261E  0E00               	movlw	0
 12421  012620  6E40               	movwf	(btemp+11)^0,c
 12422                           
 12423                           ;stkvar	_b @ sp[(-4)+-4]
 12424  012622  0EF8               	movlw	-8
 12425  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12426  01262A  0EF9               	movlw	-7
 12427  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12428  012632  0EFA               	movlw	-6
 12429  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12430  01263A  0EFB               	movlw	-5
 12431  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12432  012642                     l5880:
 12433                           
 12434                           ;stkvar	_b @ sp[(-4)+-4]
 12435  012642  0EFA               	movlw	-6
 12436  012644  8EE3               	bsf	plusw1,7,c
 12437                           
 12438                           ;stkvar	_b @ sp[(-4)+-4]
 12439  012646  0EFB               	movlw	251
 12440  012648  24E1               	addwf	fsr1l,w,c
 12441  01264A  6ED9               	movwf	fsr2l,c
 12442  01264C  0EFF               	movlw	255
 12443  01264E  20E2               	addwfc	fsr1h,w,c
 12444  012650  6EDA               	movwf	fsr2h,c
 12445  012652  0E00               	movlw	0
 12446  012654  6EDF               	movwf	indf2,c
 12447  012656  D018               	goto	l5886
 12448  012658                     l5884:
 12449  012658  0E00               	movlw	0
 12450  01265A  6E3D               	movwf	(btemp+8)^0,c
 12451  01265C  0E00               	movlw	0
 12452  01265E  6E3E               	movwf	(btemp+9)^0,c
 12453  012660  0E00               	movlw	0
 12454  012662  6E3F               	movwf	(btemp+10)^0,c
 12455  012664  0E00               	movlw	0
 12456  012666  6E40               	movwf	(btemp+11)^0,c
 12457                           
 12458                           ;stkvar	_b @ sp[(-4)+-4]
 12459  012668  0EF8               	movlw	-8
 12460  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12461  012670  0EF9               	movlw	-7
 12462  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12463  012678  0EFA               	movlw	-6
 12464  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12465  012680  0EFB               	movlw	-5
 12466  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 12467  012688                     l5886:
 12468                           
 12469                           ;stkvar	_a @ sp[(-4)+-8]
 12470  012688  0EF7               	movlw	247
 12471  01268A  24E1               	addwf	fsr1l,w,c
 12472  01268C  6ED9               	movwf	fsr2l,c
 12473  01268E  0EFF               	movlw	255
 12474  012690  20E2               	addwfc	fsr1h,w,c
 12475  012692  6EDA               	movwf	fsr2h,c
 12476  012694  50DF               	movf	indf2,w,c
 12477  012696  6E40               	movwf	(btemp+11)^0,c
 12478  012698  0E80               	movlw	128
 12479  01269A  1640               	andwf	(btemp+11)^0,f,c
 12480                           
 12481                           ;stkvar	_aexp @ sp[(-4)+2]
 12482  01269C  0EFE               	movlw	-2
 12483  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12484                           
 12485                           ;stkvar	_signs @ sp[(-4)+3]
 12486                           ;stkvar	_aexp @ sp[(-4)+2]
 12487  0126A4  50E1               	movf	fsr1l,w,c
 12488  0126A6  0FFE               	addlw	-2
 12489  0126A8  6ED9               	movwf	fsr2l,c
 12490  0126AA  50E2               	movf	fsr1h,w,c
 12491  0126AC  6EDA               	movwf	fsr2h,c
 12492  0126AE  0EFF               	movlw	255
 12493  0126B0  22DA               	addwfc	fsr2h,f,c
 12494  0126B2  0EFF               	movlw	-1
 12495  0126B4  50E3               	movf	plusw1,w,c
 12496  0126B6  18DE               	xorwf	postinc2,w,c
 12497  0126B8  B4D8               	btfsc	status,2,c
 12498  0126BA  D002               	goto	l5892
 12499                           
 12500                           ;stkvar	_signs @ sp[(-4)+3]
 12501  0126BC  0EFF               	movlw	-1
 12502  0126BE  8CE3               	bsf	plusw1,6,c
 12503  0126C0                     l5892:
 12504                           
 12505                           ;stkvar	_a @ sp[(-4)+-8]
 12506  0126C0  0EF7               	movlw	247
 12507  0126C2  24E1               	addwf	fsr1l,w,c
 12508  0126C4  6ED9               	movwf	fsr2l,c
 12509  0126C6  0EFF               	movlw	255
 12510  0126C8  20E2               	addwfc	fsr1h,w,c
 12511  0126CA  6EDA               	movwf	fsr2h,c
 12512  0126CC  50DF               	movf	indf2,w,c
 12513  0126CE  6E40               	movwf	(btemp+11)^0,c
 12514  0126D0  90D8               	bcf	status,0,c
 12515  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 12516  0126D4  6E3F               	movwf	(btemp+10)^0,c
 12517                           
 12518                           ;stkvar	_aexp @ sp[(-4)+2]
 12519  0126D6  0EFE               	movlw	-2
 12520  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12521                           
 12522                           ;stkvar	_a @ sp[(-4)+-8]
 12523  0126DE  0EF6               	movlw	246
 12524  0126E0  24E1               	addwf	fsr1l,w,c
 12525  0126E2  6ED9               	movwf	fsr2l,c
 12526  0126E4  0EFF               	movlw	255
 12527  0126E6  20E2               	addwfc	fsr1h,w,c
 12528  0126E8  6EDA               	movwf	fsr2h,c
 12529  0126EA  AEDF               	btfss	indf2,7,c
 12530  0126EC  D002               	goto	l5898
 12531                           
 12532                           ;stkvar	_aexp @ sp[(-4)+2]
 12533  0126EE  0EFE               	movlw	-2
 12534  0126F0  80E3               	bsf	plusw1,0,c
 12535  0126F2                     l5898:
 12536                           
 12537                           ;stkvar	_aexp @ sp[(-4)+2]
 12538  0126F2  0EFE               	movlw	-2
 12539  0126F4  50E3               	movf	plusw1,w,c
 12540  0126F6  B4D8               	btfsc	status,2,c
 12541  0126F8  D027               	goto	l5908
 12542                           
 12543                           ;stkvar	_aexp @ sp[(-4)+2]
 12544  0126FA  0EFE               	movlw	-2
 12545  0126FC  28E3               	incf	plusw1,w,c
 12546  0126FE  A4D8               	btfss	status,2,c
 12547  012700  D018               	goto	l5904
 12548  012702  0E00               	movlw	0
 12549  012704  6E3D               	movwf	(btemp+8)^0,c
 12550  012706  0E00               	movlw	0
 12551  012708  6E3E               	movwf	(btemp+9)^0,c
 12552  01270A  0E00               	movlw	0
 12553  01270C  6E3F               	movwf	(btemp+10)^0,c
 12554  01270E  0E00               	movlw	0
 12555  012710  6E40               	movwf	(btemp+11)^0,c
 12556                           
 12557                           ;stkvar	_a @ sp[(-4)+-8]
 12558  012712  0EF4               	movlw	-12
 12559  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12560  01271A  0EF5               	movlw	-11
 12561  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12562  012722  0EF6               	movlw	-10
 12563  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12564  01272A  0EF7               	movlw	-9
 12565  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12566  012732                     l5904:
 12567                           
 12568                           ;stkvar	_a @ sp[(-4)+-8]
 12569  012732  0EF6               	movlw	-10
 12570  012734  8EE3               	bsf	plusw1,7,c
 12571                           
 12572                           ;stkvar	_a @ sp[(-4)+-8]
 12573  012736  0EF7               	movlw	247
 12574  012738  24E1               	addwf	fsr1l,w,c
 12575  01273A  6ED9               	movwf	fsr2l,c
 12576  01273C  0EFF               	movlw	255
 12577  01273E  20E2               	addwfc	fsr1h,w,c
 12578  012740  6EDA               	movwf	fsr2h,c
 12579  012742  0E00               	movlw	0
 12580  012744  6EDF               	movwf	indf2,c
 12581  012746  D018               	goto	l5910
 12582  012748                     l5908:
 12583  012748  0E00               	movlw	0
 12584  01274A  6E3D               	movwf	(btemp+8)^0,c
 12585  01274C  0E00               	movlw	0
 12586  01274E  6E3E               	movwf	(btemp+9)^0,c
 12587  012750  0E00               	movlw	0
 12588  012752  6E3F               	movwf	(btemp+10)^0,c
 12589  012754  0E00               	movlw	0
 12590  012756  6E40               	movwf	(btemp+11)^0,c
 12591                           
 12592                           ;stkvar	_a @ sp[(-4)+-8]
 12593  012758  0EF4               	movlw	-12
 12594  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12595  012760  0EF5               	movlw	-11
 12596  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12597  012768  0EF6               	movlw	-10
 12598  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12599  012770  0EF7               	movlw	-9
 12600  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12601  012778                     l5910:
 12602                           
 12603                           ;stkvar	_bexp @ sp[(-4)+1]
 12604                           ;stkvar	_aexp @ sp[(-4)+2]
 12605  012778  50E1               	movf	fsr1l,w,c
 12606  01277A  0FFE               	addlw	-2
 12607  01277C  6ED9               	movwf	fsr2l,c
 12608  01277E  50E2               	movf	fsr1h,w,c
 12609  012780  6EDA               	movwf	fsr2h,c
 12610  012782  0EFF               	movlw	255
 12611  012784  22DA               	addwfc	fsr2h,f,c
 12612  012786  0EFD               	movlw	-3
 12613  012788  50E3               	movf	plusw1,w,c
 12614  01278A  5CDE               	subwf	postinc2,w,c
 12615  01278C  B0D8               	btfsc	status,0,c
 12616  01278E  D0A4               	goto	l5946
 12617                           
 12618                           ;stkvar	_signs @ sp[(-4)+3]
 12619  012790  0EFF               	movlw	-1
 12620  012792  ACE3               	btfss	plusw1,6,c
 12621  012794  D002               	goto	l5916
 12622                           
 12623                           ;stkvar	_signs @ sp[(-4)+3]
 12624  012796  0EFF               	movlw	-1
 12625  012798  7EE3               	btg	plusw1,7,c
 12626  01279A                     l5916:
 12627                           
 12628                           ;stkvar	_bexp @ sp[(-4)+1]
 12629                           ;stkvar	_grs @ sp[(-4)+0]
 12630  01279A  0EFD               	movlw	-3
 12631  01279C  006F FF8C  F035    	movff	plusw1,btemp
 12632  0127A2  0EFC               	movlw	-4
 12633  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12634                           
 12635                           ;stkvar	_aexp @ sp[(-4)+2]
 12636                           ;stkvar	_bexp @ sp[(-4)+1]
 12637  0127AA  0EFE               	movlw	-2
 12638  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 12639  0127B2  0EFD               	movlw	-3
 12640  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12641                           
 12642                           ;stkvar	_grs @ sp[(-4)+0]
 12643                           ;stkvar	_aexp @ sp[(-4)+2]
 12644  0127BA  0EFC               	movlw	-4
 12645  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 12646  0127C2  0EFE               	movlw	-2
 12647  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12648                           
 12649                           ;stkvar	_b @ sp[(-4)+-4]
 12650                           ;stkvar	_grs @ sp[(-4)+0]
 12651  0127CA  0EF8               	movlw	-8
 12652  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 12653  0127D2  0EFC               	movlw	-4
 12654  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12655                           
 12656                           ;stkvar	_a @ sp[(-4)+-8]
 12657                           ;stkvar	_b @ sp[(-4)+-4]
 12658  0127DA  0EF4               	movlw	-12
 12659  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 12660  0127E2  0EF8               	movlw	-8
 12661  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12662                           
 12663                           ;stkvar	_grs @ sp[(-4)+0]
 12664                           ;stkvar	_a @ sp[(-4)+-8]
 12665  0127EA  0EFC               	movlw	-4
 12666  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 12667  0127F2  0EF4               	movlw	-12
 12668  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12669                           
 12670                           ;stkvar	_b @ sp[(-4)+-4]
 12671  0127FA  0EF9               	movlw	249
 12672  0127FC  24E1               	addwf	fsr1l,w,c
 12673  0127FE  6ED9               	movwf	fsr2l,c
 12674  012800  0EFF               	movlw	255
 12675  012802  20E2               	addwfc	fsr1h,w,c
 12676  012804  6EDA               	movwf	fsr2h,c
 12677  012806  50DF               	movf	indf2,w,c
 12678  012808  6E40               	movwf	(btemp+11)^0,c
 12679                           
 12680                           ;stkvar	_grs @ sp[(-4)+0]
 12681  01280A  0EFC               	movlw	-4
 12682  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12683                           
 12684                           ;stkvar	_a @ sp[(-4)+-8]
 12685  012812  0EF5               	movlw	245
 12686  012814  24E1               	addwf	fsr1l,w,c
 12687  012816  6ED9               	movwf	fsr2l,c
 12688  012818  0EFF               	movlw	255
 12689  01281A  20E2               	addwfc	fsr1h,w,c
 12690  01281C  6EDA               	movwf	fsr2h,c
 12691                           
 12692                           ;stkvar	_b @ sp[(-4)+-4]
 12693  01281E  0EF9               	movlw	249
 12694  012820  24E1               	addwf	fsr1l,w,c
 12695  012822  6EE9               	movwf	fsr0l,c
 12696  012824  0EFF               	movlw	255
 12697  012826  20E2               	addwfc	fsr1h,w,c
 12698  012828  6EEA               	movwf	fsr0h,c
 12699  01282A  006F FF7F FFEF     	movff	indf2,indf0
 12700                           
 12701                           ;stkvar	_grs @ sp[(-4)+0]
 12702                           ;stkvar	_a @ sp[(-4)+-8]
 12703  012830  0EF5               	movlw	245
 12704  012832  24E1               	addwf	fsr1l,w,c
 12705  012834  6ED9               	movwf	fsr2l,c
 12706  012836  0EFF               	movlw	255
 12707  012838  20E2               	addwfc	fsr1h,w,c
 12708  01283A  6EDA               	movwf	fsr2h,c
 12709  01283C  0EFC               	movlw	-4
 12710  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 12711                           
 12712                           ;stkvar	_b @ sp[(-4)+-4]
 12713  012844  0EFA               	movlw	250
 12714  012846  24E1               	addwf	fsr1l,w,c
 12715  012848  6ED9               	movwf	fsr2l,c
 12716  01284A  0EFF               	movlw	255
 12717  01284C  20E2               	addwfc	fsr1h,w,c
 12718  01284E  6EDA               	movwf	fsr2h,c
 12719  012850  50DF               	movf	indf2,w,c
 12720  012852  6E40               	movwf	(btemp+11)^0,c
 12721                           
 12722                           ;stkvar	_grs @ sp[(-4)+0]
 12723  012854  0EFC               	movlw	-4
 12724  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 12725                           
 12726                           ;stkvar	_a @ sp[(-4)+-8]
 12727  01285C  0EF6               	movlw	246
 12728  01285E  24E1               	addwf	fsr1l,w,c
 12729  012860  6ED9               	movwf	fsr2l,c
 12730  012862  0EFF               	movlw	255
 12731  012864  20E2               	addwfc	fsr1h,w,c
 12732  012866  6EDA               	movwf	fsr2h,c
 12733                           
 12734                           ;stkvar	_b @ sp[(-4)+-4]
 12735  012868  0EFA               	movlw	250
 12736  01286A  24E1               	addwf	fsr1l,w,c
 12737  01286C  6EE9               	movwf	fsr0l,c
 12738  01286E  0EFF               	movlw	255
 12739  012870  20E2               	addwfc	fsr1h,w,c
 12740  012872  6EEA               	movwf	fsr0h,c
 12741  012874  006F FF7F FFEF     	movff	indf2,indf0
 12742                           
 12743                           ;stkvar	_grs @ sp[(-4)+0]
 12744                           ;stkvar	_a @ sp[(-4)+-8]
 12745  01287A  0EF6               	movlw	246
 12746  01287C  24E1               	addwf	fsr1l,w,c
 12747  01287E  6ED9               	movwf	fsr2l,c
 12748  012880  0EFF               	movlw	255
 12749  012882  20E2               	addwfc	fsr1h,w,c
 12750  012884  6EDA               	movwf	fsr2h,c
 12751  012886  0EFC               	movlw	-4
 12752  012888  006F FF8F FFDF     	movff	plusw1,indf2
 12753                           
 12754                           ;stkvar	_b @ sp[(-4)+-4]
 12755  01288E  0EFB               	movlw	251
 12756  012890  24E1               	addwf	fsr1l,w,c
 12757  012892  6ED9               	movwf	fsr2l,c
 12758  012894  0EFF               	movlw	255
 12759  012896  20E2               	addwfc	fsr1h,w,c
 12760  012898  6EDA               	movwf	fsr2h,c
 12761  01289A  50DF               	movf	indf2,w,c
 12762  01289C  6E40               	movwf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_grs @ sp[(-4)+0]
 12765  01289E  0EFC               	movlw	-4
 12766  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 12767                           
 12768                           ;stkvar	_a @ sp[(-4)+-8]
 12769  0128A6  0EF7               	movlw	247
 12770  0128A8  24E1               	addwf	fsr1l,w,c
 12771  0128AA  6ED9               	movwf	fsr2l,c
 12772  0128AC  0EFF               	movlw	255
 12773  0128AE  20E2               	addwfc	fsr1h,w,c
 12774  0128B0  6EDA               	movwf	fsr2h,c
 12775                           
 12776                           ;stkvar	_b @ sp[(-4)+-4]
 12777  0128B2  0EFB               	movlw	251
 12778  0128B4  24E1               	addwf	fsr1l,w,c
 12779  0128B6  6EE9               	movwf	fsr0l,c
 12780  0128B8  0EFF               	movlw	255
 12781  0128BA  20E2               	addwfc	fsr1h,w,c
 12782  0128BC  6EEA               	movwf	fsr0h,c
 12783  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 12784                           
 12785                           ;stkvar	_grs @ sp[(-4)+0]
 12786                           ;stkvar	_a @ sp[(-4)+-8]
 12787  0128C4  0EF7               	movlw	247
 12788  0128C6  24E1               	addwf	fsr1l,w,c
 12789  0128C8  6ED9               	movwf	fsr2l,c
 12790  0128CA  0EFF               	movlw	255
 12791  0128CC  20E2               	addwfc	fsr1h,w,c
 12792  0128CE  6EDA               	movwf	fsr2h,c
 12793  0128D0  0EFC               	movlw	-4
 12794  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 12795  0128D8                     l5946:
 12796                           
 12797                           ;stkvar	_grs @ sp[(-4)+0]
 12798  0128D8  0EFC               	movlw	-4
 12799  0128DA  6AE3               	clrf	plusw1,c
 12800                           
 12801                           ;stkvar	_aexp @ sp[(-4)+2]
 12802  0128DC  0EFE               	movlw	-2
 12803  0128DE  50E3               	movf	plusw1,w,c
 12804  0128E0  6E3F               	movwf	(btemp+10)^0,c
 12805  0128E2  6A40               	clrf	(btemp+11)^0,c
 12806                           
 12807                           ;stkvar	_bexp @ sp[(-4)+1]
 12808  0128E4  0EFD               	movlw	-3
 12809  0128E6  50E3               	movf	plusw1,w,c
 12810  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 12811  0128EA  0E00               	movlw	0
 12812  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 12813  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 12814  0128F0  D062               	goto	l5970
 12815  0128F2  5040               	movf	(btemp+11)^0,w,c
 12816  0128F4  E104               	bnz	u4340
 12817  0128F6  0E1A               	movlw	26
 12818  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 12819  0128FA  A0D8               	btfss	status,0,c
 12820  0128FC  D05C               	goto	l5970
 12821  0128FE                     u4340:
 12822                           
 12823                           ;stkvar	_b @ sp[(-4)+-4]
 12824  0128FE  0EF8               	movlw	-8
 12825  012900  50E3               	movf	plusw1,w,c
 12826  012902  E10A               	bnz	u4351
 12827  012904  0EF9               	movlw	-7
 12828  012906  50E3               	movf	plusw1,w,c
 12829  012908  E107               	bnz	u4351
 12830  01290A  0EFA               	movlw	-6
 12831  01290C  50E3               	movf	plusw1,w,c
 12832  01290E  E104               	bnz	u4351
 12833  012910  0EFB               	movlw	-5
 12834  012912  50E3               	movf	plusw1,w,c
 12835  012914  B4D8               	btfsc	status,2,c
 12836  012916  D003               	goto	u4350
 12837  012918                     u4351:
 12838  012918  6A40               	clrf	(btemp+11)^0,c
 12839  01291A  2A40               	incf	(btemp+11)^0,f,c
 12840  01291C  D001               	goto	u4368
 12841  01291E                     u4350:
 12842  01291E  6A40               	clrf	(btemp+11)^0,c
 12843  012920                     u4368:
 12844                           
 12845                           ;stkvar	_grs @ sp[(-4)+0]
 12846  012920  0EFC               	movlw	-4
 12847  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 12848                           
 12849                           ;stkvar	_b @ sp[(-4)+-4]
 12850  012928  0EF8               	movlw	-8
 12851  01292A  6AE3               	clrf	plusw1,c
 12852  01292C  0EF9               	movlw	-7
 12853  01292E  6AE3               	clrf	plusw1,c
 12854  012930  0EFA               	movlw	-6
 12855  012932  6AE3               	clrf	plusw1,c
 12856  012934  0EFB               	movlw	-5
 12857  012936  6AE3               	clrf	plusw1,c
 12858                           
 12859                           ;stkvar	_aexp @ sp[(-4)+2]
 12860                           ;stkvar	_bexp @ sp[(-4)+1]
 12861  012938  0EFE               	movlw	-2
 12862  01293A  006F FF8C  F035    	movff	plusw1,btemp
 12863  012940  0EFD               	movlw	-3
 12864  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 12865  012948  D042               	goto	u4400
 12866  01294A                     l5956:
 12867                           
 12868                           ;stkvar	_grs @ sp[(-4)+0]
 12869  01294A  0EFC               	movlw	-4
 12870  01294C  A0E3               	btfss	plusw1,0,c
 12871  01294E  D00D               	goto	l5960
 12872                           
 12873                           ;stkvar	_grs @ sp[(-4)+0]
 12874  012950  0EFC               	movlw	-4
 12875  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 12876  012958  90D8               	bcf	status,0,c
 12877  01295A  3240               	rrcf	(btemp+11)^0,f,c
 12878  01295C  0E01               	movlw	1
 12879  01295E  1240               	iorwf	(btemp+11)^0,f,c
 12880                           
 12881                           ;stkvar	_grs @ sp[(-4)+0]
 12882  012960  0EFC               	movlw	-4
 12883  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 12884  012968  D009               	goto	l5962
 12885  01296A                     l5960:
 12886                           
 12887                           ;stkvar	_grs @ sp[(-4)+0]
 12888  01296A  50E1               	movf	fsr1l,w,c
 12889  01296C  0FFC               	addlw	-4
 12890  01296E  6ED9               	movwf	fsr2l,c
 12891  012970  50E2               	movf	fsr1h,w,c
 12892  012972  6EDA               	movwf	fsr2h,c
 12893  012974  0EFF               	movlw	255
 12894  012976  22DA               	addwfc	fsr2h,f,c
 12895  012978  90D8               	bcf	status,0,c
 12896  01297A  32DF               	rrcf	indf2,f,c
 12897  01297C                     l5962:
 12898                           
 12899                           ;stkvar	_b @ sp[(-4)+-4]
 12900  01297C  0EF8               	movlw	-8
 12901  01297E  A0E3               	btfss	plusw1,0,c
 12902  012980  D002               	goto	l5966
 12903                           
 12904                           ;stkvar	_grs @ sp[(-4)+0]
 12905  012982  0EFC               	movlw	-4
 12906  012984  8EE3               	bsf	plusw1,7,c
 12907  012986                     l5966:
 12908  012986  0E01               	movlw	1
 12909  012988  6E40               	movwf	(btemp+11)^0,c
 12910                           
 12911                           ;stkvar	_b @ sp[(-4)+-4]
 12912  01298A  50E1               	movf	fsr1l,w,c
 12913  01298C  0FF8               	addlw	-8
 12914  01298E  6ED9               	movwf	fsr2l,c
 12915  012990  50E2               	movf	fsr1h,w,c
 12916  012992  6EDA               	movwf	fsr2h,c
 12917  012994  0EFF               	movlw	255
 12918  012996  22DA               	addwfc	fsr2h,f,c
 12919  012998  2840               	incf	(btemp+11)^0,w,c
 12920  01299A  52DE               	movf	postinc2,f,c
 12921  01299C  D008               	goto	u4390
 12922  01299E                     u4395:
 12923  01299E  52DE               	movf	postinc2,f,c
 12924  0129A0  90D8               	bcf	status,0,c
 12925  0129A2  BEDC               	btfsc	preinc2,7,c
 12926  0129A4  80D8               	bsf	status,0,c
 12927  0129A6  32DD               	rrcf	postdec2,f,c
 12928  0129A8  32DD               	rrcf	postdec2,f,c
 12929  0129AA  32DD               	rrcf	postdec2,f,c
 12930  0129AC  32DE               	rrcf	postinc2,f,c
 12931  0129AE                     u4390:
 12932  0129AE  2EE8               	decfsz	wreg,f,c
 12933  0129B0  D7F6               	goto	u4395
 12934                           
 12935                           ;stkvar	_bexp @ sp[(-4)+1]
 12936  0129B2  0EFD               	movlw	-3
 12937  0129B4  2AE3               	incf	plusw1,f,c
 12938  0129B6                     l5970:
 12939                           
 12940                           ;stkvar	_aexp @ sp[(-4)+2]
 12941                           ;stkvar	_bexp @ sp[(-4)+1]
 12942  0129B6  50E1               	movf	fsr1l,w,c
 12943  0129B8  0FFD               	addlw	-3
 12944  0129BA  6ED9               	movwf	fsr2l,c
 12945  0129BC  50E2               	movf	fsr1h,w,c
 12946  0129BE  6EDA               	movwf	fsr2h,c
 12947  0129C0  0EFF               	movlw	255
 12948  0129C2  22DA               	addwfc	fsr2h,f,c
 12949  0129C4  0EFE               	movlw	-2
 12950  0129C6  50E3               	movf	plusw1,w,c
 12951  0129C8  5CDE               	subwf	postinc2,w,c
 12952  0129CA  A0D8               	btfss	status,0,c
 12953  0129CC  D7BE               	goto	l5956
 12954  0129CE                     u4400:
 12955                           
 12956                           ;stkvar	_signs @ sp[(-4)+3]
 12957  0129CE  0EFF               	movlw	-1
 12958  0129D0  BCE3               	btfsc	plusw1,6,c
 12959  0129D2  D066               	goto	l5998
 12960                           
 12961                           ;stkvar	_bexp @ sp[(-4)+1]
 12962  0129D4  0EFD               	movlw	-3
 12963  0129D6  50E3               	movf	plusw1,w,c
 12964  0129D8  B4D8               	btfsc	status,2,c
 12965  0129DA  D0F2               	goto	u4500
 12966                           
 12967                           ;stkvar	_a @ sp[(-4)+-8]
 12968                           ;stkvar	_b @ sp[(-4)+-4]
 12969  0129DC  0EF8               	movlw	-8
 12970  0129DE  50E3               	movf	plusw1,w,c
 12971  0129E0  6E35               	movwf	btemp^0,c
 12972  0129E2  0EF4               	movlw	-12
 12973  0129E4  50E3               	movf	plusw1,w,c
 12974  0129E6  2635               	addwf	btemp^0,f,c
 12975  0129E8  0EF8               	movlw	-8
 12976  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12977  0129F0  0EF9               	movlw	-7
 12978  0129F2  50E3               	movf	plusw1,w,c
 12979  0129F4  6E35               	movwf	btemp^0,c
 12980  0129F6  0EF5               	movlw	-11
 12981  0129F8  50E3               	movf	plusw1,w,c
 12982  0129FA  2235               	addwfc	btemp^0,f,c
 12983  0129FC  0EF9               	movlw	-7
 12984  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 12985  012A04  0EFA               	movlw	-6
 12986  012A06  50E3               	movf	plusw1,w,c
 12987  012A08  6E35               	movwf	btemp^0,c
 12988  012A0A  0EF6               	movlw	-10
 12989  012A0C  50E3               	movf	plusw1,w,c
 12990  012A0E  2235               	addwfc	btemp^0,f,c
 12991  012A10  0EFA               	movlw	-6
 12992  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 12993  012A18  0EFB               	movlw	-5
 12994  012A1A  50E3               	movf	plusw1,w,c
 12995  012A1C  6E35               	movwf	btemp^0,c
 12996  012A1E  0EF7               	movlw	-9
 12997  012A20  50E3               	movf	plusw1,w,c
 12998  012A22  2235               	addwfc	btemp^0,f,c
 12999  012A24  0EFB               	movlw	-5
 13000  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13001                           
 13002                           ;stkvar	_b @ sp[(-4)+-4]
 13003  012A2C  0EFB               	movlw	-5
 13004  012A2E  A0E3               	btfss	plusw1,0,c
 13005  012A30  D101               	goto	u4540
 13006                           
 13007                           ;stkvar	_grs @ sp[(-4)+0]
 13008  012A32  0EFC               	movlw	-4
 13009  012A34  A0E3               	btfss	plusw1,0,c
 13010  012A36  D00D               	goto	l5988
 13011                           
 13012                           ;stkvar	_grs @ sp[(-4)+0]
 13013  012A38  0EFC               	movlw	-4
 13014  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13015  012A40  90D8               	bcf	status,0,c
 13016  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13017  012A44  0E01               	movlw	1
 13018  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13019                           
 13020                           ;stkvar	_grs @ sp[(-4)+0]
 13021  012A48  0EFC               	movlw	-4
 13022  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13023  012A50  D009               	goto	l5990
 13024  012A52                     l5988:
 13025                           
 13026                           ;stkvar	_grs @ sp[(-4)+0]
 13027  012A52  50E1               	movf	fsr1l,w,c
 13028  012A54  0FFC               	addlw	-4
 13029  012A56  6ED9               	movwf	fsr2l,c
 13030  012A58  50E2               	movf	fsr1h,w,c
 13031  012A5A  6EDA               	movwf	fsr2h,c
 13032  012A5C  0EFF               	movlw	255
 13033  012A5E  22DA               	addwfc	fsr2h,f,c
 13034  012A60  90D8               	bcf	status,0,c
 13035  012A62  32DF               	rrcf	indf2,f,c
 13036  012A64                     l5990:
 13037                           
 13038                           ;stkvar	_b @ sp[(-4)+-4]
 13039  012A64  0EF8               	movlw	-8
 13040  012A66  A0E3               	btfss	plusw1,0,c
 13041  012A68  D002               	goto	l5994
 13042                           
 13043                           ;stkvar	_grs @ sp[(-4)+0]
 13044  012A6A  0EFC               	movlw	-4
 13045  012A6C  8EE3               	bsf	plusw1,7,c
 13046  012A6E                     l5994:
 13047  012A6E  0E01               	movlw	1
 13048  012A70  6E40               	movwf	(btemp+11)^0,c
 13049                           
 13050                           ;stkvar	_b @ sp[(-4)+-4]
 13051  012A72  50E1               	movf	fsr1l,w,c
 13052  012A74  0FF8               	addlw	-8
 13053  012A76  6ED9               	movwf	fsr2l,c
 13054  012A78  50E2               	movf	fsr1h,w,c
 13055  012A7A  6EDA               	movwf	fsr2h,c
 13056  012A7C  0EFF               	movlw	255
 13057  012A7E  22DA               	addwfc	fsr2h,f,c
 13058  012A80  2840               	incf	(btemp+11)^0,w,c
 13059  012A82  52DE               	movf	postinc2,f,c
 13060  012A84  D008               	goto	u4460
 13061  012A86                     u4465:
 13062  012A86  52DE               	movf	postinc2,f,c
 13063  012A88  90D8               	bcf	status,0,c
 13064  012A8A  BEDC               	btfsc	preinc2,7,c
 13065  012A8C  80D8               	bsf	status,0,c
 13066  012A8E  32DD               	rrcf	postdec2,f,c
 13067  012A90  32DD               	rrcf	postdec2,f,c
 13068  012A92  32DD               	rrcf	postdec2,f,c
 13069  012A94  32DE               	rrcf	postinc2,f,c
 13070  012A96                     u4460:
 13071  012A96  2EE8               	decfsz	wreg,f,c
 13072  012A98  D7F6               	goto	u4465
 13073                           
 13074                           ;stkvar	_bexp @ sp[(-4)+1]
 13075  012A9A  0EFD               	movlw	-3
 13076  012A9C  2AE3               	incf	plusw1,f,c
 13077  012A9E  D0CA               	goto	u4540
 13078  012AA0                     l5998:
 13079                           
 13080                           ;stkvar	_a @ sp[(-4)+-8]
 13081                           ;stkvar	_b @ sp[(-4)+-4]
 13082  012AA0  50E1               	movf	fsr1l,w,c
 13083  012AA2  0FF8               	addlw	-8
 13084  012AA4  6ED9               	movwf	fsr2l,c
 13085  012AA6  50E2               	movf	fsr1h,w,c
 13086  012AA8  6EDA               	movwf	fsr2h,c
 13087  012AAA  0EFF               	movlw	255
 13088  012AAC  22DA               	addwfc	fsr2h,f,c
 13089  012AAE  0EF4               	movlw	-12
 13090  012AB0  50E3               	movf	plusw1,w,c
 13091  012AB2  5CDE               	subwf	postinc2,w,c
 13092  012AB4  0EF5               	movlw	-11
 13093  012AB6  50E3               	movf	plusw1,w,c
 13094  012AB8  58DE               	subwfb	postinc2,w,c
 13095  012ABA  0EF6               	movlw	-10
 13096  012ABC  50E3               	movf	plusw1,w,c
 13097  012ABE  58DE               	subwfb	postinc2,w,c
 13098  012AC0  50DE               	movf	postinc2,w,c
 13099  012AC2  0A80               	xorlw	128
 13100  012AC4  6E35               	movwf	btemp^0,c
 13101  012AC6  0EF7               	movlw	-9
 13102  012AC8  50E3               	movf	plusw1,w,c
 13103  012ACA  0A80               	xorlw	128
 13104  012ACC  5835               	subwfb	btemp^0,w,c
 13105  012ACE  B0D8               	btfsc	status,0,c
 13106  012AD0  D053               	goto	l6010
 13107                           
 13108                           ;stkvar	_b @ sp[(-4)+-4]
 13109                           ;stkvar	_a @ sp[(-4)+-8]
 13110  012AD2  0EF4               	movlw	-12
 13111  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13112  012ADA  0EF5               	movlw	-11
 13113  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13114  012AE2  0EF6               	movlw	-10
 13115  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13116  012AEA  0EF7               	movlw	-9
 13117  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13118  012AF2  0EF8               	movlw	-8
 13119  012AF4  50E3               	movf	plusw1,w,c
 13120  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13121  012AF8  0EF9               	movlw	-7
 13122  012AFA  50E3               	movf	plusw1,w,c
 13123  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13124  012AFE  0EFA               	movlw	-6
 13125  012B00  50E3               	movf	plusw1,w,c
 13126  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13127  012B04  0EFB               	movlw	-5
 13128  012B06  50E3               	movf	plusw1,w,c
 13129  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13130  012B0A  0EFF               	movlw	255
 13131  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13132  012B0E  6E39               	movwf	(btemp+4)^0,c
 13133  012B10  0EFF               	movlw	255
 13134  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13135  012B14  6E3A               	movwf	(btemp+5)^0,c
 13136  012B16  0EFF               	movlw	255
 13137  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13138  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13139  012B1C  0EFF               	movlw	255
 13140  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13141  012B20  6E3C               	movwf	(btemp+7)^0,c
 13142                           
 13143                           ;stkvar	_b @ sp[(-4)+-4]
 13144  012B22  0EF8               	movlw	-8
 13145  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13146  012B2A  0EF9               	movlw	-7
 13147  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13148  012B32  0EFA               	movlw	-6
 13149  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13150  012B3A  0EFB               	movlw	-5
 13151  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13152                           
 13153                           ;stkvar	_signs @ sp[(-4)+3]
 13154  012B42  0EFF               	movlw	-1
 13155  012B44  7EE3               	btg	plusw1,7,c
 13156                           
 13157                           ;stkvar	_grs @ sp[(-4)+0]
 13158  012B46  0EFC               	movlw	-4
 13159  012B48  50E3               	movf	plusw1,w,c
 13160  012B4A  0800               	sublw	0
 13161  012B4C  6E40               	movwf	(btemp+11)^0,c
 13162                           
 13163                           ;stkvar	_grs @ sp[(-4)+0]
 13164  012B4E  0EFC               	movlw	-4
 13165  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13166                           
 13167                           ;stkvar	_grs @ sp[(-4)+0]
 13168  012B56  0EFC               	movlw	-4
 13169  012B58  50E3               	movf	plusw1,w,c
 13170  012B5A  A4D8               	btfss	status,2,c
 13171  012B5C  D020               	goto	l6012
 13172                           
 13173                           ;stkvar	_b @ sp[(-4)+-4]
 13174  012B5E  50E1               	movf	fsr1l,w,c
 13175  012B60  0FF8               	addlw	-8
 13176  012B62  6ED9               	movwf	fsr2l,c
 13177  012B64  50E2               	movf	fsr1h,w,c
 13178  012B66  6EDA               	movwf	fsr2h,c
 13179  012B68  0EFF               	movlw	255
 13180  012B6A  22DA               	addwfc	fsr2h,f,c
 13181  012B6C  2ADE               	incf	postinc2,f,c
 13182  012B6E  0E00               	movlw	0
 13183  012B70  22DE               	addwfc	postinc2,f,c
 13184  012B72  22DE               	addwfc	postinc2,f,c
 13185  012B74  22DE               	addwfc	postinc2,f,c
 13186  012B76  D013               	goto	l6012
 13187  012B78                     l6010:
 13188                           
 13189                           ;stkvar	_a @ sp[(-4)+-8]
 13190                           ;stkvar	_b @ sp[(-4)+-4]
 13191  012B78  50E1               	movf	fsr1l,w,c
 13192  012B7A  0FF8               	addlw	-8
 13193  012B7C  6ED9               	movwf	fsr2l,c
 13194  012B7E  50E2               	movf	fsr1h,w,c
 13195  012B80  6EDA               	movwf	fsr2h,c
 13196  012B82  0EFF               	movlw	255
 13197  012B84  22DA               	addwfc	fsr2h,f,c
 13198  012B86  0EF4               	movlw	-12
 13199  012B88  50E3               	movf	plusw1,w,c
 13200  012B8A  5EDE               	subwf	postinc2,f,c
 13201  012B8C  0EF5               	movlw	-11
 13202  012B8E  50E3               	movf	plusw1,w,c
 13203  012B90  5ADE               	subwfb	postinc2,f,c
 13204  012B92  0EF6               	movlw	-10
 13205  012B94  50E3               	movf	plusw1,w,c
 13206  012B96  5ADE               	subwfb	postinc2,f,c
 13207  012B98  0EF7               	movlw	-9
 13208  012B9A  50E3               	movf	plusw1,w,c
 13209  012B9C  5ADE               	subwfb	postinc2,f,c
 13210  012B9E                     l6012:
 13211                           
 13212                           ;stkvar	_b @ sp[(-4)+-4]
 13213  012B9E  0EF8               	movlw	-8
 13214  012BA0  50E3               	movf	plusw1,w,c
 13215  012BA2  E145               	bnz	l6034
 13216  012BA4  0EF9               	movlw	-7
 13217  012BA6  50E3               	movf	plusw1,w,c
 13218  012BA8  E142               	bnz	l6034
 13219  012BAA  0EFA               	movlw	-6
 13220  012BAC  50E3               	movf	plusw1,w,c
 13221  012BAE  E13F               	bnz	l6034
 13222  012BB0  0EFB               	movlw	-5
 13223  012BB2  50E3               	movf	plusw1,w,c
 13224  012BB4  A4D8               	btfss	status,2,c
 13225  012BB6  D03B               	goto	l6034
 13226                           
 13227                           ;stkvar	_grs @ sp[(-4)+0]
 13228  012BB8  0EFC               	movlw	-4
 13229  012BBA  50E3               	movf	plusw1,w,c
 13230  012BBC  A4D8               	btfss	status,2,c
 13231  012BBE  D037               	goto	l6034
 13232  012BC0                     u4500:
 13233  012BC0  0E00               	movlw	0
 13234  012BC2  6E35               	movwf	btemp^0,c
 13235  012BC4  0E00               	movlw	0
 13236  012BC6  6E36               	movwf	(btemp+1)^0,c
 13237  012BC8  0E00               	movlw	0
 13238  012BCA  6E37               	movwf	(btemp+2)^0,c
 13239  012BCC  0E00               	movlw	0
 13240  012BCE  6E38               	movwf	(btemp+3)^0,c
 13241  012BD0  D0C6               	goto	l2485
 13242  012BD2                     l6020:
 13243                           
 13244                           ;stkvar	_b @ sp[(-4)+-4]
 13245  012BD2  90D8               	bcf	status,0,c
 13246  012BD4  0EF8               	movlw	-8
 13247  012BD6  36E3               	rlcf	plusw1,f,c
 13248  012BD8  0EF9               	movlw	-7
 13249  012BDA  36E3               	rlcf	plusw1,f,c
 13250  012BDC  0EFA               	movlw	-6
 13251  012BDE  36E3               	rlcf	plusw1,f,c
 13252  012BE0  0EFB               	movlw	-5
 13253  012BE2  36E3               	rlcf	plusw1,f,c
 13254                           
 13255                           ;stkvar	_grs @ sp[(-4)+0]
 13256  012BE4  0EFC               	movlw	-4
 13257  012BE6  AEE3               	btfss	plusw1,7,c
 13258  012BE8  D002               	goto	l2497
 13259                           
 13260                           ;stkvar	_b @ sp[(-4)+-4]
 13261  012BEA  0EF8               	movlw	-8
 13262  012BEC  80E3               	bsf	plusw1,0,c
 13263  012BEE                     l2497:
 13264                           
 13265                           ;stkvar	_grs @ sp[(-4)+0]
 13266  012BEE  0EFC               	movlw	-4
 13267  012BF0  A0E3               	btfss	plusw1,0,c
 13268  012BF2  D00E               	goto	l6028
 13269                           
 13270                           ;stkvar	_grs @ sp[(-4)+0]
 13271  012BF4  0EFC               	movlw	-4
 13272  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13273  012BFC  90D8               	bcf	status,0,c
 13274  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13275  012C00  6E3F               	movwf	(btemp+10)^0,c
 13276  012C02  0E01               	movlw	1
 13277  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13278                           
 13279                           ;stkvar	_grs @ sp[(-4)+0]
 13280  012C06  0EFC               	movlw	-4
 13281  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13282  012C0E  D009               	goto	l6030
 13283  012C10                     l6028:
 13284                           
 13285                           ;stkvar	_grs @ sp[(-4)+0]
 13286  012C10  50E1               	movf	fsr1l,w,c
 13287  012C12  0FFC               	addlw	-4
 13288  012C14  6ED9               	movwf	fsr2l,c
 13289  012C16  50E2               	movf	fsr1h,w,c
 13290  012C18  6EDA               	movwf	fsr2h,c
 13291  012C1A  0EFF               	movlw	255
 13292  012C1C  22DA               	addwfc	fsr2h,f,c
 13293  012C1E  90D8               	bcf	status,0,c
 13294  012C20  36DF               	rlcf	indf2,f,c
 13295  012C22                     l6030:
 13296                           
 13297                           ;stkvar	_bexp @ sp[(-4)+1]
 13298  012C22  0EFD               	movlw	-3
 13299  012C24  50E3               	movf	plusw1,w,c
 13300  012C26  B4D8               	btfsc	status,2,c
 13301  012C28  D002               	goto	l6034
 13302                           
 13303                           ;stkvar	_bexp @ sp[(-4)+1]
 13304  012C2A  0EFD               	movlw	-3
 13305  012C2C  06E3               	decf	plusw1,f,c
 13306  012C2E                     l6034:
 13307                           
 13308                           ;stkvar	_b @ sp[(-4)+-4]
 13309  012C2E  0EFA               	movlw	-6
 13310  012C30  AEE3               	btfss	plusw1,7,c
 13311  012C32  D7CF               	goto	l6020
 13312  012C34                     u4540:
 13313                           
 13314                           ;stkvar	_aexp @ sp[(-4)+2]
 13315  012C34  0EFE               	movlw	-2
 13316  012C36  6AE3               	clrf	plusw1,c
 13317                           
 13318                           ;stkvar	_grs @ sp[(-4)+0]
 13319  012C38  0EFC               	movlw	-4
 13320  012C3A  AEE3               	btfss	plusw1,7,c
 13321  012C3C  D00F               	goto	l6048
 13322                           
 13323                           ;stkvar	_grs @ sp[(-4)+0]
 13324  012C3E  0EFC               	movlw	-4
 13325  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13326  012C46  0E7F               	movlw	127
 13327  012C48  1640               	andwf	(btemp+11)^0,f,c
 13328  012C4A  B4D8               	btfsc	status,2,c
 13329  012C4C  D004               	goto	l6044
 13330  012C4E                     u4560:
 13331                           
 13332                           ;stkvar	_aexp @ sp[(-4)+2]
 13333  012C4E  0EFE               	movlw	-2
 13334  012C50  6AE3               	clrf	plusw1,c
 13335  012C52  2AE3               	incf	plusw1,f,c
 13336  012C54  D003               	goto	l6048
 13337  012C56                     l6044:
 13338                           
 13339                           ;stkvar	_b @ sp[(-4)+-4]
 13340  012C56  0EF8               	movlw	-8
 13341  012C58  B0E3               	btfsc	plusw1,0,c
 13342  012C5A  D7F9               	goto	u4560
 13343  012C5C                     l6048:
 13344                           
 13345                           ;stkvar	_aexp @ sp[(-4)+2]
 13346  012C5C  0EFE               	movlw	-2
 13347  012C5E  50E3               	movf	plusw1,w,c
 13348  012C60  B4D8               	btfsc	status,2,c
 13349  012C62  D02B               	goto	l6060
 13350                           
 13351                           ;stkvar	_b @ sp[(-4)+-4]
 13352  012C64  50E1               	movf	fsr1l,w,c
 13353  012C66  0FF8               	addlw	-8
 13354  012C68  6ED9               	movwf	fsr2l,c
 13355  012C6A  50E2               	movf	fsr1h,w,c
 13356  012C6C  6EDA               	movwf	fsr2h,c
 13357  012C6E  0EFF               	movlw	255
 13358  012C70  22DA               	addwfc	fsr2h,f,c
 13359  012C72  2ADE               	incf	postinc2,f,c
 13360  012C74  0E00               	movlw	0
 13361  012C76  22DE               	addwfc	postinc2,f,c
 13362  012C78  22DE               	addwfc	postinc2,f,c
 13363  012C7A  22DE               	addwfc	postinc2,f,c
 13364                           
 13365                           ;stkvar	_b @ sp[(-4)+-4]
 13366  012C7C  0EFB               	movlw	-5
 13367  012C7E  A0E3               	btfss	plusw1,0,c
 13368  012C80  D01C               	goto	l6060
 13369  012C82  0E01               	movlw	1
 13370  012C84  6E40               	movwf	(btemp+11)^0,c
 13371                           
 13372                           ;stkvar	_b @ sp[(-4)+-4]
 13373  012C86  50E1               	movf	fsr1l,w,c
 13374  012C88  0FF8               	addlw	-8
 13375  012C8A  6ED9               	movwf	fsr2l,c
 13376  012C8C  50E2               	movf	fsr1h,w,c
 13377  012C8E  6EDA               	movwf	fsr2h,c
 13378  012C90  0EFF               	movlw	255
 13379  012C92  22DA               	addwfc	fsr2h,f,c
 13380  012C94  2840               	incf	(btemp+11)^0,w,c
 13381  012C96  52DE               	movf	postinc2,f,c
 13382  012C98  D008               	goto	u4600
 13383  012C9A                     u4605:
 13384  012C9A  52DE               	movf	postinc2,f,c
 13385  012C9C  90D8               	bcf	status,0,c
 13386  012C9E  BEDC               	btfsc	preinc2,7,c
 13387  012CA0  80D8               	bsf	status,0,c
 13388  012CA2  32DD               	rrcf	postdec2,f,c
 13389  012CA4  32DD               	rrcf	postdec2,f,c
 13390  012CA6  32DD               	rrcf	postdec2,f,c
 13391  012CA8  32DE               	rrcf	postinc2,f,c
 13392  012CAA                     u4600:
 13393  012CAA  2EE8               	decfsz	wreg,f,c
 13394  012CAC  D7F6               	goto	u4605
 13395                           
 13396                           ;stkvar	_bexp @ sp[(-4)+1]
 13397  012CAE  0EFD               	movlw	-3
 13398  012CB0  28E3               	incf	plusw1,w,c
 13399  012CB2  B4D8               	btfsc	status,2,c
 13400  012CB4  D002               	goto	l6060
 13401                           
 13402                           ;stkvar	_bexp @ sp[(-4)+1]
 13403  012CB6  0EFD               	movlw	-3
 13404  012CB8  2AE3               	incf	plusw1,f,c
 13405  012CBA                     l6060:
 13406                           
 13407                           ;stkvar	_bexp @ sp[(-4)+1]
 13408  012CBA  0EFD               	movlw	-3
 13409  012CBC  28E3               	incf	plusw1,w,c
 13410  012CBE  B4D8               	btfsc	status,2,c
 13411  012CC0  D004               	goto	u4630
 13412                           
 13413                           ;stkvar	_bexp @ sp[(-4)+1]
 13414  012CC2  0EFD               	movlw	-3
 13415  012CC4  50E3               	movf	plusw1,w,c
 13416  012CC6  A4D8               	btfss	status,2,c
 13417  012CC8  D00E               	goto	l6070
 13418  012CCA                     u4630:
 13419                           
 13420                           ;stkvar	_b @ sp[(-4)+-4]
 13421  012CCA  0EF8               	movlw	-8
 13422  012CCC  6AE3               	clrf	plusw1,c
 13423  012CCE  0EF9               	movlw	-7
 13424  012CD0  6AE3               	clrf	plusw1,c
 13425  012CD2  0EFA               	movlw	-6
 13426  012CD4  6AE3               	clrf	plusw1,c
 13427  012CD6  0EFB               	movlw	-5
 13428  012CD8  6AE3               	clrf	plusw1,c
 13429                           
 13430                           ;stkvar	_bexp @ sp[(-4)+1]
 13431  012CDA  0EFD               	movlw	-3
 13432  012CDC  50E3               	movf	plusw1,w,c
 13433  012CDE  A4D8               	btfss	status,2,c
 13434  012CE0  D002               	goto	l6070
 13435                           
 13436                           ;stkvar	_signs @ sp[(-4)+3]
 13437  012CE2  0EFF               	movlw	-1
 13438  012CE4  6AE3               	clrf	plusw1,c
 13439  012CE6                     l6070:
 13440                           
 13441                           ;stkvar	_bexp @ sp[(-4)+1]
 13442  012CE6  0EFD               	movlw	-3
 13443  012CE8  A0E3               	btfss	plusw1,0,c
 13444  012CEA  D009               	goto	l6074
 13445                           
 13446                           ;stkvar	_b @ sp[(-4)+-4]
 13447  012CEC  0EFA               	movlw	250
 13448  012CEE  24E1               	addwf	fsr1l,w,c
 13449  012CF0  6ED9               	movwf	fsr2l,c
 13450  012CF2  0EFF               	movlw	255
 13451  012CF4  20E2               	addwfc	fsr1h,w,c
 13452  012CF6  6EDA               	movwf	fsr2h,c
 13453  012CF8  0E00               	movlw	0
 13454  012CFA  8EDB               	bsf	plusw2,7,c
 13455  012CFC  D008               	goto	l6076
 13456  012CFE                     l6074:
 13457                           
 13458                           ;stkvar	_b @ sp[(-4)+-4]
 13459  012CFE  0EFA               	movlw	250
 13460  012D00  24E1               	addwf	fsr1l,w,c
 13461  012D02  6ED9               	movwf	fsr2l,c
 13462  012D04  0EFF               	movlw	255
 13463  012D06  20E2               	addwfc	fsr1h,w,c
 13464  012D08  6EDA               	movwf	fsr2h,c
 13465  012D0A  0E7F               	movlw	127
 13466  012D0C  16DF               	andwf	indf2,f,c
 13467  012D0E                     l6076:
 13468                           
 13469                           ;stkvar	_b @ sp[(-4)+-4]
 13470  012D0E  0EFB               	movlw	251
 13471  012D10  24E1               	addwf	fsr1l,w,c
 13472  012D12  6ED9               	movwf	fsr2l,c
 13473  012D14  0EFF               	movlw	255
 13474  012D16  20E2               	addwfc	fsr1h,w,c
 13475  012D18  6EDA               	movwf	fsr2h,c
 13476                           
 13477                           ;stkvar	_bexp @ sp[(-4)+1]
 13478  012D1A  0EFD               	movlw	-3
 13479  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 13480  012D22  90D8               	bcf	status,0,c
 13481  012D24  3040               	rrcf	(btemp+11)^0,w,c
 13482  012D26  6EDF               	movwf	indf2,c
 13483                           
 13484                           ;stkvar	_signs @ sp[(-4)+3]
 13485  012D28  0EFF               	movlw	-1
 13486  012D2A  AEE3               	btfss	plusw1,7,c
 13487  012D2C  D008               	goto	l6082
 13488                           
 13489                           ;stkvar	_b @ sp[(-4)+-4]
 13490  012D2E  0EFB               	movlw	251
 13491  012D30  24E1               	addwf	fsr1l,w,c
 13492  012D32  6ED9               	movwf	fsr2l,c
 13493  012D34  0EFF               	movlw	255
 13494  012D36  20E2               	addwfc	fsr1h,w,c
 13495  012D38  6EDA               	movwf	fsr2h,c
 13496  012D3A  0E00               	movlw	0
 13497  012D3C  8EDB               	bsf	plusw2,7,c
 13498  012D3E                     l6082:
 13499                           
 13500                           ;stkvar	_b @ sp[(-4)+-4]
 13501  012D3E  0EF8               	movlw	-8
 13502  012D40  006F FF8C  F035    	movff	plusw1,btemp
 13503  012D46  0EF9               	movlw	-7
 13504  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 13505  012D4E  0EFA               	movlw	-6
 13506  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 13507  012D56  0EFB               	movlw	-5
 13508  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 13509  012D5E                     l2485:
 13510                           
 13511                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13512  012D5E  0EF4               	movlw	244
 13513  012D60  26E1               	addwf	fsr1l,f,c
 13514  012D62  0EFF               	movlw	255
 13515  012D64  22E2               	addwfc	fsr1h,f,c
 13516  012D66  0012               	return		;funcret
 13517  012D68                     __end_of___fladd:
 13518                           	opt callstack 0
 13519                           
 13520 ;; *************** function ___flneg *****************
 13521 ;; Defined at:
 13522 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  f1              4  [STACK] unsigned char 
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;		None
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  4  [STACK] unsigned char 
 13529 ;; Registers used:
 13530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/4
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13540 ;;Total ram usage:        0 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:    6
 13543 ;; This function calls:
 13544 ;;		Nothing
 13545 ;; This function is called by:
 13546 ;;		_efgtoa
 13547 ;; This function uses a reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text47
 13551  017238                     __ptext47:
 13552                           	opt callstack 0
 13553  017238                     ___flneg:
 13554                           	opt callstack 17
 13555                           
 13556                           ;stkvar	_f1 @ sp[(0)+-4]
 13557                           
 13558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13559                           ;incstack = 0
 13560  017238  0EFC               	movlw	-4
 13561  01723A  50E3               	movf	plusw1,w,c
 13562  01723C  E10A               	bnz	u5940
 13563  01723E  0EFD               	movlw	-3
 13564  017240  50E3               	movf	plusw1,w,c
 13565  017242  E107               	bnz	u5940
 13566  017244  0EFE               	movlw	-2
 13567  017246  50E3               	movf	plusw1,w,c
 13568  017248  E104               	bnz	u5940
 13569  01724A  0EFF               	movlw	-1
 13570  01724C  50E3               	movf	plusw1,w,c
 13571  01724E  B4D8               	btfsc	status,2,c
 13572  017250  D002               	goto	l6750
 13573  017252                     u5940:
 13574                           
 13575                           ;stkvar	_f1 @ sp[(0)+-4]
 13576  017252  0EFF               	movlw	-1
 13577  017254  7EE3               	btg	plusw1,7,c
 13578  017256                     l6750:
 13579                           
 13580                           ;stkvar	_f1 @ sp[(0)+-4]
 13581  017256  0EFC               	movlw	-4
 13582  017258  006F FF8C  F035    	movff	plusw1,btemp
 13583  01725E  0EFD               	movlw	-3
 13584  017260  006F FF8C  F036    	movff	plusw1,btemp+1
 13585  017266  0EFE               	movlw	-2
 13586  017268  006F FF8C  F037    	movff	plusw1,btemp+2
 13587  01726E  0EFF               	movlw	-1
 13588  017270  006F FF8C  F038    	movff	plusw1,btemp+3
 13589                           
 13590                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13591  017276  52E5               	movf	postdec1,f,c
 13592  017278  52E5               	movf	postdec1,f,c
 13593  01727A  52E5               	movf	postdec1,f,c
 13594  01727C  52E5               	movf	postdec1,f,c
 13595  01727E  0012               	return		;funcret
 13596  017280                     __end_of___flneg:
 13597                           	opt callstack 0
 13598                           
 13599 ;; *************** function ___flmul *****************
 13600 ;; Defined at:
 13601 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 13602 ;; Parameters:    Size  Location     Type
 13603 ;;  b               4  [STACK] unsigned char 
 13604 ;;  a               4  [STACK] unsigned char 
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;  prod            4  [STACK] struct .
 13607 ;;  grs             4  [STACK] unsigned long 
 13608 ;;  temp            2  [STACK] struct .
 13609 ;;  bexp            1  [STACK] unsigned char 
 13610 ;;  aexp            1  [STACK] unsigned char 
 13611 ;;  sign            1  [STACK] unsigned char 
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  4  [STACK] unsigned char 
 13614 ;; Registers used:
 13615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/4
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13625 ;;Total ram usage:        0 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:    6
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_conv_raw_result
 13632 ;;		_efgtoa
 13633 ;; This function uses a reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text48
 13637  011D82                     __ptext48:
 13638                           	opt callstack 0
 13639  011D82                     ___flmul:
 13640                           	opt callstack 0
 13641                           
 13642                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13643  011D82  0E0D               	movlw	13
 13644  011D84  26E1               	addwf	fsr1l,f,c
 13645  011D86  0E00               	movlw	0
 13646  011D88  22E2               	addwfc	fsr1h,f,c
 13647                           
 13648                           ;stkvar	_b @ sp[(-13)+-4]
 13649                           
 13650                           ;incstack = 0
 13651  011D8A  0EF2               	movlw	242
 13652  011D8C  24E1               	addwf	fsr1l,w,c
 13653  011D8E  6ED9               	movwf	fsr2l,c
 13654  011D90  0EFF               	movlw	255
 13655  011D92  20E2               	addwfc	fsr1h,w,c
 13656  011D94  6EDA               	movwf	fsr2h,c
 13657  011D96  50DF               	movf	indf2,w,c
 13658  011D98  6E40               	movwf	(btemp+11)^0,c
 13659  011D9A  0E80               	movlw	128
 13660  011D9C  1640               	andwf	(btemp+11)^0,f,c
 13661                           
 13662                           ;stkvar	_sign @ sp[(-13)+12]
 13663  011D9E  0EFF               	movlw	-1
 13664  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13665                           
 13666                           ;stkvar	_b @ sp[(-13)+-4]
 13667  011DA6  0EF2               	movlw	242
 13668  011DA8  24E1               	addwf	fsr1l,w,c
 13669  011DAA  6ED9               	movwf	fsr2l,c
 13670  011DAC  0EFF               	movlw	255
 13671  011DAE  20E2               	addwfc	fsr1h,w,c
 13672  011DB0  6EDA               	movwf	fsr2h,c
 13673  011DB2  50DF               	movf	indf2,w,c
 13674  011DB4  6E40               	movwf	(btemp+11)^0,c
 13675  011DB6  90D8               	bcf	status,0,c
 13676  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 13677  011DBA  6E3F               	movwf	(btemp+10)^0,c
 13678                           
 13679                           ;stkvar	_bexp @ sp[(-13)+10]
 13680  011DBC  0EFD               	movlw	-3
 13681  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13682                           
 13683                           ;stkvar	_b @ sp[(-13)+-4]
 13684  011DC4  0EF1               	movlw	241
 13685  011DC6  24E1               	addwf	fsr1l,w,c
 13686  011DC8  6ED9               	movwf	fsr2l,c
 13687  011DCA  0EFF               	movlw	255
 13688  011DCC  20E2               	addwfc	fsr1h,w,c
 13689  011DCE  6EDA               	movwf	fsr2h,c
 13690  011DD0  AEDF               	btfss	indf2,7,c
 13691  011DD2  D002               	goto	l6466
 13692                           
 13693                           ;stkvar	_bexp @ sp[(-13)+10]
 13694  011DD4  0EFD               	movlw	-3
 13695  011DD6  80E3               	bsf	plusw1,0,c
 13696  011DD8                     l6466:
 13697                           
 13698                           ;stkvar	_bexp @ sp[(-13)+10]
 13699  011DD8  0EFD               	movlw	-3
 13700  011DDA  50E3               	movf	plusw1,w,c
 13701  011DDC  B4D8               	btfsc	status,2,c
 13702  011DDE  D01F               	goto	l6474
 13703                           
 13704                           ;stkvar	_bexp @ sp[(-13)+10]
 13705  011DE0  0EFD               	movlw	-3
 13706  011DE2  28E3               	incf	plusw1,w,c
 13707  011DE4  A4D8               	btfss	status,2,c
 13708  011DE6  D018               	goto	l6472
 13709  011DE8  0E00               	movlw	0
 13710  011DEA  6E3D               	movwf	(btemp+8)^0,c
 13711  011DEC  0E00               	movlw	0
 13712  011DEE  6E3E               	movwf	(btemp+9)^0,c
 13713  011DF0  0E00               	movlw	0
 13714  011DF2  6E3F               	movwf	(btemp+10)^0,c
 13715  011DF4  0E00               	movlw	0
 13716  011DF6  6E40               	movwf	(btemp+11)^0,c
 13717                           
 13718                           ;stkvar	_b @ sp[(-13)+-4]
 13719  011DF8  0EEF               	movlw	-17
 13720  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13721  011E00  0EF0               	movlw	-16
 13722  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13723  011E08  0EF1               	movlw	-15
 13724  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13725  011E10  0EF2               	movlw	-14
 13726  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 13727  011E18                     l6472:
 13728                           
 13729                           ;stkvar	_b @ sp[(-13)+-4]
 13730  011E18  0EF1               	movlw	-15
 13731  011E1A  8EE3               	bsf	plusw1,7,c
 13732  011E1C  D018               	goto	l6476
 13733  011E1E                     l6474:
 13734  011E1E  0E00               	movlw	0
 13735  011E20  6E3D               	movwf	(btemp+8)^0,c
 13736  011E22  0E00               	movlw	0
 13737  011E24  6E3E               	movwf	(btemp+9)^0,c
 13738  011E26  0E00               	movlw	0
 13739  011E28  6E3F               	movwf	(btemp+10)^0,c
 13740  011E2A  0E00               	movlw	0
 13741  011E2C  6E40               	movwf	(btemp+11)^0,c
 13742                           
 13743                           ;stkvar	_b @ sp[(-13)+-4]
 13744  011E2E  0EEF               	movlw	-17
 13745  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13746  011E36  0EF0               	movlw	-16
 13747  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13748  011E3E  0EF1               	movlw	-15
 13749  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13750  011E46  0EF2               	movlw	-14
 13751  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 13752  011E4E                     l6476:
 13753                           
 13754                           ;stkvar	_a @ sp[(-13)+-8]
 13755  011E4E  0EEE               	movlw	238
 13756  011E50  24E1               	addwf	fsr1l,w,c
 13757  011E52  6ED9               	movwf	fsr2l,c
 13758  011E54  0EFF               	movlw	255
 13759  011E56  20E2               	addwfc	fsr1h,w,c
 13760  011E58  6EDA               	movwf	fsr2h,c
 13761  011E5A  50DF               	movf	indf2,w,c
 13762  011E5C  6E40               	movwf	(btemp+11)^0,c
 13763  011E5E  0E80               	movlw	128
 13764  011E60  1640               	andwf	(btemp+11)^0,f,c
 13765                           
 13766                           ;stkvar	_sign @ sp[(-13)+12]
 13767  011E62  50E1               	movf	fsr1l,w,c
 13768  011E64  0FFF               	addlw	-1
 13769  011E66  6ED9               	movwf	fsr2l,c
 13770  011E68  50E2               	movf	fsr1h,w,c
 13771  011E6A  6EDA               	movwf	fsr2h,c
 13772  011E6C  0EFF               	movlw	255
 13773  011E6E  22DA               	addwfc	fsr2h,f,c
 13774  011E70  5040               	movf	(btemp+11)^0,w,c
 13775  011E72  1ADF               	xorwf	indf2,f,c
 13776                           
 13777                           ;stkvar	_a @ sp[(-13)+-8]
 13778  011E74  0EEE               	movlw	238
 13779  011E76  24E1               	addwf	fsr1l,w,c
 13780  011E78  6ED9               	movwf	fsr2l,c
 13781  011E7A  0EFF               	movlw	255
 13782  011E7C  20E2               	addwfc	fsr1h,w,c
 13783  011E7E  6EDA               	movwf	fsr2h,c
 13784  011E80  50DF               	movf	indf2,w,c
 13785  011E82  6E40               	movwf	(btemp+11)^0,c
 13786  011E84  90D8               	bcf	status,0,c
 13787  011E86  3440               	rlcf	(btemp+11)^0,w,c
 13788  011E88  6E3F               	movwf	(btemp+10)^0,c
 13789                           
 13790                           ;stkvar	_aexp @ sp[(-13)+11]
 13791  011E8A  0EFE               	movlw	-2
 13792  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13793                           
 13794                           ;stkvar	_a @ sp[(-13)+-8]
 13795  011E92  0EED               	movlw	237
 13796  011E94  24E1               	addwf	fsr1l,w,c
 13797  011E96  6ED9               	movwf	fsr2l,c
 13798  011E98  0EFF               	movlw	255
 13799  011E9A  20E2               	addwfc	fsr1h,w,c
 13800  011E9C  6EDA               	movwf	fsr2h,c
 13801  011E9E  AEDF               	btfss	indf2,7,c
 13802  011EA0  D002               	goto	l6484
 13803                           
 13804                           ;stkvar	_aexp @ sp[(-13)+11]
 13805  011EA2  0EFE               	movlw	-2
 13806  011EA4  80E3               	bsf	plusw1,0,c
 13807  011EA6                     l6484:
 13808                           
 13809                           ;stkvar	_aexp @ sp[(-13)+11]
 13810  011EA6  0EFE               	movlw	-2
 13811  011EA8  50E3               	movf	plusw1,w,c
 13812  011EAA  B4D8               	btfsc	status,2,c
 13813  011EAC  D01F               	goto	l6492
 13814                           
 13815                           ;stkvar	_aexp @ sp[(-13)+11]
 13816  011EAE  0EFE               	movlw	-2
 13817  011EB0  28E3               	incf	plusw1,w,c
 13818  011EB2  A4D8               	btfss	status,2,c
 13819  011EB4  D018               	goto	l6490
 13820  011EB6  0E00               	movlw	0
 13821  011EB8  6E3D               	movwf	(btemp+8)^0,c
 13822  011EBA  0E00               	movlw	0
 13823  011EBC  6E3E               	movwf	(btemp+9)^0,c
 13824  011EBE  0E00               	movlw	0
 13825  011EC0  6E3F               	movwf	(btemp+10)^0,c
 13826  011EC2  0E00               	movlw	0
 13827  011EC4  6E40               	movwf	(btemp+11)^0,c
 13828                           
 13829                           ;stkvar	_a @ sp[(-13)+-8]
 13830  011EC6  0EEB               	movlw	-21
 13831  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13832  011ECE  0EEC               	movlw	-20
 13833  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13834  011ED6  0EED               	movlw	-19
 13835  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13836  011EDE  0EEE               	movlw	-18
 13837  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13838  011EE6                     l6490:
 13839                           
 13840                           ;stkvar	_a @ sp[(-13)+-8]
 13841  011EE6  0EED               	movlw	-19
 13842  011EE8  8EE3               	bsf	plusw1,7,c
 13843  011EEA  D018               	goto	l6494
 13844  011EEC                     l6492:
 13845  011EEC  0E00               	movlw	0
 13846  011EEE  6E3D               	movwf	(btemp+8)^0,c
 13847  011EF0  0E00               	movlw	0
 13848  011EF2  6E3E               	movwf	(btemp+9)^0,c
 13849  011EF4  0E00               	movlw	0
 13850  011EF6  6E3F               	movwf	(btemp+10)^0,c
 13851  011EF8  0E00               	movlw	0
 13852  011EFA  6E40               	movwf	(btemp+11)^0,c
 13853                           
 13854                           ;stkvar	_a @ sp[(-13)+-8]
 13855  011EFC  0EEB               	movlw	-21
 13856  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13857  011F04  0EEC               	movlw	-20
 13858  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13859  011F0C  0EED               	movlw	-19
 13860  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13861  011F14  0EEE               	movlw	-18
 13862  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 13863  011F1C                     l6494:
 13864                           
 13865                           ;stkvar	_aexp @ sp[(-13)+11]
 13866  011F1C  0EFE               	movlw	-2
 13867  011F1E  50E3               	movf	plusw1,w,c
 13868  011F20  B4D8               	btfsc	status,2,c
 13869  011F22  D004               	goto	u5570
 13870                           
 13871                           ;stkvar	_bexp @ sp[(-13)+10]
 13872  011F24  0EFD               	movlw	-3
 13873  011F26  50E3               	movf	plusw1,w,c
 13874  011F28  A4D8               	btfss	status,2,c
 13875  011F2A  D009               	goto	l6502
 13876  011F2C                     u5570:
 13877  011F2C  0E00               	movlw	0
 13878  011F2E  6E35               	movwf	btemp^0,c
 13879  011F30  0E00               	movlw	0
 13880  011F32  6E36               	movwf	(btemp+1)^0,c
 13881  011F34  0E00               	movlw	0
 13882  011F36  6E37               	movwf	(btemp+2)^0,c
 13883  011F38  0E00               	movlw	0
 13884  011F3A  6E38               	movwf	(btemp+3)^0,c
 13885  011F3C  D332               	goto	l2566
 13886  011F3E                     l6502:
 13887                           
 13888                           ;stkvar	_b @ sp[(-13)+-4]
 13889  011F3E  0EEF               	movlw	-17
 13890  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 13891                           
 13892                           ;stkvar	_a @ sp[(-13)+-8]
 13893  011F46  0EED               	movlw	237
 13894  011F48  24E1               	addwf	fsr1l,w,c
 13895  011F4A  6ED9               	movwf	fsr2l,c
 13896  011F4C  0EFF               	movlw	255
 13897  011F4E  20E2               	addwfc	fsr1h,w,c
 13898  011F50  6EDA               	movwf	fsr2h,c
 13899  011F52  50DF               	movf	indf2,w,c
 13900  011F54  0240               	mulwf	(btemp+11)^0,c
 13901                           
 13902                           ;stkvar	_temp @ sp[(-13)+8]
 13903  011F56  0EFB               	movlw	-5
 13904  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 13905  011F5E  0EFC               	movlw	-4
 13906  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 13907                           
 13908                           ;stkvar	_temp @ sp[(-13)+8]
 13909  011F66  0EFB               	movlw	-5
 13910  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 13911  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 13912  011F74  6A3A               	clrf	(btemp+5)^0,c
 13913  011F76  6A3B               	clrf	(btemp+6)^0,c
 13914  011F78  6A3C               	clrf	(btemp+7)^0,c
 13915                           
 13916                           ;stkvar	_grs @ sp[(-13)+4]
 13917  011F7A  0EF7               	movlw	-9
 13918  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13919  011F82  0EF8               	movlw	-8
 13920  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13921  011F8A  0EF9               	movlw	-7
 13922  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13923  011F92  0EFA               	movlw	-6
 13924  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13925                           
 13926                           ;stkvar	_temp @ sp[(-13)+8]
 13927  011F9A  0EFC               	movlw	252
 13928  011F9C  24E1               	addwf	fsr1l,w,c
 13929  011F9E  6ED9               	movwf	fsr2l,c
 13930  011FA0  0EFF               	movlw	255
 13931  011FA2  20E2               	addwfc	fsr1h,w,c
 13932  011FA4  6EDA               	movwf	fsr2h,c
 13933  011FA6  50DF               	movf	indf2,w,c
 13934  011FA8  6E40               	movwf	(btemp+11)^0,c
 13935  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 13936  011FB0  6A3A               	clrf	(btemp+5)^0,c
 13937  011FB2  6A3B               	clrf	(btemp+6)^0,c
 13938  011FB4  6A3C               	clrf	(btemp+7)^0,c
 13939                           
 13940                           ;stkvar	_prod @ sp[(-13)+0]
 13941  011FB6  0EF3               	movlw	-13
 13942  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13943  011FBE  0EF4               	movlw	-12
 13944  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13945  011FC6  0EF5               	movlw	-11
 13946  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13947  011FCE  0EF6               	movlw	-10
 13948  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13949                           
 13950                           ;stkvar	_b @ sp[(-13)+-4]
 13951  011FD6  0EF0               	movlw	240
 13952  011FD8  24E1               	addwf	fsr1l,w,c
 13953  011FDA  6ED9               	movwf	fsr2l,c
 13954  011FDC  0EFF               	movlw	255
 13955  011FDE  20E2               	addwfc	fsr1h,w,c
 13956  011FE0  6EDA               	movwf	fsr2h,c
 13957  011FE2  50DF               	movf	indf2,w,c
 13958  011FE4  6E40               	movwf	(btemp+11)^0,c
 13959                           
 13960                           ;stkvar	_a @ sp[(-13)+-8]
 13961  011FE6  0EEC               	movlw	236
 13962  011FE8  24E1               	addwf	fsr1l,w,c
 13963  011FEA  6ED9               	movwf	fsr2l,c
 13964  011FEC  0EFF               	movlw	255
 13965  011FEE  20E2               	addwfc	fsr1h,w,c
 13966  011FF0  6EDA               	movwf	fsr2h,c
 13967  011FF2  50DF               	movf	indf2,w,c
 13968  011FF4  0240               	mulwf	(btemp+11)^0,c
 13969                           
 13970                           ;stkvar	_temp @ sp[(-13)+8]
 13971  011FF6  0EFB               	movlw	-5
 13972  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 13973  011FFE  0EFC               	movlw	-4
 13974  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 13975                           
 13976                           ;stkvar	_grs @ sp[(-13)+4]
 13977  012006  50E1               	movf	fsr1l,w,c
 13978  012008  0FF7               	addlw	-9
 13979  01200A  6ED9               	movwf	fsr2l,c
 13980  01200C  50E2               	movf	fsr1h,w,c
 13981  01200E  6EDA               	movwf	fsr2h,c
 13982  012010  0EFF               	movlw	255
 13983  012012  22DA               	addwfc	fsr2h,f,c
 13984                           
 13985                           ;stkvar	_temp @ sp[(-13)+8]
 13986  012014  0EFB               	movlw	-5
 13987  012016  50E3               	movf	plusw1,w,c
 13988  012018  26DE               	addwf	postinc2,f,c
 13989  01201A  0E00               	movlw	0
 13990  01201C  22DE               	addwfc	postinc2,f,c
 13991  01201E  22DE               	addwfc	postinc2,f,c
 13992  012020  22DE               	addwfc	postinc2,f,c
 13993                           
 13994                           ;stkvar	_prod @ sp[(-13)+0]
 13995  012022  50E1               	movf	fsr1l,w,c
 13996  012024  0FF3               	addlw	-13
 13997  012026  6ED9               	movwf	fsr2l,c
 13998  012028  50E2               	movf	fsr1h,w,c
 13999  01202A  6EDA               	movwf	fsr2h,c
 14000  01202C  0EFF               	movlw	255
 14001  01202E  22DA               	addwfc	fsr2h,f,c
 14002                           
 14003                           ;stkvar	_temp @ sp[(-13)+8]
 14004  012030  0EFC               	movlw	252
 14005  012032  24E1               	addwf	fsr1l,w,c
 14006  012034  6EE9               	movwf	fsr0l,c
 14007  012036  0EFF               	movlw	255
 14008  012038  20E2               	addwfc	fsr1h,w,c
 14009  01203A  6EEA               	movwf	fsr0h,c
 14010  01203C  50EF               	movf	indf0,w,c
 14011  01203E  26DE               	addwf	postinc2,f,c
 14012  012040  0E00               	movlw	0
 14013  012042  22DE               	addwfc	postinc2,f,c
 14014  012044  22DE               	addwfc	postinc2,f,c
 14015  012046  22DE               	addwfc	postinc2,f,c
 14016                           
 14017                           ;stkvar	_b @ sp[(-13)+-4]
 14018  012048  0EF1               	movlw	241
 14019  01204A  24E1               	addwf	fsr1l,w,c
 14020  01204C  6ED9               	movwf	fsr2l,c
 14021  01204E  0EFF               	movlw	255
 14022  012050  20E2               	addwfc	fsr1h,w,c
 14023  012052  6EDA               	movwf	fsr2h,c
 14024  012054  50DF               	movf	indf2,w,c
 14025  012056  6E40               	movwf	(btemp+11)^0,c
 14026                           
 14027                           ;stkvar	_a @ sp[(-13)+-8]
 14028  012058  0EEB               	movlw	-21
 14029  01205A  50E3               	movf	plusw1,w,c
 14030  01205C  0240               	mulwf	(btemp+11)^0,c
 14031                           
 14032                           ;stkvar	_temp @ sp[(-13)+8]
 14033  01205E  0EFB               	movlw	-5
 14034  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14035  012066  0EFC               	movlw	-4
 14036  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14037                           
 14038                           ;stkvar	_grs @ sp[(-13)+4]
 14039  01206E  50E1               	movf	fsr1l,w,c
 14040  012070  0FF7               	addlw	-9
 14041  012072  6ED9               	movwf	fsr2l,c
 14042  012074  50E2               	movf	fsr1h,w,c
 14043  012076  6EDA               	movwf	fsr2h,c
 14044  012078  0EFF               	movlw	255
 14045  01207A  22DA               	addwfc	fsr2h,f,c
 14046                           
 14047                           ;stkvar	_temp @ sp[(-13)+8]
 14048  01207C  0EFB               	movlw	-5
 14049  01207E  50E3               	movf	plusw1,w,c
 14050  012080  26DE               	addwf	postinc2,f,c
 14051  012082  0E00               	movlw	0
 14052  012084  22DE               	addwfc	postinc2,f,c
 14053  012086  22DE               	addwfc	postinc2,f,c
 14054  012088  22DE               	addwfc	postinc2,f,c
 14055                           
 14056                           ;stkvar	_prod @ sp[(-13)+0]
 14057  01208A  50E1               	movf	fsr1l,w,c
 14058  01208C  0FF3               	addlw	-13
 14059  01208E  6ED9               	movwf	fsr2l,c
 14060  012090  50E2               	movf	fsr1h,w,c
 14061  012092  6EDA               	movwf	fsr2h,c
 14062  012094  0EFF               	movlw	255
 14063  012096  22DA               	addwfc	fsr2h,f,c
 14064                           
 14065                           ;stkvar	_temp @ sp[(-13)+8]
 14066  012098  0EFC               	movlw	252
 14067  01209A  24E1               	addwf	fsr1l,w,c
 14068  01209C  6EE9               	movwf	fsr0l,c
 14069  01209E  0EFF               	movlw	255
 14070  0120A0  20E2               	addwfc	fsr1h,w,c
 14071  0120A2  6EEA               	movwf	fsr0h,c
 14072  0120A4  50EF               	movf	indf0,w,c
 14073  0120A6  26DE               	addwf	postinc2,f,c
 14074  0120A8  0E00               	movlw	0
 14075  0120AA  22DE               	addwfc	postinc2,f,c
 14076  0120AC  22DE               	addwfc	postinc2,f,c
 14077  0120AE  22DE               	addwfc	postinc2,f,c
 14078                           
 14079                           ;stkvar	_grs @ sp[(-13)+4]
 14080  0120B0  50E1               	movf	fsr1l,w,c
 14081  0120B2  0FF7               	addlw	-9
 14082  0120B4  6ED9               	movwf	fsr2l,c
 14083  0120B6  50E2               	movf	fsr1h,w,c
 14084  0120B8  6EDA               	movwf	fsr2h,c
 14085  0120BA  0EFF               	movlw	255
 14086  0120BC  22DA               	addwfc	fsr2h,f,c
 14087  0120BE  0E08               	movlw	8
 14088  0120C0                     u5585:
 14089  0120C0  90D8               	bcf	status,0,c
 14090  0120C2  36DE               	rlcf	postinc2,f,c
 14091  0120C4  36DE               	rlcf	postinc2,f,c
 14092  0120C6  36DE               	rlcf	postinc2,f,c
 14093  0120C8  36DD               	rlcf	postdec2,f,c
 14094  0120CA  52DD               	movf	postdec2,f,c
 14095  0120CC  52DD               	movf	postdec2,f,c
 14096  0120CE  2EE8               	decfsz	wreg,f,c
 14097  0120D0  D7F7               	goto	u5585
 14098                           
 14099                           ;stkvar	_b @ sp[(-13)+-4]
 14100  0120D2  0EF0               	movlw	240
 14101  0120D4  24E1               	addwf	fsr1l,w,c
 14102  0120D6  6ED9               	movwf	fsr2l,c
 14103  0120D8  0EFF               	movlw	255
 14104  0120DA  20E2               	addwfc	fsr1h,w,c
 14105  0120DC  6EDA               	movwf	fsr2h,c
 14106  0120DE  50DF               	movf	indf2,w,c
 14107  0120E0  6E40               	movwf	(btemp+11)^0,c
 14108                           
 14109                           ;stkvar	_a @ sp[(-13)+-8]
 14110  0120E2  0EEB               	movlw	-21
 14111  0120E4  50E3               	movf	plusw1,w,c
 14112  0120E6  0240               	mulwf	(btemp+11)^0,c
 14113                           
 14114                           ;stkvar	_temp @ sp[(-13)+8]
 14115  0120E8  0EFB               	movlw	-5
 14116  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14117  0120F0  0EFC               	movlw	-4
 14118  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14119                           
 14120                           ;stkvar	_temp @ sp[(-13)+8]
 14121  0120F8  0EFB               	movlw	-5
 14122  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14123  012100  0EFC               	movlw	-4
 14124  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14125                           
 14126                           ;stkvar	_grs @ sp[(-13)+4]
 14127  012108  50E1               	movf	fsr1l,w,c
 14128  01210A  0FF7               	addlw	-9
 14129  01210C  6ED9               	movwf	fsr2l,c
 14130  01210E  50E2               	movf	fsr1h,w,c
 14131  012110  6EDA               	movwf	fsr2h,c
 14132  012112  0EFF               	movlw	255
 14133  012114  22DA               	addwfc	fsr2h,f,c
 14134  012116  503F               	movf	(btemp+10)^0,w,c
 14135  012118  26DE               	addwf	postinc2,f,c
 14136  01211A  5040               	movf	(btemp+11)^0,w,c
 14137  01211C  22DE               	addwfc	postinc2,f,c
 14138  01211E  0E00               	movlw	0
 14139  012120  22DE               	addwfc	postinc2,f,c
 14140  012122  22DE               	addwfc	postinc2,f,c
 14141                           
 14142                           ;stkvar	_b @ sp[(-13)+-4]
 14143  012124  0EEF               	movlw	-17
 14144  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14145                           
 14146                           ;stkvar	_a @ sp[(-13)+-8]
 14147  01212C  0EEC               	movlw	236
 14148  01212E  24E1               	addwf	fsr1l,w,c
 14149  012130  6ED9               	movwf	fsr2l,c
 14150  012132  0EFF               	movlw	255
 14151  012134  20E2               	addwfc	fsr1h,w,c
 14152  012136  6EDA               	movwf	fsr2h,c
 14153  012138  50DF               	movf	indf2,w,c
 14154  01213A  0240               	mulwf	(btemp+11)^0,c
 14155                           
 14156                           ;stkvar	_temp @ sp[(-13)+8]
 14157  01213C  0EFB               	movlw	-5
 14158  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14159  012144  0EFC               	movlw	-4
 14160  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14161                           
 14162                           ;stkvar	_temp @ sp[(-13)+8]
 14163  01214C  0EFB               	movlw	-5
 14164  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14165  012154  0EFC               	movlw	-4
 14166  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14167                           
 14168                           ;stkvar	_grs @ sp[(-13)+4]
 14169  01215C  50E1               	movf	fsr1l,w,c
 14170  01215E  0FF7               	addlw	-9
 14171  012160  6ED9               	movwf	fsr2l,c
 14172  012162  50E2               	movf	fsr1h,w,c
 14173  012164  6EDA               	movwf	fsr2h,c
 14174  012166  0EFF               	movlw	255
 14175  012168  22DA               	addwfc	fsr2h,f,c
 14176  01216A  503F               	movf	(btemp+10)^0,w,c
 14177  01216C  26DE               	addwf	postinc2,f,c
 14178  01216E  5040               	movf	(btemp+11)^0,w,c
 14179  012170  22DE               	addwfc	postinc2,f,c
 14180  012172  0E00               	movlw	0
 14181  012174  22DE               	addwfc	postinc2,f,c
 14182  012176  22DE               	addwfc	postinc2,f,c
 14183                           
 14184                           ;stkvar	_grs @ sp[(-13)+4]
 14185  012178  50E1               	movf	fsr1l,w,c
 14186  01217A  0FF7               	addlw	-9
 14187  01217C  6ED9               	movwf	fsr2l,c
 14188  01217E  50E2               	movf	fsr1h,w,c
 14189  012180  6EDA               	movwf	fsr2h,c
 14190  012182  0EFF               	movlw	255
 14191  012184  22DA               	addwfc	fsr2h,f,c
 14192  012186  0E08               	movlw	8
 14193  012188                     u5595:
 14194  012188  90D8               	bcf	status,0,c
 14195  01218A  36DE               	rlcf	postinc2,f,c
 14196  01218C  36DE               	rlcf	postinc2,f,c
 14197  01218E  36DE               	rlcf	postinc2,f,c
 14198  012190  36DD               	rlcf	postdec2,f,c
 14199  012192  52DD               	movf	postdec2,f,c
 14200  012194  52DD               	movf	postdec2,f,c
 14201  012196  2EE8               	decfsz	wreg,f,c
 14202  012198  D7F7               	goto	u5595
 14203                           
 14204                           ;stkvar	_b @ sp[(-13)+-4]
 14205  01219A  0EEF               	movlw	-17
 14206  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14207                           
 14208                           ;stkvar	_a @ sp[(-13)+-8]
 14209  0121A2  0EEB               	movlw	-21
 14210  0121A4  50E3               	movf	plusw1,w,c
 14211  0121A6  0240               	mulwf	(btemp+11)^0,c
 14212                           
 14213                           ;stkvar	_temp @ sp[(-13)+8]
 14214  0121A8  0EFB               	movlw	-5
 14215  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14216  0121B0  0EFC               	movlw	-4
 14217  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14218                           
 14219                           ;stkvar	_temp @ sp[(-13)+8]
 14220  0121B8  0EFB               	movlw	-5
 14221  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14222  0121C0  0EFC               	movlw	-4
 14223  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14224                           
 14225                           ;stkvar	_grs @ sp[(-13)+4]
 14226  0121C8  50E1               	movf	fsr1l,w,c
 14227  0121CA  0FF7               	addlw	-9
 14228  0121CC  6ED9               	movwf	fsr2l,c
 14229  0121CE  50E2               	movf	fsr1h,w,c
 14230  0121D0  6EDA               	movwf	fsr2h,c
 14231  0121D2  0EFF               	movlw	255
 14232  0121D4  22DA               	addwfc	fsr2h,f,c
 14233  0121D6  503F               	movf	(btemp+10)^0,w,c
 14234  0121D8  26DE               	addwf	postinc2,f,c
 14235  0121DA  5040               	movf	(btemp+11)^0,w,c
 14236  0121DC  22DE               	addwfc	postinc2,f,c
 14237  0121DE  0E00               	movlw	0
 14238  0121E0  22DE               	addwfc	postinc2,f,c
 14239  0121E2  22DE               	addwfc	postinc2,f,c
 14240                           
 14241                           ;stkvar	_b @ sp[(-13)+-4]
 14242  0121E4  0EF0               	movlw	240
 14243  0121E6  24E1               	addwf	fsr1l,w,c
 14244  0121E8  6ED9               	movwf	fsr2l,c
 14245  0121EA  0EFF               	movlw	255
 14246  0121EC  20E2               	addwfc	fsr1h,w,c
 14247  0121EE  6EDA               	movwf	fsr2h,c
 14248  0121F0  50DF               	movf	indf2,w,c
 14249  0121F2  6E40               	movwf	(btemp+11)^0,c
 14250                           
 14251                           ;stkvar	_a @ sp[(-13)+-8]
 14252  0121F4  0EED               	movlw	237
 14253  0121F6  24E1               	addwf	fsr1l,w,c
 14254  0121F8  6ED9               	movwf	fsr2l,c
 14255  0121FA  0EFF               	movlw	255
 14256  0121FC  20E2               	addwfc	fsr1h,w,c
 14257  0121FE  6EDA               	movwf	fsr2h,c
 14258  012200  50DF               	movf	indf2,w,c
 14259  012202  0240               	mulwf	(btemp+11)^0,c
 14260                           
 14261                           ;stkvar	_temp @ sp[(-13)+8]
 14262  012204  0EFB               	movlw	-5
 14263  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14264  01220C  0EFC               	movlw	-4
 14265  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14266                           
 14267                           ;stkvar	_temp @ sp[(-13)+8]
 14268  012214  0EFB               	movlw	-5
 14269  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14270  01221C  0EFC               	movlw	-4
 14271  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14272                           
 14273                           ;stkvar	_prod @ sp[(-13)+0]
 14274  012224  50E1               	movf	fsr1l,w,c
 14275  012226  0FF3               	addlw	-13
 14276  012228  6ED9               	movwf	fsr2l,c
 14277  01222A  50E2               	movf	fsr1h,w,c
 14278  01222C  6EDA               	movwf	fsr2h,c
 14279  01222E  0EFF               	movlw	255
 14280  012230  22DA               	addwfc	fsr2h,f,c
 14281  012232  503F               	movf	(btemp+10)^0,w,c
 14282  012234  26DE               	addwf	postinc2,f,c
 14283  012236  5040               	movf	(btemp+11)^0,w,c
 14284  012238  22DE               	addwfc	postinc2,f,c
 14285  01223A  0E00               	movlw	0
 14286  01223C  22DE               	addwfc	postinc2,f,c
 14287  01223E  22DE               	addwfc	postinc2,f,c
 14288                           
 14289                           ;stkvar	_b @ sp[(-13)+-4]
 14290  012240  0EF1               	movlw	241
 14291  012242  24E1               	addwf	fsr1l,w,c
 14292  012244  6ED9               	movwf	fsr2l,c
 14293  012246  0EFF               	movlw	255
 14294  012248  20E2               	addwfc	fsr1h,w,c
 14295  01224A  6EDA               	movwf	fsr2h,c
 14296  01224C  50DF               	movf	indf2,w,c
 14297  01224E  6E40               	movwf	(btemp+11)^0,c
 14298                           
 14299                           ;stkvar	_a @ sp[(-13)+-8]
 14300  012250  0EEC               	movlw	236
 14301  012252  24E1               	addwf	fsr1l,w,c
 14302  012254  6ED9               	movwf	fsr2l,c
 14303  012256  0EFF               	movlw	255
 14304  012258  20E2               	addwfc	fsr1h,w,c
 14305  01225A  6EDA               	movwf	fsr2h,c
 14306  01225C  50DF               	movf	indf2,w,c
 14307  01225E  0240               	mulwf	(btemp+11)^0,c
 14308                           
 14309                           ;stkvar	_temp @ sp[(-13)+8]
 14310  012260  0EFB               	movlw	-5
 14311  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14312  012268  0EFC               	movlw	-4
 14313  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14314                           
 14315                           ;stkvar	_temp @ sp[(-13)+8]
 14316  012270  0EFB               	movlw	-5
 14317  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14318  012278  0EFC               	movlw	-4
 14319  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14320                           
 14321                           ;stkvar	_prod @ sp[(-13)+0]
 14322  012280  50E1               	movf	fsr1l,w,c
 14323  012282  0FF3               	addlw	-13
 14324  012284  6ED9               	movwf	fsr2l,c
 14325  012286  50E2               	movf	fsr1h,w,c
 14326  012288  6EDA               	movwf	fsr2h,c
 14327  01228A  0EFF               	movlw	255
 14328  01228C  22DA               	addwfc	fsr2h,f,c
 14329  01228E  503F               	movf	(btemp+10)^0,w,c
 14330  012290  26DE               	addwf	postinc2,f,c
 14331  012292  5040               	movf	(btemp+11)^0,w,c
 14332  012294  22DE               	addwfc	postinc2,f,c
 14333  012296  0E00               	movlw	0
 14334  012298  22DE               	addwfc	postinc2,f,c
 14335  01229A  22DE               	addwfc	postinc2,f,c
 14336                           
 14337                           ;stkvar	_b @ sp[(-13)+-4]
 14338  01229C  0EF1               	movlw	241
 14339  01229E  24E1               	addwf	fsr1l,w,c
 14340  0122A0  6ED9               	movwf	fsr2l,c
 14341  0122A2  0EFF               	movlw	255
 14342  0122A4  20E2               	addwfc	fsr1h,w,c
 14343  0122A6  6EDA               	movwf	fsr2h,c
 14344  0122A8  50DF               	movf	indf2,w,c
 14345  0122AA  6E40               	movwf	(btemp+11)^0,c
 14346                           
 14347                           ;stkvar	_a @ sp[(-13)+-8]
 14348  0122AC  0EED               	movlw	237
 14349  0122AE  24E1               	addwf	fsr1l,w,c
 14350  0122B0  6ED9               	movwf	fsr2l,c
 14351  0122B2  0EFF               	movlw	255
 14352  0122B4  20E2               	addwfc	fsr1h,w,c
 14353  0122B6  6EDA               	movwf	fsr2h,c
 14354  0122B8  50DF               	movf	indf2,w,c
 14355  0122BA  0240               	mulwf	(btemp+11)^0,c
 14356                           
 14357                           ;stkvar	_temp @ sp[(-13)+8]
 14358  0122BC  0EFB               	movlw	-5
 14359  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 14360  0122C4  0EFC               	movlw	-4
 14361  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 14362                           
 14363                           ;stkvar	_temp @ sp[(-13)+8]
 14364  0122CC  0EFB               	movlw	-5
 14365  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 14366  0122D4  0EFC               	movlw	-4
 14367  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 14368  0122DC  503F               	movf	(btemp+10)^0,w,c
 14369  0122DE  6E39               	movwf	(btemp+4)^0,c
 14370  0122E0  5040               	movf	(btemp+11)^0,w,c
 14371  0122E2  6E3A               	movwf	(btemp+5)^0,c
 14372  0122E4  6A3B               	clrf	(btemp+6)^0,c
 14373  0122E6  6A3C               	clrf	(btemp+7)^0,c
 14374  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 14375  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 14376  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 14377  0122FA  6A39               	clrf	(btemp+4)^0,c
 14378                           
 14379                           ;stkvar	_prod @ sp[(-13)+0]
 14380  0122FC  50E1               	movf	fsr1l,w,c
 14381  0122FE  0FF3               	addlw	-13
 14382  012300  6ED9               	movwf	fsr2l,c
 14383  012302  50E2               	movf	fsr1h,w,c
 14384  012304  6EDA               	movwf	fsr2h,c
 14385  012306  0EFF               	movlw	255
 14386  012308  22DA               	addwfc	fsr2h,f,c
 14387  01230A  5039               	movf	(btemp+4)^0,w,c
 14388  01230C  26DE               	addwf	postinc2,f,c
 14389  01230E  503A               	movf	(btemp+5)^0,w,c
 14390  012310  22DE               	addwfc	postinc2,f,c
 14391  012312  503B               	movf	(btemp+6)^0,w,c
 14392  012314  22DE               	addwfc	postinc2,f,c
 14393  012316  503C               	movf	(btemp+7)^0,w,c
 14394  012318  22DE               	addwfc	postinc2,f,c
 14395                           
 14396                           ;stkvar	_prod @ sp[(-13)+0]
 14397  01231A  50E1               	movf	fsr1l,w,c
 14398  01231C  0FF3               	addlw	-13
 14399  01231E  6ED9               	movwf	fsr2l,c
 14400  012320  50E2               	movf	fsr1h,w,c
 14401  012322  6EDA               	movwf	fsr2h,c
 14402  012324  0EFF               	movlw	255
 14403  012326  22DA               	addwfc	fsr2h,f,c
 14404                           
 14405                           ;stkvar	_grs @ sp[(-13)+4]
 14406  012328  0EFA               	movlw	250
 14407  01232A  24E1               	addwf	fsr1l,w,c
 14408  01232C  6EE9               	movwf	fsr0l,c
 14409  01232E  0EFF               	movlw	255
 14410  012330  20E2               	addwfc	fsr1h,w,c
 14411  012332  6EEA               	movwf	fsr0h,c
 14412  012334  50EF               	movf	indf0,w,c
 14413  012336  26DE               	addwf	postinc2,f,c
 14414  012338  0E00               	movlw	0
 14415  01233A  22DE               	addwfc	postinc2,f,c
 14416  01233C  22DE               	addwfc	postinc2,f,c
 14417  01233E  22DE               	addwfc	postinc2,f,c
 14418                           
 14419                           ;stkvar	_grs @ sp[(-13)+4]
 14420  012340  50E1               	movf	fsr1l,w,c
 14421  012342  0FF7               	addlw	-9
 14422  012344  6ED9               	movwf	fsr2l,c
 14423  012346  50E2               	movf	fsr1h,w,c
 14424  012348  6EDA               	movwf	fsr2h,c
 14425  01234A  0EFF               	movlw	255
 14426  01234C  22DA               	addwfc	fsr2h,f,c
 14427  01234E  0E08               	movlw	8
 14428  012350                     u5605:
 14429  012350  90D8               	bcf	status,0,c
 14430  012352  36DE               	rlcf	postinc2,f,c
 14431  012354  36DE               	rlcf	postinc2,f,c
 14432  012356  36DE               	rlcf	postinc2,f,c
 14433  012358  36DD               	rlcf	postdec2,f,c
 14434  01235A  52DD               	movf	postdec2,f,c
 14435  01235C  52DD               	movf	postdec2,f,c
 14436  01235E  2EE8               	decfsz	wreg,f,c
 14437  012360  D7F7               	goto	u5605
 14438  012362  0E82               	movlw	130
 14439  012364  6E3F               	movwf	(btemp+10)^0,c
 14440  012366  0EFF               	movlw	255
 14441  012368  6E40               	movwf	(btemp+11)^0,c
 14442                           
 14443                           ;stkvar	_bexp @ sp[(-13)+10]
 14444  01236A  0EFD               	movlw	-3
 14445  01236C  50E3               	movf	plusw1,w,c
 14446  01236E  6E3D               	movwf	(btemp+8)^0,c
 14447  012370  6A3E               	clrf	(btemp+9)^0,c
 14448                           
 14449                           ;stkvar	_aexp @ sp[(-13)+11]
 14450  012372  0EFE               	movlw	-2
 14451  012374  50E3               	movf	plusw1,w,c
 14452  012376  263D               	addwf	(btemp+8)^0,f,c
 14453  012378  0E00               	movlw	0
 14454  01237A  223E               	addwfc	(btemp+9)^0,f,c
 14455  01237C  503F               	movf	(btemp+10)^0,w,c
 14456  01237E  263D               	addwf	(btemp+8)^0,f,c
 14457  012380  5040               	movf	(btemp+11)^0,w,c
 14458  012382  223E               	addwfc	(btemp+9)^0,f,c
 14459                           
 14460                           ;stkvar	_temp @ sp[(-13)+8]
 14461  012384  0EFB               	movlw	-5
 14462  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14463  01238C  0EFC               	movlw	-4
 14464  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14465  012394  D021               	goto	l6564
 14466  012396                     l6554:
 14467                           
 14468                           ;stkvar	_prod @ sp[(-13)+0]
 14469  012396  90D8               	bcf	status,0,c
 14470  012398  0EF3               	movlw	-13
 14471  01239A  36E3               	rlcf	plusw1,f,c
 14472  01239C  0EF4               	movlw	-12
 14473  01239E  36E3               	rlcf	plusw1,f,c
 14474  0123A0  0EF5               	movlw	-11
 14475  0123A2  36E3               	rlcf	plusw1,f,c
 14476  0123A4  0EF6               	movlw	-10
 14477  0123A6  36E3               	rlcf	plusw1,f,c
 14478                           
 14479                           ;stkvar	_grs @ sp[(-13)+4]
 14480  0123A8  0EFA               	movlw	-6
 14481  0123AA  AEE3               	btfss	plusw1,7,c
 14482  0123AC  D002               	goto	l6560
 14483                           
 14484                           ;stkvar	_prod @ sp[(-13)+0]
 14485  0123AE  0EF3               	movlw	-13
 14486  0123B0  80E3               	bsf	plusw1,0,c
 14487  0123B2                     l6560:
 14488                           
 14489                           ;stkvar	_grs @ sp[(-13)+4]
 14490  0123B2  90D8               	bcf	status,0,c
 14491  0123B4  0EF7               	movlw	-9
 14492  0123B6  36E3               	rlcf	plusw1,f,c
 14493  0123B8  0EF8               	movlw	-8
 14494  0123BA  36E3               	rlcf	plusw1,f,c
 14495  0123BC  0EF9               	movlw	-7
 14496  0123BE  36E3               	rlcf	plusw1,f,c
 14497  0123C0  0EFA               	movlw	-6
 14498  0123C2  36E3               	rlcf	plusw1,f,c
 14499                           
 14500                           ;stkvar	_temp @ sp[(-13)+8]
 14501  0123C4  50E1               	movf	fsr1l,w,c
 14502  0123C6  0FFB               	addlw	-5
 14503  0123C8  6ED9               	movwf	fsr2l,c
 14504  0123CA  50E2               	movf	fsr1h,w,c
 14505  0123CC  6EDA               	movwf	fsr2h,c
 14506  0123CE  0EFF               	movlw	255
 14507  0123D0  22DA               	addwfc	fsr2h,f,c
 14508  0123D2  06DE               	decf	postinc2,f,c
 14509  0123D4  0E00               	movlw	0
 14510  0123D6  5ADD               	subwfb	postdec2,f,c
 14511  0123D8                     l6564:
 14512                           
 14513                           ;stkvar	_prod @ sp[(-13)+0]
 14514  0123D8  0EF5               	movlw	-11
 14515  0123DA  AEE3               	btfss	plusw1,7,c
 14516  0123DC  D7DC               	goto	l6554
 14517                           
 14518                           ;stkvar	_aexp @ sp[(-13)+11]
 14519  0123DE  0EFE               	movlw	-2
 14520  0123E0  6AE3               	clrf	plusw1,c
 14521                           
 14522                           ;stkvar	_grs @ sp[(-13)+4]
 14523  0123E2  0EFA               	movlw	-6
 14524  0123E4  AEE3               	btfss	plusw1,7,c
 14525  0123E6  D020               	goto	l6578
 14526                           
 14527                           ;stkvar	_grs @ sp[(-13)+4]
 14528  0123E8  50E1               	movf	fsr1l,w,c
 14529  0123EA  0FF7               	addlw	-9
 14530  0123EC  6ED9               	movwf	fsr2l,c
 14531  0123EE  50E2               	movf	fsr1h,w,c
 14532  0123F0  6EDA               	movwf	fsr2h,c
 14533  0123F2  0EFF               	movlw	255
 14534  0123F4  22DA               	addwfc	fsr2h,f,c
 14535  0123F6  0EFF               	movlw	255
 14536  0123F8  14DE               	andwf	postinc2,w,c
 14537  0123FA  6E3D               	movwf	(btemp+8)^0,c
 14538  0123FC  0EFF               	movlw	255
 14539  0123FE  14DE               	andwf	postinc2,w,c
 14540  012400  6E3E               	movwf	(btemp+9)^0,c
 14541  012402  0EFF               	movlw	255
 14542  012404  14DE               	andwf	postinc2,w,c
 14543  012406  6E3F               	movwf	(btemp+10)^0,c
 14544  012408  0E7F               	movlw	127
 14545  01240A  14DE               	andwf	postinc2,w,c
 14546  01240C  6E40               	movwf	(btemp+11)^0,c
 14547  01240E  503D               	movf	(btemp+8)^0,w,c
 14548  012410  103E               	iorwf	(btemp+9)^0,w,c
 14549  012412  103F               	iorwf	(btemp+10)^0,w,c
 14550  012414  1040               	iorwf	(btemp+11)^0,w,c
 14551  012416  B4D8               	btfsc	status,2,c
 14552  012418  D004               	goto	l6574
 14553  01241A                     u5640:
 14554                           
 14555                           ;stkvar	_aexp @ sp[(-13)+11]
 14556  01241A  0EFE               	movlw	-2
 14557  01241C  6AE3               	clrf	plusw1,c
 14558  01241E  2AE3               	incf	plusw1,f,c
 14559  012420  D003               	goto	l6578
 14560  012422                     l6574:
 14561                           
 14562                           ;stkvar	_prod @ sp[(-13)+0]
 14563  012422  0EF3               	movlw	-13
 14564  012424  B0E3               	btfsc	plusw1,0,c
 14565  012426  D7F9               	goto	u5640
 14566  012428                     l6578:
 14567                           
 14568                           ;stkvar	_aexp @ sp[(-13)+11]
 14569  012428  0EFE               	movlw	-2
 14570  01242A  50E3               	movf	plusw1,w,c
 14571  01242C  B4D8               	btfsc	status,2,c
 14572  01242E  D036               	goto	l6588
 14573                           
 14574                           ;stkvar	_prod @ sp[(-13)+0]
 14575  012430  50E1               	movf	fsr1l,w,c
 14576  012432  0FF3               	addlw	-13
 14577  012434  6ED9               	movwf	fsr2l,c
 14578  012436  50E2               	movf	fsr1h,w,c
 14579  012438  6EDA               	movwf	fsr2h,c
 14580  01243A  0EFF               	movlw	255
 14581  01243C  22DA               	addwfc	fsr2h,f,c
 14582  01243E  2ADE               	incf	postinc2,f,c
 14583  012440  0E00               	movlw	0
 14584  012442  22DE               	addwfc	postinc2,f,c
 14585  012444  22DE               	addwfc	postinc2,f,c
 14586  012446  22DE               	addwfc	postinc2,f,c
 14587                           
 14588                           ;stkvar	_prod @ sp[(-13)+0]
 14589  012448  0EF6               	movlw	-10
 14590  01244A  A0E3               	btfss	plusw1,0,c
 14591  01244C  D027               	goto	l6588
 14592  01244E  0E01               	movlw	1
 14593  012450  6E40               	movwf	(btemp+11)^0,c
 14594                           
 14595                           ;stkvar	_prod @ sp[(-13)+0]
 14596  012452  50E1               	movf	fsr1l,w,c
 14597  012454  0FF3               	addlw	-13
 14598  012456  6ED9               	movwf	fsr2l,c
 14599  012458  50E2               	movf	fsr1h,w,c
 14600  01245A  6EDA               	movwf	fsr2h,c
 14601  01245C  0EFF               	movlw	255
 14602  01245E  22DA               	addwfc	fsr2h,f,c
 14603  012460  2840               	incf	(btemp+11)^0,w,c
 14604  012462  52DE               	movf	postinc2,f,c
 14605  012464  D008               	goto	u5680
 14606  012466                     u5685:
 14607  012466  52DE               	movf	postinc2,f,c
 14608  012468  90D8               	bcf	status,0,c
 14609  01246A  BEDC               	btfsc	preinc2,7,c
 14610  01246C  80D8               	bsf	status,0,c
 14611  01246E  32DD               	rrcf	postdec2,f,c
 14612  012470  32DD               	rrcf	postdec2,f,c
 14613  012472  32DD               	rrcf	postdec2,f,c
 14614  012474  32DE               	rrcf	postinc2,f,c
 14615  012476                     u5680:
 14616  012476  2EE8               	decfsz	wreg,f,c
 14617  012478  D7F6               	goto	u5685
 14618                           
 14619                           ;stkvar	_temp @ sp[(-13)+8]
 14620  01247A  0EFB               	movlw	-5
 14621  01247C  50E3               	movf	plusw1,w,c
 14622  01247E  0F01               	addlw	1
 14623  012480  6E35               	movwf	btemp^0,c
 14624  012482  0EFB               	movlw	-5
 14625  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 14626  01248A  6A35               	clrf	btemp^0,c
 14627  01248C  0EFC               	movlw	-4
 14628  01248E  50E3               	movf	plusw1,w,c
 14629  012490  2035               	addwfc	btemp^0,w,c
 14630  012492  6E35               	movwf	btemp^0,c
 14631  012494  0EFC               	movlw	-4
 14632  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 14633  01249C                     l6588:
 14634                           
 14635                           ;stkvar	_temp @ sp[(-13)+8]
 14636  01249C  0EFC               	movlw	-4
 14637  01249E  BEE3               	btfsc	plusw1,7,c
 14638  0124A0  D020               	goto	l6592
 14639  0124A2  0EFC               	movlw	-4
 14640  0124A4  50E3               	movf	plusw1,w,c
 14641  0124A6  E104               	bnz	u5690
 14642  0124A8  0EFB               	movlw	-5
 14643  0124AA  28E3               	incf	plusw1,w,c
 14644  0124AC  A0D8               	btfss	status,0,c
 14645  0124AE  D019               	goto	l6592
 14646  0124B0                     u5690:
 14647  0124B0  0E00               	movlw	0
 14648  0124B2  6E3D               	movwf	(btemp+8)^0,c
 14649  0124B4  0E00               	movlw	0
 14650  0124B6  6E3E               	movwf	(btemp+9)^0,c
 14651  0124B8  0E80               	movlw	128
 14652  0124BA  6E3F               	movwf	(btemp+10)^0,c
 14653  0124BC  0E7F               	movlw	127
 14654  0124BE  6E40               	movwf	(btemp+11)^0,c
 14655                           
 14656                           ;stkvar	_prod @ sp[(-13)+0]
 14657  0124C0  0EF3               	movlw	-13
 14658  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14659  0124C8  0EF4               	movlw	-12
 14660  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14661  0124D0  0EF5               	movlw	-11
 14662  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14663  0124D8  0EF6               	movlw	-10
 14664  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14665  0124E0  D044               	goto	l6608
 14666  0124E2                     l6592:
 14667                           
 14668                           ;stkvar	_temp @ sp[(-13)+8]
 14669  0124E2  0EFC               	movlw	-4
 14670  0124E4  BEE3               	btfsc	plusw1,7,c
 14671  0124E6  D007               	goto	u5700
 14672  0124E8  0EFC               	movlw	-4
 14673  0124EA  50E3               	movf	plusw1,w,c
 14674  0124EC  E10F               	bnz	l6598
 14675  0124EE  0EFB               	movlw	-5
 14676  0124F0  04E3               	decf	plusw1,w,c
 14677  0124F2  B0D8               	btfsc	status,0,c
 14678  0124F4  D00B               	goto	l6598
 14679  0124F6                     u5700:
 14680                           
 14681                           ;stkvar	_prod @ sp[(-13)+0]
 14682  0124F6  0EF3               	movlw	-13
 14683  0124F8  6AE3               	clrf	plusw1,c
 14684  0124FA  0EF4               	movlw	-12
 14685  0124FC  6AE3               	clrf	plusw1,c
 14686  0124FE  0EF5               	movlw	-11
 14687  012500  6AE3               	clrf	plusw1,c
 14688  012502  0EF6               	movlw	-10
 14689  012504  6AE3               	clrf	plusw1,c
 14690                           
 14691                           ;stkvar	_sign @ sp[(-13)+12]
 14692  012506  0EFF               	movlw	-1
 14693  012508  6AE3               	clrf	plusw1,c
 14694  01250A  D02F               	goto	l6608
 14695  01250C                     l6598:
 14696                           
 14697                           ;stkvar	_temp @ sp[(-13)+8]
 14698                           ;stkvar	_bexp @ sp[(-13)+10]
 14699  01250C  0EFB               	movlw	-5
 14700  01250E  006F FF8C  F035    	movff	plusw1,btemp
 14701  012514  0EFD               	movlw	-3
 14702  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 14703                           
 14704                           ;stkvar	_prod @ sp[(-13)+0]
 14705  01251C  50E1               	movf	fsr1l,w,c
 14706  01251E  0FF3               	addlw	-13
 14707  012520  6ED9               	movwf	fsr2l,c
 14708  012522  50E2               	movf	fsr1h,w,c
 14709  012524  6EDA               	movwf	fsr2h,c
 14710  012526  0EFF               	movlw	255
 14711  012528  22DA               	addwfc	fsr2h,f,c
 14712  01252A  0EFF               	movlw	255
 14713  01252C  16DE               	andwf	postinc2,f,c
 14714  01252E  0EFF               	movlw	255
 14715  012530  16DE               	andwf	postinc2,f,c
 14716  012532  0E7F               	movlw	127
 14717  012534  16DE               	andwf	postinc2,f,c
 14718  012536  0E00               	movlw	0
 14719  012538  16DE               	andwf	postinc2,f,c
 14720                           
 14721                           ;stkvar	_bexp @ sp[(-13)+10]
 14722  01253A  0EFD               	movlw	-3
 14723  01253C  A0E3               	btfss	plusw1,0,c
 14724  01253E  D008               	goto	l6606
 14725                           
 14726                           ;stkvar	_prod @ sp[(-13)+0]
 14727  012540  0EF5               	movlw	245
 14728  012542  24E1               	addwf	fsr1l,w,c
 14729  012544  6ED9               	movwf	fsr2l,c
 14730  012546  0EFF               	movlw	255
 14731  012548  20E2               	addwfc	fsr1h,w,c
 14732  01254A  6EDA               	movwf	fsr2h,c
 14733  01254C  0E00               	movlw	0
 14734  01254E  8EDB               	bsf	plusw2,7,c
 14735  012550                     l6606:
 14736                           
 14737                           ;stkvar	_prod @ sp[(-13)+0]
 14738  012550  0EF6               	movlw	246
 14739  012552  24E1               	addwf	fsr1l,w,c
 14740  012554  6ED9               	movwf	fsr2l,c
 14741  012556  0EFF               	movlw	255
 14742  012558  20E2               	addwfc	fsr1h,w,c
 14743  01255A  6EDA               	movwf	fsr2h,c
 14744                           
 14745                           ;stkvar	_bexp @ sp[(-13)+10]
 14746  01255C  0EFD               	movlw	-3
 14747  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 14748  012564  90D8               	bcf	status,0,c
 14749  012566  3040               	rrcf	(btemp+11)^0,w,c
 14750  012568  6EDF               	movwf	indf2,c
 14751  01256A                     l6608:
 14752                           
 14753                           ;stkvar	_sign @ sp[(-13)+12]
 14754  01256A  0EFF               	movlw	-1
 14755  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 14756                           
 14757                           ;stkvar	_prod @ sp[(-13)+0]
 14758  012572  0EF6               	movlw	246
 14759  012574  24E1               	addwf	fsr1l,w,c
 14760  012576  6ED9               	movwf	fsr2l,c
 14761  012578  0EFF               	movlw	255
 14762  01257A  20E2               	addwfc	fsr1h,w,c
 14763  01257C  6EDA               	movwf	fsr2h,c
 14764  01257E  5040               	movf	(btemp+11)^0,w,c
 14765  012580  12DF               	iorwf	indf2,f,c
 14766                           
 14767                           ;stkvar	_prod @ sp[(-13)+0]
 14768  012582  0EF3               	movlw	-13
 14769  012584  006F FF8C  F035    	movff	plusw1,btemp
 14770  01258A  0EF4               	movlw	-12
 14771  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 14772  012592  0EF5               	movlw	-11
 14773  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 14774  01259A  0EF6               	movlw	-10
 14775  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 14776  0125A2                     l2566:
 14777                           
 14778                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14779  0125A2  0EEB               	movlw	235
 14780  0125A4  26E1               	addwf	fsr1l,f,c
 14781  0125A6  0EFF               	movlw	255
 14782  0125A8  22E2               	addwfc	fsr1h,f,c
 14783  0125AA  0012               	return		;funcret
 14784  0125AC                     __end_of___flmul:
 14785                           	opt callstack 0
 14786                           
 14787 ;; *************** function ___flge *****************
 14788 ;; Defined at:
 14789 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  ff1             4  [STACK] unsigned char 
 14792 ;;  ff2             4  [STACK] unsigned char 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;		None
 14795 ;; Return value:  Size  Location     Type
 14796 ;;		None               void
 14797 ;; Registers used:
 14798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/4
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14808 ;;Total ram usage:        0 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    6
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_efgtoa
 14815 ;; This function uses a reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text49
 14819  015992                     __ptext49:
 14820                           	opt callstack 0
 14821  015992                     ___flge:
 14822                           	opt callstack 17
 14823                           
 14824                           ;stkvar	_ff1 @ sp[(0)+-4]
 14825                           
 14826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14827                           ;incstack = 0
 14828  015992  50E1               	movf	fsr1l,w,c
 14829  015994  0FFC               	addlw	-4
 14830  015996  6ED9               	movwf	fsr2l,c
 14831  015998  50E2               	movf	fsr1h,w,c
 14832  01599A  6EDA               	movwf	fsr2h,c
 14833  01599C  0EFF               	movlw	255
 14834  01599E  22DA               	addwfc	fsr2h,f,c
 14835  0159A0  0E00               	movlw	0
 14836  0159A2  14DE               	andwf	postinc2,w,c
 14837  0159A4  6E3D               	movwf	(btemp+8)^0,c
 14838  0159A6  0E00               	movlw	0
 14839  0159A8  14DE               	andwf	postinc2,w,c
 14840  0159AA  6E3E               	movwf	(btemp+9)^0,c
 14841  0159AC  0E80               	movlw	128
 14842  0159AE  14DE               	andwf	postinc2,w,c
 14843  0159B0  6E3F               	movwf	(btemp+10)^0,c
 14844  0159B2  0E7F               	movlw	127
 14845  0159B4  14DE               	andwf	postinc2,w,c
 14846  0159B6  6E40               	movwf	(btemp+11)^0,c
 14847  0159B8  503D               	movf	(btemp+8)^0,w,c
 14848  0159BA  103E               	iorwf	(btemp+9)^0,w,c
 14849  0159BC  103F               	iorwf	(btemp+10)^0,w,c
 14850  0159BE  1040               	iorwf	(btemp+11)^0,w,c
 14851  0159C0  A4D8               	btfss	status,2,c
 14852  0159C2  D008               	goto	l6724
 14853                           
 14854                           ;stkvar	_ff1 @ sp[(0)+-4]
 14855  0159C4  0EFC               	movlw	-4
 14856  0159C6  6AE3               	clrf	plusw1,c
 14857  0159C8  0EFD               	movlw	-3
 14858  0159CA  6AE3               	clrf	plusw1,c
 14859  0159CC  0EFE               	movlw	-2
 14860  0159CE  6AE3               	clrf	plusw1,c
 14861  0159D0  0EFF               	movlw	-1
 14862  0159D2  6AE3               	clrf	plusw1,c
 14863  0159D4                     l6724:
 14864                           
 14865                           ;stkvar	_ff2 @ sp[(0)+-8]
 14866  0159D4  50E1               	movf	fsr1l,w,c
 14867  0159D6  0FF8               	addlw	-8
 14868  0159D8  6ED9               	movwf	fsr2l,c
 14869  0159DA  50E2               	movf	fsr1h,w,c
 14870  0159DC  6EDA               	movwf	fsr2h,c
 14871  0159DE  0EFF               	movlw	255
 14872  0159E0  22DA               	addwfc	fsr2h,f,c
 14873  0159E2  0E00               	movlw	0
 14874  0159E4  14DE               	andwf	postinc2,w,c
 14875  0159E6  6E3D               	movwf	(btemp+8)^0,c
 14876  0159E8  0E00               	movlw	0
 14877  0159EA  14DE               	andwf	postinc2,w,c
 14878  0159EC  6E3E               	movwf	(btemp+9)^0,c
 14879  0159EE  0E80               	movlw	128
 14880  0159F0  14DE               	andwf	postinc2,w,c
 14881  0159F2  6E3F               	movwf	(btemp+10)^0,c
 14882  0159F4  0E7F               	movlw	127
 14883  0159F6  14DE               	andwf	postinc2,w,c
 14884  0159F8  6E40               	movwf	(btemp+11)^0,c
 14885  0159FA  503D               	movf	(btemp+8)^0,w,c
 14886  0159FC  103E               	iorwf	(btemp+9)^0,w,c
 14887  0159FE  103F               	iorwf	(btemp+10)^0,w,c
 14888  015A00  1040               	iorwf	(btemp+11)^0,w,c
 14889  015A02  A4D8               	btfss	status,2,c
 14890  015A04  D008               	goto	l2211
 14891                           
 14892                           ;stkvar	_ff2 @ sp[(0)+-8]
 14893  015A06  0EF8               	movlw	-8
 14894  015A08  6AE3               	clrf	plusw1,c
 14895  015A0A  0EF9               	movlw	-7
 14896  015A0C  6AE3               	clrf	plusw1,c
 14897  015A0E  0EFA               	movlw	-6
 14898  015A10  6AE3               	clrf	plusw1,c
 14899  015A12  0EFB               	movlw	-5
 14900  015A14  6AE3               	clrf	plusw1,c
 14901  015A16                     l2211:
 14902                           
 14903                           ;stkvar	_ff1 @ sp[(0)+-4]
 14904  015A16  0EFF               	movlw	-1
 14905  015A18  AEE3               	btfss	plusw1,7,c
 14906  015A1A  D024               	goto	l6730
 14907                           
 14908                           ;stkvar	_ff1 @ sp[(0)+-4]
 14909  015A1C  0E00               	movlw	0
 14910  015A1E  6E3D               	movwf	(btemp+8)^0,c
 14911  015A20  0E00               	movlw	0
 14912  015A22  6E3E               	movwf	(btemp+9)^0,c
 14913  015A24  0E00               	movlw	0
 14914  015A26  6E3F               	movwf	(btemp+10)^0,c
 14915  015A28  0E80               	movlw	128
 14916  015A2A  6E40               	movwf	(btemp+11)^0,c
 14917  015A2C  0EFC               	movlw	-4
 14918  015A2E  50E3               	movf	plusw1,w,c
 14919  015A30  5E3D               	subwf	(btemp+8)^0,f,c
 14920  015A32  0EFD               	movlw	-3
 14921  015A34  50E3               	movf	plusw1,w,c
 14922  015A36  5A3E               	subwfb	(btemp+9)^0,f,c
 14923  015A38  0EFE               	movlw	-2
 14924  015A3A  50E3               	movf	plusw1,w,c
 14925  015A3C  5A3F               	subwfb	(btemp+10)^0,f,c
 14926  015A3E  0EFF               	movlw	-1
 14927  015A40  50E3               	movf	plusw1,w,c
 14928  015A42  5A40               	subwfb	(btemp+11)^0,f,c
 14929                           
 14930                           ;stkvar	_ff1 @ sp[(0)+-4]
 14931  015A44  0EFC               	movlw	-4
 14932  015A46  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14933  015A4C  0EFD               	movlw	-3
 14934  015A4E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14935  015A54  0EFE               	movlw	-2
 14936  015A56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14937  015A5C  0EFF               	movlw	-1
 14938  015A5E  0060  F103  FFE3   	movff	btemp+11,plusw1
 14939  015A64                     l6730:
 14940                           
 14941                           ;stkvar	_ff2 @ sp[(0)+-8]
 14942  015A64  0EFB               	movlw	-5
 14943  015A66  AEE3               	btfss	plusw1,7,c
 14944  015A68  D024               	goto	l6734
 14945                           
 14946                           ;stkvar	_ff2 @ sp[(0)+-8]
 14947  015A6A  0E00               	movlw	0
 14948  015A6C  6E3D               	movwf	(btemp+8)^0,c
 14949  015A6E  0E00               	movlw	0
 14950  015A70  6E3E               	movwf	(btemp+9)^0,c
 14951  015A72  0E00               	movlw	0
 14952  015A74  6E3F               	movwf	(btemp+10)^0,c
 14953  015A76  0E80               	movlw	128
 14954  015A78  6E40               	movwf	(btemp+11)^0,c
 14955  015A7A  0EF8               	movlw	-8
 14956  015A7C  50E3               	movf	plusw1,w,c
 14957  015A7E  5E3D               	subwf	(btemp+8)^0,f,c
 14958  015A80  0EF9               	movlw	-7
 14959  015A82  50E3               	movf	plusw1,w,c
 14960  015A84  5A3E               	subwfb	(btemp+9)^0,f,c
 14961  015A86  0EFA               	movlw	-6
 14962  015A88  50E3               	movf	plusw1,w,c
 14963  015A8A  5A3F               	subwfb	(btemp+10)^0,f,c
 14964  015A8C  0EFB               	movlw	-5
 14965  015A8E  50E3               	movf	plusw1,w,c
 14966  015A90  5A40               	subwfb	(btemp+11)^0,f,c
 14967                           
 14968                           ;stkvar	_ff2 @ sp[(0)+-8]
 14969  015A92  0EF8               	movlw	-8
 14970  015A94  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14971  015A9A  0EF9               	movlw	-7
 14972  015A9C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14973  015AA2  0EFA               	movlw	-6
 14974  015AA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14975  015AAA  0EFB               	movlw	-5
 14976  015AAC  0060  F103  FFE3   	movff	btemp+11,plusw1
 14977  015AB2                     l6734:
 14978                           
 14979                           ;stkvar	_ff1 @ sp[(0)+-4]
 14980  015AB2  0EFF               	movlw	-1
 14981  015AB4  7EE3               	btg	plusw1,7,c
 14982                           
 14983                           ;stkvar	_ff2 @ sp[(0)+-8]
 14984  015AB6  0EFB               	movlw	-5
 14985  015AB8  7EE3               	btg	plusw1,7,c
 14986                           
 14987                           ;stkvar	_ff2 @ sp[(0)+-8]
 14988                           ;stkvar	_ff1 @ sp[(0)+-4]
 14989  015ABA  50E1               	movf	fsr1l,w,c
 14990  015ABC  0FFC               	addlw	-4
 14991  015ABE  6ED9               	movwf	fsr2l,c
 14992  015AC0  50E2               	movf	fsr1h,w,c
 14993  015AC2  6EDA               	movwf	fsr2h,c
 14994  015AC4  0EFF               	movlw	255
 14995  015AC6  22DA               	addwfc	fsr2h,f,c
 14996  015AC8  0EF8               	movlw	-8
 14997  015ACA  50E3               	movf	plusw1,w,c
 14998  015ACC  5CDE               	subwf	postinc2,w,c
 14999  015ACE  0EF9               	movlw	-7
 15000  015AD0  50E3               	movf	plusw1,w,c
 15001  015AD2  58DE               	subwfb	postinc2,w,c
 15002  015AD4  0EFA               	movlw	-6
 15003  015AD6  50E3               	movf	plusw1,w,c
 15004  015AD8  58DE               	subwfb	postinc2,w,c
 15005  015ADA  0EFB               	movlw	-5
 15006  015ADC  50E3               	movf	plusw1,w,c
 15007  015ADE  58DE               	subwfb	postinc2,w,c
 15008  015AE0  B0D8               	btfsc	status,0,c
 15009  015AE2  D002               	goto	l6742
 15010  015AE4  9035               	bcf	btemp& (0+255),0,c
 15011  015AE6  D001               	goto	l2218
 15012  015AE8                     l6742:
 15013  015AE8  8035               	bsf	btemp& (0+255),0,c
 15014  015AEA                     l2218:
 15015                           
 15016                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15017  015AEA  0EF8               	movlw	248
 15018  015AEC  26E1               	addwf	fsr1l,f,c
 15019  015AEE  0EFF               	movlw	255
 15020  015AF0  22E2               	addwfc	fsr1h,f,c
 15021  015AF2  0012               	return		;funcret
 15022  015AF4                     __end_of___flge:
 15023                           	opt callstack 0
 15024                           
 15025 ;; *************** function ___fleq *****************
 15026 ;; Defined at:
 15027 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;  ff1             4  [STACK] unsigned char 
 15030 ;;  ff2             4  [STACK] unsigned char 
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;		None
 15033 ;; Return value:  Size  Location     Type
 15034 ;;		None               void
 15035 ;; Registers used:
 15036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/4
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15046 ;;Total ram usage:        0 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:    6
 15049 ;; This function calls:
 15050 ;;		Nothing
 15051 ;; This function is called by:
 15052 ;;		_efgtoa
 15053 ;; This function uses a reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text50
 15057  01655C                     __ptext50:
 15058                           	opt callstack 0
 15059  01655C                     ___fleq:
 15060                           	opt callstack 17
 15061                           
 15062                           ;stkvar	_ff1 @ sp[(0)+-4]
 15063                           
 15064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15065                           ;incstack = 0
 15066  01655C  50E1               	movf	fsr1l,w,c
 15067  01655E  0FFC               	addlw	-4
 15068  016560  6ED9               	movwf	fsr2l,c
 15069  016562  50E2               	movf	fsr1h,w,c
 15070  016564  6EDA               	movwf	fsr2h,c
 15071  016566  0EFF               	movlw	255
 15072  016568  22DA               	addwfc	fsr2h,f,c
 15073  01656A  0E00               	movlw	0
 15074  01656C  14DE               	andwf	postinc2,w,c
 15075  01656E  6E3D               	movwf	(btemp+8)^0,c
 15076  016570  0E00               	movlw	0
 15077  016572  14DE               	andwf	postinc2,w,c
 15078  016574  6E3E               	movwf	(btemp+9)^0,c
 15079  016576  0E80               	movlw	128
 15080  016578  14DE               	andwf	postinc2,w,c
 15081  01657A  6E3F               	movwf	(btemp+10)^0,c
 15082  01657C  0E7F               	movlw	127
 15083  01657E  14DE               	andwf	postinc2,w,c
 15084  016580  6E40               	movwf	(btemp+11)^0,c
 15085  016582  503D               	movf	(btemp+8)^0,w,c
 15086  016584  103E               	iorwf	(btemp+9)^0,w,c
 15087  016586  103F               	iorwf	(btemp+10)^0,w,c
 15088  016588  1040               	iorwf	(btemp+11)^0,w,c
 15089  01658A  A4D8               	btfss	status,2,c
 15090  01658C  D008               	goto	l6708
 15091                           
 15092                           ;stkvar	_ff1 @ sp[(0)+-4]
 15093  01658E  0EFC               	movlw	-4
 15094  016590  6AE3               	clrf	plusw1,c
 15095  016592  0EFD               	movlw	-3
 15096  016594  6AE3               	clrf	plusw1,c
 15097  016596  0EFE               	movlw	-2
 15098  016598  6AE3               	clrf	plusw1,c
 15099  01659A  0EFF               	movlw	-1
 15100  01659C  6AE3               	clrf	plusw1,c
 15101  01659E                     l6708:
 15102                           
 15103                           ;stkvar	_ff2 @ sp[(0)+-8]
 15104  01659E  50E1               	movf	fsr1l,w,c
 15105  0165A0  0FF8               	addlw	-8
 15106  0165A2  6ED9               	movwf	fsr2l,c
 15107  0165A4  50E2               	movf	fsr1h,w,c
 15108  0165A6  6EDA               	movwf	fsr2h,c
 15109  0165A8  0EFF               	movlw	255
 15110  0165AA  22DA               	addwfc	fsr2h,f,c
 15111  0165AC  0E00               	movlw	0
 15112  0165AE  14DE               	andwf	postinc2,w,c
 15113  0165B0  6E3D               	movwf	(btemp+8)^0,c
 15114  0165B2  0E00               	movlw	0
 15115  0165B4  14DE               	andwf	postinc2,w,c
 15116  0165B6  6E3E               	movwf	(btemp+9)^0,c
 15117  0165B8  0E80               	movlw	128
 15118  0165BA  14DE               	andwf	postinc2,w,c
 15119  0165BC  6E3F               	movwf	(btemp+10)^0,c
 15120  0165BE  0E7F               	movlw	127
 15121  0165C0  14DE               	andwf	postinc2,w,c
 15122  0165C2  6E40               	movwf	(btemp+11)^0,c
 15123  0165C4  503D               	movf	(btemp+8)^0,w,c
 15124  0165C6  103E               	iorwf	(btemp+9)^0,w,c
 15125  0165C8  103F               	iorwf	(btemp+10)^0,w,c
 15126  0165CA  1040               	iorwf	(btemp+11)^0,w,c
 15127  0165CC  A4D8               	btfss	status,2,c
 15128  0165CE  D008               	goto	l6712
 15129                           
 15130                           ;stkvar	_ff2 @ sp[(0)+-8]
 15131  0165D0  0EF8               	movlw	-8
 15132  0165D2  6AE3               	clrf	plusw1,c
 15133  0165D4  0EF9               	movlw	-7
 15134  0165D6  6AE3               	clrf	plusw1,c
 15135  0165D8  0EFA               	movlw	-6
 15136  0165DA  6AE3               	clrf	plusw1,c
 15137  0165DC  0EFB               	movlw	-5
 15138  0165DE  6AE3               	clrf	plusw1,c
 15139  0165E0                     l6712:
 15140                           
 15141                           ;stkvar	_ff2 @ sp[(0)+-8]
 15142                           ;stkvar	_ff1 @ sp[(0)+-4]
 15143  0165E0  50E1               	movf	fsr1l,w,c
 15144  0165E2  0FFC               	addlw	-4
 15145  0165E4  6ED9               	movwf	fsr2l,c
 15146  0165E6  50E2               	movf	fsr1h,w,c
 15147  0165E8  6EDA               	movwf	fsr2h,c
 15148  0165EA  0EFF               	movlw	255
 15149  0165EC  22DA               	addwfc	fsr2h,f,c
 15150  0165EE  0EF8               	movlw	-8
 15151  0165F0  50E3               	movf	plusw1,w,c
 15152  0165F2  18DE               	xorwf	postinc2,w,c
 15153  0165F4  E10D               	bnz	u5880
 15154  0165F6  0EF9               	movlw	-7
 15155  0165F8  50E3               	movf	plusw1,w,c
 15156  0165FA  18DE               	xorwf	postinc2,w,c
 15157  0165FC  E109               	bnz	u5880
 15158  0165FE  0EFA               	movlw	-6
 15159  016600  50E3               	movf	plusw1,w,c
 15160  016602  18DE               	xorwf	postinc2,w,c
 15161  016604  E105               	bnz	u5880
 15162  016606  0EFB               	movlw	-5
 15163  016608  50E3               	movf	plusw1,w,c
 15164  01660A  18DE               	xorwf	postinc2,w,c
 15165  01660C  B4D8               	btfsc	status,2,c
 15166  01660E  D002               	goto	l6716
 15167  016610                     u5880:
 15168  016610  9035               	bcf	btemp& (0+255),0,c
 15169  016612  D001               	goto	l2207
 15170  016614                     l6716:
 15171  016614  8035               	bsf	btemp& (0+255),0,c
 15172  016616                     l2207:
 15173                           
 15174                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15175  016616  0EF8               	movlw	248
 15176  016618  26E1               	addwf	fsr1l,f,c
 15177  01661A  0EFF               	movlw	255
 15178  01661C  22E2               	addwfc	fsr1h,f,c
 15179  01661E  0012               	return		;funcret
 15180  016620                     __end_of___fleq:
 15181                           	opt callstack 0
 15182                           
 15183 ;; *************** function ___fldiv *****************
 15184 ;; Defined at:
 15185 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  b               4  [STACK] unsigned char 
 15188 ;;  a               4  [STACK] unsigned char 
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;  grs             4  [STACK] unsigned long 
 15191 ;;  rem             4  [STACK] unsigned long 
 15192 ;;  new_exp         2  [STACK] short 
 15193 ;;  aexp            1  [STACK] unsigned char 
 15194 ;;  bexp            1  [STACK] unsigned char 
 15195 ;;  sign            1  [STACK] unsigned char 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  4  [STACK] unsigned char 
 15198 ;; Registers used:
 15199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/4
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15209 ;;Total ram usage:        0 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:    6
 15212 ;; This function calls:
 15213 ;;		Nothing
 15214 ;; This function is called by:
 15215 ;;		_conv_raw_result
 15216 ;;		_efgtoa
 15217 ;; This function uses a reentrant model
 15218 ;;
 15219                           
 15220                           	psect	text51
 15221  012D68                     __ptext51:
 15222                           	opt callstack 0
 15223  012D68                     ___fldiv:
 15224                           	opt callstack 0
 15225                           
 15226                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15227  012D68  0E0D               	movlw	13
 15228  012D6A  26E1               	addwf	fsr1l,f,c
 15229  012D6C  0E00               	movlw	0
 15230  012D6E  22E2               	addwfc	fsr1h,f,c
 15231                           
 15232                           ;stkvar	_b @ sp[(-13)+-4]
 15233                           
 15234                           ;incstack = 0
 15235  012D70  0EF2               	movlw	242
 15236  012D72  24E1               	addwf	fsr1l,w,c
 15237  012D74  6ED9               	movwf	fsr2l,c
 15238  012D76  0EFF               	movlw	255
 15239  012D78  20E2               	addwfc	fsr1h,w,c
 15240  012D7A  6EDA               	movwf	fsr2h,c
 15241  012D7C  50DF               	movf	indf2,w,c
 15242  012D7E  6E40               	movwf	(btemp+11)^0,c
 15243  012D80  0E80               	movlw	128
 15244  012D82  1640               	andwf	(btemp+11)^0,f,c
 15245                           
 15246                           ;stkvar	_sign @ sp[(-13)+12]
 15247  012D84  0EFF               	movlw	-1
 15248  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 15249                           
 15250                           ;stkvar	_b @ sp[(-13)+-4]
 15251  012D8C  0EF2               	movlw	242
 15252  012D8E  24E1               	addwf	fsr1l,w,c
 15253  012D90  6ED9               	movwf	fsr2l,c
 15254  012D92  0EFF               	movlw	255
 15255  012D94  20E2               	addwfc	fsr1h,w,c
 15256  012D96  6EDA               	movwf	fsr2h,c
 15257  012D98  50DF               	movf	indf2,w,c
 15258  012D9A  6E40               	movwf	(btemp+11)^0,c
 15259  012D9C  90D8               	bcf	status,0,c
 15260  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 15261  012DA0  6E3F               	movwf	(btemp+10)^0,c
 15262                           
 15263                           ;stkvar	_bexp @ sp[(-13)+11]
 15264  012DA2  0EFE               	movlw	-2
 15265  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15266                           
 15267                           ;stkvar	_b @ sp[(-13)+-4]
 15268  012DAA  0EF1               	movlw	241
 15269  012DAC  24E1               	addwf	fsr1l,w,c
 15270  012DAE  6ED9               	movwf	fsr2l,c
 15271  012DB0  0EFF               	movlw	255
 15272  012DB2  20E2               	addwfc	fsr1h,w,c
 15273  012DB4  6EDA               	movwf	fsr2h,c
 15274  012DB6  AEDF               	btfss	indf2,7,c
 15275  012DB8  D002               	goto	l6310
 15276                           
 15277                           ;stkvar	_bexp @ sp[(-13)+11]
 15278  012DBA  0EFE               	movlw	-2
 15279  012DBC  80E3               	bsf	plusw1,0,c
 15280  012DBE                     l6310:
 15281                           
 15282                           ;stkvar	_bexp @ sp[(-13)+11]
 15283  012DBE  0EFE               	movlw	-2
 15284  012DC0  50E3               	movf	plusw1,w,c
 15285  012DC2  B4D8               	btfsc	status,2,c
 15286  012DC4  D027               	goto	l6320
 15287                           
 15288                           ;stkvar	_bexp @ sp[(-13)+11]
 15289  012DC6  0EFE               	movlw	-2
 15290  012DC8  28E3               	incf	plusw1,w,c
 15291  012DCA  A4D8               	btfss	status,2,c
 15292  012DCC  D018               	goto	l6316
 15293  012DCE  0E00               	movlw	0
 15294  012DD0  6E3D               	movwf	(btemp+8)^0,c
 15295  012DD2  0E00               	movlw	0
 15296  012DD4  6E3E               	movwf	(btemp+9)^0,c
 15297  012DD6  0E00               	movlw	0
 15298  012DD8  6E3F               	movwf	(btemp+10)^0,c
 15299  012DDA  0E00               	movlw	0
 15300  012DDC  6E40               	movwf	(btemp+11)^0,c
 15301                           
 15302                           ;stkvar	_b @ sp[(-13)+-4]
 15303  012DDE  0EEF               	movlw	-17
 15304  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15305  012DE6  0EF0               	movlw	-16
 15306  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15307  012DEE  0EF1               	movlw	-15
 15308  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15309  012DF6  0EF2               	movlw	-14
 15310  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15311  012DFE                     l6316:
 15312                           
 15313                           ;stkvar	_b @ sp[(-13)+-4]
 15314  012DFE  0EF1               	movlw	-15
 15315  012E00  8EE3               	bsf	plusw1,7,c
 15316                           
 15317                           ;stkvar	_b @ sp[(-13)+-4]
 15318  012E02  0EF2               	movlw	242
 15319  012E04  24E1               	addwf	fsr1l,w,c
 15320  012E06  6ED9               	movwf	fsr2l,c
 15321  012E08  0EFF               	movlw	255
 15322  012E0A  20E2               	addwfc	fsr1h,w,c
 15323  012E0C  6EDA               	movwf	fsr2h,c
 15324  012E0E  0E00               	movlw	0
 15325  012E10  6EDF               	movwf	indf2,c
 15326  012E12  D018               	goto	l6322
 15327  012E14                     l6320:
 15328  012E14  0E00               	movlw	0
 15329  012E16  6E3D               	movwf	(btemp+8)^0,c
 15330  012E18  0E00               	movlw	0
 15331  012E1A  6E3E               	movwf	(btemp+9)^0,c
 15332  012E1C  0E00               	movlw	0
 15333  012E1E  6E3F               	movwf	(btemp+10)^0,c
 15334  012E20  0E00               	movlw	0
 15335  012E22  6E40               	movwf	(btemp+11)^0,c
 15336                           
 15337                           ;stkvar	_b @ sp[(-13)+-4]
 15338  012E24  0EEF               	movlw	-17
 15339  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15340  012E2C  0EF0               	movlw	-16
 15341  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15342  012E34  0EF1               	movlw	-15
 15343  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15344  012E3C  0EF2               	movlw	-14
 15345  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15346  012E44                     l6322:
 15347                           
 15348                           ;stkvar	_a @ sp[(-13)+-8]
 15349  012E44  0EEE               	movlw	238
 15350  012E46  24E1               	addwf	fsr1l,w,c
 15351  012E48  6ED9               	movwf	fsr2l,c
 15352  012E4A  0EFF               	movlw	255
 15353  012E4C  20E2               	addwfc	fsr1h,w,c
 15354  012E4E  6EDA               	movwf	fsr2h,c
 15355  012E50  50DF               	movf	indf2,w,c
 15356  012E52  6E40               	movwf	(btemp+11)^0,c
 15357  012E54  0E80               	movlw	128
 15358  012E56  1640               	andwf	(btemp+11)^0,f,c
 15359                           
 15360                           ;stkvar	_sign @ sp[(-13)+12]
 15361  012E58  50E1               	movf	fsr1l,w,c
 15362  012E5A  0FFF               	addlw	-1
 15363  012E5C  6ED9               	movwf	fsr2l,c
 15364  012E5E  50E2               	movf	fsr1h,w,c
 15365  012E60  6EDA               	movwf	fsr2h,c
 15366  012E62  0EFF               	movlw	255
 15367  012E64  22DA               	addwfc	fsr2h,f,c
 15368  012E66  5040               	movf	(btemp+11)^0,w,c
 15369  012E68  1ADF               	xorwf	indf2,f,c
 15370                           
 15371                           ;stkvar	_a @ sp[(-13)+-8]
 15372  012E6A  0EEE               	movlw	238
 15373  012E6C  24E1               	addwf	fsr1l,w,c
 15374  012E6E  6ED9               	movwf	fsr2l,c
 15375  012E70  0EFF               	movlw	255
 15376  012E72  20E2               	addwfc	fsr1h,w,c
 15377  012E74  6EDA               	movwf	fsr2h,c
 15378  012E76  50DF               	movf	indf2,w,c
 15379  012E78  6E40               	movwf	(btemp+11)^0,c
 15380  012E7A  90D8               	bcf	status,0,c
 15381  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 15382  012E7E  6E3F               	movwf	(btemp+10)^0,c
 15383                           
 15384                           ;stkvar	_aexp @ sp[(-13)+10]
 15385  012E80  0EFD               	movlw	-3
 15386  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15387                           
 15388                           ;stkvar	_a @ sp[(-13)+-8]
 15389  012E88  0EED               	movlw	237
 15390  012E8A  24E1               	addwf	fsr1l,w,c
 15391  012E8C  6ED9               	movwf	fsr2l,c
 15392  012E8E  0EFF               	movlw	255
 15393  012E90  20E2               	addwfc	fsr1h,w,c
 15394  012E92  6EDA               	movwf	fsr2h,c
 15395  012E94  AEDF               	btfss	indf2,7,c
 15396  012E96  D002               	goto	l6330
 15397                           
 15398                           ;stkvar	_aexp @ sp[(-13)+10]
 15399  012E98  0EFD               	movlw	-3
 15400  012E9A  80E3               	bsf	plusw1,0,c
 15401  012E9C                     l6330:
 15402                           
 15403                           ;stkvar	_aexp @ sp[(-13)+10]
 15404  012E9C  0EFD               	movlw	-3
 15405  012E9E  50E3               	movf	plusw1,w,c
 15406  012EA0  B4D8               	btfsc	status,2,c
 15407  012EA2  D027               	goto	l6340
 15408                           
 15409                           ;stkvar	_aexp @ sp[(-13)+10]
 15410  012EA4  0EFD               	movlw	-3
 15411  012EA6  28E3               	incf	plusw1,w,c
 15412  012EA8  A4D8               	btfss	status,2,c
 15413  012EAA  D018               	goto	l6336
 15414  012EAC  0E00               	movlw	0
 15415  012EAE  6E3D               	movwf	(btemp+8)^0,c
 15416  012EB0  0E00               	movlw	0
 15417  012EB2  6E3E               	movwf	(btemp+9)^0,c
 15418  012EB4  0E00               	movlw	0
 15419  012EB6  6E3F               	movwf	(btemp+10)^0,c
 15420  012EB8  0E00               	movlw	0
 15421  012EBA  6E40               	movwf	(btemp+11)^0,c
 15422                           
 15423                           ;stkvar	_a @ sp[(-13)+-8]
 15424  012EBC  0EEB               	movlw	-21
 15425  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15426  012EC4  0EEC               	movlw	-20
 15427  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15428  012ECC  0EED               	movlw	-19
 15429  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15430  012ED4  0EEE               	movlw	-18
 15431  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 15432  012EDC                     l6336:
 15433                           
 15434                           ;stkvar	_a @ sp[(-13)+-8]
 15435  012EDC  0EED               	movlw	-19
 15436  012EDE  8EE3               	bsf	plusw1,7,c
 15437                           
 15438                           ;stkvar	_a @ sp[(-13)+-8]
 15439  012EE0  0EEE               	movlw	238
 15440  012EE2  24E1               	addwf	fsr1l,w,c
 15441  012EE4  6ED9               	movwf	fsr2l,c
 15442  012EE6  0EFF               	movlw	255
 15443  012EE8  20E2               	addwfc	fsr1h,w,c
 15444  012EEA  6EDA               	movwf	fsr2h,c
 15445  012EEC  0E00               	movlw	0
 15446  012EEE  6EDF               	movwf	indf2,c
 15447  012EF0  D018               	goto	l6342
 15448  012EF2                     l6340:
 15449  012EF2  0E00               	movlw	0
 15450  012EF4  6E3D               	movwf	(btemp+8)^0,c
 15451  012EF6  0E00               	movlw	0
 15452  012EF8  6E3E               	movwf	(btemp+9)^0,c
 15453  012EFA  0E00               	movlw	0
 15454  012EFC  6E3F               	movwf	(btemp+10)^0,c
 15455  012EFE  0E00               	movlw	0
 15456  012F00  6E40               	movwf	(btemp+11)^0,c
 15457                           
 15458                           ;stkvar	_a @ sp[(-13)+-8]
 15459  012F02  0EEB               	movlw	-21
 15460  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15461  012F0A  0EEC               	movlw	-20
 15462  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15463  012F12  0EED               	movlw	-19
 15464  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15465  012F1A  0EEE               	movlw	-18
 15466  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 15467  012F22                     l6342:
 15468                           
 15469                           ;stkvar	_a @ sp[(-13)+-8]
 15470  012F22  0EEB               	movlw	-21
 15471  012F24  50E3               	movf	plusw1,w,c
 15472  012F26  E139               	bnz	l6354
 15473  012F28  0EEC               	movlw	-20
 15474  012F2A  50E3               	movf	plusw1,w,c
 15475  012F2C  E136               	bnz	l6354
 15476  012F2E  0EED               	movlw	-19
 15477  012F30  50E3               	movf	plusw1,w,c
 15478  012F32  E133               	bnz	l6354
 15479  012F34  0EEE               	movlw	-18
 15480  012F36  50E3               	movf	plusw1,w,c
 15481  012F38  A4D8               	btfss	status,2,c
 15482  012F3A  D02F               	goto	l6354
 15483                           
 15484                           ;stkvar	_b @ sp[(-13)+-4]
 15485  012F3C  0EEF               	movlw	-17
 15486  012F3E  6AE3               	clrf	plusw1,c
 15487  012F40  0EF0               	movlw	-16
 15488  012F42  6AE3               	clrf	plusw1,c
 15489  012F44  0EF1               	movlw	-15
 15490  012F46  6AE3               	clrf	plusw1,c
 15491  012F48  0EF2               	movlw	-14
 15492  012F4A  6AE3               	clrf	plusw1,c
 15493                           
 15494                           ;stkvar	_b @ sp[(-13)+-4]
 15495  012F4C  0EF1               	movlw	241
 15496  012F4E  24E1               	addwf	fsr1l,w,c
 15497  012F50  6ED9               	movwf	fsr2l,c
 15498  012F52  0EFF               	movlw	255
 15499  012F54  20E2               	addwfc	fsr1h,w,c
 15500  012F56  6EDA               	movwf	fsr2h,c
 15501  012F58  0E80               	movlw	128
 15502  012F5A  12DE               	iorwf	postinc2,f,c
 15503  012F5C  0E7F               	movlw	127
 15504  012F5E  12DD               	iorwf	postdec2,f,c
 15505  012F60                     l6348:
 15506                           
 15507                           ;stkvar	_sign @ sp[(-13)+12]
 15508  012F60  0EFF               	movlw	-1
 15509  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 15510                           
 15511                           ;stkvar	_b @ sp[(-13)+-4]
 15512  012F68  0EF2               	movlw	242
 15513  012F6A  24E1               	addwf	fsr1l,w,c
 15514  012F6C  6ED9               	movwf	fsr2l,c
 15515  012F6E  0EFF               	movlw	255
 15516  012F70  20E2               	addwfc	fsr1h,w,c
 15517  012F72  6EDA               	movwf	fsr2h,c
 15518  012F74  5040               	movf	(btemp+11)^0,w,c
 15519  012F76  12DF               	iorwf	indf2,f,c
 15520                           
 15521                           ;stkvar	_b @ sp[(-13)+-4]
 15522  012F78  0EEF               	movlw	-17
 15523  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 15524  012F80  0EF0               	movlw	-16
 15525  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 15526  012F88  0EF1               	movlw	-15
 15527  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 15528  012F90  0EF2               	movlw	-14
 15529  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 15530  012F98  D19F               	goto	l2530
 15531  012F9A                     l6354:
 15532                           
 15533                           ;stkvar	_bexp @ sp[(-13)+11]
 15534  012F9A  0EFE               	movlw	-2
 15535  012F9C  50E3               	movf	plusw1,w,c
 15536  012F9E  A4D8               	btfss	status,2,c
 15537  012FA0  D009               	goto	l6362
 15538  012FA2  0E00               	movlw	0
 15539  012FA4  6E35               	movwf	btemp^0,c
 15540  012FA6  0E00               	movlw	0
 15541  012FA8  6E36               	movwf	(btemp+1)^0,c
 15542  012FAA  0E00               	movlw	0
 15543  012FAC  6E37               	movwf	(btemp+2)^0,c
 15544  012FAE  0E00               	movlw	0
 15545  012FB0  6E38               	movwf	(btemp+3)^0,c
 15546  012FB2  D192               	goto	l2530
 15547  012FB4                     l6362:
 15548                           
 15549                           ;stkvar	_bexp @ sp[(-13)+11]
 15550  012FB4  0EFE               	movlw	-2
 15551  012FB6  50E3               	movf	plusw1,w,c
 15552  012FB8  6E3F               	movwf	(btemp+10)^0,c
 15553  012FBA  6A40               	clrf	(btemp+11)^0,c
 15554                           
 15555                           ;stkvar	_aexp @ sp[(-13)+10]
 15556  012FBC  0EFD               	movlw	-3
 15557  012FBE  50E3               	movf	plusw1,w,c
 15558  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 15559  012FC2  0E00               	movlw	0
 15560  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 15561  012FC6  0E7F               	movlw	127
 15562  012FC8  263F               	addwf	(btemp+10)^0,f,c
 15563  012FCA  0E00               	movlw	0
 15564  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 15565                           
 15566                           ;stkvar	_new_exp @ sp[(-13)+8]
 15567  012FCE  0EFB               	movlw	-5
 15568  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15569  012FD6  0EFC               	movlw	-4
 15570  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15571                           
 15572                           ;stkvar	_b @ sp[(-13)+-4]
 15573  012FDE  0EEF               	movlw	-17
 15574  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 15575  012FE6  0EF0               	movlw	-16
 15576  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 15577  012FEE  0EF1               	movlw	-15
 15578  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 15579  012FF6  0EF2               	movlw	-14
 15580  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 15581                           
 15582                           ;stkvar	_rem @ sp[(-13)+4]
 15583  012FFE  0EF7               	movlw	-9
 15584  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15585  013006  0EF8               	movlw	-8
 15586  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15587  01300E  0EF9               	movlw	-7
 15588  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15589  013016  0EFA               	movlw	-6
 15590  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 15591                           
 15592                           ;stkvar	_b @ sp[(-13)+-4]
 15593  01301E  0EEF               	movlw	-17
 15594  013020  6AE3               	clrf	plusw1,c
 15595  013022  0EF0               	movlw	-16
 15596  013024  6AE3               	clrf	plusw1,c
 15597  013026  0EF1               	movlw	-15
 15598  013028  6AE3               	clrf	plusw1,c
 15599  01302A  0EF2               	movlw	-14
 15600  01302C  6AE3               	clrf	plusw1,c
 15601                           
 15602                           ;stkvar	_grs @ sp[(-13)+0]
 15603  01302E  0EF3               	movlw	-13
 15604  013030  6AE3               	clrf	plusw1,c
 15605  013032  0EF4               	movlw	-12
 15606  013034  6AE3               	clrf	plusw1,c
 15607  013036  0EF5               	movlw	-11
 15608  013038  6AE3               	clrf	plusw1,c
 15609  01303A  0EF6               	movlw	-10
 15610  01303C  6AE3               	clrf	plusw1,c
 15611                           
 15612                           ;stkvar	_aexp @ sp[(-13)+10]
 15613  01303E  0EFD               	movlw	-3
 15614  013040  6AE3               	clrf	plusw1,c
 15615  013042  D050               	goto	l6390
 15616  013044                     l6372:
 15617                           
 15618                           ;stkvar	_aexp @ sp[(-13)+10]
 15619  013044  0EFD               	movlw	-3
 15620  013046  50E3               	movf	plusw1,w,c
 15621  013048  B4D8               	btfsc	status,2,c
 15622  01304A  D020               	goto	l6382
 15623                           
 15624                           ;stkvar	_rem @ sp[(-13)+4]
 15625  01304C  90D8               	bcf	status,0,c
 15626  01304E  0EF7               	movlw	-9
 15627  013050  36E3               	rlcf	plusw1,f,c
 15628  013052  0EF8               	movlw	-8
 15629  013054  36E3               	rlcf	plusw1,f,c
 15630  013056  0EF9               	movlw	-7
 15631  013058  36E3               	rlcf	plusw1,f,c
 15632  01305A  0EFA               	movlw	-6
 15633  01305C  36E3               	rlcf	plusw1,f,c
 15634                           
 15635                           ;stkvar	_b @ sp[(-13)+-4]
 15636  01305E  90D8               	bcf	status,0,c
 15637  013060  0EEF               	movlw	-17
 15638  013062  36E3               	rlcf	plusw1,f,c
 15639  013064  0EF0               	movlw	-16
 15640  013066  36E3               	rlcf	plusw1,f,c
 15641  013068  0EF1               	movlw	-15
 15642  01306A  36E3               	rlcf	plusw1,f,c
 15643  01306C  0EF2               	movlw	-14
 15644  01306E  36E3               	rlcf	plusw1,f,c
 15645                           
 15646                           ;stkvar	_grs @ sp[(-13)+0]
 15647  013070  0EF6               	movlw	-10
 15648  013072  AEE3               	btfss	plusw1,7,c
 15649  013074  D002               	goto	l6380
 15650                           
 15651                           ;stkvar	_b @ sp[(-13)+-4]
 15652  013076  0EEF               	movlw	-17
 15653  013078  80E3               	bsf	plusw1,0,c
 15654  01307A                     l6380:
 15655                           
 15656                           ;stkvar	_grs @ sp[(-13)+0]
 15657  01307A  90D8               	bcf	status,0,c
 15658  01307C  0EF3               	movlw	-13
 15659  01307E  36E3               	rlcf	plusw1,f,c
 15660  013080  0EF4               	movlw	-12
 15661  013082  36E3               	rlcf	plusw1,f,c
 15662  013084  0EF5               	movlw	-11
 15663  013086  36E3               	rlcf	plusw1,f,c
 15664  013088  0EF6               	movlw	-10
 15665  01308A  36E3               	rlcf	plusw1,f,c
 15666  01308C                     l6382:
 15667                           
 15668                           ;stkvar	_a @ sp[(-13)+-8]
 15669                           ;stkvar	_rem @ sp[(-13)+4]
 15670  01308C  50E1               	movf	fsr1l,w,c
 15671  01308E  0FF7               	addlw	-9
 15672  013090  6ED9               	movwf	fsr2l,c
 15673  013092  50E2               	movf	fsr1h,w,c
 15674  013094  6EDA               	movwf	fsr2h,c
 15675  013096  0EFF               	movlw	255
 15676  013098  22DA               	addwfc	fsr2h,f,c
 15677  01309A  0EEB               	movlw	-21
 15678  01309C  50E3               	movf	plusw1,w,c
 15679  01309E  5CDE               	subwf	postinc2,w,c
 15680  0130A0  0EEC               	movlw	-20
 15681  0130A2  50E3               	movf	plusw1,w,c
 15682  0130A4  58DE               	subwfb	postinc2,w,c
 15683  0130A6  0EED               	movlw	-19
 15684  0130A8  50E3               	movf	plusw1,w,c
 15685  0130AA  58DE               	subwfb	postinc2,w,c
 15686  0130AC  0EEE               	movlw	-18
 15687  0130AE  50E3               	movf	plusw1,w,c
 15688  0130B0  58DE               	subwfb	postinc2,w,c
 15689  0130B2  A0D8               	btfss	status,0,c
 15690  0130B4  D015               	goto	l6388
 15691                           
 15692                           ;stkvar	_grs @ sp[(-13)+0]
 15693  0130B6  0EF6               	movlw	-10
 15694  0130B8  8CE3               	bsf	plusw1,6,c
 15695                           
 15696                           ;stkvar	_a @ sp[(-13)+-8]
 15697                           ;stkvar	_rem @ sp[(-13)+4]
 15698  0130BA  50E1               	movf	fsr1l,w,c
 15699  0130BC  0FF7               	addlw	-9
 15700  0130BE  6ED9               	movwf	fsr2l,c
 15701  0130C0  50E2               	movf	fsr1h,w,c
 15702  0130C2  6EDA               	movwf	fsr2h,c
 15703  0130C4  0EFF               	movlw	255
 15704  0130C6  22DA               	addwfc	fsr2h,f,c
 15705  0130C8  0EEB               	movlw	-21
 15706  0130CA  50E3               	movf	plusw1,w,c
 15707  0130CC  5EDE               	subwf	postinc2,f,c
 15708  0130CE  0EEC               	movlw	-20
 15709  0130D0  50E3               	movf	plusw1,w,c
 15710  0130D2  5ADE               	subwfb	postinc2,f,c
 15711  0130D4  0EED               	movlw	-19
 15712  0130D6  50E3               	movf	plusw1,w,c
 15713  0130D8  5ADE               	subwfb	postinc2,f,c
 15714  0130DA  0EEE               	movlw	-18
 15715  0130DC  50E3               	movf	plusw1,w,c
 15716  0130DE  5ADE               	subwfb	postinc2,f,c
 15717  0130E0                     l6388:
 15718                           
 15719                           ;stkvar	_aexp @ sp[(-13)+10]
 15720  0130E0  0EFD               	movlw	-3
 15721  0130E2  2AE3               	incf	plusw1,f,c
 15722  0130E4                     l6390:
 15723                           
 15724                           ;stkvar	_aexp @ sp[(-13)+10]
 15725  0130E4  0EFD               	movlw	-3
 15726  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 15727  0130EC  0E19               	movlw	25
 15728  0130EE  6435               	cpfsgt	btemp^0,c
 15729  0130F0  D7A9               	goto	l6372
 15730                           
 15731                           ;stkvar	_rem @ sp[(-13)+4]
 15732  0130F2  0EF7               	movlw	-9
 15733  0130F4  50E3               	movf	plusw1,w,c
 15734  0130F6  E10A               	bnz	u5380
 15735  0130F8  0EF8               	movlw	-8
 15736  0130FA  50E3               	movf	plusw1,w,c
 15737  0130FC  E107               	bnz	u5380
 15738  0130FE  0EF9               	movlw	-7
 15739  013100  50E3               	movf	plusw1,w,c
 15740  013102  E104               	bnz	u5380
 15741  013104  0EFA               	movlw	-6
 15742  013106  50E3               	movf	plusw1,w,c
 15743  013108  B4D8               	btfsc	status,2,c
 15744  01310A  D024               	goto	l6406
 15745  01310C                     u5380:
 15746                           
 15747                           ;stkvar	_grs @ sp[(-13)+0]
 15748  01310C  0EF3               	movlw	-13
 15749  01310E  80E3               	bsf	plusw1,0,c
 15750  013110  D021               	goto	l6406
 15751  013112                     l6396:
 15752                           
 15753                           ;stkvar	_b @ sp[(-13)+-4]
 15754  013112  90D8               	bcf	status,0,c
 15755  013114  0EEF               	movlw	-17
 15756  013116  36E3               	rlcf	plusw1,f,c
 15757  013118  0EF0               	movlw	-16
 15758  01311A  36E3               	rlcf	plusw1,f,c
 15759  01311C  0EF1               	movlw	-15
 15760  01311E  36E3               	rlcf	plusw1,f,c
 15761  013120  0EF2               	movlw	-14
 15762  013122  36E3               	rlcf	plusw1,f,c
 15763                           
 15764                           ;stkvar	_grs @ sp[(-13)+0]
 15765  013124  0EF6               	movlw	-10
 15766  013126  AEE3               	btfss	plusw1,7,c
 15767  013128  D002               	goto	l6402
 15768                           
 15769                           ;stkvar	_b @ sp[(-13)+-4]
 15770  01312A  0EEF               	movlw	-17
 15771  01312C  80E3               	bsf	plusw1,0,c
 15772  01312E                     l6402:
 15773                           
 15774                           ;stkvar	_grs @ sp[(-13)+0]
 15775  01312E  90D8               	bcf	status,0,c
 15776  013130  0EF3               	movlw	-13
 15777  013132  36E3               	rlcf	plusw1,f,c
 15778  013134  0EF4               	movlw	-12
 15779  013136  36E3               	rlcf	plusw1,f,c
 15780  013138  0EF5               	movlw	-11
 15781  01313A  36E3               	rlcf	plusw1,f,c
 15782  01313C  0EF6               	movlw	-10
 15783  01313E  36E3               	rlcf	plusw1,f,c
 15784                           
 15785                           ;stkvar	_new_exp @ sp[(-13)+8]
 15786  013140  50E1               	movf	fsr1l,w,c
 15787  013142  0FFB               	addlw	-5
 15788  013144  6ED9               	movwf	fsr2l,c
 15789  013146  50E2               	movf	fsr1h,w,c
 15790  013148  6EDA               	movwf	fsr2h,c
 15791  01314A  0EFF               	movlw	255
 15792  01314C  22DA               	addwfc	fsr2h,f,c
 15793  01314E  06DE               	decf	postinc2,f,c
 15794  013150  0E00               	movlw	0
 15795  013152  5ADD               	subwfb	postdec2,f,c
 15796  013154                     l6406:
 15797                           
 15798                           ;stkvar	_b @ sp[(-13)+-4]
 15799  013154  0EF1               	movlw	-15
 15800  013156  AEE3               	btfss	plusw1,7,c
 15801  013158  D7DC               	goto	l6396
 15802                           
 15803                           ;stkvar	_aexp @ sp[(-13)+10]
 15804  01315A  0EFD               	movlw	-3
 15805  01315C  6AE3               	clrf	plusw1,c
 15806                           
 15807                           ;stkvar	_grs @ sp[(-13)+0]
 15808  01315E  0EF6               	movlw	-10
 15809  013160  AEE3               	btfss	plusw1,7,c
 15810  013162  D020               	goto	l6420
 15811                           
 15812                           ;stkvar	_grs @ sp[(-13)+0]
 15813  013164  50E1               	movf	fsr1l,w,c
 15814  013166  0FF3               	addlw	-13
 15815  013168  6ED9               	movwf	fsr2l,c
 15816  01316A  50E2               	movf	fsr1h,w,c
 15817  01316C  6EDA               	movwf	fsr2h,c
 15818  01316E  0EFF               	movlw	255
 15819  013170  22DA               	addwfc	fsr2h,f,c
 15820  013172  0EFF               	movlw	255
 15821  013174  14DE               	andwf	postinc2,w,c
 15822  013176  6E3D               	movwf	(btemp+8)^0,c
 15823  013178  0EFF               	movlw	255
 15824  01317A  14DE               	andwf	postinc2,w,c
 15825  01317C  6E3E               	movwf	(btemp+9)^0,c
 15826  01317E  0EFF               	movlw	255
 15827  013180  14DE               	andwf	postinc2,w,c
 15828  013182  6E3F               	movwf	(btemp+10)^0,c
 15829  013184  0E7F               	movlw	127
 15830  013186  14DE               	andwf	postinc2,w,c
 15831  013188  6E40               	movwf	(btemp+11)^0,c
 15832  01318A  503D               	movf	(btemp+8)^0,w,c
 15833  01318C  103E               	iorwf	(btemp+9)^0,w,c
 15834  01318E  103F               	iorwf	(btemp+10)^0,w,c
 15835  013190  1040               	iorwf	(btemp+11)^0,w,c
 15836  013192  B4D8               	btfsc	status,2,c
 15837  013194  D004               	goto	l6416
 15838  013196                     u5420:
 15839                           
 15840                           ;stkvar	_aexp @ sp[(-13)+10]
 15841  013196  0EFD               	movlw	-3
 15842  013198  6AE3               	clrf	plusw1,c
 15843  01319A  2AE3               	incf	plusw1,f,c
 15844  01319C  D003               	goto	l6420
 15845  01319E                     l6416:
 15846                           
 15847                           ;stkvar	_b @ sp[(-13)+-4]
 15848  01319E  0EEF               	movlw	-17
 15849  0131A0  B0E3               	btfsc	plusw1,0,c
 15850  0131A2  D7F9               	goto	u5420
 15851  0131A4                     l6420:
 15852                           
 15853                           ;stkvar	_aexp @ sp[(-13)+10]
 15854  0131A4  0EFD               	movlw	-3
 15855  0131A6  50E3               	movf	plusw1,w,c
 15856  0131A8  B4D8               	btfsc	status,2,c
 15857  0131AA  D036               	goto	l6430
 15858                           
 15859                           ;stkvar	_b @ sp[(-13)+-4]
 15860  0131AC  50E1               	movf	fsr1l,w,c
 15861  0131AE  0FEF               	addlw	-17
 15862  0131B0  6ED9               	movwf	fsr2l,c
 15863  0131B2  50E2               	movf	fsr1h,w,c
 15864  0131B4  6EDA               	movwf	fsr2h,c
 15865  0131B6  0EFF               	movlw	255
 15866  0131B8  22DA               	addwfc	fsr2h,f,c
 15867  0131BA  2ADE               	incf	postinc2,f,c
 15868  0131BC  0E00               	movlw	0
 15869  0131BE  22DE               	addwfc	postinc2,f,c
 15870  0131C0  22DE               	addwfc	postinc2,f,c
 15871  0131C2  22DE               	addwfc	postinc2,f,c
 15872                           
 15873                           ;stkvar	_b @ sp[(-13)+-4]
 15874  0131C4  0EF2               	movlw	-14
 15875  0131C6  A0E3               	btfss	plusw1,0,c
 15876  0131C8  D027               	goto	l6430
 15877  0131CA  0E01               	movlw	1
 15878  0131CC  6E40               	movwf	(btemp+11)^0,c
 15879                           
 15880                           ;stkvar	_b @ sp[(-13)+-4]
 15881  0131CE  50E1               	movf	fsr1l,w,c
 15882  0131D0  0FEF               	addlw	-17
 15883  0131D2  6ED9               	movwf	fsr2l,c
 15884  0131D4  50E2               	movf	fsr1h,w,c
 15885  0131D6  6EDA               	movwf	fsr2h,c
 15886  0131D8  0EFF               	movlw	255
 15887  0131DA  22DA               	addwfc	fsr2h,f,c
 15888  0131DC  2840               	incf	(btemp+11)^0,w,c
 15889  0131DE  52DE               	movf	postinc2,f,c
 15890  0131E0  D008               	goto	u5460
 15891  0131E2                     u5465:
 15892  0131E2  52DE               	movf	postinc2,f,c
 15893  0131E4  90D8               	bcf	status,0,c
 15894  0131E6  BEDC               	btfsc	preinc2,7,c
 15895  0131E8  80D8               	bsf	status,0,c
 15896  0131EA  32DD               	rrcf	postdec2,f,c
 15897  0131EC  32DD               	rrcf	postdec2,f,c
 15898  0131EE  32DD               	rrcf	postdec2,f,c
 15899  0131F0  32DE               	rrcf	postinc2,f,c
 15900  0131F2                     u5460:
 15901  0131F2  2EE8               	decfsz	wreg,f,c
 15902  0131F4  D7F6               	goto	u5465
 15903                           
 15904                           ;stkvar	_new_exp @ sp[(-13)+8]
 15905  0131F6  0EFB               	movlw	-5
 15906  0131F8  50E3               	movf	plusw1,w,c
 15907  0131FA  0F01               	addlw	1
 15908  0131FC  6E35               	movwf	btemp^0,c
 15909  0131FE  0EFB               	movlw	-5
 15910  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 15911  013206  6A35               	clrf	btemp^0,c
 15912  013208  0EFC               	movlw	-4
 15913  01320A  50E3               	movf	plusw1,w,c
 15914  01320C  2035               	addwfc	btemp^0,w,c
 15915  01320E  6E35               	movwf	btemp^0,c
 15916  013210  0EFC               	movlw	-4
 15917  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 15918  013218                     l6430:
 15919                           
 15920                           ;stkvar	_new_exp @ sp[(-13)+8]
 15921  013218  0EFC               	movlw	-4
 15922  01321A  BEE3               	btfsc	plusw1,7,c
 15923  01321C  D01B               	goto	l6436
 15924  01321E  0EFC               	movlw	-4
 15925  013220  50E3               	movf	plusw1,w,c
 15926  013222  E104               	bnz	u5470
 15927  013224  0EFB               	movlw	-5
 15928  013226  28E3               	incf	plusw1,w,c
 15929  013228  A0D8               	btfss	status,0,c
 15930  01322A  D014               	goto	l6436
 15931  01322C                     u5470:
 15932  01322C  0EFF               	movlw	255
 15933  01322E  6E3F               	movwf	(btemp+10)^0,c
 15934  013230  0E00               	movlw	0
 15935  013232  6E40               	movwf	(btemp+11)^0,c
 15936                           
 15937                           ;stkvar	_new_exp @ sp[(-13)+8]
 15938  013234  0EFB               	movlw	-5
 15939  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15940  01323C  0EFC               	movlw	-4
 15941  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15942                           
 15943                           ;stkvar	_b @ sp[(-13)+-4]
 15944  013244  0EEF               	movlw	-17
 15945  013246  6AE3               	clrf	plusw1,c
 15946  013248  0EF0               	movlw	-16
 15947  01324A  6AE3               	clrf	plusw1,c
 15948  01324C  0EF1               	movlw	-15
 15949  01324E  6AE3               	clrf	plusw1,c
 15950  013250  0EF2               	movlw	-14
 15951  013252  6AE3               	clrf	plusw1,c
 15952  013254                     l6436:
 15953                           
 15954                           ;stkvar	_new_exp @ sp[(-13)+8]
 15955  013254  0EFC               	movlw	-4
 15956  013256  BEE3               	btfsc	plusw1,7,c
 15957  013258  D007               	goto	u5480
 15958  01325A  0EFC               	movlw	-4
 15959  01325C  50E3               	movf	plusw1,w,c
 15960  01325E  E112               	bnz	l6442
 15961  013260  0EFB               	movlw	-5
 15962  013262  04E3               	decf	plusw1,w,c
 15963  013264  B0D8               	btfsc	status,0,c
 15964  013266  D00E               	goto	l6442
 15965  013268                     u5480:
 15966                           
 15967                           ;stkvar	_new_exp @ sp[(-13)+8]
 15968  013268  0EFB               	movlw	-5
 15969  01326A  6AE3               	clrf	plusw1,c
 15970  01326C  0EFC               	movlw	-4
 15971  01326E  6AE3               	clrf	plusw1,c
 15972                           
 15973                           ;stkvar	_b @ sp[(-13)+-4]
 15974  013270  0EEF               	movlw	-17
 15975  013272  6AE3               	clrf	plusw1,c
 15976  013274  0EF0               	movlw	-16
 15977  013276  6AE3               	clrf	plusw1,c
 15978  013278  0EF1               	movlw	-15
 15979  01327A  6AE3               	clrf	plusw1,c
 15980  01327C  0EF2               	movlw	-14
 15981  01327E  6AE3               	clrf	plusw1,c
 15982                           
 15983                           ;stkvar	_sign @ sp[(-13)+12]
 15984  013280  0EFF               	movlw	-1
 15985  013282  6AE3               	clrf	plusw1,c
 15986  013284                     l6442:
 15987                           
 15988                           ;stkvar	_new_exp @ sp[(-13)+8]
 15989                           ;stkvar	_bexp @ sp[(-13)+11]
 15990  013284  0EFB               	movlw	-5
 15991  013286  006F FF8C  F035    	movff	plusw1,btemp
 15992  01328C  0EFE               	movlw	-2
 15993  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 15994                           
 15995                           ;stkvar	_bexp @ sp[(-13)+11]
 15996  013294  0EFE               	movlw	-2
 15997  013296  A0E3               	btfss	plusw1,0,c
 15998  013298  D009               	goto	l6448
 15999                           
 16000                           ;stkvar	_b @ sp[(-13)+-4]
 16001  01329A  0EF1               	movlw	241
 16002  01329C  24E1               	addwf	fsr1l,w,c
 16003  01329E  6ED9               	movwf	fsr2l,c
 16004  0132A0  0EFF               	movlw	255
 16005  0132A2  20E2               	addwfc	fsr1h,w,c
 16006  0132A4  6EDA               	movwf	fsr2h,c
 16007  0132A6  0E00               	movlw	0
 16008  0132A8  8EDB               	bsf	plusw2,7,c
 16009  0132AA  D008               	goto	l6450
 16010  0132AC                     l6448:
 16011                           
 16012                           ;stkvar	_b @ sp[(-13)+-4]
 16013  0132AC  0EF1               	movlw	241
 16014  0132AE  24E1               	addwf	fsr1l,w,c
 16015  0132B0  6ED9               	movwf	fsr2l,c
 16016  0132B2  0EFF               	movlw	255
 16017  0132B4  20E2               	addwfc	fsr1h,w,c
 16018  0132B6  6EDA               	movwf	fsr2h,c
 16019  0132B8  0E7F               	movlw	127
 16020  0132BA  16DF               	andwf	indf2,f,c
 16021  0132BC                     l6450:
 16022                           
 16023                           ;stkvar	_b @ sp[(-13)+-4]
 16024  0132BC  0EF2               	movlw	242
 16025  0132BE  24E1               	addwf	fsr1l,w,c
 16026  0132C0  6ED9               	movwf	fsr2l,c
 16027  0132C2  0EFF               	movlw	255
 16028  0132C4  20E2               	addwfc	fsr1h,w,c
 16029  0132C6  6EDA               	movwf	fsr2h,c
 16030                           
 16031                           ;stkvar	_bexp @ sp[(-13)+11]
 16032  0132C8  0EFE               	movlw	-2
 16033  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 16034  0132D0  90D8               	bcf	status,0,c
 16035  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 16036  0132D4  6EDF               	movwf	indf2,c
 16037  0132D6  D644               	goto	l6348
 16038  0132D8                     l2530:
 16039                           
 16040                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16041  0132D8  0EEB               	movlw	235
 16042  0132DA  26E1               	addwf	fsr1l,f,c
 16043  0132DC  0EFF               	movlw	255
 16044  0132DE  22E2               	addwfc	fsr1h,f,c
 16045  0132E0  0012               	return		;funcret
 16046  0132E2                     __end_of___fldiv:
 16047                           	opt callstack 0
 16048                           
 16049 ;; *************** function ___awmod *****************
 16050 ;; Defined at:
 16051 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;  dividend        2  [STACK] int 
 16054 ;;  divisor         2  [STACK] int 
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;  sign            1  [STACK] unsigned char 
 16057 ;;  counter         1  [STACK] unsigned char 
 16058 ;; Return value:  Size  Location     Type
 16059 ;;                  2  [STACK] int 
 16060 ;; Registers used:
 16061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/4
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; Hardware stack levels required when called:    6
 16074 ;; This function calls:
 16075 ;;		Nothing
 16076 ;; This function is called by:
 16077 ;;		_efgtoa
 16078 ;; This function uses a reentrant model
 16079 ;;
 16080                           
 16081                           	psect	text52
 16082  015E94                     __ptext52:
 16083                           	opt callstack 0
 16084  015E94                     ___awmod:
 16085                           	opt callstack 0
 16086                           
 16087                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16088  015E94  52E6               	movf	postinc1,f,c
 16089  015E96  52E6               	movf	postinc1,f,c
 16090                           
 16091                           ;stkvar	_sign @ sp[(-2)+0]
 16092                           
 16093                           ;incstack = 0
 16094  015E98  0EFE               	movlw	-2
 16095  015E9A  6AE3               	clrf	plusw1,c
 16096                           
 16097                           ;stkvar	_dividend @ sp[(-2)+-2]
 16098  015E9C  0EFD               	movlw	-3
 16099  015E9E  AEE3               	btfss	plusw1,7,c
 16100  015EA0  D009               	goto	l6674
 16101                           
 16102                           ;stkvar	_dividend @ sp[(-2)+-2]
 16103                           ;stkvar	_dividend @ sp[(-2)+-2]
 16104  015EA2  0EFC               	movlw	-4
 16105  015EA4  6CE3               	negf	plusw1,c
 16106  015EA6  0EFD               	movlw	-3
 16107  015EA8  1EE3               	comf	plusw1,f,c
 16108  015EAA  B0D8               	btfsc	status,0,c
 16109  015EAC  2AE3               	incf	plusw1,f,c
 16110                           
 16111                           ;stkvar	_sign @ sp[(-2)+0]
 16112  015EAE  0EFE               	movlw	-2
 16113  015EB0  6AE3               	clrf	plusw1,c
 16114  015EB2  2AE3               	incf	plusw1,f,c
 16115  015EB4                     l6674:
 16116                           
 16117                           ;stkvar	_divisor @ sp[(-2)+-4]
 16118  015EB4  0EFB               	movlw	-5
 16119  015EB6  AEE3               	btfss	plusw1,7,c
 16120  015EB8  D006               	goto	l6678
 16121                           
 16122                           ;stkvar	_divisor @ sp[(-2)+-4]
 16123                           ;stkvar	_divisor @ sp[(-2)+-4]
 16124  015EBA  0EFA               	movlw	-6
 16125  015EBC  6CE3               	negf	plusw1,c
 16126  015EBE  0EFB               	movlw	-5
 16127  015EC0  1EE3               	comf	plusw1,f,c
 16128  015EC2  B0D8               	btfsc	status,0,c
 16129  015EC4  2AE3               	incf	plusw1,f,c
 16130  015EC6                     l6678:
 16131                           
 16132                           ;stkvar	_divisor @ sp[(-2)+-4]
 16133  015EC6  0EFA               	movlw	-6
 16134  015EC8  006F FF8C  F035    	movff	plusw1,btemp
 16135  015ECE  0EFB               	movlw	-5
 16136  015ED0  50E3               	movf	plusw1,w,c
 16137  015ED2  1035               	iorwf	btemp^0,w,c
 16138  015ED4  B4D8               	btfsc	status,2,c
 16139  015ED6  D053               	goto	u5840
 16140                           
 16141                           ;stkvar	_counter @ sp[(-2)+1]
 16142  015ED8  0EFF               	movlw	-1
 16143  015EDA  6AE3               	clrf	plusw1,c
 16144  015EDC  D012               	goto	L12
 16145  015EDE                     l6682:
 16146                           
 16147                           ;stkvar	_divisor @ sp[(-2)+-4]
 16148  015EDE  0EFA               	movlw	-6
 16149  015EE0  50E3               	movf	plusw1,w,c
 16150  015EE2  90D8               	bcf	status,0,c
 16151  015EE4  34E8               	rlcf	wreg,w,c
 16152  015EE6  6E35               	movwf	btemp^0,c
 16153  015EE8  0EFA               	movlw	-6
 16154  015EEA  0060  F0D7  FFE3   	movff	btemp,plusw1
 16155  015EF0  0EFB               	movlw	-5
 16156  015EF2  50E3               	movf	plusw1,w,c
 16157  015EF4  34E8               	rlcf	wreg,w,c
 16158  015EF6  6E35               	movwf	btemp^0,c
 16159  015EF8  0EFB               	movlw	-5
 16160  015EFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 16161                           
 16162                           ;stkvar	_counter @ sp[(-2)+1]
 16163  015F00  0EFF               	movlw	-1
 16164  015F02                     L12:
 16165  015F02  2AE3               	incf	plusw1,f,c
 16166                           
 16167                           ;stkvar	_divisor @ sp[(-2)+-4]
 16168  015F04  0EFB               	movlw	-5
 16169  015F06  AEE3               	btfss	plusw1,7,c
 16170  015F08  D7EA               	goto	l6682
 16171  015F0A                     u5820:
 16172                           
 16173                           ;stkvar	_divisor @ sp[(-2)+-4]
 16174  015F0A  0EFA               	movlw	-6
 16175  015F0C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16176  015F12  0EFB               	movlw	-5
 16177  015F14  006F FF8C  F040    	movff	plusw1,btemp+11
 16178                           
 16179                           ;stkvar	_dividend @ sp[(-2)+-2]
 16180  015F1A  0EFC               	movlw	-4
 16181  015F1C  006F FF8C  F03D    	movff	plusw1,btemp+8
 16182  015F22  0EFD               	movlw	-3
 16183  015F24  006F FF8C  F03E    	movff	plusw1,btemp+9
 16184  015F2A  503F               	movf	(btemp+10)^0,w,c
 16185  015F2C  5C3D               	subwf	(btemp+8)^0,w,c
 16186  015F2E  5040               	movf	(btemp+11)^0,w,c
 16187  015F30  583E               	subwfb	(btemp+9)^0,w,c
 16188  015F32  A0D8               	btfss	status,0,c
 16189  015F34  D014               	goto	l6692
 16190                           
 16191                           ;stkvar	_divisor @ sp[(-2)+-4]
 16192                           ;stkvar	_dividend @ sp[(-2)+-2]
 16193  015F36  0EFC               	movlw	-4
 16194  015F38  50E3               	movf	plusw1,w,c
 16195  015F3A  6E35               	movwf	btemp^0,c
 16196  015F3C  0EFA               	movlw	-6
 16197  015F3E  50E3               	movf	plusw1,w,c
 16198  015F40  5E35               	subwf	btemp^0,f,c
 16199  015F42  0EFC               	movlw	-4
 16200  015F44  0060  F0D7  FFE3   	movff	btemp,plusw1
 16201  015F4A  0EFD               	movlw	-3
 16202  015F4C  50E3               	movf	plusw1,w,c
 16203  015F4E  6E35               	movwf	btemp^0,c
 16204  015F50  0EFB               	movlw	-5
 16205  015F52  50E3               	movf	plusw1,w,c
 16206  015F54  5A35               	subwfb	btemp^0,f,c
 16207  015F56  0EFD               	movlw	-3
 16208  015F58  0060  F0D7  FFE3   	movff	btemp,plusw1
 16209  015F5E                     l6692:
 16210                           
 16211                           ;stkvar	_divisor @ sp[(-2)+-4]
 16212  015F5E  90D8               	bcf	status,0,c
 16213  015F60  0EFB               	movlw	-5
 16214  015F62  32E3               	rrcf	plusw1,f,c
 16215  015F64  0EFA               	movlw	-6
 16216  015F66  32E3               	rrcf	plusw1,f,c
 16217                           
 16218                           ;stkvar	_counter @ sp[(-2)+1]
 16219  015F68  0EFF               	movlw	-1
 16220  015F6A  50E3               	movf	plusw1,w,c
 16221  015F6C  6E35               	movwf	btemp^0,c
 16222  015F6E  0E01               	movlw	1
 16223  015F70  5E35               	subwf	btemp^0,f,c
 16224  015F72  0EFF               	movlw	-1
 16225  015F74  0060  F0D7  FFE3   	movff	btemp,plusw1
 16226  015F7A  A4D8               	btfss	status,2,c
 16227  015F7C  D7C6               	goto	u5820
 16228  015F7E                     u5840:
 16229                           
 16230                           ;stkvar	_sign @ sp[(-2)+0]
 16231  015F7E  0EFE               	movlw	-2
 16232  015F80  50E3               	movf	plusw1,w,c
 16233  015F82  B4D8               	btfsc	status,2,c
 16234  015F84  D006               	goto	l6700
 16235                           
 16236                           ;stkvar	_dividend @ sp[(-2)+-2]
 16237                           ;stkvar	_dividend @ sp[(-2)+-2]
 16238  015F86  0EFC               	movlw	-4
 16239  015F88  6CE3               	negf	plusw1,c
 16240  015F8A  0EFD               	movlw	-3
 16241  015F8C  1EE3               	comf	plusw1,f,c
 16242  015F8E  B0D8               	btfsc	status,0,c
 16243  015F90  2AE3               	incf	plusw1,f,c
 16244  015F92                     l6700:
 16245                           
 16246                           ;stkvar	_dividend @ sp[(-2)+-2]
 16247  015F92  0EFC               	movlw	-4
 16248  015F94  006F FF8C  F035    	movff	plusw1,btemp
 16249  015F9A  0EFD               	movlw	-3
 16250  015F9C  006F FF8C  F036    	movff	plusw1,btemp+1
 16251                           
 16252                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16253  015FA2  0EFA               	movlw	250
 16254  015FA4  26E1               	addwf	fsr1l,f,c
 16255  015FA6  0EFF               	movlw	255
 16256  015FA8  22E2               	addwfc	fsr1h,f,c
 16257  015FAA  0012               	return		;funcret
 16258  015FAC                     __end_of___awmod:
 16259                           	opt callstack 0
 16260                           
 16261 ;; *************** function ___awdiv *****************
 16262 ;; Defined at:
 16263 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;  dividend        2  [STACK] int 
 16266 ;;  divisor         2  [STACK] int 
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;  quotient        2  [STACK] int 
 16269 ;;  sign            1  [STACK] unsigned char 
 16270 ;;  counter         1  [STACK] unsigned char 
 16271 ;; Return value:  Size  Location     Type
 16272 ;;                  2  [STACK] int 
 16273 ;; Registers used:
 16274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16275 ;; Tracked objects:
 16276 ;;		On entry : 0/4
 16277 ;;		On exit  : 0/0
 16278 ;;		Unchanged: 0/0
 16279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16284 ;;Total ram usage:        0 bytes
 16285 ;; Hardware stack levels used:    1
 16286 ;; Hardware stack levels required when called:    6
 16287 ;; This function calls:
 16288 ;;		Nothing
 16289 ;; This function is called by:
 16290 ;;		_efgtoa
 16291 ;; This function uses a reentrant model
 16292 ;;
 16293                           
 16294                           	psect	text53
 16295  015AF4                     __ptext53:
 16296                           	opt callstack 0
 16297  015AF4                     ___awdiv:
 16298                           	opt callstack 0
 16299                           
 16300                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16301  015AF4  52E6               	movf	postinc1,f,c
 16302  015AF6  52E6               	movf	postinc1,f,c
 16303  015AF8  52E6               	movf	postinc1,f,c
 16304  015AFA  52E6               	movf	postinc1,f,c
 16305                           
 16306                           ;stkvar	_sign @ sp[(-4)+2]
 16307                           
 16308                           ;incstack = 0
 16309  015AFC  0EFE               	movlw	-2
 16310  015AFE  6AE3               	clrf	plusw1,c
 16311                           
 16312                           ;stkvar	_divisor @ sp[(-4)+-4]
 16313  015B00  0EF9               	movlw	-7
 16314  015B02  AEE3               	btfss	plusw1,7,c
 16315  015B04  D009               	goto	l6628
 16316                           
 16317                           ;stkvar	_divisor @ sp[(-4)+-4]
 16318                           ;stkvar	_divisor @ sp[(-4)+-4]
 16319  015B06  0EF8               	movlw	-8
 16320  015B08  6CE3               	negf	plusw1,c
 16321  015B0A  0EF9               	movlw	-7
 16322  015B0C  1EE3               	comf	plusw1,f,c
 16323  015B0E  B0D8               	btfsc	status,0,c
 16324  015B10  2AE3               	incf	plusw1,f,c
 16325                           
 16326                           ;stkvar	_sign @ sp[(-4)+2]
 16327  015B12  0EFE               	movlw	-2
 16328  015B14  6AE3               	clrf	plusw1,c
 16329  015B16  2AE3               	incf	plusw1,f,c
 16330  015B18                     l6628:
 16331                           
 16332                           ;stkvar	_dividend @ sp[(-4)+-2]
 16333  015B18  0EFB               	movlw	-5
 16334  015B1A  AEE3               	btfss	plusw1,7,c
 16335  015B1C  D008               	goto	l6634
 16336                           
 16337                           ;stkvar	_dividend @ sp[(-4)+-2]
 16338                           ;stkvar	_dividend @ sp[(-4)+-2]
 16339  015B1E  0EFA               	movlw	-6
 16340  015B20  6CE3               	negf	plusw1,c
 16341  015B22  0EFB               	movlw	-5
 16342  015B24  1EE3               	comf	plusw1,f,c
 16343  015B26  B0D8               	btfsc	status,0,c
 16344  015B28  2AE3               	incf	plusw1,f,c
 16345                           
 16346                           ;stkvar	_sign @ sp[(-4)+2]
 16347  015B2A  0EFE               	movlw	-2
 16348  015B2C  70E3               	btg	plusw1,0,c
 16349  015B2E                     l6634:
 16350                           
 16351                           ;stkvar	_quotient @ sp[(-4)+0]
 16352  015B2E  0EFC               	movlw	-4
 16353  015B30  6AE3               	clrf	plusw1,c
 16354  015B32  0EFD               	movlw	-3
 16355  015B34  6AE3               	clrf	plusw1,c
 16356                           
 16357                           ;stkvar	_divisor @ sp[(-4)+-4]
 16358  015B36  0EF8               	movlw	-8
 16359  015B38  006F FF8C  F035    	movff	plusw1,btemp
 16360  015B3E  0EF9               	movlw	-7
 16361  015B40  50E3               	movf	plusw1,w,c
 16362  015B42  1035               	iorwf	btemp^0,w,c
 16363  015B44  B4D8               	btfsc	status,2,c
 16364  015B46  D066               	goto	u5770
 16365                           
 16366                           ;stkvar	_counter @ sp[(-4)+3]
 16367  015B48  0EFF               	movlw	-1
 16368  015B4A  6AE3               	clrf	plusw1,c
 16369  015B4C  D012               	goto	L13
 16370  015B4E                     l6640:
 16371                           
 16372                           ;stkvar	_divisor @ sp[(-4)+-4]
 16373  015B4E  0EF8               	movlw	-8
 16374  015B50  50E3               	movf	plusw1,w,c
 16375  015B52  90D8               	bcf	status,0,c
 16376  015B54  34E8               	rlcf	wreg,w,c
 16377  015B56  6E35               	movwf	btemp^0,c
 16378  015B58  0EF8               	movlw	-8
 16379  015B5A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16380  015B60  0EF9               	movlw	-7
 16381  015B62  50E3               	movf	plusw1,w,c
 16382  015B64  34E8               	rlcf	wreg,w,c
 16383  015B66  6E35               	movwf	btemp^0,c
 16384  015B68  0EF9               	movlw	-7
 16385  015B6A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16386                           
 16387                           ;stkvar	_counter @ sp[(-4)+3]
 16388  015B70  0EFF               	movlw	-1
 16389  015B72                     L13:
 16390  015B72  2AE3               	incf	plusw1,f,c
 16391                           
 16392                           ;stkvar	_divisor @ sp[(-4)+-4]
 16393  015B74  0EF9               	movlw	-7
 16394  015B76  AEE3               	btfss	plusw1,7,c
 16395  015B78  D7EA               	goto	l6640
 16396  015B7A                     u5750:
 16397                           
 16398                           ;stkvar	_quotient @ sp[(-4)+0]
 16399  015B7A  0EFC               	movlw	-4
 16400  015B7C  50E3               	movf	plusw1,w,c
 16401  015B7E  90D8               	bcf	status,0,c
 16402  015B80  34E8               	rlcf	wreg,w,c
 16403  015B82  6E35               	movwf	btemp^0,c
 16404  015B84  0EFC               	movlw	-4
 16405  015B86  0060  F0D7  FFE3   	movff	btemp,plusw1
 16406  015B8C  0EFD               	movlw	-3
 16407  015B8E  50E3               	movf	plusw1,w,c
 16408  015B90  34E8               	rlcf	wreg,w,c
 16409  015B92  6E35               	movwf	btemp^0,c
 16410  015B94  0EFD               	movlw	-3
 16411  015B96  0060  F0D7  FFE3   	movff	btemp,plusw1
 16412                           
 16413                           ;stkvar	_divisor @ sp[(-4)+-4]
 16414  015B9C  0EF8               	movlw	-8
 16415  015B9E  006F FF8C  F03F    	movff	plusw1,btemp+10
 16416  015BA4  0EF9               	movlw	-7
 16417  015BA6  006F FF8C  F040    	movff	plusw1,btemp+11
 16418                           
 16419                           ;stkvar	_dividend @ sp[(-4)+-2]
 16420  015BAC  0EFA               	movlw	-6
 16421  015BAE  006F FF8C  F03D    	movff	plusw1,btemp+8
 16422  015BB4  0EFB               	movlw	-5
 16423  015BB6  006F FF8C  F03E    	movff	plusw1,btemp+9
 16424  015BBC  503F               	movf	(btemp+10)^0,w,c
 16425  015BBE  5C3D               	subwf	(btemp+8)^0,w,c
 16426  015BC0  5040               	movf	(btemp+11)^0,w,c
 16427  015BC2  583E               	subwfb	(btemp+9)^0,w,c
 16428  015BC4  A0D8               	btfss	status,0,c
 16429  015BC6  D016               	goto	l6654
 16430                           
 16431                           ;stkvar	_divisor @ sp[(-4)+-4]
 16432                           ;stkvar	_dividend @ sp[(-4)+-2]
 16433  015BC8  0EFA               	movlw	-6
 16434  015BCA  50E3               	movf	plusw1,w,c
 16435  015BCC  6E35               	movwf	btemp^0,c
 16436  015BCE  0EF8               	movlw	-8
 16437  015BD0  50E3               	movf	plusw1,w,c
 16438  015BD2  5E35               	subwf	btemp^0,f,c
 16439  015BD4  0EFA               	movlw	-6
 16440  015BD6  0060  F0D7  FFE3   	movff	btemp,plusw1
 16441  015BDC  0EFB               	movlw	-5
 16442  015BDE  50E3               	movf	plusw1,w,c
 16443  015BE0  6E35               	movwf	btemp^0,c
 16444  015BE2  0EF9               	movlw	-7
 16445  015BE4  50E3               	movf	plusw1,w,c
 16446  015BE6  5A35               	subwfb	btemp^0,f,c
 16447  015BE8  0EFB               	movlw	-5
 16448  015BEA  0060  F0D7  FFE3   	movff	btemp,plusw1
 16449                           
 16450                           ;stkvar	_quotient @ sp[(-4)+0]
 16451  015BF0  0EFC               	movlw	-4
 16452  015BF2  80E3               	bsf	plusw1,0,c
 16453  015BF4                     l6654:
 16454                           
 16455                           ;stkvar	_divisor @ sp[(-4)+-4]
 16456  015BF4  90D8               	bcf	status,0,c
 16457  015BF6  0EF9               	movlw	-7
 16458  015BF8  32E3               	rrcf	plusw1,f,c
 16459  015BFA  0EF8               	movlw	-8
 16460  015BFC  32E3               	rrcf	plusw1,f,c
 16461                           
 16462                           ;stkvar	_counter @ sp[(-4)+3]
 16463  015BFE  0EFF               	movlw	-1
 16464  015C00  50E3               	movf	plusw1,w,c
 16465  015C02  6E35               	movwf	btemp^0,c
 16466  015C04  0E01               	movlw	1
 16467  015C06  5E35               	subwf	btemp^0,f,c
 16468  015C08  0EFF               	movlw	-1
 16469  015C0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16470  015C10  A4D8               	btfss	status,2,c
 16471  015C12  D7B3               	goto	u5750
 16472  015C14                     u5770:
 16473                           
 16474                           ;stkvar	_sign @ sp[(-4)+2]
 16475  015C14  0EFE               	movlw	-2
 16476  015C16  50E3               	movf	plusw1,w,c
 16477  015C18  B4D8               	btfsc	status,2,c
 16478  015C1A  D006               	goto	l6662
 16479                           
 16480                           ;stkvar	_quotient @ sp[(-4)+0]
 16481                           ;stkvar	_quotient @ sp[(-4)+0]
 16482  015C1C  0EFC               	movlw	-4
 16483  015C1E  6CE3               	negf	plusw1,c
 16484  015C20  0EFD               	movlw	-3
 16485  015C22  1EE3               	comf	plusw1,f,c
 16486  015C24  B0D8               	btfsc	status,0,c
 16487  015C26  2AE3               	incf	plusw1,f,c
 16488  015C28                     l6662:
 16489                           
 16490                           ;stkvar	_quotient @ sp[(-4)+0]
 16491  015C28  0EFC               	movlw	-4
 16492  015C2A  006F FF8C  F035    	movff	plusw1,btemp
 16493  015C30  0EFD               	movlw	-3
 16494  015C32  006F FF8C  F036    	movff	plusw1,btemp+1
 16495                           
 16496                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16497  015C38  0EF8               	movlw	248
 16498  015C3A  26E1               	addwf	fsr1l,f,c
 16499  015C3C  0EFF               	movlw	255
 16500  015C3E  22E2               	addwfc	fsr1h,f,c
 16501  015C40  0012               	return		;funcret
 16502  015C42                     __end_of___awdiv:
 16503                           	opt callstack 0
 16504                           
 16505 ;; *************** function _dtoa *****************
 16506 ;; Defined at:
 16507 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16510 ;;		 -> f(6), NULL(0), 
 16511 ;;  d               8  [STACK] long long 
 16512 ;; Auto vars:     Size  Location     Type
 16513 ;;  n               8  [STACK] long long 
 16514 ;;  i               2  [STACK] int 
 16515 ;;  s               2  [STACK] int 
 16516 ;;  w               2  [STACK] int 
 16517 ;;  p               2  [STACK] int 
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  2  [STACK] int 
 16520 ;; Registers used:
 16521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/4
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16531 ;;Total ram usage:        0 bytes
 16532 ;; Hardware stack levels used:    1
 16533 ;; Hardware stack levels required when called:   11
 16534 ;; This function calls:
 16535 ;;		___aodiv
 16536 ;;		___aomod
 16537 ;;		_abs
 16538 ;;		_pad
 16539 ;; This function is called by:
 16540 ;;		_vfpfcnvrt
 16541 ;; This function uses a reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text54
 16545  0132E2                     __ptext54:
 16546                           	opt callstack 0
 16547  0132E2                     _dtoa:
 16548                           	opt callstack 0
 16549                           
 16550                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16551  0132E2  0E12               	movlw	18
 16552  0132E4  26E1               	addwf	fsr1l,f,c
 16553  0132E6  0E00               	movlw	0
 16554  0132E8  22E2               	addwfc	fsr1h,f,c
 16555                           
 16556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16557                           ;stkvar	_d @ sp[(-18)+-10]
 16558                           
 16559                           ;incstack = 0
 16560  0132EA  0EE4               	movlw	228
 16561  0132EC  24E1               	addwf	fsr1l,w,c
 16562  0132EE  6ED9               	movwf	fsr2l,c
 16563  0132F0  0EFF               	movlw	255
 16564  0132F2  20E2               	addwfc	fsr1h,w,c
 16565  0132F4  6EDA               	movwf	fsr2h,c
 16566                           
 16567                           ;stkvar	_n @ sp[(-18)+2]
 16568  0132F6  0E08               	movlw	8
 16569  0132F8  6E35               	movwf	btemp^0,c
 16570  0132FA  0EF0               	movlw	-16
 16571  0132FC                     us835999:
 16572  0132FC  006F FF7B FFE3     	movff	postinc2,plusw1
 16573  013302  28E8               	incf	wreg,w,c
 16574  013304  2E35               	decfsz	btemp^0,f,c
 16575  013306  D7FA               	bra	us835999
 16576                           
 16577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16578                           ;stkvar	_n @ sp[(-18)+2]
 16579  013308  0EF7               	movlw	-9
 16580  01330A  AEE3               	btfss	plusw1,7,c
 16581  01330C  D002               	goto	u8360
 16582  01330E  0E01               	movlw	1
 16583  013310  D001               	goto	u8370
 16584  013312                     u8360:
 16585  013312  0E00               	movlw	0
 16586  013314                     u8370:
 16587  013314  6E3F               	movwf	(btemp+10)^0,c
 16588  013316  6A40               	clrf	(btemp+11)^0,c
 16589                           
 16590                           ;stkvar	_s @ sp[(-18)+12]
 16591  013318  0EFA               	movlw	-6
 16592  01331A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16593  013320  0EFB               	movlw	-5
 16594  013322  0060  F103  FFE3   	movff	btemp+11,plusw1
 16595                           
 16596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16597                           ;stkvar	_s @ sp[(-18)+12]
 16598  013328  0EFA               	movlw	-6
 16599  01332A  006F FF8C  F035    	movff	plusw1,btemp
 16600  013330  0EFB               	movlw	-5
 16601  013332  50E3               	movf	plusw1,w,c
 16602  013334  1035               	iorwf	btemp^0,w,c
 16603  013336  B4D8               	btfsc	status,2,c
 16604  013338  D025               	goto	u8390
 16605                           
 16606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16607                           ;stkvar	_n @ sp[(-18)+2]
 16608                           ;stkvar	_n @ sp[(-18)+2]
 16609  01333A  0EF0               	movlw	-16
 16610  01333C  6CE3               	negf	plusw1,c
 16611  01333E  0EF1               	movlw	-15
 16612  013340  1EE3               	comf	plusw1,f,c
 16613  013342  0EF2               	movlw	-14
 16614  013344  1EE3               	comf	plusw1,f,c
 16615  013346  0EF3               	movlw	-13
 16616  013348  1EE3               	comf	plusw1,f,c
 16617  01334A  0EF4               	movlw	-12
 16618  01334C  1EE3               	comf	plusw1,f,c
 16619  01334E  0EF5               	movlw	-11
 16620  013350  1EE3               	comf	plusw1,f,c
 16621  013352  0EF6               	movlw	-10
 16622  013354  1EE3               	comf	plusw1,f,c
 16623  013356  0EF7               	movlw	-9
 16624  013358  1EE3               	comf	plusw1,f,c
 16625  01335A  E314               	bnc	u8390
 16626  01335C  0EF1               	movlw	-15
 16627  01335E  2AE3               	incf	plusw1,f,c
 16628  013360  E311               	bnc	u8390
 16629  013362  0EF2               	movlw	-14
 16630  013364  2AE3               	incf	plusw1,f,c
 16631  013366  E30E               	bnc	u8390
 16632  013368  0EF3               	movlw	-13
 16633  01336A  2AE3               	incf	plusw1,f,c
 16634  01336C  E30B               	bnc	u8390
 16635  01336E  0EF4               	movlw	-12
 16636  013370  2AE3               	incf	plusw1,f,c
 16637  013372  E308               	bnc	u8390
 16638  013374  0EF5               	movlw	-11
 16639  013376  2AE3               	incf	plusw1,f,c
 16640  013378  E305               	bnc	u8390
 16641  01337A  0EF6               	movlw	-10
 16642  01337C  2AE3               	incf	plusw1,f,c
 16643  01337E  E302               	bnc	u8390
 16644  013380  0EF7               	movlw	-9
 16645  013382  2AE3               	incf	plusw1,f,c
 16646  013384                     u8390:
 16647                           
 16648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16649  013384  AE21               	btfss	(_prec+1)^0,7,c
 16650                           
 16651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16652  013386  9222               	bcf	_flags^0,1,c
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16655  013388  BE21               	btfsc	(_prec+1)^0,7,c
 16656  01338A  D005               	goto	u8410
 16657  01338C  5021               	movf	(_prec+1)^0,w,c
 16658  01338E  E110               	bnz	l8860
 16659  013390  0420               	decf	_prec^0,w,c
 16660  013392  B0D8               	btfsc	status,0,c
 16661  013394  D00D               	goto	l8860
 16662  013396                     u8410:
 16663  013396  0E01               	movlw	1
 16664  013398  6E3F               	movwf	(btemp+10)^0,c
 16665  01339A  0E00               	movlw	0
 16666  01339C  6E40               	movwf	(btemp+11)^0,c
 16667                           
 16668                           ;stkvar	_p @ sp[(-18)+16]
 16669  01339E  0EFE               	movlw	-2
 16670  0133A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16671  0133A6  0EFF               	movlw	-1
 16672  0133A8  0060  F103  FFE3   	movff	btemp+11,plusw1
 16673  0133AE  D008               	goto	l1734
 16674  0133B0                     l8860:
 16675                           
 16676                           ;stkvar	_p @ sp[(-18)+16]
 16677  0133B0  0EFE               	movlw	-2
 16678  0133B2  0060  F083  FFE3   	movff	_prec,plusw1
 16679  0133B8  0EFF               	movlw	-1
 16680  0133BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 16681  0133C0                     l1734:
 16682                           
 16683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16684                           ;stkvar	_w @ sp[(-18)+14]
 16685  0133C0  0EFC               	movlw	-4
 16686  0133C2  0060  F07B  FFE3   	movff	_width,plusw1
 16687  0133C8  0EFD               	movlw	-3
 16688  0133CA  0060  F07F  FFE3   	movff	_width+1,plusw1
 16689                           
 16690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16691                           ;stkvar	_s @ sp[(-18)+12]
 16692  0133D0  0EFA               	movlw	-6
 16693  0133D2  006F FF8C  F035    	movff	plusw1,btemp
 16694  0133D8  0EFB               	movlw	-5
 16695  0133DA  50E3               	movf	plusw1,w,c
 16696  0133DC  1035               	iorwf	btemp^0,w,c
 16697  0133DE  A4D8               	btfss	status,2,c
 16698  0133E0  D002               	goto	u8430
 16699  0133E2  A422               	btfss	_flags^0,2,c
 16700  0133E4  D00A               	goto	l8868
 16701  0133E6                     u8430:
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16704                           ;stkvar	_w @ sp[(-18)+14]
 16705  0133E6  50E1               	movf	fsr1l,w,c
 16706  0133E8  0FFC               	addlw	-4
 16707  0133EA  6ED9               	movwf	fsr2l,c
 16708  0133EC  50E2               	movf	fsr1h,w,c
 16709  0133EE  6EDA               	movwf	fsr2h,c
 16710  0133F0  0EFF               	movlw	255
 16711  0133F2  22DA               	addwfc	fsr2h,f,c
 16712  0133F4  06DE               	decf	postinc2,f,c
 16713  0133F6  0E00               	movlw	0
 16714  0133F8  5ADD               	subwfb	postdec2,f,c
 16715  0133FA                     l8868:
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16718  0133FA  0E4F               	movlw	79
 16719  0133FC  6E3F               	movwf	(btemp+10)^0,c
 16720  0133FE  0E00               	movlw	0
 16721  013400  6E40               	movwf	(btemp+11)^0,c
 16722                           
 16723                           ;stkvar	_i @ sp[(-18)+10]
 16724  013402  0EF8               	movlw	-8
 16725  013404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16726  01340A  0EF9               	movlw	-7
 16727  01340C  0060  F103  FFE3   	movff	btemp+11,plusw1
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16730  013412  0101               	movlb	1	; () banked
 16731  013414  6BF7               	clrf	(_dbuf+79)& (0+255),b
 16732                           
 16733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16734  013416  D109               	goto	l8882
 16735  013418                     l8872:
 16736                           
 16737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16738                           ;stkvar	_i @ sp[(-18)+10]
 16739  013418  50E1               	movf	fsr1l,w,c
 16740  01341A  0FF8               	addlw	-8
 16741  01341C  6ED9               	movwf	fsr2l,c
 16742  01341E  50E2               	movf	fsr1h,w,c
 16743  013420  6EDA               	movwf	fsr2h,c
 16744  013422  0EFF               	movlw	255
 16745  013424  22DA               	addwfc	fsr2h,f,c
 16746  013426  06DE               	decf	postinc2,f,c
 16747  013428  0E00               	movlw	0
 16748  01342A  5ADD               	subwfb	postdec2,f,c
 16749                           
 16750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16751  01342C  0E0A               	movlw	10
 16752  01342E  6EE6               	movwf	postinc1,c
 16753  013430  0E00               	movlw	0
 16754  013432  6EE6               	movwf	postinc1,c
 16755  013434  0E00               	movlw	0
 16756  013436  6EE6               	movwf	postinc1,c
 16757  013438  0E00               	movlw	0
 16758  01343A  6EE6               	movwf	postinc1,c
 16759  01343C  0E00               	movlw	0
 16760  01343E  6EE6               	movwf	postinc1,c
 16761  013440  0E00               	movlw	0
 16762  013442  6EE6               	movwf	postinc1,c
 16763  013444  0E00               	movlw	0
 16764  013446  6EE6               	movwf	postinc1,c
 16765  013448  0E00               	movlw	0
 16766  01344A  6EE6               	movwf	postinc1,c
 16767                           
 16768                           ;stkvar	_n @ sp[(-26)+2]
 16769  01344C  50E1               	movf	fsr1l,w,c
 16770  01344E  0FE8               	addlw	-24
 16771  013450  6ED9               	movwf	fsr2l,c
 16772  013452  50E2               	movf	fsr1h,w,c
 16773  013454  6EDA               	movwf	fsr2h,c
 16774  013456  0EFF               	movlw	255
 16775  013458  22DA               	addwfc	fsr2h,f,c
 16776  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 16777  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 16778  013466  006F FF7B FFE6     	movff	postinc2,postinc1
 16779  01346C  006F FF7B FFE6     	movff	postinc2,postinc1
 16780  013472  006F FF7B FFE6     	movff	postinc2,postinc1
 16781  013478  006F FF7B FFE6     	movff	postinc2,postinc1
 16782  01347E  006F FF7B FFE6     	movff	postinc2,postinc1
 16783  013484  006F FF7B FFE6     	movff	postinc2,postinc1
 16784  01348A  EC72  F0A6         	call	___aomod	;wreg free
 16785  01348E  52E5               	movf	postdec1,f,c
 16786  013490  006F FF9C  F04C    	movff	indf1,btemp+23
 16787  013496  52E5               	movf	postdec1,f,c
 16788  013498  006F FF9C  F04B    	movff	indf1,btemp+22
 16789  01349E  52E5               	movf	postdec1,f,c
 16790  0134A0  006F FF9C  F04A    	movff	indf1,btemp+21
 16791  0134A6  52E5               	movf	postdec1,f,c
 16792  0134A8  006F FF9C  F049    	movff	indf1,btemp+20
 16793  0134AE  52E5               	movf	postdec1,f,c
 16794  0134B0  006F FF9C  F048    	movff	indf1,btemp+19
 16795  0134B6  52E5               	movf	postdec1,f,c
 16796  0134B8  006F FF9C  F047    	movff	indf1,btemp+18
 16797  0134BE  52E5               	movf	postdec1,f,c
 16798  0134C0  006F FF9C  F046    	movff	indf1,btemp+17
 16799  0134C6  52E5               	movf	postdec1,f,c
 16800  0134C8  006F FF9C  F045    	movff	indf1,btemp+16
 16801  0134CE  0EF8               	movlw	248
 16802  0134D0  26E1               	addwf	fsr1l,f,c
 16803  0134D2  0EFF               	movlw	255
 16804  0134D4  22E2               	addwfc	fsr1h,f,c
 16805  0134D6  0060  F114  F03F   	movff	btemp+16,btemp+10
 16806  0134DC  0060  F118  F040   	movff	btemp+17,btemp+11
 16807  0134E2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 16808  0134E8  0060  F103  FFE6   	movff	btemp+11,postinc1
 16809  0134EE  EC63  F0B9         	call	_abs	;wreg free
 16810  0134F2  0E30               	movlw	48
 16811  0134F4  2635               	addwf	btemp^0,f,c
 16812                           
 16813                           ;stkvar	_i @ sp[(-18)+10]
 16814  0134F6  0EF8               	movlw	-8
 16815  0134F8  006F FF8C  F03F    	movff	plusw1,btemp+10
 16816  0134FE  0EF9               	movlw	-7
 16817  013500  006F FF8C  F040    	movff	plusw1,btemp+11
 16818  013506  0EA8               	movlw	low _dbuf
 16819  013508  243F               	addwf	(btemp+10)^0,w,c
 16820  01350A  6ED9               	movwf	fsr2l,c
 16821  01350C  0E01               	movlw	high _dbuf
 16822  01350E  2040               	addwfc	(btemp+11)^0,w,c
 16823  013510  6EDA               	movwf	fsr2h,c
 16824  013512  0060  F0D7  FFDF   	movff	btemp,indf2
 16825                           
 16826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16827                           ;stkvar	_p @ sp[(-18)+16]
 16828  013518  50E1               	movf	fsr1l,w,c
 16829  01351A  0FFE               	addlw	-2
 16830  01351C  6ED9               	movwf	fsr2l,c
 16831  01351E  50E2               	movf	fsr1h,w,c
 16832  013520  6EDA               	movwf	fsr2h,c
 16833  013522  0EFF               	movlw	255
 16834  013524  22DA               	addwfc	fsr2h,f,c
 16835  013526  06DE               	decf	postinc2,f,c
 16836  013528  0E00               	movlw	0
 16837  01352A  5ADD               	subwfb	postdec2,f,c
 16838                           
 16839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16840                           ;stkvar	_w @ sp[(-18)+14]
 16841  01352C  50E1               	movf	fsr1l,w,c
 16842  01352E  0FFC               	addlw	-4
 16843  013530  6ED9               	movwf	fsr2l,c
 16844  013532  50E2               	movf	fsr1h,w,c
 16845  013534  6EDA               	movwf	fsr2h,c
 16846  013536  0EFF               	movlw	255
 16847  013538  22DA               	addwfc	fsr2h,f,c
 16848  01353A  06DE               	decf	postinc2,f,c
 16849  01353C  0E00               	movlw	0
 16850  01353E  5ADD               	subwfb	postdec2,f,c
 16851                           
 16852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16853  013540  0E0A               	movlw	10
 16854  013542  6EE6               	movwf	postinc1,c
 16855  013544  0E00               	movlw	0
 16856  013546  6EE6               	movwf	postinc1,c
 16857  013548  0E00               	movlw	0
 16858  01354A  6EE6               	movwf	postinc1,c
 16859  01354C  0E00               	movlw	0
 16860  01354E  6EE6               	movwf	postinc1,c
 16861  013550  0E00               	movlw	0
 16862  013552  6EE6               	movwf	postinc1,c
 16863  013554  0E00               	movlw	0
 16864  013556  6EE6               	movwf	postinc1,c
 16865  013558  0E00               	movlw	0
 16866  01355A  6EE6               	movwf	postinc1,c
 16867  01355C  0E00               	movlw	0
 16868  01355E  6EE6               	movwf	postinc1,c
 16869                           
 16870                           ;stkvar	_n @ sp[(-26)+2]
 16871  013560  50E1               	movf	fsr1l,w,c
 16872  013562  0FE8               	addlw	-24
 16873  013564  6ED9               	movwf	fsr2l,c
 16874  013566  50E2               	movf	fsr1h,w,c
 16875  013568  6EDA               	movwf	fsr2h,c
 16876  01356A  0EFF               	movlw	255
 16877  01356C  22DA               	addwfc	fsr2h,f,c
 16878  01356E  006F FF7B FFE6     	movff	postinc2,postinc1
 16879  013574  006F FF7B FFE6     	movff	postinc2,postinc1
 16880  01357A  006F FF7B FFE6     	movff	postinc2,postinc1
 16881  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 16882  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 16883  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 16884  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 16885  013598  006F FF7B FFE6     	movff	postinc2,postinc1
 16886  01359E  ECF8  F0A3         	call	___aodiv	;wreg free
 16887  0135A2  52E5               	movf	postdec1,f,c
 16888  0135A4  006F FF9C  F04C    	movff	indf1,btemp+23
 16889  0135AA  52E5               	movf	postdec1,f,c
 16890  0135AC  006F FF9C  F04B    	movff	indf1,btemp+22
 16891  0135B2  52E5               	movf	postdec1,f,c
 16892  0135B4  006F FF9C  F04A    	movff	indf1,btemp+21
 16893  0135BA  52E5               	movf	postdec1,f,c
 16894  0135BC  006F FF9C  F049    	movff	indf1,btemp+20
 16895  0135C2  52E5               	movf	postdec1,f,c
 16896  0135C4  006F FF9C  F048    	movff	indf1,btemp+19
 16897  0135CA  52E5               	movf	postdec1,f,c
 16898  0135CC  006F FF9C  F047    	movff	indf1,btemp+18
 16899  0135D2  52E5               	movf	postdec1,f,c
 16900  0135D4  006F FF9C  F046    	movff	indf1,btemp+17
 16901  0135DA  52E5               	movf	postdec1,f,c
 16902  0135DC  006F FF9C  F045    	movff	indf1,btemp+16
 16903  0135E2  0EF8               	movlw	248
 16904  0135E4  26E1               	addwf	fsr1l,f,c
 16905  0135E6  0EFF               	movlw	255
 16906  0135E8  22E2               	addwfc	fsr1h,f,c
 16907                           
 16908                           ;stkvar	_n @ sp[(-18)+2]
 16909  0135EA  0EF0               	movlw	-16
 16910  0135EC  0060  F117  FFE3   	movff	btemp+16,plusw1
 16911  0135F2  0EF1               	movlw	-15
 16912  0135F4  0060  F11B  FFE3   	movff	btemp+17,plusw1
 16913  0135FA  0EF2               	movlw	-14
 16914  0135FC  0060  F11F  FFE3   	movff	btemp+18,plusw1
 16915  013602  0EF3               	movlw	-13
 16916  013604  0060  F123  FFE3   	movff	btemp+19,plusw1
 16917  01360A  0EF4               	movlw	-12
 16918  01360C  0060  F127  FFE3   	movff	btemp+20,plusw1
 16919  013612  0EF5               	movlw	-11
 16920  013614  0060  F12B  FFE3   	movff	btemp+21,plusw1
 16921  01361A  0EF6               	movlw	-10
 16922  01361C  0060  F12F  FFE3   	movff	btemp+22,plusw1
 16923  013622  0EF7               	movlw	-9
 16924  013624  0060  F133  FFE3   	movff	btemp+23,plusw1
 16925  01362A                     l8882:
 16926                           
 16927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16928                           ;stkvar	_i @ sp[(-18)+10]
 16929  01362A  0EF9               	movlw	-7
 16930  01362C  BEE3               	btfsc	plusw1,7,c
 16931  01362E  D036               	goto	u8480
 16932  013630  0EF9               	movlw	-7
 16933  013632  50E3               	movf	plusw1,w,c
 16934  013634  E104               	bnz	u8440
 16935  013636  0EF8               	movlw	-8
 16936  013638  04E3               	decf	plusw1,w,c
 16937  01363A  A0D8               	btfss	status,0,c
 16938  01363C  D02F               	goto	u8480
 16939  01363E                     u8440:
 16940                           
 16941                           ;stkvar	_n @ sp[(-18)+2]
 16942  01363E  0EF0               	movlw	-16
 16943  013640  50E3               	movf	plusw1,w,c
 16944  013642  E115               	bnz	u8451
 16945  013644  0EF1               	movlw	-15
 16946  013646  50E3               	movf	plusw1,w,c
 16947  013648  E112               	bnz	u8451
 16948  01364A  0EF2               	movlw	-14
 16949  01364C  50E3               	movf	plusw1,w,c
 16950  01364E  E10F               	bnz	u8451
 16951  013650  0EF3               	movlw	-13
 16952  013652  50E3               	movf	plusw1,w,c
 16953  013654  E10C               	bnz	u8451
 16954  013656  0EF4               	movlw	-12
 16955  013658  50E3               	movf	plusw1,w,c
 16956  01365A  E109               	bnz	u8451
 16957  01365C  0EF5               	movlw	-11
 16958  01365E  50E3               	movf	plusw1,w,c
 16959  013660  E106               	bnz	u8451
 16960  013662  0EF6               	movlw	-10
 16961  013664  50E3               	movf	plusw1,w,c
 16962  013666  E103               	bnz	u8451
 16963  013668  0EF7               	movlw	-9
 16964  01366A  50E3               	movf	plusw1,w,c
 16965  01366C  A4D8               	btfss	status,2,c
 16966  01366E                     u8451:
 16967  01366E  D6D4               	goto	l8872
 16968                           
 16969                           ;stkvar	_p @ sp[(-18)+16]
 16970  013670  0EFF               	movlw	-1
 16971  013672  BEE3               	btfsc	plusw1,7,c
 16972  013674  D007               	goto	u8460
 16973  013676  0EFF               	movlw	-1
 16974  013678  50E3               	movf	plusw1,w,c
 16975  01367A  E103               	bnz	u8461
 16976  01367C  0EFE               	movlw	-2
 16977  01367E  04E3               	decf	plusw1,w,c
 16978  013680  B0D8               	btfsc	status,0,c
 16979  013682                     u8461:
 16980  013682  D6CA               	goto	l8872
 16981  013684                     u8460:
 16982                           
 16983                           ;stkvar	_w @ sp[(-18)+14]
 16984  013684  0EFD               	movlw	-3
 16985  013686  BEE3               	btfsc	plusw1,7,c
 16986  013688  D009               	goto	u8480
 16987  01368A  0EFD               	movlw	-3
 16988  01368C  50E3               	movf	plusw1,w,c
 16989  01368E  E104               	bnz	u8470
 16990  013690  0EFC               	movlw	-4
 16991  013692  04E3               	decf	plusw1,w,c
 16992  013694  A0D8               	btfss	status,0,c
 16993  013696  D002               	goto	u8480
 16994  013698                     u8470:
 16995  013698  B222               	btfsc	_flags^0,1,c
 16996  01369A  D6BE               	goto	l8872
 16997  01369C                     u8480:
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17000                           ;stkvar	_s @ sp[(-18)+12]
 17001  01369C  0EFA               	movlw	-6
 17002  01369E  006F FF8C  F035    	movff	plusw1,btemp
 17003  0136A4  0EFB               	movlw	-5
 17004  0136A6  50E3               	movf	plusw1,w,c
 17005  0136A8  1035               	iorwf	btemp^0,w,c
 17006  0136AA  A4D8               	btfss	status,2,c
 17007  0136AC  D002               	goto	u8500
 17008  0136AE  A422               	btfss	_flags^0,2,c
 17009  0136B0  D033               	goto	l8906
 17010  0136B2                     u8500:
 17011                           
 17012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17013                           ;stkvar	_i @ sp[(-18)+10]
 17014  0136B2  50E1               	movf	fsr1l,w,c
 17015  0136B4  0FF8               	addlw	-8
 17016  0136B6  6ED9               	movwf	fsr2l,c
 17017  0136B8  50E2               	movf	fsr1h,w,c
 17018  0136BA  6EDA               	movwf	fsr2h,c
 17019  0136BC  0EFF               	movlw	255
 17020  0136BE  22DA               	addwfc	fsr2h,f,c
 17021  0136C0  06DE               	decf	postinc2,f,c
 17022  0136C2  0E00               	movlw	0
 17023  0136C4  5ADD               	subwfb	postdec2,f,c
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17026                           ;stkvar	_s @ sp[(-18)+12]
 17027  0136C6  0EFA               	movlw	-6
 17028  0136C8  006F FF8C  F035    	movff	plusw1,btemp
 17029  0136CE  0EFB               	movlw	-5
 17030  0136D0  50E3               	movf	plusw1,w,c
 17031  0136D2  1035               	iorwf	btemp^0,w,c
 17032  0136D4  A4D8               	btfss	status,2,c
 17033  0136D6  D002               	goto	l8902
 17034  0136D8  0E2B               	movlw	43
 17035  0136DA  D001               	goto	L14
 17036  0136DC                     l8902:
 17037  0136DC  0E2D               	movlw	45
 17038  0136DE                     L14:
 17039  0136DE  6E3F               	movwf	(btemp+10)^0,c
 17040  0136E0  0E00               	movlw	0
 17041  0136E2  6E40               	movwf	(btemp+11)^0,c
 17042                           
 17043                           ;stkvar	_dtoa$4066 @ sp[(-18)+0]
 17044  0136E4  0EEE               	movlw	-18
 17045  0136E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17046  0136EC  0EEF               	movlw	-17
 17047  0136EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17048                           
 17049                           ;stkvar	_dtoa$4066 @ sp[(-18)+0]
 17050                           ;stkvar	_i @ sp[(-18)+10]
 17051  0136F4  0EF8               	movlw	-8
 17052  0136F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 17053  0136FC  0EF9               	movlw	-7
 17054  0136FE  006F FF8C  F040    	movff	plusw1,btemp+11
 17055  013704  0EA8               	movlw	low _dbuf
 17056  013706  243F               	addwf	(btemp+10)^0,w,c
 17057  013708  6ED9               	movwf	fsr2l,c
 17058  01370A  0E01               	movlw	high _dbuf
 17059  01370C  2040               	addwfc	(btemp+11)^0,w,c
 17060  01370E  6EDA               	movwf	fsr2h,c
 17061  013710  0EEE               	movlw	-18
 17062  013712  006F FF8F FFDF     	movff	plusw1,indf2
 17063  013718                     l8906:
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17066                           ;stkvar	_w @ sp[(-18)+14]
 17067  013718  0EFC               	movlw	-4
 17068  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 17069  013720  006F FF8F FFE6     	movff	plusw1,postinc1
 17070                           
 17071                           ;stkvar	_i @ sp[(-20)+10]
 17072  013726  0EA8               	movlw	low _dbuf
 17073  013728  6E3F               	movwf	(btemp+10)^0,c
 17074  01372A  0E01               	movlw	high _dbuf
 17075  01372C  6E40               	movwf	(btemp+11)^0,c
 17076  01372E  0EF6               	movlw	-10
 17077  013730  50E3               	movf	plusw1,w,c
 17078  013732  263F               	addwf	(btemp+10)^0,f,c
 17079  013734  0EF7               	movlw	-9
 17080  013736  50E3               	movf	plusw1,w,c
 17081  013738  2240               	addwfc	(btemp+11)^0,f,c
 17082  01373A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17083  013740  0060  F103  FFE6   	movff	btemp+11,postinc1
 17084                           
 17085                           ;stkvar	_fp @ sp[(-22)+-2]
 17086  013746  0EE8               	movlw	-24
 17087  013748  006F FF8F FFE6     	movff	plusw1,postinc1
 17088  01374E  006F FF8F FFE6     	movff	plusw1,postinc1
 17089  013754  ECD6  F0AF         	call	_pad	;wreg free
 17090                           
 17091                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17092  013758  0EE4               	movlw	228
 17093  01375A  26E1               	addwf	fsr1l,f,c
 17094  01375C  0EFF               	movlw	255
 17095  01375E  22E2               	addwfc	fsr1h,f,c
 17096  013760  0012               	return		;funcret
 17097  013762                     __end_of_dtoa:
 17098                           	opt callstack 0
 17099                           
 17100 ;; *************** function _abs *****************
 17101 ;; Defined at:
 17102 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  a               2  [STACK] int 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;		None
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  2  [STACK] int 
 17109 ;; Registers used:
 17110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/1
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17120 ;;Total ram usage:        0 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; Hardware stack levels required when called:    6
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		_dtoa
 17127 ;; This function uses a reentrant model
 17128 ;;
 17129                           
 17130                           	psect	text55
 17131  0172C6                     __ptext55:
 17132                           	opt callstack 0
 17133  0172C6                     _abs:
 17134                           	opt callstack 17
 17135                           
 17136                           ;stkvar	_a @ sp[(0)+-2]
 17137                           
 17138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17139                           ;incstack = 0
 17140  0172C6  0EFF               	movlw	-1
 17141  0172C8  BEE3               	btfsc	plusw1,7,c
 17142  0172CA  D007               	goto	u4730
 17143  0172CC  0EFF               	movlw	-1
 17144  0172CE  50E3               	movf	plusw1,w,c
 17145  0172D0  E112               	bnz	l6116
 17146  0172D2  0EFE               	movlw	-2
 17147  0172D4  04E3               	decf	plusw1,w,c
 17148  0172D6  B0D8               	btfsc	status,0,c
 17149  0172D8  D00E               	goto	l6116
 17150  0172DA                     u4730:
 17151                           
 17152                           ;stkvar	_a @ sp[(0)+-2]
 17153  0172DA  0EFE               	movlw	-2
 17154  0172DC  006F FF8C  F035    	movff	plusw1,btemp
 17155  0172E2  1E35               	comf	btemp^0,f,c
 17156  0172E4  0EFF               	movlw	-1
 17157  0172E6  006F FF8C  F036    	movff	plusw1,btemp+1
 17158  0172EC  1E36               	comf	(btemp+1)^0,f,c
 17159  0172EE  2A35               	incf	btemp^0,f,c
 17160  0172F0  B4D8               	btfsc	status,2,c
 17161  0172F2  2A36               	incf	(btemp+1)^0,f,c
 17162  0172F4  D008               	goto	l2637
 17163  0172F6                     l6116:
 17164                           
 17165                           ;stkvar	_a @ sp[(0)+-2]
 17166  0172F6  0EFE               	movlw	-2
 17167  0172F8  006F FF8C  F035    	movff	plusw1,btemp
 17168  0172FE  0EFF               	movlw	-1
 17169  017300  006F FF8C  F036    	movff	plusw1,btemp+1
 17170  017306                     l2637:
 17171                           
 17172                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17173  017306  52E5               	movf	postdec1,f,c
 17174  017308  52E5               	movf	postdec1,f,c
 17175  01730A  0012               	return		;funcret
 17176  01730C                     __end_of_abs:
 17177                           	opt callstack 0
 17178                           
 17179 ;; *************** function ___aomod *****************
 17180 ;; Defined at:
 17181 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;  dividend        8  [STACK] long long 
 17184 ;;  divisor         8  [STACK] long long 
 17185 ;; Auto vars:     Size  Location     Type
 17186 ;;  sign            1  [STACK] unsigned char 
 17187 ;;  counter         1  [STACK] unsigned char 
 17188 ;; Return value:  Size  Location     Type
 17189 ;;                  8  [STACK] long long 
 17190 ;; Registers used:
 17191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17192 ;; Tracked objects:
 17193 ;;		On entry : 0/1
 17194 ;;		On exit  : 0/0
 17195 ;;		Unchanged: 0/0
 17196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17201 ;;Total ram usage:        0 bytes
 17202 ;; Hardware stack levels used:    1
 17203 ;; Hardware stack levels required when called:    6
 17204 ;; This function calls:
 17205 ;;		Nothing
 17206 ;; This function is called by:
 17207 ;;		_dtoa
 17208 ;; This function uses a reentrant model
 17209 ;;
 17210                           
 17211                           	psect	text56
 17212  014CE4                     __ptext56:
 17213                           	opt callstack 0
 17214  014CE4                     ___aomod:
 17215                           	opt callstack 0
 17216                           
 17217                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17218  014CE4  52E6               	movf	postinc1,f,c
 17219  014CE6  52E6               	movf	postinc1,f,c
 17220                           
 17221                           ;stkvar	_sign @ sp[(-2)+0]
 17222                           
 17223                           ;incstack = 0
 17224  014CE8  0EFE               	movlw	-2
 17225  014CEA  6AE3               	clrf	plusw1,c
 17226                           
 17227                           ;stkvar	_dividend @ sp[(-2)+-8]
 17228  014CEC  0EFD               	movlw	-3
 17229  014CEE  AEE3               	btfss	plusw1,7,c
 17230  014CF0  D028               	goto	l6274
 17231                           
 17232                           ;stkvar	_dividend @ sp[(-2)+-8]
 17233                           ;stkvar	_dividend @ sp[(-2)+-8]
 17234  014CF2  0EF6               	movlw	-10
 17235  014CF4  6CE3               	negf	plusw1,c
 17236  014CF6  0EF7               	movlw	-9
 17237  014CF8  1EE3               	comf	plusw1,f,c
 17238  014CFA  0EF8               	movlw	-8
 17239  014CFC  1EE3               	comf	plusw1,f,c
 17240  014CFE  0EF9               	movlw	-7
 17241  014D00  1EE3               	comf	plusw1,f,c
 17242  014D02  0EFA               	movlw	-6
 17243  014D04  1EE3               	comf	plusw1,f,c
 17244  014D06  0EFB               	movlw	-5
 17245  014D08  1EE3               	comf	plusw1,f,c
 17246  014D0A  0EFC               	movlw	-4
 17247  014D0C  1EE3               	comf	plusw1,f,c
 17248  014D0E  0EFD               	movlw	-3
 17249  014D10  1EE3               	comf	plusw1,f,c
 17250  014D12  E314               	bnc	u5160
 17251  014D14  0EF7               	movlw	-9
 17252  014D16  2AE3               	incf	plusw1,f,c
 17253  014D18  E311               	bnc	u5160
 17254  014D1A  0EF8               	movlw	-8
 17255  014D1C  2AE3               	incf	plusw1,f,c
 17256  014D1E  E30E               	bnc	u5160
 17257  014D20  0EF9               	movlw	-7
 17258  014D22  2AE3               	incf	plusw1,f,c
 17259  014D24  E30B               	bnc	u5160
 17260  014D26  0EFA               	movlw	-6
 17261  014D28  2AE3               	incf	plusw1,f,c
 17262  014D2A  E308               	bnc	u5160
 17263  014D2C  0EFB               	movlw	-5
 17264  014D2E  2AE3               	incf	plusw1,f,c
 17265  014D30  E305               	bnc	u5160
 17266  014D32  0EFC               	movlw	-4
 17267  014D34  2AE3               	incf	plusw1,f,c
 17268  014D36  E302               	bnc	u5160
 17269  014D38  0EFD               	movlw	-3
 17270  014D3A  2AE3               	incf	plusw1,f,c
 17271  014D3C                     u5160:
 17272                           
 17273                           ;stkvar	_sign @ sp[(-2)+0]
 17274  014D3C  0EFE               	movlw	-2
 17275  014D3E  6AE3               	clrf	plusw1,c
 17276  014D40  2AE3               	incf	plusw1,f,c
 17277  014D42                     l6274:
 17278                           
 17279                           ;stkvar	_divisor @ sp[(-2)+-16]
 17280  014D42  0EF5               	movlw	-11
 17281  014D44  AEE3               	btfss	plusw1,7,c
 17282  014D46  D025               	goto	u5180
 17283                           
 17284                           ;stkvar	_divisor @ sp[(-2)+-16]
 17285                           ;stkvar	_divisor @ sp[(-2)+-16]
 17286  014D48  0EEE               	movlw	-18
 17287  014D4A  6CE3               	negf	plusw1,c
 17288  014D4C  0EEF               	movlw	-17
 17289  014D4E  1EE3               	comf	plusw1,f,c
 17290  014D50  0EF0               	movlw	-16
 17291  014D52  1EE3               	comf	plusw1,f,c
 17292  014D54  0EF1               	movlw	-15
 17293  014D56  1EE3               	comf	plusw1,f,c
 17294  014D58  0EF2               	movlw	-14
 17295  014D5A  1EE3               	comf	plusw1,f,c
 17296  014D5C  0EF3               	movlw	-13
 17297  014D5E  1EE3               	comf	plusw1,f,c
 17298  014D60  0EF4               	movlw	-12
 17299  014D62  1EE3               	comf	plusw1,f,c
 17300  014D64  0EF5               	movlw	-11
 17301  014D66  1EE3               	comf	plusw1,f,c
 17302  014D68  E314               	bnc	u5180
 17303  014D6A  0EEF               	movlw	-17
 17304  014D6C  2AE3               	incf	plusw1,f,c
 17305  014D6E  E311               	bnc	u5180
 17306  014D70  0EF0               	movlw	-16
 17307  014D72  2AE3               	incf	plusw1,f,c
 17308  014D74  E30E               	bnc	u5180
 17309  014D76  0EF1               	movlw	-15
 17310  014D78  2AE3               	incf	plusw1,f,c
 17311  014D7A  E30B               	bnc	u5180
 17312  014D7C  0EF2               	movlw	-14
 17313  014D7E  2AE3               	incf	plusw1,f,c
 17314  014D80  E308               	bnc	u5180
 17315  014D82  0EF3               	movlw	-13
 17316  014D84  2AE3               	incf	plusw1,f,c
 17317  014D86  E305               	bnc	u5180
 17318  014D88  0EF4               	movlw	-12
 17319  014D8A  2AE3               	incf	plusw1,f,c
 17320  014D8C  E302               	bnc	u5180
 17321  014D8E  0EF5               	movlw	-11
 17322  014D90  2AE3               	incf	plusw1,f,c
 17323  014D92                     u5180:
 17324                           
 17325                           ;stkvar	_divisor @ sp[(-2)+-16]
 17326  014D92  0EEE               	movlw	-18
 17327  014D94  50E3               	movf	plusw1,w,c
 17328  014D96  E116               	bnz	u5190
 17329  014D98  0EEF               	movlw	-17
 17330  014D9A  50E3               	movf	plusw1,w,c
 17331  014D9C  E113               	bnz	u5190
 17332  014D9E  0EF0               	movlw	-16
 17333  014DA0  50E3               	movf	plusw1,w,c
 17334  014DA2  E110               	bnz	u5190
 17335  014DA4  0EF1               	movlw	-15
 17336  014DA6  50E3               	movf	plusw1,w,c
 17337  014DA8  E10D               	bnz	u5190
 17338  014DAA  0EF2               	movlw	-14
 17339  014DAC  50E3               	movf	plusw1,w,c
 17340  014DAE  E10A               	bnz	u5190
 17341  014DB0  0EF3               	movlw	-13
 17342  014DB2  50E3               	movf	plusw1,w,c
 17343  014DB4  E107               	bnz	u5190
 17344  014DB6  0EF4               	movlw	-12
 17345  014DB8  50E3               	movf	plusw1,w,c
 17346  014DBA  E104               	bnz	u5190
 17347  014DBC  0EF5               	movlw	-11
 17348  014DBE  50E3               	movf	plusw1,w,c
 17349  014DC0  B4D8               	btfsc	status,2,c
 17350  014DC2  D075               	goto	u5220
 17351  014DC4                     u5190:
 17352                           
 17353                           ;stkvar	_counter @ sp[(-2)+1]
 17354  014DC4  0EFF               	movlw	-1
 17355  014DC6  6AE3               	clrf	plusw1,c
 17356  014DC8  D012               	goto	L15
 17357  014DCA                     l6282:
 17358                           
 17359                           ;stkvar	_divisor @ sp[(-2)+-16]
 17360  014DCA  90D8               	bcf	status,0,c
 17361  014DCC  0EEE               	movlw	-18
 17362  014DCE  36E3               	rlcf	plusw1,f,c
 17363  014DD0  0EEF               	movlw	-17
 17364  014DD2  36E3               	rlcf	plusw1,f,c
 17365  014DD4  0EF0               	movlw	-16
 17366  014DD6  36E3               	rlcf	plusw1,f,c
 17367  014DD8  0EF1               	movlw	-15
 17368  014DDA  36E3               	rlcf	plusw1,f,c
 17369  014DDC  0EF2               	movlw	-14
 17370  014DDE  36E3               	rlcf	plusw1,f,c
 17371  014DE0  0EF3               	movlw	-13
 17372  014DE2  36E3               	rlcf	plusw1,f,c
 17373  014DE4  0EF4               	movlw	-12
 17374  014DE6  36E3               	rlcf	plusw1,f,c
 17375  014DE8  0EF5               	movlw	-11
 17376  014DEA  36E3               	rlcf	plusw1,f,c
 17377                           
 17378                           ;stkvar	_counter @ sp[(-2)+1]
 17379  014DEC  0EFF               	movlw	-1
 17380  014DEE                     L15:
 17381  014DEE  2AE3               	incf	plusw1,f,c
 17382                           
 17383                           ;stkvar	_divisor @ sp[(-2)+-16]
 17384  014DF0  0EF5               	movlw	-11
 17385  014DF2  AEE3               	btfss	plusw1,7,c
 17386  014DF4  D7EA               	goto	l6282
 17387  014DF6                     u5200:
 17388                           
 17389                           ;stkvar	_divisor @ sp[(-2)+-16]
 17390                           ;stkvar	_dividend @ sp[(-2)+-8]
 17391  014DF6  50E1               	movf	fsr1l,w,c
 17392  014DF8  0FF6               	addlw	-10
 17393  014DFA  6ED9               	movwf	fsr2l,c
 17394  014DFC  50E2               	movf	fsr1h,w,c
 17395  014DFE  6EDA               	movwf	fsr2h,c
 17396  014E00  0EFF               	movlw	255
 17397  014E02  22DA               	addwfc	fsr2h,f,c
 17398  014E04  0EEE               	movlw	-18
 17399  014E06  50E3               	movf	plusw1,w,c
 17400  014E08  5CDE               	subwf	postinc2,w,c
 17401  014E0A  0EEF               	movlw	-17
 17402  014E0C  50E3               	movf	plusw1,w,c
 17403  014E0E  58DE               	subwfb	postinc2,w,c
 17404  014E10  0EF0               	movlw	-16
 17405  014E12  50E3               	movf	plusw1,w,c
 17406  014E14  58DE               	subwfb	postinc2,w,c
 17407  014E16  0EF1               	movlw	-15
 17408  014E18  50E3               	movf	plusw1,w,c
 17409  014E1A  58DE               	subwfb	postinc2,w,c
 17410  014E1C  0EF2               	movlw	-14
 17411  014E1E  50E3               	movf	plusw1,w,c
 17412  014E20  58DE               	subwfb	postinc2,w,c
 17413  014E22  0EF3               	movlw	-13
 17414  014E24  50E3               	movf	plusw1,w,c
 17415  014E26  58DE               	subwfb	postinc2,w,c
 17416  014E28  0EF4               	movlw	-12
 17417  014E2A  50E3               	movf	plusw1,w,c
 17418  014E2C  58DE               	subwfb	postinc2,w,c
 17419  014E2E  0EF5               	movlw	-11
 17420  014E30  50E3               	movf	plusw1,w,c
 17421  014E32  58DE               	subwfb	postinc2,w,c
 17422  014E34  A0D8               	btfss	status,0,c
 17423  014E36  D01F               	goto	l6290
 17424                           
 17425                           ;stkvar	_divisor @ sp[(-2)+-16]
 17426                           ;stkvar	_dividend @ sp[(-2)+-8]
 17427  014E38  50E1               	movf	fsr1l,w,c
 17428  014E3A  0FF6               	addlw	-10
 17429  014E3C  6ED9               	movwf	fsr2l,c
 17430  014E3E  50E2               	movf	fsr1h,w,c
 17431  014E40  6EDA               	movwf	fsr2h,c
 17432  014E42  0EFF               	movlw	255
 17433  014E44  22DA               	addwfc	fsr2h,f,c
 17434  014E46  0EEE               	movlw	-18
 17435  014E48  50E3               	movf	plusw1,w,c
 17436  014E4A  5EDE               	subwf	postinc2,f,c
 17437  014E4C  0EEF               	movlw	-17
 17438  014E4E  50E3               	movf	plusw1,w,c
 17439  014E50  5ADE               	subwfb	postinc2,f,c
 17440  014E52  0EF0               	movlw	-16
 17441  014E54  50E3               	movf	plusw1,w,c
 17442  014E56  5ADE               	subwfb	postinc2,f,c
 17443  014E58  0EF1               	movlw	-15
 17444  014E5A  50E3               	movf	plusw1,w,c
 17445  014E5C  5ADE               	subwfb	postinc2,f,c
 17446  014E5E  0EF2               	movlw	-14
 17447  014E60  50E3               	movf	plusw1,w,c
 17448  014E62  5ADE               	subwfb	postinc2,f,c
 17449  014E64  0EF3               	movlw	-13
 17450  014E66  50E3               	movf	plusw1,w,c
 17451  014E68  5ADE               	subwfb	postinc2,f,c
 17452  014E6A  0EF4               	movlw	-12
 17453  014E6C  50E3               	movf	plusw1,w,c
 17454  014E6E  5ADE               	subwfb	postinc2,f,c
 17455  014E70  0EF5               	movlw	-11
 17456  014E72  50E3               	movf	plusw1,w,c
 17457  014E74  5ADE               	subwfb	postinc2,f,c
 17458  014E76                     l6290:
 17459                           
 17460                           ;stkvar	_divisor @ sp[(-2)+-16]
 17461  014E76  90D8               	bcf	status,0,c
 17462  014E78  0EF5               	movlw	-11
 17463  014E7A  32E3               	rrcf	plusw1,f,c
 17464  014E7C  0EF4               	movlw	-12
 17465  014E7E  32E3               	rrcf	plusw1,f,c
 17466  014E80  0EF3               	movlw	-13
 17467  014E82  32E3               	rrcf	plusw1,f,c
 17468  014E84  0EF2               	movlw	-14
 17469  014E86  32E3               	rrcf	plusw1,f,c
 17470  014E88  0EF1               	movlw	-15
 17471  014E8A  32E3               	rrcf	plusw1,f,c
 17472  014E8C  0EF0               	movlw	-16
 17473  014E8E  32E3               	rrcf	plusw1,f,c
 17474  014E90  0EEF               	movlw	-17
 17475  014E92  32E3               	rrcf	plusw1,f,c
 17476  014E94  0EEE               	movlw	-18
 17477  014E96  32E3               	rrcf	plusw1,f,c
 17478                           
 17479                           ;stkvar	_counter @ sp[(-2)+1]
 17480  014E98  0EFF               	movlw	-1
 17481  014E9A  50E3               	movf	plusw1,w,c
 17482  014E9C  6E35               	movwf	btemp^0,c
 17483  014E9E  0E01               	movlw	1
 17484  014EA0  5E35               	subwf	btemp^0,f,c
 17485  014EA2  0EFF               	movlw	-1
 17486  014EA4  0060  F0D7  FFE3   	movff	btemp,plusw1
 17487  014EAA  A4D8               	btfss	status,2,c
 17488  014EAC  D7A4               	goto	u5200
 17489  014EAE                     u5220:
 17490                           
 17491                           ;stkvar	_sign @ sp[(-2)+0]
 17492  014EAE  0EFE               	movlw	-2
 17493  014EB0  50E3               	movf	plusw1,w,c
 17494  014EB2  B4D8               	btfsc	status,2,c
 17495  014EB4  D025               	goto	u5240
 17496                           
 17497                           ;stkvar	_dividend @ sp[(-2)+-8]
 17498                           ;stkvar	_dividend @ sp[(-2)+-8]
 17499  014EB6  0EF6               	movlw	-10
 17500  014EB8  6CE3               	negf	plusw1,c
 17501  014EBA  0EF7               	movlw	-9
 17502  014EBC  1EE3               	comf	plusw1,f,c
 17503  014EBE  0EF8               	movlw	-8
 17504  014EC0  1EE3               	comf	plusw1,f,c
 17505  014EC2  0EF9               	movlw	-7
 17506  014EC4  1EE3               	comf	plusw1,f,c
 17507  014EC6  0EFA               	movlw	-6
 17508  014EC8  1EE3               	comf	plusw1,f,c
 17509  014ECA  0EFB               	movlw	-5
 17510  014ECC  1EE3               	comf	plusw1,f,c
 17511  014ECE  0EFC               	movlw	-4
 17512  014ED0  1EE3               	comf	plusw1,f,c
 17513  014ED2  0EFD               	movlw	-3
 17514  014ED4  1EE3               	comf	plusw1,f,c
 17515  014ED6  E314               	bnc	u5240
 17516  014ED8  0EF7               	movlw	-9
 17517  014EDA  2AE3               	incf	plusw1,f,c
 17518  014EDC  E311               	bnc	u5240
 17519  014EDE  0EF8               	movlw	-8
 17520  014EE0  2AE3               	incf	plusw1,f,c
 17521  014EE2  E30E               	bnc	u5240
 17522  014EE4  0EF9               	movlw	-7
 17523  014EE6  2AE3               	incf	plusw1,f,c
 17524  014EE8  E30B               	bnc	u5240
 17525  014EEA  0EFA               	movlw	-6
 17526  014EEC  2AE3               	incf	plusw1,f,c
 17527  014EEE  E308               	bnc	u5240
 17528  014EF0  0EFB               	movlw	-5
 17529  014EF2  2AE3               	incf	plusw1,f,c
 17530  014EF4  E305               	bnc	u5240
 17531  014EF6  0EFC               	movlw	-4
 17532  014EF8  2AE3               	incf	plusw1,f,c
 17533  014EFA  E302               	bnc	u5240
 17534  014EFC  0EFD               	movlw	-3
 17535  014EFE  2AE3               	incf	plusw1,f,c
 17536  014F00                     u5240:
 17537                           
 17538                           ;stkvar	_dividend @ sp[(-2)+-8]
 17539  014F00  0EF6               	movlw	246
 17540  014F02  24E1               	addwf	fsr1l,w,c
 17541  014F04  6ED9               	movwf	fsr2l,c
 17542  014F06  0EFF               	movlw	255
 17543  014F08  20E2               	addwfc	fsr1h,w,c
 17544  014F0A  6EDA               	movwf	fsr2h,c
 17545                           
 17546                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17547  014F0C  0E08               	movlw	8
 17548  014F0E  6E35               	movwf	btemp^0,c
 17549  014F10  0EF6               	movlw	-10
 17550  014F12                     us525999:
 17551  014F12  006F FF7B FFE3     	movff	postinc2,plusw1
 17552  014F18  28E8               	incf	wreg,w,c
 17553  014F1A  2E35               	decfsz	btemp^0,f,c
 17554  014F1C  D7FA               	bra	us525999
 17555                           
 17556                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17557  014F1E  52E5               	movf	postdec1,f,c
 17558  014F20  52E5               	movf	postdec1,f,c
 17559  014F22  0012               	return		;funcret
 17560  014F24                     __end_of___aomod:
 17561                           	opt callstack 0
 17562                           
 17563 ;; *************** function ___aodiv *****************
 17564 ;; Defined at:
 17565 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17566 ;; Parameters:    Size  Location     Type
 17567 ;;  dividend        8  [STACK] long long 
 17568 ;;  divisor         8  [STACK] long long 
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;  quotient        8  [STACK] long long 
 17571 ;;  sign            1  [STACK] unsigned char 
 17572 ;;  counter         1  [STACK] unsigned char 
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  8  [STACK] long long 
 17575 ;; Registers used:
 17576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/1
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17586 ;;Total ram usage:        0 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    6
 17589 ;; This function calls:
 17590 ;;		Nothing
 17591 ;; This function is called by:
 17592 ;;		_dtoa
 17593 ;; This function uses a reentrant model
 17594 ;;
 17595                           
 17596                           	psect	text57
 17597  0147F0                     __ptext57:
 17598                           	opt callstack 0
 17599  0147F0                     ___aodiv:
 17600                           	opt callstack 0
 17601                           
 17602                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17603  0147F0  0E0A               	movlw	10
 17604  0147F2  26E1               	addwf	fsr1l,f,c
 17605  0147F4  0E00               	movlw	0
 17606  0147F6  22E2               	addwfc	fsr1h,f,c
 17607                           
 17608                           ;stkvar	_sign @ sp[(-10)+8]
 17609                           
 17610                           ;incstack = 0
 17611  0147F8  0EFE               	movlw	-2
 17612  0147FA  6AE3               	clrf	plusw1,c
 17613                           
 17614                           ;stkvar	_divisor @ sp[(-10)+-16]
 17615  0147FC  0EED               	movlw	-19
 17616  0147FE  AEE3               	btfss	plusw1,7,c
 17617  014800  D028               	goto	l6230
 17618                           
 17619                           ;stkvar	_divisor @ sp[(-10)+-16]
 17620                           ;stkvar	_divisor @ sp[(-10)+-16]
 17621  014802  0EE6               	movlw	-26
 17622  014804  6CE3               	negf	plusw1,c
 17623  014806  0EE7               	movlw	-25
 17624  014808  1EE3               	comf	plusw1,f,c
 17625  01480A  0EE8               	movlw	-24
 17626  01480C  1EE3               	comf	plusw1,f,c
 17627  01480E  0EE9               	movlw	-23
 17628  014810  1EE3               	comf	plusw1,f,c
 17629  014812  0EEA               	movlw	-22
 17630  014814  1EE3               	comf	plusw1,f,c
 17631  014816  0EEB               	movlw	-21
 17632  014818  1EE3               	comf	plusw1,f,c
 17633  01481A  0EEC               	movlw	-20
 17634  01481C  1EE3               	comf	plusw1,f,c
 17635  01481E  0EED               	movlw	-19
 17636  014820  1EE3               	comf	plusw1,f,c
 17637  014822  E314               	bnc	u5040
 17638  014824  0EE7               	movlw	-25
 17639  014826  2AE3               	incf	plusw1,f,c
 17640  014828  E311               	bnc	u5040
 17641  01482A  0EE8               	movlw	-24
 17642  01482C  2AE3               	incf	plusw1,f,c
 17643  01482E  E30E               	bnc	u5040
 17644  014830  0EE9               	movlw	-23
 17645  014832  2AE3               	incf	plusw1,f,c
 17646  014834  E30B               	bnc	u5040
 17647  014836  0EEA               	movlw	-22
 17648  014838  2AE3               	incf	plusw1,f,c
 17649  01483A  E308               	bnc	u5040
 17650  01483C  0EEB               	movlw	-21
 17651  01483E  2AE3               	incf	plusw1,f,c
 17652  014840  E305               	bnc	u5040
 17653  014842  0EEC               	movlw	-20
 17654  014844  2AE3               	incf	plusw1,f,c
 17655  014846  E302               	bnc	u5040
 17656  014848  0EED               	movlw	-19
 17657  01484A  2AE3               	incf	plusw1,f,c
 17658  01484C                     u5040:
 17659                           
 17660                           ;stkvar	_sign @ sp[(-10)+8]
 17661  01484C  0EFE               	movlw	-2
 17662  01484E  6AE3               	clrf	plusw1,c
 17663  014850  2AE3               	incf	plusw1,f,c
 17664  014852                     l6230:
 17665                           
 17666                           ;stkvar	_dividend @ sp[(-10)+-8]
 17667  014852  0EF5               	movlw	-11
 17668  014854  AEE3               	btfss	plusw1,7,c
 17669  014856  D027               	goto	l6236
 17670                           
 17671                           ;stkvar	_dividend @ sp[(-10)+-8]
 17672                           ;stkvar	_dividend @ sp[(-10)+-8]
 17673  014858  0EEE               	movlw	-18
 17674  01485A  6CE3               	negf	plusw1,c
 17675  01485C  0EEF               	movlw	-17
 17676  01485E  1EE3               	comf	plusw1,f,c
 17677  014860  0EF0               	movlw	-16
 17678  014862  1EE3               	comf	plusw1,f,c
 17679  014864  0EF1               	movlw	-15
 17680  014866  1EE3               	comf	plusw1,f,c
 17681  014868  0EF2               	movlw	-14
 17682  01486A  1EE3               	comf	plusw1,f,c
 17683  01486C  0EF3               	movlw	-13
 17684  01486E  1EE3               	comf	plusw1,f,c
 17685  014870  0EF4               	movlw	-12
 17686  014872  1EE3               	comf	plusw1,f,c
 17687  014874  0EF5               	movlw	-11
 17688  014876  1EE3               	comf	plusw1,f,c
 17689  014878  E314               	bnc	u5060
 17690  01487A  0EEF               	movlw	-17
 17691  01487C  2AE3               	incf	plusw1,f,c
 17692  01487E  E311               	bnc	u5060
 17693  014880  0EF0               	movlw	-16
 17694  014882  2AE3               	incf	plusw1,f,c
 17695  014884  E30E               	bnc	u5060
 17696  014886  0EF1               	movlw	-15
 17697  014888  2AE3               	incf	plusw1,f,c
 17698  01488A  E30B               	bnc	u5060
 17699  01488C  0EF2               	movlw	-14
 17700  01488E  2AE3               	incf	plusw1,f,c
 17701  014890  E308               	bnc	u5060
 17702  014892  0EF3               	movlw	-13
 17703  014894  2AE3               	incf	plusw1,f,c
 17704  014896  E305               	bnc	u5060
 17705  014898  0EF4               	movlw	-12
 17706  01489A  2AE3               	incf	plusw1,f,c
 17707  01489C  E302               	bnc	u5060
 17708  01489E  0EF5               	movlw	-11
 17709  0148A0  2AE3               	incf	plusw1,f,c
 17710  0148A2                     u5060:
 17711                           
 17712                           ;stkvar	_sign @ sp[(-10)+8]
 17713  0148A2  0EFE               	movlw	-2
 17714  0148A4  70E3               	btg	plusw1,0,c
 17715  0148A6                     l6236:
 17716                           
 17717                           ;stkvar	_quotient @ sp[(-10)+0]
 17718  0148A6  0E07               	movlw	7
 17719  0148A8  6E35               	movwf	btemp^0,c
 17720  0148AA  0EF6               	movlw	-10
 17721  0148AC                     u5071:
 17722  0148AC  6AE3               	clrf	plusw1,c
 17723  0148AE  2AE8               	incf	wreg,f,c
 17724  0148B0  0635               	decf	btemp^0,f,c
 17725  0148B2  E2FC               	bc	u5071
 17726                           
 17727                           ;stkvar	_divisor @ sp[(-10)+-16]
 17728  0148B4  0EE6               	movlw	-26
 17729  0148B6  50E3               	movf	plusw1,w,c
 17730  0148B8  E116               	bnz	u5080
 17731  0148BA  0EE7               	movlw	-25
 17732  0148BC  50E3               	movf	plusw1,w,c
 17733  0148BE  E113               	bnz	u5080
 17734  0148C0  0EE8               	movlw	-24
 17735  0148C2  50E3               	movf	plusw1,w,c
 17736  0148C4  E110               	bnz	u5080
 17737  0148C6  0EE9               	movlw	-23
 17738  0148C8  50E3               	movf	plusw1,w,c
 17739  0148CA  E10D               	bnz	u5080
 17740  0148CC  0EEA               	movlw	-22
 17741  0148CE  50E3               	movf	plusw1,w,c
 17742  0148D0  E10A               	bnz	u5080
 17743  0148D2  0EEB               	movlw	-21
 17744  0148D4  50E3               	movf	plusw1,w,c
 17745  0148D6  E107               	bnz	u5080
 17746  0148D8  0EEC               	movlw	-20
 17747  0148DA  50E3               	movf	plusw1,w,c
 17748  0148DC  E104               	bnz	u5080
 17749  0148DE  0EED               	movlw	-19
 17750  0148E0  50E3               	movf	plusw1,w,c
 17751  0148E2  B4D8               	btfsc	status,2,c
 17752  0148E4  D088               	goto	u5110
 17753  0148E6                     u5080:
 17754                           
 17755                           ;stkvar	_counter @ sp[(-10)+9]
 17756  0148E6  0EFF               	movlw	-1
 17757  0148E8  6AE3               	clrf	plusw1,c
 17758  0148EA  D012               	goto	L16
 17759  0148EC                     l6242:
 17760                           
 17761                           ;stkvar	_divisor @ sp[(-10)+-16]
 17762  0148EC  90D8               	bcf	status,0,c
 17763  0148EE  0EE6               	movlw	-26
 17764  0148F0  36E3               	rlcf	plusw1,f,c
 17765  0148F2  0EE7               	movlw	-25
 17766  0148F4  36E3               	rlcf	plusw1,f,c
 17767  0148F6  0EE8               	movlw	-24
 17768  0148F8  36E3               	rlcf	plusw1,f,c
 17769  0148FA  0EE9               	movlw	-23
 17770  0148FC  36E3               	rlcf	plusw1,f,c
 17771  0148FE  0EEA               	movlw	-22
 17772  014900  36E3               	rlcf	plusw1,f,c
 17773  014902  0EEB               	movlw	-21
 17774  014904  36E3               	rlcf	plusw1,f,c
 17775  014906  0EEC               	movlw	-20
 17776  014908  36E3               	rlcf	plusw1,f,c
 17777  01490A  0EED               	movlw	-19
 17778  01490C  36E3               	rlcf	plusw1,f,c
 17779                           
 17780                           ;stkvar	_counter @ sp[(-10)+9]
 17781  01490E  0EFF               	movlw	-1
 17782  014910                     L16:
 17783  014910  2AE3               	incf	plusw1,f,c
 17784                           
 17785                           ;stkvar	_divisor @ sp[(-10)+-16]
 17786  014912  0EED               	movlw	-19
 17787  014914  AEE3               	btfss	plusw1,7,c
 17788  014916  D7EA               	goto	l6242
 17789  014918                     u5090:
 17790                           
 17791                           ;stkvar	_quotient @ sp[(-10)+0]
 17792  014918  90D8               	bcf	status,0,c
 17793  01491A  0EF6               	movlw	-10
 17794  01491C  36E3               	rlcf	plusw1,f,c
 17795  01491E  0EF7               	movlw	-9
 17796  014920  36E3               	rlcf	plusw1,f,c
 17797  014922  0EF8               	movlw	-8
 17798  014924  36E3               	rlcf	plusw1,f,c
 17799  014926  0EF9               	movlw	-7
 17800  014928  36E3               	rlcf	plusw1,f,c
 17801  01492A  0EFA               	movlw	-6
 17802  01492C  36E3               	rlcf	plusw1,f,c
 17803  01492E  0EFB               	movlw	-5
 17804  014930  36E3               	rlcf	plusw1,f,c
 17805  014932  0EFC               	movlw	-4
 17806  014934  36E3               	rlcf	plusw1,f,c
 17807  014936  0EFD               	movlw	-3
 17808  014938  36E3               	rlcf	plusw1,f,c
 17809                           
 17810                           ;stkvar	_divisor @ sp[(-10)+-16]
 17811                           ;stkvar	_dividend @ sp[(-10)+-8]
 17812  01493A  50E1               	movf	fsr1l,w,c
 17813  01493C  0FEE               	addlw	-18
 17814  01493E  6ED9               	movwf	fsr2l,c
 17815  014940  50E2               	movf	fsr1h,w,c
 17816  014942  6EDA               	movwf	fsr2h,c
 17817  014944  0EFF               	movlw	255
 17818  014946  22DA               	addwfc	fsr2h,f,c
 17819  014948  0EE6               	movlw	-26
 17820  01494A  50E3               	movf	plusw1,w,c
 17821  01494C  5CDE               	subwf	postinc2,w,c
 17822  01494E  0EE7               	movlw	-25
 17823  014950  50E3               	movf	plusw1,w,c
 17824  014952  58DE               	subwfb	postinc2,w,c
 17825  014954  0EE8               	movlw	-24
 17826  014956  50E3               	movf	plusw1,w,c
 17827  014958  58DE               	subwfb	postinc2,w,c
 17828  01495A  0EE9               	movlw	-23
 17829  01495C  50E3               	movf	plusw1,w,c
 17830  01495E  58DE               	subwfb	postinc2,w,c
 17831  014960  0EEA               	movlw	-22
 17832  014962  50E3               	movf	plusw1,w,c
 17833  014964  58DE               	subwfb	postinc2,w,c
 17834  014966  0EEB               	movlw	-21
 17835  014968  50E3               	movf	plusw1,w,c
 17836  01496A  58DE               	subwfb	postinc2,w,c
 17837  01496C  0EEC               	movlw	-20
 17838  01496E  50E3               	movf	plusw1,w,c
 17839  014970  58DE               	subwfb	postinc2,w,c
 17840  014972  0EED               	movlw	-19
 17841  014974  50E3               	movf	plusw1,w,c
 17842  014976  58DE               	subwfb	postinc2,w,c
 17843  014978  A0D8               	btfss	status,0,c
 17844  01497A  D021               	goto	l6254
 17845                           
 17846                           ;stkvar	_divisor @ sp[(-10)+-16]
 17847                           ;stkvar	_dividend @ sp[(-10)+-8]
 17848  01497C  50E1               	movf	fsr1l,w,c
 17849  01497E  0FEE               	addlw	-18
 17850  014980  6ED9               	movwf	fsr2l,c
 17851  014982  50E2               	movf	fsr1h,w,c
 17852  014984  6EDA               	movwf	fsr2h,c
 17853  014986  0EFF               	movlw	255
 17854  014988  22DA               	addwfc	fsr2h,f,c
 17855  01498A  0EE6               	movlw	-26
 17856  01498C  50E3               	movf	plusw1,w,c
 17857  01498E  5EDE               	subwf	postinc2,f,c
 17858  014990  0EE7               	movlw	-25
 17859  014992  50E3               	movf	plusw1,w,c
 17860  014994  5ADE               	subwfb	postinc2,f,c
 17861  014996  0EE8               	movlw	-24
 17862  014998  50E3               	movf	plusw1,w,c
 17863  01499A  5ADE               	subwfb	postinc2,f,c
 17864  01499C  0EE9               	movlw	-23
 17865  01499E  50E3               	movf	plusw1,w,c
 17866  0149A0  5ADE               	subwfb	postinc2,f,c
 17867  0149A2  0EEA               	movlw	-22
 17868  0149A4  50E3               	movf	plusw1,w,c
 17869  0149A6  5ADE               	subwfb	postinc2,f,c
 17870  0149A8  0EEB               	movlw	-21
 17871  0149AA  50E3               	movf	plusw1,w,c
 17872  0149AC  5ADE               	subwfb	postinc2,f,c
 17873  0149AE  0EEC               	movlw	-20
 17874  0149B0  50E3               	movf	plusw1,w,c
 17875  0149B2  5ADE               	subwfb	postinc2,f,c
 17876  0149B4  0EED               	movlw	-19
 17877  0149B6  50E3               	movf	plusw1,w,c
 17878  0149B8  5ADE               	subwfb	postinc2,f,c
 17879                           
 17880                           ;stkvar	_quotient @ sp[(-10)+0]
 17881  0149BA  0EF6               	movlw	-10
 17882  0149BC  80E3               	bsf	plusw1,0,c
 17883  0149BE                     l6254:
 17884                           
 17885                           ;stkvar	_divisor @ sp[(-10)+-16]
 17886  0149BE  90D8               	bcf	status,0,c
 17887  0149C0  0EED               	movlw	-19
 17888  0149C2  32E3               	rrcf	plusw1,f,c
 17889  0149C4  0EEC               	movlw	-20
 17890  0149C6  32E3               	rrcf	plusw1,f,c
 17891  0149C8  0EEB               	movlw	-21
 17892  0149CA  32E3               	rrcf	plusw1,f,c
 17893  0149CC  0EEA               	movlw	-22
 17894  0149CE  32E3               	rrcf	plusw1,f,c
 17895  0149D0  0EE9               	movlw	-23
 17896  0149D2  32E3               	rrcf	plusw1,f,c
 17897  0149D4  0EE8               	movlw	-24
 17898  0149D6  32E3               	rrcf	plusw1,f,c
 17899  0149D8  0EE7               	movlw	-25
 17900  0149DA  32E3               	rrcf	plusw1,f,c
 17901  0149DC  0EE6               	movlw	-26
 17902  0149DE  32E3               	rrcf	plusw1,f,c
 17903                           
 17904                           ;stkvar	_counter @ sp[(-10)+9]
 17905  0149E0  0EFF               	movlw	-1
 17906  0149E2  50E3               	movf	plusw1,w,c
 17907  0149E4  6E35               	movwf	btemp^0,c
 17908  0149E6  0E01               	movlw	1
 17909  0149E8  5E35               	subwf	btemp^0,f,c
 17910  0149EA  0EFF               	movlw	-1
 17911  0149EC  0060  F0D7  FFE3   	movff	btemp,plusw1
 17912  0149F2  A4D8               	btfss	status,2,c
 17913  0149F4  D791               	goto	u5090
 17914  0149F6                     u5110:
 17915                           
 17916                           ;stkvar	_sign @ sp[(-10)+8]
 17917  0149F6  0EFE               	movlw	-2
 17918  0149F8  50E3               	movf	plusw1,w,c
 17919  0149FA  B4D8               	btfsc	status,2,c
 17920  0149FC  D025               	goto	u5130
 17921                           
 17922                           ;stkvar	_quotient @ sp[(-10)+0]
 17923                           ;stkvar	_quotient @ sp[(-10)+0]
 17924  0149FE  0EF6               	movlw	-10
 17925  014A00  6CE3               	negf	plusw1,c
 17926  014A02  0EF7               	movlw	-9
 17927  014A04  1EE3               	comf	plusw1,f,c
 17928  014A06  0EF8               	movlw	-8
 17929  014A08  1EE3               	comf	plusw1,f,c
 17930  014A0A  0EF9               	movlw	-7
 17931  014A0C  1EE3               	comf	plusw1,f,c
 17932  014A0E  0EFA               	movlw	-6
 17933  014A10  1EE3               	comf	plusw1,f,c
 17934  014A12  0EFB               	movlw	-5
 17935  014A14  1EE3               	comf	plusw1,f,c
 17936  014A16  0EFC               	movlw	-4
 17937  014A18  1EE3               	comf	plusw1,f,c
 17938  014A1A  0EFD               	movlw	-3
 17939  014A1C  1EE3               	comf	plusw1,f,c
 17940  014A1E  E314               	bnc	u5130
 17941  014A20  0EF7               	movlw	-9
 17942  014A22  2AE3               	incf	plusw1,f,c
 17943  014A24  E311               	bnc	u5130
 17944  014A26  0EF8               	movlw	-8
 17945  014A28  2AE3               	incf	plusw1,f,c
 17946  014A2A  E30E               	bnc	u5130
 17947  014A2C  0EF9               	movlw	-7
 17948  014A2E  2AE3               	incf	plusw1,f,c
 17949  014A30  E30B               	bnc	u5130
 17950  014A32  0EFA               	movlw	-6
 17951  014A34  2AE3               	incf	plusw1,f,c
 17952  014A36  E308               	bnc	u5130
 17953  014A38  0EFB               	movlw	-5
 17954  014A3A  2AE3               	incf	plusw1,f,c
 17955  014A3C  E305               	bnc	u5130
 17956  014A3E  0EFC               	movlw	-4
 17957  014A40  2AE3               	incf	plusw1,f,c
 17958  014A42  E302               	bnc	u5130
 17959  014A44  0EFD               	movlw	-3
 17960  014A46  2AE3               	incf	plusw1,f,c
 17961  014A48                     u5130:
 17962                           
 17963                           ;stkvar	_quotient @ sp[(-10)+0]
 17964  014A48  0EF6               	movlw	246
 17965  014A4A  24E1               	addwf	fsr1l,w,c
 17966  014A4C  6ED9               	movwf	fsr2l,c
 17967  014A4E  0EFF               	movlw	255
 17968  014A50  20E2               	addwfc	fsr1h,w,c
 17969  014A52  6EDA               	movwf	fsr2h,c
 17970                           
 17971                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17972  014A54  0E08               	movlw	8
 17973  014A56  6E35               	movwf	btemp^0,c
 17974  014A58  0EEE               	movlw	-18
 17975  014A5A                     us514999:
 17976  014A5A  006F FF7B FFE3     	movff	postinc2,plusw1
 17977  014A60  28E8               	incf	wreg,w,c
 17978  014A62  2E35               	decfsz	btemp^0,f,c
 17979  014A64  D7FA               	bra	us514999
 17980                           
 17981                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17982  014A66  0EF6               	movlw	246
 17983  014A68  26E1               	addwf	fsr1l,f,c
 17984  014A6A  0EFF               	movlw	255
 17985  014A6C  22E2               	addwfc	fsr1h,f,c
 17986  014A6E  0012               	return		;funcret
 17987  014A70                     __end_of___aodiv:
 17988                           	opt callstack 0
 17989                           
 17990 ;; *************** function _ctoa *****************
 17991 ;; Defined at:
 17992 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17995 ;;		 -> f(6), NULL(0), 
 17996 ;;  c               1  [STACK] unsigned char 
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;  w               2  [STACK] int 
 17999 ;;  l               2    0        int 
 18000 ;; Return value:  Size  Location     Type
 18001 ;;                  2  [STACK] int 
 18002 ;; Registers used:
 18003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18004 ;; Tracked objects:
 18005 ;;		On entry : 0/4
 18006 ;;		On exit  : 0/0
 18007 ;;		Unchanged: 0/0
 18008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18013 ;;Total ram usage:        0 bytes
 18014 ;; Hardware stack levels used:    1
 18015 ;; Hardware stack levels required when called:   11
 18016 ;; This function calls:
 18017 ;;		_pad
 18018 ;; This function is called by:
 18019 ;;		_vfpfcnvrt
 18020 ;; This function uses a reentrant model
 18021 ;;
 18022                           
 18023                           	psect	text58
 18024  016BC8                     __ptext58:
 18025                           	opt callstack 0
 18026  016BC8                     _ctoa:
 18027                           	opt callstack 0
 18028                           
 18029                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18030  016BC8  52E6               	movf	postinc1,f,c
 18031  016BCA  52E6               	movf	postinc1,f,c
 18032                           
 18033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18034                           
 18035                           ;incstack = 0
 18036  016BCC  501E               	movf	_width^0,w,c
 18037  016BCE  101F               	iorwf	(_width+1)^0,w,c
 18038  016BD0  A4D8               	btfss	status,2,c
 18039  016BD2  D009               	goto	l8834
 18040                           
 18041                           ;stkvar	_w @ sp[(-2)+0]
 18042  016BD4  0EFE               	movlw	-2
 18043  016BD6  0060  F07B  FFE3   	movff	_width,plusw1
 18044  016BDC  0EFF               	movlw	-1
 18045  016BDE  0060  F07F  FFE3   	movff	_width+1,plusw1
 18046  016BE4  D016               	goto	l8836
 18047  016BE6                     l8834:
 18048  016BE6  0EFF               	movlw	255
 18049  016BE8  6E3F               	movwf	(btemp+10)^0,c
 18050  016BEA  0EFF               	movlw	255
 18051  016BEC  6E40               	movwf	(btemp+11)^0,c
 18052  016BEE  0060  F078  F03D   	movff	_width,btemp+8
 18053  016BF4  0060  F07C  F03E   	movff	_width+1,btemp+9
 18054  016BFA  503F               	movf	(btemp+10)^0,w,c
 18055  016BFC  263D               	addwf	(btemp+8)^0,f,c
 18056  016BFE  5040               	movf	(btemp+11)^0,w,c
 18057  016C00  223E               	addwfc	(btemp+9)^0,f,c
 18058                           
 18059                           ;stkvar	_w @ sp[(-2)+0]
 18060  016C02  0EFE               	movlw	-2
 18061  016C04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18062  016C0A  0EFF               	movlw	-1
 18063  016C0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18064  016C12                     l8836:
 18065                           
 18066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18067                           ;stkvar	_c @ sp[(-2)+-3]
 18068  016C12  0EFB               	movlw	-5
 18069  016C14  006F FF8C  F1A8    	movff	plusw1,_dbuf
 18070                           
 18071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18072  016C1A  0101               	movlb	1	; () banked
 18073  016C1C  6BA9               	clrf	(_dbuf+1)& (0+255),b
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18077                           ;stkvar	_w @ sp[(-2)+0]
 18078  016C1E  0EFE               	movlw	-2
 18079  016C20  006F FF8F FFE6     	movff	plusw1,postinc1
 18080  016C26  006F FF8F FFE6     	movff	plusw1,postinc1
 18081  016C2C  0EA8               	movlw	low _dbuf
 18082  016C2E  6EE6               	movwf	postinc1,c
 18083  016C30  0E01               	movlw	high _dbuf
 18084  016C32  6EE6               	movwf	postinc1,c
 18085                           
 18086                           ;stkvar	_fp @ sp[(-6)+-2]
 18087  016C34  0EF8               	movlw	-8
 18088  016C36  006F FF8F FFE6     	movff	plusw1,postinc1
 18089  016C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18090  016C42  ECD6  F0AF         	call	_pad	;wreg free
 18091                           
 18092                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18093  016C46  0EFB               	movlw	251
 18094  016C48  26E1               	addwf	fsr1l,f,c
 18095  016C4A  0EFF               	movlw	255
 18096  016C4C  22E2               	addwfc	fsr1h,f,c
 18097  016C4E  0012               	return		;funcret
 18098  016C50                     __end_of_ctoa:
 18099                           	opt callstack 0
 18100                           
 18101 ;; *************** function _pad *****************
 18102 ;; Defined at:
 18103 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18106 ;;		 -> f(6), NULL(0), 
 18107 ;;  buf             2  [STACK] PTR unsigned char 
 18108 ;;		 -> dbuf(80), 
 18109 ;;  p               2  [STACK] int 
 18110 ;; Auto vars:     Size  Location     Type
 18111 ;;  w               2  [STACK] int 
 18112 ;;  i               2  [STACK] int 
 18113 ;; Return value:  Size  Location     Type
 18114 ;;                  2  [STACK] int 
 18115 ;; Registers used:
 18116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18117 ;; Tracked objects:
 18118 ;;		On entry : 0/1
 18119 ;;		On exit  : 0/0
 18120 ;;		Unchanged: 0/0
 18121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18126 ;;Total ram usage:        0 bytes
 18127 ;; Hardware stack levels used:    1
 18128 ;; Hardware stack levels required when called:   10
 18129 ;; This function calls:
 18130 ;;		_fputc
 18131 ;;		_fputs
 18132 ;;		_strlen
 18133 ;; This function is called by:
 18134 ;;		_ctoa
 18135 ;;		_dtoa
 18136 ;;		_efgtoa
 18137 ;;		_xtoa
 18138 ;; This function uses a reentrant model
 18139 ;;
 18140                           
 18141                           	psect	text59
 18142  015FAC                     __ptext59:
 18143                           	opt callstack 0
 18144  015FAC                     _pad:
 18145                           	opt callstack 0
 18146                           
 18147                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18148  015FAC  52E6               	movf	postinc1,f,c
 18149  015FAE  52E6               	movf	postinc1,f,c
 18150  015FB0  52E6               	movf	postinc1,f,c
 18151  015FB2  52E6               	movf	postinc1,f,c
 18152                           
 18153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18154                           
 18155                           ;incstack = 0
 18156  015FB4  A022               	btfss	_flags^0,0,c
 18157  015FB6  D010               	goto	l8808
 18158                           
 18159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18160                           ;stkvar	_fp @ sp[(-4)+-2]
 18161  015FB8  0EFA               	movlw	-6
 18162  015FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 18163  015FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 18164                           
 18165                           ;stkvar	_buf @ sp[(-6)+-4]
 18166  015FC6  0EF6               	movlw	-10
 18167  015FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 18168  015FCE  006F FF8F FFE6     	movff	plusw1,postinc1
 18169  015FD4  ECBC  F0B4         	call	_fputs	;wreg free
 18170  015FD8                     l8808:
 18171                           
 18172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18173                           ;stkvar	_p @ sp[(-4)+-6]
 18174  015FD8  0EF7               	movlw	-9
 18175  015FDA  BEE3               	btfsc	plusw1,7,c
 18176  015FDC  D011               	goto	l8812
 18177                           
 18178                           ;stkvar	_p @ sp[(-4)+-6]
 18179                           ;stkvar	_w @ sp[(-4)+0]
 18180  015FDE  0EF6               	movlw	-10
 18181  015FE0  006F FF8C  F035    	movff	plusw1,btemp
 18182  015FE6  0EFC               	movlw	-4
 18183  015FE8  0060  F0D7  FFE3   	movff	btemp,plusw1
 18184  015FEE  0EF7               	movlw	-9
 18185  015FF0  006F FF8C  F035    	movff	plusw1,btemp
 18186  015FF6  0EFD               	movlw	-3
 18187  015FF8  0060  F0D7  FFE3   	movff	btemp,plusw1
 18188  015FFE  D004               	goto	l1714
 18189  016000                     l8812:
 18190                           
 18191                           ;stkvar	_w @ sp[(-4)+0]
 18192  016000  0EFC               	movlw	-4
 18193  016002  6AE3               	clrf	plusw1,c
 18194  016004  0EFD               	movlw	-3
 18195  016006  6AE3               	clrf	plusw1,c
 18196  016008                     l1714:
 18197                           
 18198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18199                           ;stkvar	_i @ sp[(-4)+2]
 18200  016008  0EFE               	movlw	-2
 18201  01600A  6AE3               	clrf	plusw1,c
 18202  01600C  0EFF               	movlw	-1
 18203  01600E  6AE3               	clrf	plusw1,c
 18204                           
 18205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18206  016010  D01E               	goto	l8818
 18207  016012                     l8814:
 18208                           
 18209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18210                           ;stkvar	_fp @ sp[(-4)+-2]
 18211  016012  0EFA               	movlw	-6
 18212  016014  006F FF8F FFE6     	movff	plusw1,postinc1
 18213  01601A  006F FF8F FFE6     	movff	plusw1,postinc1
 18214  016020  0E20               	movlw	32
 18215  016022  6EE6               	movwf	postinc1,c
 18216  016024  0E00               	movlw	0
 18217  016026  6EE6               	movwf	postinc1,c
 18218  016028  ECB8  F0AE         	call	_fputc	;wreg free
 18219                           
 18220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18221                           ;stkvar	_i @ sp[(-4)+2]
 18222  01602C  0EFE               	movlw	-2
 18223  01602E  50E3               	movf	plusw1,w,c
 18224  016030  0F01               	addlw	1
 18225  016032  6E35               	movwf	btemp^0,c
 18226  016034  0EFE               	movlw	-2
 18227  016036  0060  F0D7  FFE3   	movff	btemp,plusw1
 18228  01603C  6A35               	clrf	btemp^0,c
 18229  01603E  0EFF               	movlw	-1
 18230  016040  50E3               	movf	plusw1,w,c
 18231  016042  2035               	addwfc	btemp^0,w,c
 18232  016044  6E35               	movwf	btemp^0,c
 18233  016046  0EFF               	movlw	-1
 18234  016048  0060  F0D7  FFE3   	movff	btemp,plusw1
 18235  01604E                     l8818:
 18236                           
 18237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18238                           ;stkvar	_w @ sp[(-4)+0]
 18239                           ;stkvar	_i @ sp[(-4)+2]
 18240  01604E  50E1               	movf	fsr1l,w,c
 18241  016050  0FFE               	addlw	-2
 18242  016052  6ED9               	movwf	fsr2l,c
 18243  016054  50E2               	movf	fsr1h,w,c
 18244  016056  6EDA               	movwf	fsr2h,c
 18245  016058  0EFF               	movlw	255
 18246  01605A  22DA               	addwfc	fsr2h,f,c
 18247  01605C  0EFC               	movlw	-4
 18248  01605E  50E3               	movf	plusw1,w,c
 18249  016060  5CDE               	subwf	postinc2,w,c
 18250  016062  50DE               	movf	postinc2,w,c
 18251  016064  0A80               	xorlw	128
 18252  016066  6E35               	movwf	btemp^0,c
 18253  016068  0EFD               	movlw	-3
 18254  01606A  50E3               	movf	plusw1,w,c
 18255  01606C  0A80               	xorlw	128
 18256  01606E  5835               	subwfb	btemp^0,w,c
 18257  016070  A0D8               	btfss	status,0,c
 18258  016072  D7CF               	goto	l8814
 18259                           
 18260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18261  016074  B022               	btfsc	_flags^0,0,c
 18262  016076  D010               	goto	l8822
 18263                           
 18264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18265                           ;stkvar	_fp @ sp[(-4)+-2]
 18266  016078  0EFA               	movlw	-6
 18267  01607A  006F FF8F FFE6     	movff	plusw1,postinc1
 18268  016080  006F FF8F FFE6     	movff	plusw1,postinc1
 18269                           
 18270                           ;stkvar	_buf @ sp[(-6)+-4]
 18271  016086  0EF6               	movlw	-10
 18272  016088  006F FF8F FFE6     	movff	plusw1,postinc1
 18273  01608E  006F FF8F FFE6     	movff	plusw1,postinc1
 18274  016094  ECBC  F0B4         	call	_fputs	;wreg free
 18275  016098                     l8822:
 18276                           
 18277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18278                           ;stkvar	_w @ sp[(-4)+0]
 18279                           ;stkvar	_buf @ sp[(-4)+-4]
 18280  016098  0EF8               	movlw	-8
 18281  01609A  006F FF8F FFE6     	movff	plusw1,postinc1
 18282  0160A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18283  0160A6  EC6B  F0B4         	call	_strlen	;wreg free
 18284  0160AA  0EFC               	movlw	-4
 18285  0160AC  50E3               	movf	plusw1,w,c
 18286  0160AE  2635               	addwf	btemp^0,f,c
 18287  0160B0  0EFD               	movlw	-3
 18288  0160B2  50E3               	movf	plusw1,w,c
 18289  0160B4  2236               	addwfc	(btemp+1)^0,f,c
 18290                           
 18291                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18292  0160B6  0EF6               	movlw	246
 18293  0160B8  26E1               	addwf	fsr1l,f,c
 18294  0160BA  0EFF               	movlw	255
 18295  0160BC  22E2               	addwfc	fsr1h,f,c
 18296  0160BE  0012               	return		;funcret
 18297  0160C0                     __end_of_pad:
 18298                           	opt callstack 0
 18299                           
 18300 ;; *************** function _strlen *****************
 18301 ;; Defined at:
 18302 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18303 ;; Parameters:    Size  Location     Type
 18304 ;;  s               2  [STACK] PTR const unsigned char 
 18305 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18306 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18307 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;  a               2  [STACK] PTR const unsigned char 
 18310 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18311 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18312 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18313 ;; Return value:  Size  Location     Type
 18314 ;;                  2  [STACK] unsigned int 
 18315 ;; Registers used:
 18316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18317 ;; Tracked objects:
 18318 ;;		On entry : 0/0
 18319 ;;		On exit  : 0/0
 18320 ;;		Unchanged: 0/0
 18321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18326 ;;Total ram usage:        0 bytes
 18327 ;; Hardware stack levels used:    1
 18328 ;; Hardware stack levels required when called:    6
 18329 ;; This function calls:
 18330 ;;		Nothing
 18331 ;; This function is called by:
 18332 ;;		_eaDogM_WriteString
 18333 ;;		_pad
 18334 ;;		_stoa
 18335 ;; This function uses a reentrant model
 18336 ;;
 18337                           
 18338                           	psect	text60
 18339  0168D6                     __ptext60:
 18340                           	opt callstack 0
 18341  0168D6                     _strlen:
 18342                           	opt callstack 0
 18343                           
 18344                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18345  0168D6  52E6               	movf	postinc1,f,c
 18346  0168D8  52E6               	movf	postinc1,f,c
 18347                           
 18348                           ;stkvar	_s @ sp[(-2)+-2]
 18349                           
 18350                           ;incstack = 0
 18351  0168DA  0EFC               	movlw	-4
 18352  0168DC  006F FF8C  F03F    	movff	plusw1,btemp+10
 18353  0168E2  0EFD               	movlw	-3
 18354  0168E4  006F FF8C  F040    	movff	plusw1,btemp+11
 18355                           
 18356                           ;stkvar	_a @ sp[(-2)+0]
 18357  0168EA  0EFF               	movlw	-1
 18358  0168EC  0060  F103  FFE3   	movff	btemp+11,plusw1
 18359  0168F2  0EFE               	movlw	-2
 18360  0168F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18361  0168FA  D011               	goto	l5848
 18362  0168FC                     l5846:
 18363                           
 18364                           ;stkvar	_s @ sp[(-2)+-2]
 18365  0168FC  0EFC               	movlw	-4
 18366  0168FE  50E3               	movf	plusw1,w,c
 18367  016900  0F01               	addlw	1
 18368  016902  6E35               	movwf	btemp^0,c
 18369  016904  0EFC               	movlw	-4
 18370  016906  0060  F0D7  FFE3   	movff	btemp,plusw1
 18371  01690C  6A35               	clrf	btemp^0,c
 18372  01690E  0EFD               	movlw	-3
 18373  016910  50E3               	movf	plusw1,w,c
 18374  016912  2035               	addwfc	btemp^0,w,c
 18375  016914  6E35               	movwf	btemp^0,c
 18376  016916  0EFD               	movlw	-3
 18377  016918  0060  F0D7  FFE3   	movff	btemp,plusw1
 18378  01691E                     l5848:
 18379                           
 18380                           ;stkvar	_s @ sp[(-2)+-2]
 18381  01691E  0EFC               	movlw	-4
 18382  016920  006F FF8F FFF6     	movff	plusw1,tblptrl
 18383  016926  0EFD               	movlw	-3
 18384  016928  006F FF8F FFF7     	movff	plusw1,tblptrh
 18385  01692E  0E00               	movlw	low (__mediumconst shr (0+16))
 18386  016930  6EF8               	movwf	tblptru,c
 18387  016932  0E1F               	movlw	(high __ramtop+-1)
 18388  016934  64F7               	cpfsgt	tblptrh,c
 18389  016936  D003               	bra	u4207
 18390  016938  0008               	tblrd		*
 18391  01693A  50F5               	movf	tablat,w,c
 18392  01693C  D007               	bra	u4200
 18393  01693E                     u4207:
 18394  01693E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18395  016944  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18396  01694A  50EF               	movf	indf0,w,c
 18397  01694C                     u4200:
 18398  01694C  0900               	iorlw	0
 18399  01694E  A4D8               	btfss	status,2,c
 18400  016950  D7D5               	goto	l5846
 18401                           
 18402                           ;stkvar	_a @ sp[(-2)+0]
 18403                           ;stkvar	_s @ sp[(-2)+-2]
 18404  016952  0EFC               	movlw	-4
 18405  016954  006F FF8C  F035    	movff	plusw1,btemp
 18406  01695A  0EFD               	movlw	-3
 18407  01695C  006F FF8C  F036    	movff	plusw1,btemp+1
 18408  016962  0EFE               	movlw	-2
 18409  016964  50E3               	movf	plusw1,w,c
 18410  016966  5E35               	subwf	btemp^0,f,c
 18411  016968  0EFF               	movlw	-1
 18412  01696A  50E3               	movf	plusw1,w,c
 18413  01696C  5A36               	subwfb	(btemp+1)^0,f,c
 18414                           
 18415                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18416  01696E  52E5               	movf	postdec1,f,c
 18417  016970  52E5               	movf	postdec1,f,c
 18418  016972  52E5               	movf	postdec1,f,c
 18419  016974  52E5               	movf	postdec1,f,c
 18420  016976  0012               	return		;funcret
 18421  016978                     __end_of_strlen:
 18422                           	opt callstack 0
 18423                           
 18424 ;; *************** function _fputs *****************
 18425 ;; Defined at:
 18426 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  s               2  [STACK] PTR const unsigned char 
 18429 ;;		 -> dbuf(80), 
 18430 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18431 ;;		 -> f(6), NULL(0), 
 18432 ;; Auto vars:     Size  Location     Type
 18433 ;;  i               2  [STACK] int 
 18434 ;;  c               1  [STACK] unsigned char 
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  2  [STACK] int 
 18437 ;; Registers used:
 18438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18439 ;; Tracked objects:
 18440 ;;		On entry : 0/1
 18441 ;;		On exit  : 0/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18448 ;;Total ram usage:        0 bytes
 18449 ;; Hardware stack levels used:    1
 18450 ;; Hardware stack levels required when called:    9
 18451 ;; This function calls:
 18452 ;;		_fputc
 18453 ;; This function is called by:
 18454 ;;		_pad
 18455 ;; This function uses a reentrant model
 18456 ;;
 18457                           
 18458                           	psect	text61
 18459  016978                     __ptext61:
 18460                           	opt callstack 0
 18461  016978                     _fputs:
 18462                           	opt callstack 0
 18463                           
 18464                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18465  016978  52E6               	movf	postinc1,f,c
 18466  01697A  52E6               	movf	postinc1,f,c
 18467  01697C  52E6               	movf	postinc1,f,c
 18468                           
 18469                           ;stkvar	_i @ sp[(-3)+0]
 18470                           
 18471                           ;incstack = 0
 18472  01697E  0EFD               	movlw	-3
 18473  016980  6AE3               	clrf	plusw1,c
 18474  016982  0EFE               	movlw	-2
 18475  016984  6AE3               	clrf	plusw1,c
 18476  016986  D01F               	goto	l8802
 18477  016988                     l8798:
 18478                           
 18479                           ;stkvar	_fp @ sp[(-3)+-4]
 18480  016988  0EF9               	movlw	-7
 18481  01698A  006F FF8F FFE6     	movff	plusw1,postinc1
 18482  016990  006F FF8F FFE6     	movff	plusw1,postinc1
 18483                           
 18484                           ;stkvar	_c @ sp[(-5)+2]
 18485  016996  0EFD               	movlw	-3
 18486  016998  50E3               	movf	plusw1,w,c
 18487  01699A  6EE6               	movwf	postinc1,c
 18488  01699C  0E00               	movlw	0
 18489  01699E  6EE6               	movwf	postinc1,c
 18490  0169A0  ECB8  F0AE         	call	_fputc	;wreg free
 18491                           
 18492                           ;stkvar	_i @ sp[(-3)+0]
 18493  0169A4  0EFD               	movlw	-3
 18494  0169A6  50E3               	movf	plusw1,w,c
 18495  0169A8  0F01               	addlw	1
 18496  0169AA  6E35               	movwf	btemp^0,c
 18497  0169AC  0EFD               	movlw	-3
 18498  0169AE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18499  0169B4  6A35               	clrf	btemp^0,c
 18500  0169B6  0EFE               	movlw	-2
 18501  0169B8  50E3               	movf	plusw1,w,c
 18502  0169BA  2035               	addwfc	btemp^0,w,c
 18503  0169BC  6E35               	movwf	btemp^0,c
 18504  0169BE  0EFE               	movlw	-2
 18505  0169C0  0060  F0D7  FFE3   	movff	btemp,plusw1
 18506  0169C6                     l8802:
 18507                           
 18508                           ;stkvar	_i @ sp[(-3)+0]
 18509  0169C6  0EFD               	movlw	-3
 18510  0169C8  006F FF8C  F03F    	movff	plusw1,btemp+10
 18511  0169CE  0EFE               	movlw	-2
 18512  0169D0  006F FF8C  F040    	movff	plusw1,btemp+11
 18513                           
 18514                           ;stkvar	_s @ sp[(-3)+-2]
 18515  0169D6  0EFB               	movlw	-5
 18516  0169D8  006F FF8C  F03D    	movff	plusw1,btemp+8
 18517  0169DE  0EFC               	movlw	-4
 18518  0169E0  006F FF8C  F03E    	movff	plusw1,btemp+9
 18519  0169E6  503F               	movf	(btemp+10)^0,w,c
 18520  0169E8  243D               	addwf	(btemp+8)^0,w,c
 18521  0169EA  6ED9               	movwf	fsr2l,c
 18522  0169EC  5040               	movf	(btemp+11)^0,w,c
 18523  0169EE  203E               	addwfc	(btemp+9)^0,w,c
 18524  0169F0  6EDA               	movwf	fsr2h,c
 18525  0169F2  50DF               	movf	indf2,w,c
 18526  0169F4  6E40               	movwf	(btemp+11)^0,c
 18527                           
 18528                           ;stkvar	_c @ sp[(-3)+2]
 18529  0169F6  0EFF               	movlw	-1
 18530  0169F8  0060  F103  FFE3   	movff	btemp+11,plusw1
 18531  0169FE  0EFF               	movlw	-1
 18532  016A00  50E3               	movf	plusw1,w,c
 18533  016A02  A4D8               	btfss	status,2,c
 18534  016A04  D7C1               	goto	l8798
 18535                           
 18536                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18537  016A06  0EF9               	movlw	249
 18538  016A08  26E1               	addwf	fsr1l,f,c
 18539  016A0A  0EFF               	movlw	255
 18540  016A0C  22E2               	addwfc	fsr1h,f,c
 18541  016A0E  0012               	return		;funcret
 18542  016A10                     __end_of_fputs:
 18543                           	opt callstack 0
 18544                           
 18545 ;; *************** function _fputc *****************
 18546 ;; Defined at:
 18547 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18548 ;; Parameters:    Size  Location     Type
 18549 ;;  c               2  [STACK] int 
 18550 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18551 ;;		 -> f(6), NULL(0), 
 18552 ;; Auto vars:     Size  Location     Type
 18553 ;;		None
 18554 ;; Return value:  Size  Location     Type
 18555 ;;                  2  [STACK] int 
 18556 ;; Registers used:
 18557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18558 ;; Tracked objects:
 18559 ;;		On entry : 0/4
 18560 ;;		On exit  : 0/0
 18561 ;;		Unchanged: 0/0
 18562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18567 ;;Total ram usage:        0 bytes
 18568 ;; Hardware stack levels used:    1
 18569 ;; Hardware stack levels required when called:    8
 18570 ;; This function calls:
 18571 ;;		_putch
 18572 ;; This function is called by:
 18573 ;;		_pad
 18574 ;;		_stoa
 18575 ;;		_vfpfcnvrt
 18576 ;;		_fputs
 18577 ;; This function uses a reentrant model
 18578 ;;
 18579                           
 18580                           	psect	text62
 18581  015D70                     __ptext62:
 18582                           	opt callstack 0
 18583  015D70                     _fputc:
 18584                           	opt callstack 13
 18585                           
 18586                           ;stkvar	_fp @ sp[(0)+-4]
 18587                           
 18588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18589                           ;incstack = 0
 18590  015D70  0EFC               	movlw	-4
 18591  015D72  006F FF8C  F035    	movff	plusw1,btemp
 18592  015D78  0EFD               	movlw	-3
 18593  015D7A  50E3               	movf	plusw1,w,c
 18594  015D7C  1035               	iorwf	btemp^0,w,c
 18595  015D7E  B4D8               	btfsc	status,2,c
 18596  015D80  D009               	goto	u8240
 18597                           
 18598                           ;stkvar	_fp @ sp[(0)+-4]
 18599  015D82  0EFC               	movlw	-4
 18600  015D84  006F FF8C  F035    	movff	plusw1,btemp
 18601  015D8A  0EFD               	movlw	-3
 18602  015D8C  50E3               	movf	plusw1,w,c
 18603  015D8E  1035               	iorwf	btemp^0,w,c
 18604  015D90  A4D8               	btfss	status,2,c
 18605  015D92  D006               	goto	l8786
 18606  015D94                     u8240:
 18607                           
 18608                           ;stkvar	_c @ sp[(0)+-2]
 18609  015D94  0EFE               	movlw	-2
 18610  015D96  50E3               	movf	plusw1,w,c
 18611  015D98  6EE6               	movwf	postinc1,c
 18612  015D9A  ECD2  F0BD         	call	_putch	;wreg free
 18613  015D9E  D075               	goto	l2729
 18614  015DA0                     l8786:
 18615                           
 18616                           ;stkvar	_fp @ sp[(0)+-4]
 18617  015DA0  0EFC               	movlw	-4
 18618  015DA2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18619  015DA8  0EFD               	movlw	-3
 18620  015DAA  006F FF8C  F040    	movff	plusw1,btemp+11
 18621  015DB0  0E04               	movlw	4
 18622  015DB2  243F               	addwf	(btemp+10)^0,w,c
 18623  015DB4  6ED9               	movwf	fsr2l,c
 18624  015DB6  0E00               	movlw	0
 18625  015DB8  2040               	addwfc	(btemp+11)^0,w,c
 18626  015DBA  6EDA               	movwf	fsr2h,c
 18627  015DBC  50DE               	movf	postinc2,w,c
 18628  015DBE  10DE               	iorwf	postinc2,w,c
 18629  015DC0  B4D8               	btfsc	status,2,c
 18630  015DC2  D026               	goto	u8260
 18631                           
 18632                           ;stkvar	_fp @ sp[(0)+-4]
 18633  015DC4  0EFC               	movlw	-4
 18634  015DC6  006F FF8C  F03F    	movff	plusw1,btemp+10
 18635  015DCC  0EFD               	movlw	-3
 18636  015DCE  006F FF8C  F040    	movff	plusw1,btemp+11
 18637  015DD4  0E04               	movlw	4
 18638  015DD6  243F               	addwf	(btemp+10)^0,w,c
 18639  015DD8  6ED9               	movwf	fsr2l,c
 18640  015DDA  0E00               	movlw	0
 18641  015DDC  2040               	addwfc	(btemp+11)^0,w,c
 18642  015DDE  6EDA               	movwf	fsr2h,c
 18643                           
 18644                           ;stkvar	_fp @ sp[(0)+-4]
 18645  015DE0  0EFC               	movlw	-4
 18646  015DE2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18647  015DE8  0EFD               	movlw	-3
 18648  015DEA  006F FF8C  F040    	movff	plusw1,btemp+11
 18649  015DF0  0E02               	movlw	2
 18650  015DF2  243F               	addwf	(btemp+10)^0,w,c
 18651  015DF4  6EE9               	movwf	fsr0l,c
 18652  015DF6  0E00               	movlw	0
 18653  015DF8  2040               	addwfc	(btemp+11)^0,w,c
 18654  015DFA  6EEA               	movwf	fsr0h,c
 18655  015DFC  50DE               	movf	postinc2,w,c
 18656  015DFE  5CEE               	subwf	postinc0,w,c
 18657  015E00  50EE               	movf	postinc0,w,c
 18658  015E02  0A80               	xorlw	128
 18659  015E04  6E35               	movwf	btemp^0,c
 18660  015E06  50DE               	movf	postinc2,w,c
 18661  015E08  0A80               	xorlw	128
 18662  015E0A  5835               	subwfb	btemp^0,w,c
 18663  015E0C  B0D8               	btfsc	status,0,c
 18664  015E0E  D03D               	goto	l2729
 18665  015E10                     u8260:
 18666                           
 18667                           ;stkvar	_c @ sp[(0)+-2]
 18668                           ;stkvar	_fp @ sp[(0)+-4]
 18669  015E10  0EFC               	movlw	-4
 18670  015E12  006F FF8C  F03F    	movff	plusw1,btemp+10
 18671  015E18  0EFD               	movlw	-3
 18672  015E1A  006F FF8C  F040    	movff	plusw1,btemp+11
 18673  015E20  0E02               	movlw	2
 18674  015E22  243F               	addwf	(btemp+10)^0,w,c
 18675  015E24  6ED9               	movwf	fsr2l,c
 18676  015E26  0E00               	movlw	0
 18677  015E28  2040               	addwfc	(btemp+11)^0,w,c
 18678  015E2A  6EDA               	movwf	fsr2h,c
 18679  015E2C  006F FF78  F03F    	movff	postinc2,btemp+10
 18680  015E32  006F FF74  F040    	movff	postdec2,btemp+11
 18681                           
 18682                           ;stkvar	_fp @ sp[(0)+-4]
 18683  015E38  0EFC               	movlw	-4
 18684  015E3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 18685  015E40  0EFD               	movlw	-3
 18686  015E42  006F FF8F FFDA     	movff	plusw1,fsr2h
 18687  015E48  006F FF78  F03D    	movff	postinc2,btemp+8
 18688  015E4E  006F FF74  F03E    	movff	postdec2,btemp+9
 18689  015E54  503F               	movf	(btemp+10)^0,w,c
 18690  015E56  243D               	addwf	(btemp+8)^0,w,c
 18691  015E58  6ED9               	movwf	fsr2l,c
 18692  015E5A  5040               	movf	(btemp+11)^0,w,c
 18693  015E5C  203E               	addwfc	(btemp+9)^0,w,c
 18694  015E5E  6EDA               	movwf	fsr2h,c
 18695  015E60  0EFE               	movlw	-2
 18696  015E62  006F FF8F FFDF     	movff	plusw1,indf2
 18697                           
 18698                           ;stkvar	_fp @ sp[(0)+-4]
 18699  015E68  0EFC               	movlw	-4
 18700  015E6A  006F FF8C  F03F    	movff	plusw1,btemp+10
 18701  015E70  0EFD               	movlw	-3
 18702  015E72  006F FF8C  F040    	movff	plusw1,btemp+11
 18703  015E78  0E02               	movlw	2
 18704  015E7A  243F               	addwf	(btemp+10)^0,w,c
 18705  015E7C  6ED9               	movwf	fsr2l,c
 18706  015E7E  0E00               	movlw	0
 18707  015E80  2040               	addwfc	(btemp+11)^0,w,c
 18708  015E82  6EDA               	movwf	fsr2h,c
 18709  015E84  2ADE               	incf	postinc2,f,c
 18710  015E86  0E00               	movlw	0
 18711  015E88  22DD               	addwfc	postdec2,f,c
 18712  015E8A                     l2729:
 18713                           
 18714                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18715  015E8A  52E5               	movf	postdec1,f,c
 18716  015E8C  52E5               	movf	postdec1,f,c
 18717  015E8E  52E5               	movf	postdec1,f,c
 18718  015E90  52E5               	movf	postdec1,f,c
 18719  015E92  0012               	return		;funcret
 18720  015E94                     __end_of_fputc:
 18721                           	opt callstack 0
 18722                           
 18723 ;; *************** function _putch *****************
 18724 ;; Defined at:
 18725 ;;		line 155 in file "eadog.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;  c               1  [STACK] unsigned char 
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;		None
 18730 ;; Return value:  Size  Location     Type
 18731 ;;                  1  [STACK] void 
 18732 ;; Registers used:
 18733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18734 ;; Tracked objects:
 18735 ;;		On entry : 0/4
 18736 ;;		On exit  : 0/0
 18737 ;;		Unchanged: 0/0
 18738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18743 ;;Total ram usage:        0 bytes
 18744 ;; Hardware stack levels used:    1
 18745 ;; Hardware stack levels required when called:    7
 18746 ;; This function calls:
 18747 ;;		_ringBufS_put_dma
 18748 ;; This function is called by:
 18749 ;;		_fputc
 18750 ;; This function uses a reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text63
 18754  017BA4                     __ptext63:
 18755                           	opt callstack 0
 18756  017BA4                     _putch:
 18757                           	opt callstack 13
 18758                           
 18759                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18760                           ;stkvar	_c @ sp[(0)+-1]
 18761                           
 18762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18763                           ;incstack = 0
 18764  017BA4  0EFF               	movlw	-1
 18765  017BA6  50E3               	movf	plusw1,w,c
 18766  017BA8  6EE6               	movwf	postinc1,c
 18767  017BAA  0060  F283  FFE6   	movff	_spi_link+6,postinc1
 18768  017BB0  0060  F287  FFE6   	movff	_spi_link+7,postinc1
 18769  017BB6  EC6F  F0B3         	call	_ringBufS_put_dma	;wreg free
 18770                           
 18771                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18772  017BBA  52E5               	movf	postdec1,f,c
 18773  017BBC  0012               	return		;funcret
 18774  017BBE                     __end_of_putch:
 18775                           	opt callstack 0
 18776                           
 18777 ;; *************** function _ringBufS_put_dma *****************
 18778 ;; Defined at:
 18779 ;;		line 67 in file "ringbufs.c"
 18780 ;; Parameters:    Size  Location     Type
 18781 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18782 ;;		 -> ring_buf1(67), 
 18783 ;;  c               1  [STACK] const unsigned char 
 18784 ;; Auto vars:     Size  Location     Type
 18785 ;;		None
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  1  [STACK] void 
 18788 ;; Registers used:
 18789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/4
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18799 ;;Total ram usage:        0 bytes
 18800 ;; Hardware stack levels used:    1
 18801 ;; Hardware stack levels required when called:    6
 18802 ;; This function calls:
 18803 ;;		Nothing
 18804 ;; This function is called by:
 18805 ;;		_putch
 18806 ;; This function uses a reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text64
 18810  0166DE                     __ptext64:
 18811                           	opt callstack 0
 18812  0166DE                     _ringBufS_put_dma:
 18813                           	opt callstack 13
 18814                           
 18815                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18816                           ;stkvar	__this @ sp[(0)+-2]
 18817                           
 18818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18819                           ;incstack = 0
 18820  0166DE  0EFE               	movlw	-2
 18821  0166E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 18822  0166E6  0EFF               	movlw	-1
 18823  0166E8  006F FF8C  F040    	movff	plusw1,btemp+11
 18824  0166EE  0E42               	movlw	66
 18825  0166F0  243F               	addwf	(btemp+10)^0,w,c
 18826  0166F2  6ED9               	movwf	fsr2l,c
 18827  0166F4  0E00               	movlw	0
 18828  0166F6  2040               	addwfc	(btemp+11)^0,w,c
 18829  0166F8  6EDA               	movwf	fsr2h,c
 18830  0166FA  0E40               	movlw	64
 18831  0166FC  60DF               	cpfslt	indf2,c
 18832  0166FE  D040               	goto	l1462
 18833                           
 18834                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18835                           ;stkvar	_c @ sp[(0)+-3]
 18836                           ;stkvar	__this @ sp[(0)+-2]
 18837  016700  0EFE               	movlw	-2
 18838  016702  006F FF8C  F03F    	movff	plusw1,btemp+10
 18839  016708  0EFF               	movlw	-1
 18840  01670A  006F FF8C  F040    	movff	plusw1,btemp+11
 18841  016710  0E40               	movlw	64
 18842  016712  243F               	addwf	(btemp+10)^0,w,c
 18843  016714  6ED9               	movwf	fsr2l,c
 18844  016716  0E00               	movlw	0
 18845  016718  2040               	addwfc	(btemp+11)^0,w,c
 18846  01671A  6EDA               	movwf	fsr2h,c
 18847  01671C  50DF               	movf	indf2,w,c
 18848  01671E  6E40               	movwf	(btemp+11)^0,c
 18849                           
 18850                           ;stkvar	__this @ sp[(0)+-2]
 18851  016720  0EFE               	movlw	-2
 18852  016722  006F FF8C  F03D    	movff	plusw1,btemp+8
 18853  016728  0EFF               	movlw	-1
 18854  01672A  006F FF8C  F03E    	movff	plusw1,btemp+9
 18855  016730  5040               	movf	(btemp+11)^0,w,c
 18856  016732  243D               	addwf	(btemp+8)^0,w,c
 18857  016734  6ED9               	movwf	fsr2l,c
 18858  016736  0E00               	movlw	0
 18859  016738  203E               	addwfc	(btemp+9)^0,w,c
 18860  01673A  6EDA               	movwf	fsr2h,c
 18861  01673C  0EFD               	movlw	-3
 18862  01673E  006F FF8F FFDF     	movff	plusw1,indf2
 18863                           
 18864                           ;ringbufs.c: 71:   ++_this->head;
 18865                           ;stkvar	__this @ sp[(0)+-2]
 18866  016744  0EFE               	movlw	-2
 18867  016746  006F FF8C  F03F    	movff	plusw1,btemp+10
 18868  01674C  0EFF               	movlw	-1
 18869  01674E  006F FF8C  F040    	movff	plusw1,btemp+11
 18870  016754  0E40               	movlw	64
 18871  016756  243F               	addwf	(btemp+10)^0,w,c
 18872  016758  6ED9               	movwf	fsr2l,c
 18873  01675A  0E00               	movlw	0
 18874  01675C  2040               	addwfc	(btemp+11)^0,w,c
 18875  01675E  6EDA               	movwf	fsr2h,c
 18876  016760  2ADF               	incf	indf2,f,c
 18877                           
 18878                           ;ringbufs.c: 72:   ++_this->count;
 18879                           ;stkvar	__this @ sp[(0)+-2]
 18880  016762  0EFE               	movlw	-2
 18881  016764  006F FF8C  F03F    	movff	plusw1,btemp+10
 18882  01676A  0EFF               	movlw	-1
 18883  01676C  006F FF8C  F040    	movff	plusw1,btemp+11
 18884  016772  0E42               	movlw	66
 18885  016774  243F               	addwf	(btemp+10)^0,w,c
 18886  016776  6ED9               	movwf	fsr2l,c
 18887  016778  0E00               	movlw	0
 18888  01677A  2040               	addwfc	(btemp+11)^0,w,c
 18889  01677C  6EDA               	movwf	fsr2h,c
 18890  01677E  2ADF               	incf	indf2,f,c
 18891  016780                     l1462:
 18892                           
 18893                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18894  016780  52E5               	movf	postdec1,f,c
 18895  016782  52E5               	movf	postdec1,f,c
 18896  016784  52E5               	movf	postdec1,f,c
 18897  016786  0012               	return		;funcret
 18898  016788                     __end_of_ringBufS_put_dma:
 18899                           	opt callstack 0
 18900                           
 18901 ;; *************** function _atoi *****************
 18902 ;; Defined at:
 18903 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;  s               2  [STACK] PTR const unsigned char 
 18906 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 18907 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 18908 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 18909 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 18910 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 18911 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 18912 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;  n               2  [STACK] int 
 18915 ;;  neg             2  [STACK] int 
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  2  [STACK] int 
 18918 ;; Registers used:
 18919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18920 ;; Tracked objects:
 18921 ;;		On entry : 0/4
 18922 ;;		On exit  : 0/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;Total ram usage:        0 bytes
 18930 ;; Hardware stack levels used:    1
 18931 ;; Hardware stack levels required when called:    7
 18932 ;; This function calls:
 18933 ;;		_isdigit
 18934 ;;		_isspace
 18935 ;; This function is called by:
 18936 ;;		_vfpfcnvrt
 18937 ;; This function uses a reentrant model
 18938 ;;
 18939                           
 18940                           	psect	text65
 18941  014A70                     __ptext65:
 18942                           	opt callstack 0
 18943  014A70                     _atoi:
 18944                           	opt callstack 0
 18945                           
 18946                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18947  014A70  0E09               	movlw	9
 18948  014A72  26E1               	addwf	fsr1l,f,c
 18949  014A74  0E00               	movlw	0
 18950  014A76  22E2               	addwfc	fsr1h,f,c
 18951                           
 18952                           ;stkvar	_n @ sp[(-9)+5]
 18953                           
 18954                           ;incstack = 0
 18955  014A78  0EFC               	movlw	-4
 18956  014A7A  6AE3               	clrf	plusw1,c
 18957  014A7C  0EFD               	movlw	-3
 18958  014A7E  6AE3               	clrf	plusw1,c
 18959                           
 18960                           ;stkvar	_neg @ sp[(-9)+7]
 18961  014A80  0EFE               	movlw	-2
 18962  014A82  6AE3               	clrf	plusw1,c
 18963  014A84  0EFF               	movlw	-1
 18964  014A86  6AE3               	clrf	plusw1,c
 18965  014A88  D011               	goto	l7320
 18966  014A8A                     l7318:
 18967                           
 18968                           ;stkvar	_s @ sp[(-9)+-2]
 18969  014A8A  0EF5               	movlw	-11
 18970  014A8C  50E3               	movf	plusw1,w,c
 18971  014A8E  0F01               	addlw	1
 18972  014A90  6E35               	movwf	btemp^0,c
 18973  014A92  0EF5               	movlw	-11
 18974  014A94  0060  F0D7  FFE3   	movff	btemp,plusw1
 18975  014A9A  6A35               	clrf	btemp^0,c
 18976  014A9C  0EF6               	movlw	-10
 18977  014A9E  50E3               	movf	plusw1,w,c
 18978  014AA0  2035               	addwfc	btemp^0,w,c
 18979  014AA2  6E35               	movwf	btemp^0,c
 18980  014AA4  0EF6               	movlw	-10
 18981  014AA6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18982  014AAC                     l7320:
 18983                           
 18984                           ;stkvar	_atoi$4618 @ sp[(-9)+4]
 18985  014AAC  0EFB               	movlw	-5
 18986  014AAE  6AE3               	clrf	plusw1,c
 18987  014AB0  2AE3               	incf	plusw1,f,c
 18988                           
 18989                           ;stkvar	_s @ sp[(-9)+-2]
 18990  014AB2  50E1               	movf	fsr1l,w,c
 18991  014AB4  0FF5               	addlw	-11
 18992  014AB6  6ED9               	movwf	fsr2l,c
 18993  014AB8  50E2               	movf	fsr1h,w,c
 18994  014ABA  6EDA               	movwf	fsr2h,c
 18995  014ABC  0EFF               	movlw	255
 18996  014ABE  22DA               	addwfc	fsr2h,f,c
 18997  014AC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18998  014AC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18999  014ACC                     	if	0	;tblptru may be non-zero
 19000  014ACC                     	endif
 19001  014ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19002  014ACC  0E00               	movlw	low (__mediumconst shr (0+16))
 19003  014ACE  6EF8               	movwf	tblptru,c
 19004  014AD0                     	endif
 19005  014AD0  0008               	tblrd		*
 19006  014AD2  50F5               	movf	tablat,w,c
 19007  014AD4  0A20               	xorlw	32
 19008  014AD6  B4D8               	btfsc	status,2,c
 19009  014AD8  D023               	goto	l7328
 19010  014ADA  0EF7               	movlw	247
 19011  014ADC  6E3F               	movwf	(btemp+10)^0,c
 19012  014ADE  0EFF               	movlw	255
 19013  014AE0  6E40               	movwf	(btemp+11)^0,c
 19014                           
 19015                           ;stkvar	_s @ sp[(-9)+-2]
 19016  014AE2  50E1               	movf	fsr1l,w,c
 19017  014AE4  0FF5               	addlw	-11
 19018  014AE6  6ED9               	movwf	fsr2l,c
 19019  014AE8  50E2               	movf	fsr1h,w,c
 19020  014AEA  6EDA               	movwf	fsr2h,c
 19021  014AEC  0EFF               	movlw	255
 19022  014AEE  22DA               	addwfc	fsr2h,f,c
 19023  014AF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19024  014AF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19025  014AFC                     	if	0	;tblptru may be non-zero
 19026  014AFC                     	endif
 19027  014AFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19028  014AFC  0E00               	movlw	low (__mediumconst shr (0+16))
 19029  014AFE  6EF8               	movwf	tblptru,c
 19030  014B00                     	endif
 19031  014B00  0008               	tblrd		*
 19032  014B02  50F5               	movf	tablat,w,c
 19033  014B04  6E3D               	movwf	(btemp+8)^0,c
 19034  014B06  6A3E               	clrf	(btemp+9)^0,c
 19035  014B08  503F               	movf	(btemp+10)^0,w,c
 19036  014B0A  263D               	addwf	(btemp+8)^0,f,c
 19037  014B0C  5040               	movf	(btemp+11)^0,w,c
 19038  014B0E  223E               	addwfc	(btemp+9)^0,f,c
 19039  014B10  503E               	movf	(btemp+9)^0,w,c
 19040  014B12  E104               	bnz	u7060
 19041  014B14  0E05               	movlw	5
 19042  014B16  5C3D               	subwf	(btemp+8)^0,w,c
 19043  014B18  A0D8               	btfss	status,0,c
 19044  014B1A  D002               	goto	l7328
 19045  014B1C                     u7060:
 19046                           
 19047                           ;stkvar	_atoi$4618 @ sp[(-9)+4]
 19048  014B1C  0EFB               	movlw	-5
 19049  014B1E  6AE3               	clrf	plusw1,c
 19050  014B20                     l7328:
 19051                           
 19052                           ;stkvar	_atoi$4618 @ sp[(-9)+4]
 19053  014B20  0EFB               	movlw	-5
 19054  014B22  50E3               	movf	plusw1,w,c
 19055  014B24  6E3F               	movwf	(btemp+10)^0,c
 19056  014B26  6A40               	clrf	(btemp+11)^0,c
 19057                           
 19058                           ;stkvar	_atoi$4617 @ sp[(-9)+2]
 19059  014B28  0EF9               	movlw	-7
 19060  014B2A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19061  014B30  0EFA               	movlw	-6
 19062  014B32  0060  F103  FFE3   	movff	btemp+11,plusw1
 19063                           
 19064                           ;stkvar	_atoi$4617 @ sp[(-9)+2]
 19065  014B38  0EF9               	movlw	-7
 19066  014B3A  006F FF8C  F035    	movff	plusw1,btemp
 19067  014B40  0EFA               	movlw	-6
 19068  014B42  50E3               	movf	plusw1,w,c
 19069  014B44  1035               	iorwf	btemp^0,w,c
 19070  014B46  B4D8               	btfsc	status,2,c
 19071  014B48  D01F               	goto	l7338
 19072  014B4A  D79F               	goto	l7318
 19073  014B4C                     l7334:
 19074  014B4C  0E01               	movlw	1
 19075  014B4E  6E3F               	movwf	(btemp+10)^0,c
 19076  014B50  0E00               	movlw	0
 19077  014B52  6E40               	movwf	(btemp+11)^0,c
 19078                           
 19079                           ;stkvar	_neg @ sp[(-9)+7]
 19080  014B54  0EFE               	movlw	-2
 19081  014B56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19082  014B5C  0EFF               	movlw	-1
 19083  014B5E  0060  F103  FFE3   	movff	btemp+11,plusw1
 19084  014B64                     l7336:
 19085                           
 19086                           ;stkvar	_s @ sp[(-9)+-2]
 19087  014B64  0EF5               	movlw	-11
 19088  014B66  50E3               	movf	plusw1,w,c
 19089  014B68  0F01               	addlw	1
 19090  014B6A  6E35               	movwf	btemp^0,c
 19091  014B6C  0EF5               	movlw	-11
 19092  014B6E  0060  F0D7  FFE3   	movff	btemp,plusw1
 19093  014B74  6A35               	clrf	btemp^0,c
 19094  014B76  0EF6               	movlw	-10
 19095  014B78  50E3               	movf	plusw1,w,c
 19096  014B7A  2035               	addwfc	btemp^0,w,c
 19097  014B7C  6E35               	movwf	btemp^0,c
 19098  014B7E  0EF6               	movlw	-10
 19099  014B80  0060  F0D7  FFE3   	movff	btemp,plusw1
 19100  014B86  D053               	goto	l7344
 19101  014B88                     l7338:
 19102                           
 19103                           ;stkvar	_s @ sp[(-9)+-2]
 19104  014B88  50E1               	movf	fsr1l,w,c
 19105  014B8A  0FF5               	addlw	-11
 19106  014B8C  6ED9               	movwf	fsr2l,c
 19107  014B8E  50E2               	movf	fsr1h,w,c
 19108  014B90  6EDA               	movwf	fsr2h,c
 19109  014B92  0EFF               	movlw	255
 19110  014B94  22DA               	addwfc	fsr2h,f,c
 19111  014B96  006F FF7B FFF6     	movff	postinc2,tblptrl
 19112  014B9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19113  014BA2                     	if	0	;tblptru may be non-zero
 19114  014BA2                     	endif
 19115  014BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19116  014BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 19117  014BA4  6EF8               	movwf	tblptru,c
 19118  014BA6                     	endif
 19119  014BA6  0008               	tblrd		*
 19120  014BA8  50F5               	movf	tablat,w,c
 19121  014BAA  6E3F               	movwf	(btemp+10)^0,c
 19122  014BAC  6A40               	clrf	(btemp+11)^0,c
 19123                           
 19124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19125                           ; Switch size 1, requested type "simple"
 19126                           ; Number of cases is 1, Range of values is 0 to 0
 19127                           ; switch strategies available:
 19128                           ; Name         Instructions Cycles
 19129                           ; simple_byte            4     3 (average)
 19130                           ;	Chosen strategy is simple_byte
 19131  014BAE  5040               	movf	(btemp+11)^0,w,c
 19132  014BB0  0A00               	xorlw	0	; case 0
 19133  014BB2  A4D8               	btfss	status,2,c
 19134  014BB4  D03C               	goto	l7344
 19135                           
 19136                           ; Switch size 1, requested type "simple"
 19137                           ; Number of cases is 2, Range of values is 43 to 45
 19138                           ; switch strategies available:
 19139                           ; Name         Instructions Cycles
 19140                           ; simple_byte            7     4 (average)
 19141                           ;	Chosen strategy is simple_byte
 19142  014BB6  503F               	movf	(btemp+10)^0,w,c
 19143  014BB8  0A2B               	xorlw	43	; case 43
 19144  014BBA  B4D8               	btfsc	status,2,c
 19145  014BBC  D7D3               	goto	l7336
 19146  014BBE  0A06               	xorlw	6	; case 45
 19147  014BC0  B4D8               	btfsc	status,2,c
 19148  014BC2  D7C4               	goto	l7334
 19149  014BC4  D034               	goto	l7344
 19150  014BC6                     l7340:
 19151                           
 19152                           ;stkvar	_n @ sp[(-9)+5]
 19153  014BC6  0EFC               	movlw	-4
 19154  014BC8  006F FF8C  F03F    	movff	plusw1,btemp+10
 19155  014BCE  0EFD               	movlw	-3
 19156  014BD0  006F FF8C  F040    	movff	plusw1,btemp+11
 19157  014BD6  0E0A               	movlw	10
 19158  014BD8  023F               	mulwf	(btemp+10)^0,c
 19159  014BDA  006F FFCC  F03D    	movff	prodl,btemp+8
 19160  014BE0  006F FFD0  F03E    	movff	prodh,btemp+9
 19161  014BE6  0240               	mulwf	(btemp+11)^0,c
 19162  014BE8  50F3               	movf	prodl,w,c
 19163  014BEA  263E               	addwf	(btemp+9)^0,f,c
 19164                           
 19165                           ;stkvar	_s @ sp[(-9)+-2]
 19166  014BEC  50E1               	movf	fsr1l,w,c
 19167  014BEE  0FF5               	addlw	-11
 19168  014BF0  6ED9               	movwf	fsr2l,c
 19169  014BF2  50E2               	movf	fsr1h,w,c
 19170  014BF4  6EDA               	movwf	fsr2h,c
 19171  014BF6  0EFF               	movlw	255
 19172  014BF8  22DA               	addwfc	fsr2h,f,c
 19173  014BFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19174  014C00  006F FF77 FFF7     	movff	postdec2,tblptrh
 19175  014C06                     	if	0	;tblptru may be non-zero
 19176  014C06                     	endif
 19177  014C06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19178  014C06  0E00               	movlw	low (__mediumconst shr (0+16))
 19179  014C08  6EF8               	movwf	tblptru,c
 19180  014C0A                     	endif
 19181  014C0A  0008               	tblrd		*
 19182  014C0C  50F5               	movf	tablat,w,c
 19183  014C0E  5E3D               	subwf	(btemp+8)^0,f,c
 19184  014C10  0E00               	movlw	0
 19185  014C12  5A3E               	subwfb	(btemp+9)^0,f,c
 19186  014C14  0E30               	movlw	48
 19187  014C16  263D               	addwf	(btemp+8)^0,f,c
 19188  014C18  0E00               	movlw	0
 19189  014C1A  223E               	addwfc	(btemp+9)^0,f,c
 19190                           
 19191                           ;stkvar	_n @ sp[(-9)+5]
 19192  014C1C  0EFC               	movlw	-4
 19193  014C1E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19194  014C24  0EFD               	movlw	-3
 19195  014C26  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19196  014C2C  D79B               	goto	l7336
 19197  014C2E                     l7344:
 19198  014C2E  0ED0               	movlw	208
 19199  014C30  6E3F               	movwf	(btemp+10)^0,c
 19200  014C32  0EFF               	movlw	255
 19201  014C34  6E40               	movwf	(btemp+11)^0,c
 19202                           
 19203                           ;stkvar	_s @ sp[(-9)+-2]
 19204  014C36  50E1               	movf	fsr1l,w,c
 19205  014C38  0FF5               	addlw	-11
 19206  014C3A  6ED9               	movwf	fsr2l,c
 19207  014C3C  50E2               	movf	fsr1h,w,c
 19208  014C3E  6EDA               	movwf	fsr2h,c
 19209  014C40  0EFF               	movlw	255
 19210  014C42  22DA               	addwfc	fsr2h,f,c
 19211  014C44  006F FF7B FFF6     	movff	postinc2,tblptrl
 19212  014C4A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19213  014C50                     	if	0	;tblptru may be non-zero
 19214  014C50                     	endif
 19215  014C50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19216  014C50  0E00               	movlw	low (__mediumconst shr (0+16))
 19217  014C52  6EF8               	movwf	tblptru,c
 19218  014C54                     	endif
 19219  014C54  0008               	tblrd		*
 19220  014C56  50F5               	movf	tablat,w,c
 19221  014C58  6E3D               	movwf	(btemp+8)^0,c
 19222  014C5A  6A3E               	clrf	(btemp+9)^0,c
 19223  014C5C  503F               	movf	(btemp+10)^0,w,c
 19224  014C5E  263D               	addwf	(btemp+8)^0,f,c
 19225  014C60  5040               	movf	(btemp+11)^0,w,c
 19226  014C62  223E               	addwfc	(btemp+9)^0,f,c
 19227  014C64  503E               	movf	(btemp+9)^0,w,c
 19228  014C66  E106               	bnz	u7080
 19229  014C68  0E0A               	movlw	10
 19230  014C6A  5C3D               	subwf	(btemp+8)^0,w,c
 19231  014C6C  B0D8               	btfsc	status,0,c
 19232  014C6E  D002               	goto	u7080
 19233  014C70  0E01               	movlw	1
 19234  014C72  D001               	goto	u7090
 19235  014C74                     u7080:
 19236  014C74  0E00               	movlw	0
 19237  014C76                     u7090:
 19238  014C76  6E3F               	movwf	(btemp+10)^0,c
 19239  014C78  6A40               	clrf	(btemp+11)^0,c
 19240                           
 19241                           ;stkvar	_atoi$4619 @ sp[(-9)+0]
 19242  014C7A  0EF7               	movlw	-9
 19243  014C7C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19244  014C82  0EF8               	movlw	-8
 19245  014C84  0060  F103  FFE3   	movff	btemp+11,plusw1
 19246                           
 19247                           ;stkvar	_atoi$4619 @ sp[(-9)+0]
 19248  014C8A  0EF7               	movlw	-9
 19249  014C8C  006F FF8C  F035    	movff	plusw1,btemp
 19250  014C92  0EF8               	movlw	-8
 19251  014C94  50E3               	movf	plusw1,w,c
 19252  014C96  1035               	iorwf	btemp^0,w,c
 19253  014C98  A4D8               	btfss	status,2,c
 19254  014C9A  D795               	goto	l7340
 19255                           
 19256                           ;stkvar	_neg @ sp[(-9)+7]
 19257  014C9C  0EFE               	movlw	-2
 19258  014C9E  006F FF8C  F035    	movff	plusw1,btemp
 19259  014CA4  0EFF               	movlw	-1
 19260  014CA6  50E3               	movf	plusw1,w,c
 19261  014CA8  1035               	iorwf	btemp^0,w,c
 19262  014CAA  A4D8               	btfss	status,2,c
 19263  014CAC  D00E               	goto	l7354
 19264                           
 19265                           ;stkvar	_n @ sp[(-9)+5]
 19266  014CAE  0EFC               	movlw	-4
 19267  014CB0  006F FF8C  F035    	movff	plusw1,btemp
 19268  014CB6  1E35               	comf	btemp^0,f,c
 19269  014CB8  0EFD               	movlw	-3
 19270  014CBA  006F FF8C  F036    	movff	plusw1,btemp+1
 19271  014CC0  1E36               	comf	(btemp+1)^0,f,c
 19272  014CC2  2A35               	incf	btemp^0,f,c
 19273  014CC4  B4D8               	btfsc	status,2,c
 19274  014CC6  2A36               	incf	(btemp+1)^0,f,c
 19275  014CC8  D008               	goto	l2668
 19276  014CCA                     l7354:
 19277                           
 19278                           ;stkvar	_n @ sp[(-9)+5]
 19279  014CCA  0EFC               	movlw	-4
 19280  014CCC  006F FF8C  F035    	movff	plusw1,btemp
 19281  014CD2  0EFD               	movlw	-3
 19282  014CD4  006F FF8C  F036    	movff	plusw1,btemp+1
 19283  014CDA                     l2668:
 19284                           
 19285                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19286  014CDA  0EF5               	movlw	245
 19287  014CDC  26E1               	addwf	fsr1l,f,c
 19288  014CDE  0EFF               	movlw	255
 19289  014CE0  22E2               	addwfc	fsr1h,f,c
 19290  014CE2  0012               	return		;funcret
 19291  014CE4                     __end_of_atoi:
 19292                           	opt callstack 0
 19293                           
 19294 ;; *************** function _isspace *****************
 19295 ;; Defined at:
 19296 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;  c               2  [STACK] int 
 19299 ;; Auto vars:     Size  Location     Type
 19300 ;;		None
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  2  [STACK] int 
 19303 ;; Registers used:
 19304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19314 ;;Total ram usage:        0 bytes
 19315 ;; Hardware stack levels used:    1
 19316 ;; Hardware stack levels required when called:    6
 19317 ;; This function calls:
 19318 ;;		Nothing
 19319 ;; This function is called by:
 19320 ;;		_atoi
 19321 ;; This function uses a reentrant model
 19322 ;;
 19323                           
 19324                           	psect	text66
 19325  0171E6                     __ptext66:
 19326                           	opt callstack 0
 19327  0171E6                     _isspace:
 19328                           	opt callstack 0
 19329                           
 19330                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19331  0171E6  52E6               	movf	postinc1,f,c
 19332                           
 19333                           ;stkvar	_isspace$4657 @ sp[(-1)+0]
 19334                           
 19335                           ;incstack = 0
 19336  0171E8  0EFF               	movlw	-1
 19337  0171EA  6AE3               	clrf	plusw1,c
 19338  0171EC  2AE3               	incf	plusw1,f,c
 19339                           
 19340                           ;stkvar	_c @ sp[(-1)+-2]
 19341  0171EE  0EFD               	movlw	-3
 19342  0171F0  006F FF8C  F035    	movff	plusw1,btemp
 19343  0171F6  0E20               	movlw	32
 19344  0171F8  1835               	xorwf	btemp^0,w,c
 19345  0171FA  E104               	bnz	u6050
 19346  0171FC  0EFE               	movlw	-2
 19347  0171FE  50E3               	movf	plusw1,w,c
 19348  017200  B4D8               	btfsc	status,2,c
 19349  017202  D012               	goto	l6804
 19350  017204                     u6050:
 19351                           
 19352                           ;stkvar	_c @ sp[(-1)+-2]
 19353  017204  0EFD               	movlw	-3
 19354  017206  50E3               	movf	plusw1,w,c
 19355  017208  0FF7               	addlw	247
 19356  01720A  6E3F               	movwf	(btemp+10)^0,c
 19357  01720C  0EFE               	movlw	-2
 19358  01720E  006F FF8C  F040    	movff	plusw1,btemp+11
 19359  017214  0EFF               	movlw	255
 19360  017216  2240               	addwfc	(btemp+11)^0,f,c
 19361  017218  5040               	movf	(btemp+11)^0,w,c
 19362  01721A  E104               	bnz	u6060
 19363  01721C  0E05               	movlw	5
 19364  01721E  5C3F               	subwf	(btemp+10)^0,w,c
 19365  017220  A0D8               	btfss	status,0,c
 19366  017222  D002               	goto	l6804
 19367  017224                     u6060:
 19368                           
 19369                           ;stkvar	_isspace$4657 @ sp[(-1)+0]
 19370  017224  0EFF               	movlw	-1
 19371  017226  6AE3               	clrf	plusw1,c
 19372  017228                     l6804:
 19373                           
 19374                           ;stkvar	_isspace$4657 @ sp[(-1)+0]
 19375  017228  0EFF               	movlw	-1
 19376  01722A  50E3               	movf	plusw1,w,c
 19377  01722C  6E35               	movwf	btemp^0,c
 19378  01722E  6A36               	clrf	(btemp+1)^0,c
 19379                           
 19380                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19381  017230  52E5               	movf	postdec1,f,c
 19382  017232  52E5               	movf	postdec1,f,c
 19383  017234  52E5               	movf	postdec1,f,c
 19384  017236  0012               	return		;funcret
 19385  017238                     __end_of_isspace:
 19386                           	opt callstack 0
 19387                           
 19388 ;; *************** function _isdigit *****************
 19389 ;; Defined at:
 19390 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19391 ;; Parameters:    Size  Location     Type
 19392 ;;  c               2  [STACK] int 
 19393 ;; Auto vars:     Size  Location     Type
 19394 ;;		None
 19395 ;; Return value:  Size  Location     Type
 19396 ;;                  2  [STACK] int 
 19397 ;; Registers used:
 19398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19399 ;; Tracked objects:
 19400 ;;		On entry : 0/0
 19401 ;;		On exit  : 0/0
 19402 ;;		Unchanged: 0/0
 19403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19408 ;;Total ram usage:        0 bytes
 19409 ;; Hardware stack levels used:    1
 19410 ;; Hardware stack levels required when called:    6
 19411 ;; This function calls:
 19412 ;;		Nothing
 19413 ;; This function is called by:
 19414 ;;		_vfpfcnvrt
 19415 ;;		_atoi
 19416 ;; This function uses a reentrant model
 19417 ;;
 19418                           
 19419                           	psect	text67
 19420  017684                     __ptext67:
 19421                           	opt callstack 0
 19422  017684                     _isdigit:
 19423                           	opt callstack 18
 19424                           
 19425                           ;stkvar	_c @ sp[(0)+-2]
 19426                           
 19427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19428                           ;incstack = 0
 19429  017684  0EFE               	movlw	-2
 19430  017686  50E3               	movf	plusw1,w,c
 19431  017688  0FD0               	addlw	208
 19432  01768A  6E3F               	movwf	(btemp+10)^0,c
 19433  01768C  0EFF               	movlw	-1
 19434  01768E  006F FF8C  F040    	movff	plusw1,btemp+11
 19435  017694  0EFF               	movlw	255
 19436  017696  2240               	addwfc	(btemp+11)^0,f,c
 19437  017698  5040               	movf	(btemp+11)^0,w,c
 19438  01769A  E106               	bnz	u5010
 19439  01769C  0E0A               	movlw	10
 19440  01769E  5C3F               	subwf	(btemp+10)^0,w,c
 19441  0176A0  B0D8               	btfsc	status,0,c
 19442  0176A2  D002               	goto	u5010
 19443  0176A4  0E01               	movlw	1
 19444  0176A6  D001               	goto	u5020
 19445  0176A8                     u5010:
 19446  0176A8  0E00               	movlw	0
 19447  0176AA                     u5020:
 19448  0176AA  6E35               	movwf	btemp^0,c
 19449  0176AC  6A36               	clrf	(btemp+1)^0,c
 19450                           
 19451                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19452  0176AE  52E5               	movf	postdec1,f,c
 19453  0176B0  52E5               	movf	postdec1,f,c
 19454  0176B2  0012               	return		;funcret
 19455  0176B4                     __end_of_isdigit:
 19456                           	opt callstack 0
 19457                           
 19458 ;; *************** function _set_vterm *****************
 19459 ;; Defined at:
 19460 ;;		line 104 in file "mconfig.c"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;  vterm           1  [STACK] unsigned char 
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;		None
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  1  [STACK] unsigned char 
 19467 ;; Registers used:
 19468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19469 ;; Tracked objects:
 19470 ;;		On entry : 0/0
 19471 ;;		On exit  : 3F/4
 19472 ;;		Unchanged: 0/0
 19473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19478 ;;Total ram usage:        0 bytes
 19479 ;; Hardware stack levels used:    1
 19480 ;; Hardware stack levels required when called:    6
 19481 ;; This function calls:
 19482 ;;		Nothing
 19483 ;; This function is called by:
 19484 ;;		_main
 19485 ;;		_check_help
 19486 ;; This function uses a reentrant model
 19487 ;;
 19488                           
 19489                           	psect	text68
 19490  017B88                     __ptext68:
 19491                           	opt callstack 0
 19492  017B88                     _set_vterm:
 19493                           	opt callstack 24
 19494                           
 19495                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 19496                           ;stkvar	_vterm @ sp[(0)+-1]
 19497                           
 19498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19499                           ;incstack = 0
 19500  017B88  0EFF               	movlw	-1
 19501  017B8A  006F FF8C  F040    	movff	plusw1,btemp+11
 19502  017B90  0E03               	movlw	3
 19503  017B92  1640               	andwf	(btemp+11)^0,f,c
 19504  017B94  0104               	movlb	4	; () banked
 19505  017B96  51D8               	movf	(_D+216)& (0+255),w,b
 19506  017B98  1840               	xorwf	(btemp+11)^0,w,c
 19507  017B9A  0BFE               	andlw	-2
 19508  017B9C  1840               	xorwf	(btemp+11)^0,w,c
 19509  017B9E  6FD8               	movwf	(_D+216)& (0+255),b
 19510                           
 19511                           ; BSR set to: 4
 19512                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19513  017BA0  52E5               	movf	postdec1,f,c
 19514  017BA2  0012               	return		;funcret
 19515  017BA4                     __end_of_set_vterm:
 19516                           	opt callstack 0
 19517                           
 19518 ;; *************** function _set_temp_display_help *****************
 19519 ;; Defined at:
 19520 ;;		line 208 in file "mconfig.c"
 19521 ;; Parameters:    Size  Location     Type
 19522 ;;  new_response    1  [STACK] const enum E16501
 19523 ;; Auto vars:     Size  Location     Type
 19524 ;;		None
 19525 ;; Return value:  Size  Location     Type
 19526 ;;                  1  [STACK] enum E16501
 19527 ;; Registers used:
 19528 ;;		wreg, fsr1l, fsr1h
 19529 ;; Tracked objects:
 19530 ;;		On entry : 0/4
 19531 ;;		On exit  : 3F/2
 19532 ;;		Unchanged: 0/0
 19533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19538 ;;Total ram usage:        0 bytes
 19539 ;; Hardware stack levels used:    1
 19540 ;; Hardware stack levels required when called:    6
 19541 ;; This function calls:
 19542 ;;		Nothing
 19543 ;; This function is called by:
 19544 ;;		_check_help
 19545 ;; This function uses a reentrant model
 19546 ;;
 19547                           
 19548                           	psect	text69
 19549  017CA2                     __ptext69:
 19550                           	opt callstack 0
 19551  017CA2                     _set_temp_display_help:
 19552                           	opt callstack 23
 19553                           
 19554                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 19555                           
 19556                           ; BSR set to: 4
 19557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19558                           ;incstack = 0
 19559  017CA2  0102               	movlb	2	; () banked
 19560  017CA4  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 19561                           
 19562                           ; BSR set to: 2
 19563                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 19564                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19565  017CA6  0EFF               	movlw	-1
 19566  017CA8  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 19567                           
 19568                           ; BSR set to: 2
 19569                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19570  017CAE  52E5               	movf	postdec1,f,c
 19571  017CB0  0012               	return		;funcret
 19572  017CB2                     __end_of_set_temp_display_help:
 19573                           	opt callstack 0
 19574                           
 19575 ;; *************** function _set_display_info *****************
 19576 ;; Defined at:
 19577 ;;		line 197 in file "mconfig.c"
 19578 ;; Parameters:    Size  Location     Type
 19579 ;;  new_response    1  [STACK] const enum E16501
 19580 ;; Auto vars:     Size  Location     Type
 19581 ;;		None
 19582 ;; Return value:  Size  Location     Type
 19583 ;;                  1  [STACK] enum E16986
 19584 ;; Registers used:
 19585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19586 ;; Tracked objects:
 19587 ;;		On entry : 0/4
 19588 ;;		On exit  : 0/0
 19589 ;;		Unchanged: 0/0
 19590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19595 ;;Total ram usage:        0 bytes
 19596 ;; Hardware stack levels used:    1
 19597 ;; Hardware stack levels required when called:    7
 19598 ;; This function calls:
 19599 ;;		_TimerDone
 19600 ;; This function is called by:
 19601 ;;		_main
 19602 ;;		_check_help
 19603 ;; This function uses a reentrant model
 19604 ;;
 19605                           
 19606                           	psect	text70
 19607  017AF4                     __ptext70:
 19608                           	opt callstack 0
 19609  017AF4                     _set_display_info:
 19610                           	opt callstack 23
 19611                           
 19612                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 19613                           
 19614                           ; BSR set to: 2
 19615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19616                           ;incstack = 0
 19617  017AF4  0E07               	movlw	7
 19618  017AF6  6EE6               	movwf	postinc1,c
 19619  017AF8  EC05  F0BD         	call	_TimerDone	;wreg free
 19620  017AFC  5035               	movf	btemp^0,w,c
 19621  017AFE  B4D8               	btfsc	status,2,c
 19622  017B00  D006               	goto	l1599
 19623                           
 19624                           ;mconfig.c: 202:   old_info = V.response.info;
 19625  017B02  0102               	movlb	2	; () banked
 19626  017B04  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 19627                           
 19628                           ; BSR set to: 2
 19629                           ;mconfig.c: 203:   V.response.info = new_response_info;
 19630                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19631  017B06  0EFF               	movlw	-1
 19632  017B08  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 19633  017B0E                     l1599:
 19634                           
 19635                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19636  017B0E  52E5               	movf	postdec1,f,c
 19637  017B10  0012               	return		;funcret
 19638  017B12                     __end_of_set_display_info:
 19639                           	opt callstack 0
 19640                           
 19641 ;; *************** function _mode_lamp_dim *****************
 19642 ;; Defined at:
 19643 ;;		line 13 in file "mconfig.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;  level           2  [STACK] const unsigned short 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1  [STACK] void 
 19650 ;; Registers used:
 19651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/2
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19661 ;;Total ram usage:        0 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:    7
 19664 ;; This function calls:
 19665 ;;		_PWM8_LoadDutyValue
 19666 ;; This function is called by:
 19667 ;;		_main
 19668 ;;		_check_help
 19669 ;; This function uses a reentrant model
 19670 ;;
 19671                           
 19672                           	psect	text71
 19673  017BF2                     __ptext71:
 19674                           	opt callstack 0
 19675  017BF2                     _mode_lamp_dim:
 19676                           	opt callstack 23
 19677                           
 19678                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19679                           ;stkvar	_level @ sp[(0)+-2]
 19680                           
 19681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19682                           ;incstack = 0
 19683  017BF2  0EFE               	movlw	-2
 19684  017BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19685  017BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 19686  017C00  EC11  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 19687                           
 19688                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19689  017C04  52E5               	movf	postdec1,f,c
 19690  017C06  52E5               	movf	postdec1,f,c
 19691  017C08  0012               	return		;funcret
 19692  017C0A                     __end_of_mode_lamp_dim:
 19693                           	opt callstack 0
 19694                           
 19695 ;; *************** function _mode_lamp_bright *****************
 19696 ;; Defined at:
 19697 ;;		line 18 in file "mconfig.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;		None
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;		None
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  1  [STACK] void 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/2
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;Total ram usage:        0 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:    7
 19718 ;; This function calls:
 19719 ;;		_PWM8_LoadDutyValue
 19720 ;; This function is called by:
 19721 ;;		_check_help
 19722 ;; This function uses a reentrant model
 19723 ;;
 19724                           
 19725                           	psect	text72
 19726  017CC0                     __ptext72:
 19727                           	opt callstack 0
 19728  017CC0                     _mode_lamp_bright:
 19729                           	opt callstack 22
 19730                           
 19731                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19732                           
 19733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19734                           ;incstack = 0
 19735  017CC0  0E2C               	movlw	44
 19736  017CC2  6EE6               	movwf	postinc1,c
 19737  017CC4  0E01               	movlw	1
 19738  017CC6  6EE6               	movwf	postinc1,c
 19739  017CC8  EC11  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 19740                           
 19741                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19742  017CCC  0012               	return		;funcret
 19743  017CCE                     __end_of_mode_lamp_bright:
 19744                           	opt callstack 0
 19745                           
 19746 ;; *************** function _PWM8_LoadDutyValue *****************
 19747 ;; Defined at:
 19748 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19749 ;; Parameters:    Size  Location     Type
 19750 ;;  dutyValue       2  [STACK] unsigned short 
 19751 ;; Auto vars:     Size  Location     Type
 19752 ;;		None
 19753 ;; Return value:  Size  Location     Type
 19754 ;;                  1  [STACK] void 
 19755 ;; Registers used:
 19756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19757 ;; Tracked objects:
 19758 ;;		On entry : 0/2
 19759 ;;		On exit  : 0/0
 19760 ;;		Unchanged: 0/0
 19761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19766 ;;Total ram usage:        0 bytes
 19767 ;; Hardware stack levels used:    1
 19768 ;; Hardware stack levels required when called:    6
 19769 ;; This function calls:
 19770 ;;		Nothing
 19771 ;; This function is called by:
 19772 ;;		_mode_lamp_dim
 19773 ;;		_mode_lamp_bright
 19774 ;; This function uses a reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text73
 19778  017422                     __ptext73:
 19779                           	opt callstack 0
 19780  017422                     _PWM8_LoadDutyValue:
 19781                           	opt callstack 23
 19782                           
 19783                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19784                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19785                           
 19786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19787                           ;incstack = 0
 19788  017422  0EFE               	movlw	-2
 19789  017424  006F FF8C  F03F    	movff	plusw1,btemp+10
 19790  01742A  0EFF               	movlw	-1
 19791  01742C  006F FF8C  F040    	movff	plusw1,btemp+11
 19792  017432  90D8               	bcf	status,0,c
 19793  017434  3240               	rrcf	(btemp+11)^0,f,c
 19794  017436  323F               	rrcf	(btemp+10)^0,f,c
 19795  017438  90D8               	bcf	status,0,c
 19796  01743A  3240               	rrcf	(btemp+11)^0,f,c
 19797  01743C  323F               	rrcf	(btemp+10)^0,f,c
 19798  01743E  503F               	movf	(btemp+10)^0,w,c
 19799  017440  6E61               	movwf	97,c	;volatile
 19800                           
 19801                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19802                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19803  017442  0EFE               	movlw	-2
 19804  017444  006F FF8C  F040    	movff	plusw1,btemp+11
 19805  01744A  0E03               	movlw	3
 19806  01744C  1640               	andwf	(btemp+11)^0,f,c
 19807  01744E  0E06               	movlw	6
 19808  017450  6E35               	movwf	btemp^0,c
 19809  017452                     u7545:
 19810  017452  90D8               	bcf	status,0,c
 19811  017454  3640               	rlcf	(btemp+11)^0,f,c
 19812  017456  2E35               	decfsz	btemp^0,f,c
 19813  017458  D7FC               	goto	u7545
 19814  01745A  5040               	movf	(btemp+11)^0,w,c
 19815  01745C  6E60               	movwf	96,c	;volatile
 19816                           
 19817                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19818  01745E  52E5               	movf	postdec1,f,c
 19819  017460  52E5               	movf	postdec1,f,c
 19820  017462  0012               	return		;funcret
 19821  017464                     __end_of_PWM8_LoadDutyValue:
 19822                           	opt callstack 0
 19823                           
 19824 ;; *************** function _help_button *****************
 19825 ;; Defined at:
 19826 ;;		line 26 in file "mconfig.c"
 19827 ;; Parameters:    Size  Location     Type
 19828 ;;		None
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;		None
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1  [STACK] _Bool 
 19833 ;; Registers used:
 19834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/2
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19844 ;;Total ram usage:        0 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:    7
 19847 ;; This function calls:
 19848 ;;		_StartTimer
 19849 ;;		_TimerDone
 19850 ;; This function is called by:
 19851 ;;		_check_help
 19852 ;; This function uses a reentrant model
 19853 ;;
 19854                           
 19855                           	psect	text74
 19856  0174E0                     __ptext74:
 19857                           	opt callstack 0
 19858  0174E0                     _help_button:
 19859                           	opt callstack 22
 19860                           
 19861                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19862                           
 19863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19864                           ;incstack = 0
 19865  0174E0  B0CB               	btfsc	203,0,c	;volatile
 19866  0174E2  D00C               	goto	l1542
 19867                           
 19868                           ;mconfig.c: 29:   V.help = 1;
 19869  0174E4  0102               	movlb	2	; () banked
 19870  0174E6  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 19871                           
 19872                           ; BSR set to: 2
 19873                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19874  0174E8  0E08               	movlw	8
 19875  0174EA  6EE6               	movwf	postinc1,c
 19876  0174EC  EC05  F0BD         	call	_TimerDone	;wreg free
 19877  0174F0  5035               	movf	btemp^0,w,c
 19878  0174F2  B4D8               	btfsc	status,2,c
 19879  0174F4  D003               	goto	l1542
 19880                           
 19881                           ;mconfig.c: 31:    return 1;
 19882  0174F6  0E01               	movlw	1
 19883  0174F8  6E35               	movwf	btemp^0,c
 19884  0174FA  0012               	return	
 19885  0174FC                     l1542:
 19886                           
 19887                           ;mconfig.c: 34:  if (!V.help)
 19888  0174FC  0102               	movlb	2	; () banked
 19889  0174FE  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 19890  017500  D008               	goto	l8184
 19891                           
 19892                           ; BSR set to: 2
 19893                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19894  017502  0E2C               	movlw	44
 19895  017504  6EE6               	movwf	postinc1,c
 19896  017506  0E01               	movlw	1
 19897  017508  6EE6               	movwf	postinc1,c
 19898  01750A  0E08               	movlw	8
 19899  01750C  6EE6               	movwf	postinc1,c
 19900  01750E  EC52  F0BA         	call	_StartTimer	;wreg free
 19901  017512                     l8184:
 19902                           
 19903                           ;mconfig.c: 37:  return 0;
 19904  017512  0E00               	movlw	0
 19905  017514  6E35               	movwf	btemp^0,c
 19906                           
 19907                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19908  017516  0012               	return		;funcret
 19909  017518                     __end_of_help_button:
 19910                           	opt callstack 0
 19911                           
 19912 ;; *************** function _TimerDone *****************
 19913 ;; Defined at:
 19914 ;;		line 20 in file "timers.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  timer           1  [STACK] const unsigned char 
 19917 ;; Auto vars:     Size  Location     Type
 19918 ;;		None
 19919 ;; Return value:  Size  Location     Type
 19920 ;;                  1  [STACK] _Bool 
 19921 ;; Registers used:
 19922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19923 ;; Tracked objects:
 19924 ;;		On entry : 0/4
 19925 ;;		On exit  : 0/0
 19926 ;;		Unchanged: 0/0
 19927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19932 ;;Total ram usage:        0 bytes
 19933 ;; Hardware stack levels used:    1
 19934 ;; Hardware stack levels required when called:    6
 19935 ;; This function calls:
 19936 ;;		Nothing
 19937 ;; This function is called by:
 19938 ;;		_main
 19939 ;;		_WaitMs
 19940 ;;		_help_button
 19941 ;;		_check_help
 19942 ;;		_set_display_info
 19943 ;; This function uses a reentrant model
 19944 ;;
 19945                           
 19946                           	psect	text75
 19947  017A0A                     __ptext75:
 19948                           	opt callstack 0
 19949  017A0A                     _TimerDone:
 19950                           	opt callstack 23
 19951                           
 19952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19953                           ;incstack = 0
 19954  017A0A  0004               	clrwdt		;# 
 19955                           
 19956                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19957                           ;stkvar	_timer @ sp[(0)+-1]
 19958  017A0C  0EFF               	movlw	-1
 19959  017A0E  50E3               	movf	plusw1,w,c
 19960  017A10  0D02               	mullw	2
 19961  017A12  50F3               	movf	243,w,c
 19962  017A14  0F82               	addlw	low _tickCount
 19963  017A16  6ED9               	movwf	fsr2l,c
 19964  017A18  6ADA               	clrf	fsr2h,c
 19965  017A1A  50DE               	movf	postinc2,w,c
 19966  017A1C  10DE               	iorwf	postinc2,w,c
 19967  017A1E  A4D8               	btfss	status,2,c
 19968  017A20  D002               	goto	l7640
 19969                           
 19970                           ;timers.c: 24:   return 1;
 19971  017A22  0E01               	movlw	1
 19972  017A24  D001               	goto	L17
 19973  017A26                     l7640:
 19974                           
 19975                           ;timers.c: 26:  return 0;
 19976  017A26  0E00               	movlw	0
 19977  017A28                     L17:
 19978  017A28  6E35               	movwf	btemp^0,c
 19979                           
 19980                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19981  017A2A  52E5               	movf	postdec1,f,c
 19982  017A2C  0012               	return		;funcret
 19983  017A2E                     __end_of_TimerDone:
 19984                           	opt callstack 0
 19985                           
 19986 ;; *************** function _StartTimer *****************
 19987 ;; Defined at:
 19988 ;;		line 12 in file "timers.c"
 19989 ;; Parameters:    Size  Location     Type
 19990 ;;  timer           1  [STACK] const unsigned char 
 19991 ;;  count           2  [STACK] const unsigned short 
 19992 ;; Auto vars:     Size  Location     Type
 19993 ;;		None
 19994 ;; Return value:  Size  Location     Type
 19995 ;;                  1  [STACK] void 
 19996 ;; Registers used:
 19997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19998 ;; Tracked objects:
 19999 ;;		On entry : 0/4
 20000 ;;		On exit  : 0/0
 20001 ;;		Unchanged: 0/0
 20002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20007 ;;Total ram usage:        0 bytes
 20008 ;; Hardware stack levels used:    1
 20009 ;; Hardware stack levels required when called:    6
 20010 ;; This function calls:
 20011 ;;		Nothing
 20012 ;; This function is called by:
 20013 ;;		_main
 20014 ;;		_WaitMs
 20015 ;;		_help_button
 20016 ;;		_check_help
 20017 ;; This function uses a reentrant model
 20018 ;;
 20019                           
 20020                           	psect	text76
 20021  0174A4                     __ptext76:
 20022                           	opt callstack 0
 20023  0174A4                     _StartTimer:
 20024                           	opt callstack 21
 20025                           
 20026                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20027                           ;stkvar	_count @ sp[(0)+-3]
 20028                           
 20029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20030                           ;incstack = 0
 20031  0174A4  0EFD               	movlw	-3
 20032  0174A6  006F FF8C  F03F    	movff	plusw1,btemp+10
 20033  0174AC  0EFE               	movlw	-2
 20034  0174AE  006F FF8C  F040    	movff	plusw1,btemp+11
 20035  0174B4  90D8               	bcf	status,0,c
 20036  0174B6  343F               	rlcf	(btemp+10)^0,w,c
 20037  0174B8  6E3D               	movwf	(btemp+8)^0,c
 20038  0174BA  3440               	rlcf	(btemp+11)^0,w,c
 20039  0174BC  6E3E               	movwf	(btemp+9)^0,c
 20040                           
 20041                           ;stkvar	_timer @ sp[(0)+-1]
 20042  0174BE  0EFF               	movlw	-1
 20043  0174C0  50E3               	movf	plusw1,w,c
 20044  0174C2  0D02               	mullw	2
 20045  0174C4  50F3               	movf	243,w,c
 20046  0174C6  0F82               	addlw	low _tickCount
 20047  0174C8  6ED9               	movwf	fsr2l,c
 20048  0174CA  6ADA               	clrf	fsr2h,c
 20049  0174CC  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20050  0174D2  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20051                           
 20052                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20053  0174D8  52E5               	movf	postdec1,f,c
 20054  0174DA  52E5               	movf	postdec1,f,c
 20055  0174DC  52E5               	movf	postdec1,f,c
 20056  0174DE  0012               	return		;funcret
 20057  0174E0                     __end_of_StartTimer:
 20058                           	opt callstack 0
 20059                           
 20060 ;; *************** function _display_info *****************
 20061 ;; Defined at:
 20062 ;;		line 187 in file "mconfig.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;		None
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;		None
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  1  [STACK] enum E16501
 20069 ;; Registers used:
 20070 ;;		btemp
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/2
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20080 ;;Total ram usage:        0 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    6
 20083 ;; This function calls:
 20084 ;;		Nothing
 20085 ;; This function is called by:
 20086 ;;		_check_help
 20087 ;; This function uses a reentrant model
 20088 ;;
 20089                           
 20090                           	psect	text77
 20091  017D2A                     __ptext77:
 20092                           	opt callstack 0
 20093  017D2A                     _display_info:
 20094                           	opt callstack 23
 20095                           
 20096                           ;mconfig.c: 189:  return V.response.info;
 20097                           
 20098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20099                           ;incstack = 0
 20100  017D2A  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 20101                           
 20102                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20103  017D30  0012               	return		;funcret
 20104  017D32                     __end_of_display_info:
 20105                           	opt callstack 0
 20106                           
 20107 ;; *************** function _display_help *****************
 20108 ;; Defined at:
 20109 ;;		line 192 in file "mconfig.c"
 20110 ;; Parameters:    Size  Location     Type
 20111 ;;		None
 20112 ;; Auto vars:     Size  Location     Type
 20113 ;;		None
 20114 ;; Return value:  Size  Location     Type
 20115 ;;                  1  [STACK] enum E16501
 20116 ;; Registers used:
 20117 ;;		btemp
 20118 ;; Tracked objects:
 20119 ;;		On entry : 3F/2
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;Total ram usage:        0 bytes
 20128 ;; Hardware stack levels used:    1
 20129 ;; Hardware stack levels required when called:    6
 20130 ;; This function calls:
 20131 ;;		Nothing
 20132 ;; This function is called by:
 20133 ;;		_check_help
 20134 ;; This function uses a reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text78
 20138  017D32                     __ptext78:
 20139                           	opt callstack 0
 20140  017D32                     _display_help:
 20141                           	opt callstack 23
 20142                           
 20143                           ;mconfig.c: 194:  return V.response.help_temp;
 20144                           
 20145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20146                           ;incstack = 0
 20147  017D32  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 20148                           
 20149                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20150  017D38  0012               	return		;funcret
 20151  017D3A                     __end_of_display_help:
 20152                           	opt callstack 0
 20153                           
 20154 ;; *************** function _check_adc_scan *****************
 20155 ;; Defined at:
 20156 ;;		line 47 in file "daq.c"
 20157 ;; Parameters:    Size  Location     Type
 20158 ;;		None
 20159 ;; Auto vars:     Size  Location     Type
 20160 ;;		None
 20161 ;; Return value:  Size  Location     Type
 20162 ;;                  1  [STACK] _Bool 
 20163 ;; Registers used:
 20164 ;;		btemp
 20165 ;; Tracked objects:
 20166 ;;		On entry : 0/4
 20167 ;;		On exit  : 0/0
 20168 ;;		Unchanged: 0/0
 20169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20174 ;;Total ram usage:        0 bytes
 20175 ;; Hardware stack levels used:    1
 20176 ;; Hardware stack levels required when called:    6
 20177 ;; This function calls:
 20178 ;;		Nothing
 20179 ;; This function is called by:
 20180 ;;		_main
 20181 ;; This function uses a reentrant model
 20182 ;;
 20183                           
 20184                           	psect	text79
 20185  017D3A                     __ptext79:
 20186                           	opt callstack 0
 20187  017D3A                     _check_adc_scan:
 20188                           	opt callstack 24
 20189                           
 20190                           ;daq.c: 49:  return R.done;
 20191                           
 20192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20193                           ;incstack = 0
 20194  017D3A  0060  F204  F035   	movff	_R+33,btemp	;volatile
 20195                           
 20196                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20197  017D40  0012               	return		;funcret
 20198  017D42                     __end_of_check_adc_scan:
 20199                           	opt callstack 0
 20200                           
 20201 ;; *************** function _SYSTEM_Initialize *****************
 20202 ;; Defined at:
 20203 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20204 ;; Parameters:    Size  Location     Type
 20205 ;;		None
 20206 ;; Auto vars:     Size  Location     Type
 20207 ;;		None
 20208 ;; Return value:  Size  Location     Type
 20209 ;;                  1  [STACK] void 
 20210 ;; Registers used:
 20211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20212 ;; Tracked objects:
 20213 ;;		On entry : 0/0
 20214 ;;		On exit  : 3F/3C
 20215 ;;		Unchanged: 0/0
 20216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20221 ;;Total ram usage:        0 bytes
 20222 ;; Hardware stack levels used:    1
 20223 ;; Hardware stack levels required when called:    8
 20224 ;; This function calls:
 20225 ;;		_ADCC_Initialize
 20226 ;;		_CLKREF_Initialize
 20227 ;;		_DMA1_Initialize
 20228 ;;		_DMA2_Initialize
 20229 ;;		_EXT_INT_Initialize
 20230 ;;		_FVR_Initialize
 20231 ;;		_INTERRUPT_Initialize
 20232 ;;		_OSCILLATOR_Initialize
 20233 ;;		_PIN_MANAGER_Initialize
 20234 ;;		_PMD_Initialize
 20235 ;;		_PWM8_Initialize
 20236 ;;		_SPI1_Initialize
 20237 ;;		_TMR2_Initialize
 20238 ;;		_TMR5_Initialize
 20239 ;;		_TMR6_Initialize
 20240 ;;		_UART1_Initialize
 20241 ;;		_UART2_Initialize
 20242 ;; This function is called by:
 20243 ;;		_main
 20244 ;; This function uses a reentrant model
 20245 ;;
 20246                           
 20247                           	psect	text80
 20248  01730C                     __ptext80:
 20249                           	opt callstack 0
 20250  01730C                     _SYSTEM_Initialize:
 20251                           	opt callstack 22
 20252                           
 20253                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20254                           
 20255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20256                           ;incstack = 0
 20257  01730C  EC4A  F0B7         	call	_INTERRUPT_Initialize	;wreg free
 20258                           
 20259                           ; BSR set to: 57
 20260                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20261  017310  EC3E  F0BE         	call	_PMD_Initialize	;wreg free
 20262                           
 20263                           ; BSR set to: 57
 20264                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20265  017314  EC9C  F0B5         	call	_PIN_MANAGER_Initialize	;wreg free
 20266                           
 20267                           ; BSR set to: 58
 20268                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20269  017318  EC33  F0BE         	call	_OSCILLATOR_Initialize	;wreg free
 20270                           
 20271                           ; BSR set to: 57
 20272                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20273  01731C  ECA1  F0BE         	call	_FVR_Initialize	;wreg free
 20274                           
 20275                           ; BSR set to: 62
 20276                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20277  017320  ECE1  F0B6         	call	_ADCC_Initialize	;wreg free
 20278                           
 20279                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20280  017324  EC28  F0BE         	call	_PWM8_Initialize	;wreg free
 20281                           
 20282                           ; BSR set to: 63
 20283                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20284  017328  EC05  F0BE         	call	_TMR2_Initialize	;wreg free
 20285                           
 20286                           ; BSR set to: 57
 20287                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20288  01732C  ECF8  F0BA         	call	_EXT_INT_Initialize	;wreg free
 20289                           
 20290                           ; BSR set to: 57
 20291                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20292  017330  EC9D  F0BB         	call	_TMR6_Initialize	;wreg free
 20293                           
 20294                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20295  017334  ECA9  F0B9         	call	_TMR5_Initialize	;wreg free
 20296                           
 20297                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20298  017338  ECAF  F0B7         	call	_UART1_Initialize	;wreg free
 20299                           
 20300                           ; BSR set to: 57
 20301                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20302  01733C  EC12  F0B8         	call	_UART2_Initialize	;wreg free
 20303                           
 20304                           ; BSR set to: 57
 20305                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20306  017340  EC1D  F0BE         	call	_SPI1_Initialize	;wreg free
 20307                           
 20308                           ; BSR set to: 61
 20309                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20310  017344  EC9D  F0B8         	call	_DMA2_Initialize	;wreg free
 20311                           
 20312                           ; BSR set to: 59
 20313                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20314  017348  ECAC  F0B6         	call	_DMA1_Initialize	;wreg free
 20315                           
 20316                           ; BSR set to: 59
 20317                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20318  01734C  EC7F  F0BE         	call	_CLKREF_Initialize	;wreg free
 20319                           
 20320                           ; BSR set to: 60
 20321                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20322  017350  0012               	return		;funcret
 20323  017352                     __end_of_SYSTEM_Initialize:
 20324                           	opt callstack 0
 20325                           
 20326 ;; *************** function _UART2_Initialize *****************
 20327 ;; Defined at:
 20328 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20329 ;; Parameters:    Size  Location     Type
 20330 ;;		None
 20331 ;; Auto vars:     Size  Location     Type
 20332 ;;		None
 20333 ;; Return value:  Size  Location     Type
 20334 ;;                  1  [STACK] void 
 20335 ;; Registers used:
 20336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20337 ;; Tracked objects:
 20338 ;;		On entry : 3F/39
 20339 ;;		On exit  : 3F/39
 20340 ;;		Unchanged: 0/0
 20341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20346 ;;Total ram usage:        0 bytes
 20347 ;; Hardware stack levels used:    1
 20348 ;; Hardware stack levels required when called:    7
 20349 ;; This function calls:
 20350 ;;		_UART2_SetRxInterruptHandler
 20351 ;;		_UART2_SetTxInterruptHandler
 20352 ;; This function is called by:
 20353 ;;		_SYSTEM_Initialize
 20354 ;; This function uses a reentrant model
 20355 ;;
 20356                           
 20357                           	psect	text81
 20358  017024                     __ptext81:
 20359                           	opt callstack 0
 20360  017024                     _UART2_Initialize:
 20361                           	opt callstack 22
 20362                           
 20363                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 20364                           
 20365                           ; BSR set to: 60
 20366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20367                           ;incstack = 0
 20368  017024  0139               	movlb	57	; () banked
 20369  017026  9596               	bcf	150,2,b	;volatile
 20370                           
 20371                           ; BSR set to: 57
 20372                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 20373  017028  0E4E               	movlw	low _UART2_Receive_ISR
 20374  01702A  6EE6               	movwf	postinc1,c
 20375  01702C  0E7B               	movlw	high _UART2_Receive_ISR
 20376  01702E  6EE6               	movwf	postinc1,c
 20377  017030  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 20378  017032  6EE6               	movwf	postinc1,c
 20379  017034  EC02  F0BC         	call	_UART2_SetRxInterruptHandler	;wreg free
 20380                           
 20381                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 20382  017038  0139               	movlb	57	; () banked
 20383  01703A  9796               	bcf	150,3,b	;volatile
 20384                           
 20385                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 20386  01703C  0E0E               	movlw	low _UART2_Transmit_ISR
 20387  01703E  6EE6               	movwf	postinc1,c
 20388  017040  0E77               	movlw	high _UART2_Transmit_ISR
 20389  017042  6EE6               	movwf	postinc1,c
 20390  017044  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 20391  017046  6EE6               	movwf	postinc1,c
 20392  017048  ECEE  F0BB         	call	_UART2_SetTxInterruptHandler	;wreg free
 20393                           
 20394                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 20395  01704C  013D               	movlb	61	; () banked
 20396  01704E  6BD4               	clrf	212,b	;volatile
 20397                           
 20398                           ; BSR set to: 61
 20399                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 20400  017050  6BD6               	clrf	214,b	;volatile
 20401                           
 20402                           ; BSR set to: 61
 20403                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 20404  017052  6BD8               	clrf	216,b	;volatile
 20405                           
 20406                           ; BSR set to: 61
 20407                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 20408  017054  0EB0               	movlw	176
 20409  017056  6FDA               	movwf	218,b	;volatile
 20410                           
 20411                           ; BSR set to: 61
 20412                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 20413  017058  0E80               	movlw	128
 20414  01705A  6FDB               	movwf	219,b	;volatile
 20415                           
 20416                           ; BSR set to: 61
 20417                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 20418  01705C  6BDC               	clrf	220,b	;volatile
 20419                           
 20420                           ; BSR set to: 61
 20421                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 20422  01705E  0E82               	movlw	130
 20423  017060  6FDD               	movwf	221,b	;volatile
 20424                           
 20425                           ; BSR set to: 61
 20426                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 20427  017062  0E06               	movlw	6
 20428  017064  6FDE               	movwf	222,b	;volatile
 20429                           
 20430                           ; BSR set to: 61
 20431                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 20432  017066  6BDF               	clrf	223,b	;volatile
 20433                           
 20434                           ; BSR set to: 61
 20435                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 20436  017068  6BE0               	clrf	224,b	;volatile
 20437                           
 20438                           ; BSR set to: 61
 20439                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 20440  01706A  6BE1               	clrf	225,b	;volatile
 20441                           
 20442                           ; BSR set to: 61
 20443                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 20444  01706C  6BE2               	clrf	226,b	;volatile
 20445                           
 20446                           ; BSR set to: 61
 20447                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 20448  01706E  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 20449                           
 20450                           ; BSR set to: 61
 20451                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 20452  017070  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 20453                           
 20454                           ; BSR set to: 61
 20455                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 20456  017072  0E40               	movlw	64
 20457  017074  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 20458                           
 20459                           ; BSR set to: 61
 20460                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 20461  017076  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 20462                           
 20463                           ; BSR set to: 61
 20464                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 20465  017078  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 20466                           
 20467                           ; BSR set to: 61
 20468                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 20469  01707A  6A29               	clrf	_uart2RxCount^0,c	;volatile
 20470                           
 20471                           ; BSR set to: 61
 20472                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 20473  01707C  0139               	movlb	57	; () banked
 20474  01707E  8596               	bsf	150,2,b	;volatile
 20475                           
 20476                           ; BSR set to: 57
 20477                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20478  017080  0012               	return		;funcret
 20479  017082                     __end_of_UART2_Initialize:
 20480                           	opt callstack 0
 20481                           
 20482 ;; *************** function _UART2_SetTxInterruptHandler *****************
 20483 ;; Defined at:
 20484 ;;		line 252 in file "mcc_generated_files/uart2.c"
 20485 ;; Parameters:    Size  Location     Type
 20486 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20487 ;;		 -> UART2_Transmit_ISR(1), 
 20488 ;; Auto vars:     Size  Location     Type
 20489 ;;		None
 20490 ;; Return value:  Size  Location     Type
 20491 ;;                  1  [STACK] void 
 20492 ;; Registers used:
 20493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20494 ;; Tracked objects:
 20495 ;;		On entry : 3F/39
 20496 ;;		On exit  : 0/0
 20497 ;;		Unchanged: 0/0
 20498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20503 ;;Total ram usage:        0 bytes
 20504 ;; Hardware stack levels used:    1
 20505 ;; Hardware stack levels required when called:    6
 20506 ;; This function calls:
 20507 ;;		Nothing
 20508 ;; This function is called by:
 20509 ;;		_UART2_Initialize
 20510 ;; This function uses a reentrant model
 20511 ;;
 20512                           
 20513                           	psect	text82
 20514  0177DC                     __ptext82:
 20515                           	opt callstack 0
 20516  0177DC                     _UART2_SetTxInterruptHandler:
 20517                           	opt callstack 22
 20518                           
 20519                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 20520                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20521                           
 20522                           ; BSR set to: 57
 20523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20524                           ;incstack = 0
 20525  0177DC  50E1               	movf	fsr1l,w,c
 20526  0177DE  0FFD               	addlw	-3
 20527  0177E0  6ED9               	movwf	fsr2l,c
 20528  0177E2  50E2               	movf	fsr1h,w,c
 20529  0177E4  6EDA               	movwf	fsr2h,c
 20530  0177E6  0EFF               	movlw	255
 20531  0177E8  22DA               	addwfc	fsr2h,f,c
 20532  0177EA  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 20533  0177F0  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 20534  0177F6  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 20535                           
 20536                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20537  0177FC  52E5               	movf	postdec1,f,c
 20538  0177FE  52E5               	movf	postdec1,f,c
 20539  017800  52E5               	movf	postdec1,f,c
 20540  017802  0012               	return		;funcret
 20541  017804                     __end_of_UART2_SetTxInterruptHandler:
 20542                           	opt callstack 0
 20543                           
 20544 ;; *************** function _UART2_SetRxInterruptHandler *****************
 20545 ;; Defined at:
 20546 ;;		line 248 in file "mcc_generated_files/uart2.c"
 20547 ;; Parameters:    Size  Location     Type
 20548 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20549 ;;		 -> UART2_Receive_ISR(1), 
 20550 ;; Auto vars:     Size  Location     Type
 20551 ;;		None
 20552 ;; Return value:  Size  Location     Type
 20553 ;;                  1  [STACK] void 
 20554 ;; Registers used:
 20555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20556 ;; Tracked objects:
 20557 ;;		On entry : 3F/39
 20558 ;;		On exit  : 0/0
 20559 ;;		Unchanged: 0/0
 20560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20565 ;;Total ram usage:        0 bytes
 20566 ;; Hardware stack levels used:    1
 20567 ;; Hardware stack levels required when called:    6
 20568 ;; This function calls:
 20569 ;;		Nothing
 20570 ;; This function is called by:
 20571 ;;		_UART2_Initialize
 20572 ;; This function uses a reentrant model
 20573 ;;
 20574                           
 20575                           	psect	text83
 20576  017804                     __ptext83:
 20577                           	opt callstack 0
 20578  017804                     _UART2_SetRxInterruptHandler:
 20579                           	opt callstack 22
 20580                           
 20581                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 20582                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20583                           
 20584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20585                           ;incstack = 0
 20586  017804  50E1               	movf	fsr1l,w,c
 20587  017806  0FFD               	addlw	-3
 20588  017808  6ED9               	movwf	fsr2l,c
 20589  01780A  50E2               	movf	fsr1h,w,c
 20590  01780C  6EDA               	movwf	fsr2h,c
 20591  01780E  0EFF               	movlw	255
 20592  017810  22DA               	addwfc	fsr2h,f,c
 20593  017812  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 20594  017818  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 20595  01781E  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 20596                           
 20597                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20598  017824  52E5               	movf	postdec1,f,c
 20599  017826  52E5               	movf	postdec1,f,c
 20600  017828  52E5               	movf	postdec1,f,c
 20601  01782A  0012               	return		;funcret
 20602  01782C                     __end_of_UART2_SetRxInterruptHandler:
 20603                           	opt callstack 0
 20604                           
 20605 ;; *************** function _UART1_Initialize *****************
 20606 ;; Defined at:
 20607 ;;		line 79 in file "mcc_generated_files/uart1.c"
 20608 ;; Parameters:    Size  Location     Type
 20609 ;;		None
 20610 ;; Auto vars:     Size  Location     Type
 20611 ;;		None
 20612 ;; Return value:  Size  Location     Type
 20613 ;;                  1  [STACK] void 
 20614 ;; Registers used:
 20615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20616 ;; Tracked objects:
 20617 ;;		On entry : 0/39
 20618 ;;		On exit  : 3F/39
 20619 ;;		Unchanged: 0/0
 20620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20625 ;;Total ram usage:        0 bytes
 20626 ;; Hardware stack levels used:    1
 20627 ;; Hardware stack levels required when called:    7
 20628 ;; This function calls:
 20629 ;;		_UART1_SetRxInterruptHandler
 20630 ;;		_UART1_SetTxInterruptHandler
 20631 ;; This function is called by:
 20632 ;;		_SYSTEM_Initialize
 20633 ;; This function uses a reentrant model
 20634 ;;
 20635                           
 20636                           	psect	text84
 20637  016F5E                     __ptext84:
 20638                           	opt callstack 0
 20639  016F5E                     _UART1_Initialize:
 20640                           	opt callstack 22
 20641                           
 20642                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 20643                           
 20644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20645                           ;incstack = 0
 20646  016F5E  0139               	movlb	57	; () banked
 20647  016F60  9793               	bcf	147,3,b	;volatile
 20648                           
 20649                           ; BSR set to: 57
 20650                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 20651  016F62  0E30               	movlw	low _UART1_Receive_ISR
 20652  016F64  6EE6               	movwf	postinc1,c
 20653  016F66  0E7B               	movlw	high _UART1_Receive_ISR
 20654  016F68  6EE6               	movwf	postinc1,c
 20655  016F6A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 20656  016F6C  6EE6               	movwf	postinc1,c
 20657  016F6E  EC2A  F0BC         	call	_UART1_SetRxInterruptHandler	;wreg free
 20658                           
 20659                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 20660  016F72  0139               	movlb	57	; () banked
 20661  016F74  9993               	bcf	147,4,b	;volatile
 20662                           
 20663                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 20664  016F76  0EE2               	movlw	low _UART1_Transmit_ISR
 20665  016F78  6EE6               	movwf	postinc1,c
 20666  016F7A  0E76               	movlw	high _UART1_Transmit_ISR
 20667  016F7C  6EE6               	movwf	postinc1,c
 20668  016F7E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 20669  016F80  6EE6               	movwf	postinc1,c
 20670  016F82  EC16  F0BC         	call	_UART1_SetTxInterruptHandler	;wreg free
 20671                           
 20672                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 20673  016F86  013D               	movlb	61	; () banked
 20674  016F88  6BEC               	clrf	236,b	;volatile
 20675                           
 20676                           ; BSR set to: 61
 20677                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 20678  016F8A  6BED               	clrf	237,b	;volatile
 20679                           
 20680                           ; BSR set to: 61
 20681                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 20682  016F8C  6BEE               	clrf	238,b	;volatile
 20683                           
 20684                           ; BSR set to: 61
 20685                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 20686  016F8E  6BEF               	clrf	239,b	;volatile
 20687                           
 20688                           ; BSR set to: 61
 20689                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 20690  016F90  6BF0               	clrf	240,b	;volatile
 20691                           
 20692                           ; BSR set to: 61
 20693                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 20694  016F92  6BF1               	clrf	241,b	;volatile
 20695                           
 20696                           ; BSR set to: 61
 20697                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 20698  016F94  0EB0               	movlw	176
 20699  016F96  6FF2               	movwf	242,b	;volatile
 20700                           
 20701                           ; BSR set to: 61
 20702                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 20703  016F98  0E80               	movlw	128
 20704  016F9A  6FF3               	movwf	243,b	;volatile
 20705                           
 20706                           ; BSR set to: 61
 20707                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 20708  016F9C  6BF4               	clrf	244,b	;volatile
 20709                           
 20710                           ; BSR set to: 61
 20711                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 20712  016F9E  0E82               	movlw	130
 20713  016FA0  6FF5               	movwf	245,b	;volatile
 20714                           
 20715                           ; BSR set to: 61
 20716                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 20717  016FA2  0E06               	movlw	6
 20718  016FA4  6FF6               	movwf	246,b	;volatile
 20719                           
 20720                           ; BSR set to: 61
 20721                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 20722  016FA6  6BF7               	clrf	247,b	;volatile
 20723                           
 20724                           ; BSR set to: 61
 20725                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 20726  016FA8  6BF8               	clrf	248,b	;volatile
 20727                           
 20728                           ; BSR set to: 61
 20729                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 20730  016FAA  6BF9               	clrf	249,b	;volatile
 20731                           
 20732                           ; BSR set to: 61
 20733                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 20734  016FAC  6BFA               	clrf	250,b	;volatile
 20735                           
 20736                           ; BSR set to: 61
 20737                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 20738  016FAE  6A34               	clrf	_uart1TxHead^0,c	;volatile
 20739                           
 20740                           ; BSR set to: 61
 20741                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 20742  016FB0  6A33               	clrf	_uart1TxTail^0,c	;volatile
 20743                           
 20744                           ; BSR set to: 61
 20745                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 20746  016FB2  0E40               	movlw	64
 20747  016FB4  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 20748                           
 20749                           ; BSR set to: 61
 20750                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 20751  016FB6  6A31               	clrf	_uart1RxHead^0,c	;volatile
 20752                           
 20753                           ; BSR set to: 61
 20754                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 20755  016FB8  6A30               	clrf	_uart1RxTail^0,c	;volatile
 20756                           
 20757                           ; BSR set to: 61
 20758                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 20759  016FBA  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 20760                           
 20761                           ; BSR set to: 61
 20762                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 20763  016FBC  0139               	movlb	57	; () banked
 20764  016FBE  8793               	bsf	147,3,b	;volatile
 20765                           
 20766                           ; BSR set to: 57
 20767                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20768  016FC0  0012               	return		;funcret
 20769  016FC2                     __end_of_UART1_Initialize:
 20770                           	opt callstack 0
 20771                           
 20772 ;; *************** function _UART1_SetTxInterruptHandler *****************
 20773 ;; Defined at:
 20774 ;;		line 246 in file "mcc_generated_files/uart1.c"
 20775 ;; Parameters:    Size  Location     Type
 20776 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20777 ;;		 -> UART1_Transmit_ISR(1), 
 20778 ;; Auto vars:     Size  Location     Type
 20779 ;;		None
 20780 ;; Return value:  Size  Location     Type
 20781 ;;                  1  [STACK] void 
 20782 ;; Registers used:
 20783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20784 ;; Tracked objects:
 20785 ;;		On entry : 3F/39
 20786 ;;		On exit  : 0/0
 20787 ;;		Unchanged: 0/0
 20788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20793 ;;Total ram usage:        0 bytes
 20794 ;; Hardware stack levels used:    1
 20795 ;; Hardware stack levels required when called:    6
 20796 ;; This function calls:
 20797 ;;		Nothing
 20798 ;; This function is called by:
 20799 ;;		_UART1_Initialize
 20800 ;; This function uses a reentrant model
 20801 ;;
 20802                           
 20803                           	psect	text85
 20804  01782C                     __ptext85:
 20805                           	opt callstack 0
 20806  01782C                     _UART1_SetTxInterruptHandler:
 20807                           	opt callstack 22
 20808                           
 20809                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 20810                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20811                           
 20812                           ; BSR set to: 57
 20813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20814                           ;incstack = 0
 20815  01782C  50E1               	movf	fsr1l,w,c
 20816  01782E  0FFD               	addlw	-3
 20817  017830  6ED9               	movwf	fsr2l,c
 20818  017832  50E2               	movf	fsr1h,w,c
 20819  017834  6EDA               	movwf	fsr2h,c
 20820  017836  0EFF               	movlw	255
 20821  017838  22DA               	addwfc	fsr2h,f,c
 20822  01783A  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 20823  017840  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 20824  017846  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 20825                           
 20826                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20827  01784C  52E5               	movf	postdec1,f,c
 20828  01784E  52E5               	movf	postdec1,f,c
 20829  017850  52E5               	movf	postdec1,f,c
 20830  017852  0012               	return		;funcret
 20831  017854                     __end_of_UART1_SetTxInterruptHandler:
 20832                           	opt callstack 0
 20833                           
 20834 ;; *************** function _UART1_SetRxInterruptHandler *****************
 20835 ;; Defined at:
 20836 ;;		line 241 in file "mcc_generated_files/uart1.c"
 20837 ;; Parameters:    Size  Location     Type
 20838 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20839 ;;		 -> UART1_Receive_ISR(1), 
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;		None
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1  [STACK] void 
 20844 ;; Registers used:
 20845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20846 ;; Tracked objects:
 20847 ;;		On entry : 3F/39
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20855 ;;Total ram usage:        0 bytes
 20856 ;; Hardware stack levels used:    1
 20857 ;; Hardware stack levels required when called:    6
 20858 ;; This function calls:
 20859 ;;		Nothing
 20860 ;; This function is called by:
 20861 ;;		_UART1_Initialize
 20862 ;; This function uses a reentrant model
 20863 ;;
 20864                           
 20865                           	psect	text86
 20866  017854                     __ptext86:
 20867                           	opt callstack 0
 20868  017854                     _UART1_SetRxInterruptHandler:
 20869                           	opt callstack 22
 20870                           
 20871                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 20872                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20873                           
 20874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20875                           ;incstack = 0
 20876  017854  50E1               	movf	fsr1l,w,c
 20877  017856  0FFD               	addlw	-3
 20878  017858  6ED9               	movwf	fsr2l,c
 20879  01785A  50E2               	movf	fsr1h,w,c
 20880  01785C  6EDA               	movwf	fsr2h,c
 20881  01785E  0EFF               	movlw	255
 20882  017860  22DA               	addwfc	fsr2h,f,c
 20883  017862  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 20884  017868  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 20885  01786E  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 20886                           
 20887                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20888  017874  52E5               	movf	postdec1,f,c
 20889  017876  52E5               	movf	postdec1,f,c
 20890  017878  52E5               	movf	postdec1,f,c
 20891  01787A  0012               	return		;funcret
 20892  01787C                     __end_of_UART1_SetRxInterruptHandler:
 20893                           	opt callstack 0
 20894                           
 20895 ;; *************** function _TMR6_Initialize *****************
 20896 ;; Defined at:
 20897 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;		None
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;		None
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  1  [STACK] void 
 20904 ;; Registers used:
 20905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20906 ;; Tracked objects:
 20907 ;;		On entry : 3F/39
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20915 ;;Total ram usage:        0 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:    7
 20918 ;; This function calls:
 20919 ;;		_TMR6_SetInterruptHandler
 20920 ;; This function is called by:
 20921 ;;		_SYSTEM_Initialize
 20922 ;; This function uses a reentrant model
 20923 ;;
 20924                           
 20925                           	psect	text87
 20926  01773A                     __ptext87:
 20927                           	opt callstack 0
 20928  01773A                     _TMR6_Initialize:
 20929                           	opt callstack 22
 20930                           
 20931                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 20932                           
 20933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20934                           ;incstack = 0
 20935  01773A  0E01               	movlw	1
 20936  01773C  6E96               	movwf	150,c	;volatile
 20937                           
 20938                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 20939  01773E  6A95               	clrf	149,c	;volatile
 20940                           
 20941                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 20942  017740  6A97               	clrf	151,c	;volatile
 20943                           
 20944                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 20945  017742  0E7C               	movlw	124
 20946  017744  6E93               	movwf	147,c	;volatile
 20947                           
 20948                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 20949  017746  6A92               	clrf	146,c	;volatile
 20950                           
 20951                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 20952  017748  0139               	movlb	57	; () banked
 20953  01774A  91A9               	bcf	169,0,b	;volatile
 20954                           
 20955                           ; BSR set to: 57
 20956                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 20957  01774C  8199               	bsf	153,0,b	;volatile
 20958                           
 20959                           ; BSR set to: 57
 20960                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 20961  01774E  0E98               	movlw	low _TMR6_DefaultInterruptHandler
 20962  017750  6EE6               	movwf	postinc1,c
 20963  017752  0E73               	movlw	high _TMR6_DefaultInterruptHandler
 20964  017754  6EE6               	movwf	postinc1,c
 20965  017756  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20966  017758  6EE6               	movwf	postinc1,c
 20967  01775A  EC3E  F0BC         	call	_TMR6_SetInterruptHandler	;wreg free
 20968                           
 20969                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 20970  01775E  0EE0               	movlw	224
 20971  017760  6E94               	movwf	148,c	;volatile
 20972                           
 20973                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20974  017762  0012               	return		;funcret
 20975  017764                     __end_of_TMR6_Initialize:
 20976                           	opt callstack 0
 20977                           
 20978 ;; *************** function _TMR6_SetInterruptHandler *****************
 20979 ;; Defined at:
 20980 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 20981 ;; Parameters:    Size  Location     Type
 20982 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20983 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 20984 ;; Auto vars:     Size  Location     Type
 20985 ;;		None
 20986 ;; Return value:  Size  Location     Type
 20987 ;;                  1  [STACK] void 
 20988 ;; Registers used:
 20989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20990 ;; Tracked objects:
 20991 ;;		On entry : 3F/39
 20992 ;;		On exit  : 0/0
 20993 ;;		Unchanged: 0/0
 20994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20999 ;;Total ram usage:        0 bytes
 21000 ;; Hardware stack levels used:    1
 21001 ;; Hardware stack levels required when called:    6
 21002 ;; This function calls:
 21003 ;;		Nothing
 21004 ;; This function is called by:
 21005 ;;		_TMR6_Initialize
 21006 ;; This function uses a reentrant model
 21007 ;;
 21008                           
 21009                           	psect	text88
 21010  01787C                     __ptext88:
 21011                           	opt callstack 0
 21012  01787C                     _TMR6_SetInterruptHandler:
 21013                           	opt callstack 22
 21014                           
 21015                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21016                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21017                           
 21018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21019                           ;incstack = 0
 21020  01787C  50E1               	movf	fsr1l,w,c
 21021  01787E  0FFD               	addlw	-3
 21022  017880  6ED9               	movwf	fsr2l,c
 21023  017882  50E2               	movf	fsr1h,w,c
 21024  017884  6EDA               	movwf	fsr2h,c
 21025  017886  0EFF               	movlw	255
 21026  017888  22DA               	addwfc	fsr2h,f,c
 21027  01788A  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21028  017890  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21029  017896  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21030                           
 21031                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21032  01789C  52E5               	movf	postdec1,f,c
 21033  01789E  52E5               	movf	postdec1,f,c
 21034  0178A0  52E5               	movf	postdec1,f,c
 21035  0178A2  0012               	return		;funcret
 21036  0178A4                     __end_of_TMR6_SetInterruptHandler:
 21037                           	opt callstack 0
 21038                           
 21039 ;; *************** function _TMR5_Initialize *****************
 21040 ;; Defined at:
 21041 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21042 ;; Parameters:    Size  Location     Type
 21043 ;;		None
 21044 ;; Auto vars:     Size  Location     Type
 21045 ;;		None
 21046 ;; Return value:  Size  Location     Type
 21047 ;;                  1  [STACK] void 
 21048 ;; Registers used:
 21049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21050 ;; Tracked objects:
 21051 ;;		On entry : 0/39
 21052 ;;		On exit  : 0/0
 21053 ;;		Unchanged: 0/0
 21054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21059 ;;Total ram usage:        0 bytes
 21060 ;; Hardware stack levels used:    1
 21061 ;; Hardware stack levels required when called:    7
 21062 ;; This function calls:
 21063 ;;		_TMR5_SetInterruptHandler
 21064 ;; This function is called by:
 21065 ;;		_SYSTEM_Initialize
 21066 ;; This function uses a reentrant model
 21067 ;;
 21068                           
 21069                           	psect	text89
 21070  017352                     __ptext89:
 21071                           	opt callstack 0
 21072  017352                     _TMR5_Initialize:
 21073                           	opt callstack 22
 21074                           
 21075                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21076                           
 21077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21078                           ;incstack = 0
 21079  017352  6A9B               	clrf	155,c	;volatile
 21080                           
 21081                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21082  017354  6A9C               	clrf	156,c	;volatile
 21083                           
 21084                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21085  017356  0E01               	movlw	1
 21086  017358  6E9D               	movwf	157,c	;volatile
 21087                           
 21088                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21089  01735A  0E63               	movlw	99
 21090  01735C  6E99               	movwf	153,c	;volatile
 21091                           
 21092                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21093  01735E  0EC0               	movlw	192
 21094  017360  6E98               	movwf	152,c	;volatile
 21095                           
 21096                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21097  017362  5098               	movf	152,w,c	;volatile
 21098  017364  006F FE64  F035    	movff	16281,btemp	;volatile
 21099  01736A  6A36               	clrf	(btemp+1)^0,c
 21100  01736C  0060  F0D4  F036   	movff	btemp,btemp+1
 21101  017372  6A35               	clrf	btemp^0,c
 21102  017374  1035               	iorwf	btemp^0,w,c
 21103  017376  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21104  017378  5036               	movf	(btemp+1)^0,w,c
 21105  01737A  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21106                           
 21107                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21108  01737C  0139               	movlb	57	; () banked
 21109  01737E  9DA8               	bcf	168,6,b	;volatile
 21110                           
 21111                           ; BSR set to: 57
 21112                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21113  017380  8D98               	bsf	152,6,b	;volatile
 21114                           
 21115                           ; BSR set to: 57
 21116                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21117  017382  0EBE               	movlw	low _TMR5_DefaultInterruptHandler
 21118  017384  6EE6               	movwf	postinc1,c
 21119  017386  0E7B               	movlw	high _TMR5_DefaultInterruptHandler
 21120  017388  6EE6               	movwf	postinc1,c
 21121  01738A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21122  01738C  6EE6               	movwf	postinc1,c
 21123  01738E  EC52  F0BC         	call	_TMR5_SetInterruptHandler	;wreg free
 21124                           
 21125                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21126  017392  0E31               	movlw	49
 21127  017394  6E9A               	movwf	154,c	;volatile
 21128                           
 21129                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21130  017396  0012               	return		;funcret
 21131  017398                     __end_of_TMR5_Initialize:
 21132                           	opt callstack 0
 21133                           
 21134 ;; *************** function _TMR5_SetInterruptHandler *****************
 21135 ;; Defined at:
 21136 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21137 ;; Parameters:    Size  Location     Type
 21138 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21139 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21140 ;; Auto vars:     Size  Location     Type
 21141 ;;		None
 21142 ;; Return value:  Size  Location     Type
 21143 ;;                  1  [STACK] void 
 21144 ;; Registers used:
 21145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21146 ;; Tracked objects:
 21147 ;;		On entry : 3F/39
 21148 ;;		On exit  : 0/0
 21149 ;;		Unchanged: 0/0
 21150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21155 ;;Total ram usage:        0 bytes
 21156 ;; Hardware stack levels used:    1
 21157 ;; Hardware stack levels required when called:    6
 21158 ;; This function calls:
 21159 ;;		Nothing
 21160 ;; This function is called by:
 21161 ;;		_TMR5_Initialize
 21162 ;; This function uses a reentrant model
 21163 ;;
 21164                           
 21165                           	psect	text90
 21166  0178A4                     __ptext90:
 21167                           	opt callstack 0
 21168  0178A4                     _TMR5_SetInterruptHandler:
 21169                           	opt callstack 22
 21170                           
 21171                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21172                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21173                           
 21174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21175                           ;incstack = 0
 21176  0178A4  50E1               	movf	fsr1l,w,c
 21177  0178A6  0FFD               	addlw	-3
 21178  0178A8  6ED9               	movwf	fsr2l,c
 21179  0178AA  50E2               	movf	fsr1h,w,c
 21180  0178AC  6EDA               	movwf	fsr2h,c
 21181  0178AE  0EFF               	movlw	255
 21182  0178B0  22DA               	addwfc	fsr2h,f,c
 21183  0178B2  006F FF78  F0B2    	movff	postinc2,_TMR5_InterruptHandler
 21184  0178B8  006F FF78  F0B3    	movff	postinc2,_TMR5_InterruptHandler+1
 21185  0178BE  006F FF74  F0B4    	movff	postdec2,_TMR5_InterruptHandler+2
 21186                           
 21187                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21188  0178C4  52E5               	movf	postdec1,f,c
 21189  0178C6  52E5               	movf	postdec1,f,c
 21190  0178C8  52E5               	movf	postdec1,f,c
 21191  0178CA  0012               	return		;funcret
 21192  0178CC                     __end_of_TMR5_SetInterruptHandler:
 21193                           	opt callstack 0
 21194                           
 21195 ;; *************** function _TMR2_Initialize *****************
 21196 ;; Defined at:
 21197 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21198 ;; Parameters:    Size  Location     Type
 21199 ;;		None
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;		None
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  1  [STACK] void 
 21204 ;; Registers used:
 21205 ;;		wreg, status,2
 21206 ;; Tracked objects:
 21207 ;;		On entry : 3F/3F
 21208 ;;		On exit  : 3F/39
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21215 ;;Total ram usage:        0 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:    6
 21218 ;; This function calls:
 21219 ;;		Nothing
 21220 ;; This function is called by:
 21221 ;;		_SYSTEM_Initialize
 21222 ;; This function uses a reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text91
 21226  017C0A                     __ptext91:
 21227                           	opt callstack 0
 21228  017C0A                     _TMR2_Initialize:
 21229                           	opt callstack 23
 21230                           
 21231                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21232                           
 21233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21234                           ;incstack = 0
 21235  017C0A  0E01               	movlw	1
 21236  017C0C  6EAE               	movwf	174,c	;volatile
 21237                           
 21238                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21239  017C0E  6AAD               	clrf	173,c	;volatile
 21240                           
 21241                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21242  017C10  6AAF               	clrf	175,c	;volatile
 21243                           
 21244                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21245  017C12  0E63               	movlw	99
 21246  017C14  6EAB               	movwf	171,c	;volatile
 21247                           
 21248                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21249  017C16  6AAA               	clrf	170,c	;volatile
 21250                           
 21251                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21252  017C18  0139               	movlb	57	; () banked
 21253  017C1A  95A4               	bcf	164,2,b	;volatile
 21254                           
 21255                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21256  017C1C  0EC0               	movlw	192
 21257  017C1E  6EAC               	movwf	172,c	;volatile
 21258                           
 21259                           ; BSR set to: 57
 21260                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21261  017C20  0012               	return		;funcret
 21262  017C22                     __end_of_TMR2_Initialize:
 21263                           	opt callstack 0
 21264                           
 21265 ;; *************** function _SPI1_Initialize *****************
 21266 ;; Defined at:
 21267 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21268 ;; Parameters:    Size  Location     Type
 21269 ;;		None
 21270 ;; Auto vars:     Size  Location     Type
 21271 ;;		None
 21272 ;; Return value:  Size  Location     Type
 21273 ;;                  1  [STACK] void 
 21274 ;; Registers used:
 21275 ;;		wreg, status,2
 21276 ;; Tracked objects:
 21277 ;;		On entry : 3F/39
 21278 ;;		On exit  : 3F/3D
 21279 ;;		Unchanged: 0/0
 21280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21285 ;;Total ram usage:        0 bytes
 21286 ;; Hardware stack levels used:    1
 21287 ;; Hardware stack levels required when called:    6
 21288 ;; This function calls:
 21289 ;;		Nothing
 21290 ;; This function is called by:
 21291 ;;		_SYSTEM_Initialize
 21292 ;; This function uses a reentrant model
 21293 ;;
 21294                           
 21295                           	psect	text92
 21296  017C3A                     __ptext92:
 21297                           	opt callstack 0
 21298  017C3A                     _SPI1_Initialize:
 21299                           	opt callstack 23
 21300                           
 21301                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21302                           
 21303                           ; BSR set to: 57
 21304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21305                           ;incstack = 0
 21306  017C3A  0E40               	movlw	64
 21307  017C3C  013D               	movlb	61	; () banked
 21308  017C3E  6F15               	movwf	21,b	;volatile
 21309                           
 21310                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21311  017C40  0E03               	movlw	3
 21312  017C42  6F16               	movwf	22,b	;volatile
 21313                           
 21314                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21315  017C44  0E4F               	movlw	79
 21316  017C46  6F19               	movwf	25,b	;volatile
 21317                           
 21318                           ; BSR set to: 61
 21319                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21320  017C48  6B1C               	clrf	28,b	;volatile
 21321                           
 21322                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21323  017C4A  0E83               	movlw	131
 21324  017C4C  6F14               	movwf	20,b	;volatile
 21325                           
 21326                           ; BSR set to: 61
 21327                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21328  017C4E  0012               	return		;funcret
 21329  017C50                     __end_of_SPI1_Initialize:
 21330                           	opt callstack 0
 21331                           
 21332 ;; *************** function _PWM8_Initialize *****************
 21333 ;; Defined at:
 21334 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21335 ;; Parameters:    Size  Location     Type
 21336 ;;		None
 21337 ;; Auto vars:     Size  Location     Type
 21338 ;;		None
 21339 ;; Return value:  Size  Location     Type
 21340 ;;                  1  [STACK] void 
 21341 ;; Registers used:
 21342 ;;		wreg, status,2
 21343 ;; Tracked objects:
 21344 ;;		On entry : 0/3E
 21345 ;;		On exit  : 3F/3F
 21346 ;;		Unchanged: 0/0
 21347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21352 ;;Total ram usage:        0 bytes
 21353 ;; Hardware stack levels used:    1
 21354 ;; Hardware stack levels required when called:    6
 21355 ;; This function calls:
 21356 ;;		Nothing
 21357 ;; This function is called by:
 21358 ;;		_SYSTEM_Initialize
 21359 ;; This function uses a reentrant model
 21360 ;;
 21361                           
 21362                           	psect	text93
 21363  017C50                     __ptext93:
 21364                           	opt callstack 0
 21365  017C50                     _PWM8_Initialize:
 21366                           	opt callstack 23
 21367                           
 21368                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 21369                           
 21370                           ; BSR set to: 61
 21371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21372                           ;incstack = 0
 21373  017C50  0E80               	movlw	128
 21374  017C52  6E62               	movwf	98,c	;volatile
 21375                           
 21376                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 21377  017C54  6A61               	clrf	97,c	;volatile
 21378                           
 21379                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 21380  017C56  0E40               	movlw	64
 21381  017C58  6E60               	movwf	96,c	;volatile
 21382                           
 21383                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 21384  017C5A  013F               	movlb	63	; () banked
 21385  017C5C  515F               	movf	95,w,b	;volatile
 21386  017C5E  0B3F               	andlw	-193
 21387  017C60  0940               	iorlw	64
 21388  017C62  6F5F               	movwf	95,b	;volatile
 21389                           
 21390                           ; BSR set to: 63
 21391                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21392  017C64  0012               	return		;funcret
 21393  017C66                     __end_of_PWM8_Initialize:
 21394                           	opt callstack 0
 21395                           
 21396 ;; *************** function _PMD_Initialize *****************
 21397 ;; Defined at:
 21398 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21399 ;; Parameters:    Size  Location     Type
 21400 ;;		None
 21401 ;; Auto vars:     Size  Location     Type
 21402 ;;		None
 21403 ;; Return value:  Size  Location     Type
 21404 ;;                  1  [STACK] void 
 21405 ;; Registers used:
 21406 ;;		None
 21407 ;; Tracked objects:
 21408 ;;		On entry : 3F/39
 21409 ;;		On exit  : 3F/39
 21410 ;;		Unchanged: 0/0
 21411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21416 ;;Total ram usage:        0 bytes
 21417 ;; Hardware stack levels used:    1
 21418 ;; Hardware stack levels required when called:    6
 21419 ;; This function calls:
 21420 ;;		Nothing
 21421 ;; This function is called by:
 21422 ;;		_SYSTEM_Initialize
 21423 ;; This function uses a reentrant model
 21424 ;;
 21425                           
 21426                           	psect	text94
 21427  017C7C                     __ptext94:
 21428                           	opt callstack 0
 21429  017C7C                     _PMD_Initialize:
 21430                           	opt callstack 23
 21431                           
 21432                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 21433                           
 21434                           ; BSR set to: 63
 21435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21436                           ;incstack = 0
 21437  017C7C  0139               	movlb	57	; () banked
 21438  017C7E  6BC0               	clrf	192,b	;volatile
 21439                           
 21440                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 21441  017C80  6BC1               	clrf	193,b	;volatile
 21442                           
 21443                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 21444  017C82  6BC2               	clrf	194,b	;volatile
 21445                           
 21446                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 21447  017C84  6BC3               	clrf	195,b	;volatile
 21448                           
 21449                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 21450  017C86  6BC4               	clrf	196,b	;volatile
 21451                           
 21452                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 21453  017C88  6BC5               	clrf	197,b	;volatile
 21454                           
 21455                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 21456  017C8A  6BC6               	clrf	198,b	;volatile
 21457                           
 21458                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 21459  017C8C  6BC7               	clrf	199,b	;volatile
 21460                           
 21461                           ; BSR set to: 57
 21462                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21463  017C8E  0012               	return		;funcret
 21464  017C90                     __end_of_PMD_Initialize:
 21465                           	opt callstack 0
 21466                           
 21467 ;; *************** function _PIN_MANAGER_Initialize *****************
 21468 ;; Defined at:
 21469 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;		None
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;		None
 21474 ;; Return value:  Size  Location     Type
 21475 ;;                  1  [STACK] void 
 21476 ;; Registers used:
 21477 ;;		wreg, status,2
 21478 ;; Tracked objects:
 21479 ;;		On entry : 3F/39
 21480 ;;		On exit  : 3F/3A
 21481 ;;		Unchanged: 0/0
 21482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21487 ;;Total ram usage:        0 bytes
 21488 ;; Hardware stack levels used:    1
 21489 ;; Hardware stack levels required when called:    6
 21490 ;; This function calls:
 21491 ;;		Nothing
 21492 ;; This function is called by:
 21493 ;;		_SYSTEM_Initialize
 21494 ;; This function uses a reentrant model
 21495 ;;
 21496                           
 21497                           	psect	text95
 21498  016B38                     __ptext95:
 21499                           	opt callstack 0
 21500  016B38                     _PIN_MANAGER_Initialize:
 21501                           	opt callstack 23
 21502                           
 21503                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 21504                           
 21505                           ; BSR set to: 57
 21506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21507                           ;incstack = 0
 21508  016B38  0E07               	movlw	7
 21509  016B3A  6EBE               	movwf	190,c	;volatile
 21510                           
 21511                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 21512  016B3C  6ABD               	clrf	189,c	;volatile
 21513                           
 21514                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 21515  016B3E  6ABA               	clrf	186,c	;volatile
 21516                           
 21517                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 21518  016B40  6ABF               	clrf	191,c	;volatile
 21519                           
 21520                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 21521  016B42  6ABB               	clrf	187,c	;volatile
 21522                           
 21523                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 21524  016B44  0E07               	movlw	7
 21525  016B46  6EBC               	movwf	188,c	;volatile
 21526                           
 21527                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 21528  016B48  6AC6               	clrf	198,c	;volatile
 21529                           
 21530                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 21531  016B4A  0E0F               	movlw	15
 21532  016B4C  6EC7               	movwf	199,c	;volatile
 21533                           
 21534                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 21535  016B4E  68C2               	setf	194,c	;volatile
 21536                           
 21537                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 21538  016B50  0EBF               	movlw	191
 21539  016B52  6EC3               	movwf	195,c	;volatile
 21540                           
 21541                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 21542  016B54  0E90               	movlw	144
 21543  016B56  6EC4               	movwf	196,c	;volatile
 21544                           
 21545                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 21546  016B58  0E0C               	movlw	12
 21547  016B5A  6EC5               	movwf	197,c	;volatile
 21548                           
 21549                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 21550  016B5C  013A               	movlb	58	; () banked
 21551  016B5E  6B70               	clrf	112,b	;volatile
 21552                           
 21553                           ; BSR set to: 58
 21554                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 21555  016B60  6B60               	clrf	96,b	;volatile
 21556                           
 21557                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 21558  016B62  0E3C               	movlw	60
 21559  016B64  6F50               	movwf	80,b	;volatile
 21560                           
 21561                           ; BSR set to: 58
 21562                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 21563  016B66  6B80               	clrf	128,b	;volatile
 21564                           
 21565                           ; BSR set to: 58
 21566                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 21567  016B68  6B90               	clrf	144,b	;volatile
 21568                           
 21569                           ; BSR set to: 58
 21570                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 21571  016B6A  6940               	setf	64,b	;volatile
 21572                           
 21573                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 21574  016B6C  0E0C               	movlw	12
 21575  016B6E  6F71               	movwf	113,b	;volatile
 21576                           
 21577                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 21578  016B70  0E0F               	movlw	15
 21579  016B72  6F91               	movwf	145,b	;volatile
 21580                           
 21581                           ; BSR set to: 58
 21582                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 21583  016B74  6B81               	clrf	129,b	;volatile
 21584                           
 21585                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 21586  016B76  0E87               	movlw	135
 21587  016B78  6F51               	movwf	81,b	;volatile
 21588                           
 21589                           ; BSR set to: 58
 21590                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 21591  016B7A  6B41               	clrf	65,b	;volatile
 21592                           
 21593                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 21594  016B7C  0E97               	movlw	151
 21595  016B7E  6F61               	movwf	97,b	;volatile
 21596                           
 21597                           ; BSR set to: 58
 21598                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 21599  016B80  6B82               	clrf	130,b	;volatile
 21600                           
 21601                           ; BSR set to: 58
 21602                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 21603  016B82  6B92               	clrf	146,b	;volatile
 21604                           
 21605                           ; BSR set to: 58
 21606                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 21607  016B84  6B42               	clrf	66,b	;volatile
 21608                           
 21609                           ; BSR set to: 58
 21610                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 21611  016B86  6B52               	clrf	82,b	;volatile
 21612                           
 21613                           ; BSR set to: 58
 21614                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 21615  016B88  6B62               	clrf	98,b	;volatile
 21616                           
 21617                           ; BSR set to: 58
 21618                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 21619  016B8A  6B72               	clrf	114,b	;volatile
 21620                           
 21621                           ; BSR set to: 58
 21622                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 21623  016B8C  6943               	setf	67,b	;volatile
 21624                           
 21625                           ; BSR set to: 58
 21626                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 21627  016B8E  6953               	setf	83,b	;volatile
 21628                           
 21629                           ; BSR set to: 58
 21630                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 21631  016B90  6963               	setf	99,b	;volatile
 21632                           
 21633                           ; BSR set to: 58
 21634                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 21635  016B92  6973               	setf	115,b	;volatile
 21636                           
 21637                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 21638  016B94  0E07               	movlw	7
 21639  016B96  6F83               	movwf	131,b	;volatile
 21640                           
 21641                           ; BSR set to: 58
 21642                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 21643  016B98  6993               	setf	147,b	;volatile
 21644                           
 21645                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 21646  016B9A  0E0F               	movlw	15
 21647  016B9C  6FE8               	movwf	232,b	;volatile
 21648                           
 21649                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 21650  016B9E  0E13               	movlw	19
 21651  016BA0  6FDE               	movwf	222,b	;volatile
 21652                           
 21653                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 21654  016BA2  0E16               	movlw	22
 21655  016BA4  6F0E               	movwf	14,b	;volatile
 21656                           
 21657                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 21658  016BA6  0E1E               	movlw	30
 21659  016BA8  6F13               	movwf	19,b	;volatile
 21660                           
 21661                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 21662  016BAA  0E08               	movlw	8
 21663  016BAC  6FC0               	movwf	192,b	;volatile
 21664                           
 21665                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 21666  016BAE  0E10               	movlw	16
 21667  016BB0  6F19               	movwf	25,b	;volatile
 21668                           
 21669                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 21670  016BB2  0E09               	movlw	9
 21671  016BB4  6FC1               	movwf	193,b	;volatile
 21672                           
 21673                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 21674  016BB6  0E1F               	movlw	31
 21675  016BB8  6F15               	movwf	21,b	;volatile
 21676                           
 21677                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 21678  016BBA  0E13               	movlw	19
 21679  016BBC  6F16               	movwf	22,b	;volatile
 21680                           
 21681                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 21682  016BBE  0E17               	movlw	23
 21683  016BC0  6FE5               	movwf	229,b	;volatile
 21684                           
 21685                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 21686  016BC2  0E14               	movlw	20
 21687  016BC4  6FDF               	movwf	223,b	;volatile
 21688                           
 21689                           ; BSR set to: 58
 21690                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 21691  016BC6  0012               	return		;funcret
 21692  016BC8                     __end_of_PIN_MANAGER_Initialize:
 21693                           	opt callstack 0
 21694                           
 21695 ;; *************** function _OSCILLATOR_Initialize *****************
 21696 ;; Defined at:
 21697 ;;		line 71 in file "mcc_generated_files/mcc.c"
 21698 ;; Parameters:    Size  Location     Type
 21699 ;;		None
 21700 ;; Auto vars:     Size  Location     Type
 21701 ;;		None
 21702 ;; Return value:  Size  Location     Type
 21703 ;;                  1  [STACK] void 
 21704 ;; Registers used:
 21705 ;;		wreg, status,2
 21706 ;; Tracked objects:
 21707 ;;		On entry : 3F/3A
 21708 ;;		On exit  : 3F/39
 21709 ;;		Unchanged: 0/0
 21710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21715 ;;Total ram usage:        0 bytes
 21716 ;; Hardware stack levels used:    1
 21717 ;; Hardware stack levels required when called:    6
 21718 ;; This function calls:
 21719 ;;		Nothing
 21720 ;; This function is called by:
 21721 ;;		_SYSTEM_Initialize
 21722 ;; This function uses a reentrant model
 21723 ;;
 21724                           
 21725                           	psect	text96
 21726  017C66                     __ptext96:
 21727                           	opt callstack 0
 21728  017C66                     _OSCILLATOR_Initialize:
 21729                           	opt callstack 23
 21730                           
 21731                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 21732                           
 21733                           ; BSR set to: 58
 21734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21735                           ;incstack = 0
 21736  017C66  0E20               	movlw	32
 21737  017C68  0139               	movlb	57	; () banked
 21738  017C6A  6FD9               	movwf	217,b	;volatile
 21739                           
 21740                           ; BSR set to: 57
 21741                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 21742  017C6C  6BDB               	clrf	219,b	;volatile
 21743                           
 21744                           ; BSR set to: 57
 21745                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 21746  017C6E  6BDD               	clrf	221,b	;volatile
 21747                           
 21748                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 21749  017C70  0E02               	movlw	2
 21750  017C72  6FDF               	movwf	223,b	;volatile
 21751                           
 21752                           ; BSR set to: 57
 21753                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 21754  017C74  6BDE               	clrf	222,b	;volatile
 21755  017C76                     l171:
 21756                           
 21757                           ; BSR set to: 57
 21758                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 21759  017C76  B1DC               	btfsc	220,0,b	;volatile
 21760  017C78  0012               	return	
 21761  017C7A  D7FD               	goto	l171
 21762  017C7C                     __end_of_OSCILLATOR_Initialize:
 21763                           	opt callstack 0
 21764                           
 21765 ;; *************** function _INTERRUPT_Initialize *****************
 21766 ;; Defined at:
 21767 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21768 ;; Parameters:    Size  Location     Type
 21769 ;;		None
 21770 ;; Auto vars:     Size  Location     Type
 21771 ;;  state           1  [STACK] _Bool 
 21772 ;; Return value:  Size  Location     Type
 21773 ;;                  1  [STACK] void 
 21774 ;; Registers used:
 21775 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 21776 ;; Tracked objects:
 21777 ;;		On entry : 0/0
 21778 ;;		On exit  : 3F/39
 21779 ;;		Unchanged: 0/0
 21780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21785 ;;Total ram usage:        0 bytes
 21786 ;; Hardware stack levels used:    1
 21787 ;; Hardware stack levels required when called:    6
 21788 ;; This function calls:
 21789 ;;		Nothing
 21790 ;; This function is called by:
 21791 ;;		_SYSTEM_Initialize
 21792 ;; This function uses a reentrant model
 21793 ;;
 21794                           
 21795                           	psect	text97
 21796  016E94                     __ptext97:
 21797                           	opt callstack 0
 21798  016E94                     _INTERRUPT_Initialize:
 21799                           	opt callstack 0
 21800                           
 21801                           ; BSR set to: 57
 21802                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21803  016E94  52E6               	movf	postinc1,f,c
 21804                           
 21805                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 21806                           
 21807                           ;incstack = 0
 21808  016E96  8AD2               	bsf	210,5,c	;volatile
 21809                           
 21810                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 21811  016E98  AED2               	btfss	16338,7,c	;volatile
 21812  016E9A  D003               	goto	u7560
 21813  016E9C  6A40               	clrf	(btemp+11)^0,c
 21814  016E9E  2A40               	incf	(btemp+11)^0,f,c
 21815  016EA0  D001               	goto	u7578
 21816  016EA2                     u7560:
 21817  016EA2  6A40               	clrf	(btemp+11)^0,c
 21818  016EA4                     u7578:
 21819                           
 21820                           ;stkvar	_state @ sp[(-1)+0]
 21821  016EA4  0EFF               	movlw	-1
 21822  016EA6  0060  F103  FFE3   	movff	btemp+11,plusw1
 21823                           
 21824                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 21825  016EAC  9ED2               	bcf	16338,7,c	;volatile
 21826                           
 21827                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 21828  016EAE  0E55               	movlw	85
 21829  016EB0  6ED4               	movwf	212,c	;volatile
 21830                           
 21831                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 21832  016EB2  0EAA               	movlw	170
 21833  016EB4  6ED4               	movwf	212,c	;volatile
 21834                           
 21835                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 21836  016EB6  90D4               	bcf	212,0,c	;volatile
 21837                           
 21838                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 21839  016EB8  0138               	movlb	56	; () banked
 21840  016EBA  6B9F               	clrf	159,b	;volatile
 21841                           
 21842                           ; BSR set to: 56
 21843                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 21844  016EBC  6B9E               	clrf	158,b	;volatile
 21845                           
 21846                           ; BSR set to: 56
 21847                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 21848  016EBE  0E08               	movlw	8
 21849  016EC0  6F9D               	movwf	157,b	;volatile
 21850                           
 21851                           ; BSR set to: 56
 21852                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 21853  016EC2  0E55               	movlw	85
 21854  016EC4  6ED4               	movwf	212,c	;volatile
 21855                           
 21856                           ; BSR set to: 56
 21857                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 21858  016EC6  0EAA               	movlw	170
 21859  016EC8  6ED4               	movwf	212,c	;volatile
 21860                           
 21861                           ; BSR set to: 56
 21862                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 21863  016ECA  80D4               	bsf	212,0,c	;volatile
 21864                           
 21865                           ; BSR set to: 56
 21866                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 21867                           ;stkvar	_state @ sp[(-1)+0]
 21868  016ECC  0EFF               	movlw	-1
 21869  016ECE  B0E3               	btfsc	plusw1,0,c
 21870  016ED0  D002               	bra	u7585
 21871  016ED2  9ED2               	bcf	16338,7,c	;volatile
 21872  016ED4  D001               	bra	u7586
 21873  016ED6                     u7585:
 21874  016ED6  8ED2               	bsf	16338,7,c	;volatile
 21875  016ED8                     u7586:
 21876                           
 21877                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 21878  016ED8  0139               	movlb	57	; () banked
 21879  016EDA  8782               	bsf	130,3,b	;volatile
 21880                           
 21881                           ; BSR set to: 57
 21882                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 21883  016EDC  8382               	bsf	130,1,b	;volatile
 21884                           
 21885                           ; BSR set to: 57
 21886                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 21887  016EDE  8182               	bsf	130,0,b	;volatile
 21888                           
 21889                           ; BSR set to: 57
 21890                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 21891  016EE0  8582               	bsf	130,2,b	;volatile
 21892                           
 21893                           ; BSR set to: 57
 21894                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 21895  016EE2  8786               	bsf	134,3,b	;volatile
 21896                           
 21897                           ; BSR set to: 57
 21898                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 21899  016EE4  8586               	bsf	134,2,b	;volatile
 21900                           
 21901                           ; BSR set to: 57
 21902                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 21903  016EE6  8983               	bsf	131,4,b	;volatile
 21904                           
 21905                           ; BSR set to: 57
 21906                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 21907  016EE8  8783               	bsf	131,3,b	;volatile
 21908                           
 21909                           ; BSR set to: 57
 21910                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 21911  016EEA  8181               	bsf	129,0,b	;volatile
 21912                           
 21913                           ; BSR set to: 57
 21914                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 21915  016EEC  8185               	bsf	133,0,b	;volatile
 21916                           
 21917                           ; BSR set to: 57
 21918                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 21919  016EEE  8189               	bsf	137,0,b	;volatile
 21920                           
 21921                           ; BSR set to: 57
 21922                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 21923  016EF0  9D88               	bcf	136,6,b	;volatile
 21924                           
 21925                           ; BSR set to: 57
 21926                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 21927  016EF2  8581               	bsf	129,2,b	;volatile
 21928                           
 21929                           ; BSR set to: 57
 21930                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 21931  016EF4  8781               	bsf	129,3,b	;volatile
 21932                           
 21933                           ; BSR set to: 57
 21934                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 21935  016EF6  52E5               	movf	postdec1,f,c
 21936  016EF8  0012               	return		;funcret
 21937  016EFA                     __end_of_INTERRUPT_Initialize:
 21938                           	opt callstack 0
 21939                           
 21940 ;; *************** function _FVR_Initialize *****************
 21941 ;; Defined at:
 21942 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21943 ;; Parameters:    Size  Location     Type
 21944 ;;		None
 21945 ;; Auto vars:     Size  Location     Type
 21946 ;;		None
 21947 ;; Return value:  Size  Location     Type
 21948 ;;                  1  [STACK] void 
 21949 ;; Registers used:
 21950 ;;		wreg, status,2
 21951 ;; Tracked objects:
 21952 ;;		On entry : 3F/39
 21953 ;;		On exit  : 3F/3E
 21954 ;;		Unchanged: 0/0
 21955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21960 ;;Total ram usage:        0 bytes
 21961 ;; Hardware stack levels used:    1
 21962 ;; Hardware stack levels required when called:    6
 21963 ;; This function calls:
 21964 ;;		Nothing
 21965 ;; This function is called by:
 21966 ;;		_SYSTEM_Initialize
 21967 ;; This function uses a reentrant model
 21968 ;;
 21969                           
 21970                           	psect	text98
 21971  017D42                     __ptext98:
 21972                           	opt callstack 0
 21973  017D42                     _FVR_Initialize:
 21974                           	opt callstack 23
 21975                           
 21976                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 21977                           
 21978                           ; BSR set to: 57
 21979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21980                           ;incstack = 0
 21981  017D42  0EAF               	movlw	175
 21982  017D44  013E               	movlb	62	; () banked
 21983  017D46  6FC1               	movwf	193,b	;volatile
 21984                           
 21985                           ; BSR set to: 62
 21986                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21987  017D48  0012               	return		;funcret
 21988  017D4A                     __end_of_FVR_Initialize:
 21989                           	opt callstack 0
 21990                           
 21991 ;; *************** function _EXT_INT_Initialize *****************
 21992 ;; Defined at:
 21993 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;		None
 21996 ;; Auto vars:     Size  Location     Type
 21997 ;;		None
 21998 ;; Return value:  Size  Location     Type
 21999 ;;                  1  [STACK] void 
 22000 ;; Registers used:
 22001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22002 ;; Tracked objects:
 22003 ;;		On entry : 3F/39
 22004 ;;		On exit  : 3F/39
 22005 ;;		Unchanged: 0/0
 22006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22011 ;;Total ram usage:        0 bytes
 22012 ;; Hardware stack levels used:    1
 22013 ;; Hardware stack levels required when called:    7
 22014 ;; This function calls:
 22015 ;;		_INT0_SetInterruptHandler
 22016 ;;		_INT1_SetInterruptHandler
 22017 ;; This function is called by:
 22018 ;;		_SYSTEM_Initialize
 22019 ;; This function uses a reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text99
 22023  0175F0                     __ptext99:
 22024                           	opt callstack 0
 22025  0175F0                     _EXT_INT_Initialize:
 22026                           	opt callstack 22
 22027                           
 22028                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22029                           
 22030                           ; BSR set to: 62
 22031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22032                           ;incstack = 0
 22033  0175F0  0139               	movlb	57	; () banked
 22034  0175F2  91A1               	bcf	161,0,b	;volatile
 22035                           
 22036                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22037  0175F4  90D2               	bcf	210,0,c	;volatile
 22038                           
 22039                           ; BSR set to: 57
 22040                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22041  0175F6  0E62               	movlw	low _INT0_DefaultInterruptHandler
 22042  0175F8  6EE6               	movwf	postinc1,c
 22043  0175FA  0E7D               	movlw	high _INT0_DefaultInterruptHandler
 22044  0175FC  6EE6               	movwf	postinc1,c
 22045  0175FE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22046  017600  6EE6               	movwf	postinc1,c
 22047  017602  EC7A  F0BC         	call	_INT0_SetInterruptHandler	;wreg free
 22048                           
 22049                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22050  017606  0139               	movlb	57	; () banked
 22051  017608  8191               	bsf	145,0,b	;volatile
 22052                           
 22053                           ; BSR set to: 57
 22054                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22055  01760A  91A5               	bcf	165,0,b	;volatile
 22056                           
 22057                           ; BSR set to: 57
 22058                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22059  01760C  92D2               	bcf	210,1,c	;volatile
 22060                           
 22061                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22062  01760E  0E64               	movlw	low _INT1_DefaultInterruptHandler
 22063  017610  6EE6               	movwf	postinc1,c
 22064  017612  0E7D               	movlw	high _INT1_DefaultInterruptHandler
 22065  017614  6EE6               	movwf	postinc1,c
 22066  017616  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22067  017618  6EE6               	movwf	postinc1,c
 22068  01761A  EC66  F0BC         	call	_INT1_SetInterruptHandler	;wreg free
 22069                           
 22070                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22071  01761E  0139               	movlb	57	; () banked
 22072  017620  8195               	bsf	149,0,b	;volatile
 22073                           
 22074                           ; BSR set to: 57
 22075                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22076  017622  0012               	return		;funcret
 22077  017624                     __end_of_EXT_INT_Initialize:
 22078                           	opt callstack 0
 22079                           
 22080 ;; *************** function _INT1_SetInterruptHandler *****************
 22081 ;; Defined at:
 22082 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22085 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22086 ;; Auto vars:     Size  Location     Type
 22087 ;;		None
 22088 ;; Return value:  Size  Location     Type
 22089 ;;                  1  [STACK] void 
 22090 ;; Registers used:
 22091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22092 ;; Tracked objects:
 22093 ;;		On entry : 3F/39
 22094 ;;		On exit  : 0/0
 22095 ;;		Unchanged: 0/0
 22096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22101 ;;Total ram usage:        0 bytes
 22102 ;; Hardware stack levels used:    1
 22103 ;; Hardware stack levels required when called:    6
 22104 ;; This function calls:
 22105 ;;		Nothing
 22106 ;; This function is called by:
 22107 ;;		_EXT_INT_Initialize
 22108 ;; This function uses a reentrant model
 22109 ;;
 22110                           
 22111                           	psect	text100
 22112  0178CC                     __ptext100:
 22113                           	opt callstack 0
 22114  0178CC                     _INT1_SetInterruptHandler:
 22115                           	opt callstack 22
 22116                           
 22117                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22118                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22119                           
 22120                           ; BSR set to: 57
 22121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22122                           ;incstack = 0
 22123  0178CC  50E1               	movf	fsr1l,w,c
 22124  0178CE  0FFD               	addlw	-3
 22125  0178D0  6ED9               	movwf	fsr2l,c
 22126  0178D2  50E2               	movf	fsr1h,w,c
 22127  0178D4  6EDA               	movwf	fsr2h,c
 22128  0178D6  0EFF               	movlw	255
 22129  0178D8  22DA               	addwfc	fsr2h,f,c
 22130  0178DA  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22131  0178E0  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22132  0178E6  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22133                           
 22134                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22135  0178EC  52E5               	movf	postdec1,f,c
 22136  0178EE  52E5               	movf	postdec1,f,c
 22137  0178F0  52E5               	movf	postdec1,f,c
 22138  0178F2  0012               	return		;funcret
 22139  0178F4                     __end_of_INT1_SetInterruptHandler:
 22140                           	opt callstack 0
 22141                           
 22142 ;; *************** function _INT0_SetInterruptHandler *****************
 22143 ;; Defined at:
 22144 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22147 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;		None
 22150 ;; Return value:  Size  Location     Type
 22151 ;;                  1  [STACK] void 
 22152 ;; Registers used:
 22153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22154 ;; Tracked objects:
 22155 ;;		On entry : 3F/39
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22163 ;;Total ram usage:        0 bytes
 22164 ;; Hardware stack levels used:    1
 22165 ;; Hardware stack levels required when called:    6
 22166 ;; This function calls:
 22167 ;;		Nothing
 22168 ;; This function is called by:
 22169 ;;		_EXT_INT_Initialize
 22170 ;; This function uses a reentrant model
 22171 ;;
 22172                           
 22173                           	psect	text101
 22174  0178F4                     __ptext101:
 22175                           	opt callstack 0
 22176  0178F4                     _INT0_SetInterruptHandler:
 22177                           	opt callstack 22
 22178                           
 22179                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22180                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22181                           
 22182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22183                           ;incstack = 0
 22184  0178F4  50E1               	movf	fsr1l,w,c
 22185  0178F6  0FFD               	addlw	-3
 22186  0178F8  6ED9               	movwf	fsr2l,c
 22187  0178FA  50E2               	movf	fsr1h,w,c
 22188  0178FC  6EDA               	movwf	fsr2h,c
 22189  0178FE  0EFF               	movlw	255
 22190  017900  22DA               	addwfc	fsr2h,f,c
 22191  017902  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22192  017908  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22193  01790E  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22194                           
 22195                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22196  017914  52E5               	movf	postdec1,f,c
 22197  017916  52E5               	movf	postdec1,f,c
 22198  017918  52E5               	movf	postdec1,f,c
 22199  01791A  0012               	return		;funcret
 22200  01791C                     __end_of_INT0_SetInterruptHandler:
 22201                           	opt callstack 0
 22202                           
 22203 ;; *************** function _DMA2_Initialize *****************
 22204 ;; Defined at:
 22205 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22206 ;; Parameters:    Size  Location     Type
 22207 ;;		None
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;		None
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  1  [STACK] void 
 22212 ;; Registers used:
 22213 ;;		wreg, status,2
 22214 ;; Tracked objects:
 22215 ;;		On entry : 3F/3D
 22216 ;;		On exit  : 3F/3B
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22223 ;;Total ram usage:        0 bytes
 22224 ;; Hardware stack levels used:    1
 22225 ;; Hardware stack levels required when called:    6
 22226 ;; This function calls:
 22227 ;;		Nothing
 22228 ;; This function is called by:
 22229 ;;		_SYSTEM_Initialize
 22230 ;; This function uses a reentrant model
 22231 ;;
 22232                           
 22233                           	psect	text102
 22234  01713A                     __ptext102:
 22235                           	opt callstack 0
 22236  01713A                     _DMA2_Initialize:
 22237                           	opt callstack 23
 22238                           
 22239                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22240                           
 22241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22242                           ;incstack = 0
 22243  01713A  0E00               	movlw	0
 22244  01713C  013B               	movlb	59	; () banked
 22245  01713E  6FD9               	movwf	217,b	;volatile
 22246  017140  0E10               	movlw	16
 22247  017142  6FDA               	movwf	218,b	;volatile
 22248  017144  0E00               	movlw	0
 22249  017146  6FDB               	movwf	219,b	;volatile
 22250                           
 22251                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22252  017148  0E3F               	movlw	63
 22253  01714A  6FD1               	movwf	209,b	;volatile
 22254  01714C  0EBB               	movlw	187
 22255  01714E  6FD0               	movwf	208,b	;volatile
 22256                           
 22257                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22258  017150  0E03               	movlw	3
 22259  017152  6FDD               	movwf	221,b	;volatile
 22260                           
 22261                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22262  017154  0E00               	movlw	0
 22263  017156  6FD8               	movwf	216,b	;volatile
 22264  017158  0E01               	movlw	1
 22265  01715A  6FD7               	movwf	215,b	;volatile
 22266                           
 22267                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22268  01715C  0E00               	movlw	0
 22269  01715E  6FCF               	movwf	207,b	;volatile
 22270  017160  0E01               	movlw	1
 22271  017162  6FCE               	movwf	206,b	;volatile
 22272                           
 22273                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22274  017164  0E46               	movlw	70
 22275  017166  6FDF               	movwf	223,b	;volatile
 22276                           
 22277                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22278  017168  0E3D               	movlw	61
 22279  01716A  6FDE               	movwf	222,b	;volatile
 22280                           
 22281                           ; BSR set to: 59
 22282                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22283  01716C  0139               	movlb	57	; () banked
 22284  01716E  97A5               	bcf	165,3,b	;volatile
 22285                           
 22286                           ; BSR set to: 57
 22287                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22288  017170  95A5               	bcf	165,2,b	;volatile
 22289                           
 22290                           ; BSR set to: 57
 22291                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22292  017172  9BA5               	bcf	165,5,b	;volatile
 22293                           
 22294                           ; BSR set to: 57
 22295                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22296  017174  99A5               	bcf	165,4,b	;volatile
 22297                           
 22298                           ; BSR set to: 57
 22299                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22300  017176  9795               	bcf	149,3,b	;volatile
 22301                           
 22302                           ; BSR set to: 57
 22303                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22304  017178  9595               	bcf	149,2,b	;volatile
 22305                           
 22306                           ; BSR set to: 57
 22307                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22308  01717A  9B95               	bcf	149,5,b	;volatile
 22309                           
 22310                           ; BSR set to: 57
 22311                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22312  01717C  9995               	bcf	149,4,b	;volatile
 22313  01717E  9ED2               	bcf	16338,7,c	;# 
 22314  017180  0139               	banksel	14831	;# 
 22315  017182  0E55               	movlw	85	;# 
 22316  017184  6FEF               	movwf	14831,b	;# 
 22317  017186  0EAA               	movlw	170	;# 
 22318  017188  6FEF               	movwf	14831,b	;# 
 22319  01718A  81EF               	bsf	14831,0,b	;# 
 22320  01718C  8ED2               	bsf	16338,7,c	;# 
 22321                           
 22322                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22323  01718E  013B               	movlb	59	; () banked
 22324  017190  6BDC               	clrf	220,b	;volatile
 22325                           
 22326                           ; BSR set to: 59
 22327                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22328  017192  0012               	return		;funcret
 22329  017194                     __end_of_DMA2_Initialize:
 22330                           	opt callstack 0
 22331                           
 22332 ;; *************** function _DMA1_Initialize *****************
 22333 ;; Defined at:
 22334 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;		None
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;		None
 22339 ;; Return value:  Size  Location     Type
 22340 ;;                  1  [STACK] void 
 22341 ;; Registers used:
 22342 ;;		wreg, status,2
 22343 ;; Tracked objects:
 22344 ;;		On entry : 3F/3B
 22345 ;;		On exit  : 3F/3B
 22346 ;;		Unchanged: 0/0
 22347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22352 ;;Total ram usage:        0 bytes
 22353 ;; Hardware stack levels used:    1
 22354 ;; Hardware stack levels required when called:    6
 22355 ;; This function calls:
 22356 ;;		Nothing
 22357 ;; This function is called by:
 22358 ;;		_SYSTEM_Initialize
 22359 ;; This function uses a reentrant model
 22360 ;;
 22361                           
 22362                           	psect	text103
 22363  016D58                     __ptext103:
 22364                           	opt callstack 0
 22365  016D58                     _DMA1_Initialize:
 22366                           	opt callstack 23
 22367                           
 22368                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 22369                           
 22370                           ; BSR set to: 59
 22371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22372                           ;incstack = 0
 22373  016D58  0E00               	movlw	0
 22374  016D5A  013B               	movlb	59	; () banked
 22375  016D5C  6FF9               	movwf	249,b	;volatile
 22376  016D5E  0E10               	movlw	16
 22377  016D60  6FFA               	movwf	250,b	;volatile
 22378  016D62  0E00               	movlw	0
 22379  016D64  6FFB               	movwf	251,b	;volatile
 22380                           
 22381                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 22382  016D66  0E3D               	movlw	61
 22383  016D68  6FF1               	movwf	241,b	;volatile
 22384  016D6A  0E11               	movlw	17
 22385  016D6C  6FF0               	movwf	240,b	;volatile
 22386                           
 22387                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 22388  016D6E  0E03               	movlw	3
 22389  016D70  6FFD               	movwf	253,b	;volatile
 22390                           
 22391                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 22392  016D72  0E00               	movlw	0
 22393  016D74  6FF8               	movwf	248,b	;volatile
 22394  016D76  0E01               	movlw	1
 22395  016D78  6FF7               	movwf	247,b	;volatile
 22396                           
 22397                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 22398  016D7A  0E00               	movlw	0
 22399  016D7C  6FEF               	movwf	239,b	;volatile
 22400  016D7E  0E01               	movlw	1
 22401  016D80  6FEE               	movwf	238,b	;volatile
 22402                           
 22403                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 22404  016D82  0E15               	movlw	21
 22405  016D84  6FFF               	movwf	255,b	;volatile
 22406                           
 22407                           ; BSR set to: 59
 22408                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 22409  016D86  6BFE               	clrf	254,b	;volatile
 22410                           
 22411                           ; BSR set to: 59
 22412                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 22413  016D88  0139               	movlb	57	; () banked
 22414  016D8A  93A2               	bcf	162,1,b	;volatile
 22415                           
 22416                           ; BSR set to: 57
 22417                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 22418  016D8C  91A2               	bcf	162,0,b	;volatile
 22419                           
 22420                           ; BSR set to: 57
 22421                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 22422  016D8E  97A2               	bcf	162,3,b	;volatile
 22423                           
 22424                           ; BSR set to: 57
 22425                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 22426  016D90  95A2               	bcf	162,2,b	;volatile
 22427                           
 22428                           ; BSR set to: 57
 22429                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 22430  016D92  8392               	bsf	146,1,b	;volatile
 22431                           
 22432                           ; BSR set to: 57
 22433                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 22434  016D94  8192               	bsf	146,0,b	;volatile
 22435                           
 22436                           ; BSR set to: 57
 22437                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 22438  016D96  8792               	bsf	146,3,b	;volatile
 22439                           
 22440                           ; BSR set to: 57
 22441                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 22442  016D98  8592               	bsf	146,2,b	;volatile
 22443                           
 22444                           ; BSR set to: 57
 22445                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 22446  016D9A  6BF1               	clrf	241,b	;volatile
 22447                           
 22448                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 22449  016D9C  0E01               	movlw	1
 22450  016D9E  6FF2               	movwf	242,b	;volatile
 22451                           
 22452                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 22453  016DA0  0E04               	movlw	4
 22454  016DA2  6FF3               	movwf	243,b	;volatile
 22455                           
 22456                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 22457  016DA4  0E02               	movlw	2
 22458  016DA6  6FF4               	movwf	244,b	;volatile
 22459                           
 22460                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 22461  016DA8  0E03               	movlw	3
 22462  016DAA  6FF7               	movwf	247,b	;volatile
 22463  016DAC  9ED2               	bcf	16338,7,c	;# 
 22464  016DAE  0139               	banksel	14831	;# 
 22465  016DB0  0E55               	movlw	85	;# 
 22466  016DB2  6FEF               	movwf	14831,b	;# 
 22467  016DB4  0EAA               	movlw	170	;# 
 22468  016DB6  6FEF               	movwf	14831,b	;# 
 22469  016DB8  81EF               	bsf	14831,0,b	;# 
 22470  016DBA  8ED2               	bsf	16338,7,c	;# 
 22471                           
 22472                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 22473  016DBC  013B               	movlb	59	; () banked
 22474  016DBE  6BFC               	clrf	252,b	;volatile
 22475                           
 22476                           ; BSR set to: 59
 22477                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22478  016DC0  0012               	return		;funcret
 22479  016DC2                     __end_of_DMA1_Initialize:
 22480                           	opt callstack 0
 22481                           
 22482 ;; *************** function _CLKREF_Initialize *****************
 22483 ;; Defined at:
 22484 ;;		line 58 in file "mcc_generated_files/clkref.c"
 22485 ;; Parameters:    Size  Location     Type
 22486 ;;		None
 22487 ;; Auto vars:     Size  Location     Type
 22488 ;;		None
 22489 ;; Return value:  Size  Location     Type
 22490 ;;                  1  [STACK] void 
 22491 ;; Registers used:
 22492 ;;		wreg, status,2
 22493 ;; Tracked objects:
 22494 ;;		On entry : 3F/3B
 22495 ;;		On exit  : 3F/3C
 22496 ;;		Unchanged: 0/0
 22497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;Total ram usage:        0 bytes
 22503 ;; Hardware stack levels used:    1
 22504 ;; Hardware stack levels required when called:    6
 22505 ;; This function calls:
 22506 ;;		Nothing
 22507 ;; This function is called by:
 22508 ;;		_SYSTEM_Initialize
 22509 ;; This function uses a reentrant model
 22510 ;;
 22511                           
 22512                           	psect	text104
 22513  017CFE                     __ptext104:
 22514                           	opt callstack 0
 22515  017CFE                     _CLKREF_Initialize:
 22516                           	opt callstack 23
 22517                           
 22518                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 22519                           
 22520                           ; BSR set to: 59
 22521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22522                           ;incstack = 0
 22523  017CFE  013C               	movlb	60	; () banked
 22524  017D00  6BE6               	clrf	230,b	;volatile
 22525                           
 22526                           ; BSR set to: 60
 22527                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 22528  017D02  0E94               	movlw	148
 22529  017D04  6FE5               	movwf	229,b	;volatile
 22530                           
 22531                           ; BSR set to: 60
 22532                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22533  017D06  0012               	return		;funcret
 22534  017D08                     __end_of_CLKREF_Initialize:
 22535                           	opt callstack 0
 22536                           
 22537 ;; *************** function _ADCC_Initialize *****************
 22538 ;; Defined at:
 22539 ;;		line 65 in file "mcc_generated_files/adcc.c"
 22540 ;; Parameters:    Size  Location     Type
 22541 ;;		None
 22542 ;; Auto vars:     Size  Location     Type
 22543 ;;		None
 22544 ;; Return value:  Size  Location     Type
 22545 ;;                  1  [STACK] void 
 22546 ;; Registers used:
 22547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22548 ;; Tracked objects:
 22549 ;;		On entry : 3F/3E
 22550 ;;		On exit  : 0/0
 22551 ;;		Unchanged: 0/0
 22552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22557 ;;Total ram usage:        0 bytes
 22558 ;; Hardware stack levels used:    1
 22559 ;; Hardware stack levels required when called:    7
 22560 ;; This function calls:
 22561 ;;		_ADCC_SetADIInterruptHandler
 22562 ;;		_ADCC_SetADTIInterruptHandler
 22563 ;; This function is called by:
 22564 ;;		_SYSTEM_Initialize
 22565 ;; This function uses a reentrant model
 22566 ;;
 22567                           
 22568                           	psect	text105
 22569  016DC2                     __ptext105:
 22570                           	opt callstack 0
 22571  016DC2                     _ADCC_Initialize:
 22572                           	opt callstack 22
 22573                           
 22574                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 22575                           
 22576                           ; BSR set to: 60
 22577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22578                           ;incstack = 0
 22579  016DC2  013E               	movlb	62	; () banked
 22580  016DC4  6BDE               	clrf	222,b	;volatile
 22581                           
 22582                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 22583  016DC6  6BDF               	clrf	223,b	;volatile
 22584                           
 22585                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 22586  016DC8  6BE0               	clrf	224,b	;volatile
 22587                           
 22588                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 22589  016DCA  6BE1               	clrf	225,b	;volatile
 22590                           
 22591                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 22592  016DCC  6BE4               	clrf	228,b	;volatile
 22593                           
 22594                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 22595  016DCE  6BE5               	clrf	229,b	;volatile
 22596                           
 22597                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 22598  016DD0  6BEA               	clrf	234,b	;volatile
 22599                           
 22600                           ; BSR set to: 62
 22601                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 22602  016DD2  0E40               	movlw	64
 22603  016DD4  6FEC               	movwf	236,b	;volatile
 22604                           
 22605                           ; BSR set to: 62
 22606                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 22607  016DD6  6BF1               	clrf	241,b	;volatile
 22608                           
 22609                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x40;
 22610  016DD8  0E40               	movlw	64
 22611  016DDA  6FF3               	movwf	243,b	;volatile
 22612                           
 22613                           ; BSR set to: 62
 22614                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 22615  016DDC  6BF4               	clrf	244,b	;volatile
 22616                           
 22617                           ; BSR set to: 62
 22618                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 22619  016DDE  6BF5               	clrf	245,b	;volatile
 22620                           
 22621                           ; BSR set to: 62
 22622                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 22623  016DE0  6BF6               	clrf	246,b	;volatile
 22624                           
 22625                           ; BSR set to: 62
 22626                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 22627  016DE2  6BF7               	clrf	247,b	;volatile
 22628                           
 22629                           ; BSR set to: 62
 22630                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 22631  016DE4  6BF9               	clrf	249,b	;volatile
 22632                           
 22633                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 22634  016DE6  0E6B               	movlw	107
 22635  016DE8  6FFA               	movwf	250,b	;volatile
 22636                           
 22637                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 22638  016DEA  0E27               	movlw	39
 22639  016DEC  6FFB               	movwf	251,b	;volatile
 22640                           
 22641                           ; BSR set to: 62
 22642                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 22643  016DEE  6BFC               	clrf	252,b	;volatile
 22644                           
 22645                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 22646  016DF0  0E02               	movlw	2
 22647  016DF2  6FFD               	movwf	253,b	;volatile
 22648                           
 22649                           ; BSR set to: 62
 22650                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 22651  016DF4  6BFE               	clrf	254,b	;volatile
 22652                           
 22653                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 22654  016DF6  0E02               	movlw	2
 22655  016DF8  6FFF               	movwf	255,b	;volatile
 22656                           
 22657                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 22658  016DFA  0E84               	movlw	132
 22659  016DFC  6FF8               	movwf	248,b	;volatile
 22660                           
 22661                           ; BSR set to: 62
 22662                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 22663  016DFE  0139               	movlb	57	; () banked
 22664  016E00  95A1               	bcf	161,2,b	;volatile
 22665                           
 22666                           ; BSR set to: 57
 22667                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 22668  016E02  8591               	bsf	145,2,b	;volatile
 22669                           
 22670                           ; BSR set to: 57
 22671                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 22672  016E04  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 22673  016E06  6EE6               	movwf	postinc1,c
 22674  016E08  0E7D               	movlw	high _ADCC_DefaultInterruptHandler
 22675  016E0A  6EE6               	movwf	postinc1,c
 22676  016E0C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22677  016E0E  6EE6               	movwf	postinc1,c
 22678  016E10  ECA2  F0BC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22679                           
 22680                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 22681  016E14  0139               	movlb	57	; () banked
 22682  016E16  97A1               	bcf	161,3,b	;volatile
 22683                           
 22684                           ; BSR set to: 57
 22685                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 22686  016E18  8791               	bsf	145,3,b	;volatile
 22687                           
 22688                           ; BSR set to: 57
 22689                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 22690  016E1A  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 22691  016E1C  6EE6               	movwf	postinc1,c
 22692  016E1E  0E7D               	movlw	high _ADCC_DefaultInterruptHandler
 22693  016E20  6EE6               	movwf	postinc1,c
 22694  016E22  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22695  016E24  6EE6               	movwf	postinc1,c
 22696  016E26  EC8E  F0BC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22697                           
 22698                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22699  016E2A  0012               	return		;funcret
 22700  016E2C                     __end_of_ADCC_Initialize:
 22701                           	opt callstack 0
 22702                           
 22703 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22704 ;; Defined at:
 22705 ;;		line 336 in file "mcc_generated_files/adcc.c"
 22706 ;; Parameters:    Size  Location     Type
 22707 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22708 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 22709 ;; Auto vars:     Size  Location     Type
 22710 ;;		None
 22711 ;; Return value:  Size  Location     Type
 22712 ;;                  1  [STACK] void 
 22713 ;; Registers used:
 22714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22715 ;; Tracked objects:
 22716 ;;		On entry : 0/0
 22717 ;;		On exit  : 0/0
 22718 ;;		Unchanged: 0/0
 22719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22724 ;;Total ram usage:        0 bytes
 22725 ;; Hardware stack levels used:    1
 22726 ;; Hardware stack levels required when called:    6
 22727 ;; This function calls:
 22728 ;;		Nothing
 22729 ;; This function is called by:
 22730 ;;		_ADCC_Initialize
 22731 ;;		_start_adc_scan
 22732 ;; This function uses a reentrant model
 22733 ;;
 22734                           
 22735                           	psect	text106
 22736  01791C                     __ptext106:
 22737                           	opt callstack 0
 22738  01791C                     _ADCC_SetADTIInterruptHandler:
 22739                           	opt callstack 23
 22740                           
 22741                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22742                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22743                           
 22744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22745                           ;incstack = 0
 22746  01791C  50E1               	movf	fsr1l,w,c
 22747  01791E  0FFD               	addlw	-3
 22748  017920  6ED9               	movwf	fsr2l,c
 22749  017922  50E2               	movf	fsr1h,w,c
 22750  017924  6EDA               	movwf	fsr2h,c
 22751  017926  0EFF               	movlw	255
 22752  017928  22DA               	addwfc	fsr2h,f,c
 22753  01792A  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 22754  017930  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 22755  017936  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 22756                           
 22757                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 22758  01793C  52E5               	movf	postdec1,f,c
 22759  01793E  52E5               	movf	postdec1,f,c
 22760  017940  52E5               	movf	postdec1,f,c
 22761  017942  0012               	return		;funcret
 22762  017944                     __end_of_ADCC_SetADTIInterruptHandler:
 22763                           	opt callstack 0
 22764                           
 22765 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 22766 ;; Defined at:
 22767 ;;		line 323 in file "mcc_generated_files/adcc.c"
 22768 ;; Parameters:    Size  Location     Type
 22769 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22770 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 22771 ;; Auto vars:     Size  Location     Type
 22772 ;;		None
 22773 ;; Return value:  Size  Location     Type
 22774 ;;                  1  [STACK] void 
 22775 ;; Registers used:
 22776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22777 ;; Tracked objects:
 22778 ;;		On entry : 6/0
 22779 ;;		On exit  : 0/0
 22780 ;;		Unchanged: 0/0
 22781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22786 ;;Total ram usage:        0 bytes
 22787 ;; Hardware stack levels used:    1
 22788 ;; Hardware stack levels required when called:    6
 22789 ;; This function calls:
 22790 ;;		Nothing
 22791 ;; This function is called by:
 22792 ;;		_ADCC_Initialize
 22793 ;;		_start_adc_scan
 22794 ;; This function uses a reentrant model
 22795 ;;
 22796                           
 22797                           	psect	text107
 22798  017944                     __ptext107:
 22799                           	opt callstack 0
 22800  017944                     _ADCC_SetADIInterruptHandler:
 22801                           	opt callstack 23
 22802                           
 22803                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 22804                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22805                           
 22806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22807                           ;incstack = 0
 22808  017944  50E1               	movf	fsr1l,w,c
 22809  017946  0FFD               	addlw	-3
 22810  017948  6ED9               	movwf	fsr2l,c
 22811  01794A  50E2               	movf	fsr1h,w,c
 22812  01794C  6EDA               	movwf	fsr2h,c
 22813  01794E  0EFF               	movlw	255
 22814  017950  22DA               	addwfc	fsr2h,f,c
 22815  017952  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 22816  017958  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 22817  01795E  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 22818                           
 22819                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22820  017964  52E5               	movf	postdec1,f,c
 22821  017966  52E5               	movf	postdec1,f,c
 22822  017968  52E5               	movf	postdec1,f,c
 22823  01796A  0012               	return		;funcret
 22824  01796C                     __end_of_ADCC_SetADIInterruptHandler:
 22825                           	opt callstack 0
 22826                           
 22827 ;; *************** function _TMR5_ISR *****************
 22828 ;; Defined at:
 22829 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 22830 ;; Parameters:    Size  Location     Type
 22831 ;;		None
 22832 ;; Auto vars:     Size  Location     Type
 22833 ;;		None
 22834 ;; Return value:  Size  Location     Type
 22835 ;;                  1    wreg      void 
 22836 ;; Registers used:
 22837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 22838 ;; Tracked objects:
 22839 ;;		On entry : 0/0
 22840 ;;		On exit  : 0/0
 22841 ;;		Unchanged: 0/0
 22842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;Total ram usage:        4 bytes
 22848 ;; Hardware stack levels used:    1
 22849 ;; Hardware stack levels required when called:    5
 22850 ;; This function calls:
 22851 ;;		_TMR5_CallBack
 22852 ;;		_TMR5_WriteTimer
 22853 ;; This function is called by:
 22854 ;;		Interrupt level 1
 22855 ;; This function uses a non-reentrant model
 22856 ;;
 22857                           
 22858                           	psect	text108
 22859  017084                     __ptext108:
 22860                           	opt callstack 0
 22861  017084                     _TMR5_ISR:
 22862                           	opt callstack 12
 22863                           
 22864                           ;incstack = 0
 22865  017084  006F FF60  F0D7    	movff	status,??_TMR5_ISR+2
 22866  01708A  0060  F100  F0D8   	movff	btemp+11,??_TMR5_ISR+3
 22867  017090  EE15  F3AB         	lfsr	1,___intlo_sp
 22868                           
 22869                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 22870  017094  0139               	movlb	57	; () banked
 22871  017096  9DA8               	bcf	168,6,b	;volatile
 22872                           
 22873                           ; BSR set to: 57
 22874                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 22875  017098  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 22876  01709E  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 22877  0170A4  EC32  F0BA         	call	_TMR5_WriteTimer	;wreg free
 22878                           
 22879                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 22880  0170A8  0102               	movlb	2	; () banked
 22881  0170AA  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 22882  0170AC  0100               	movlb	0	; () banked
 22883  0170AE  6FD5               	movwf	??_TMR5_ISR& (0+255),b
 22884  0170B0  6BD6               	clrf	(??_TMR5_ISR+1)& (0+255),b
 22885  0170B2  0E05               	movlw	5
 22886  0170B4  27D5               	addwf	??_TMR5_ISR& (0+255),f,b
 22887  0170B6  0E00               	movlw	0
 22888  0170B8  23D6               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 22889  0170BA  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 22890  0170BC  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 22891  0170BE  51D5               	movf	??_TMR5_ISR& (0+255),w,b
 22892  0170C0  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 22893  0170C2  51D6               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 22894  0170C4  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 22895  0170C6  A0D8               	btfss	status,0,c
 22896  0170C8  D004               	goto	i1l1045
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 22900  0170CA  EC17  F0BD         	call	_TMR5_CallBack	;wreg free
 22901                           
 22902                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 22903  0170CE  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 22904  0170D0  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 22905  0170D2                     i1l1045:
 22906  0170D2  0060  F360  F040   	movff	??_TMR5_ISR+3,btemp+11
 22907  0170D8  0060  F35F  FFD8   	movff	??_TMR5_ISR+2,status
 22908  0170DE  0011               	retfie		f
 22909  0170E0                     __end_of_TMR5_ISR:
 22910                           	opt callstack 0
 22911                           
 22912 ;; *************** function _TMR5_WriteTimer *****************
 22913 ;; Defined at:
 22914 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;  timerVal        2  [STACK] unsigned short 
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;                  1  [STACK] void 
 22921 ;; Registers used:
 22922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22923 ;; Tracked objects:
 22924 ;;		On entry : 3F/39
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;Total ram usage:        0 bytes
 22933 ;; Hardware stack levels used:    1
 22934 ;; Hardware stack levels required when called:    3
 22935 ;; This function calls:
 22936 ;;		Nothing
 22937 ;; This function is called by:
 22938 ;;		_TMR5_ISR
 22939 ;; This function uses a reentrant model
 22940 ;;
 22941                           
 22942                           	psect	text109
 22943  017464                     __ptext109:
 22944                           	opt callstack 0
 22945  017464                     _TMR5_WriteTimer:
 22946                           	opt callstack 13
 22947                           
 22948                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 22949                           
 22950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22951                           ;incstack = 0
 22952  017464  A49A               	btfss	154,2,c	;volatile
 22953  017466  D00F               	goto	l8362
 22954                           
 22955                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 22956  017468  909A               	bcf	154,0,c	;volatile
 22957                           
 22958                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 22959                           ;stkvar	_timerVal @ sp[(0)+-2]
 22960  01746A  0EFF               	movlw	255
 22961  01746C  24E1               	addwf	fsr1l,w,c
 22962  01746E  6ED9               	movwf	fsr2l,c
 22963  017470  0EFF               	movlw	255
 22964  017472  20E2               	addwfc	fsr1h,w,c
 22965  017474  6EDA               	movwf	fsr2h,c
 22966  017476  50DF               	movf	indf2,w,c
 22967  017478  6E99               	movwf	153,c	;volatile
 22968                           
 22969                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 22970                           ;stkvar	_timerVal @ sp[(0)+-2]
 22971  01747A  0EFE               	movlw	-2
 22972  01747C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 22973                           
 22974                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 22975  017482  809A               	bsf	154,0,c	;volatile
 22976                           
 22977                           ;mcc_generated_files/tmr5.c: 142:  } else {
 22978  017484  D00C               	goto	l1028
 22979  017486                     l8362:
 22980                           
 22981                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 22982                           ;stkvar	_timerVal @ sp[(0)+-2]
 22983  017486  0EFF               	movlw	255
 22984  017488  24E1               	addwf	fsr1l,w,c
 22985  01748A  6ED9               	movwf	fsr2l,c
 22986  01748C  0EFF               	movlw	255
 22987  01748E  20E2               	addwfc	fsr1h,w,c
 22988  017490  6EDA               	movwf	fsr2h,c
 22989  017492  50DF               	movf	indf2,w,c
 22990  017494  6E99               	movwf	153,c	;volatile
 22991                           
 22992                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 22993                           ;stkvar	_timerVal @ sp[(0)+-2]
 22994  017496  0EFE               	movlw	-2
 22995  017498  006F FF8F FF98     	movff	plusw1,16280	;volatile
 22996  01749E                     l1028:
 22997                           
 22998                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 22999  01749E  52E5               	movf	postdec1,f,c
 23000  0174A0  52E5               	movf	postdec1,f,c
 23001  0174A2  0012               	return		;funcret
 23002  0174A4                     __end_of_TMR5_WriteTimer:
 23003                           	opt callstack 0
 23004                           
 23005 ;; *************** function _TMR5_CallBack *****************
 23006 ;; Defined at:
 23007 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23008 ;; Parameters:    Size  Location     Type
 23009 ;;		None
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;		None
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1  [STACK] void 
 23014 ;; Registers used:
 23015 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23016 ;; Tracked objects:
 23017 ;;		On entry : 3F/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;Total ram usage:        0 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; Hardware stack levels required when called:    4
 23028 ;; This function calls:
 23029 ;;		Absolute function
 23030 ;;		_TMR5_DefaultInterruptHandler
 23031 ;; This function is called by:
 23032 ;;		_TMR5_ISR
 23033 ;; This function uses a reentrant model
 23034 ;;
 23035                           
 23036                           	psect	text110
 23037  017A2E                     __ptext110:
 23038                           	opt callstack 0
 23039  017A2E                     _TMR5_CallBack:
 23040                           	opt callstack 12
 23041                           
 23042                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23043                           
 23044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23045                           ;incstack = 0
 23046  017A2E  0100               	movlb	0	; () banked
 23047  017A30  51B2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23048  017A32  11B3               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23049  017A34  11B4               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23050  017A36  B4D8               	btfsc	status,2,c
 23051  017A38  0012               	return	
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23055  017A3A  D801               	call	u789_28
 23056  017A3C  0012               	return	
 23057  017A3E                     u789_28:
 23058  017A3E  0005               	push	
 23059  017A40  6EFA               	movwf	pclath,c
 23060  017A42  51B2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23061  017A44  6EFD               	movwf	tosl,c
 23062  017A46  51B3               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23063  017A48  6EFE               	movwf	tosh,c
 23064  017A4A  51B4               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23065  017A4C  6EFF               	movwf	tosu,c
 23066  017A4E  50FA               	movf	pclath,w,c
 23067  017A50  0012               	return		;indir
 23068  017A52                     __end_of_TMR5_CallBack:
 23069                           	opt callstack 0
 23070                           
 23071 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23072 ;; Defined at:
 23073 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23074 ;; Parameters:    Size  Location     Type
 23075 ;;		None
 23076 ;; Auto vars:     Size  Location     Type
 23077 ;;		None
 23078 ;; Return value:  Size  Location     Type
 23079 ;;                  1  [STACK] void 
 23080 ;; Registers used:
 23081 ;;		wreg, status,2, status,0, btemp+11
 23082 ;; Tracked objects:
 23083 ;;		On entry : 3F/0
 23084 ;;		On exit  : 0/0
 23085 ;;		Unchanged: 0/0
 23086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23091 ;;Total ram usage:        0 bytes
 23092 ;; Hardware stack levels used:    1
 23093 ;; Hardware stack levels required when called:    3
 23094 ;; This function calls:
 23095 ;;		Nothing
 23096 ;; This function is called by:
 23097 ;;		_TMR5_Initialize
 23098 ;;		_TMR5_CallBack
 23099 ;; This function uses a reentrant model
 23100 ;;
 23101                           
 23102                           	psect	text111
 23103  017BBE                     __ptext111:
 23104                           	opt callstack 0
 23105  017BBE                     _TMR5_DefaultInterruptHandler:
 23106                           	opt callstack 12
 23107                           
 23108                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23109                           
 23110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23111                           ;incstack = 0
 23112  017BBE  A0BE               	btfss	190,0,c	;volatile
 23113  017BC0  D002               	goto	u762_20
 23114  017BC2  0E01               	movlw	1
 23115  017BC4  D001               	goto	u762_26
 23116  017BC6                     u762_20:
 23117  017BC6  0E00               	movlw	0
 23118  017BC8                     u762_26:
 23119  017BC8  0AFF               	xorlw	255
 23120  017BCA  6E40               	movwf	(btemp+11)^0,c
 23121  017BCC  50BE               	movf	190,w,c	;volatile
 23122  017BCE  1840               	xorwf	(btemp+11)^0,w,c
 23123  017BD0  0BFE               	andlw	-2
 23124  017BD2  1840               	xorwf	(btemp+11)^0,w,c
 23125  017BD4  6EBE               	movwf	190,c	;volatile
 23126                           
 23127                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23128  017BD6  0012               	return		;funcret
 23129  017BD8                     __end_of_TMR5_DefaultInterruptHandler:
 23130                           	opt callstack 0
 23131                           
 23132 ;; *************** function _INT0_ISR *****************
 23133 ;; Defined at:
 23134 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23135 ;; Parameters:    Size  Location     Type
 23136 ;;		None
 23137 ;; Auto vars:     Size  Location     Type
 23138 ;;		None
 23139 ;; Return value:  Size  Location     Type
 23140 ;;                  1    wreg      void 
 23141 ;; Registers used:
 23142 ;;		wreg, status,2, status,0, pclath, tosl
 23143 ;; Tracked objects:
 23144 ;;		On entry : 0/0
 23145 ;;		On exit  : 0/0
 23146 ;;		Unchanged: 0/0
 23147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23152 ;;Total ram usage:        0 bytes
 23153 ;; Hardware stack levels used:    1
 23154 ;; Hardware stack levels required when called:    2
 23155 ;; This function calls:
 23156 ;;		_INT0_CallBack
 23157 ;; This function is called by:
 23158 ;;		Interrupt level 2
 23159 ;; This function uses a non-reentrant model
 23160 ;;
 23161                           
 23162                           	psect	text112
 23163  017CD0                     __ptext112:
 23164                           	opt callstack 0
 23165  017CD0                     _INT0_ISR:
 23166                           	opt callstack 12
 23167                           
 23168                           ;incstack = 0
 23169  017CD0  EE13  F356         	lfsr	1,___inthi_sp
 23170                           
 23171                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23172  017CD4  0139               	movlb	57	; () banked
 23173  017CD6  91A1               	bcf	161,0,b	;volatile
 23174                           
 23175                           ; BSR set to: 57
 23176                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23177  017CD8  EC29  F0BD         	call	_INT0_CallBack	;wreg free
 23178  017CDC  0011               	retfie		f
 23179  017CDE                     __end_of_INT0_ISR:
 23180                           	opt callstack 0
 23181                           
 23182 ;; *************** function _INT0_CallBack *****************
 23183 ;; Defined at:
 23184 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23185 ;; Parameters:    Size  Location     Type
 23186 ;;		None
 23187 ;; Auto vars:     Size  Location     Type
 23188 ;;		None
 23189 ;; Return value:  Size  Location     Type
 23190 ;;                  1  [STACK] void 
 23191 ;; Registers used:
 23192 ;;		wreg, status,2, status,0, pclath, tosl
 23193 ;; Tracked objects:
 23194 ;;		On entry : 3F/39
 23195 ;;		On exit  : 0/0
 23196 ;;		Unchanged: 0/0
 23197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23202 ;;Total ram usage:        0 bytes
 23203 ;; Hardware stack levels used:    1
 23204 ;; Hardware stack levels required when called:    1
 23205 ;; This function calls:
 23206 ;;		Absolute function
 23207 ;;		_INT0_DefaultInterruptHandler
 23208 ;; This function is called by:
 23209 ;;		_INT0_ISR
 23210 ;; This function uses a reentrant model
 23211 ;;
 23212                           
 23213                           	psect	text113
 23214  017A52                     __ptext113:
 23215                           	opt callstack 0
 23216  017A52                     _INT0_CallBack:
 23217                           	opt callstack 12
 23218                           
 23219                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23220                           
 23221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23222                           ;incstack = 0
 23223  017A52  5019               	movf	_INT0_InterruptHandler^0,w,c
 23224  017A54  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23225  017A56  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23226  017A58  B4D8               	btfsc	status,2,c
 23227  017A5A  0012               	return	
 23228                           
 23229                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23230  017A5C  D801               	call	u366_48
 23231  017A5E  0012               	return	
 23232  017A60                     u366_48:
 23233  017A60  0005               	push	
 23234  017A62  6EFA               	movwf	pclath,c
 23235  017A64  5019               	movf	_INT0_InterruptHandler^0,w,c
 23236  017A66  6EFD               	movwf	tosl,c
 23237  017A68  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23238  017A6A  6EFE               	movwf	tosh,c
 23239  017A6C  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23240  017A6E  6EFF               	movwf	tosu,c
 23241  017A70  50FA               	movf	pclath,w,c
 23242  017A72  0012               	return		;indir
 23243  017A74                     __end_of_INT0_CallBack:
 23244                           	opt callstack 0
 23245                           
 23246 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23247 ;; Defined at:
 23248 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23249 ;; Parameters:    Size  Location     Type
 23250 ;;		None
 23251 ;; Auto vars:     Size  Location     Type
 23252 ;;		None
 23253 ;; Return value:  Size  Location     Type
 23254 ;;                  1  [STACK] void 
 23255 ;; Registers used:
 23256 ;;		None
 23257 ;; Tracked objects:
 23258 ;;		On entry : 0/39
 23259 ;;		On exit  : 0/0
 23260 ;;		Unchanged: 0/0
 23261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23266 ;;Total ram usage:        0 bytes
 23267 ;; Hardware stack levels used:    1
 23268 ;; This function calls:
 23269 ;;		Nothing
 23270 ;; This function is called by:
 23271 ;;		_EXT_INT_Initialize
 23272 ;;		_INT0_CallBack
 23273 ;; This function uses a reentrant model
 23274 ;;
 23275                           
 23276                           	psect	text114
 23277  017D62                     __ptext114:
 23278                           	opt callstack 0
 23279  017D62                     _INT0_DefaultInterruptHandler:
 23280                           	opt callstack 12
 23281                           
 23282                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23283                           
 23284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23285                           ;incstack = 0
 23286  017D62  0012               	return		;funcret
 23287  017D64                     __end_of_INT0_DefaultInterruptHandler:
 23288                           	opt callstack 0
 23289                           
 23290 ;; *************** function _INT1_ISR *****************
 23291 ;; Defined at:
 23292 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23293 ;; Parameters:    Size  Location     Type
 23294 ;;		None
 23295 ;; Auto vars:     Size  Location     Type
 23296 ;;		None
 23297 ;; Return value:  Size  Location     Type
 23298 ;;                  1    wreg      void 
 23299 ;; Registers used:
 23300 ;;		wreg, status,2, status,0, pclath, tosl
 23301 ;; Tracked objects:
 23302 ;;		On entry : 0/0
 23303 ;;		On exit  : 0/0
 23304 ;;		Unchanged: 0/0
 23305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23310 ;;Total ram usage:        0 bytes
 23311 ;; Hardware stack levels used:    1
 23312 ;; Hardware stack levels required when called:    2
 23313 ;; This function calls:
 23314 ;;		_INT1_CallBack
 23315 ;; This function is called by:
 23316 ;;		Interrupt level 2
 23317 ;; This function uses a non-reentrant model
 23318 ;;
 23319                           
 23320                           	psect	text115
 23321  017CE0                     __ptext115:
 23322                           	opt callstack 0
 23323  017CE0                     _INT1_ISR:
 23324                           	opt callstack 12
 23325                           
 23326                           ;incstack = 0
 23327  017CE0  EE13  F356         	lfsr	1,___inthi_sp
 23328                           
 23329                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23330  017CE4  0139               	movlb	57	; () banked
 23331  017CE6  91A5               	bcf	165,0,b	;volatile
 23332                           
 23333                           ; BSR set to: 57
 23334                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23335  017CE8  EC3A  F0BD         	call	_INT1_CallBack	;wreg free
 23336  017CEC  0011               	retfie		f
 23337  017CEE                     __end_of_INT1_ISR:
 23338                           	opt callstack 0
 23339                           
 23340 ;; *************** function _INT1_CallBack *****************
 23341 ;; Defined at:
 23342 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23343 ;; Parameters:    Size  Location     Type
 23344 ;;		None
 23345 ;; Auto vars:     Size  Location     Type
 23346 ;;		None
 23347 ;; Return value:  Size  Location     Type
 23348 ;;                  1  [STACK] void 
 23349 ;; Registers used:
 23350 ;;		wreg, status,2, status,0, pclath, tosl
 23351 ;; Tracked objects:
 23352 ;;		On entry : 3F/39
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;Total ram usage:        0 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:    1
 23363 ;; This function calls:
 23364 ;;		Absolute function
 23365 ;;		_INT1_DefaultInterruptHandler
 23366 ;; This function is called by:
 23367 ;;		_INT1_ISR
 23368 ;; This function uses a reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text116
 23372  017A74                     __ptext116:
 23373                           	opt callstack 0
 23374  017A74                     _INT1_CallBack:
 23375                           	opt callstack 12
 23376                           
 23377                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 23378                           
 23379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23380                           ;incstack = 0
 23381  017A74  5016               	movf	_INT1_InterruptHandler^0,w,c
 23382  017A76  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23383  017A78  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23384  017A7A  B4D8               	btfsc	status,2,c
 23385  017A7C  0012               	return	
 23386                           
 23387                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 23388  017A7E  D801               	call	u368_48
 23389  017A80  0012               	return	
 23390  017A82                     u368_48:
 23391  017A82  0005               	push	
 23392  017A84  6EFA               	movwf	pclath,c
 23393  017A86  5016               	movf	_INT1_InterruptHandler^0,w,c
 23394  017A88  6EFD               	movwf	tosl,c
 23395  017A8A  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23396  017A8C  6EFE               	movwf	tosh,c
 23397  017A8E  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23398  017A90  6EFF               	movwf	tosu,c
 23399  017A92  50FA               	movf	pclath,w,c
 23400  017A94  0012               	return		;indir
 23401  017A96                     __end_of_INT1_CallBack:
 23402                           	opt callstack 0
 23403                           
 23404 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23405 ;; Defined at:
 23406 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 23407 ;; Parameters:    Size  Location     Type
 23408 ;;		None
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;		None
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  1  [STACK] void 
 23413 ;; Registers used:
 23414 ;;		None
 23415 ;; Tracked objects:
 23416 ;;		On entry : 0/39
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23424 ;;Total ram usage:        0 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_EXT_INT_Initialize
 23430 ;;		_INT1_CallBack
 23431 ;; This function uses a reentrant model
 23432 ;;
 23433                           
 23434                           	psect	text117
 23435  017D64                     __ptext117:
 23436                           	opt callstack 0
 23437  017D64                     _INT1_DefaultInterruptHandler:
 23438                           	opt callstack 12
 23439                           
 23440                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23441                           
 23442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23443                           ;incstack = 0
 23444  017D64  0012               	return		;funcret
 23445  017D66                     __end_of_INT1_DefaultInterruptHandler:
 23446                           	opt callstack 0
 23447                           
 23448 ;; *************** function _Default_ISR *****************
 23449 ;; Defined at:
 23450 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 23451 ;; Parameters:    Size  Location     Type
 23452 ;;		None
 23453 ;; Auto vars:     Size  Location     Type
 23454 ;;		None
 23455 ;; Return value:  Size  Location     Type
 23456 ;;                  1    wreg      void 
 23457 ;; Registers used:
 23458 ;;		None
 23459 ;; Tracked objects:
 23460 ;;		On entry : 0/0
 23461 ;;		On exit  : 0/0
 23462 ;;		Unchanged: 0/0
 23463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23468 ;;Total ram usage:        0 bytes
 23469 ;; Hardware stack levels used:    1
 23470 ;; This function calls:
 23471 ;;		Nothing
 23472 ;; This function is called by:
 23473 ;;		Interrupt level 2
 23474 ;; This function uses a non-reentrant model
 23475 ;;
 23476                           
 23477                           	psect	text118
 23478  017D5C                     __ptext118:
 23479                           	opt callstack 0
 23480  017D5C                     _Default_ISR:
 23481                           	opt callstack 14
 23482                           
 23483                           ;incstack = 0
 23484  017D5C  EE13  F356         	lfsr	1,___inthi_sp
 23485  017D60  0011               	retfie		f
 23486  017D62                     __end_of_Default_ISR:
 23487                           	opt callstack 0
 23488                           
 23489 ;; *************** function _ADCC_ISR *****************
 23490 ;; Defined at:
 23491 ;;		line 314 in file "mcc_generated_files/adcc.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;		None
 23494 ;; Auto vars:     Size  Location     Type
 23495 ;;		None
 23496 ;; Return value:  Size  Location     Type
 23497 ;;                  1    wreg      void 
 23498 ;; Registers used:
 23499 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23500 ;; Tracked objects:
 23501 ;;		On entry : 0/0
 23502 ;;		On exit  : 0/0
 23503 ;;		Unchanged: 0/0
 23504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23509 ;;Total ram usage:        1 bytes
 23510 ;; Hardware stack levels used:    1
 23511 ;; Hardware stack levels required when called:    1
 23512 ;; This function calls:
 23513 ;;		Absolute function
 23514 ;;		_ADCC_DefaultInterruptHandler
 23515 ;;		_adc_int_handler
 23516 ;; This function is called by:
 23517 ;;		Interrupt level 2
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text119
 23522  017518                     __ptext119:
 23523                           	opt callstack 0
 23524  017518                     _ADCC_ISR:
 23525                           	opt callstack 13
 23526                           
 23527                           ;incstack = 0
 23528  017518  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 23529  01751E  EE13  F356         	lfsr	1,___inthi_sp
 23530                           
 23531                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 23532  017522  0139               	movlb	57	; () banked
 23533  017524  95A1               	bcf	161,2,b	;volatile
 23534                           
 23535                           ; BSR set to: 57
 23536                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 23537  017526  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23538  017528  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23539  01752A  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23540  01752C  B4D8               	btfsc	status,2,c
 23541  01752E  D00C               	goto	i2u395_49
 23542                           
 23543                           ; BSR set to: 57
 23544                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 23545  017530  D801               	call	i2u395_48
 23546  017532  D00A               	goto	i2u395_49
 23547  017534                     i2u395_48:
 23548  017534  0005               	push	
 23549  017536  6EFA               	movwf	pclath,c
 23550  017538  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23551  01753A  6EFD               	movwf	tosl,c
 23552  01753C  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23553  01753E  6EFE               	movwf	tosh,c
 23554  017540  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23555  017542  6EFF               	movwf	tosu,c
 23556  017544  50FA               	movf	pclath,w,c
 23557  017546  0012               	return		;indir
 23558  017548                     i2u395_49:
 23559  017548  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 23560  01754E  0011               	retfie		f
 23561  017550                     __end_of_ADCC_ISR:
 23562                           	opt callstack 0
 23563                           
 23564 ;; *************** function _adc_int_t_handler *****************
 23565 ;; Defined at:
 23566 ;;		line 101 in file "daq.c"
 23567 ;; Parameters:    Size  Location     Type
 23568 ;;		None
 23569 ;; Auto vars:     Size  Location     Type
 23570 ;;		None
 23571 ;; Return value:  Size  Location     Type
 23572 ;;                  1  [STACK] void 
 23573 ;; Registers used:
 23574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 23575 ;; Tracked objects:
 23576 ;;		On entry : 3F/39
 23577 ;;		On exit  : 1/0
 23578 ;;		Unchanged: 0/0
 23579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23584 ;;Total ram usage:        0 bytes
 23585 ;; Hardware stack levels used:    1
 23586 ;; Hardware stack levels required when called:    1
 23587 ;; This function calls:
 23588 ;;		_ADCC_StartConversion
 23589 ;; This function is called by:
 23590 ;;		_start_adc_scan
 23591 ;;		_ADCC_ThresholdISR
 23592 ;; This function uses a reentrant model
 23593 ;;
 23594                           
 23595                           	psect	text120
 23596  016A10                     __ptext120:
 23597                           	opt callstack 0
 23598  016A10                     _adc_int_t_handler:
 23599                           	opt callstack 12
 23600                           
 23601                           ;daq.c: 106:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 23602                           
 23603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23604                           ;incstack = 0
 23605  016A10  013E               	movlb	62	; () banked
 23606  016A12  51E6               	movf	230,w,b	;volatile
 23607  016A14  006F FB9C  F035    	movff	16103,btemp	;volatile
 23608  016A1A  6A36               	clrf	(btemp+1)^0,c
 23609  016A1C  0060  F0D4  F036   	movff	btemp,btemp+1
 23610  016A22  6A35               	clrf	btemp^0,c
 23611  016A24  2635               	addwf	btemp^0,f,c
 23612  016A26  0E00               	movlw	0
 23613  016A28  2236               	addwfc	(btemp+1)^0,f,c
 23614  016A2A  0100               	movlb	0	; () banked
 23615  016A2C  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23616  016A2E  0D02               	mullw	2
 23617  016A30  50F3               	movf	243,w,c
 23618  016A32  0F60               	addlw	low _R
 23619  016A34  6ED9               	movwf	fsr2l,c
 23620  016A36  6ADA               	clrf	fsr2h,c
 23621  016A38  0060  F0D7  FFDE   	movff	btemp,postinc2
 23622  016A3E  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 23623  016A44                     l8546:
 23624                           
 23625                           ;daq.c: 108:   if (++R.scan_index > 0XD) {
 23626  016A44  0100               	movlb	0	; () banked
 23627  016A46  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 23628  016A48  0E0D               	movlw	13
 23629  016A4A  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 23630  016A4C  D004               	goto	l8554
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;daq.c: 109:    R.done = 1;
 23634  016A4E  0E01               	movlw	1
 23635  016A50  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 23636                           
 23637                           ; BSR set to: 0
 23638  016A52  92BE               	bcf	190,1,c	;volatile
 23639  016A54  0012               	return	
 23640  016A56                     l8554:
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;daq.c: 113:  } while (!((R.scan_select >> R.scan_index) &0x01));
 23644  016A56  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 23645  016A5C  EE20  F07F         	lfsr	2,_R+31	;volatile
 23646  016A60  006F FF78  F03D    	movff	postinc2,btemp+8
 23647  016A66  006F FF74  F03E    	movff	postdec2,btemp+9
 23648  016A6C  2A40               	incf	(btemp+11)^0,f,c
 23649  016A6E  D003               	goto	u800_44
 23650  016A70                     u800_45:
 23651  016A70  90D8               	bcf	status,0,c
 23652  016A72  323E               	rrcf	(btemp+9)^0,f,c
 23653  016A74  323D               	rrcf	(btemp+8)^0,f,c
 23654  016A76                     u800_44:
 23655  016A76  2E40               	decfsz	(btemp+11)^0,f,c
 23656  016A78  D7FB               	goto	u800_45
 23657  016A7A  A03D               	btfss	(btemp+8)^0,0,c
 23658  016A7C  D7E3               	goto	l8546
 23659                           
 23660                           ;daq.c: 114:  ADCC_StartConversion(R.scan_index & 0xf);
 23661  016A7E  0100               	movlb	0	; () banked
 23662  016A80  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23663  016A82  0B0F               	andlw	15
 23664  016A84  6EE6               	movwf	postinc1,c
 23665  016A86  EC48  F0BE         	call	_ADCC_StartConversion	;wreg free
 23666                           
 23667                           ; BSR set to: 62
 23668  016A8A  A2BE               	btfss	190,1,c	;volatile
 23669  016A8C  D002               	goto	u802_40
 23670  016A8E  0E01               	movlw	1
 23671  016A90  D001               	goto	u802_46
 23672  016A92                     u802_40:
 23673  016A92  0E00               	movlw	0
 23674  016A94                     u802_46:
 23675  016A94  0AFF               	xorlw	255
 23676  016A96  6E40               	movwf	(btemp+11)^0,c
 23677  016A98  4640               	rlncf	(btemp+11)^0,f,c
 23678  016A9A  50BE               	movf	190,w,c	;volatile
 23679  016A9C  1840               	xorwf	(btemp+11)^0,w,c
 23680  016A9E  0BFD               	andlw	-3
 23681  016AA0  1840               	xorwf	(btemp+11)^0,w,c
 23682  016AA2  6EBE               	movwf	190,c	;volatile
 23683                           
 23684                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23685  016AA4  0012               	return		;funcret
 23686  016AA6                     __end_of_adc_int_t_handler:
 23687                           	opt callstack 0
 23688                           
 23689 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 23690 ;; Defined at:
 23691 ;;		line 339 in file "mcc_generated_files/adcc.c"
 23692 ;; Parameters:    Size  Location     Type
 23693 ;;		None
 23694 ;; Auto vars:     Size  Location     Type
 23695 ;;		None
 23696 ;; Return value:  Size  Location     Type
 23697 ;;                  1  [STACK] void 
 23698 ;; Registers used:
 23699 ;;		None
 23700 ;; Tracked objects:
 23701 ;;		On entry : 3F/39
 23702 ;;		On exit  : 0/0
 23703 ;;		Unchanged: 0/0
 23704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23709 ;;Total ram usage:        0 bytes
 23710 ;; Hardware stack levels used:    1
 23711 ;; This function calls:
 23712 ;;		Nothing
 23713 ;; This function is called by:
 23714 ;;		_ADCC_Initialize
 23715 ;;		_ADCC_ISR
 23716 ;;		_ADCC_ThresholdISR
 23717 ;; This function uses a reentrant model
 23718 ;;
 23719                           
 23720                           	psect	text121
 23721  017D66                     __ptext121:
 23722                           	opt callstack 0
 23723  017D66                     _ADCC_DefaultInterruptHandler:
 23724                           	opt callstack 13
 23725                           
 23726                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23727                           
 23728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23729                           ;incstack = 0
 23730  017D66  0012               	return		;funcret
 23731  017D68                     __end_of_ADCC_DefaultInterruptHandler:
 23732                           	opt callstack 0
 23733                           
 23734 ;; *************** function _adc_int_handler *****************
 23735 ;; Defined at:
 23736 ;;		line 93 in file "daq.c"
 23737 ;; Parameters:    Size  Location     Type
 23738 ;;		None
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;		None
 23741 ;; Return value:  Size  Location     Type
 23742 ;;                  1  [STACK] void 
 23743 ;; Registers used:
 23744 ;;		wreg, status,2, status,0, btemp+11
 23745 ;; Tracked objects:
 23746 ;;		On entry : 3F/39
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;Total ram usage:        0 bytes
 23755 ;; Hardware stack levels used:    1
 23756 ;; This function calls:
 23757 ;;		Nothing
 23758 ;; This function is called by:
 23759 ;;		_start_adc_scan
 23760 ;;		_ADCC_ISR
 23761 ;; This function uses a reentrant model
 23762 ;;
 23763                           
 23764                           	psect	text122
 23765  017B12                     __ptext122:
 23766                           	opt callstack 0
 23767  017B12                     _adc_int_handler:
 23768                           	opt callstack 13
 23769                           
 23770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23771                           ;incstack = 0
 23772                           ;daq.c: 95:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 23773  017B12  A4BE               	btfss	190,2,c	;volatile
 23774  017B14  D002               	goto	u389_40
 23775  017B16  0E01               	movlw	1
 23776  017B18  D001               	goto	u389_46
 23777  017B1A                     u389_40:
 23778  017B1A  0E00               	movlw	0
 23779  017B1C                     u389_46:
 23780  017B1C  0AFF               	xorlw	255
 23781  017B1E  6E40               	movwf	(btemp+11)^0,c
 23782  017B20  4640               	rlncf	(btemp+11)^0,f,c
 23783  017B22  4640               	rlncf	(btemp+11)^0,f,c
 23784  017B24  50BE               	movf	190,w,c	;volatile
 23785  017B26  1840               	xorwf	(btemp+11)^0,w,c
 23786  017B28  0BFB               	andlw	-5
 23787  017B2A  1840               	xorwf	(btemp+11)^0,w,c
 23788  017B2C  6EBE               	movwf	190,c	;volatile
 23789                           
 23790                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23791  017B2E  0012               	return		;funcret
 23792  017B30                     __end_of_adc_int_handler:
 23793                           	opt callstack 0
 23794                           
 23795 ;; *************** function _ADCC_ThresholdISR *****************
 23796 ;; Defined at:
 23797 ;;		line 327 in file "mcc_generated_files/adcc.c"
 23798 ;; Parameters:    Size  Location     Type
 23799 ;;		None
 23800 ;; Auto vars:     Size  Location     Type
 23801 ;;		None
 23802 ;; Return value:  Size  Location     Type
 23803 ;;                  1    wreg      void 
 23804 ;; Registers used:
 23805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 23806 ;; Tracked objects:
 23807 ;;		On entry : 0/0
 23808 ;;		On exit  : 0/0
 23809 ;;		Unchanged: 0/0
 23810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23815 ;;Total ram usage:        5 bytes
 23816 ;; Hardware stack levels used:    1
 23817 ;; Hardware stack levels required when called:    2
 23818 ;; This function calls:
 23819 ;;		Absolute function
 23820 ;;		_ADCC_DefaultInterruptHandler
 23821 ;;		_adc_int_t_handler
 23822 ;; This function is called by:
 23823 ;;		Interrupt level 2
 23824 ;; This function uses a non-reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text123
 23828  016E2C                     __ptext123:
 23829                           	opt callstack 0
 23830  016E2C                     _ADCC_ThresholdISR:
 23831                           	opt callstack 12
 23832                           
 23833                           ;incstack = 0
 23834  016E2C  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 23835  016E32  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 23836  016E38  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 23837  016E3E  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 23838  016E44  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 23839  016E4A  EE13  F356         	lfsr	1,___inthi_sp
 23840                           
 23841                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 23842  016E4E  0139               	movlb	57	; () banked
 23843  016E50  97A1               	bcf	161,3,b	;volatile
 23844                           
 23845                           ; BSR set to: 57
 23846                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 23847  016E52  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 23848  016E54  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 23849  016E56  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 23850  016E58  B4D8               	btfsc	status,2,c
 23851  016E5A  D00C               	goto	i2u804_49
 23852                           
 23853                           ; BSR set to: 57
 23854                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 23855  016E5C  D801               	call	i2u804_48
 23856  016E5E  D00A               	goto	i2u804_49
 23857  016E60                     i2u804_48:
 23858  016E60  0005               	push	
 23859  016E62  6EFA               	movwf	pclath,c
 23860  016E64  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 23861  016E66  6EFD               	movwf	tosl,c
 23862  016E68  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 23863  016E6A  6EFE               	movwf	tosh,c
 23864  016E6C  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 23865  016E6E  6EFF               	movwf	tosu,c
 23866  016E70  50FA               	movf	pclath,w,c
 23867  016E72  0012               	return		;indir
 23868  016E74                     i2u804_49:
 23869  016E74  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 23870  016E7A  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 23871  016E80  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 23872  016E86  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 23873  016E8C  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 23874  016E92  0011               	retfie		f
 23875  016E94                     __end_of_ADCC_ThresholdISR:
 23876                           	opt callstack 0
 23877                           
 23878 ;; *************** function _UART1_tx_vect_isr *****************
 23879 ;; Defined at:
 23880 ;;		line 199 in file "mcc_generated_files/uart1.c"
 23881 ;; Parameters:    Size  Location     Type
 23882 ;;		None
 23883 ;; Auto vars:     Size  Location     Type
 23884 ;;		None
 23885 ;; Return value:  Size  Location     Type
 23886 ;;                  1    wreg      void 
 23887 ;; Registers used:
 23888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/0
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;Total ram usage:        0 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:    1
 23901 ;; This function calls:
 23902 ;;		Absolute function
 23903 ;;		_UART1_Transmit_ISR
 23904 ;; This function is called by:
 23905 ;;		Interrupt level 2
 23906 ;; This function uses a non-reentrant model
 23907 ;;
 23908                           
 23909                           	psect	text124
 23910  01796C                     __ptext124:
 23911                           	opt callstack 0
 23912  01796C                     _UART1_tx_vect_isr:
 23913                           	opt callstack 13
 23914                           
 23915                           ;incstack = 0
 23916  01796C  EE13  F356         	lfsr	1,___inthi_sp
 23917                           
 23918                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 23919  017970  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 23920  017972  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 23921  017974  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 23922  017976  B4D8               	btfsc	status,2,c
 23923  017978  0011               	retfie		f
 23924                           
 23925                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 23926  01797A  D801               	call	i2u976_48
 23927  01797C  0011               	retfie		f
 23928  01797E                     i2u976_48:
 23929  01797E  0005               	push	
 23930  017980  6EFA               	movwf	pclath,c
 23931  017982  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 23932  017984  6EFD               	movwf	tosl,c
 23933  017986  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 23934  017988  6EFE               	movwf	tosh,c
 23935  01798A  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 23936  01798C  6EFF               	movwf	tosu,c
 23937  01798E  50FA               	movf	pclath,w,c
 23938  017990  0012               	return		;indir
 23939  017992                     __end_of_UART1_tx_vect_isr:
 23940                           	opt callstack 0
 23941                           
 23942 ;; *************** function _UART1_Transmit_ISR *****************
 23943 ;; Defined at:
 23944 ;;		line 213 in file "mcc_generated_files/uart1.c"
 23945 ;; Parameters:    Size  Location     Type
 23946 ;;		None
 23947 ;; Auto vars:     Size  Location     Type
 23948 ;;		None
 23949 ;; Return value:  Size  Location     Type
 23950 ;;                  1  [STACK] void 
 23951 ;; Registers used:
 23952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23953 ;; Tracked objects:
 23954 ;;		On entry : 0/0
 23955 ;;		On exit  : 3B/39
 23956 ;;		Unchanged: 0/0
 23957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;Total ram usage:        0 bytes
 23963 ;; Hardware stack levels used:    1
 23964 ;; This function calls:
 23965 ;;		Nothing
 23966 ;; This function is called by:
 23967 ;;		_UART1_Initialize
 23968 ;;		_UART1_tx_vect_isr
 23969 ;; This function uses a reentrant model
 23970 ;;
 23971                           
 23972                           	psect	text125
 23973  0176E2                     __ptext125:
 23974                           	opt callstack 0
 23975  0176E2                     _UART1_Transmit_ISR:
 23976                           	opt callstack 13
 23977                           
 23978                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 23979                           
 23980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23981                           ;incstack = 0
 23982  0176E2  0E40               	movlw	64
 23983  0176E4  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 23984  0176E6  D010               	goto	l581
 23985                           
 23986                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 23987  0176E8  0E68               	movlw	low _uart1TxBuffer
 23988  0176EA  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 23989  0176EC  6ED9               	movwf	fsr2l,c
 23990  0176EE  6ADA               	clrf	fsr2h,c
 23991  0176F0  0E01               	movlw	high _uart1TxBuffer
 23992  0176F2  22DA               	addwfc	fsr2h,f,c
 23993  0176F4  50DF               	movf	indf2,w,c
 23994  0176F6  013D               	movlb	61	; () banked
 23995  0176F8  6FEA               	movwf	234,b	;volatile
 23996                           
 23997                           ; BSR set to: 61
 23998  0176FA  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 23999                           
 24000                           ; BSR set to: 61
 24001                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24002  0176FC  0E3F               	movlw	63
 24003  0176FE  6433               	cpfsgt	_uart1TxTail^0,c
 24004  017700  D001               	goto	l8314
 24005                           
 24006                           ; BSR set to: 61
 24007                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24008  017702  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24009  017704                     l8314:
 24010                           
 24011                           ; BSR set to: 61
 24012                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24013  017704  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24014                           
 24015                           ;mcc_generated_files/uart1.c: 222:  } else {
 24016  017706  0012               	return	
 24017  017708                     l581:
 24018                           
 24019                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24020  017708  0139               	movlb	57	; () banked
 24021  01770A  9993               	bcf	147,4,b	;volatile
 24022                           
 24023                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24024  01770C  0012               	return		;funcret
 24025  01770E                     __end_of_UART1_Transmit_ISR:
 24026                           	opt callstack 0
 24027                           
 24028 ;; *************** function _UART1_rx_vect_isr *****************
 24029 ;; Defined at:
 24030 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24031 ;; Parameters:    Size  Location     Type
 24032 ;;		None
 24033 ;; Auto vars:     Size  Location     Type
 24034 ;;		None
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1    wreg      void 
 24037 ;; Registers used:
 24038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24039 ;; Tracked objects:
 24040 ;;		On entry : 0/0
 24041 ;;		On exit  : 0/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24048 ;;Total ram usage:        0 bytes
 24049 ;; Hardware stack levels used:    1
 24050 ;; Hardware stack levels required when called:    1
 24051 ;; This function calls:
 24052 ;;		Absolute function
 24053 ;;		_UART1_Receive_ISR
 24054 ;; This function is called by:
 24055 ;;		Interrupt level 2
 24056 ;; This function uses a non-reentrant model
 24057 ;;
 24058                           
 24059                           	psect	text126
 24060  017994                     __ptext126:
 24061                           	opt callstack 0
 24062  017994                     _UART1_rx_vect_isr:
 24063                           	opt callstack 13
 24064                           
 24065                           ;incstack = 0
 24066  017994  EE13  F356         	lfsr	1,___inthi_sp
 24067                           
 24068                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24069  017998  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24070  01799A  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24071  01799C  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24072  01799E  B4D8               	btfsc	status,2,c
 24073  0179A0  0011               	retfie		f
 24074                           
 24075                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24076  0179A2  D801               	call	i2u978_48
 24077  0179A4  0011               	retfie		f
 24078  0179A6                     i2u978_48:
 24079  0179A6  0005               	push	
 24080  0179A8  6EFA               	movwf	pclath,c
 24081  0179AA  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24082  0179AC  6EFD               	movwf	tosl,c
 24083  0179AE  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24084  0179B0  6EFE               	movwf	tosh,c
 24085  0179B2  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24086  0179B4  6EFF               	movwf	tosu,c
 24087  0179B6  50FA               	movf	pclath,w,c
 24088  0179B8  0012               	return		;indir
 24089  0179BA                     __end_of_UART1_rx_vect_isr:
 24090                           	opt callstack 0
 24091                           
 24092 ;; *************** function _UART1_Receive_ISR *****************
 24093 ;; Defined at:
 24094 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24095 ;; Parameters:    Size  Location     Type
 24096 ;;		None
 24097 ;; Auto vars:     Size  Location     Type
 24098 ;;		None
 24099 ;; Return value:  Size  Location     Type
 24100 ;;                  1  [STACK] void 
 24101 ;; Registers used:
 24102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24103 ;; Tracked objects:
 24104 ;;		On entry : 0/0
 24105 ;;		On exit  : 0/0
 24106 ;;		Unchanged: 0/0
 24107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24112 ;;Total ram usage:        0 bytes
 24113 ;; Hardware stack levels used:    1
 24114 ;; This function calls:
 24115 ;;		Nothing
 24116 ;; This function is called by:
 24117 ;;		_UART1_Initialize
 24118 ;;		_UART1_rx_vect_isr
 24119 ;; This function uses a reentrant model
 24120 ;;
 24121                           
 24122                           	psect	text127
 24123  017B30                     __ptext127:
 24124                           	opt callstack 0
 24125  017B30                     _UART1_Receive_ISR:
 24126                           	opt callstack 13
 24127                           
 24128                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24129                           
 24130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24131                           ;incstack = 0
 24132  017B30  0E00               	movlw	low _uart1RxBuffer
 24133  017B32  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24134  017B34  6ED9               	movwf	fsr2l,c
 24135  017B36  6ADA               	clrf	fsr2h,c
 24136  017B38  0E05               	movlw	high _uart1RxBuffer
 24137  017B3A  22DA               	addwfc	fsr2h,f,c
 24138  017B3C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24139  017B42  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24140                           
 24141                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24142  017B44  2831               	incf	_uart1RxHead^0,w,c
 24143  017B46  B4D8               	btfsc	status,2,c
 24144                           
 24145                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24146  017B48  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24147                           
 24148                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24149  017B4A  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24150                           
 24151                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24152  017B4C  0012               	return		;funcret
 24153  017B4E                     __end_of_UART1_Receive_ISR:
 24154                           	opt callstack 0
 24155                           
 24156 ;; *************** function _UART2_tx_vect_isr *****************
 24157 ;; Defined at:
 24158 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;		None
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;		None
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  1    wreg      void 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24176 ;;Total ram usage:        0 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; Hardware stack levels required when called:    1
 24179 ;; This function calls:
 24180 ;;		Absolute function
 24181 ;;		_UART2_Transmit_ISR
 24182 ;; This function is called by:
 24183 ;;		Interrupt level 2
 24184 ;; This function uses a non-reentrant model
 24185 ;;
 24186                           
 24187                           	psect	text128
 24188  0179BC                     __ptext128:
 24189                           	opt callstack 0
 24190  0179BC                     _UART2_tx_vect_isr:
 24191                           	opt callstack 13
 24192                           
 24193                           ;incstack = 0
 24194  0179BC  EE13  F356         	lfsr	1,___inthi_sp
 24195                           
 24196                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24197  0179C0  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24198  0179C2  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24199  0179C4  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24200  0179C6  B4D8               	btfsc	status,2,c
 24201  0179C8  0011               	retfie		f
 24202                           
 24203                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24204  0179CA  D801               	call	i2u980_48
 24205  0179CC  0011               	retfie		f
 24206  0179CE                     i2u980_48:
 24207  0179CE  0005               	push	
 24208  0179D0  6EFA               	movwf	pclath,c
 24209  0179D2  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24210  0179D4  6EFD               	movwf	tosl,c
 24211  0179D6  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24212  0179D8  6EFE               	movwf	tosh,c
 24213  0179DA  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24214  0179DC  6EFF               	movwf	tosu,c
 24215  0179DE  50FA               	movf	pclath,w,c
 24216  0179E0  0012               	return		;indir
 24217  0179E2                     __end_of_UART2_tx_vect_isr:
 24218                           	opt callstack 0
 24219                           
 24220 ;; *************** function _UART2_Transmit_ISR *****************
 24221 ;; Defined at:
 24222 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24223 ;; Parameters:    Size  Location     Type
 24224 ;;		None
 24225 ;; Auto vars:     Size  Location     Type
 24226 ;;		None
 24227 ;; Return value:  Size  Location     Type
 24228 ;;                  1  [STACK] void 
 24229 ;; Registers used:
 24230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24231 ;; Tracked objects:
 24232 ;;		On entry : 0/0
 24233 ;;		On exit  : 3B/39
 24234 ;;		Unchanged: 0/0
 24235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24240 ;;Total ram usage:        0 bytes
 24241 ;; Hardware stack levels used:    1
 24242 ;; This function calls:
 24243 ;;		Nothing
 24244 ;; This function is called by:
 24245 ;;		_UART2_Initialize
 24246 ;;		_UART2_tx_vect_isr
 24247 ;; This function uses a reentrant model
 24248 ;;
 24249                           
 24250                           	psect	text129
 24251  01770E                     __ptext129:
 24252                           	opt callstack 0
 24253  01770E                     _UART2_Transmit_ISR:
 24254                           	opt callstack 13
 24255                           
 24256                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24257                           
 24258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24259                           ;incstack = 0
 24260  01770E  0E40               	movlw	64
 24261  017710  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24262  017712  D010               	goto	l701
 24263                           
 24264                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24265  017714  0EBD               	movlw	low _uart2TxBuffer
 24266  017716  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24267  017718  6ED9               	movwf	fsr2l,c
 24268  01771A  6ADA               	clrf	fsr2h,c
 24269  01771C  0E02               	movlw	high _uart2TxBuffer
 24270  01771E  22DA               	addwfc	fsr2h,f,c
 24271  017720  50DF               	movf	indf2,w,c
 24272  017722  013D               	movlb	61	; () banked
 24273  017724  6FD2               	movwf	210,b	;volatile
 24274                           
 24275                           ; BSR set to: 61
 24276  017726  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24277                           
 24278                           ; BSR set to: 61
 24279                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24280  017728  0E3F               	movlw	63
 24281  01772A  642D               	cpfsgt	_uart2TxTail^0,c
 24282  01772C  D001               	goto	l8336
 24283                           
 24284                           ; BSR set to: 61
 24285                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24286  01772E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24287  017730                     l8336:
 24288                           
 24289                           ; BSR set to: 61
 24290                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24291  017730  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24292                           
 24293                           ;mcc_generated_files/uart2.c: 224:     }
 24294  017732  0012               	return	
 24295  017734                     l701:
 24296                           
 24297                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24298  017734  0139               	movlb	57	; () banked
 24299  017736  9796               	bcf	150,3,b	;volatile
 24300                           
 24301                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24302  017738  0012               	return		;funcret
 24303  01773A                     __end_of_UART2_Transmit_ISR:
 24304                           	opt callstack 0
 24305                           
 24306 ;; *************** function _UART2_rx_vect_isr *****************
 24307 ;; Defined at:
 24308 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24309 ;; Parameters:    Size  Location     Type
 24310 ;;		None
 24311 ;; Auto vars:     Size  Location     Type
 24312 ;;		None
 24313 ;; Return value:  Size  Location     Type
 24314 ;;                  1    wreg      void 
 24315 ;; Registers used:
 24316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24317 ;; Tracked objects:
 24318 ;;		On entry : 0/0
 24319 ;;		On exit  : 0/0
 24320 ;;		Unchanged: 0/0
 24321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24326 ;;Total ram usage:        0 bytes
 24327 ;; Hardware stack levels used:    1
 24328 ;; Hardware stack levels required when called:    1
 24329 ;; This function calls:
 24330 ;;		Absolute function
 24331 ;;		_UART2_Receive_ISR
 24332 ;; This function is called by:
 24333 ;;		Interrupt level 2
 24334 ;; This function uses a non-reentrant model
 24335 ;;
 24336                           
 24337                           	psect	text130
 24338  0179E4                     __ptext130:
 24339                           	opt callstack 0
 24340  0179E4                     _UART2_rx_vect_isr:
 24341                           	opt callstack 13
 24342                           
 24343                           ;incstack = 0
 24344  0179E4  EE13  F356         	lfsr	1,___inthi_sp
 24345                           
 24346                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24347  0179E8  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24348  0179EA  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24349  0179EC  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24350  0179EE  B4D8               	btfsc	status,2,c
 24351  0179F0  0011               	retfie		f
 24352                           
 24353                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 24354  0179F2  D801               	call	i2u982_48
 24355  0179F4  0011               	retfie		f
 24356  0179F6                     i2u982_48:
 24357  0179F6  0005               	push	
 24358  0179F8  6EFA               	movwf	pclath,c
 24359  0179FA  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24360  0179FC  6EFD               	movwf	tosl,c
 24361  0179FE  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 24362  017A00  6EFE               	movwf	tosh,c
 24363  017A02  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 24364  017A04  6EFF               	movwf	tosu,c
 24365  017A06  50FA               	movf	pclath,w,c
 24366  017A08  0012               	return		;indir
 24367  017A0A                     __end_of_UART2_rx_vect_isr:
 24368                           	opt callstack 0
 24369                           
 24370 ;; *************** function _UART2_Receive_ISR *****************
 24371 ;; Defined at:
 24372 ;;		line 233 in file "mcc_generated_files/uart2.c"
 24373 ;; Parameters:    Size  Location     Type
 24374 ;;		None
 24375 ;; Auto vars:     Size  Location     Type
 24376 ;;		None
 24377 ;; Return value:  Size  Location     Type
 24378 ;;                  1  [STACK] void 
 24379 ;; Registers used:
 24380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24381 ;; Tracked objects:
 24382 ;;		On entry : 0/0
 24383 ;;		On exit  : 0/0
 24384 ;;		Unchanged: 0/0
 24385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24390 ;;Total ram usage:        0 bytes
 24391 ;; Hardware stack levels used:    1
 24392 ;; This function calls:
 24393 ;;		Nothing
 24394 ;; This function is called by:
 24395 ;;		_UART2_Initialize
 24396 ;;		_UART2_rx_vect_isr
 24397 ;; This function uses a reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text131
 24401  017B4E                     __ptext131:
 24402                           	opt callstack 0
 24403  017B4E                     _UART2_Receive_ISR:
 24404                           	opt callstack 13
 24405                           
 24406                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 24407                           
 24408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24409                           ;incstack = 0
 24410  017B4E  0E00               	movlw	low _uart2RxBuffer
 24411  017B50  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 24412  017B52  6ED9               	movwf	fsr2l,c
 24413  017B54  6ADA               	clrf	fsr2h,c
 24414  017B56  0E06               	movlw	high _uart2RxBuffer
 24415  017B58  22DA               	addwfc	fsr2h,f,c
 24416  017B5A  006F F743 FFDF     	movff	15824,indf2	;volatile
 24417  017B60  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 24418                           
 24419                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 24420  017B62  282B               	incf	_uart2RxHead^0,w,c
 24421  017B64  B4D8               	btfsc	status,2,c
 24422                           
 24423                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 24424  017B66  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 24425                           
 24426                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 24427  017B68  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 24428                           
 24429                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24430  017B6A  0012               	return		;funcret
 24431  017B6C                     __end_of_UART2_Receive_ISR:
 24432                           	opt callstack 0
 24433                           
 24434 ;; *************** function _TMR6_ISR *****************
 24435 ;; Defined at:
 24436 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 24437 ;; Parameters:    Size  Location     Type
 24438 ;;		None
 24439 ;; Auto vars:     Size  Location     Type
 24440 ;;		None
 24441 ;; Return value:  Size  Location     Type
 24442 ;;                  1    wreg      void 
 24443 ;; Registers used:
 24444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24445 ;; Tracked objects:
 24446 ;;		On entry : 0/0
 24447 ;;		On exit  : 0/0
 24448 ;;		Unchanged: 0/0
 24449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;Total ram usage:        1 bytes
 24455 ;; Hardware stack levels used:    1
 24456 ;; Hardware stack levels required when called:    2
 24457 ;; This function calls:
 24458 ;;		_TMR6_CallBack
 24459 ;; This function is called by:
 24460 ;;		Interrupt level 2
 24461 ;; This function uses a non-reentrant model
 24462 ;;
 24463                           
 24464                           	psect	text132
 24465  017BD8                     __ptext132:
 24466                           	opt callstack 0
 24467  017BD8                     _TMR6_ISR:
 24468                           	opt callstack 12
 24469                           
 24470                           ;incstack = 0
 24471  017BD8  0060  F0D4  F0D4   	movff	btemp,??_TMR6_ISR
 24472  017BDE  EE13  F356         	lfsr	1,___inthi_sp
 24473                           
 24474                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 24475  017BE2  0139               	movlb	57	; () banked
 24476  017BE4  91A9               	bcf	169,0,b	;volatile
 24477                           
 24478                           ; BSR set to: 57
 24479                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 24480  017BE6  EC4B  F0BD         	call	_TMR6_CallBack	;wreg free
 24481  017BEA  0060  F350  F035   	movff	??_TMR6_ISR,btemp
 24482  017BF0  0011               	retfie		f
 24483  017BF2                     __end_of_TMR6_ISR:
 24484                           	opt callstack 0
 24485                           
 24486 ;; *************** function _TMR6_CallBack *****************
 24487 ;; Defined at:
 24488 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;		None
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1  [STACK] void 
 24495 ;; Registers used:
 24496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24497 ;; Tracked objects:
 24498 ;;		On entry : 3F/39
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24506 ;;Total ram usage:        0 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:    1
 24509 ;; This function calls:
 24510 ;;		Absolute function
 24511 ;;		_TMR6_DefaultInterruptHandler
 24512 ;; This function is called by:
 24513 ;;		_TMR6_ISR
 24514 ;; This function uses a reentrant model
 24515 ;;
 24516                           
 24517                           	psect	text133
 24518  017A96                     __ptext133:
 24519                           	opt callstack 0
 24520  017A96                     _TMR6_CallBack:
 24521                           	opt callstack 12
 24522                           
 24523                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 24524                           
 24525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24526                           ;incstack = 0
 24527  017A96  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24528  017A98  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 24529  017A9A  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 24530  017A9C  B4D8               	btfsc	status,2,c
 24531  017A9E  0012               	return	
 24532                           
 24533                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 24534  017AA0  D801               	call	u786_48
 24535  017AA2  0012               	return	
 24536  017AA4                     u786_48:
 24537  017AA4  0005               	push	
 24538  017AA6  6EFA               	movwf	pclath,c
 24539  017AA8  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24540  017AAA  6EFD               	movwf	tosl,c
 24541  017AAC  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 24542  017AAE  6EFE               	movwf	tosh,c
 24543  017AB0  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 24544  017AB2  6EFF               	movwf	tosu,c
 24545  017AB4  50FA               	movf	pclath,w,c
 24546  017AB6  0012               	return		;indir
 24547  017AB8                     __end_of_TMR6_CallBack:
 24548                           	opt callstack 0
 24549                           
 24550 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 24551 ;; Defined at:
 24552 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 24553 ;; Parameters:    Size  Location     Type
 24554 ;;		None
 24555 ;; Auto vars:     Size  Location     Type
 24556 ;;  i               1  [STACK] unsigned char 
 24557 ;; Return value:  Size  Location     Type
 24558 ;;                  1  [STACK] void 
 24559 ;; Registers used:
 24560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24561 ;; Tracked objects:
 24562 ;;		On entry : 0/39
 24563 ;;		On exit  : 0/0
 24564 ;;		Unchanged: 0/0
 24565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24570 ;;Total ram usage:        0 bytes
 24571 ;; Hardware stack levels used:    1
 24572 ;; This function calls:
 24573 ;;		Nothing
 24574 ;; This function is called by:
 24575 ;;		_TMR6_Initialize
 24576 ;;		_TMR6_CallBack
 24577 ;; This function uses a reentrant model
 24578 ;;
 24579                           
 24580                           	psect	text134
 24581  017398                     __ptext134:
 24582                           	opt callstack 0
 24583  017398                     _TMR6_DefaultInterruptHandler:
 24584                           	opt callstack 0
 24585                           
 24586                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24587  017398  52E6               	movf	postinc1,f,c
 24588                           
 24589                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 24590                           ;stkvar	_i @ sp[(-1)+0]
 24591                           
 24592                           ;incstack = 0
 24593  01739A  0EFF               	movlw	-1
 24594  01739C  6AE3               	clrf	plusw1,c
 24595  01739E                     l8104:
 24596                           
 24597                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 24598                           ;stkvar	_i @ sp[(-1)+0]
 24599  01739E  0EFF               	movlw	-1
 24600  0173A0  50E3               	movf	plusw1,w,c
 24601  0173A2  0D02               	mullw	2
 24602  0173A4  50F3               	movf	243,w,c
 24603  0173A6  0F82               	addlw	low _tickCount
 24604  0173A8  6ED9               	movwf	fsr2l,c
 24605  0173AA  6ADA               	clrf	fsr2h,c
 24606  0173AC  50DE               	movf	postinc2,w,c
 24607  0173AE  10DE               	iorwf	postinc2,w,c
 24608  0173B0  B4D8               	btfsc	status,2,c
 24609  0173B2  D00A               	goto	l8108
 24610                           
 24611                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 24612                           ;stkvar	_i @ sp[(-1)+0]
 24613  0173B4  0EFF               	movlw	-1
 24614  0173B6  50E3               	movf	plusw1,w,c
 24615  0173B8  0D02               	mullw	2
 24616  0173BA  50F3               	movf	243,w,c
 24617  0173BC  0F82               	addlw	low _tickCount
 24618  0173BE  6ED9               	movwf	fsr2l,c
 24619  0173C0  6ADA               	clrf	fsr2h,c
 24620  0173C2  06DE               	decf	postinc2,f,c
 24621  0173C4  0E00               	movlw	0
 24622  0173C6  5ADD               	subwfb	postdec2,f,c
 24623  0173C8                     l8108:
 24624                           
 24625                           ;mcc_generated_files/tmr6.c: 207:  }
 24626                           ;stkvar	_i @ sp[(-1)+0]
 24627  0173C8  0EFF               	movlw	-1
 24628  0173CA  2AE3               	incf	plusw1,f,c
 24629                           
 24630                           ;stkvar	_i @ sp[(-1)+0]
 24631  0173CC  0EFF               	movlw	-1
 24632  0173CE  006F FF8C  F035    	movff	plusw1,btemp
 24633  0173D4  0E0B               	movlw	11
 24634  0173D6  6435               	cpfsgt	btemp^0,c
 24635  0173D8  D7E2               	goto	l8104
 24636                           
 24637                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24638  0173DA  52E5               	movf	postdec1,f,c
 24639  0173DC  0012               	return		;funcret
 24640  0173DE                     __end_of_TMR6_DefaultInterruptHandler:
 24641                           	opt callstack 0
 24642                           
 24643 ;; *************** function _DMA1_DMASCNT_ISR *****************
 24644 ;; Defined at:
 24645 ;;		line 126 in file "mcc_generated_files/dma1.c"
 24646 ;; Parameters:    Size  Location     Type
 24647 ;;		None
 24648 ;; Auto vars:     Size  Location     Type
 24649 ;;		None
 24650 ;; Return value:  Size  Location     Type
 24651 ;;                  1    wreg      void 
 24652 ;; Registers used:
 24653 ;;		None
 24654 ;; Tracked objects:
 24655 ;;		On entry : 0/0
 24656 ;;		On exit  : 3F/0
 24657 ;;		Unchanged: 0/0
 24658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24663 ;;Total ram usage:        0 bytes
 24664 ;; Hardware stack levels used:    1
 24665 ;; This function calls:
 24666 ;;		Nothing
 24667 ;; This function is called by:
 24668 ;;		Interrupt level 2
 24669 ;; This function uses a non-reentrant model
 24670 ;;
 24671                           
 24672                           	psect	text135
 24673  017CF0                     __ptext135:
 24674                           	opt callstack 0
 24675  017CF0                     _DMA1_DMASCNT_ISR:
 24676                           	opt callstack 14
 24677                           
 24678                           ;incstack = 0
 24679  017CF0  EE13  F356         	lfsr	1,___inthi_sp
 24680                           
 24681                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 24682  017CF4  0139               	movlb	57	; () banked
 24683  017CF6  91A2               	bcf	162,0,b	;volatile
 24684                           
 24685                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 24686  017CF8  0100               	movlb	0	; () banked
 24687  017CFA  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 24688                           
 24689                           ; BSR set to: 0
 24690  017CFC  0011               	retfie		f
 24691  017CFE                     __end_of_DMA1_DMASCNT_ISR:
 24692                           	opt callstack 0
 24693                           
 24694 ;; *************** function _DMA1_DMADCNT_ISR *****************
 24695 ;; Defined at:
 24696 ;;		line 134 in file "mcc_generated_files/dma1.c"
 24697 ;; Parameters:    Size  Location     Type
 24698 ;;		None
 24699 ;; Auto vars:     Size  Location     Type
 24700 ;;		None
 24701 ;; Return value:  Size  Location     Type
 24702 ;;                  1    wreg      void 
 24703 ;; Registers used:
 24704 ;;		None
 24705 ;; Tracked objects:
 24706 ;;		On entry : 0/0
 24707 ;;		On exit  : 3F/39
 24708 ;;		Unchanged: 0/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;Total ram usage:        0 bytes
 24715 ;; Hardware stack levels used:    1
 24716 ;; This function calls:
 24717 ;;		Nothing
 24718 ;; This function is called by:
 24719 ;;		Interrupt level 2
 24720 ;; This function uses a non-reentrant model
 24721 ;;
 24722                           
 24723                           	psect	text136
 24724  017D08                     __ptext136:
 24725                           	opt callstack 0
 24726  017D08                     _DMA1_DMADCNT_ISR:
 24727                           	opt callstack 14
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;incstack = 0
 24731  017D08  EE13  F356         	lfsr	1,___inthi_sp
 24732                           
 24733                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 24734  017D0C  0139               	movlb	57	; () banked
 24735  017D0E  93A2               	bcf	162,1,b	;volatile
 24736                           
 24737                           ; BSR set to: 57
 24738  017D10  0011               	retfie		f
 24739  017D12                     __end_of_DMA1_DMADCNT_ISR:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function _DMA1_DMAA_ISR *****************
 24743 ;; Defined at:
 24744 ;;		line 144 in file "mcc_generated_files/dma1.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1    wreg      void 
 24751 ;; Registers used:
 24752 ;;		None
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 3F/39
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		Interrupt level 2
 24768 ;; This function uses a non-reentrant model
 24769 ;;
 24770                           
 24771                           	psect	text137
 24772  017D14                     __ptext137:
 24773                           	opt callstack 0
 24774  017D14                     _DMA1_DMAA_ISR:
 24775                           	opt callstack 14
 24776                           
 24777                           ; BSR set to: 57
 24778                           ;incstack = 0
 24779  017D14  EE13  F356         	lfsr	1,___inthi_sp
 24780                           
 24781                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 24782  017D18  0139               	movlb	57	; () banked
 24783  017D1A  97A2               	bcf	162,3,b	;volatile
 24784                           
 24785                           ; BSR set to: 57
 24786  017D1C  0011               	retfie		f
 24787  017D1E                     __end_of_DMA1_DMAA_ISR:
 24788                           	opt callstack 0
 24789                           
 24790 ;; *************** function _DMA1_DMAOR_ISR *****************
 24791 ;; Defined at:
 24792 ;;		line 155 in file "mcc_generated_files/dma1.c"
 24793 ;; Parameters:    Size  Location     Type
 24794 ;;		None
 24795 ;; Auto vars:     Size  Location     Type
 24796 ;;		None
 24797 ;; Return value:  Size  Location     Type
 24798 ;;                  1    wreg      void 
 24799 ;; Registers used:
 24800 ;;		None
 24801 ;; Tracked objects:
 24802 ;;		On entry : 0/0
 24803 ;;		On exit  : 3F/39
 24804 ;;		Unchanged: 0/0
 24805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24810 ;;Total ram usage:        0 bytes
 24811 ;; Hardware stack levels used:    1
 24812 ;; This function calls:
 24813 ;;		Nothing
 24814 ;; This function is called by:
 24815 ;;		Interrupt level 2
 24816 ;; This function uses a non-reentrant model
 24817 ;;
 24818                           
 24819                           	psect	text138
 24820  017D20                     __ptext138:
 24821                           	opt callstack 0
 24822  017D20                     _DMA1_DMAOR_ISR:
 24823                           	opt callstack 14
 24824                           
 24825                           ; BSR set to: 57
 24826                           ;incstack = 0
 24827  017D20  EE13  F356         	lfsr	1,___inthi_sp
 24828                           
 24829                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 24830  017D24  0139               	movlb	57	; () banked
 24831  017D26  95A2               	bcf	162,2,b	;volatile
 24832                           
 24833                           ; BSR set to: 57
 24834  017D28  0011               	retfie		f
 24835  017D2A                     __end_of_DMA1_DMAOR_ISR:
 24836                           	opt callstack 0
 24837                           
 24838                           ;
 24839                           ; Interrupt Vector Table @ 0x8
 24840                           ;
 24841                           
 24842                           	psect	ivt0x8
 24843  000008                     __pivt0x8:
 24844                           	opt callstack 0
 24845  000008                     ivt0x8_base:
 24846                           	opt callstack 0
 24847                           
 24848                           ; Vector 0 : SWINT
 24849  000008  5F57               	dw	_Default_ISR shr (0+2)
 24850                           
 24851                           ; Vector 1 : HLVD
 24852  00000A  5F57               	dw	_Default_ISR shr (0+2)
 24853                           
 24854                           ; Vector 2 : OSF
 24855  00000C  5F57               	dw	_Default_ISR shr (0+2)
 24856                           
 24857                           ; Vector 3 : CSW
 24858  00000E  5F57               	dw	_Default_ISR shr (0+2)
 24859                           
 24860                           ; Vector 4 : NVM
 24861  000010  5F57               	dw	_Default_ISR shr (0+2)
 24862                           
 24863                           ; Vector 5 : SCAN
 24864  000012  5F57               	dw	_Default_ISR shr (0+2)
 24865                           
 24866                           ; Vector 6 : CRC
 24867  000014  5F57               	dw	_Default_ISR shr (0+2)
 24868                           
 24869                           ; Vector 7 : IOC
 24870  000016  5F57               	dw	_Default_ISR shr (0+2)
 24871                           
 24872                           ; Vector 8 : INT0
 24873  000018  5F34               	dw	_INT0_ISR shr (0+2)
 24874                           
 24875                           ; Vector 9 : ZCD
 24876  00001A  5F57               	dw	_Default_ISR shr (0+2)
 24877                           
 24878                           ; Vector 10 : AD
 24879  00001C  5D46               	dw	_ADCC_ISR shr (0+2)
 24880                           
 24881                           ; Vector 11 : ADT
 24882  00001E  5B8B               	dw	_ADCC_ThresholdISR shr (0+2)
 24883                           
 24884                           ; Vector 12 : CMP1
 24885  000020  5F57               	dw	_Default_ISR shr (0+2)
 24886                           
 24887                           ; Vector 13 : SMT1
 24888  000022  5F57               	dw	_Default_ISR shr (0+2)
 24889                           
 24890                           ; Vector 14 : SMT1PRA
 24891  000024  5F57               	dw	_Default_ISR shr (0+2)
 24892                           
 24893                           ; Vector 15 : SMT1PRW
 24894  000026  5F57               	dw	_Default_ISR shr (0+2)
 24895                           
 24896                           ; Vector 16 : DMA1SCNT
 24897  000028  5F3C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 24898                           
 24899                           ; Vector 17 : DMA1DCNT
 24900  00002A  5F42               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 24901                           
 24902                           ; Vector 18 : DMA1OR
 24903  00002C  5F48               	dw	_DMA1_DMAOR_ISR shr (0+2)
 24904                           
 24905                           ; Vector 19 : DMA1A
 24906  00002E  5F45               	dw	_DMA1_DMAA_ISR shr (0+2)
 24907                           
 24908                           ; Vector 20 : SPI1RX
 24909  000030  5F57               	dw	_Default_ISR shr (0+2)
 24910                           
 24911                           ; Vector 21 : SPI1TX
 24912  000032  5F57               	dw	_Default_ISR shr (0+2)
 24913                           
 24914                           ; Vector 22 : SPI1
 24915  000034  5F57               	dw	_Default_ISR shr (0+2)
 24916                           
 24917                           ; Vector 23 : I2C1RX
 24918  000036  5F57               	dw	_Default_ISR shr (0+2)
 24919                           
 24920                           ; Vector 24 : I2C1TX
 24921  000038  5F57               	dw	_Default_ISR shr (0+2)
 24922                           
 24923                           ; Vector 25 : I2C1
 24924  00003A  5F57               	dw	_Default_ISR shr (0+2)
 24925                           
 24926                           ; Vector 26 : I2C1E
 24927  00003C  5F57               	dw	_Default_ISR shr (0+2)
 24928                           
 24929                           ; Vector 27 : U1RX
 24930  00003E  5E65               	dw	_UART1_rx_vect_isr shr (0+2)
 24931                           
 24932                           ; Vector 28 : U1TX
 24933  000040  5E5B               	dw	_UART1_tx_vect_isr shr (0+2)
 24934                           
 24935                           ; Vector 29 : U1E
 24936  000042  5F57               	dw	_Default_ISR shr (0+2)
 24937                           
 24938                           ; Vector 30 : U1
 24939  000044  5F57               	dw	_Default_ISR shr (0+2)
 24940                           
 24941                           ; Vector 31 : TMR0
 24942  000046  5F57               	dw	_Default_ISR shr (0+2)
 24943                           
 24944                           ; Vector 32 : TMR1
 24945  000048  5F57               	dw	_Default_ISR shr (0+2)
 24946                           
 24947                           ; Vector 33 : TMR1G
 24948  00004A  5F57               	dw	_Default_ISR shr (0+2)
 24949                           
 24950                           ; Vector 34 : TMR2
 24951  00004C  5F57               	dw	_Default_ISR shr (0+2)
 24952                           
 24953                           ; Vector 35 : CCP1
 24954  00004E  5F57               	dw	_Default_ISR shr (0+2)
 24955                           
 24956                           ; Vector 36 : Undefined
 24957  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 24958                           
 24959                           ; Vector 37 : NCO1
 24960  000052  5F57               	dw	_Default_ISR shr (0+2)
 24961                           
 24962                           ; Vector 38 : CWG1
 24963  000054  5F57               	dw	_Default_ISR shr (0+2)
 24964                           
 24965                           ; Vector 39 : CLC1
 24966  000056  5F57               	dw	_Default_ISR shr (0+2)
 24967                           
 24968                           ; Vector 40 : INT1
 24969  000058  5F38               	dw	_INT1_ISR shr (0+2)
 24970                           
 24971                           ; Vector 41 : CMP2
 24972  00005A  5F57               	dw	_Default_ISR shr (0+2)
 24973                           
 24974                           ; Vector 42 : DMA2SCNT
 24975  00005C  5F57               	dw	_Default_ISR shr (0+2)
 24976                           
 24977                           ; Vector 43 : DMA2DCNT
 24978  00005E  5F57               	dw	_Default_ISR shr (0+2)
 24979                           
 24980                           ; Vector 44 : DMA2OR
 24981  000060  5F57               	dw	_Default_ISR shr (0+2)
 24982                           
 24983                           ; Vector 45 : DMA2A
 24984  000062  5F57               	dw	_Default_ISR shr (0+2)
 24985                           
 24986                           ; Vector 46 : I2C2RX
 24987  000064  5F57               	dw	_Default_ISR shr (0+2)
 24988                           
 24989                           ; Vector 47 : I2C2TX
 24990  000066  5F57               	dw	_Default_ISR shr (0+2)
 24991                           
 24992                           ; Vector 48 : I2C2
 24993  000068  5F57               	dw	_Default_ISR shr (0+2)
 24994                           
 24995                           ; Vector 49 : I2C2E
 24996  00006A  5F57               	dw	_Default_ISR shr (0+2)
 24997                           
 24998                           ; Vector 50 : U2RX
 24999  00006C  5E79               	dw	_UART2_rx_vect_isr shr (0+2)
 25000                           
 25001                           ; Vector 51 : U2TX
 25002  00006E  5E6F               	dw	_UART2_tx_vect_isr shr (0+2)
 25003                           
 25004                           ; Vector 52 : U2E
 25005  000070  5F57               	dw	_Default_ISR shr (0+2)
 25006                           
 25007                           ; Vector 53 : U2
 25008  000072  5F57               	dw	_Default_ISR shr (0+2)
 25009                           
 25010                           ; Vector 54 : TMR3
 25011  000074  5F57               	dw	_Default_ISR shr (0+2)
 25012                           
 25013                           ; Vector 55 : TMR3G
 25014  000076  5F57               	dw	_Default_ISR shr (0+2)
 25015                           
 25016                           ; Vector 56 : TMR4
 25017  000078  5F57               	dw	_Default_ISR shr (0+2)
 25018                           
 25019                           ; Vector 57 : CCP2
 25020  00007A  5F57               	dw	_Default_ISR shr (0+2)
 25021                           
 25022                           ; Vector 58 : Undefined
 25023  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25024                           
 25025                           ; Vector 59 : CWG2
 25026  00007E  5F57               	dw	_Default_ISR shr (0+2)
 25027                           
 25028                           ; Vector 60 : CLC2
 25029  000080  5F57               	dw	_Default_ISR shr (0+2)
 25030                           
 25031                           ; Vector 61 : INT2
 25032  000082  5F57               	dw	_Default_ISR shr (0+2)
 25033                           
 25034                           ; Vector 62 : Undefined
 25035  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25036                           
 25037                           ; Vector 63 : Undefined
 25038  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25039                           
 25040                           ; Vector 64 : Undefined
 25041  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25042                           
 25043                           ; Vector 65 : Undefined
 25044  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25045                           
 25046                           ; Vector 66 : Undefined
 25047  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25048                           
 25049                           ; Vector 67 : Undefined
 25050  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25051                           
 25052                           ; Vector 68 : Undefined
 25053  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25054                           
 25055                           ; Vector 69 : Undefined
 25056  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25057                           
 25058                           ; Vector 70 : TMR5
 25059  000094  5C21               	dw	_TMR5_ISR shr (0+2)
 25060                           
 25061                           ; Vector 71 : TMR5G
 25062  000096  5F57               	dw	_Default_ISR shr (0+2)
 25063                           
 25064                           ; Vector 72 : TMR6
 25065  000098  5EF6               	dw	_TMR6_ISR shr (0+2)
 25066                           
 25067                           ; Vector 73 : CCP3
 25068  00009A  5F57               	dw	_Default_ISR shr (0+2)
 25069                           
 25070                           ; Vector 74 : CWG3
 25071  00009C  5F57               	dw	_Default_ISR shr (0+2)
 25072                           
 25073                           ; Vector 75 : CLC3
 25074  00009E  5F57               	dw	_Default_ISR shr (0+2)
 25075                           
 25076                           ; Vector 76 : Undefined
 25077  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25078                           
 25079                           ; Vector 77 : Undefined
 25080  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25081                           
 25082                           ; Vector 78 : Undefined
 25083  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25084                           
 25085                           ; Vector 79 : Undefined
 25086  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25087                           
 25088                           ; Vector 80 : CCP4
 25089  0000A8  5F57               	dw	_Default_ISR shr (0+2)
 25090                           
 25091                           ; Vector 81 : CLC4
 25092  0000AA  5F57               	dw	_Default_ISR shr (0+2)
 25093  0000AC                     ivt0x8_undefint:
 25094                           	opt callstack 0
 25095  0000AC  00FF               	reset	
 25096                           
 25097                           	psect	text139
 25098  000000                     __ptext139:
 25099                           	opt callstack 0
 25100                           
 25101                           	psect	param0
 25102  0000                     
 25103                           	psect	temp
 25104  000035                     btemp:
 25105                           	opt callstack 0
 25106  000035                     	ds	32
 25107  0000                     wtemp0	set	btemp
 25108  0000                     wtemp1	set	btemp+2
 25109  0000                     wtemp2	set	btemp+4
 25110  0000                     wtemp3	set	btemp+6
 25111  0000                     wtemp4	set	btemp+8
 25112  0000                     wtemp5	set	btemp+10
 25113  0000                     wtemp8	set	btemp+1
 25114  0000                     ttemp0	set	btemp
 25115  0000                     ttemp1	set	btemp+3
 25116  0000                     ttemp2	set	btemp+6
 25117  0000                     ttemp3	set	btemp+9
 25118  0000                     ttemp5	set	btemp+1
 25119  0000                     ttemp6	set	btemp+4
 25120  0000                     ttemp7	set	btemp+8
 25121  0000                     ltemp0	set	btemp
 25122  0000                     ltemp1	set	btemp+4
 25123  0000                     ltemp2	set	btemp+8
 25124  0000                     lltemp0	set	btemp
 25125  0000                     lltemp1	set	btemp+8
 25126  0000                     lltemp2	set	btemp+16
 25127  0000                     lltemp3	set	btemp+24
 25128                           tosu	equ	0x3FFF
 25129                           tosh	equ	0x3FFE
 25130                           tosl	equ	0x3FFD
 25131                           stkptr	equ	0x3FFC
 25132                           pclatu	equ	0x3FFB
 25133                           pclath	equ	0x3FFA
 25134                           pcl	equ	0x3FF9
 25135                           tblptru	equ	0x3FF8
 25136                           tblptrh	equ	0x3FF7
 25137                           tblptrl	equ	0x3FF6
 25138                           tablat	equ	0x3FF5
 25139                           prodh	equ	0x3FF4
 25140                           prodl	equ	0x3FF3
 25141                           indf0	equ	0x3FEF
 25142                           postinc0	equ	0x3FEE
 25143                           postdec0	equ	0x3FED
 25144                           preinc0	equ	0x3FEC
 25145                           plusw0	equ	0x3FEB
 25146                           fsr0h	equ	0x3FEA
 25147                           fsr0l	equ	0x3FE9
 25148                           wreg	equ	0x3FE8
 25149                           indf1	equ	0x3FE7
 25150                           postinc1	equ	0x3FE6
 25151                           postdec1	equ	0x3FE5
 25152                           preinc1	equ	0x3FE4
 25153                           plusw1	equ	0x3FE3
 25154                           fsr1h	equ	0x3FE2
 25155                           fsr1l	equ	0x3FE1
 25156                           bsr	equ	0x3FE0
 25157                           indf2	equ	0x3FDF
 25158                           postinc2	equ	0x3FDE
 25159                           postdec2	equ	0x3FDD
 25160                           preinc2	equ	0x3FDC
 25161                           plusw2	equ	0x3FDB
 25162                           fsr2h	equ	0x3FDA
 25163                           fsr2l	equ	0x3FD9
 25164                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        212
    BSS         1319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     121
    BANK1           256      0     248
    BANK2           256      0     253
    BANK3           256      0     134
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4677_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  283193
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                    _conv_raw_result
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _conv_raw_result                                      2     0      2    2954
                            ___fldiv
                            ___flmul
                           ___xxtofl
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _conv_raw_result
     ___fldiv
     ___flmul
     ___xxtofl
     _get_raw_result
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      86      11       52.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      79       5       75.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     606      58        0.0%
DATA                 0      0     606       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov  4 03:52:39 2019

                    _SPI1_Exchange8bit 7AB8               __end_of_set_display_info 7B12  
                                    _C 0100                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 78CC  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 7D4A                            __CFG_LVP$ON 000000  
                                  l171 7C76                                    l701 7734  
                                  l581 7708                                    l835 7AC6  
                                  _GIE 01FE97                                    _abs 72C6  
                                  _pad 5FAC                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 7C0A                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7A52                     _UART1_Transmit_ISR 76E2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7A74  
                         __CFG_ZCD$OFF 000000                                   l1028 749E  
                                 l1240 37A6                                   l2211 5A16  
                                 l1326 70EA                                   l2207 6616  
                                 l1249 3952                                   l2218 5AEA  
                                 l2245 5988                                   l1542 74FC  
                                 l1462 6780                                   l1551 4FD6  
                                 l1481 7568                                   l1714 6008  
                                 l2530 32D8                                   l1466 6B30  
                                 l1555 5132                                   l1734 33C0  
                                 l1814 0B1A                                   l2606 5330  
                                 l1559 61CA                                   l1648 581A  
                                 l6010 2B78                                   l1770 123A  
                                 l2803 6CCA                                   l1923 1D78  
                                 l6020 2BD2                                   l6012 2B9E  
                                 l1852 461C                                   l2637 7306  
                                 l2485 2D5E                                   l2629 568E  
                                 l2566 25A2                                   l6030 2C22  
                 _ADCC_StartConversion 7C90                                   l1599 7B0E  
                                 l2729 5E8A                                   l2497 2BEE  
                                 l1873 3B64                                   l6034 2C2E  
                                 l6130 562C                                   l2668 4CDA  
                                 l6116 72F6                                   l6060 2CBA  
                                 l6044 2C56                                   l6028 2C10  
                                 l6140 5686                                   l6230 4852  
                                 l6310 2DBE                                   l6070 2CE6  
                                 l6134 5630                                   l2790 6D4E  
                                 l6214 6CBA                                   l1799 066A  
                                 l2775 54F8                                   l6320 2E14  
                                 l6048 2C5C                                   l6242 48EC  
                                 l6402 312E                                   l6330 2E9C  
                                 l6322 2E44                                   l6082 2D3E  
                                 l6074 2CFE                                   l6236 48A6  
                                 l6420 31A4                                   l6340 2EF2  
                                 l6316 2DFE                                   l6076 2D0E  
                                 l6172 3FF8                                   l6254 49BE  
                                 l6430 3218                                   l6406 3154  
                                 l6342 2F22                                   l6502 1F3E  
                                 l6158 6D3E                                   l8104 739E  
                                 l7320 4AAC                                   l6416 319E  
                                 l6336 2EDC                                   l6192 41AE  
                                 l6290 4E76                                   l6282 4DCA  
                                 l6274 4D42                                   l6450 32BC  
                                 l6442 3284                                   l6362 2FB4  
                                 l6354 2F9A                                   l6186 4116  
                                 l9010 057C                                   l8108 73C8  
                                 l7340 4BC6                                   l6700 5F92  
                                 l6436 3254                                   l6380 307A  
                                 l6372 3044                                   l6348 2F60  
                                 l6196 421C                                   l6188 4166  
                                 l9012 058E                                   l7334 4B4C  
                                 l7318 4A8A                                   l6382 308C  
                                 l6390 30E4                                   l6606 2550  
                                 l5910 2778                                   l9102 0C32  
                                 l9006 0554                                   l7344 4C2E  
                                 l7336 4B64                                   l7328 4B20  
                                 l6640 5B4E                                   l6448 32AC  
                                 l6712 65E0                                   l6608 256A  
                                 l6560 23B2                                   l6472 1E18  
                                 l5904 2732                                   l8232 51EC  
                                 l8224 5180                                   l8314 7704  
                                 l7354 4CCA                                   l7338 4B88  
                                 l6634 5B2E                                   l6730 5A64  
                                 l6554 2396                                   l6490 1EE6  
                                 l6474 1E1E                                   l6466 1DD8  
                                 l9202 119A                                   l9114 0CBA  
                                 l9122 0D24                                   l9130 0D90  
                                 l9026 05F6                                   l9018 0594  
                                 l7370 53C2                                   l8234 51FA  
                                 l6804 7228                                   l6628 5B18  
                                 l6396 3112                                   l6388 30E0  
                                 l6716 6614                                   l6708 659E  
                                 l6724 59D4                                   l6564 23D8  
                                 l6492 1EEC                                   l6484 1EA6  
                                 l6476 1E4E                                   l5916 279A  
                                 l5908 2748                                   l9044 06B8  
                                 l9028 0602                                   l7372 542E  
                                 l8244 525C                                   l8236 5210  
                                 l5846 68FC                                   l6662 5C28  
                                 l6654 5BF4                                   l6742 5AE8  
                                 l6734 5AB2                                   l6574 2422  
                                 l6494 1F1C                                   l6750 7256  
                                 l9150 0F3A                                   l9054 077A  
                                 l9222 459E                                   l9310 3D20  
                                 l8246 527A                                   l8238 522E  
                                 l8336 7730                                   l7640 7A26  
                                 l8184 7512                                   l5848 691E  
                                 l6592 24E2                                   l5960 296A  
                                 l5880 2642                                   l6760 5872  
                                 l9064 0926                                   l9048 06F0  
                                 l7720 7572                                   l8256 52AE  
                                 l8248 5290                                   l8362 7486  
                                 l6682 5EDE                                   l6674 5EB4  
                                 l6578 2428                                   l5962 297C  
                                 l5970 29B6                                   l5946 28D8  
                                 l5874 2602                                   l9138 0EA2  
                                 l9242 468E                                   l8266 5310  
                                 l6692 5F5E                                   l6588 249C  
                                 l5956 294A                                   l5892 26C0  
                                 l5884 2658                                   l9164 0FD6  
                                 l9260 47B0                                   l9252 4748  
                                 l9420 1830                                   l6678 5EC6  
                                 l6598 250C                                   l5990 2A64  
                                 l5966 2986                                   l5886 2688  
                                 l9166 0FF0                                   l9086 0B12  
                                 l9078 0A48                                   l9246 46BE  
                                 l9238 4652                                   l9334 3E90  
                                 l9318 3DA6                                   l8470 5746  
                                 l6784 5920                                   l6776 58F4  
                                 l9176 1092                                   l9088 0B34  
                                 l9256 4774                                   l9280 3B8E  
                                 l9432 191C                                   l9408 16F2  
                                 l9360 1376                                   l9520 439C  
                                 l8464 56AA                                   l8554 6A56  
                                 l8546 6A44                                   l8802 69C6  
                                 l5994 2A6E                                   l5898 26F2  
                                 l6786 5936                                   l6778 5910  
                                 l9186 10E2                                   l9274 3B54  
                                 l9514 42DE                                   l8458 569A  
                                 l8812 6000                                   l5988 2A52  
                                 l9452 1A7C                                   l9428 18E8  
                                 l9380 14E2                                   l9356 1326  
                                 l8476 57E2                                   l8484 57F4  
                                 l8822 6098                                   l8814 6012  
                                 l8902 36DC                                   l5998 2AA0  
                                 l9294 3C2A                                   l9286 3BCA  
                                 l9462 1B2A                                   l9382 14F8  
                                 l9358 1360                                   l9534 44B4  
                                 l9526 4406                                   l8808 5FD8  
                                 l8920 00AC                                   l9632 60E2  
                                 l8818 604E                                   l8834 6BE6  
                                 l8906 3718                                   l9482 1D00  
                                 l9378 14A8                                   l9546 67B2  
                                 l8836 6C12                                   l8860 33B0  
                                 l8828 640A                                   l8932 00F0  
                                 l8940 0146                                   l9476 1CA6  
                                 l9492 1D24                                   l9548 67F2  
                                 l8950 01EA                                   l9486 1D04  
                                 l9398 165C                                   l9830 3790  
                                 l8872 3418                                   l8952 0216  
                                 l9760 50CE                                   l8786 5DA0  
                                 l8882 362A                                   l8954 022C  
                                 l9906 3ADA                                   l9834 37AE  
                                 l8868 33FA                                   l9748 4FA6  
                                 l9836 37C0                                   l9828 3788  
                                 l8798 6988                                   l8990 0470  
                                 l8958 0258                                   l9598 6888  
                                 l9918 3B0E                                   STR_1 FF76  
                                 l8984 0396                                   l8968 02FC  
                                 l8976 032A                                   STR_2 FFA7  
                                 STR_3 FFF2                                   l8994 04D2  
                                 l9890 39F6                                   STR_4 FF65  
                                 STR_5 FF87                                   l8988 0406  
                                 l9876 3956                                   STR_6 FFA7  
                                 STR_7 FFF2                                   l9878 397E  
                                 STR_8 FF54                                   STR_9 FFB6  
                                 l9898 3A1A                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u4200 694C  
                                 u5010 76A8                                   _T2PR 003FAB  
                                 u5020 76AA                                   u5110 49F6  
                                 u4230 7678                                   u4207 693E  
                                 u5040 484C                                   u5200 4DF6  
                                 u4400 29CE                                   u4240 767A  
                                 u5130 4A48                                   u5060 48A2  
                                 u5220 4EAE                                   u4500 2BC0  
                                 u4340 28FE                                   u6020 593E  
                                 u4350 291E                                   u5071 48AC  
                                 u4351 2918                                   u5080 48E6  
                                 u5240 4F00                                   u5160 4D3C  
                                 u4600 2CAA                                   u6040 5968  
                                 u6050 7204                                   u5090 4918  
                                 _T6PR 003F93                                   u6060 7224  
                                 u5180 4D92                                   u5420 3196  
                                 u4540 2C34                                   u4460 2A96  
                                 _PMD0 0039C0                                   u4605 2C9A  
                                 _PMD1 0039C1                                   u5190 4DC4  
                                 u4630 2CCA                                   u4390 29AE  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4560 2C4E                                   u4368 2920  
                                 u4800 5680                                   _PMD4 0039C4  
                                 u4465 2A86                                   _PMD5 0039C5  
                                 u4730 72DA                                   _PMD6 0039C6  
                                 u4395 299E                                   _PMD7 0039C7  
                                 u7060 4B1C                                   u5460 31F2  
                                 u5380 310C                                   u5700 24F6  
                                 u4740 55B0                                   u5605 2350  
                                 u5470 322C                                   u4910 40BC  
                                 u4830 6CFC                                   u4670 7648  
                                 u7080 4C74                                   u5480 3268  
                                 u5640 241A                                   u4840 6CFE  
                                 u7160 54BA                                   u4680 764A  
                                 u5465 31E2                                   u4745 55A6  
                                 u7090 4C76                                   u5570 1F2C  
                                 u4930 4194                                   u9010 116E  
                                 u4915 40B2                                   u5820 5F0A  
                                 u4860 3F90                                   u9020 1170  
                                 u9100 46FA                                   u5750 5B7A  
                                 u4790 567E                                   u4870 3FDC  
                                 u4935 418A                                   u8240 5D94  
                                 u5840 5F7E                                   u5680 2476  
                                 u8320 6484                                   u4960 7416  
                                 u9200 3C78                                   u5585 20C0  
                                 u4785 5660                                   u4865 3F86  
                                 u8410 3396                                   u5770 5C14  
                                 u5690 24B0                                   u9130 47D6  
                                 u4970 7418                                   u5595 2188  
                                 u9107 46EC                                   u8260 5E10  
                                 u8500 36B2                                   u5940 7252  
                                 u4980 6C78                                   u9300 3E20  
                                 u9220 3CD6                                   u5685 2466  
                                 u8430 33E6                                   u5950 5852  
                                 u4990 6C7A                                   u9230 3CD8  
                                 u9150 3B3A                                   u4895 4016  
                                 u8327 6476                                   u7560 6EA2  
                                 u8440 363E                                   u8360 3312  
                                 u5880 6610                                   u5960 5866  
                                 u4896 401C                                   u9400 1540  
                                 u7545 7452                                   u4897 402A  
                                 u8370 3314                                   u5970 58A0  
                                 u8610 02A6                                   u9090 46B4  
                                 u9250 3DA2                                   u9410 1542  
                                 u8451 366E                                   u5955 5848  
                                 u8460 3684                                   u8620 02A8  
                                 u8540 00DA                                   u9260 3DC2  
                                 u9180 3C22                                   u9500 19D6  
                                 u9420 1568                                   u8461 3682  
                                 u8470 3698                                   u8390 3384  
                                 u9190 3C76                                   u9510 19D8  
                                 u9350 13BE                                   u7750 52A4  
                                 u5975 5896                                   u9271 3DF2  
                                 u9255 3D84                                   u8480 369C  
                                 u8720 05C6                                   u9280 3E08  
                                 u9360 13C0                                   u7585 6ED6  
                                 u9281 3E06                                   u7586 6ED8  
                                 u7578 6EA4                                   u8570 0194  
                                 u9290 3E1C                                   u9370 13E6  
                                 u9610 4528                                   u8660 050E  
                                 u8580 0196                                   u8830 0A18  
                                 u9550 1B7E                                   u9470 1746  
                                 u8760 0648                                   u9640 6868  
                                 u8930 0EE4                                   u8690 0562  
                                 u9730 511E                                   _PLLR 01CEE0  
                                 u9740 5120                                   u8990 10B8  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 7550                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01A8                                   _atoi 4A70  
                                 _ctoa 6BC8                                   _main 3762  
                                 _dtoa 32E2                                   _seed 00B5  
                                 _prec 0020                                   _nout 001C  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 4532  
                                 btemp 0035                                   _xtoa 3B20  
               __end_of_check_adc_scan 7D42                          ___fpclassifyf 5502  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0026  
            __end_of_SPI1_Exchange8bit 7AD6                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 7994                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0055                       __end_of_INT0_ISR 7CDE  
                     __end_of_INT1_ISR 7CEE         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 6788          __end_of_OSCILLATOR_Initialize 7C7C  
                                PRLOCK 0039EF                        __end_of___aodiv 4A70  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                      __end_of___fladd 2D68                                  _ADCLK 003EFF  
                      __end_of___aomod 4F24                                  _ADPCH 003EF1  
                      __end_of___fldiv 32E2                                  _ADREF 003EFD  
                      __end_of___awdiv 5C42                        __end_of___flneg 7280  
                                STR_10 FFB6                                  STR_11 FFFC  
                                STR_12 FFF9                                  STR_20 FF98  
                                STR_21 FF98                                  STR_22 FF98  
                                STR_14 FFC3                                  STR_15 FFD9  
                                STR_23 FF03                                  STR_40 FFF6  
                                STR_32 FFE2                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_33 FFEA  
                                STR_25 FF41                          __CFG_WDTE$OFF 000000  
                                STR_42 FFF6                                  STR_18 FFCF  
                                STR_26 FF1B                                  STR_19 FFCF  
                                STR_36 FFE6                        __end_of___awmod 5FAC  
                                STR_37 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 72C6  
                      __end_of___fltol 5992                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00D4                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 7D5C  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 796C                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 70E0                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 7BF2                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 5D70  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 7422  
                                _fputs 6978                        __end_of_isdigit 76B4  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 75BC                                  _width 001E  
                                _putch 7BA4                        __end_of_islower 7654  
                      __end_of_isspace 7238               _INT1_SetInterruptHandler 78CC  
                      __end_of_isupper 7684                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 787C  
          _UART1_SetRxInterruptHandler 7854                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 62D8                        __end_of_tolower 6D58  
                      __end_of_strncmp 5502                        __end_of_toupper 6CD4  
                  ??_UART1_tx_vect_isr 00D4              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 79BA               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 7352                  __end_of_ringBufS_init 77DC  
                      __initialization 6496                      _UART2_rx_vect_isr 79E4  
                         __end_of_atoi 4CE4                           __end_of_ctoa 6C50  
                         __end_of_main 3B20                           __end_of_dtoa 3762  
                         __end_of_stoa 47F0                           __end_of_xtoa 3EDA  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0055  
              __end_of_TMR2_Initialize 7C22               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 78A4                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 00D4              __end_of_UART1_tx_vect_isr 7992  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 773A  
                      _PWM8_Initialize 7C50                       _UART1_Initialize 6F5E  
                    _UART2_tx_vect_isr 79BC                     _UART2_Transmit_ISR 770E  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 6EFA  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 7422  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0055                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1045 70D2  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 _FVRCON 003EC1  
                     _mode_lamp_bright 7CC0                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 7A60  
         __size_of_eaDogM_WriteCommand 000E                                 u800_44 6A76  
                               u800_45 6A70                                 u368_48 7A82  
                               u802_40 6A92                                 u802_46 6A94  
                               _OSCFRQ 0039DF                                 u389_40 7B1A  
                               u389_46 7B1C                                 u762_20 7BC6  
                               u762_26 7BC8                                 u786_48 7AA4  
                               u789_28 7A3E                       __end_of___xxtofl 533A  
             __end_of_send_lcd_cmd_dma 71E6                    ??_UART2_tx_vect_isr 00D4  
            __end_of_UART2_rx_vect_isr 7A0A             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 7CFE                       _UART2_Initialize 7024  
                               _WaitMs 7550                        _conv_raw_result 5698  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___flge 5992                                 ___fleq 655C  
                    _ADCC_ThresholdISR 6E2C                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 6AA6                                 _efgtoa 0000  
                               _floorf 3EDA                     ?_ADCC_ThresholdISR 0055  
                               _memset 4246                   __size_of_help_button 0038  
                               clear_0 64E2                                 clear_1 64F6  
                               clear_2 6508                                 clear_3 6514  
                               clear_4 6520                                 clear_5 652C  
                               clear_6 6538                                 clear_7 6544  
                               _printf 6FC2                     _eaDogM_WriteString 6830  
                               _strcpy 63C2                              ?_ADCC_ISR 0055  
                               _strlen 68D6                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 6DC2                         _PMD_Initialize 7C7C  
            __end_of_UART2_tx_vect_isr 79E2                                 lltemp0 0035  
                               lltemp1 003D                                 lltemp2 0045  
                               lltemp3 004D                    ??_ADCC_ThresholdISR 0056  
               __end_of_start_adc_scan 6F5E                           __mediumconst FE72  
                               preinc2 003FDC                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 713A                       __end_of_vfprintf 6830  
                           _StartTimer 74A4          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 7398                      _SYSTEM_Initialize 730C  
                           __accesstop 0060                __end_of__initialization 6556  
                            ?_INT0_ISR 0055                              ?_INT1_ISR 0055  
                 __end_of_display_help 7D3A                   __end_of_display_info 7D32  
            __end_of_CLKREF_Initialize 7D08                          ___rparam_used 000000  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 7464  
                _set_temp_display_help 7CA2              __end_of_ADCC_ThresholdISR 6E94  
               __end_of_ringBufS_flush 6B38                         __pcstackCOMRAM 0055  
                           ___inthi_sp 0F56                             ___intlo_sp 17AB  
                         __pidataBANK0 7C22                           __pidataBANK2 6620  
                            ?_TMR5_ISR 0055                              ?_TMR6_ISR 0055  
                       ivt0x8_undefint 00AC                          __end_of_fputc 5E94  
                        __end_of_fputs 6A10                          __end_of_srand 75F0  
                __end_of_TMR5_CallBack 7A52                          __end_of_putch 7BBE  
              __end_of_PWM8_Initialize 7C66                __end_of_TMR6_Initialize 7764  
                    _adc_int_t_handler 6A10                 __end_of_PMD_Initialize 7C90  
                           ??_ADCC_ISR 0055                  __end_of_TMR6_CallBack 7AB8  
          __size_of_EXT_INT_Initialize 0034             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 7D14                         _clear_adc_scan 7D4A  
               __size_of_mode_lamp_dim 0018               _UART2_RxInterruptHandler 0013  
            __end_of_SYSTEM_Initialize 7352                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                             __pbssBANK0 0060  
                           __pbssBANK1 0100                             __pbssBANK2 02BD  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             __pbssBANK6 0600  
                           _check_help 4F24                __end_of_conv_raw_result 5820  
                _INT0_InterruptHandler 0019                             ??_INT0_ISR 0055  
                           ??_INT1_ISR 0055                      __end_of_TimerDone 7A2E  
                     _DMA1_DMADCNT_ISR 7D08             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 7B88  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 78A4  
              __end_of_ADCC_Initialize 6E2C                             ??_TMR5_ISR 00D5  
            __end_of_adc_int_t_handler 6AA6                             ??_TMR6_ISR 00D4  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7944  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 791C                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 7B30  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 7D50                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 7CF0                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 74A4  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 7BF2  
                              __Lparam 0000               __end_of_UART1_Initialize 6FC2  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 47F0  
                              ___fladd 25AC                                ___aomod 4CE4  
                              ___fldiv 2D68                                ___awdiv 5AF4  
                              ___flneg 7238                                ___awmod 5E94  
                              ___flmul 1D82                                ___flsub 7280  
                              ___fltol 5820              __end_of_UART1_Receive_ISR 7B4E  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 63C2                                __pcinit 6496  
             __end_of_mode_lamp_bright 7CCE                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 7CB2  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 3762                                __ptext1 6EFA  
                              __ptext2 7C90                                __ptext3 75BC  
                              __ptext4 62D8                                __ptext5 7764  
                              __ptext6 778C                                __ptext7 7AB8  
                              __ptext8 77B4                                __ptext9 7CB2  
                    _UART2_Receive_ISR 7B4E                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                                us514999 4A5A  
                _OSCILLATOR_Initialize 7C66                                us525999 4F12  
                         __size_of_abs 0046                           __size_of_pad 0114  
                              _isalpha 73DE                                _isdigit 7684  
                              us904999 4544                                us835999 32FC  
                              us917999 3BA0                                _mode_sw 0028  
                              _islower 7624                                _isspace 71E6  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 7082                                _isupper 7654  
           __size_of_SYSTEM_Initialize 0046                                _sprintf 61CE  
                              _tolower 6CD4                  __size_of_display_help 0008  
                __size_of_display_info 0008                                _strncmp 533A  
                              _toupper 6C50                   end_of_initialization 6556  
  __end_of_UART1_SetTxInterruptHandler 7854            _UART1_SetTxInterruptHandler 782C  
  __end_of_UART2_SetRxInterruptHandler 782C            _UART2_SetRxInterruptHandler 7804  
                    __end_of_set_vterm 7BA4                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 7D5C  
            __end_of_UART2_Receive_ISR 7B6C                         wdtdelay@dcount 00AE  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00D5  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 787C                           _display_help 7D32  
                _TMR5_InterruptHandler 00B2                           _display_info 7D2A  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 796C            _ADCC_SetADIInterruptHandler 7944  
                           _update_lcd 60C0                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 6D58  
                      _SPI1_Initialize 7C3A                  __end_of_get_vterm_ptr 76E2  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7586           __end_of_INTERRUPT_Initialize 6EFA  
                           _vterm_dump 5C42                         __end_of___flge 5AF4  
                       __end_of___fleq 6620   __end_of_INT0_DefaultInterruptHandler 7D64  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 7D62  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 713A  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 4246            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 00A6                         __end_of_memset 4532  
                       __end_of_printf 7024               __end_of_DMA1_DMADCNT_ISR 7D12  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 7A74  
                       __end_of_strcpy 6496                         __end_of_strlen 6978  
                  start_initialization 6496   __end_of_TMR5_DefaultInterruptHandler 7BD8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 7BBE  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 730C  
                __end_of_INT1_CallBack 7A96              __size_of_set_display_info 001E  
                          __end_of_pad 60C0                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 77B4          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 5698                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 0168               __end_of_DMA1_DMASCNT_ISR 7CFE  
                        _uart2TxBuffer 02BD                         _DMA1_DMAOR_ISR 7D20  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 7A0A  
                        _ringBufS_init 77B4                            __pdataBANK0 00BD  
                          __pdataBANK2 0200             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 7624                    __end_of_help_button 7518  
      __end_of_eaDogM_WriteStringAtPos 75BC                __end_of_DMA1_Initialize 6DC2  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 791C  
                        __pcstackBANK0 00D4               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 7C50  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03              __size_of_ringBufS_put_dma 00AA  
                         _init_display 62D8                 __end_of_DMA1_DMAOR_ISR 7D2A  
               __size_of_TMR5_CallBack 0024                  _TMR6_InterruptHandler 0001  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 7194  
               _PIN_MANAGER_Initialize 6B38                   __end_of_wait_lcd_set 7D56  
                        __pmediumconst FE72                              __ptext100 78CC  
                            __ptext101 78F4                              __ptext110 7A2E  
                            __ptext102 713A                              __ptext111 7BBE  
                            __ptext103 6D58                              __ptext120 6A10  
                            __ptext112 7CD0                              __ptext104 7CFE  
                            __ptext121 7D66                              __ptext113 7A52  
                            __ptext105 6DC2                              __ptext130 79E4  
                            __ptext122 7B12                              __ptext114 7D62  
                            __ptext106 791C                              __ptext131 7B4E  
                            __ptext123 6E2C                              __ptext115 7CE0  
                            __ptext107 7944                              __ptext132 7BD8  
                            __ptext124 796C                              __ptext116 7A74  
                            __ptext108 7084                              __ptext133 7A96  
                            __ptext125 76E2                              __ptext117 7D64  
                            __ptext109 7464                              __ptext134 7398  
                            __ptext126 7994                              __ptext118 7D5C  
                            __ptext135 7CF0                              __ptext127 7B30  
                            __ptext119 7518                              __ptext136 7D08  
                            __ptext128 79BC                              __ptext137 7D14  
                            __ptext129 770E                              __ptext138 7D20  
                            __ptext139 0000                     __end_of_StartTimer 74E0  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 7518                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                         __size_of_srand 0034  
                       __size_of_putch 001A                   _INTERRUPT_Initialize 6E94  
                             _T6CLKCON 003F96                        ?_DMA1_DMAOR_ISR 0055  
                             _INT0_ISR 7CD0                               _INT1_ISR 7CE0  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0082  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _PIR4bits 0039A4  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             i2u395_48 7534                               i2u395_49 7548  
                             i2u804_48 6E60                               i2u804_49 6E74  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
                             i2u980_48 79CE               __size_of_TMR5_Initialize 0046  
                             i2u982_48 79F6                               i2u976_48 797E  
                             i2u978_48 79A6                              _set_vterm 7B88  
                  __size_of_update_lcd 010E                            _help_button 74E0  
           __end_of_UART1_Transmit_ISR 770E                               _TMR5_ISR 7084  
                             _TMR6_ISR 7BD8                              _port_data 00C4  
                            _vfpfcnvrt 1244                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 7A2E                             _ADCON0bits 003EF8  
                   __end_of_check_help 5136                              _start_lcd 7D56  
              __size_of_FVR_Initialize 0008              __size_of_send_lcd_cmd_dma 0052  
                        _TMR6_CallBack 7A96                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                       _set_display_info 7AF4  
             __size_of_PWM8_Initialize 0016               __size_of_TMR6_Initialize 002A  
                          _INTCON0bits 003FD2                              copy_data0 64AA  
                            copy_data1 64CC               _INT0_SetInterruptHandler 78F4  
                  __size_of_vterm_dump 012E                 _uart1TxBufferRemaining 0032  
  __end_of_UART2_SetTxInterruptHandler 7804            _UART2_SetTxInterruptHandler 77DC  
                             __Hparam0 0000                           _uart1RxCount 002F  
                         _uart2RxCount 0029                               __Lparam0 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_check_adc_scan 0008                     __CFG_BOREN$SBORDIS 000000  
             __size_of_conv_raw_result 0188                          _wait_lcd_done 7B6C  
                         _send_lcd_cmd 778C                       __size_of___aodiv 0280  
                     __size_of___fladd 07BC                       __size_of___aomod 0240  
                      _adc_int_handler 7B12                       __size_of___fldiv 057A  
                     __size_of___awdiv 014E                       __size_of___flneg 0048  
                     __size_of___awmod 0118                       __size_of___flmul 082A  
                     __size_of___flsub 0046                       __size_of___fltol 0172  
                __end_of_DMA1_DMAA_ISR 7D1E                     ___fpclassifyf@F463 00AA  
 __size_of_UART1_SetRxInterruptHandler 0028                               ___xxtofl 5136  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 006A  
          __end_of_eaDogM_WriteCommand 7CC0                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00D5                               __ptext10 5698  
                             __ptext11 7AD6                               __ptext20 7586  
                             __ptext12 5136                               __ptext21 7194  
                             __ptext13 7D4A                               __ptext30 6788  
                             __ptext22 7B6C                               __ptext14 4F24  
                             __ptext31 1244                               __ptext23 70E0  
                             __ptext15 5C42                               __ptext40 7654  
                             __ptext32 3B20                               __ptext24 6830  
                             __ptext16 61CE                               __ptext41 63C2  
                             __ptext33 6C50                               __ptext25 7D50  
                             __ptext17 76B4                               __ptext50 655C  
                             __ptext42 3EDA                               __ptext34 7624  
                             __ptext26 7D56                               __ptext18 7550  
                             __ptext51 2D68                               __ptext43 5502  
                             __ptext35 73DE                               __ptext27 6AA6  
                             __ptext19 60C0                               __ptext60 68D6  
                             __ptext52 5E94                               __ptext44 5820  
                             __ptext36 533A                               __ptext28 4246  
                             __ptext61 6978                               __ptext53 5AF4  
                             __ptext45 7280                               __ptext37 4532  
                             __ptext29 6FC2                               __ptext70 7AF4  
                             __ptext62 5D70                               __ptext54 32E2  
                             __ptext46 25AC                               __ptext38 0000  
                             __ptext71 7BF2                               __ptext63 7BA4  
                             __ptext55 72C6                               __ptext47 7238  
                             __ptext39 6CD4                               __ptext80 730C  
                             __ptext72 7CC0                               __ptext64 66DE  
                             __ptext56 4CE4                               __ptext48 1D82  
                             __ptext81 7024                               __ptext73 7422  
                             __ptext65 4A70                               __ptext57 47F0  
                             __ptext49 5992                               __ptext90 78A4  
                             __ptext82 77DC                               __ptext74 74E0  
                             __ptext66 71E6                               __ptext58 6BC8  
                             __ptext91 7C0A                               __ptext83 7804  
                             __ptext75 7A0A                               __ptext67 7684  
                             __ptext59 5FAC                               __ptext92 7C3A  
                             __ptext84 6F5E                               __ptext76 74A4  
                             __ptext68 7B88                               __ptext93 7C50  
                             __ptext85 782C                               __ptext77 7D2A  
                             __ptext69 7CA2                               __ptext94 7C7C  
                             __ptext86 7854                               __ptext78 7D32  
                             __ptext95 6B38                               __ptext87 773A  
                             __ptext79 7D3A                               __ptext96 7C66  
                             __ptext88 787C                               __ptext97 6E94  
                             __ptext89 7352                               __ptext98 7D42  
                             __ptext99 75F0                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 66DE                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 03BE  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 03BA  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0055  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1166 00BD  
                   ??_DMA1_DMASCNT_ISR 00D5           __end_of_ADCC_StartConversion 7CA2  
                             _spi_link 009A                               _wdtdelay 70E0  
           __end_of_UART2_Transmit_ISR 773A                               _vfprintf 6788  
           __end_of_PWM8_LoadDutyValue 7464   __end_of_INT1_DefaultInterruptHandler 7D66  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 7D64  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 7AD6                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 7D50  
                   _EXT_INT_Initialize 75F0   __end_of_TMR6_DefaultInterruptHandler 73DE  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 7398  
 __end_of_ADCC_DefaultInterruptHandler 7D68  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 7D66                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7764  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 7CB2  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 68D6  
                __end_of_mode_lamp_dim 7C0A                __end_of_adc_int_handler 7B30  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 61CE                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 7D42                 __end_of_get_raw_result 7AF4  
                     _send_lcd_cmd_dma 7194                 __size_of___fpclassifyf 0196  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 78F4  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00D5  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 778C  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 7D62  
       __end_of_PIN_MANAGER_Initialize 6BC8              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 5D70                _eaDogM_WriteStringAtPos 7586  
                        _get_vterm_ptr 76B4                         _check_adc_scan 7D3A  
            __size_of_UART2_Initialize 005E  
