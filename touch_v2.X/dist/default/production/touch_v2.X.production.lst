

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan  2 01:35:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=4,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=4,class=CODE,delta=1
   180                           	psect	text159,global,reloc=4,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=4,class=CODE,delta=1
   185                           	psect	text164,global,reloc=4,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=4,class=CODE,delta=1
   195                           	psect	text174,global,reloc=4,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text177,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_main$3756	offset	0
   240 ;;_main$3752	offset	2
   241 ;;_esr_temp	offset	4
   242 ;;_i_esr	offset	8
   243 ;;_shape	offset	10
   244 ;;_k	offset	11
   245 ;;_j	offset	12
   246 ;;_i	offset	13
   247 ;;_inp_index	offset	14
   248 ;;_mode	offset	15
   249 ;;_i_ror	offset	16
   250 ;;_s	offset=-2 (param)
   251 ;;_c	offset	0
   252 ;;_shape	offset=-1 (param)
   253 ;;_reset	offset=-2 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;__this	offset=-2 (param)
   258 ;;_soc	offset	0
   259 ;;_slot	offset	4
   260 ;;_cvoltage	offset=-4 (param)
   261 ;;_h	offset=-1 (param)
   262 ;;_h	offset=-1 (param)
   263 ;;_i	offset=-1 (param)
   264 ;;_fsm	offset=-1 (param)
   265 ;;_channel	offset=-1 (param)
   266 ;;_mode	offset=-1 (param)
   267 ;;_mode	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_i	offset	0
   270 ;;_h	offset=-1 (param)
   271 ;;_flipper	offset=-1 (param)
   272 ;;_f	offset	0
   273 ;;_ap	offset	6
   274 ;;_s	offset=-3 (param)
   275 ;;_fmt	offset=-5 (param)
   276 ;;_line	offset=-1 (param)
   277 ;;_vterm	offset=-2 (param)
   278 ;;_numMilliseconds	offset=-2 (param)
   279 ;;_vterm	offset=-1 (param)
   280 ;;_r	offset=-1 (param)
   281 ;;_c	offset=-2 (param)
   282 ;;_strPtr	offset=-4 (param)
   283 ;;_strPtr	offset=-1 (param)
   284 ;;_delay	offset=-4 (param)
   285 ;;_strPtr	offset=-2 (param)
   286 ;;__this	offset=-2 (param)
   287 ;;_clearBuffer	offset=-3 (param)
   288 ;;_s	offset	0
   289 ;;_k	offset	2
   290 ;;_dest	offset=-2 (param)
   291 ;;_c	offset=-4 (param)
   292 ;;_n	offset=-6 (param)
   293 ;;_ap	offset	0
   294 ;;_fmt	offset=-3 (param)
   295 ;;_cfmt	offset	0
   296 ;;_fp	offset=-2 (param)
   297 ;;_fmt	offset=-4 (param)
   298 ;;_ap	offset=-6 (param)
   299 ;;_vfpfcnvrt$5553	offset	0
   300 ;;_vfpfcnvrt$5564	offset	2
   301 ;;_vfpfcnvrt$5552	offset	4
   302 ;;_llu	offset	6
   303 ;;_ll	offset	14
   304 ;;_f	offset	22
   305 ;;_ct	offset	26
   306 ;;_cp	offset	29
   307 ;;_c	offset	31
   308 ;;_fp	offset=-2 (param)
   309 ;;_fmt	offset=-4 (param)
   310 ;;_ap	offset=-6 (param)
   311 ;;_xtoa$5538	offset	0
   312 ;;_xtoa$5537	offset	2
   313 ;;_n	offset	4
   314 ;;_c	offset	12
   315 ;;_i	offset	14
   316 ;;_w	offset	16
   317 ;;_p	offset	18
   318 ;;_fp	offset=-2 (param)
   319 ;;_d	offset=-10 (param)
   320 ;;_x	offset=-11 (param)
   321 ;;_toupper$6344	offset	0
   322 ;;_c	offset=-2 (param)
   323 ;;_c	offset=-2 (param)
   324 ;;_c	offset=-2 (param)
   325 ;;_n	offset	0
   326 ;;_i	offset	8
   327 ;;_w	offset	10
   328 ;;_p	offset	12
   329 ;;_fp	offset=-2 (param)
   330 ;;_d	offset=-10 (param)
   331 ;;_counter	offset	0
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_quotient	offset	0
   335 ;;_counter	offset	8
   336 ;;_dividend	offset=-8 (param)
   337 ;;_divisor	offset=-16 (param)
   338 ;;_r	offset	0
   339 ;;_l	offset	2
   340 ;;__l	offset=-2 (param)
   341 ;;__r	offset=-4 (param)
   342 ;;_n	offset=-6 (param)
   343 ;;_nuls	offset	0
   344 ;;_l	offset	7
   345 ;;_p	offset	9
   346 ;;_cp	offset	11
   347 ;;_w	offset	13
   348 ;;_i	offset	15
   349 ;;_fp	offset=-2 (param)
   350 ;;_s	offset=-4 (param)
   351 ;;_efgtoa$5510	offset	0
   352 ;;_efgtoa$5509	offset	2
   353 ;;_efgtoa$5508	offset	4
   354 ;;_efgtoa$5504	offset	6
   355 ;;_efgtoa$5500	offset	8
   356 ;;_efgtoa$5499	offset	10
   357 ;;_u	offset	12
   358 ;;_g	offset	16
   359 ;;_l	offset	20
   360 ;;_h	offset	24
   361 ;;_ou	offset	28
   362 ;;_n	offset	32
   363 ;;_e	offset	34
   364 ;;_i	offset	36
   365 ;;_w	offset	38
   366 ;;_p	offset	40
   367 ;;_sign	offset	42
   368 ;;_d	offset	44
   369 ;;_ne	offset	46
   370 ;;_m	offset	48
   371 ;;_pp	offset	50
   372 ;;_t	offset	52
   373 ;;_mode	offset	54
   374 ;;_nmode	offset	55
   375 ;;_fp	offset=-2 (param)
   376 ;;_f	offset=-6 (param)
   377 ;;_c	offset=-7 (param)
   378 ;;_tolower$6329	offset	0
   379 ;;_c	offset=-2 (param)
   380 ;;_c	offset=-2 (param)
   381 ;;_d	offset	0
   382 ;;_s	offset	2
   383 ;;_dest	offset=-2 (param)
   384 ;;_src	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_m	offset	4
   387 ;;_e	offset	8
   388 ;;_x	offset=-4 (param)
   389 ;;_u	offset	0
   390 ;;_e	offset	4
   391 ;;_x	offset=-4 (param)
   392 ;;_exp1	offset	0
   393 ;;_sign1	offset	1
   394 ;;_f1	offset=-4 (param)
   395 ;;_f1	offset=-4 (param)
   396 ;;_ff1	offset=-4 (param)
   397 ;;_ff2	offset=-8 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	2
   404 ;;_counter	offset	3
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_dtoa$5476	offset	0
   408 ;;_n	offset	2
   409 ;;_i	offset	10
   410 ;;_s	offset	12
   411 ;;_w	offset	14
   412 ;;_p	offset	16
   413 ;;_fp	offset=-2 (param)
   414 ;;_d	offset=-10 (param)
   415 ;;_a	offset=-2 (param)
   416 ;;_sign	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_quotient	offset	0
   421 ;;_sign	offset	8
   422 ;;_counter	offset	9
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_w	offset	0
   426 ;;_fp	offset=-2 (param)
   427 ;;_c	offset=-3 (param)
   428 ;;_w	offset	0
   429 ;;_i	offset	2
   430 ;;_fp	offset=-2 (param)
   431 ;;_buf	offset=-4 (param)
   432 ;;_p	offset=-6 (param)
   433 ;;_a	offset	0
   434 ;;_s	offset=-2 (param)
   435 ;;_i	offset	0
   436 ;;_c	offset	2
   437 ;;_s	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-1 (param)
   442 ;;__this	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_atoi$6060	offset	0
   445 ;;_atoi$6058	offset	2
   446 ;;_atoi$6059	offset	4
   447 ;;_n	offset	5
   448 ;;_neg	offset	7
   449 ;;_s	offset=-2 (param)
   450 ;;_isspace$6109	offset	0
   451 ;;_c	offset=-2 (param)
   452 ;;_c	offset=-2 (param)
   453 ;;_vterm	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_new_response_info	offset=-1 (param)
   456 ;;_level	offset=-2 (param)
   457 ;;_dutyValue	offset=-2 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_timer	offset=-1 (param)
   460 ;;_count	offset=-3 (param)
   461 ;;_h	offset=-1 (param)
   462 ;;_u	offset	0
   463 ;;_x	offset=-4 (param)
   464 ;;_chan	offset=-1 (param)
   465 ;;_to_what	offset=-2 (param)
   466 ;;_u	offset	0
   467 ;;_s	offset=-2 (param)
   468 ;;_index	offset=-1 (param)
   469 ;;_arg	offset	0
   470 ;;_exp	offset	4
   471 ;;_sign	offset=-1 (param)
   472 ;;_val	offset=-5 (param)
   473 ;;_grs	offset	0
   474 ;;_rem	offset	4
   475 ;;_new_exp	offset	8
   476 ;;_aexp	offset	10
   477 ;;_bexp	offset	11
   478 ;;_sign	offset	12
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_ff1	offset=-4 (param)
   482 ;;_ff2	offset=-8 (param)
   483 ;;_lp_speed	offset	0
   484 ;;_new	offset=-4 (param)
   485 ;;_bn	offset=-5 (param)
   486 ;;_slow	offset=-6 (param)
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_grs	offset	0
   490 ;;_bexp	offset	1
   491 ;;_aexp	offset	2
   492 ;;_signs	offset	3
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_prod	offset	0
   496 ;;_grs	offset	4
   497 ;;_temp	offset	8
   498 ;;_bexp	offset	10
   499 ;;_aexp	offset	11
   500 ;;_sign	offset	12
   501 ;;_b	offset=-4 (param)
   502 ;;_a	offset=-8 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_state	offset	0
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_i	offset	0
   515 ;;_sw_value	offset	1
   516 ;;_timerVal	offset=-2 (param)
   517 ;;_light	offset	0
   518 ;;_mode	offset=-1 (param)
   519 ;;_chan	offset=-1 (param)
   520 ;;_to_what	offset=-2 (param)
   521 ;;_u	offset	0
   522 ;;_s	offset=-2 (param)
   523 ;;_index	offset=-1 (param)
   524 ;;_arg	offset	0
   525 ;;_exp	offset	4
   526 ;;_sign	offset=-1 (param)
   527 ;;_val	offset=-5 (param)
   528 ;;_b	offset=-4 (param)
   529 ;;_a	offset=-8 (param)
   530 ;;_grs	offset	0
   531 ;;_bexp	offset	1
   532 ;;_aexp	offset	2
   533 ;;_signs	offset	3
   534 ;;_b	offset=-4 (param)
   535 ;;_a	offset=-8 (param)
   536 ;;_prod	offset	0
   537 ;;_grs	offset	4
   538 ;;_temp	offset	8
   539 ;;_bexp	offset	10
   540 ;;_aexp	offset	11
   541 ;;_sign	offset	12
   542 ;;_b	offset=-4 (param)
   543 ;;_a	offset=-8 (param)
   544 ;;_grs	offset	0
   545 ;;_rem	offset	4
   546 ;;_new_exp	offset	8
   547 ;;_aexp	offset	10
   548 ;;_bexp	offset	11
   549 ;;_sign	offset	12
   550 ;;_b	offset=-4 (param)
   551 ;;_a	offset=-8 (param)
   552 ;;_ff1	offset=-4 (param)
   553 ;;_ff2	offset=-8 (param)
   554 ;;_timerVal	offset=-2 (param)
   555 ;;_adj	offset	0
   556 ;;_log_ptr	offset	4
   557 ;;_f	offset	0
   558 ;;_ap	offset	6
   559 ;;_s	offset=-3 (param)
   560 ;;_fmt	offset=-5 (param)
   561 ;;_cfmt	offset	0
   562 ;;_fp	offset=-2 (param)
   563 ;;_fmt	offset=-4 (param)
   564 ;;_ap	offset=-6 (param)
   565 ;;_vfpfcnvrt$5553	offset	0
   566 ;;_vfpfcnvrt$5564	offset	2
   567 ;;_vfpfcnvrt$5552	offset	4
   568 ;;_llu	offset	6
   569 ;;_ll	offset	14
   570 ;;_f	offset	22
   571 ;;_ct	offset	26
   572 ;;_cp	offset	29
   573 ;;_c	offset	31
   574 ;;_fp	offset=-2 (param)
   575 ;;_fmt	offset=-4 (param)
   576 ;;_ap	offset=-6 (param)
   577 ;;_xtoa$5538	offset	0
   578 ;;_xtoa$5537	offset	2
   579 ;;_n	offset	4
   580 ;;_c	offset	12
   581 ;;_i	offset	14
   582 ;;_w	offset	16
   583 ;;_p	offset	18
   584 ;;_fp	offset=-2 (param)
   585 ;;_d	offset=-10 (param)
   586 ;;_x	offset=-11 (param)
   587 ;;_toupper$6344	offset	0
   588 ;;_c	offset=-2 (param)
   589 ;;_c	offset=-2 (param)
   590 ;;_c	offset=-2 (param)
   591 ;;_n	offset	0
   592 ;;_i	offset	8
   593 ;;_w	offset	10
   594 ;;_p	offset	12
   595 ;;_fp	offset=-2 (param)
   596 ;;_d	offset=-10 (param)
   597 ;;_counter	offset	0
   598 ;;_dividend	offset=-8 (param)
   599 ;;_divisor	offset=-16 (param)
   600 ;;_quotient	offset	0
   601 ;;_counter	offset	8
   602 ;;_dividend	offset=-8 (param)
   603 ;;_divisor	offset=-16 (param)
   604 ;;_r	offset	0
   605 ;;_l	offset	2
   606 ;;__l	offset=-2 (param)
   607 ;;__r	offset=-4 (param)
   608 ;;_n	offset=-6 (param)
   609 ;;_nuls	offset	0
   610 ;;_l	offset	7
   611 ;;_p	offset	9
   612 ;;_cp	offset	11
   613 ;;_w	offset	13
   614 ;;_i	offset	15
   615 ;;_fp	offset=-2 (param)
   616 ;;_s	offset=-4 (param)
   617 ;;_efgtoa$5510	offset	0
   618 ;;_efgtoa$5509	offset	2
   619 ;;_efgtoa$5508	offset	4
   620 ;;_efgtoa$5504	offset	6
   621 ;;_efgtoa$5500	offset	8
   622 ;;_efgtoa$5499	offset	10
   623 ;;_u	offset	12
   624 ;;_g	offset	16
   625 ;;_l	offset	20
   626 ;;_h	offset	24
   627 ;;_ou	offset	28
   628 ;;_n	offset	32
   629 ;;_e	offset	34
   630 ;;_i	offset	36
   631 ;;_w	offset	38
   632 ;;_p	offset	40
   633 ;;_sign	offset	42
   634 ;;_d	offset	44
   635 ;;_ne	offset	46
   636 ;;_m	offset	48
   637 ;;_pp	offset	50
   638 ;;_t	offset	52
   639 ;;_mode	offset	54
   640 ;;_nmode	offset	55
   641 ;;_fp	offset=-2 (param)
   642 ;;_f	offset=-6 (param)
   643 ;;_c	offset=-7 (param)
   644 ;;_tolower$6329	offset	0
   645 ;;_c	offset=-2 (param)
   646 ;;_c	offset=-2 (param)
   647 ;;_d	offset	0
   648 ;;_s	offset	2
   649 ;;_dest	offset=-2 (param)
   650 ;;_src	offset=-4 (param)
   651 ;;_u	offset	0
   652 ;;_m	offset	4
   653 ;;_e	offset	8
   654 ;;_x	offset=-4 (param)
   655 ;;_u	offset	0
   656 ;;_e	offset	4
   657 ;;_x	offset=-4 (param)
   658 ;;_exp1	offset	0
   659 ;;_sign1	offset	1
   660 ;;_f1	offset=-4 (param)
   661 ;;_f1	offset=-4 (param)
   662 ;;_ff1	offset=-4 (param)
   663 ;;_ff2	offset=-8 (param)
   664 ;;_sign	offset	0
   665 ;;_counter	offset	1
   666 ;;_dividend	offset=-2 (param)
   667 ;;_divisor	offset=-4 (param)
   668 ;;_quotient	offset	0
   669 ;;_sign	offset	2
   670 ;;_counter	offset	3
   671 ;;_dividend	offset=-2 (param)
   672 ;;_divisor	offset=-4 (param)
   673 ;;_dtoa$5476	offset	0
   674 ;;_n	offset	2
   675 ;;_i	offset	10
   676 ;;_s	offset	12
   677 ;;_w	offset	14
   678 ;;_p	offset	16
   679 ;;_fp	offset=-2 (param)
   680 ;;_d	offset=-10 (param)
   681 ;;_a	offset=-2 (param)
   682 ;;_sign	offset	0
   683 ;;_counter	offset	1
   684 ;;_dividend	offset=-8 (param)
   685 ;;_divisor	offset=-16 (param)
   686 ;;_quotient	offset	0
   687 ;;_sign	offset	8
   688 ;;_counter	offset	9
   689 ;;_dividend	offset=-8 (param)
   690 ;;_divisor	offset=-16 (param)
   691 ;;_w	offset	0
   692 ;;_fp	offset=-2 (param)
   693 ;;_c	offset=-3 (param)
   694 ;;_w	offset	0
   695 ;;_i	offset	2
   696 ;;_fp	offset=-2 (param)
   697 ;;_buf	offset=-4 (param)
   698 ;;_p	offset=-6 (param)
   699 ;;_a	offset	0
   700 ;;_s	offset=-2 (param)
   701 ;;_i	offset	0
   702 ;;_c	offset	2
   703 ;;_s	offset=-2 (param)
   704 ;;_fp	offset=-4 (param)
   705 ;;_c	offset=-2 (param)
   706 ;;_fp	offset=-4 (param)
   707 ;;_c	offset=-1 (param)
   708 ;;__this	offset=-2 (param)
   709 ;;_c	offset=-3 (param)
   710 ;;_atoi$6060	offset	0
   711 ;;_atoi$6058	offset	2
   712 ;;_atoi$6059	offset	4
   713 ;;_n	offset	5
   714 ;;_neg	offset	7
   715 ;;_s	offset=-2 (param)
   716 ;;_isspace$6109	offset	0
   717 ;;_c	offset=-2 (param)
   718 ;;_c	offset=-2 (param)
   719 ;;_dsize	offset=-2 (param)
   720 ;;_u	offset	0
   721 ;;_x	offset=-4 (param)
   722 ;;_f1p	offset=-2 (param)
   723 ;;_f2	offset=-6 (param)
   724 ;;_timer	offset=-1 (param)
   725 ;;_count	offset=-3 (param)
   726 ;;_channel	offset=-1 (param)
   727 ;;_i	offset	0
   728                           
   729                           	psect	idataBIGRAM
   730  016B00                     __pidataBIGRAM:
   731                           	opt callstack 0
   732                           
   733                           ;initializer for _port_data
   734  016B00  FF                 	db	255
   735  016B01  00                 	db	0
   736  016B02  FF                 	db	255
   737  016B03  00                 	db	0
   738  016B04  FF                 	db	255
   739  016B05  00                 	db	0
   740  016B06  FF                 	db	255
   741  016B07  00                 	db	0
   742  016B08  FF                 	db	255
   743  016B09  00                 	db	0
   744  016B0A  FF                 	db	255
   745  016B0B  00                 	db	0
   746  016B0C  FF                 	db	255
   747  016B0D  00                 	db	0
   748  016B0E  FF                 	db	255
   749  016B0F  00                 	db	0
   750  016B10  00                 	db	0
   751  016B11  00                 	db	0
   752  016B12  00                 	db	0
   753  016B13  00                 	db	0
   754  016B14  00                 	db	0
   755  016B15  00                 	db	0
   756  016B16  00                 	db	0
   757  016B17  00                 	db	0
   758  016B18  00                 	db	0
   759  016B19  00                 	db	0
   760  016B1A  00                 	db	0
   761  016B1B  00                 	db	0
   762  016B1C  00                 	db	0
   763  016B1D  00                 	db	0
   764  016B1E  00                 	db	0
   765  016B1F  00                 	db	0
   766  016B20  00                 	db	0
   767  016B21  00                 	db	0
   768  016B22  00                 	db	0
   769  016B23  00                 	db	0
   770  016B24  00                 	db	0
   771  016B25  00                 	db	0
   772  016B26  00                 	db	0
   773  016B27  00                 	db	0
   774  016B28  00                 	db	0
   775  016B29  00                 	db	0
   776  016B2A  00                 	db	0
   777  016B2B  00                 	db	0
   778  016B2C  00                 	db	0
   779  016B2D  00                 	db	0
   780  016B2E  00                 	db	0
   781  016B2F  00                 	db	0
   782  016B30  00                 	db	0
   783  016B31  00                 	db	0
   784  016B32  00                 	db	0
   785  016B33  00                 	db	0
   786  016B34  00                 	db	0
   787  016B35  00                 	db	0
   788  016B36  00                 	db	0
   789  016B37  00                 	db	0
   790  016B38  00                 	db	0
   791  016B39  00                 	db	0
   792  016B3A  00                 	db	0
   793  016B3B  00                 	db	0
   794  016B3C  00                 	db	0
   795  016B3D  00                 	db	0
   796  016B3E  00                 	db	0
   797  016B3F  00                 	db	0
   798  016B40  00                 	db	0
   799  016B41  00                 	db	0
   800  016B42  00                 	db	0
   801  016B43  00                 	db	0
   802  016B44  00                 	db	0
   803  016B45  00                 	db	0
   804  016B46  00                 	db	0
   805  016B47  00                 	db	0
   806  016B48  00                 	db	0
   807  016B49  00                 	db	0
   808  016B4A  00                 	db	0
   809  016B4B  00                 	db	0
   810  016B4C  00                 	db	0
   811  016B4D  00                 	db	0
   812  016B4E  00                 	db	0
   813  016B4F  00                 	db	0
   814  016B50  00                 	db	0
   815  016B51  00                 	db	0
   816  016B52  00                 	db	0
   817  016B53  00                 	db	0
   818  016B54  00                 	db	0
   819  016B55  00                 	db	0
   820  016B56  00                 	db	0
   821  016B57  00                 	db	0
   822  016B58  00                 	db	0
   823  016B59  00                 	db	0
   824  016B5A  00                 	db	0
   825  016B5B  00                 	db	0
   826  016B5C  00                 	db	0
   827  016B5D  00                 	db	0
   828  016B5E  00                 	db	0
   829  016B5F  00                 	db	0
   830  016B60  00                 	db	0
   831  016B61  00                 	db	0
   832  016B62  00                 	db	0
   833  016B63  00                 	db	0
   834  016B64  00                 	db	0
   835  016B65  00                 	db	0
   836  016B66  00                 	db	0
   837  016B67  00                 	db	0
   838  016B68  00                 	db	0
   839  016B69  00                 	db	0
   840  016B6A  00                 	db	0
   841  016B6B  00                 	db	0
   842  016B6C  00                 	db	0
   843  016B6D  00                 	db	0
   844  016B6E  00                 	db	0
   845  016B6F  00                 	db	0
   846  016B70  00                 	db	0
   847  016B71  00                 	db	0
   848  016B72  00                 	db	0
   849  016B73  00                 	db	0
   850  016B74  00                 	db	0
   851  016B75  00                 	db	0
   852  016B76  00                 	db	0
   853  016B77  00                 	db	0
   854  016B78  00                 	db	0
   855  016B79  00                 	db	0
   856  016B7A  00                 	db	0
   857  016B7B  00                 	db	0
   858  016B7C  00                 	db	0
   859  016B7D  00                 	db	0
   860  016B7E  00                 	db	0
   861  016B7F  00                 	db	0
   862  016B80  00                 	db	0
   863  016B81  00                 	db	0
   864  016B82  00                 	db	0
   865  016B83  00                 	db	0
   866  016B84  00                 	db	0
   867  016B85  00                 	db	0
   868  016B86  00                 	db	0
   869  016B87  00                 	db	0
   870  016B88  00                 	db	0
   871  016B89  00                 	db	0
   872  016B8A  00                 	db	0
   873  016B8B  00                 	db	0
   874  016B8C  00                 	db	0
   875  016B8D  00                 	db	0
   876  016B8E  00                 	db	0
   877  016B8F  00                 	db	0
   878  016B90  00                 	db	0
   879  016B91  00                 	db	0
   880  016B92  00                 	db	0
   881  016B93  00                 	db	0
   882  016B94  00                 	db	0
   883  016B95  00                 	db	0
   884  016B96  00                 	db	0
   885  016B97  00                 	db	0
   886  016B98  00                 	db	0
   887  016B99  00                 	db	0
   888  016B9A  00                 	db	0
   889  016B9B  00                 	db	0
   890  016B9C  00                 	db	0
   891  016B9D  00                 	db	0
   892  016B9E  00                 	db	0
   893  016B9F  00                 	db	0
   894  016BA0  00                 	db	0
   895  016BA1  00                 	db	0
   896  016BA2  00                 	db	0
   897  016BA3  00                 	db	0
   898  016BA4  00                 	db	0
   899  016BA5  00                 	db	0
   900  016BA6  00                 	db	0
   901  016BA7  00                 	db	0
   902  016BA8  00                 	db	0
   903  016BA9  00                 	db	0
   904  016BAA  00                 	db	0
   905  016BAB  00                 	db	0
   906  016BAC  00                 	db	0
   907  016BAD  00                 	db	0
   908  016BAE  00                 	db	0
   909  016BAF  00                 	db	0
   910  016BB0  00                 	db	0
   911  016BB1  00                 	db	0
   912  016BB2  00                 	db	0
   913  016BB3  00                 	db	0
   914  016BB4  00                 	db	0
   915  016BB5  00                 	db	0
   916  016BB6  00                 	db	0
   917  016BB7  00                 	db	0
   918  016BB8  00                 	db	0
   919  016BB9  00                 	db	0
   920  016BBA  00                 	db	0
   921  016BBB  00                 	db	0
   922  016BBC  00                 	db	0
   923  016BBD  00                 	db	0
   924  016BBE  00                 	db	0
   925  016BBF  00                 	db	0
   926  016BC0  00                 	db	0
   927  016BC1  00                 	db	0
   928  016BC2  00                 	db	0
   929  016BC3  00                 	db	0
   930  016BC4  00                 	db	0
   931  016BC5  00                 	db	0
   932  016BC6  00                 	db	0
   933  016BC7  00                 	db	0
   934  016BC8  00                 	db	0
   935  016BC9  00                 	db	0
   936  016BCA  00                 	db	0
   937  016BCB  00                 	db	0
   938  016BCC  00                 	db	0
   939  016BCD  00                 	db	0
   940  016BCE  00                 	db	0
   941  016BCF  00                 	db	0
   942  016BD0  00                 	db	0
   943  016BD1  00                 	db	0
   944  016BD2  00                 	db	0
   945  016BD3  00                 	db	0
   946  016BD4  00                 	db	0
   947  016BD5  00                 	db	0
   948  016BD6  00                 	db	0
   949  016BD7  00                 	db	0
   950  016BD8  00                 	db	0
   951  016BD9  00                 	db	0
   952  016BDA  00                 	db	0
   953  016BDB  00                 	db	0
   954  016BDC  00                 	db	0
   955  016BDD  00                 	db	0
   956  016BDE  00                 	db	0
   957  016BDF  00                 	db	0
   958  016BE0  00                 	db	0
   959  016BE1  00                 	db	0
   960  016BE2  00                 	db	0
   961  016BE3  00                 	db	0
   962  016BE4  00                 	db	0
   963  016BE5  00                 	db	0
   964  016BE6  00                 	db	0
   965  016BE7  00                 	db	0
   966  016BE8  00                 	db	0
   967  016BE9  00                 	db	0
   968  016BEA  00                 	db	0
   969  016BEB  00                 	db	0
   970  016BEC  00                 	db	0
   971  016BED  00                 	db	0
   972  016BEE  00                 	db	0
   973  016BEF  00                 	db	0
   974  016BF0  00                 	db	0
   975  016BF1  00                 	db	0
   976  016BF2  00                 	db	0
   977  016BF3  00                 	db	0
   978  016BF4  00                 	db	0
   979  016BF5  00                 	db	0
   980  016BF6  00                 	db	0
   981  016BF7  00                 	db	0
   982  016BF8  00                 	db	0
   983  016BF9  00                 	db	0
   984  016BFA  00                 	db	0
   985  016BFB  00                 	db	0
   986  016BFC  00                 	db	0
   987  016BFD  00                 	db	0
   988  016BFE  00                 	db	0
   989  016BFF  00                 	db	0
   990  016C00  00                 	db	0
   991  016C01  00                 	db	0
   992  016C02  00                 	db	0
   993  016C03  00                 	db	0
   994  016C04  00                 	db	0
   995  016C05  00                 	db	0
   996  016C06  00                 	db	0
   997  016C07  00                 	db	0
   998  016C08  00                 	db	0
   999  016C09  00                 	db	0
  1000  016C0A  00                 	db	0
  1001  016C0B  00                 	db	0
  1002  016C0C  00                 	db	0
  1003  016C0D  00                 	db	0
  1004  016C0E  00                 	db	0
  1005  016C0F  00                 	db	0
  1006  016C10  00                 	db	0
  1007  016C11  00                 	db	0
  1008  016C12  00                 	db	0
  1009  016C13  00                 	db	0
  1010  016C14  00                 	db	0
  1011  016C15  00                 	db	0
  1012  016C16  00                 	db	0
  1013  016C17  00                 	db	0
  1014  016C18  00                 	db	0
  1015  016C19  00                 	db	0
  1016  016C1A  00                 	db	0
  1017  016C1B  00                 	db	0
  1018  016C1C  00                 	db	0
  1019  016C1D  00                 	db	0
  1020  016C1E  00                 	db	0
  1021  016C1F  00                 	db	0
  1022  016C20  00                 	db	0
  1023  016C21  00                 	db	0
  1024  016C22  00                 	db	0
  1025  016C23  00                 	db	0
  1026  016C24  00                 	db	0
  1027  016C25  00                 	db	0
  1028  016C26  00                 	db	0
  1029  016C27  00                 	db	0
  1030  016C28  00                 	db	0
  1031  016C29  00                 	db	0
  1032  016C2A  00                 	db	0
  1033  016C2B  00                 	db	0
  1034  016C2C  00                 	db	0
  1035  016C2D  00                 	db	0
  1036  016C2E  00                 	db	0
  1037  016C2F  00                 	db	0
  1038  016C30  00                 	db	0
  1039  016C31  00                 	db	0
  1040  016C32  00                 	db	0
  1041  016C33  00                 	db	0
  1042  016C34  00                 	db	0
  1043  016C35  00                 	db	0
  1044  016C36  00                 	db	0
  1045  016C37  00                 	db	0
  1046  016C38  00                 	db	0
  1047  016C39  00                 	db	0
  1048  016C3A  00                 	db	0
  1049  016C3B  00                 	db	0
  1050  016C3C  00                 	db	0
  1051  016C3D  00                 	db	0
  1052  016C3E  00                 	db	0
  1053  016C3F  00                 	db	0
  1054  016C40  00                 	db	0
  1055  016C41  00                 	db	0
  1056  016C42  00                 	db	0
  1057  016C43  00                 	db	0
  1058  016C44  00                 	db	0
  1059  016C45  00                 	db	0
  1060  016C46  00                 	db	0
  1061  016C47  00                 	db	0
  1062  016C48  00                 	db	0
  1063  016C49  00                 	db	0
  1064  016C4A  00                 	db	0
  1065  016C4B  00                 	db	0
  1066  016C4C  00                 	db	0
  1067  016C4D  00                 	db	0
  1068  016C4E  00                 	db	0
  1069  016C4F  00                 	db	0
  1070  016C50  00                 	db	0
  1071  016C51  00                 	db	0
  1072  016C52  00                 	db	0
  1073  016C53  00                 	db	0
  1074  016C54  00                 	db	0
  1075  016C55  00                 	db	0
  1076  016C56  00                 	db	0
  1077  016C57  00                 	db	0
  1078  016C58  00                 	db	0
  1079  016C59  00                 	db	0
  1080  016C5A  00                 	db	0
  1081  016C5B  00                 	db	0
  1082  016C5C  00                 	db	0
  1083  016C5D  00                 	db	0
  1084  016C5E  00                 	db	0
  1085  016C5F  00                 	db	0
  1086  016C60  00                 	db	0
  1087  016C61  00                 	db	0
  1088  016C62  00                 	db	0
  1089  016C63  00                 	db	0
  1090  016C64  00                 	db	0
  1091  016C65  00                 	db	0
  1092  016C66  00                 	db	0
  1093  016C67  00                 	db	0
  1094  016C68  00                 	db	0
  1095  016C69  00                 	db	0
  1096  016C6A  00                 	db	0
  1097  016C6B  00                 	db	0
  1098  016C6C  00                 	db	0
  1099  016C6D  00                 	db	0
  1100  016C6E  00                 	db	0
  1101  016C6F  00                 	db	0
  1102  016C70  00                 	db	0
  1103  016C71  00                 	db	0
  1104  016C72  00                 	db	0
  1105  016C73  00                 	db	0
  1106  016C74  00                 	db	0
  1107  016C75  00                 	db	0
  1108  016C76  00                 	db	0
  1109  016C77  00                 	db	0
  1110  016C78  00                 	db	0
  1111  016C79  00                 	db	0
  1112  016C7A  00                 	db	0
  1113  016C7B  00                 	db	0
  1114  016C7C  00                 	db	0
  1115  016C7D  00                 	db	0
  1116  016C7E  00                 	db	0
  1117  016C7F  00                 	db	0
  1118  016C80  00                 	db	0
  1119  016C81  00                 	db	0
  1120  016C82  00                 	db	0
  1121  016C83  00                 	db	0
  1122  016C84  00                 	db	0
  1123  016C85  00                 	db	0
  1124  016C86  00                 	db	0
  1125  016C87  00                 	db	0
  1126  016C88  00                 	db	0
  1127  016C89  00                 	db	0
  1128  016C8A  00                 	db	0
  1129  016C8B  00                 	db	0
  1130  016C8C  00                 	db	0
  1131  016C8D  00                 	db	0
  1132  016C8E  00                 	db	0
  1133  016C8F  00                 	db	0
  1134  016C90  00                 	db	0
  1135  016C91  00                 	db	0
  1136  016C92  00                 	db	0
  1137  016C93  00                 	db	0
  1138  016C94  00                 	db	0
  1139  016C95  00                 	db	0
  1140  016C96  00                 	db	0
  1141  016C97  00                 	db	0
  1142  016C98  00                 	db	0
  1143  016C99  00                 	db	0
  1144  016C9A  00                 	db	0
  1145  016C9B  00                 	db	0
  1146  016C9C  00                 	db	0
  1147  016C9D  00                 	db	0
  1148  016C9E  00                 	db	0
  1149  016C9F  00                 	db	0
  1150  016CA0  00                 	db	0
  1151  016CA1  00                 	db	0
  1152  016CA2  00                 	db	0
  1153  016CA3  00                 	db	0
  1154  016CA4  00                 	db	0
  1155  016CA5  00                 	db	0
  1156  016CA6  00                 	db	0
  1157  016CA7  00                 	db	0
  1158  016CA8  00                 	db	0
  1159  016CA9  00                 	db	0
  1160  016CAA  00                 	db	0
  1161  016CAB  00                 	db	0
  1162  016CAC  00                 	db	0
  1163  016CAD  00                 	db	0
  1164  016CAE  00                 	db	0
  1165  016CAF  00                 	db	0
  1166  016CB0  00                 	db	0
  1167  016CB1  00                 	db	0
  1168  016CB2  00                 	db	0
  1169  016CB3  00                 	db	0
  1170  016CB4  00                 	db	0
  1171  016CB5  00                 	db	0
  1172  016CB6  00                 	db	0
  1173  016CB7  00                 	db	0
  1174  016CB8  00                 	db	0
  1175  016CB9  00                 	db	0
  1176  016CBA  00                 	db	0
  1177  016CBB  00                 	db	0
  1178  016CBC  00                 	db	0
  1179  016CBD  00                 	db	0
  1180  016CBE  00                 	db	0
  1181  016CBF  00                 	db	0
  1182  016CC0  00                 	db	0
  1183  016CC1  00                 	db	0
  1184  016CC2  00                 	db	0
  1185  016CC3  00                 	db	0
  1186  016CC4  00                 	db	0
  1187  016CC5  00                 	db	0
  1188  016CC6  00                 	db	0
  1189  016CC7  00                 	db	0
  1190  016CC8  00                 	db	0
  1191  016CC9  00                 	db	0
  1192  016CCA  00                 	db	0
  1193  016CCB  00                 	db	0
  1194  016CCC  00                 	db	0
  1195  016CCD  00                 	db	0
  1196  016CCE  00                 	db	0
  1197  016CCF  00                 	db	0
  1198  016CD0  00                 	db	0
  1199  016CD1  00                 	db	0
  1200  016CD2  00                 	db	0
  1201  016CD3  00                 	db	0
  1202  016CD4  00                 	db	0
  1203  016CD5  00                 	db	0
  1204  016CD6  00                 	db	0
  1205  016CD7  00                 	db	0
  1206  016CD8  00                 	db	0
  1207  016CD9  00                 	db	0
  1208  016CDA  00                 	db	0
  1209  016CDB  00                 	db	0
  1210  016CDC  00                 	db	0
  1211  016CDD  00                 	db	0
  1212  016CDE  00                 	db	0
  1213  016CDF  00                 	db	0
  1214  016CE0  00                 	db	0
  1215  016CE1  00                 	db	0
  1216  016CE2  00                 	db	0
  1217  016CE3  00                 	db	0
  1218  016CE4  00                 	db	0
  1219  016CE5  00                 	db	0
  1220  016CE6  00                 	db	0
  1221  016CE7  00                 	db	0
  1222  016CE8  00                 	db	0
  1223  016CE9  00                 	db	0
  1224  016CEA  00                 	db	0
  1225  016CEB  00                 	db	0
  1226  016CEC  00                 	db	0
  1227  016CED  00                 	db	0
  1228  016CEE  00                 	db	0
  1229  016CEF  00                 	db	0
  1230  016CF0  00                 	db	0
  1231  016CF1  00                 	db	0
  1232  016CF2  00                 	db	0
  1233  016CF3  00                 	db	0
  1234  016CF4  00                 	db	0
  1235  016CF5  00                 	db	0
  1236  016CF6  00                 	db	0
  1237  016CF7  00                 	db	0
  1238  016CF8  00                 	db	0
  1239  016CF9  00                 	db	0
  1240  016CFA  00                 	db	0
  1241  016CFB  00                 	db	0
  1242  016CFC  00                 	db	0
  1243  016CFD  00                 	db	0
  1244  016CFE  00                 	db	0
  1245  016CFF  00                 	db	0
  1246                           
  1247                           ;initializer for _C
  1248  016D00  0000               	dw	0
  1249  016D02  0000               	dw	0
  1250  016D04  0000               	dw	0
  1251  016D06  0000               	dw	0
  1252  016D08  0000               	dw	0
  1253  016D0A  0000               	dw	0
  1254  016D0C  0000               	dw	0
  1255  016D0E  0000               	dw	0
  1256  016D10  0000               	dw	0
  1257  016D12  0000               	dw	0
  1258  016D14  0000               	dw	0
  1259  016D16  0000               	dw	0
  1260  016D18  0000               	dw	0
  1261  016D1A  0000               	dw	0
  1262  016D1C  0000               	dw	0
  1263  016D1E  0000               	dw	0
  1264  016D20  0000               	dw	0
  1265  016D22  0000               	dw	0
  1266  016D24  0000               	dw	0
  1267  016D26  0000               	dw	0
  1268  016D28  0000               	dw	0
  1269  016D2A  0000               	dw	0
  1270  016D2C  0000               	dw	0
  1271  016D2E  0000               	dw	0
  1272  016D30  0000               	dw	0
  1273  016D32  0000               	dw	0
  1274  016D34  0000               	dw	0
  1275  016D36  0000               	dw	0
  1276  016D38  0000               	dw	0
  1277  016D3A  0000               	dw	0
  1278  016D3C  0000               	dw	0
  1279  016D3E  0000               	dw	0
  1280  016D40  0000               	dw	0
  1281  016D42  0000               	dw	0
  1282  016D44  0000               	dw	0
  1283  016D46  0000               	dw	0
  1284  016D48  0000               	dw	0
  1285  016D4A  0000               	dw	0
  1286  016D4C  0000               	dw	0
  1287  016D4E  0000               	dw	0
  1288  016D50  0000               	dw	0
  1289  016D52  0000               	dw	0
  1290  016D54  0000               	dw	0
  1291  016D56  0000               	dw	0
  1292  016D58  0000               	dw	0
  1293  016D5A  0000               	dw	0
  1294  016D5C  0000               	dw	0
  1295  016D5E  0000               	dw	0
  1296  016D60  0000               	dw	0
  1297  016D62  0000               	dw	0
  1298  016D64  0000               	dw	0
  1299  016D66  0000               	dw	0
  1300  016D68  0000               	dw	0
  1301  016D6A  0000               	dw	0
  1302  016D6C  0000               	dw	0
  1303  016D6E  0000               	dw	0
  1304  016D70  0000               	dw	0
  1305  016D72  0000               	dw	0
  1306  016D74  0000               	dw	0
  1307  016D76  0000               	dw	0
  1308  016D78  0000               	dw	0
  1309  016D7A  0000               	dw	0
  1310  016D7C  0000               	dw	0
  1311  016D7E  0000               	dw	0
  1312  016D80  0000               	dw	0
  1313  016D82  0000               	dw	0
  1314  016D84  0000               	dw	0
  1315  016D86  0000               	dw	0
  1316  016D88  0000               	dw	0
  1317  016D8A  0000               	dw	0
  1318  016D8C  0000               	dw	0
  1319  016D8E  42FA               	dw	17146
  1320  016D90  0000               	dw	0
  1321  016D92  0000               	dw	0
  1322  016D94  0000               	dw	0
  1323  016D96  0000               	dw	0
  1324  016D98  0000               	dw	0
  1325  016D9A  0000               	dw	0
  1326  016D9C  0000               	dw	0
  1327  016D9E  0000               	dw	0
  1328  016DA0  0000               	dw	0
  1329  016DA2  0000               	dw	0
  1330  016DA4  0000               	dw	0
  1331  016DA6  0000               	dw	0
  1332  016DA8  0000               	dw	0
  1333  016DAA  0000               	dw	0
  1334  016DAC  0000               	dw	0
  1335  016DAE  0000               	dw	0
  1336  016DB0  0000               	dw	0
  1337  016DB2  0000               	dw	0
  1338  016DB4  0000               	dw	0
  1339  016DB6  0000               	dw	0
  1340  016DB8  00                 	db	0
  1341  016DB9  01                 	db	1
  1342  016DBA  0000               	dw	0
  1343  016DBC  3F80               	dw	16256
  1344  016DBE  0000               	dw	0
  1345  016DC0  3F80               	dw	16256
  1346  016DC2  00                 	db	0
  1347  016DC3  00                 	db	0
  1348  016DC4  00                 	db	0
  1349  016DC5  00                 	db	0
  1350  016DC6  00                 	db	0
  1351  016DC7  00                 	db	0
  1352  016DC8  00                 	db	0
  1353  016DC9  00                 	db	0
  1354  016DCA  00                 	db	0
  1355  016DCB  00                 	db	0
  1356  016DCC  00                 	db	0
  1357  016DCD  00                 	db	0
  1358  016DCE  00                 	db	0
  1359  016DCF  00                 	db	0
  1360  016DD0  00                 	db	0
  1361  016DD1  00                 	db	0
  1362  016DD2  00                 	db	0
  1363  016DD3  00                 	db	0
  1364  016DD4  00                 	db	0
  1365  016DD5  00                 	db	0
  1366  016DD6  00                 	db	0
  1367  016DD7  00                 	db	0
  1368  016DD8  00                 	db	0
  1369  016DD9  00                 	db	0
  1370  016DDA  00                 	db	0
  1371  016DDB  00                 	db	0
  1372  016DDC  00                 	db	0
  1373  016DDD  00                 	db	0
  1374  016DDE  00                 	db	0
  1375  016DDF  00                 	db	0
  1376  016DE0  00                 	db	0
  1377  016DE1  00                 	db	0
  1378  016DE2  00                 	db	0
  1379  016DE3  00                 	db	0
  1380  016DE4  00                 	db	0
  1381  016DE5  00                 	db	0
  1382  016DE6  00                 	db	0
  1383  016DE7  00                 	db	0
  1384  016DE8  00                 	db	0
  1385  016DE9  00                 	db	0
  1386  016DEA  00                 	db	0
  1387  016DEB  00                 	db	0
  1388  016DEC  00                 	db	0
  1389  016DED  00                 	db	0
  1390  016DEE  00                 	db	0
  1391  016DEF  00                 	db	0
  1392  016DF0  00                 	db	0
  1393  016DF1  00                 	db	0
  1394  016DF2  00                 	db	0
  1395  016DF3  00                 	db	0
  1396  016DF4  00                 	db	0
  1397  016DF5  00                 	db	0
  1398  016DF6  00                 	db	0
  1399  016DF7  00                 	db	0
  1400  016DF8  00                 	db	0
  1401  016DF9  00                 	db	0
  1402  016DFA  00                 	db	0
  1403  016DFB  00                 	db	0
  1404  016DFC  00                 	db	0
  1405  016DFD  00                 	db	0
  1406  016DFE  00                 	db	0
  1407  016DFF  00                 	db	0
  1408  016E00  00                 	db	0
  1409  016E01  00                 	db	0
  1410  016E02  00                 	db	0
  1411  016E03  00                 	db	0
  1412  016E04  00                 	db	0
  1413  016E05  00                 	db	0
  1414  016E06  00                 	db	0
  1415  016E07  00                 	db	0
  1416  016E08  00                 	db	0
  1417  016E09  00                 	db	0
  1418  016E0A  00                 	db	0
  1419  016E0B  00                 	db	0
  1420  016E0C  00                 	db	0
  1421  016E0D  00                 	db	0
  1422  016E0E  0000               	dw	0
  1423  016E10  0000               	dw	0
  1424  016E12  0000               	dw	0
  1425  016E14  0000               	dw	0
  1426  016E16  0000               	dw	0
  1427  016E18  0000               	dw	0
  1428  016E1A  0000               	dw	0
  1429  016E1C  0000               	dw	0
  1430  016E1E  0000               	dw	0
  1431  016E20  0000               	dw	0
  1432  016E22  01                 	db	1
  1433  016E23  00                 	db	0
  1434  016E24  00                 	db	0
  1435  016E25  00                 	db	0
  1436  016E26  00                 	db	0
  1437  016E27  00                 	db	0
  1438  016E28  00                 	db	0
  1439  016E29  00                 	db	0
  1440  016E2A  00                 	db	0
  1441                           
  1442                           	psect	idataBANK0
  1443  01BFFA                     __pidataBANK0:
  1444                           	opt callstack 0
  1445                           
  1446                           ;initializer for stoa@F1166
  1447  01BFFA  28                 	db	40
  1448  01BFFB  6E                 	db	110
  1449  01BFFC  75                 	db	117
  1450  01BFFD  6C                 	db	108
  1451  01BFFE  6C                 	db	108
  1452  01BFFF  29                 	db	41
  1453  01C000  00                 	db	0
  1454                           
  1455                           ;initializer for _H
  1456  01C001  00                 	db	0
  1457  01C002  00                 	db	0
  1458  01C003  01                 	db	1
  1459  01C004  00                 	db	0
  1460  01C005  01                 	db	1
  1461  01C006  00                 	db	0
  1462  01C007  00                 	db	0
  1463                           
  1464                           	psect	idataBANK1
  1465  019F0E                     __pidataBANK1:
  1466                           	opt callstack 0
  1467                           
  1468                           ;initializer for _R
  1469  019F0E  0000               	dw	0
  1470  019F10  0000               	dw	0
  1471  019F12  0000               	dw	0
  1472  019F14  0000               	dw	0
  1473  019F16  0000               	dw	0
  1474  019F18  0000               	dw	0
  1475  019F1A  0000               	dw	0
  1476  019F1C  0000               	dw	0
  1477  019F1E  0000               	dw	0
  1478  019F20  0000               	dw	0
  1479  019F22  0000               	dw	0
  1480  019F24  0000               	dw	0
  1481  019F26  0000               	dw	0
  1482  019F28  0000               	dw	0
  1483  019F2A  0000               	dw	0
  1484  019F2C  0000               	dw	0
  1485  019F2E  0F67               	dw	3943
  1486  019F30  0F8F               	dw	3983
  1487  019F32  0000               	dw	0
  1488  019F34  0000               	dw	0
  1489  019F36  0000               	dw	0
  1490  019F38  0000               	dw	0
  1491  019F3A  00                 	db	0
  1492  019F3B  0000               	dw	0
  1493  019F3D  00                 	db	0
  1494                           
  1495                           ;initializer for _V
  1496  019F3E  00                 	db	0
  1497  019F3F  00                 	db	0
  1498  019F40  00                 	db	0
  1499  019F41  00                 	db	0
  1500  019F42  00                 	db	0
  1501  019F43  00                 	db	0
  1502  019F44  00                 	db	0
  1503  019F45  00                 	db	0
  1504  019F46  00                 	db	0
  1505  019F47  00                 	db	0
  1506  019F48  00                 	db	0
  1507  019F49  00                 	db	0
  1508  019F4A  00                 	db	0
  1509  019F4B  00                 	db	0
  1510  019F4C  00                 	db	0
  1511  019F4D  00                 	db	0
  1512  019F4E  00                 	db	0
  1513  019F4F  00                 	db	0
  1514  019F50  00                 	db	0
  1515  019F51  00                 	db	0
  1516  019F52  00                 	db	0
  1517  019F53  00                 	db	0
  1518  019F54  00                 	db	0
  1519  019F55  00                 	db	0
  1520  019F56  00                 	db	0
  1521  019F57  00                 	db	0
  1522  019F58  00                 	db	0
  1523  019F59  00                 	db	0
  1524  019F5A  00                 	db	0
  1525  019F5B  00                 	db	0
  1526  019F5C  00                 	db	0
  1527  019F5D  00                 	db	0
  1528  019F5E  00                 	db	0
  1529  019F5F  00                 	db	0
  1530  019F60  00                 	db	0
  1531  019F61  00                 	db	0
  1532  019F62  00                 	db	0
  1533  019F63  00                 	db	0
  1534  019F64  00                 	db	0
  1535  019F65  00                 	db	0
  1536  019F66  00                 	db	0
  1537  019F67  00                 	db	0
  1538  019F68  00                 	db	0
  1539  019F69  00                 	db	0
  1540  019F6A  00                 	db	0
  1541  019F6B  00                 	db	0
  1542  019F6C  00                 	db	0
  1543  019F6D  00                 	db	0
  1544  019F6E  00                 	db	0
  1545  019F6F  00                 	db	0
  1546  019F70  00                 	db	0
  1547  019F71  00                 	db	0
  1548  019F72  00                 	db	0
  1549  019F73  00                 	db	0
  1550  019F74  00                 	db	0
  1551  019F75  00                 	db	0
  1552  019F76  00                 	db	0
  1553  019F77  00                 	db	0
  1554  019F78  00                 	db	0
  1555  019F79  00                 	db	0
  1556  019F7A  00                 	db	0
  1557  019F7B  00                 	db	0
  1558  019F7C  00                 	db	0
  1559  019F7D  00                 	db	0
  1560  019F7E  00                 	db	0
  1561  019F7F  00                 	db	0
  1562  019F80  00                 	db	0
  1563  019F81  00                 	db	0
  1564  019F82  00                 	db	0
  1565  019F83  00                 	db	0
  1566  019F84  00                 	db	0
  1567  019F85  00                 	db	0
  1568  019F86  00                 	db	0
  1569  019F87  00                 	db	0
  1570  019F88  00                 	db	0
  1571  019F89  00                 	db	0
  1572  019F8A  00                 	db	0
  1573  019F8B  00                 	db	0
  1574  019F8C  00                 	db	0
  1575  019F8D  00                 	db	0
  1576  019F8E  00                 	db	0
  1577  019F8F  00                 	db	0
  1578  019F90  00                 	db	0
  1579  019F91  00                 	db	0
  1580  019F92  00                 	db	0
  1581  019F93  00                 	db	0
  1582  019F94  00                 	db	0
  1583  019F95  00                 	db	0
  1584  019F96  00                 	db	0
  1585  019F97  00                 	db	0
  1586  019F98  00                 	db	0
  1587  019F99  00                 	db	0
  1588  019F9A  00                 	db	0
  1589  019F9B  00                 	db	0
  1590  019F9C  00                 	db	0
  1591  019F9D  00                 	db	0
  1592  019F9E  00                 	db	0
  1593  019F9F  00                 	db	0
  1594  019FA0  00                 	db	0
  1595  019FA1  00                 	db	0
  1596  019FA2  00                 	db	0
  1597  019FA3  00                 	db	0
  1598  019FA4  00                 	db	0
  1599  019FA5  00                 	db	0
  1600  019FA6  00                 	db	0
  1601  019FA7  00                 	db	0
  1602  019FA8  00                 	db	0
  1603  019FA9  00                 	db	0
  1604  019FAA  00                 	db	0
  1605  019FAB  00                 	db	0
  1606  019FAC  00                 	db	0
  1607  019FAD  00                 	db	0
  1608  019FAE  00                 	db	0
  1609  019FAF  00                 	db	0
  1610  019FB0  00                 	db	0
  1611  019FB1  00                 	db	0
  1612  019FB2  00                 	db	0
  1613  019FB3  00                 	db	0
  1614  019FB4  00                 	db	0
  1615  019FB5  00                 	db	0
  1616  019FB6  00                 	db	0
  1617  019FB7  00                 	db	0
  1618  019FB8  00                 	db	0
  1619  019FB9  00                 	db	0
  1620  019FBA  00                 	db	0
  1621  019FBB  00                 	db	0
  1622  019FBC  00                 	db	0
  1623  019FBD  00                 	db	0
  1624  019FBE  00                 	db	0
  1625  019FBF  0000               	dw	0
  1626  019FC1  0000               	dw	0
  1627  019FC3  0000               	dw	0
  1628  019FC5  0000               	dw	0
  1629  019FC7  00                 	db	0
  1630  019FC8  00                 	db	0
  1631  019FC9  00                 	db	0
  1632  019FCA  00                 	db	0
  1633  019FCB  00                 	db	0
  1634  019FCC  00                 	db	0
  1635  019FCD  0000               	dw	0
  1636  019FCF  0000               	dw	0
  1637  019FD1  0000               	dw	0
  1638  019FD3  0000               	dw	0
  1639  019FD5  0000               	dw	0
  1640  019FD7  0000               	dw	0
  1641  019FD9  00                 	db	0
  1642  019FDA  00                 	db	0
  1643  019FDB  00                 	db	0
  1644  019FDC  00                 	db	0
  1645  019FDD  00                 	db	0
  1646  019FDE  00                 	db	0
  1647  019FDF  00                 	db	0
  1648  019FE0  00                 	db	0
  1649  019FE1  00                 	db	0
  1650  019FE2  00                 	db	0
  1651  019FE3  00                 	db	0
  1652  019FE4  0000               	dw	0
  1653  019FE6  0000               	dw	0
  1654  019FE8  2D                 	db	45
  1655  019FE9  00                 	db	0
  1656  019FEA  00                 	db	0
  1657  019FEB  00                 	db	0
  1658  019FEC  00                 	db	0
  1659  019FED  0000               	dw	0
  1660  019FEF  0000               	dw	0
  1661  019FF1  0000               	dw	0
  1662  019FF3  0000               	dw	0
  1663  019FF5  0000               	dw	0
  1664  019FF7  0000               	dw	0
  1665  019FF9  0000               	dw	0
  1666  019FFB  0000               	dw	0
  1667                           
  1668                           	psect	mediumconst
  1669  00FA54                     __pmediumconst:
  1670                           	opt callstack 0
  1671  00FA54  00                 	db	0
  1672  00FA55                     _BVSOC_TABLE:
  1673                           	opt callstack 0
  1674  00FA55  59D8               	dw	23000
  1675  00FA57  0000               	dw	0
  1676  00FA59  0005               	dw	5
  1677  00FA5B  0000               	dw	0
  1678  00FA5D  5B68               	dw	23400
  1679  00FA5F  0000               	dw	0
  1680  00FA61  000A               	dw	10
  1681  00FA63  0000               	dw	0
  1682  00FA65  5C30               	dw	23600
  1683  00FA67  0000               	dw	0
  1684  00FA69  0014               	dw	20
  1685  00FA6B  0000               	dw	0
  1686  00FA6D  5E38               	dw	24120
  1687  00FA6F  0000               	dw	0
  1688  00FA71  0019               	dw	25
  1689  00FA73  0000               	dw	0
  1690  00FA75  5E88               	dw	24200
  1691  00FA77  0000               	dw	0
  1692  00FA79  001E               	dw	30
  1693  00FA7B  0000               	dw	0
  1694  00FA7D  5F78               	dw	24440
  1695  00FA7F  0000               	dw	0
  1696  00FA81  0028               	dw	40
  1697  00FA83  0000               	dw	0
  1698  00FA85  5FDC               	dw	24540
  1699  00FA87  0000               	dw	0
  1700  00FA89  002D               	dw	45
  1701  00FA8B  0000               	dw	0
  1702  00FA8D  6018               	dw	24600
  1703  00FA8F  0000               	dw	0
  1704  00FA91  0032               	dw	50
  1705  00FA93  0000               	dw	0
  1706  00FA95  6046               	dw	24646
  1707  00FA97  0000               	dw	0
  1708  00FA99  0035               	dw	53
  1709  00FA9B  0000               	dw	0
  1710  00FA9D  607C               	dw	24700
  1711  00FA9F  0000               	dw	0
  1712  00FAA1  0037               	dw	55
  1713  00FAA3  0000               	dw	0
  1714  00FAA5  60AE               	dw	24750
  1715  00FAA7  0000               	dw	0
  1716  00FAA9  0039               	dw	57
  1717  00FAAB  0000               	dw	0
  1718  00FAAD  60E0               	dw	24800
  1719  00FAAF  0000               	dw	0
  1720  00FAB1  003C               	dw	60
  1721  00FAB3  0000               	dw	0
  1722  00FAB5  6112               	dw	24850
  1723  00FAB7  0000               	dw	0
  1724  00FAB9  003F               	dw	63
  1725  00FABB  0000               	dw	0
  1726  00FABD  615D               	dw	24925
  1727  00FABF  0000               	dw	0
  1728  00FAC1  0043               	dw	67
  1729  00FAC3  0000               	dw	0
  1730  00FAC5  61A8               	dw	25000
  1731  00FAC7  0000               	dw	0
  1732  00FAC9  0046               	dw	70
  1733  00FACB  0000               	dw	0
  1734  00FACD  61BC               	dw	25020
  1735  00FACF  0000               	dw	0
  1736  00FAD1  0048               	dw	72
  1737  00FAD3  0000               	dw	0
  1738  00FAD5  61D0               	dw	25040
  1739  00FAD7  0000               	dw	0
  1740  00FAD9  004B               	dw	75
  1741  00FADB  0000               	dw	0
  1742  00FADD  61DA               	dw	25050
  1743  00FADF  0000               	dw	0
  1744  00FAE1  0050               	dw	80
  1745  00FAE3  0000               	dw	0
  1746  00FAE5  61E4               	dw	25060
  1747  00FAE7  0000               	dw	0
  1748  00FAE9  0055               	dw	85
  1749  00FAEB  0000               	dw	0
  1750  00FAED  61F8               	dw	25080
  1751  00FAEF  0000               	dw	0
  1752  00FAF1  005A               	dw	90
  1753  00FAF3  0000               	dw	0
  1754  00FAF5  6208               	dw	25096
  1755  00FAF7  0000               	dw	0
  1756  00FAF9  005C               	dw	92
  1757  00FAFB  0000               	dw	0
  1758  00FAFD  6222               	dw	25122
  1759  00FAFF  0000               	dw	0
  1760  00FB01  005D               	dw	93
  1761  00FB03  0000               	dw	0
  1762  00FB05  6234               	dw	25140
  1763  00FB07  0000               	dw	0
  1764  00FB09  005F               	dw	95
  1765  00FB0B  0000               	dw	0
  1766  00FB0D  6248               	dw	25160
  1767  00FB0F  0000               	dw	0
  1768  00FB11  0061               	dw	97
  1769  00FB13  0000               	dw	0
  1770  00FB15  625C               	dw	25180
  1771  00FB17  0000               	dw	0
  1772  00FB19  0064               	dw	100
  1773  00FB1B  0000               	dw	0
  1774  00FB1D  6784               	dw	26500
  1775  00FB1F  0000               	dw	0
  1776  00FB21  0062               	dw	98
  1777  00FB23  0000               	dw	0
  1778  00FB25                     __end_of_BVSOC_TABLE:
  1779                           	opt callstack 0
  1780  00FB25                     _T:
  1781                           	opt callstack 0
  1782  00FB25  63                 	db	99
  1783  00FB26  6F                 	db	111
  1784  00FB27  6D                 	db	109
  1785  00FB28  6D                 	db	109
  1786  00FB29  61                 	db	97
  1787  00FB2A  6E                 	db	110
  1788  00FB2B  64                 	db	100
  1789  00FB2C  73                 	db	115
  1790  00FB2D  20                 	db	32
  1791  00FB2E  31                 	db	49
  1792  00FB2F  00                 	db	0
  1793  00FB30  00                 	db	0
  1794  00FB31  00                 	db	0
  1795  00FB32  00                 	db	0
  1796  00FB33  00                 	db	0
  1797  00FB34  00                 	db	0
  1798  00FB35  00                 	db	0
  1799  00FB36  00                 	db	0
  1800  00FB37  64                 	db	100
  1801  00FB38  69                 	db	105
  1802  00FB39  73                 	db	115
  1803  00FB3A  70                 	db	112
  1804  00FB3B  6C                 	db	108
  1805  00FB3C  61                 	db	97
  1806  00FB3D  79                 	db	121
  1807  00FB3E  73                 	db	115
  1808  00FB3F  20                 	db	32
  1809  00FB40  31                 	db	49
  1810  00FB41  00                 	db	0
  1811  00FB42  00                 	db	0
  1812  00FB43  00                 	db	0
  1813  00FB44  00                 	db	0
  1814  00FB45  00                 	db	0
  1815  00FB46  00                 	db	0
  1816  00FB47  00                 	db	0
  1817  00FB48  00                 	db	0
  1818  00FB49  63                 	db	99
  1819  00FB4A  6F                 	db	111
  1820  00FB4B  6D                 	db	109
  1821  00FB4C  6D                 	db	109
  1822  00FB4D  61                 	db	97
  1823  00FB4E  6E                 	db	110
  1824  00FB4F  64                 	db	100
  1825  00FB50  73                 	db	115
  1826  00FB51  20                 	db	32
  1827  00FB52  32                 	db	50
  1828  00FB53  00                 	db	0
  1829  00FB54  00                 	db	0
  1830  00FB55  00                 	db	0
  1831  00FB56  00                 	db	0
  1832  00FB57  00                 	db	0
  1833  00FB58  00                 	db	0
  1834  00FB59  00                 	db	0
  1835  00FB5A  00                 	db	0
  1836  00FB5B  64                 	db	100
  1837  00FB5C  69                 	db	105
  1838  00FB5D  73                 	db	115
  1839  00FB5E  70                 	db	112
  1840  00FB5F  6C                 	db	108
  1841  00FB60  61                 	db	97
  1842  00FB61  79                 	db	121
  1843  00FB62  73                 	db	115
  1844  00FB63  20                 	db	32
  1845  00FB64  32                 	db	50
  1846  00FB65  00                 	db	0
  1847  00FB66  00                 	db	0
  1848  00FB67  00                 	db	0
  1849  00FB68  00                 	db	0
  1850  00FB69  00                 	db	0
  1851  00FB6A  00                 	db	0
  1852  00FB6B  00                 	db	0
  1853  00FB6C  00                 	db	0
  1854  00FB6D  63                 	db	99
  1855  00FB6E  6F                 	db	111
  1856  00FB6F  6D                 	db	109
  1857  00FB70  6D                 	db	109
  1858  00FB71  61                 	db	97
  1859  00FB72  6E                 	db	110
  1860  00FB73  64                 	db	100
  1861  00FB74  73                 	db	115
  1862  00FB75  20                 	db	32
  1863  00FB76  33                 	db	51
  1864  00FB77  00                 	db	0
  1865  00FB78  00                 	db	0
  1866  00FB79  00                 	db	0
  1867  00FB7A  00                 	db	0
  1868  00FB7B  00                 	db	0
  1869  00FB7C  00                 	db	0
  1870  00FB7D  00                 	db	0
  1871  00FB7E  00                 	db	0
  1872  00FB7F  64                 	db	100
  1873  00FB80  69                 	db	105
  1874  00FB81  73                 	db	115
  1875  00FB82  70                 	db	112
  1876  00FB83  6C                 	db	108
  1877  00FB84  61                 	db	97
  1878  00FB85  79                 	db	121
  1879  00FB86  73                 	db	115
  1880  00FB87  20                 	db	32
  1881  00FB88  33                 	db	51
  1882  00FB89  00                 	db	0
  1883  00FB8A  00                 	db	0
  1884  00FB8B  00                 	db	0
  1885  00FB8C  00                 	db	0
  1886  00FB8D  00                 	db	0
  1887  00FB8E  00                 	db	0
  1888  00FB8F  00                 	db	0
  1889  00FB90  00                 	db	0
  1890  00FB91  63                 	db	99
  1891  00FB92  6F                 	db	111
  1892  00FB93  6D                 	db	109
  1893  00FB94  6D                 	db	109
  1894  00FB95  61                 	db	97
  1895  00FB96  6E                 	db	110
  1896  00FB97  64                 	db	100
  1897  00FB98  73                 	db	115
  1898  00FB99  20                 	db	32
  1899  00FB9A  34                 	db	52
  1900  00FB9B  00                 	db	0
  1901  00FB9C  00                 	db	0
  1902  00FB9D  00                 	db	0
  1903  00FB9E  00                 	db	0
  1904  00FB9F  00                 	db	0
  1905  00FBA0  00                 	db	0
  1906  00FBA1  00                 	db	0
  1907  00FBA2  00                 	db	0
  1908  00FBA3  64                 	db	100
  1909  00FBA4  69                 	db	105
  1910  00FBA5  73                 	db	115
  1911  00FBA6  70                 	db	112
  1912  00FBA7  6C                 	db	108
  1913  00FBA8  61                 	db	97
  1914  00FBA9  79                 	db	121
  1915  00FBAA  73                 	db	115
  1916  00FBAB  20                 	db	32
  1917  00FBAC  34                 	db	52
  1918  00FBAD  00                 	db	0
  1919  00FBAE  00                 	db	0
  1920  00FBAF  00                 	db	0
  1921  00FBB0  00                 	db	0
  1922  00FBB1  00                 	db	0
  1923  00FBB2  00                 	db	0
  1924  00FBB3  00                 	db	0
  1925  00FBB4  00                 	db	0
  1926  00FBB5                     __end_of_T:
  1927                           	opt callstack 0
  1928  00FBB5                     _spin:
  1929                           	opt callstack 0
  1930  00FBB5  7C                 	db	124
  1931  00FBB6  7C                 	db	124
  1932  00FBB7  2F                 	db	47
  1933  00FBB8  2F                 	db	47
  1934  00FBB9  2D                 	db	45
  1935  00FBBA  2D                 	db	45
  1936  00FBBB  00                 	db	0
  1937  00FBBC  00                 	db	0
  1938  00FBBD  00                 	db	0
  1939  00FBBE  00                 	db	0
  1940  00FBBF  00                 	db	0
  1941  00FBC0  00                 	db	0
  1942  00FBC1  00                 	db	0
  1943  00FBC2  00                 	db	0
  1944  00FBC3  00                 	db	0
  1945  00FBC4  00                 	db	0
  1946  00FBC5  00                 	db	0
  1947  00FBC6  00                 	db	0
  1948  00FBC7  00                 	db	0
  1949  00FBC8  00                 	db	0
  1950  00FBC9  7C                 	db	124
  1951  00FBCA  7C                 	db	124
  1952  00FBCB  2F                 	db	47
  1953  00FBCC  2F                 	db	47
  1954  00FBCD  2D                 	db	45
  1955  00FBCE  2D                 	db	45
  1956  00FBCF  5C                 	db	92
  1957  00FBD0  5C                 	db	92
  1958  00FBD1  00                 	db	0
  1959  00FBD2  00                 	db	0
  1960  00FBD3  00                 	db	0
  1961  00FBD4  00                 	db	0
  1962  00FBD5  00                 	db	0
  1963  00FBD6  00                 	db	0
  1964  00FBD7  00                 	db	0
  1965  00FBD8  00                 	db	0
  1966  00FBD9  00                 	db	0
  1967  00FBDA  00                 	db	0
  1968  00FBDB  00                 	db	0
  1969  00FBDC  00                 	db	0
  1970  00FBDD  4F                 	db	79
  1971  00FBDE  4F                 	db	79
  1972  00FBDF  4F                 	db	79
  1973  00FBE0  4F                 	db	79
  1974  00FBE1  4F                 	db	79
  1975  00FBE2  4F                 	db	79
  1976  00FBE3  2D                 	db	45
  1977  00FBE4  2D                 	db	45
  1978  00FBE5  5F                 	db	95
  1979  00FBE6  5F                 	db	95
  1980  00FBE7  2D                 	db	45
  1981  00FBE8  00                 	db	0
  1982  00FBE9  00                 	db	0
  1983  00FBEA  00                 	db	0
  1984  00FBEB  00                 	db	0
  1985  00FBEC  00                 	db	0
  1986  00FBED  00                 	db	0
  1987  00FBEE  00                 	db	0
  1988  00FBEF  00                 	db	0
  1989  00FBF0  00                 	db	0
  1990  00FBF1  76                 	db	118
  1991  00FBF2  76                 	db	118
  1992  00FBF3  3C                 	db	60
  1993  00FBF4  3C                 	db	60
  1994  00FBF5  5E                 	db	94
  1995  00FBF6  5E                 	db	94
  1996  00FBF7  3E                 	db	62
  1997  00FBF8  3E                 	db	62
  1998  00FBF9  00                 	db	0
  1999  00FBFA  00                 	db	0
  2000  00FBFB  00                 	db	0
  2001  00FBFC  00                 	db	0
  2002  00FBFD  00                 	db	0
  2003  00FBFE  00                 	db	0
  2004  00FBFF  00                 	db	0
  2005  00FC00  00                 	db	0
  2006  00FC01  00                 	db	0
  2007  00FC02  00                 	db	0
  2008  00FC03  00                 	db	0
  2009  00FC04  00                 	db	0
  2010  00FC05  2E                 	db	46
  2011  00FC06  2E                 	db	46
  2012  00FC07  2A                 	db	42
  2013  00FC08  2A                 	db	42
  2014  00FC09  78                 	db	120
  2015  00FC0A  23                 	db	35
  2016  00FC0B  78                 	db	120
  2017  00FC0C  23                 	db	35
  2018  00FC0D  58                 	db	88
  2019  00FC0E  58                 	db	88
  2020  00FC0F  7C                 	db	124
  2021  00FC10  7C                 	db	124
  2022  00FC11  2D                 	db	45
  2023  00FC12  2D                 	db	45
  2024  00FC13  00                 	db	0
  2025  00FC14  00                 	db	0
  2026  00FC15  00                 	db	0
  2027  00FC16  00                 	db	0
  2028  00FC17  00                 	db	0
  2029  00FC18  00                 	db	0
  2030  00FC19  2E                 	db	46
  2031  00FC1A  2E                 	db	46
  2032  00FC1B  6F                 	db	111
  2033  00FC1C  6F                 	db	111
  2034  00FC1D  4F                 	db	79
  2035  00FC1E  4F                 	db	79
  2036  00FC1F  6F                 	db	111
  2037  00FC20  6F                 	db	111
  2038  00FC21  00                 	db	0
  2039  00FC22  00                 	db	0
  2040  00FC23  00                 	db	0
  2041  00FC24  00                 	db	0
  2042  00FC25  00                 	db	0
  2043  00FC26  00                 	db	0
  2044  00FC27  00                 	db	0
  2045  00FC28  00                 	db	0
  2046  00FC29  00                 	db	0
  2047  00FC2A  00                 	db	0
  2048  00FC2B  00                 	db	0
  2049  00FC2C  00                 	db	0
  2050  00FC2D                     __end_of_spin:
  2051                           	opt callstack 0
  2052  00FC2D  0000               	dw	0
  2053  00FC2F  3F80               	dw	16256
  2054  00FC31  0000               	dw	0
  2055  00FC33  3FC0               	dw	16320
  2056  00FC35                     __end_of_bp:
  2057                           	opt callstack 0
  2058  00FC35  AA00               	dw	43520
  2059  00FC37  3FB8               	dw	16312
  2060  00FC39                     __end_of_ivln2_h:
  2061                           	opt callstack 0
  2062  00FC39  23C6               	dw	9158
  2063  00FC3B  B8F6               	dw	47350
  2064  00FC3D                     __end_of_cp_l:
  2065                           	opt callstack 0
  2066  00FC3D  4000               	dw	16384
  2067  00FC3F  3F76               	dw	16246
  2068  00FC41                     __end_of_cp_h:
  2069                           	opt callstack 0
  2070  0000                     _IVTADL	set	14493
  2071  0000                     _IVTADH	set	14494
  2072  0000                     _IVTADU	set	14495
  2073  0000                     _PIR6bits	set	14758
  2074  0000                     _PIR4bits	set	14756
  2075  0000                     _PIE8bits	set	14744
  2076  0000                     _PIR8bits	set	14760
  2077  0000                     _SCANPR	set	14839
  2078  0000                     _DMA2PR	set	14836
  2079  0000                     _DMA1PR	set	14835
  2080  0000                     _MAINPR	set	14834
  2081  0000                     _ISRPR	set	14833
  2082  0000                     _PIE2bits	set	14738
  2083  0000                     _PIR2bits	set	14754
  2084  0000                     _PIE9bits	set	14745
  2085  0000                     _PIR9bits	set	14761
  2086  0000                     _PIE6bits	set	14742
  2087  0000                     _PIE3bits	set	14739
  2088  0000                     _PMD7	set	14791
  2089  0000                     _PMD6	set	14790
  2090  0000                     _PMD5	set	14789
  2091  0000                     _PMD4	set	14788
  2092  0000                     _PMD3	set	14787
  2093  0000                     _PMD2	set	14786
  2094  0000                     _PMD1	set	14785
  2095  0000                     _PMD0	set	14784
  2096  0000                     _OSCTUNE	set	14814
  2097  0000                     _OSCFRQ	set	14815
  2098  0000                     _OSCEN	set	14813
  2099  0000                     _OSCCON3	set	14811
  2100  0000                     _OSCCON1	set	14809
  2101  0000                     _IPR8bits	set	14728
  2102  0000                     _IPR9bits	set	14729
  2103  0000                     _IPR5bits	set	14725
  2104  0000                     _IPR1bits	set	14721
  2105  0000                     _IPR3bits	set	14723
  2106  0000                     _IPR6bits	set	14726
  2107  0000                     _IPR2bits	set	14722
  2108  0000                     _PIE5bits	set	14741
  2109  0000                     _PIE1bits	set	14737
  2110  0000                     _PIR5bits	set	14757
  2111  0000                     _PIR1bits	set	14753
  2112  0000                     _PLLR	set	118496
  2113  0000                     _SPI1SDIPPS	set	15071
  2114  0000                     _U1RXPPS	set	15077
  2115  0000                     _RC6PPS	set	14870
  2116  0000                     _RC5PPS	set	14869
  2117  0000                     _INT1PPS	set	15041
  2118  0000                     _RD1PPS	set	14873
  2119  0000                     _INT0PPS	set	15040
  2120  0000                     _RC3PPS	set	14867
  2121  0000                     _RB6PPS	set	14862
  2122  0000                     _SPI1SCKPPS	set	15070
  2123  0000                     _U2RXPPS	set	15080
  2124  0000                     _SLRCONF	set	14995
  2125  0000                     _SLRCONE	set	14979
  2126  0000                     _SLRCOND	set	14963
  2127  0000                     _SLRCONC	set	14947
  2128  0000                     _SLRCONB	set	14931
  2129  0000                     _SLRCONA	set	14915
  2130  0000                     _ODCOND	set	14962
  2131  0000                     _ODCONC	set	14946
  2132  0000                     _ODCONB	set	14930
  2133  0000                     _ODCONA	set	14914
  2134  0000                     _ODCONF	set	14994
  2135  0000                     _ODCONE	set	14978
  2136  0000                     _WPUC	set	14945
  2137  0000                     _WPUA	set	14913
  2138  0000                     _WPUB	set	14929
  2139  0000                     _WPUE	set	14977
  2140  0000                     _WPUF	set	14993
  2141  0000                     _WPUD	set	14961
  2142  0000                     _ANSELA	set	14912
  2143  0000                     _ANSELF	set	14992
  2144  0000                     _ANSELE	set	14976
  2145  0000                     _ANSELB	set	14928
  2146  0000                     _ANSELC	set	14944
  2147  0000                     _ANSELD	set	14960
  2148  0000                     _DMA2SSA	set	15321
  2149  0000                     _DMA1SSA	set	15353
  2150  0000                     _DMA2DSZ	set	15310
  2151  0000                     _DMA2SSZ	set	15319
  2152  0000                     _DMA2DSA	set	15312
  2153  0000                     _DMA1DSZ	set	15342
  2154  0000                     _DMA1SSZ	set	15351
  2155  0000                     _DMA1DSA	set	15344
  2156  0000                     _DMA2CON0bits	set	15324
  2157  0000                     _DMA2CON1bits	set	15325
  2158  0000                     _DMA1CON0bits	set	15356
  2159  0000                     _DMA1CON1bits	set	15357
  2160  0000                     _DMA2CON0	set	15324
  2161  0000                     _DMA2AIRQ	set	15326
  2162  0000                     _DMA2SIRQ	set	15327
  2163  0000                     _DMA2CON1	set	15325
  2164  0000                     _DMA1CON0	set	15356
  2165  0000                     _DMA1AIRQ	set	15358
  2166  0000                     _DMA1SIRQ	set	15359
  2167  0000                     _DMA1CON1	set	15357
  2168  0000                     _CLKRCON	set	15589
  2169  0000                     _CLKRCLK	set	15590
  2170  0000                     _SPI1INTFbits	set	15642
  2171  0000                     _SPI1RXB	set	15632
  2172  0000                     _SPI1TXB	set	15633
  2173  0000                     _SPI1TCNTL	set	15634
  2174  0000                     _SPI1CON0	set	15636
  2175  0000                     _SPI1CLK	set	15644
  2176  0000                     _SPI1BAUD	set	15641
  2177  0000                     _SPI1CON2	set	15638
  2178  0000                     _SPI1CON1	set	15637
  2179  0000                     _U2RXB	set	15824
  2180  0000                     _U2TXB	set	15826
  2181  0000                     _U2ERRIE	set	15842
  2182  0000                     _U2ERRIR	set	15841
  2183  0000                     _U2UIR	set	15840
  2184  0000                     _U2FIFO	set	15839
  2185  0000                     _U2BRGH	set	15838
  2186  0000                     _U2BRGL	set	15837
  2187  0000                     _U2CON2	set	15836
  2188  0000                     _U2CON1	set	15835
  2189  0000                     _U2CON0	set	15834
  2190  0000                     _U2P3L	set	15832
  2191  0000                     _U2P2L	set	15830
  2192  0000                     _U2P1L	set	15828
  2193  0000                     _U1RXB	set	15848
  2194  0000                     _U1ERRIE	set	15866
  2195  0000                     _U1ERRIR	set	15865
  2196  0000                     _U1UIR	set	15864
  2197  0000                     _U1FIFO	set	15863
  2198  0000                     _U1BRGH	set	15862
  2199  0000                     _U1BRGL	set	15861
  2200  0000                     _U1CON2	set	15860
  2201  0000                     _U1CON1	set	15859
  2202  0000                     _U1CON0	set	15858
  2203  0000                     _U1P3H	set	15857
  2204  0000                     _U1P3L	set	15856
  2205  0000                     _U1P2H	set	15855
  2206  0000                     _U1P2L	set	15854
  2207  0000                     _U1P1H	set	15853
  2208  0000                     _U1P1L	set	15852
  2209  0000                     _FVRCON	set	16065
  2210  0000                     _ADFLTRL	set	16102
  2211  0000                     _ADFLTRH	set	16103
  2212  0000                     _ADCON0bits	set	16120
  2213  0000                     _ADCON0	set	16120
  2214  0000                     _ADCLK	set	16127
  2215  0000                     _ADACT	set	16126
  2216  0000                     _ADREF	set	16125
  2217  0000                     _ADSTAT	set	16124
  2218  0000                     _ADCON3	set	16123
  2219  0000                     _ADCON2	set	16122
  2220  0000                     _ADCON1	set	16121
  2221  0000                     _ADPREH	set	16119
  2222  0000                     _ADPREL	set	16118
  2223  0000                     _ADCAP	set	16117
  2224  0000                     _ADACQH	set	16116
  2225  0000                     _ADACQL	set	16115
  2226  0000                     _ADPCH	set	16113
  2227  0000                     _ADRPT	set	16108
  2228  0000                     _ADACCU	set	16106
  2229  0000                     _ADSTPTH	set	16101
  2230  0000                     _ADSTPTL	set	16100
  2231  0000                     _ADUTHH	set	16097
  2232  0000                     _ADUTHL	set	16096
  2233  0000                     _ADLTHH	set	16095
  2234  0000                     _ADLTHL	set	16094
  2235  0000                     _CCPTMRS1bits	set	16223
  2236  0000                     _PORTFbits	set	16335
  2237  0000                     _LATFbits	set	16319
  2238  0000                     _LATCbits	set	16316
  2239  0000                     _LATDbits	set	16317
  2240  0000                     _PORTBbits	set	16331
  2241  0000                     _T3CONbits	set	16294
  2242  0000                     _T3CON	set	16294
  2243  0000                     _TMR3L	set	16292
  2244  0000                     _TMR3H	set	16293
  2245  0000                     _T3CLK	set	16297
  2246  0000                     _T3GATE	set	16296
  2247  0000                     _T3GCON	set	16295
  2248  0000                     _T2CON	set	16300
  2249  0000                     _T2TMR	set	16298
  2250  0000                     _T2PR	set	16299
  2251  0000                     _T2RST	set	16303
  2252  0000                     _T2HLT	set	16301
  2253  0000                     _T2CLKCON	set	16302
  2254  0000                     _PWM8DCL	set	16224
  2255  0000                     _PWM8DCH	set	16225
  2256  0000                     _PWM8CON	set	16226
  2257  0000                     _LATEbits	set	16318
  2258  0000                     _T5CONbits	set	16282
  2259  0000                     _T5CON	set	16282
  2260  0000                     _TMR5L	set	16280
  2261  0000                     _TMR5H	set	16281
  2262  0000                     _T5CLK	set	16285
  2263  0000                     _T5GATE	set	16284
  2264  0000                     _T5GCON	set	16283
  2265  0000                     _T6CON	set	16276
  2266  0000                     _T6TMR	set	16274
  2267  0000                     _T6PR	set	16275
  2268  0000                     _T6RST	set	16279
  2269  0000                     _T6HLT	set	16277
  2270  0000                     _T6CLKCON	set	16278
  2271  0000                     _TRISD	set	16325
  2272  0000                     _TRISC	set	16324
  2273  0000                     _TRISB	set	16323
  2274  0000                     _TRISA	set	16322
  2275  0000                     _TRISF	set	16327
  2276  0000                     _TRISE	set	16326
  2277  0000                     _LATC	set	16316
  2278  0000                     _LATB	set	16315
  2279  0000                     _LATF	set	16319
  2280  0000                     _LATA	set	16314
  2281  0000                     _LATD	set	16317
  2282  0000                     _LATE	set	16318
  2283  0000                     _IVTLOCKbits	set	16340
  2284  0000                     _IVTLOCK	set	16340
  2285  0000                     _INTCON0bits	set	16338
  2286  0000                     _GIE	set	130711
  2287  00FC41                     STR_65:
  2288                           
  2289                           ; BSR set to: 57
  2290  00FC41  20                 	db	32
  2291  00FC42  25                 	db	37
  2292  00FC43  63                 	db	99	;'c'
  2293  00FC44  20                 	db	32
  2294  00FC45  2C                 	db	44
  2295  00FC46  25                 	db	37
  2296  00FC47  6C                 	db	108	;'l'
  2297  00FC48  75                 	db	117	;'u'
  2298  00FC49  2C                 	db	44
  2299  00FC4A  25                 	db	37
  2300  00FC4B  34                 	db	52	;'4'
  2301  00FC4C  2E                 	db	46
  2302  00FC4D  34                 	db	52	;'4'
  2303  00FC4E  66                 	db	102	;'f'
  2304  00FC4F  2C                 	db	44
  2305  00FC50  25                 	db	37
  2306  00FC51  34                 	db	52	;'4'
  2307  00FC52  2E                 	db	46
  2308  00FC53  34                 	db	52	;'4'
  2309  00FC54  66                 	db	102	;'f'
  2310  00FC55  2C                 	db	44
  2311  00FC56  25                 	db	37
  2312  00FC57  34                 	db	52	;'4'
  2313  00FC58  2E                 	db	46
  2314  00FC59  34                 	db	52	;'4'
  2315  00FC5A  66                 	db	102	;'f'
  2316  00FC5B  2C                 	db	44
  2317  00FC5C  25                 	db	37
  2318  00FC5D  34                 	db	52	;'4'
  2319  00FC5E  2E                 	db	46
  2320  00FC5F  34                 	db	52	;'4'
  2321  00FC60  66                 	db	102	;'f'
  2322  00FC61  2C                 	db	44
  2323  00FC62  25                 	db	37
  2324  00FC63  34                 	db	52	;'4'
  2325  00FC64  2E                 	db	46
  2326  00FC65  33                 	db	51	;'3'
  2327  00FC66  66                 	db	102	;'f'
  2328  00FC67  2C                 	db	44
  2329  00FC68  25                 	db	37
  2330  00FC69  34                 	db	52	;'4'
  2331  00FC6A  2E                 	db	46
  2332  00FC6B  33                 	db	51	;'3'
  2333  00FC6C  66                 	db	102	;'f'
  2334  00FC6D  2C                 	db	44
  2335  00FC6E  25                 	db	37
  2336  00FC6F  34                 	db	52	;'4'
  2337  00FC70  2E                 	db	46
  2338  00FC71  33                 	db	51	;'3'
  2339  00FC72  66                 	db	102	;'f'
  2340  00FC73  2C                 	db	44
  2341  00FC74  25                 	db	37
  2342  00FC75  34                 	db	52	;'4'
  2343  00FC76  2E                 	db	46
  2344  00FC77  33                 	db	51	;'3'
  2345  00FC78  66                 	db	102	;'f'
  2346  00FC79  2C                 	db	44
  2347  00FC7A  25                 	db	37
  2348  00FC7B  34                 	db	52	;'4'
  2349  00FC7C  2E                 	db	46
  2350  00FC7D  33                 	db	51	;'3'
  2351  00FC7E  66                 	db	102	;'f'
  2352  00FC7F  2C                 	db	44
  2353  00FC80  25                 	db	37
  2354  00FC81  34                 	db	52	;'4'
  2355  00FC82  2E                 	db	46
  2356  00FC83  33                 	db	51	;'3'
  2357  00FC84  66                 	db	102	;'f'
  2358  00FC85  2C                 	db	44
  2359  00FC86  25                 	db	37
  2360  00FC87  64                 	db	100	;'d'
  2361  00FC88  2C                 	db	44
  2362  00FC89  25                 	db	37
  2363  00FC8A  64                 	db	100	;'d'
  2364  00FC8B  2C                 	db	44
  2365  00FC8C  25                 	db	37
  2366  00FC8D  32                 	db	50	;'2'
  2367  00FC8E  2E                 	db	46
  2368  00FC8F  36                 	db	54	;'6'
  2369  00FC90  66                 	db	102	;'f'
  2370  00FC91  2C                 	db	44
  2371  00FC92  25                 	db	37
  2372  00FC93  34                 	db	52	;'4'
  2373  00FC94  2E                 	db	46
  2374  00FC95  33                 	db	51	;'3'
  2375  00FC96  66                 	db	102	;'f'
  2376  00FC97  2C                 	db	44
  2377  00FC98  25                 	db	37
  2378  00FC99  64                 	db	100	;'d'
  2379  00FC9A  2C                 	db	44
  2380  00FC9B  25                 	db	37
  2381  00FC9C  64                 	db	100	;'d'
  2382  00FC9D  2C                 	db	44
  2383  00FC9E  25                 	db	37
  2384  00FC9F  6C                 	db	108	;'l'
  2385  00FCA0  75                 	db	117	;'u'
  2386  00FCA1  2C                 	db	44
  2387  00FCA2  25                 	db	37
  2388  00FCA3  6C                 	db	108	;'l'
  2389  00FCA4  75                 	db	117	;'u'
  2390  00FCA5  2C                 	db	44
  2391  00FCA6  25                 	db	37
  2392  00FCA7  34                 	db	52	;'4'
  2393  00FCA8  2E                 	db	46
  2394  00FCA9  33                 	db	51	;'3'
  2395  00FCAA  66                 	db	102	;'f'
  2396  00FCAB  2C                 	db	44
  2397  00FCAC  25                 	db	37
  2398  00FCAD  34                 	db	52	;'4'
  2399  00FCAE  2E                 	db	46
  2400  00FCAF  33                 	db	51	;'3'
  2401  00FCB0  66                 	db	102	;'f'
  2402  00FCB1  2C                 	db	44
  2403  00FCB2  25                 	db	37
  2404  00FCB3  34                 	db	52	;'4'
  2405  00FCB4  2E                 	db	46
  2406  00FCB5  33                 	db	51	;'3'
  2407  00FCB6  66                 	db	102	;'f'
  2408  00FCB7  0D                 	db	13
  2409  00FCB8  0A                 	db	10
  2410  00FCB9  00                 	db	0
  2411  00FCBA                     STR_17:
  2412                           
  2413                           ; BSR set to: 57
  2414  00FCBA  52                 	db	82	;'R'
  2415  00FCBB  31                 	db	49	;'1'
  2416  00FCBC  20                 	db	32
  2417  00FCBD  25                 	db	37
  2418  00FCBE  32                 	db	50	;'2'
  2419  00FCBF  2E                 	db	46
  2420  00FCC0  33                 	db	51	;'3'
  2421  00FCC1  66                 	db	102	;'f'
  2422  00FCC2  20                 	db	32
  2423  00FCC3  25                 	db	37
  2424  00FCC4  33                 	db	51	;'3'
  2425  00FCC5  2E                 	db	46
  2426  00FCC6  34                 	db	52	;'4'
  2427  00FCC7  66                 	db	102	;'f'
  2428  00FCC8  20                 	db	32
  2429  00FCC9  20                 	db	32
  2430  00FCCA  20                 	db	32
  2431  00FCCB  20                 	db	32
  2432  00FCCC  20                 	db	32
  2433  00FCCD  20                 	db	32
  2434  00FCCE  20                 	db	32
  2435  00FCCF  20                 	db	32
  2436  00FCD0  20                 	db	32
  2437  00FCD1  20                 	db	32
  2438  00FCD2  20                 	db	32
  2439  00FCD3  00                 	db	0
  2440  00FCD4                     STR_18:
  2441                           
  2442                           ; BSR set to: 57
  2443  00FCD4  52                 	db	82	;'R'
  2444  00FCD5  32                 	db	50	;'2'
  2445  00FCD6  20                 	db	32
  2446  00FCD7  25                 	db	37
  2447  00FCD8  32                 	db	50	;'2'
  2448  00FCD9  2E                 	db	46
  2449  00FCDA  33                 	db	51	;'3'
  2450  00FCDB  66                 	db	102	;'f'
  2451  00FCDC  20                 	db	32
  2452  00FCDD  25                 	db	37
  2453  00FCDE  33                 	db	51	;'3'
  2454  00FCDF  2E                 	db	46
  2455  00FCE0  34                 	db	52	;'4'
  2456  00FCE1  66                 	db	102	;'f'
  2457  00FCE2  20                 	db	32
  2458  00FCE3  20                 	db	32
  2459  00FCE4  20                 	db	32
  2460  00FCE5  20                 	db	32
  2461  00FCE6  20                 	db	32
  2462  00FCE7  20                 	db	32
  2463  00FCE8  20                 	db	32
  2464  00FCE9  20                 	db	32
  2465  00FCEA  20                 	db	32
  2466  00FCEB  20                 	db	32
  2467  00FCEC  20                 	db	32
  2468  00FCED  00                 	db	0
  2469  00FCEE                     
  2470                           ; BSR set to: 57
  2471  00FCEE  20                 	db	32
  2472  00FCEF  4D                 	db	77	;'M'
  2473  00FCF0  65                 	db	101	;'e'
  2474  00FCF1  73                 	db	115	;'s'
  2475  00FCF2  67                 	db	103	;'g'
  2476  00FCF3  20                 	db	32
  2477  00FCF4  25                 	db	37
  2478  00FCF5  64                 	db	100	;'d'
  2479  00FCF6  20                 	db	32
  2480  00FCF7  53                 	db	83	;'S'
  2481  00FCF8  74                 	db	116	;'t'
  2482  00FCF9  61                 	db	97	;'a'
  2483  00FCFA  63                 	db	99	;'c'
  2484  00FCFB  6B                 	db	107	;'k'
  2485  00FCFC  20                 	db	32
  2486  00FCFD  25                 	db	37
  2487  00FCFE  64                 	db	100	;'d'
  2488  00FCFF  20                 	db	32
  2489  00FD00  20                 	db	32
  2490  00FD01  20                 	db	32
  2491  00FD02  20                 	db	32
  2492  00FD03  20                 	db	32
  2493  00FD04  20                 	db	32
  2494  00FD05  00                 	db	0
  2495  00FD06                     STR_9:
  2496                           
  2497                           ; BSR set to: 57
  2498  00FD06  53                 	db	83	;'S'
  2499  00FD07  20                 	db	32
  2500  00FD08  53                 	db	83	;'S'
  2501  00FD09  25                 	db	37
  2502  00FD0A  63                 	db	99	;'c'
  2503  00FD0B  43                 	db	67	;'C'
  2504  00FD0C  20                 	db	32
  2505  00FD0D  25                 	db	37
  2506  00FD0E  64                 	db	100	;'d'
  2507  00FD0F  20                 	db	32
  2508  00FD10  25                 	db	37
  2509  00FD11  32                 	db	50	;'2'
  2510  00FD12  2E                 	db	46
  2511  00FD13  34                 	db	52	;'4'
  2512  00FD14  66                 	db	102	;'f'
  2513  00FD15  20                 	db	32
  2514  00FD16  20                 	db	32
  2515  00FD17  20                 	db	32
  2516  00FD18  20                 	db	32
  2517  00FD19  20                 	db	32
  2518  00FD1A  20                 	db	32
  2519  00FD1B  20                 	db	32
  2520  00FD1C  00                 	db	0
  2521  00FD1D                     STR_16:
  2522                           
  2523                           ; BSR set to: 57
  2524  00FD1D  45                 	db	69	;'E'
  2525  00FD1E  53                 	db	83	;'S'
  2526  00FD1F  52                 	db	82	;'R'
  2527  00FD20  20                 	db	32
  2528  00FD21  20                 	db	32
  2529  00FD22  25                 	db	37
  2530  00FD23  32                 	db	50	;'2'
  2531  00FD24  2E                 	db	46
  2532  00FD25  36                 	db	54	;'6'
  2533  00FD26  66                 	db	102	;'f'
  2534  00FD27  20                 	db	32
  2535  00FD28  20                 	db	32
  2536  00FD29  20                 	db	32
  2537  00FD2A  20                 	db	32
  2538  00FD2B  20                 	db	32
  2539  00FD2C  20                 	db	32
  2540  00FD2D  20                 	db	32
  2541  00FD2E  20                 	db	32
  2542  00FD2F  20                 	db	32
  2543  00FD30  20                 	db	32
  2544  00FD31  20                 	db	32
  2545  00FD32  00                 	db	0
  2546  00FD33                     STR_10:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FD33  53                 	db	83	;'S'
  2550  00FD34  74                 	db	116	;'t'
  2551  00FD35  61                 	db	97	;'a'
  2552  00FD36  74                 	db	116	;'t'
  2553  00FD37  69                 	db	105	;'i'
  2554  00FD38  63                 	db	99	;'c'
  2555  00FD39  20                 	db	32
  2556  00FD3A  53                 	db	83	;'S'
  2557  00FD3B  4F                 	db	79	;'O'
  2558  00FD3C  43                 	db	67	;'C'
  2559  00FD3D  20                 	db	32
  2560  00FD3E  25                 	db	37
  2561  00FD3F  64                 	db	100	;'d'
  2562  00FD40  20                 	db	32
  2563  00FD41  20                 	db	32
  2564  00FD42  20                 	db	32
  2565  00FD43  20                 	db	32
  2566  00FD44  20                 	db	32
  2567  00FD45  20                 	db	32
  2568  00FD46  20                 	db	32
  2569  00FD47  20                 	db	32
  2570  00FD48  00                 	db	0
  2571  00FD49                     STR_11:
  2572                           
  2573                           ; BSR set to: 57
  2574  00FD49  42                 	db	66	;'B'
  2575  00FD4A  61                 	db	97	;'a'
  2576  00FD4B  74                 	db	116	;'t'
  2577  00FD4C  74                 	db	116	;'t'
  2578  00FD4D  65                 	db	101	;'e'
  2579  00FD4E  72                 	db	114	;'r'
  2580  00FD4F  79                 	db	121	;'y'
  2581  00FD50  20                 	db	32
  2582  00FD51  41                 	db	65	;'A'
  2583  00FD52  68                 	db	104	;'h'
  2584  00FD53  20                 	db	32
  2585  00FD54  25                 	db	37
  2586  00FD55  33                 	db	51	;'3'
  2587  00FD56  2E                 	db	46
  2588  00FD57  32                 	db	50	;'2'
  2589  00FD58  66                 	db	102	;'f'
  2590  00FD59  20                 	db	32
  2591  00FD5A  20                 	db	32
  2592  00FD5B  20                 	db	32
  2593  00FD5C  20                 	db	32
  2594  00FD5D  20                 	db	32
  2595  00FD5E  00                 	db	0
  2596  00FD5F                     STR_15:
  2597                           
  2598                           ; BSR set to: 57
  2599  00FD5F  43                 	db	67	;'C'
  2600  00FD60  68                 	db	104	;'h'
  2601  00FD61  65                 	db	101	;'e'
  2602  00FD62  63                 	db	99	;'c'
  2603  00FD63  6B                 	db	107	;'k'
  2604  00FD64  69                 	db	105	;'i'
  2605  00FD65  6E                 	db	110	;'n'
  2606  00FD66  67                 	db	103	;'g'
  2607  00FD67  20                 	db	32
  2608  00FD68  25                 	db	37
  2609  00FD69  63                 	db	99	;'c'
  2610  00FD6A  20                 	db	32
  2611  00FD6B  25                 	db	37
  2612  00FD6C  63                 	db	99	;'c'
  2613  00FD6D  20                 	db	32
  2614  00FD6E  20                 	db	32
  2615  00FD6F  20                 	db	32
  2616  00FD70  20                 	db	32
  2617  00FD71  20                 	db	32
  2618  00FD72  20                 	db	32
  2619  00FD73  00                 	db	0
  2620  00FD74                     STR_37:
  2621                           
  2622                           ; BSR set to: 57
  2623  00FD74  45                 	db	69	;'E'
  2624  00FD75  53                 	db	83	;'S'
  2625  00FD76  52                 	db	82	;'R'
  2626  00FD77  20                 	db	32
  2627  00FD78  20                 	db	32
  2628  00FD79  25                 	db	37
  2629  00FD7A  32                 	db	50	;'2'
  2630  00FD7B  2E                 	db	46
  2631  00FD7C  36                 	db	54	;'6'
  2632  00FD7D  66                 	db	102	;'f'
  2633  00FD7E  20                 	db	32
  2634  00FD7F  20                 	db	32
  2635  00FD80  20                 	db	32
  2636  00FD81  20                 	db	32
  2637  00FD82  20                 	db	32
  2638  00FD83  20                 	db	32
  2639  00FD84  20                 	db	32
  2640  00FD85  20                 	db	32
  2641  00FD86  20                 	db	32
  2642  00FD87  00                 	db	0
  2643  00FD88                     STR_36:
  2644                           
  2645                           ; BSR set to: 57
  2646  00FD88  53                 	db	83	;'S'
  2647  00FD89  25                 	db	37
  2648  00FD8A  63                 	db	99	;'c'
  2649  00FD8B  43                 	db	67	;'C'
  2650  00FD8C  20                 	db	32
  2651  00FD8D  25                 	db	37
  2652  00FD8E  64                 	db	100	;'d'
  2653  00FD8F  20                 	db	32
  2654  00FD90  52                 	db	82	;'R'
  2655  00FD91  55                 	db	85	;'U'
  2656  00FD92  4E                 	db	78	;'N'
  2657  00FD93  20                 	db	32
  2658  00FD94  25                 	db	37
  2659  00FD95  64                 	db	100	;'d'
  2660  00FD96  20                 	db	32
  2661  00FD97  20                 	db	32
  2662  00FD98  20                 	db	32
  2663  00FD99  20                 	db	32
  2664  00FD9A  20                 	db	32
  2665  00FD9B  00                 	db	0
  2666  00FD9C                     STR_25:
  2667                           
  2668                           ; BSR set to: 57
  2669  00FD9C  50                 	db	80	;'P'
  2670  00FD9D  56                 	db	86	;'V'
  2671  00FD9E  20                 	db	32
  2672  00FD9F  25                 	db	37
  2673  00FDA0  63                 	db	99	;'c'
  2674  00FDA1  20                 	db	32
  2675  00FDA2  57                 	db	87	;'W'
  2676  00FDA3  48                 	db	72	;'H'
  2677  00FDA4  20                 	db	32
  2678  00FDA5  25                 	db	37
  2679  00FDA6  33                 	db	51	;'3'
  2680  00FDA7  2E                 	db	46
  2681  00FDA8  32                 	db	50	;'2'
  2682  00FDA9  66                 	db	102	;'f'
  2683  00FDAA  20                 	db	32
  2684  00FDAB  20                 	db	32
  2685  00FDAC  20                 	db	32
  2686  00FDAD  20                 	db	32
  2687  00FDAE  20                 	db	32
  2688  00FDAF  00                 	db	0
  2689  00FDB0                     STR_34:
  2690                           
  2691                           ; BSR set to: 57
  2692  00FDB0  42                 	db	66	;'B'
  2693  00FDB1  41                 	db	65	;'A'
  2694  00FDB2  54                 	db	84	;'T'
  2695  00FDB3  54                 	db	84	;'T'
  2696  00FDB4  20                 	db	32
  2697  00FDB5  50                 	db	80	;'P'
  2698  00FDB6  57                 	db	87	;'W'
  2699  00FDB7  52                 	db	82	;'R'
  2700  00FDB8  20                 	db	32
  2701  00FDB9  25                 	db	37
  2702  00FDBA  33                 	db	51	;'3'
  2703  00FDBB  2E                 	db	46
  2704  00FDBC  32                 	db	50	;'2'
  2705  00FDBD  66                 	db	102	;'f'
  2706  00FDBE  20                 	db	32
  2707  00FDBF  20                 	db	32
  2708  00FDC0  20                 	db	32
  2709  00FDC1  20                 	db	32
  2710  00FDC2  20                 	db	32
  2711  00FDC3  00                 	db	0
  2712  00FDC4                     STR_38:
  2713                           
  2714                           ; BSR set to: 57
  2715  00FDC4  52                 	db	82	;'R'
  2716  00FDC5  31                 	db	49	;'1'
  2717  00FDC6  20                 	db	32
  2718  00FDC7  25                 	db	37
  2719  00FDC8  32                 	db	50	;'2'
  2720  00FDC9  2E                 	db	46
  2721  00FDCA  33                 	db	51	;'3'
  2722  00FDCB  66                 	db	102	;'f'
  2723  00FDCC  20                 	db	32
  2724  00FDCD  25                 	db	37
  2725  00FDCE  33                 	db	51	;'3'
  2726  00FDCF  2E                 	db	46
  2727  00FDD0  34                 	db	52	;'4'
  2728  00FDD1  66                 	db	102	;'f'
  2729  00FDD2  20                 	db	32
  2730  00FDD3  20                 	db	32
  2731  00FDD4  20                 	db	32
  2732  00FDD5  20                 	db	32
  2733  00FDD6  20                 	db	32
  2734  00FDD7  00                 	db	0
  2735  00FDD8                     STR_39:
  2736                           
  2737                           ; BSR set to: 57
  2738  00FDD8  52                 	db	82	;'R'
  2739  00FDD9  32                 	db	50	;'2'
  2740  00FDDA  20                 	db	32
  2741  00FDDB  25                 	db	37
  2742  00FDDC  32                 	db	50	;'2'
  2743  00FDDD  2E                 	db	46
  2744  00FDDE  33                 	db	51	;'3'
  2745  00FDDF  66                 	db	102	;'f'
  2746  00FDE0  20                 	db	32
  2747  00FDE1  25                 	db	37
  2748  00FDE2  33                 	db	51	;'3'
  2749  00FDE3  2E                 	db	46
  2750  00FDE4  34                 	db	52	;'4'
  2751  00FDE5  66                 	db	102	;'f'
  2752  00FDE6  20                 	db	32
  2753  00FDE7  20                 	db	32
  2754  00FDE8  20                 	db	32
  2755  00FDE9  20                 	db	32
  2756  00FDEA  20                 	db	32
  2757  00FDEB  00                 	db	0
  2758  00FDEC                     STR_22:
  2759                           
  2760                           ; BSR set to: 57
  2761  00FDEC  50                 	db	80	;'P'
  2762  00FDED  56                 	db	86	;'V'
  2763  00FDEE  20                 	db	32
  2764  00FDEF  25                 	db	37
  2765  00FDF0  63                 	db	99	;'c'
  2766  00FDF1  20                 	db	32
  2767  00FDF2  50                 	db	80	;'P'
  2768  00FDF3  57                 	db	87	;'W'
  2769  00FDF4  52                 	db	82	;'R'
  2770  00FDF5  20                 	db	32
  2771  00FDF6  25                 	db	37
  2772  00FDF7  33                 	db	51	;'3'
  2773  00FDF8  2E                 	db	46
  2774  00FDF9  32                 	db	50	;'2'
  2775  00FDFA  66                 	db	102	;'f'
  2776  00FDFB  20                 	db	32
  2777  00FDFC  20                 	db	32
  2778  00FDFD  20                 	db	32
  2779  00FDFE  20                 	db	32
  2780  00FDFF  00                 	db	0
  2781  00FE00                     STR_35:
  2782                           
  2783                           ; BSR set to: 57
  2784  00FE00  42                 	db	66	;'B'
  2785  00FE01  41                 	db	65	;'A'
  2786  00FE02  48                 	db	72	;'H'
  2787  00FE03  20                 	db	32
  2788  00FE04  25                 	db	37
  2789  00FE05  33                 	db	51	;'3'
  2790  00FE06  2E                 	db	46
  2791  00FE07  32                 	db	50	;'2'
  2792  00FE08  66                 	db	102	;'f'
  2793  00FE09  20                 	db	32
  2794  00FE0A  50                 	db	80	;'P'
  2795  00FE0B  25                 	db	37
  2796  00FE0C  33                 	db	51	;'3'
  2797  00FE0D  2E                 	db	46
  2798  00FE0E  32                 	db	50	;'2'
  2799  00FE0F  66                 	db	102	;'f'
  2800  00FE10  20                 	db	32
  2801  00FE11  20                 	db	32
  2802  00FE12  20                 	db	32
  2803  00FE13  00                 	db	0
  2804  00FE14                     STR_58:
  2805                           
  2806                           ; BSR set to: 57
  2807  00FE14  20                 	db	32
  2808  00FE15  20                 	db	32
  2809  00FE16  20                 	db	32
  2810  00FE17  20                 	db	32
  2811  00FE18  20                 	db	32
  2812  00FE19  20                 	db	32
  2813  00FE1A  20                 	db	32
  2814  00FE1B  20                 	db	32
  2815  00FE1C  20                 	db	32
  2816  00FE1D  20                 	db	32
  2817  00FE1E  20                 	db	32
  2818  00FE1F  20                 	db	32
  2819  00FE20  20                 	db	32
  2820  00FE21  20                 	db	32
  2821  00FE22  20                 	db	32
  2822  00FE23  20                 	db	32
  2823  00FE24  20                 	db	32
  2824  00FE25  20                 	db	32
  2825  00FE26  00                 	db	0
  2826  00FE27                     STR_48:
  2827                           
  2828                           ; BSR set to: 57
  2829  00FE27  48                 	db	72	;'H'
  2830  00FE28  45                 	db	69	;'E'
  2831  00FE29  4C                 	db	76	;'L'
  2832  00FE2A  50                 	db	80	;'P'
  2833  00FE2B  20                 	db	32
  2834  00FE2C  25                 	db	37
  2835  00FE2D  73                 	db	115	;'s'
  2836  00FE2E  20                 	db	32
  2837  00FE2F  20                 	db	32
  2838  00FE30  20                 	db	32
  2839  00FE31  20                 	db	32
  2840  00FE32  20                 	db	32
  2841  00FE33  20                 	db	32
  2842  00FE34  20                 	db	32
  2843  00FE35  20                 	db	32
  2844  00FE36  20                 	db	32
  2845  00FE37  20                 	db	32
  2846  00FE38  20                 	db	32
  2847  00FE39  00                 	db	0
  2848  00FE3A                     
  2849                           ; BSR set to: 57
  2850  00FE3A  44                 	db	68	;'D'
  2851  00FE3B  49                 	db	73	;'I'
  2852  00FE3C  53                 	db	83	;'S'
  2853  00FE3D  50                 	db	80	;'P'
  2854  00FE3E  4C                 	db	76	;'L'
  2855  00FE3F  41                 	db	65	;'A'
  2856  00FE40  59                 	db	89	;'Y'
  2857  00FE41  20                 	db	32
  2858  00FE42  25                 	db	37
  2859  00FE43  73                 	db	115	;'s'
  2860  00FE44  20                 	db	32
  2861  00FE45  20                 	db	32
  2862  00FE46  20                 	db	32
  2863  00FE47  20                 	db	32
  2864  00FE48  20                 	db	32
  2865  00FE49  20                 	db	32
  2866  00FE4A  20                 	db	32
  2867  00FE4B  20                 	db	32
  2868  00FE4C  00                 	db	0
  2869  00FE4D                     STR_31:
  2870                           
  2871                           ; BSR set to: 57
  2872  00FE4D  42                 	db	66	;'B'
  2873  00FE4E  41                 	db	65	;'A'
  2874  00FE4F  54                 	db	84	;'T'
  2875  00FE50  20                 	db	32
  2876  00FE51  49                 	db	73	;'I'
  2877  00FE52  57                 	db	87	;'W'
  2878  00FE53  48                 	db	72	;'H'
  2879  00FE54  20                 	db	32
  2880  00FE55  25                 	db	37
  2881  00FE56  34                 	db	52	;'4'
  2882  00FE57  2E                 	db	46
  2883  00FE58  31                 	db	49	;'1'
  2884  00FE59  66                 	db	102	;'f'
  2885  00FE5A  20                 	db	32
  2886  00FE5B  20                 	db	32
  2887  00FE5C  20                 	db	32
  2888  00FE5D  20                 	db	32
  2889  00FE5E  20                 	db	32
  2890  00FE5F  00                 	db	0
  2891  00FE60                     STR_32:
  2892                           
  2893                           ; BSR set to: 57
  2894  00FE60  42                 	db	66	;'B'
  2895  00FE61  41                 	db	65	;'A'
  2896  00FE62  54                 	db	84	;'T'
  2897  00FE63  20                 	db	32
  2898  00FE64  4F                 	db	79	;'O'
  2899  00FE65  57                 	db	87	;'W'
  2900  00FE66  48                 	db	72	;'H'
  2901  00FE67  20                 	db	32
  2902  00FE68  25                 	db	37
  2903  00FE69  34                 	db	52	;'4'
  2904  00FE6A  2E                 	db	46
  2905  00FE6B  31                 	db	49	;'1'
  2906  00FE6C  66                 	db	102	;'f'
  2907  00FE6D  20                 	db	32
  2908  00FE6E  20                 	db	32
  2909  00FE6F  20                 	db	32
  2910  00FE70  20                 	db	32
  2911  00FE71  20                 	db	32
  2912  00FE72  00                 	db	0
  2913  00FE73                     STR_33:
  2914                           
  2915                           ; BSR set to: 57
  2916  00FE73  42                 	db	66	;'B'
  2917  00FE74  41                 	db	65	;'A'
  2918  00FE75  54                 	db	84	;'T'
  2919  00FE76  20                 	db	32
  2920  00FE77  54                 	db	84	;'T'
  2921  00FE78  57                 	db	87	;'W'
  2922  00FE79  48                 	db	72	;'H'
  2923  00FE7A  20                 	db	32
  2924  00FE7B  25                 	db	37
  2925  00FE7C  34                 	db	52	;'4'
  2926  00FE7D  2E                 	db	46
  2927  00FE7E  31                 	db	49	;'1'
  2928  00FE7F  66                 	db	102	;'f'
  2929  00FE80  20                 	db	32
  2930  00FE81  20                 	db	32
  2931  00FE82  20                 	db	32
  2932  00FE83  20                 	db	32
  2933  00FE84  20                 	db	32
  2934  00FE85  00                 	db	0
  2935  00FE86                     STR_27:
  2936                           
  2937                           ; BSR set to: 57
  2938  00FE86  49                 	db	73	;'I'
  2939  00FE87  4E                 	db	78	;'N'
  2940  00FE88  56                 	db	86	;'V'
  2941  00FE89  20                 	db	32
  2942  00FE8A  20                 	db	32
  2943  00FE8B  57                 	db	87	;'W'
  2944  00FE8C  48                 	db	72	;'H'
  2945  00FE8D  20                 	db	32
  2946  00FE8E  25                 	db	37
  2947  00FE8F  33                 	db	51	;'3'
  2948  00FE90  2E                 	db	46
  2949  00FE91  32                 	db	50	;'2'
  2950  00FE92  66                 	db	102	;'f'
  2951  00FE93  20                 	db	32
  2952  00FE94  20                 	db	32
  2953  00FE95  20                 	db	32
  2954  00FE96  20                 	db	32
  2955  00FE97  20                 	db	32
  2956  00FE98  00                 	db	0
  2957  00FE99                     STR_26:
  2958                           
  2959                           ; BSR set to: 57
  2960  00FE99  4C                 	db	76	;'L'
  2961  00FE9A  4F                 	db	79	;'O'
  2962  00FE9B  41                 	db	65	;'A'
  2963  00FE9C  44                 	db	68	;'D'
  2964  00FE9D  20                 	db	32
  2965  00FE9E  57                 	db	87	;'W'
  2966  00FE9F  48                 	db	72	;'H'
  2967  00FEA0  20                 	db	32
  2968  00FEA1  25                 	db	37
  2969  00FEA2  33                 	db	51	;'3'
  2970  00FEA3  2E                 	db	46
  2971  00FEA4  32                 	db	50	;'2'
  2972  00FEA5  66                 	db	102	;'f'
  2973  00FEA6  20                 	db	32
  2974  00FEA7  20                 	db	32
  2975  00FEA8  20                 	db	32
  2976  00FEA9  20                 	db	32
  2977  00FEAA  20                 	db	32
  2978  00FEAB  00                 	db	0
  2979  00FEAC                     STR_24:
  2980                           
  2981                           ; BSR set to: 57
  2982  00FEAC  49                 	db	73	;'I'
  2983  00FEAD  4E                 	db	78	;'N'
  2984  00FEAE  56                 	db	86	;'V'
  2985  00FEAF  20                 	db	32
  2986  00FEB0  20                 	db	32
  2987  00FEB1  50                 	db	80	;'P'
  2988  00FEB2  57                 	db	87	;'W'
  2989  00FEB3  52                 	db	82	;'R'
  2990  00FEB4  20                 	db	32
  2991  00FEB5  25                 	db	37
  2992  00FEB6  33                 	db	51	;'3'
  2993  00FEB7  2E                 	db	46
  2994  00FEB8  32                 	db	50	;'2'
  2995  00FEB9  66                 	db	102	;'f'
  2996  00FEBA  20                 	db	32
  2997  00FEBB  20                 	db	32
  2998  00FEBC  20                 	db	32
  2999  00FEBD  20                 	db	32
  3000  00FEBE  00                 	db	0
  3001  00FEBF                     STR_23:
  3002                           
  3003                           ; BSR set to: 57
  3004  00FEBF  4C                 	db	76	;'L'
  3005  00FEC0  4F                 	db	79	;'O'
  3006  00FEC1  41                 	db	65	;'A'
  3007  00FEC2  44                 	db	68	;'D'
  3008  00FEC3  20                 	db	32
  3009  00FEC4  50                 	db	80	;'P'
  3010  00FEC5  57                 	db	87	;'W'
  3011  00FEC6  52                 	db	82	;'R'
  3012  00FEC7  20                 	db	32
  3013  00FEC8  25                 	db	37
  3014  00FEC9  33                 	db	51	;'3'
  3015  00FECA  2E                 	db	46
  3016  00FECB  32                 	db	50	;'2'
  3017  00FECC  66                 	db	102	;'f'
  3018  00FECD  20                 	db	32
  3019  00FECE  20                 	db	32
  3020  00FECF  20                 	db	32
  3021  00FED0  20                 	db	32
  3022  00FED1  00                 	db	0
  3023  00FED2                     STR_29:
  3024                           
  3025                           ; BSR set to: 57
  3026  00FED2  42                 	db	66	;'B'
  3027  00FED3  56                 	db	86	;'V'
  3028  00FED4  20                 	db	32
  3029  00FED5  25                 	db	37
  3030  00FED6  32                 	db	50	;'2'
  3031  00FED7  2E                 	db	46
  3032  00FED8  32                 	db	50	;'2'
  3033  00FED9  66                 	db	102	;'f'
  3034  00FEDA  20                 	db	32
  3035  00FEDB  42                 	db	66	;'B'
  3036  00FEDC  41                 	db	65	;'A'
  3037  00FEDD  20                 	db	32
  3038  00FEDE  25                 	db	37
  3039  00FEDF  32                 	db	50	;'2'
  3040  00FEE0  2E                 	db	46
  3041  00FEE1  32                 	db	50	;'2'
  3042  00FEE2  66                 	db	102	;'f'
  3043  00FEE3  20                 	db	32
  3044  00FEE4  00                 	db	0
  3045  00FEE5                     STR_30:
  3046                           
  3047                           ; BSR set to: 57
  3048  00FEE5  43                 	db	67	;'C'
  3049  00FEE6  56                 	db	86	;'V'
  3050  00FEE7  20                 	db	32
  3051  00FEE8  25                 	db	37
  3052  00FEE9  32                 	db	50	;'2'
  3053  00FEEA  2E                 	db	46
  3054  00FEEB  32                 	db	50	;'2'
  3055  00FEEC  66                 	db	102	;'f'
  3056  00FEED  20                 	db	32
  3057  00FEEE  4C                 	db	76	;'L'
  3058  00FEEF  41                 	db	65	;'A'
  3059  00FEF0  20                 	db	32
  3060  00FEF1  25                 	db	37
  3061  00FEF2  32                 	db	50	;'2'
  3062  00FEF3  2E                 	db	46
  3063  00FEF4  32                 	db	50	;'2'
  3064  00FEF5  66                 	db	102	;'f'
  3065  00FEF6  20                 	db	32
  3066  00FEF7  00                 	db	0
  3067  00FEF8                     STR_28:
  3068                           
  3069                           ; BSR set to: 57
  3070  00FEF8  50                 	db	80	;'P'
  3071  00FEF9  56                 	db	86	;'V'
  3072  00FEFA  20                 	db	32
  3073  00FEFB  25                 	db	37
  3074  00FEFC  32                 	db	50	;'2'
  3075  00FEFD  2E                 	db	46
  3076  00FEFE  32                 	db	50	;'2'
  3077  00FEFF  66                 	db	102	;'f'
  3078  00FF00  20                 	db	32
  3079  00FF01  50                 	db	80	;'P'
  3080  00FF02  41                 	db	65	;'A'
  3081  00FF03  20                 	db	32
  3082  00FF04  25                 	db	37
  3083  00FF05  32                 	db	50	;'2'
  3084  00FF06  2E                 	db	46
  3085  00FF07  32                 	db	50	;'2'
  3086  00FF08  66                 	db	102	;'f'
  3087  00FF09  20                 	db	32
  3088  00FF0A  00                 	db	0
  3089  00FF0B                     STR_8:
  3090                           
  3091                           ; BSR set to: 57
  3092  00FF0B  42                 	db	66	;'B'
  3093  00FF0C  56                 	db	86	;'V'
  3094  00FF0D  20                 	db	32
  3095  00FF0E  25                 	db	37
  3096  00FF0F  32                 	db	50	;'2'
  3097  00FF10  2E                 	db	46
  3098  00FF11  34                 	db	52	;'4'
  3099  00FF12  66                 	db	102	;'f'
  3100  00FF13  20                 	db	32
  3101  00FF14  20                 	db	32
  3102  00FF15  20                 	db	32
  3103  00FF16  20                 	db	32
  3104  00FF17  20                 	db	32
  3105  00FF18  20                 	db	32
  3106  00FF19  20                 	db	32
  3107  00FF1A  20                 	db	32
  3108  00FF1B  20                 	db	32
  3109  00FF1C  00                 	db	0
  3110  00FF1D                     STR_4:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FF1D  20                 	db	32
  3114  00FF1E  4E                 	db	78	;'N'
  3115  00FF1F  53                 	db	83	;'S'
  3116  00FF20  41                 	db	65	;'A'
  3117  00FF21  53                 	db	83	;'S'
  3118  00FF22  50                 	db	80	;'P'
  3119  00FF23  4F                 	db	79	;'O'
  3120  00FF24  4F                 	db	79	;'O'
  3121  00FF25  4B                 	db	75	;'K'
  3122  00FF26  20                 	db	32
  3123  00FF27  20                 	db	32
  3124  00FF28  20                 	db	32
  3125  00FF29  20                 	db	32
  3126  00FF2A  20                 	db	32
  3127  00FF2B  20                 	db	32
  3128  00FF2C  20                 	db	32
  3129  00FF2D  00                 	db	0
  3130  00FF2E                     STR_12:
  3131                           
  3132                           ; BSR set to: 57
  3133  00FF2E  42                 	db	66	;'B'
  3134  00FF2F  61                 	db	97	;'a'
  3135  00FF30  74                 	db	116	;'t'
  3136  00FF31  74                 	db	116	;'t'
  3137  00FF32  65                 	db	101	;'e'
  3138  00FF33  72                 	db	114	;'r'
  3139  00FF34  79                 	db	121	;'y'
  3140  00FF35  20                 	db	32
  3141  00FF36  45                 	db	69	;'E'
  3142  00FF37  53                 	db	83	;'S'
  3143  00FF38  52                 	db	82	;'R'
  3144  00FF39  20                 	db	32
  3145  00FF3A  20                 	db	32
  3146  00FF3B  20                 	db	32
  3147  00FF3C  20                 	db	32
  3148  00FF3D  20                 	db	32
  3149  00FF3E  00                 	db	0
  3150  00FF3F                     STR_13:
  3151                           
  3152                           ; BSR set to: 57
  3153  00FF3F  43                 	db	67	;'C'
  3154  00FF40  61                 	db	97	;'a'
  3155  00FF41  6C                 	db	108	;'l'
  3156  00FF42  63                 	db	99	;'c'
  3157  00FF43  75                 	db	117	;'u'
  3158  00FF44  6C                 	db	108	;'l'
  3159  00FF45  61                 	db	97	;'a'
  3160  00FF46  74                 	db	116	;'t'
  3161  00FF47  69                 	db	105	;'i'
  3162  00FF48  6F                 	db	111	;'o'
  3163  00FF49  6E                 	db	110	;'n'
  3164  00FF4A  20                 	db	32
  3165  00FF4B  20                 	db	32
  3166  00FF4C  20                 	db	32
  3167  00FF4D  20                 	db	32
  3168  00FF4E  20                 	db	32
  3169  00FF4F  00                 	db	0
  3170  00FF50                     STR_1:
  3171                           
  3172                           ; BSR set to: 57
  3173  00FF50  20                 	db	32
  3174  00FF51  4D                 	db	77	;'M'
  3175  00FF52  42                 	db	66	;'B'
  3176  00FF53  4D                 	db	77	;'M'
  3177  00FF54  43                 	db	67	;'C'
  3178  00FF55  20                 	db	32
  3179  00FF56  53                 	db	83	;'S'
  3180  00FF57  4F                 	db	79	;'O'
  3181  00FF58  4C                 	db	76	;'L'
  3182  00FF59  41                 	db	65	;'A'
  3183  00FF5A  52                 	db	82	;'R'
  3184  00FF5B  4D                 	db	77	;'M'
  3185  00FF5C  4F                 	db	79	;'O'
  3186  00FF5D  4E                 	db	78	;'N'
  3187  00FF5E  20                 	db	32
  3188  00FF5F  20                 	db	32
  3189  00FF60  00                 	db	0
  3190  00FF61                     STR_21:
  3191                           
  3192                           ; BSR set to: 57
  3193  00FF61  25                 	db	37
  3194  00FF62  64                 	db	100	;'d'
  3195  00FF63  20                 	db	32
  3196  00FF64  25                 	db	37
  3197  00FF65  32                 	db	50	;'2'
  3198  00FF66  2E                 	db	46
  3199  00FF67  34                 	db	52	;'4'
  3200  00FF68  66                 	db	102	;'f'
  3201  00FF69  2C                 	db	44
  3202  00FF6A  20                 	db	32
  3203  00FF6B  25                 	db	37
  3204  00FF6C  64                 	db	100	;'d'
  3205  00FF6D  20                 	db	32
  3206  00FF6E  20                 	db	32
  3207  00FF6F  20                 	db	32
  3208  00FF70  23                 	db	35
  3209  00FF71  00                 	db	0
  3210  00FF72                     STR_14:
  3211                           
  3212                           ; BSR set to: 57
  3213  00FF72  43                 	db	67	;'C'
  3214  00FF73  68                 	db	104	;'h'
  3215  00FF74  65                 	db	101	;'e'
  3216  00FF75  63                 	db	99	;'c'
  3217  00FF76  6B                 	db	107	;'k'
  3218  00FF77  20                 	db	32
  3219  00FF78  33                 	db	51	;'3'
  3220  00FF79  30                 	db	48	;'0'
  3221  00FF7A  20                 	db	32
  3222  00FF7B  73                 	db	115	;'s'
  3223  00FF7C  65                 	db	101	;'e'
  3224  00FF7D  63                 	db	99	;'c'
  3225  00FF7E  6F                 	db	111	;'o'
  3226  00FF7F  6E                 	db	110	;'n'
  3227  00FF80  64                 	db	100	;'d'
  3228  00FF81  73                 	db	115	;'s'
  3229  00FF82  00                 	db	0
  3230  00FF83                     STR_19:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FF83  25                 	db	37
  3234  00FF84  64                 	db	100	;'d'
  3235  00FF85  20                 	db	32
  3236  00FF86  25                 	db	37
  3237  00FF87  32                 	db	50	;'2'
  3238  00FF88  2E                 	db	46
  3239  00FF89  34                 	db	52	;'4'
  3240  00FF8A  66                 	db	102	;'f'
  3241  00FF8B  20                 	db	32
  3242  00FF8C  20                 	db	32
  3243  00FF8D  20                 	db	32
  3244  00FF8E  25                 	db	37
  3245  00FF8F  64                 	db	100	;'d'
  3246  00FF90  20                 	db	32
  3247  00FF91  20                 	db	32
  3248  00FF92  00                 	db	0
  3249  00FF93                     STR_52:
  3250                           
  3251                           ; BSR set to: 57
  3252  00FF93  76                 	db	118	;'v'
  3253  00FF94  74                 	db	116	;'t'
  3254  00FF95  65                 	db	101	;'e'
  3255  00FF96  72                 	db	114	;'r'
  3256  00FF97  6D                 	db	109	;'m'
  3257  00FF98  20                 	db	32
  3258  00FF99  25                 	db	37
  3259  00FF9A  78                 	db	120	;'x'
  3260  00FF9B  3A                 	db	58	;':'
  3261  00FF9C  25                 	db	37
  3262  00FF9D  78                 	db	120	;'x'
  3263  00FF9E  20                 	db	32
  3264  00FF9F  20                 	db	32
  3265  00FFA0  20                 	db	32
  3266  00FFA1  00                 	db	0
  3267  00FFA2                     STR_2:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FFA2  20                 	db	32
  3271  00FFA3  56                 	db	86	;'V'
  3272  00FFA4  65                 	db	101	;'e'
  3273  00FFA5  72                 	db	114	;'r'
  3274  00FFA6  73                 	db	115	;'s'
  3275  00FFA7  69                 	db	105	;'i'
  3276  00FFA8  6F                 	db	111	;'o'
  3277  00FFA9  6E                 	db	110	;'n'
  3278  00FFAA  20                 	db	32
  3279  00FFAB  25                 	db	37
  3280  00FFAC  73                 	db	115	;'s'
  3281  00FFAD  20                 	db	32
  3282  00FFAE  20                 	db	32
  3283  00FFAF  20                 	db	32
  3284  00FFB0  00                 	db	0
  3285  00FFB1                     STR_46:
  3286                           
  3287                           ; BSR set to: 57
  3288  00FFB1  4A                 	db	74	;'J'
  3289  00FFB2  61                 	db	97	;'a'
  3290  00FFB3  6E                 	db	110	;'n'
  3291  00FFB4  20                 	db	32
  3292  00FFB5  20                 	db	32
  3293  00FFB6  31                 	db	49	;'1'
  3294  00FFB7  20                 	db	32
  3295  00FFB8  32                 	db	50	;'2'
  3296  00FFB9  30                 	db	48	;'0'
  3297  00FFBA  32                 	db	50	;'2'
  3298  00FFBB  30                 	db	48	;'0'
  3299  00FFBC  00                 	db	0
  3300  00FFBD                     STR_50:
  3301                           
  3302                           ; BSR set to: 57
  3303  00FFBD  25                 	db	37
  3304  00FFBE  73                 	db	115	;'s'
  3305  00FFBF  20                 	db	32
  3306  00FFC0  20                 	db	32
  3307  00FFC1  20                 	db	32
  3308  00FFC2  20                 	db	32
  3309  00FFC3  20                 	db	32
  3310  00FFC4  20                 	db	32
  3311  00FFC5  20                 	db	32
  3312  00FFC6  00                 	db	0
  3313  00FFC7                     STR_47:
  3314                           
  3315                           ; BSR set to: 57
  3316  00FFC7  31                 	db	49	;'1'
  3317  00FFC8  37                 	db	55	;'7'
  3318  00FFC9  3A                 	db	58	;':'
  3319  00FFCA  33                 	db	51	;'3'
  3320  00FFCB  35                 	db	53	;'5'
  3321  00FFCC  3A                 	db	58	;':'
  3322  00FFCD  33                 	db	51	;'3'
  3323  00FFCE  30                 	db	48	;'0'
  3324  00FFCF  00                 	db	0
  3325  00FFD0                     STR_3:
  3326                           
  3327                           ; BSR set to: 57
  3328  00FFD0  31                 	db	49	;'1'
  3329  00FFD1  2E                 	db	46
  3330  00FFD2  30                 	db	48	;'0'
  3331  00FFD3  30                 	db	48	;'0'
  3332  00FFD4  37                 	db	55	;'7'
  3333  00FFD5  32                 	db	50	;'2'
  3334  00FFD6  00                 	db	0
  3335  00FFD7                     STR_66:
  3336                           
  3337                           ; BSR set to: 57
  3338  00FFD7  49                 	db	73	;'I'
  3339  00FFD8  4E                 	db	78	;'N'
  3340  00FFD9  46                 	db	70	;'F'
  3341  00FFDA  00                 	db	0
  3342  00FFDB                     STR_70:
  3343                           
  3344                           ; BSR set to: 57
  3345  00FFDB  4E                 	db	78	;'N'
  3346  00FFDC  41                 	db	65	;'A'
  3347  00FFDD  4E                 	db	78	;'N'
  3348  00FFDE  00                 	db	0
  3349  00FFDF                     STR_67:
  3350                           
  3351                           ; BSR set to: 57
  3352  00FFDF  69                 	db	105	;'i'
  3353  00FFE0  6E                 	db	110	;'n'
  3354  00FFE1  66                 	db	102	;'f'
  3355  00FFE2  00                 	db	0
  3356  00FFE3                     STR_71:
  3357                           
  3358                           ; BSR set to: 57
  3359  00FFE3  6E                 	db	110	;'n'
  3360  00FFE4  61                 	db	97	;'a'
  3361  00FFE5  6E                 	db	110	;'n'
  3362  00FFE6  00                 	db	0
  3363  00FFE7                     STR_97:
  3364                           
  3365                           ; BSR set to: 57
  3366  00FFE7  6C                 	db	108	;'l'
  3367  00FFE8  58                 	db	88	;'X'
  3368  00FFE9  00                 	db	0
  3369  00FFEA                     STR_74:
  3370                           
  3371                           ; BSR set to: 57
  3372  00FFEA  6C                 	db	108	;'l'
  3373  00FFEB  64                 	db	100	;'d'
  3374  00FFEC  00                 	db	0
  3375  00FFED                     STR_83:
  3376                           
  3377                           ; BSR set to: 57
  3378  00FFED  6C                 	db	108	;'l'
  3379  00FFEE  66                 	db	102	;'f'
  3380  00FFEF  00                 	db	0
  3381  00FFF0                     STR_78:
  3382                           
  3383                           ; BSR set to: 57
  3384  00FFF0  6C                 	db	108	;'l'
  3385  00FFF1  69                 	db	105	;'i'
  3386  00FFF2  00                 	db	0
  3387  00FFF3                     STR_88:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FFF3  6C                 	db	108	;'l'
  3391  00FFF4  75                 	db	117	;'u'
  3392  00FFF5  00                 	db	0
  3393  00FFF6                     STR_93:
  3394                           
  3395                           ; BSR set to: 57
  3396  00FFF6  6C                 	db	108	;'l'
  3397  00FFF7  78                 	db	120	;'x'
  3398  00FFF8  00                 	db	0
  3399  00FFF9                     STR_44:
  3400                           
  3401                           ; BSR set to: 57
  3402  00FFF9  25                 	db	37
  3403  00FFFA  63                 	db	99	;'c'
  3404  00FFFB  00                 	db	0
  3405  00FFFC                     STR_43:
  3406                           
  3407                           ; BSR set to: 57
  3408  00FFFC  25                 	db	37
  3409  00FFFD  73                 	db	115	;'s'
  3410  00FFFE  00                 	db	0
  3411  0000                     
  3412                           ; #config settings
  3413  00FFFF  00                 	db	0	; dummy byte at the end
  3414  0000                     
  3415                           	psect	cinit
  3416  01A2B2                     __pcinit:
  3417                           	opt callstack 0
  3418  01A2B2                     start_initialization:
  3419                           	opt callstack 0
  3420  01A2B2                     __initialization:
  3421                           	opt callstack 0
  3422                           
  3423                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3424                           ; load TBLPTR registers with __pidataBIGRAM
  3425  01A2B2  0E00               	movlw	low __pidataBIGRAM
  3426  01A2B4  6EF6               	movwf	tblptrl,c
  3427  01A2B6  0E6B               	movlw	high __pidataBIGRAM
  3428  01A2B8  6EF7               	movwf	tblptrh,c
  3429  01A2BA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3430  01A2BC  6EF8               	movwf	tblptru,c
  3431  01A2BE  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3432  01A2C2  EE20 F32B          	lfsr	2,811
  3433  01A2C6                     copy_data0:
  3434  01A2C6  0009               	tblrd		*+
  3435  01A2C8  006F FFD7 FFEE     	movff	tablat,postinc0
  3436  01A2CE  50DD               	movf	postdec2,w,c
  3437  01A2D0  50D9               	movf	fsr2l,w,c
  3438  01A2D2  E1F9               	bnz	copy_data0
  3439  01A2D4  50DA               	movf	fsr2h,w,c
  3440  01A2D6  E1F7               	bnz	copy_data0
  3441                           
  3442                           ; Initialize objects allocated to BANK1 (239 bytes)
  3443                           ; load TBLPTR registers with __pidataBANK1
  3444  01A2D8  0E0E               	movlw	low __pidataBANK1
  3445  01A2DA  6EF6               	movwf	tblptrl,c
  3446  01A2DC  0E9F               	movlw	high __pidataBANK1
  3447  01A2DE  6EF7               	movwf	tblptrh,c
  3448  01A2E0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3449  01A2E2  6EF8               	movwf	tblptru,c
  3450  01A2E4  EE00  F100         	lfsr	0,__pdataBANK1
  3451  01A2E8  EE20 F0EF          	lfsr	2,239
  3452  01A2EC                     copy_data1:
  3453  01A2EC  0009               	tblrd		*+
  3454  01A2EE  006F FFD7 FFEE     	movff	tablat,postinc0
  3455  01A2F4  50DD               	movf	postdec2,w,c
  3456  01A2F6  50D9               	movf	fsr2l,w,c
  3457  01A2F8  E1F9               	bnz	copy_data1
  3458                           
  3459                           ; Initialize objects allocated to BANK0 (14 bytes)
  3460                           ; load TBLPTR registers with __pidataBANK0
  3461  01A2FA  0EFA               	movlw	low __pidataBANK0
  3462  01A2FC  6EF6               	movwf	tblptrl,c
  3463  01A2FE  0EBF               	movlw	high __pidataBANK0
  3464  01A300  6EF7               	movwf	tblptrh,c
  3465  01A302  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3466  01A304  6EF8               	movwf	tblptru,c
  3467  01A306  EE00  F0F0         	lfsr	0,__pdataBANK0
  3468  01A30A  EE20 F00E          	lfsr	2,14
  3469  01A30E                     copy_data2:
  3470  01A30E  0009               	tblrd		*+
  3471  01A310  006F FFD7 FFEE     	movff	tablat,postinc0
  3472  01A316  50DD               	movf	postdec2,w,c
  3473  01A318  50D9               	movf	fsr2l,w,c
  3474  01A31A  E1F9               	bnz	copy_data2
  3475                           
  3476                           ; Clear objects allocated to BIGRAM (482 bytes)
  3477  01A31C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3478  01A320  EE20 F1E2          	lfsr	2,482
  3479  01A324                     clear_0:
  3480  01A324  6AEE               	clrf	postinc0,c
  3481  01A326  50DD               	movf	postdec2,w,c
  3482  01A328  50D9               	movf	fsr2l,w,c
  3483  01A32A  E1FC               	bnz	clear_0
  3484  01A32C  50DA               	movf	fsr2h,w,c
  3485  01A32E  E1FA               	bnz	clear_0
  3486                           
  3487                           ; Clear objects allocated to BANK4 (255 bytes)
  3488  01A330  EE01  F000         	lfsr	0,__pbssBANK4
  3489  01A334  EE20 F0FF          	lfsr	2,255
  3490  01A338                     clear_1:
  3491  01A338  6AEE               	clrf	postinc0,c
  3492  01A33A  50DD               	movf	postdec2,w,c
  3493  01A33C  50D9               	movf	fsr2l,w,c
  3494  01A33E  E1FC               	bnz	clear_1
  3495  01A340  50DA               	movf	fsr2h,w,c
  3496  01A342  E1FA               	bnz	clear_1
  3497                           
  3498                           ; Clear objects allocated to BANK3 (198 bytes)
  3499  01A344  EE00  F300         	lfsr	0,__pbssBANK3
  3500  01A348  0EC6               	movlw	198
  3501  01A34A                     clear_2:
  3502  01A34A  6AEE               	clrf	postinc0,c
  3503  01A34C  06E8               	decf	wreg,f,c
  3504  01A34E  E1FD               	bnz	clear_2
  3505                           
  3506                           ; Clear objects allocated to BANK2 (231 bytes)
  3507  01A350  EE00  F200         	lfsr	0,__pbssBANK2
  3508  01A354  0EE7               	movlw	231
  3509  01A356                     clear_3:
  3510  01A356  6AEE               	clrf	postinc0,c
  3511  01A358  06E8               	decf	wreg,f,c
  3512  01A35A  E1FD               	bnz	clear_3
  3513                           
  3514                           ; Clear objects allocated to BANK0 (119 bytes)
  3515  01A35C  EE00  F060         	lfsr	0,__pbssBANK0
  3516  01A360  0E77               	movlw	119
  3517  01A362                     clear_4:
  3518  01A362  6AEE               	clrf	postinc0,c
  3519  01A364  06E8               	decf	wreg,f,c
  3520  01A366  E1FD               	bnz	clear_4
  3521                           
  3522                           ; Clear objects allocated to COMRAM (14 bytes)
  3523  01A368  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3524  01A36C  0E0E               	movlw	14
  3525  01A36E                     clear_5:
  3526  01A36E  6AEE               	clrf	postinc0,c
  3527  01A370  06E8               	decf	wreg,f,c
  3528  01A372  E1FD               	bnz	clear_5
  3529                           
  3530                           ;
  3531                           ; Setup IVTBASE
  3532                           ;
  3533  01A374  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3534  01A376  6ED5               	movwf	213,c
  3535  01A378  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3536  01A37A  6ED6               	movwf	214,c
  3537  01A37C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3538  01A37E  6ED7               	movwf	215,c
  3539  01A380                     end_of_initialization:
  3540                           	opt callstack 0
  3541  01A380                     __end_of__initialization:
  3542                           	opt callstack 0
  3543  01A380  0100               	movlb	0
  3544  01A382  EF22  F089         	goto	_main	;jump to C main() function
  3545                           
  3546                           	psect	bssCOMRAM
  3547  00003A                     __pbssCOMRAM:
  3548                           	opt callstack 0
  3549  00003A                     _width:
  3550                           	opt callstack 0
  3551  00003A                     	ds	2
  3552  00003C                     _prec:
  3553                           	opt callstack 0
  3554  00003C                     	ds	2
  3555  00003E                     _flags:
  3556                           	opt callstack 0
  3557  00003E                     	ds	2
  3558  000040                     esr_check@esr_state:
  3559                           	opt callstack 0
  3560  000040                     	ds	1
  3561  000041                     calc_bsoc@log_update_wait:
  3562                           	opt callstack 0
  3563  000041                     	ds	1
  3564  000042                     check_day_time@day_delay:
  3565                           	opt callstack 0
  3566  000042                     	ds	1
  3567  000043                     _uart2RxHead:
  3568                           	opt callstack 0
  3569  000043                     	ds	1
  3570  000044                     _uart2TxBufferRemaining:
  3571                           	opt callstack 0
  3572  000044                     	ds	1
  3573  000045                     _uart2TxTail:
  3574                           	opt callstack 0
  3575  000045                     	ds	1
  3576  000046                     _uart1RxTail:
  3577                           	opt callstack 0
  3578  000046                     	ds	1
  3579  000047                     _uart1RxHead:
  3580                           	opt callstack 0
  3581  000047                     	ds	1
  3582                           
  3583                           	psect	bssBANK0
  3584  000060                     __pbssBANK0:
  3585                           	opt callstack 0
  3586  000060                     _spi_link:
  3587                           	opt callstack 0
  3588  000060                     	ds	12
  3589  00006C                     _uart1RxBuffer:
  3590                           	opt callstack 0
  3591  00006C                     	ds	8
  3592  000074                     spinners@s:
  3593                           	opt callstack 0
  3594  000074                     	ds	6
  3595  00007A                     floorf@F524:
  3596                           	opt callstack 0
  3597  00007A                     	ds	4
  3598  00007E                     fabsf@F463:
  3599                           	opt callstack 0
  3600  00007E                     	ds	4
  3601  000082                     ___fpclassifyf@F463:
  3602                           	opt callstack 0
  3603  000082                     	ds	4
  3604  000086                     calc_ror_data@bcror:
  3605                           	opt callstack 0
  3606  000086                     	ds	4
  3607  00008A                     calc_ror_data@bvror:
  3608                           	opt callstack 0
  3609  00008A                     	ds	4
  3610  00008E                     calc_model_data@bcror:
  3611                           	opt callstack 0
  3612  00008E                     	ds	4
  3613  000092                     calc_model_data@bvror:
  3614                           	opt callstack 0
  3615  000092                     	ds	4
  3616  000096                     _utctime:
  3617                           	opt callstack 0
  3618  000096                     	ds	4
  3619  00009A                     wdtdelay@dcount:
  3620                           	opt callstack 0
  3621  00009A                     	ds	4
  3622  00009E                     _P:
  3623                           	opt callstack 0
  3624  00009E                     	ds	4
  3625  0000A2                     _TMR3_InterruptHandler:
  3626                           	opt callstack 0
  3627  0000A2                     	ds	3
  3628  0000A5                     _TMR5_InterruptHandler:
  3629                           	opt callstack 0
  3630  0000A5                     	ds	3
  3631  0000A8                     _TMR6_InterruptHandler:
  3632                           	opt callstack 0
  3633  0000A8                     	ds	3
  3634  0000AB                     _ADCC_ADTI_InterruptHandler:
  3635                           	opt callstack 0
  3636  0000AB                     	ds	3
  3637  0000AE                     _ADCC_ADI_InterruptHandler:
  3638                           	opt callstack 0
  3639  0000AE                     	ds	3
  3640  0000B1                     _UART1_RxInterruptHandler:
  3641                           	opt callstack 0
  3642  0000B1                     	ds	3
  3643  0000B4                     _UART2_TxInterruptHandler:
  3644                           	opt callstack 0
  3645  0000B4                     	ds	3
  3646  0000B7                     _UART2_RxInterruptHandler:
  3647                           	opt callstack 0
  3648  0000B7                     	ds	3
  3649  0000BA                     _INT1_InterruptHandler:
  3650                           	opt callstack 0
  3651  0000BA                     	ds	3
  3652  0000BD                     _INT0_InterruptHandler:
  3653                           	opt callstack 0
  3654  0000BD                     	ds	3
  3655  0000C0                     _nout:
  3656                           	opt callstack 0
  3657  0000C0                     	ds	2
  3658  0000C2                     TMR3_ISR@CountCallBack:
  3659                           	opt callstack 0
  3660  0000C2                     	ds	2
  3661  0000C4                     _timer3ReloadVal:
  3662                           	opt callstack 0
  3663  0000C4                     	ds	2
  3664  0000C6                     TMR5_ISR@CountCallBack:
  3665                           	opt callstack 0
  3666  0000C6                     	ds	2
  3667  0000C8                     _timer5ReloadVal:
  3668                           	opt callstack 0
  3669  0000C8                     	ds	2
  3670  0000CA                     _mode_sw:
  3671                           	opt callstack 0
  3672  0000CA                     	ds	1
  3673  0000CB                     _uart2RxCount:
  3674                           	opt callstack 0
  3675  0000CB                     	ds	1
  3676  0000CC                     _uart2RxTail:
  3677                           	opt callstack 0
  3678  0000CC                     	ds	1
  3679  0000CD                     _uart2TxHead:
  3680                           	opt callstack 0
  3681  0000CD                     	ds	1
  3682  0000CE                     _uart1RxCount:
  3683                           	opt callstack 0
  3684  0000CE                     	ds	1
  3685  0000CF                     _seed:
  3686                           	opt callstack 0
  3687  0000CF                     	ds	8
  3688                           
  3689                           	psect	dataBANK0
  3690  0000F0                     __pdataBANK0:
  3691                           	opt callstack 0
  3692  0000F0                     stoa@F1166:
  3693                           	opt callstack 0
  3694  0000F0                     	ds	7
  3695  0000F7                     _H:
  3696                           	opt callstack 0
  3697  0000F7                     	ds	7
  3698                           
  3699                           	psect	dataBANK1
  3700  000100                     __pdataBANK1:
  3701                           	opt callstack 0
  3702  000100                     _R:
  3703                           	opt callstack 0
  3704  000100                     	ds	48
  3705  000130                     _V:
  3706                           	opt callstack 0
  3707  000130                     	ds	191
  3708                           
  3709                           	psect	bssBANK2
  3710  000200                     __pbssBANK2:
  3711                           	opt callstack 0
  3712  000200                     lp_filter@smooth:
  3713                           	opt callstack 0
  3714  000200                     	ds	84
  3715  000254                     _S:
  3716                           	opt callstack 0
  3717  000254                     	ds	41
  3718  00027D                     _tickCount:
  3719                           	opt callstack 0
  3720  00027D                     	ds	26
  3721  000297                     _dbuf:
  3722                           	opt callstack 0
  3723  000297                     	ds	80
  3724                           
  3725                           	psect	bssBANK3
  3726  000300                     __pbssBANK3:
  3727                           	opt callstack 0
  3728  000300                     _uart2TxBuffer:
  3729                           	opt callstack 0
  3730  000300                     	ds	64
  3731  000340                     _ring_buf2:
  3732                           	opt callstack 0
  3733  000340                     	ds	67
  3734  000383                     _ring_buf1:
  3735                           	opt callstack 0
  3736  000383                     	ds	67
  3737                           
  3738                           	psect	bssBANK4
  3739  000400                     __pbssBANK4:
  3740                           	opt callstack 0
  3741  000400                     _uart2RxBuffer:
  3742                           	opt callstack 0
  3743  000400                     	ds	255
  3744                           
  3745                           	psect	bssBIGRAM
  3746  00082A                     __pbssBIGRAM:
  3747                           	opt callstack 0
  3748  00082A                     _D:
  3749                           	opt callstack 0
  3750  00082A                     	ds	482
  3751                           
  3752                           	psect	dataBIGRAM
  3753  0004FF                     __pdataBIGRAM:
  3754                           	opt callstack 0
  3755  0004FF                     _port_data:
  3756                           	opt callstack 0
  3757  0004FF                     	ds	512
  3758  0006FF                     _C:
  3759                           	opt callstack 0
  3760  0006FF                     	ds	299
  3761                           
  3762                           	psect	cstackBANK0
  3763  0000D7                     __pcstackBANK0:
  3764                           	opt callstack 0
  3765  0000D7                     ??_TMR3_ISR:
  3766                           
  3767                           ; 1 bytes @ 0x0
  3768  0000D7                     	ds	25
  3769                           
  3770                           	psect	cstackCOMRAM
  3771  000021                     __pcstackCOMRAM:
  3772                           	opt callstack 0
  3773  000021                     ??_ADCC_ThresholdISR:
  3774  000021                     
  3775                           ; 1 bytes @ 0x0
  3776  000021                     	ds	5
  3777  000026                     ??_TMR6_ISR:
  3778                           
  3779                           ; 1 bytes @ 0x5
  3780  000026                     	ds	1
  3781  000027                     ??_INT1_ISR:
  3782  000027                     
  3783                           ; 1 bytes @ 0x6
  3784  000027                     	ds	4
  3785  00002B                     ??_TMR5_ISR:
  3786                           
  3787                           ; 1 bytes @ 0xA
  3788  00002B                     	ds	15
  3789                           
  3790 ;;
  3791 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3792 ;;
  3793 ;; *************** function _main *****************
  3794 ;; Defined at:
  3795 ;;		line 187 in file "main.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  esr_temp        4  [STACK] float 
  3800 ;;  i_esr           2  [STACK] unsigned short 
  3801 ;;  shape           1  [STACK] unsigned char 
  3802 ;;  k               1  [STACK] unsigned char 
  3803 ;;  j               1  [STACK] unsigned char 
  3804 ;;  i               1  [STACK] unsigned char 
  3805 ;;  inp_index       1  [STACK] unsigned char 
  3806 ;;  mode            1  [STACK] enum E17013
  3807 ;;  i_ror           1  [STACK] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1  [STACK] void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels required when called:   28
  3823 ;; This function calls:
  3824 ;;		_SYSTEM_Initialize
  3825 ;;		_StartTimer
  3826 ;;		_TimerDone
  3827 ;;		_WaitMs
  3828 ;;		___fladd
  3829 ;;		___flge
  3830 ;;		___fltol
  3831 ;;		_calc_model_data
  3832 ;;		_calc_ror_data
  3833 ;;		_check_adc_scan
  3834 ;;		_check_enter_button
  3835 ;;		_check_help
  3836 ;;		_clear_adc_scan
  3837 ;;		_clear_hid_pflags
  3838 ;;		_conv_raw_result
  3839 ;;		_convert_adc_data
  3840 ;;		_eaDogM_WriteCommand
  3841 ;;		_esr_check
  3842 ;;		_fabsf
  3843 ;;		_get_raw_result
  3844 ;;		_get_switch
  3845 ;;		_get_vterm_ptr
  3846 ;;		_hid_display
  3847 ;;		_init_bsoc
  3848 ;;		_init_display
  3849 ;;		_init_port_dma
  3850 ;;		_lp_filter
  3851 ;;		_mode_lamp_dim
  3852 ;;		_set_display_info
  3853 ;;		_set_load_relay_one
  3854 ;;		_set_load_relay_two
  3855 ;;		_set_vterm
  3856 ;;		_spinners
  3857 ;;		_sprintf
  3858 ;;		_srand
  3859 ;;		_start_adc_scan
  3860 ;;		_start_switch_handler
  3861 ;;		_static_soc
  3862 ;;		_update_lcd
  3863 ;; This function is called by:
  3864 ;;		Startup code after reset
  3865 ;; This function uses a reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text0
  3869  011244                     __ptext0:
  3870                           	opt callstack 0
  3871  011244                     _main:
  3872                           	opt callstack 0
  3873                           
  3874                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3875  011244  0E11               	movlw	17
  3876  011246  26E1               	addwf	fsr1l,f,c
  3877  011248  0E00               	movlw	0
  3878  01124A  22E2               	addwfc	fsr1h,f,c
  3879                           
  3880                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3881                           ;stkvar	_inp_index @ sp[(-17)+14]
  3882                           
  3883                           ;incstack = 0
  3884  01124C  0EFD               	movlw	-3
  3885  01124E  6AE3               	clrf	plusw1,c
  3886                           
  3887                           ;stkvar	_i @ sp[(-17)+13]
  3888  011250  0EFC               	movlw	-4
  3889  011252  6AE3               	clrf	plusw1,c
  3890                           
  3891                           ;stkvar	_j @ sp[(-17)+12]
  3892  011254  0EFB               	movlw	-5
  3893  011256  6AE3               	clrf	plusw1,c
  3894  011258  2AE3               	incf	plusw1,f,c
  3895                           
  3896                           ;stkvar	_k @ sp[(-17)+11]
  3897  01125A  0EFA               	movlw	-6
  3898  01125C  6AE3               	clrf	plusw1,c
  3899  01125E  82E3               	bsf	plusw1,1,c
  3900                           
  3901                           ;main.c: 193:  SYSTEM_Initialize();
  3902  011260  ECBD  F0D9         	call	_SYSTEM_Initialize	;wreg free
  3903                           
  3904                           ; BSR set to: 60
  3905                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  3906  011264  8ED2               	bsf	210,7,c	;volatile
  3907                           
  3908                           ; BSR set to: 60
  3909                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  3910  011266  8CD2               	bsf	210,6,c	;volatile
  3911                           
  3912                           ; BSR set to: 60
  3913                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  3914  011268  0101               	movlb	1	; () banked
  3915  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;main.c: 206:  WaitMs(300);
  3919  01126C  0E2C               	movlw	44
  3920  01126E  6EE6               	movwf	postinc1,c
  3921  011270  0E01               	movlw	1
  3922  011272  6EE6               	movwf	postinc1,c
  3923  011274  ECF0  F0DB         	call	_WaitMs	;wreg free
  3924                           
  3925                           ;main.c: 207:  if (PORTBbits.RB0) {
  3926  011278  A0CB               	btfss	203,0,c	;volatile
  3927  01127A  D004               	goto	l12891
  3928                           
  3929                           ;main.c: 208:   mode = UI_STATE_HOST;
  3930                           ;stkvar	_mode @ sp[(-17)+15]
  3931  01127C  0EFE               	movlw	-2
  3932  01127E  6AE3               	clrf	plusw1,c
  3933  011280  2AE3               	incf	plusw1,f,c
  3934                           
  3935                           ;main.c: 209:  } else {
  3936  011282  D004               	goto	l12893
  3937  011284                     l12891:
  3938                           
  3939                           ;main.c: 210:   mode = UI_STATE_LOG;
  3940                           ;stkvar	_mode @ sp[(-17)+15]
  3941  011284  0EFE               	movlw	-2
  3942  011286  6AE3               	clrf	plusw1,c
  3943  011288  80E3               	bsf	plusw1,0,c
  3944  01128A  82E3               	bsf	plusw1,1,c	;indir
  3945  01128C                     l12893:
  3946                           
  3947                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  3948                           ;stkvar	_mode @ sp[(-17)+15]
  3949  01128C  0EFE               	movlw	-2
  3950  01128E  04E3               	decf	plusw1,w,c
  3951  011290  A4D8               	btfss	status,2,c
  3952  011292  D007               	goto	l1324
  3953                           
  3954                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  3955  011294  80BD               	bsf	189,0,c	;volatile
  3956                           
  3957                           ;main.c: 215:   V.mode_pwm = 70;
  3958  011296  0E00               	movlw	0
  3959  011298  0101               	movlb	1	; () banked
  3960  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  3961  01129C  0E46               	movlw	70
  3962  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  3963                           
  3964                           ;main.c: 216:  } else {
  3965  0112A0  D004               	goto	l12897
  3966  0112A2                     l1324:
  3967  0112A2  90BD               	bcf	189,0,c	;volatile
  3968                           
  3969                           ;main.c: 218:   V.mode_pwm = 0;
  3970  0112A4  0101               	movlb	1	; () banked
  3971  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  3972  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  3973  0112AA                     l12897:
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  3977  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  3978  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  3979  0112B6  EC91  F0DF         	call	_mode_lamp_dim	;wreg free
  3980  0112BA  D32C               	goto	l13019
  3981  0112BC                     l12899:
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;main.c: 228:    init_port_dma();
  3985  0112BC  EC5A  F0DC         	call	_init_port_dma	;wreg free
  3986                           
  3987                           ; BSR set to: 59
  3988                           ;main.c: 230:    init_display();
  3989  0112C0  ECFF  F0CF         	call	_init_display	;wreg free
  3990                           
  3991                           ; BSR set to: 61
  3992                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  3993  0112C4  0E0C               	movlw	12
  3994  0112C6  6EE6               	movwf	postinc1,c
  3995  0112C8  EC04  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;main.c: 235:    set_load_relay_one(1);
  3999  0112CC  0E01               	movlw	1
  4000  0112CE  6EE6               	movwf	postinc1,c
  4001  0112D0  ECE5  F0DF         	call	_set_load_relay_one	;wreg free
  4002                           
  4003                           ;main.c: 236:    set_load_relay_two(1);
  4004  0112D4  0E01               	movlw	1
  4005  0112D6  6EE6               	movwf	postinc1,c
  4006  0112D8  ECDD  F0DF         	call	_set_load_relay_two	;wreg free
  4007                           
  4008                           ;main.c: 238:    V.ui_state = mode;
  4009                           ;stkvar	_mode @ sp[(-17)+15]
  4010  0112DC  0EFE               	movlw	-2
  4011  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4012                           
  4013                           ;main.c: 239:    srand(1957);
  4014  0112E4  0EA5               	movlw	165
  4015  0112E6  6EE6               	movwf	postinc1,c
  4016  0112E8  0E07               	movlw	7
  4017  0112EA  6EE6               	movwf	postinc1,c
  4018  0112EC  EC26  F0DC         	call	_srand	;wreg free
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 240:    set_vterm(0);
  4022  0112F0  0E00               	movlw	0
  4023  0112F2  6EE6               	movwf	postinc1,c
  4024  0112F4  EC3B  F0DF         	call	_set_vterm	;wreg free
  4025                           
  4026                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4027  0112F8  0E50               	movlw	low STR_1
  4028  0112FA  6EE6               	movwf	postinc1,c
  4029  0112FC  0EFF               	movlw	high STR_1
  4030  0112FE  6EE6               	movwf	postinc1,c
  4031  011300  0E00               	movlw	0
  4032  011302  6EE6               	movwf	postinc1,c
  4033  011304  0E00               	movlw	0
  4034  011306  6EE6               	movwf	postinc1,c
  4035  011308  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4036  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4037  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4038  011318  0E04               	movlw	4
  4039  01131A  6EE6               	movwf	postinc1,c
  4040  01131C  EC81  F0CE         	call	_sprintf	;wreg free
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0072");
  4044  011320  0ED0               	movlw	low STR_3
  4045  011322  6EE6               	movwf	postinc1,c
  4046  011324  0EFF               	movlw	high STR_3
  4047  011326  6EE6               	movwf	postinc1,c
  4048  011328  0EA2               	movlw	low STR_2
  4049  01132A  6EE6               	movwf	postinc1,c
  4050  01132C  0EFF               	movlw	high STR_2
  4051  01132E  6EE6               	movwf	postinc1,c
  4052  011330  0E00               	movlw	0
  4053  011332  6EE6               	movwf	postinc1,c
  4054  011334  0E01               	movlw	1
  4055  011336  6EE6               	movwf	postinc1,c
  4056  011338  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4057  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4058  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4059  011348  0E06               	movlw	6
  4060  01134A  6EE6               	movwf	postinc1,c
  4061  01134C  EC81  F0CE         	call	_sprintf	;wreg free
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4065  011350  0E1D               	movlw	low STR_4
  4066  011352  6EE6               	movwf	postinc1,c
  4067  011354  0EFF               	movlw	high STR_4
  4068  011356  6EE6               	movwf	postinc1,c
  4069  011358  0E00               	movlw	0
  4070  01135A  6EE6               	movwf	postinc1,c
  4071  01135C  0E02               	movlw	2
  4072  01135E  6EE6               	movwf	postinc1,c
  4073  011360  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4074  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4075  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4076  011370  0E04               	movlw	4
  4077  011372  6EE6               	movwf	postinc1,c
  4078  011374  EC81  F0CE         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                ");
  4082  011378  0E16               	movlw	low (STR_58+2)
  4083  01137A  6EE6               	movwf	postinc1,c
  4084  01137C  0EFE               	movlw	high (STR_58+2)
  4085  01137E  6EE6               	movwf	postinc1,c
  4086  011380  0E02               	movlw	2
  4087  011382  6EE6               	movwf	postinc1,c
  4088  011384  0E00               	movlw	0
  4089  011386  6EE6               	movwf	postinc1,c
  4090  011388  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4091  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4092  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4093  011398  0E04               	movlw	4
  4094  01139A  6EE6               	movwf	postinc1,c
  4095  01139C  EC81  F0CE         	call	_sprintf	;wreg free
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                ");
  4099  0113A0  0E16               	movlw	low (STR_58+2)
  4100  0113A2  6EE6               	movwf	postinc1,c
  4101  0113A4  0EFE               	movlw	high (STR_58+2)
  4102  0113A6  6EE6               	movwf	postinc1,c
  4103  0113A8  0E02               	movlw	2
  4104  0113AA  6EE6               	movwf	postinc1,c
  4105  0113AC  0E01               	movlw	1
  4106  0113AE  6EE6               	movwf	postinc1,c
  4107  0113B0  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4108  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4109  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4110  0113C0  0E04               	movlw	4
  4111  0113C2  6EE6               	movwf	postinc1,c
  4112  0113C4  EC81  F0CE         	call	_sprintf	;wreg free
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                ");
  4116  0113C8  0E16               	movlw	low (STR_58+2)
  4117  0113CA  6EE6               	movwf	postinc1,c
  4118  0113CC  0EFE               	movlw	high (STR_58+2)
  4119  0113CE  6EE6               	movwf	postinc1,c
  4120  0113D0  0E02               	movlw	2
  4121  0113D2  6EE6               	movwf	postinc1,c
  4122  0113D4  0E02               	movlw	2
  4123  0113D6  6EE6               	movwf	postinc1,c
  4124  0113D8  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4125  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4126  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4127  0113E8  0E04               	movlw	4
  4128  0113EA  6EE6               	movwf	postinc1,c
  4129  0113EC  EC81  F0CE         	call	_sprintf	;wreg free
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 247:    update_lcd(0);
  4133  0113F0  0E00               	movlw	0
  4134  0113F2  6EE6               	movwf	postinc1,c
  4135  0113F4  ECF9  F0CD         	call	_update_lcd	;wreg free
  4136                           
  4137                           ;main.c: 248:    WaitMs(1000);
  4138  0113F8  0EE8               	movlw	232
  4139  0113FA  6EE6               	movwf	postinc1,c
  4140  0113FC  0E03               	movlw	3
  4141  0113FE  6EE6               	movwf	postinc1,c
  4142  011400  ECF0  F0DB         	call	_WaitMs	;wreg free
  4143                           
  4144                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4145  011404  0EFA               	movlw	250
  4146  011406  6EE6               	movwf	postinc1,c
  4147  011408  0E00               	movlw	0
  4148  01140A  6EE6               	movwf	postinc1,c
  4149  01140C  0E0A               	movlw	10
  4150  01140E  6EE6               	movwf	postinc1,c
  4151  011410  ECFB  F0DA         	call	_StartTimer	;wreg free
  4152                           
  4153                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4154  011414  0EC8               	movlw	200
  4155  011416  6EE6               	movwf	postinc1,c
  4156  011418  0E00               	movlw	0
  4157  01141A  6EE6               	movwf	postinc1,c
  4158  01141C  0E01               	movlw	1
  4159  01141E  6EE6               	movwf	postinc1,c
  4160  011420  ECFB  F0DA         	call	_StartTimer	;wreg free
  4161                           
  4162                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4163  011424  0EB8               	movlw	184
  4164  011426  6EE6               	movwf	postinc1,c
  4165  011428  0E0B               	movlw	11
  4166  01142A  6EE6               	movwf	postinc1,c
  4167  01142C  0E07               	movlw	7
  4168  01142E  6EE6               	movwf	postinc1,c
  4169  011430  ECFB  F0DA         	call	_StartTimer	;wreg free
  4170                           
  4171                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4172  011434  0EDC               	movlw	220
  4173  011436  6EE6               	movwf	postinc1,c
  4174  011438  0E05               	movlw	5
  4175  01143A  6EE6               	movwf	postinc1,c
  4176  01143C  0E0B               	movlw	11
  4177  01143E  6EE6               	movwf	postinc1,c
  4178  011440  ECFB  F0DA         	call	_StartTimer	;wreg free
  4179                           
  4180                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4181  011444  0EB8               	movlw	184
  4182  011446  6EE6               	movwf	postinc1,c
  4183  011448  0E0B               	movlw	11
  4184  01144A  6EE6               	movwf	postinc1,c
  4185  01144C  0E09               	movlw	9
  4186  01144E  6EE6               	movwf	postinc1,c
  4187  011450  ECFB  F0DA         	call	_StartTimer	;wreg free
  4188                           
  4189                           ;main.c: 255:    start_adc_scan();
  4190  011454  ECD0  F0D7         	call	_start_adc_scan	;wreg free
  4191                           
  4192                           ;main.c: 256:    start_switch_handler();
  4193  011458  EC0C  F0DF         	call	_start_switch_handler	;wreg free
  4194                           
  4195                           ; BSR set to: 57
  4196                           ;main.c: 257:    WaitMs(1000);
  4197  01145C  0EE8               	movlw	232
  4198  01145E  6EE6               	movwf	postinc1,c
  4199  011460  0E03               	movlw	3
  4200  011462  6EE6               	movwf	postinc1,c
  4201  011464  ECF0  F0DB         	call	_WaitMs	;wreg free
  4202                           
  4203                           ;main.c: 262:    i_ror = 1;
  4204                           ;stkvar	_i_ror @ sp[(-17)+16]
  4205  011468  0EFF               	movlw	-1
  4206  01146A  6AE3               	clrf	plusw1,c
  4207  01146C  2AE3               	incf	plusw1,f,c
  4208  01146E                     l12949:
  4209                           
  4210                           ;main.c: 264:     calc_ror_data();
  4211  01146E  ECA4  F0C5         	call	_calc_ror_data	;wreg free
  4212                           
  4213                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4214  011472  0E00               	movlw	0
  4215  011474  6EE6               	movwf	postinc1,c
  4216  011476  0E04               	movlw	4
  4217  011478  6EE6               	movwf	postinc1,c
  4218  01147A  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  4219  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4220  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4221  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4222  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4223  011496  0E0B               	movlw	low STR_8
  4224  011498  6EE6               	movwf	postinc1,c
  4225  01149A  0EFF               	movlw	high STR_8
  4226  01149C  6EE6               	movwf	postinc1,c
  4227  01149E  0E00               	movlw	0
  4228  0114A0  6EE6               	movwf	postinc1,c
  4229  0114A2  0E01               	movlw	1
  4230  0114A4  6EE6               	movwf	postinc1,c
  4231  0114A6  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4232  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4233  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4234  0114B6  0E08               	movlw	8
  4235  0114B8  6EE6               	movwf	postinc1,c
  4236  0114BA  EC81  F0CE         	call	_sprintf	;wreg free
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4240  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4241  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4242  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4243  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4244  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4245                           
  4246                           ;stkvar	_i_ror @ sp[(-21)+16]
  4247  0114DA  0EFB               	movlw	-5
  4248  0114DC  50E3               	movf	plusw1,w,c
  4249  0114DE  6EE6               	movwf	postinc1,c
  4250  0114E0  0E00               	movlw	0
  4251  0114E2  6EE6               	movwf	postinc1,c
  4252  0114E4  0E00               	movlw	0
  4253  0114E6  6EE6               	movwf	postinc1,c
  4254  0114E8  0E05               	movlw	5
  4255  0114EA  6EE6               	movwf	postinc1,c
  4256  0114EC  EC74  F0D0         	call	_spinners	;wreg free
  4257  0114F0  5001               	movf	btemp^0,w,c
  4258  0114F2  6EE6               	movwf	postinc1,c
  4259  0114F4  0E00               	movlw	0
  4260  0114F6  6EE6               	movwf	postinc1,c
  4261  0114F8  0E06               	movlw	low STR_9
  4262  0114FA  6EE6               	movwf	postinc1,c
  4263  0114FC  0EFD               	movlw	high STR_9
  4264  0114FE  6EE6               	movwf	postinc1,c
  4265  011500  0E00               	movlw	0
  4266  011502  6EE6               	movwf	postinc1,c
  4267  011504  0E02               	movlw	2
  4268  011506  6EE6               	movwf	postinc1,c
  4269  011508  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4270  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4271  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4272  011518  0E0C               	movlw	12
  4273  01151A  6EE6               	movwf	postinc1,c
  4274  01151C  EC81  F0CE         	call	_sprintf	;wreg free
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 267:     update_lcd(0);
  4278  011520  0E00               	movlw	0
  4279  011522  6EE6               	movwf	postinc1,c
  4280  011524  ECF9  F0CD         	call	_update_lcd	;wreg free
  4281                           
  4282                           ;main.c: 268:     WaitMs(2000);
  4283  011528  0ED0               	movlw	208
  4284  01152A  6EE6               	movwf	postinc1,c
  4285  01152C  0E07               	movlw	7
  4286  01152E  6EE6               	movwf	postinc1,c
  4287  011530  ECF0  F0DB         	call	_WaitMs	;wreg free
  4288                           
  4289                           ;main.c: 269:     clear_adc_scan();
  4290  011534  EC59  F0E0         	call	_clear_adc_scan	;wreg free
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;main.c: 270:     start_adc_scan();
  4294  011538  ECD0  F0D7         	call	_start_adc_scan	;wreg free
  4295                           
  4296                           ;main.c: 271:     WaitMs(500);
  4297  01153C  0EF4               	movlw	244
  4298  01153E  6EE6               	movwf	postinc1,c
  4299  011540  0E01               	movlw	1
  4300  011542  6EE6               	movwf	postinc1,c
  4301  011544  ECF0  F0DB         	call	_WaitMs	;wreg free
  4302                           
  4303                           ;main.c: 272:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4304                           ;stkvar	_i_ror @ sp[(-17)+16]
  4305  011548  0EFF               	movlw	-1
  4306  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4307  011550  2A0C               	incf	(btemp+11)^0,f,c
  4308  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4309  011558  060C               	decf	(btemp+11)^0,f,c
  4310  01155A  0E1E               	movlw	30
  4311  01155C  600C               	cpfslt	(btemp+11)^0,c
  4312  01155E  D01A               	goto	u12600
  4313  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4314  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4315  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4316  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4317  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4318  01157C  0E42               	movlw	66
  4319  01157E  6EE6               	movwf	postinc1,c
  4320  011580  0E60               	movlw	96
  4321  011582  6EE6               	movwf	postinc1,c
  4322  011584  0E65               	movlw	101
  4323  011586  6EE6               	movwf	postinc1,c
  4324  011588  0E3C               	movlw	60
  4325  01158A  6EE6               	movwf	postinc1,c
  4326  01158C  ECE0  F0C7         	call	___flge	;wreg free
  4327  011590  A001               	btfss	btemp& (0+255),0,c
  4328  011592  D76D               	goto	l12949
  4329  011594                     u12600:
  4330                           
  4331                           ;main.c: 274:    static_soc();
  4332  011594  EC94  F0D8         	call	_static_soc	;wreg free
  4333                           
  4334                           ;main.c: 275:    init_bsoc();
  4335  011598  ECCD  F0BD         	call	_init_bsoc	;wreg free
  4336                           
  4337                           ;main.c: 276:    set_load_relay_one(0);
  4338  01159C  0E00               	movlw	0
  4339  01159E  6EE6               	movwf	postinc1,c
  4340  0115A0  ECE5  F0DF         	call	_set_load_relay_one	;wreg free
  4341                           
  4342                           ;main.c: 277:    set_load_relay_two(0);
  4343  0115A4  0E00               	movlw	0
  4344  0115A6  6EE6               	movwf	postinc1,c
  4345  0115A8  ECDD  F0DF         	call	_set_load_relay_two	;wreg free
  4346                           
  4347                           ;main.c: 278:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4348  0115AC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4349  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4350  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4351  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4352  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4353  0115C8  0E33               	movlw	low STR_10
  4354  0115CA  6EE6               	movwf	postinc1,c
  4355  0115CC  0EFD               	movlw	high STR_10
  4356  0115CE  6EE6               	movwf	postinc1,c
  4357  0115D0  0E00               	movlw	0
  4358  0115D2  6EE6               	movwf	postinc1,c
  4359  0115D4  0E00               	movlw	0
  4360  0115D6  6EE6               	movwf	postinc1,c
  4361  0115D8  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4362  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4363  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4364  0115E8  0E06               	movlw	6
  4365  0115EA  6EE6               	movwf	postinc1,c
  4366  0115EC  EC81  F0CE         	call	_sprintf	;wreg free
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;main.c: 279:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4370  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4371  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4372  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4373  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4374  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4375  01160C  0E49               	movlw	low STR_11
  4376  01160E  6EE6               	movwf	postinc1,c
  4377  011610  0EFD               	movlw	high STR_11
  4378  011612  6EE6               	movwf	postinc1,c
  4379  011614  0E00               	movlw	0
  4380  011616  6EE6               	movwf	postinc1,c
  4381  011618  0E01               	movlw	1
  4382  01161A  6EE6               	movwf	postinc1,c
  4383  01161C  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4384  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4385  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4386  01162C  0E08               	movlw	8
  4387  01162E  6EE6               	movwf	postinc1,c
  4388  011630  EC81  F0CE         	call	_sprintf	;wreg free
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;main.c: 280:    update_lcd(0);
  4392  011634  0E00               	movlw	0
  4393  011636  6EE6               	movwf	postinc1,c
  4394  011638  ECF9  F0CD         	call	_update_lcd	;wreg free
  4395                           
  4396                           ;main.c: 281:    WaitMs(2000);
  4397  01163C  0ED0               	movlw	208
  4398  01163E  6EE6               	movwf	postinc1,c
  4399  011640  0E07               	movlw	7
  4400  011642  6EE6               	movwf	postinc1,c
  4401  011644  ECF0  F0DB         	call	_WaitMs	;wreg free
  4402                           
  4403                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4404  011648  0E2E               	movlw	low STR_12
  4405  01164A  6EE6               	movwf	postinc1,c
  4406  01164C  0EFF               	movlw	high STR_12
  4407  01164E  6EE6               	movwf	postinc1,c
  4408  011650  0E00               	movlw	0
  4409  011652  6EE6               	movwf	postinc1,c
  4410  011654  0E00               	movlw	0
  4411  011656  6EE6               	movwf	postinc1,c
  4412  011658  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4413  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4414  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4415  011668  0E04               	movlw	4
  4416  01166A  6EE6               	movwf	postinc1,c
  4417  01166C  EC81  F0CE         	call	_sprintf	;wreg free
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4421  011670  0E3F               	movlw	low STR_13
  4422  011672  6EE6               	movwf	postinc1,c
  4423  011674  0EFF               	movlw	high STR_13
  4424  011676  6EE6               	movwf	postinc1,c
  4425  011678  0E00               	movlw	0
  4426  01167A  6EE6               	movwf	postinc1,c
  4427  01167C  0E01               	movlw	1
  4428  01167E  6EE6               	movwf	postinc1,c
  4429  011680  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4430  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4431  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4432  011690  0E04               	movlw	4
  4433  011692  6EE6               	movwf	postinc1,c
  4434  011694  EC81  F0CE         	call	_sprintf	;wreg free
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;main.c: 284:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4438  011698  0E72               	movlw	low STR_14
  4439  01169A  6EE6               	movwf	postinc1,c
  4440  01169C  0EFF               	movlw	high STR_14
  4441  01169E  6EE6               	movwf	postinc1,c
  4442  0116A0  0E00               	movlw	0
  4443  0116A2  6EE6               	movwf	postinc1,c
  4444  0116A4  0E02               	movlw	2
  4445  0116A6  6EE6               	movwf	postinc1,c
  4446  0116A8  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4447  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4448  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4449  0116B8  0E04               	movlw	4
  4450  0116BA  6EE6               	movwf	postinc1,c
  4451  0116BC  EC81  F0CE         	call	_sprintf	;wreg free
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 285:    update_lcd(0);
  4455  0116C0  0E00               	movlw	0
  4456  0116C2  6EE6               	movwf	postinc1,c
  4457  0116C4  ECF9  F0CD         	call	_update_lcd	;wreg free
  4458                           
  4459                           ;main.c: 286:    uint16_t i_esr = 1;
  4460  0116C8  0E01               	movlw	1
  4461  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4462  0116CC  0E00               	movlw	0
  4463  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4464                           
  4465                           ;stkvar	_i_esr @ sp[(-17)+8]
  4466  0116D0  0EF7               	movlw	-9
  4467  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4468  0116D8  0EF8               	movlw	-8
  4469  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4470                           
  4471                           ;main.c: 288:    float esr_temp;;main.c: 289:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4472  0116E0  D06D               	goto	l13009
  4473  0116E2                     l12997:
  4474                           
  4475                           ;main.c: 290:     WaitMs(110);
  4476  0116E2  0E6E               	movlw	110
  4477  0116E4  6EE6               	movwf	postinc1,c
  4478  0116E6  0E00               	movlw	0
  4479  0116E8  6EE6               	movwf	postinc1,c
  4480  0116EA  ECF0  F0DB         	call	_WaitMs	;wreg free
  4481                           
  4482                           ;main.c: 291:     shape = (uint8_t) fabsf(esr_temp);
  4483                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4484  0116EE  0EF3               	movlw	-13
  4485  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4486  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4487  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4488  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4489  011708  ECEB  F0D2         	call	_fabsf	;wreg free
  4490  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4491  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4492  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4493  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4494  011724  EC27  F0C7         	call	___fltol	;wreg free
  4495  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4496                           
  4497                           ;stkvar	_shape @ sp[(-17)+10]
  4498  01172E  0EF9               	movlw	-7
  4499  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4500                           
  4501                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4502  011736  0E00               	movlw	0
  4503  011738  6EE6               	movwf	postinc1,c
  4504                           
  4505                           ;stkvar	_shape @ sp[(-18)+10]
  4506  01173A  0EF8               	movlw	-8
  4507  01173C  50E3               	movf	plusw1,w,c
  4508  01173E  6EE6               	movwf	postinc1,c
  4509  011740  EC74  F0D0         	call	_spinners	;wreg free
  4510  011744  5001               	movf	btemp^0,w,c
  4511  011746  6EE6               	movwf	postinc1,c
  4512  011748  0E00               	movlw	0
  4513  01174A  6EE6               	movwf	postinc1,c
  4514  01174C  0E00               	movlw	0
  4515  01174E  6EE6               	movwf	postinc1,c
  4516  011750  0E00               	movlw	0
  4517  011752  6EE6               	movwf	postinc1,c
  4518  011754  EC74  F0D0         	call	_spinners	;wreg free
  4519  011758  5001               	movf	btemp^0,w,c
  4520  01175A  6EE6               	movwf	postinc1,c
  4521  01175C  0E00               	movlw	0
  4522  01175E  6EE6               	movwf	postinc1,c
  4523  011760  0E5F               	movlw	low STR_15
  4524  011762  6EE6               	movwf	postinc1,c
  4525  011764  0EFD               	movlw	high STR_15
  4526  011766  6EE6               	movwf	postinc1,c
  4527  011768  0E00               	movlw	0
  4528  01176A  6EE6               	movwf	postinc1,c
  4529  01176C  0E02               	movlw	2
  4530  01176E  6EE6               	movwf	postinc1,c
  4531  011770  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4532  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4533  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4534  011780  0E08               	movlw	8
  4535  011782  6EE6               	movwf	postinc1,c
  4536  011784  EC81  F0CE         	call	_sprintf	;wreg free
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;main.c: 293:     update_lcd(0);
  4540  011788  0E00               	movlw	0
  4541  01178A  6EE6               	movwf	postinc1,c
  4542  01178C  ECF9  F0CD         	call	_update_lcd	;wreg free
  4543                           
  4544                           ;main.c: 295:     if (i_esr++ > 512)
  4545                           ;stkvar	_i_esr @ sp[(-17)+8]
  4546  011790  50E1               	movf	fsr1l,w,c
  4547  011792  0FF7               	addlw	-9
  4548  011794  6ED9               	movwf	fsr2l,c
  4549  011796  50E2               	movf	fsr1h,w,c
  4550  011798  6EDA               	movwf	fsr2h,c
  4551  01179A  0EFF               	movlw	255
  4552  01179C  22DA               	addwfc	fsr2h,f,c
  4553  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4554  0117A4  0E01               	movlw	1
  4555  0117A6  26DE               	addwf	postinc2,f,c
  4556  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4557  0117AE  0E00               	movlw	0
  4558  0117B0  22DD               	addwfc	postdec2,f,c
  4559  0117B2  040B               	decf	(btemp+10)^0,w,c
  4560  0117B4  0E02               	movlw	2
  4561  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4562  0117B8  B0D8               	btfsc	status,0,c
  4563  0117BA  D017               	goto	u12620
  4564  0117BC                     l13009:
  4565                           
  4566                           ;main.c: 289:    while ((esr_temp = esr_check(0)) < 0.0) {
  4567  0117BC  0E00               	movlw	0
  4568  0117BE  6EE6               	movwf	postinc1,c
  4569  0117C0  EC8C  F0B8         	call	_esr_check	;wreg free
  4570                           
  4571                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4572  0117C4  0EF3               	movlw	-13
  4573  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4574  0117CC  0EF4               	movlw	-12
  4575  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4576  0117D4  0EF5               	movlw	-11
  4577  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4578  0117DC  0EF6               	movlw	-10
  4579  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4580  0117E4  0EF6               	movlw	-10
  4581  0117E6  BEE3               	btfsc	plusw1,7,c
  4582  0117E8  D77C               	goto	l12997
  4583  0117EA                     u12620:
  4584                           
  4585                           ;main.c: 298:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4586  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4587  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4588  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4589  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4590  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4591  011806  0E1D               	movlw	low STR_16
  4592  011808  6EE6               	movwf	postinc1,c
  4593  01180A  0EFD               	movlw	high STR_16
  4594  01180C  6EE6               	movwf	postinc1,c
  4595  01180E  0E00               	movlw	0
  4596  011810  6EE6               	movwf	postinc1,c
  4597  011812  0E00               	movlw	0
  4598  011814  6EE6               	movwf	postinc1,c
  4599  011816  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4600  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4601  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4602  011826  0E08               	movlw	8
  4603  011828  6EE6               	movwf	postinc1,c
  4604  01182A  EC81  F0CE         	call	_sprintf	;wreg free
  4605                           
  4606                           ;main.c: 299:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4607  01182E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4608  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4609  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4610  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4611  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4612  01184A  EE22  F019         	lfsr	2,_C+282	;volatile
  4613  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4614  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4615  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4616  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4617  011866  0EBA               	movlw	low STR_17
  4618  011868  6EE6               	movwf	postinc1,c
  4619  01186A  0EFC               	movlw	high STR_17
  4620  01186C  6EE6               	movwf	postinc1,c
  4621  01186E  0E00               	movlw	0
  4622  011870  6EE6               	movwf	postinc1,c
  4623  011872  0E01               	movlw	1
  4624  011874  6EE6               	movwf	postinc1,c
  4625  011876  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4626  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4627  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4628  011886  0E0C               	movlw	12
  4629  011888  6EE6               	movwf	postinc1,c
  4630  01188A  EC81  F0CE         	call	_sprintf	;wreg free
  4631                           
  4632                           ;main.c: 300:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4633  01188E  EE22  F011         	lfsr	2,_C+274	;volatile
  4634  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4635  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4636  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4637  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4638  0118AA  EE22  F01D         	lfsr	2,_C+286	;volatile
  4639  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4640  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4641  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4642  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4643  0118C6  0ED4               	movlw	low STR_18
  4644  0118C8  6EE6               	movwf	postinc1,c
  4645  0118CA  0EFC               	movlw	high STR_18
  4646  0118CC  6EE6               	movwf	postinc1,c
  4647  0118CE  0E00               	movlw	0
  4648  0118D0  6EE6               	movwf	postinc1,c
  4649  0118D2  0E02               	movlw	2
  4650  0118D4  6EE6               	movwf	postinc1,c
  4651  0118D6  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4652  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4653  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4654  0118E6  0E0C               	movlw	12
  4655  0118E8  6EE6               	movwf	postinc1,c
  4656  0118EA  EC81  F0CE         	call	_sprintf	;wreg free
  4657                           
  4658                           ;main.c: 301:    update_lcd(0);
  4659  0118EE  0E00               	movlw	0
  4660  0118F0  6EE6               	movwf	postinc1,c
  4661  0118F2  ECF9  F0CD         	call	_update_lcd	;wreg free
  4662                           
  4663                           ;main.c: 302:    WaitMs(5000);
  4664  0118F6  0E88               	movlw	136
  4665  0118F8  6EE6               	movwf	postinc1,c
  4666  0118FA  0E13               	movlw	19
  4667  0118FC  6EE6               	movwf	postinc1,c
  4668  0118FE  ECF0  F0DB         	call	_WaitMs	;wreg free
  4669                           
  4670                           ;main.c: 303:    V.system_stable = 1;
  4671  011902  0E01               	movlw	1
  4672  011904  0101               	movlb	1	; () banked
  4673  011906  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4674                           
  4675                           ;main.c: 304:    break;
  4676  011908  D01C               	goto	l13021
  4677  01190A                     l1340:
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;main.c: 310:    P.SYSTEM_STABLE = 1;
  4681  01190A  0100               	movlb	0	; () banked
  4682  01190C  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4683                           
  4684                           ;main.c: 311:    break;
  4685  01190E  D019               	goto	l13021
  4686  011910                     l1342:
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;main.c: 314:    V.ui_state = UI_STATE_INIT;
  4690  011910  6B30               	clrf	_V& (0+255),b	;volatile
  4691                           
  4692                           ;main.c: 315:    break;
  4693  011912  D017               	goto	l13021
  4694  011914                     l13019:
  4695  011914  0101               	movlb	1	; () banked
  4696  011916  5130               	movf	_V& (0+255),w,b	;volatile
  4697  011918  6E0B               	movwf	(btemp+10)^0,c
  4698  01191A  6A0C               	clrf	(btemp+11)^0,c
  4699                           
  4700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4701                           ; Switch size 1, requested type "simple"
  4702                           ; Number of cases is 1, Range of values is 0 to 0
  4703                           ; switch strategies available:
  4704                           ; Name         Instructions Cycles
  4705                           ; simple_byte            4     3 (average)
  4706                           ;	Chosen strategy is simple_byte
  4707  01191C  500C               	movf	(btemp+11)^0,w,c
  4708  01191E  0A00               	xorlw	0	; case 0
  4709  011920  A4D8               	btfss	status,2,c
  4710  011922  D7F6               	goto	l1342
  4711                           
  4712                           ; BSR set to: 1
  4713                           ; Switch size 1, requested type "simple"
  4714                           ; Number of cases is 5, Range of values is 0 to 5
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte           16     9 (average)
  4718                           ;	Chosen strategy is simple_byte
  4719  011924  500B               	movf	(btemp+10)^0,w,c
  4720  011926  0A00               	xorlw	0	; case 0
  4721  011928  B4D8               	btfsc	status,2,c
  4722  01192A  D4C8               	goto	l12899
  4723  01192C  0A01               	xorlw	1	; case 1
  4724  01192E  B4D8               	btfsc	status,2,c
  4725  011930  D008               	goto	l13021
  4726  011932  0A02               	xorlw	2	; case 3
  4727  011934  B4D8               	btfsc	status,2,c
  4728  011936  D005               	goto	l13021
  4729  011938  0A07               	xorlw	7	; case 4
  4730  01193A  B4D8               	btfsc	status,2,c
  4731  01193C  D7E6               	goto	l1340
  4732  01193E  0A01               	xorlw	1	; case 5
  4733  011940  D7E7               	goto	l1342
  4734  011942                     l13021:
  4735                           
  4736                           ;main.c: 318:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4737  011942  0E01               	movlw	1
  4738  011944  6EE6               	movwf	postinc1,c
  4739  011946  EC65  F0DD         	call	_TimerDone	;wreg free
  4740  01194A  5001               	movf	btemp^0,w,c
  4741  01194C  B4D8               	btfsc	status,2,c
  4742  01194E  D013               	goto	l13033
  4743  011950  EC49  F0E0         	call	_check_adc_scan	;wreg free
  4744  011954  5001               	movf	btemp^0,w,c
  4745  011956  B4D8               	btfsc	status,2,c
  4746  011958  D00E               	goto	l13033
  4747                           
  4748                           ;main.c: 322:    convert_adc_data();
  4749  01195A  EC8F  F0D2         	call	_convert_adc_data	;wreg free
  4750                           
  4751                           ;main.c: 326:    clear_adc_scan();
  4752  01195E  EC59  F0E0         	call	_clear_adc_scan	;wreg free
  4753                           
  4754                           ; BSR set to: 1
  4755                           ;main.c: 327:    start_adc_scan();
  4756  011962  ECD0  F0D7         	call	_start_adc_scan	;wreg free
  4757                           
  4758                           ;main.c: 328:    StartTimer(TMR_ADC, 200);
  4759  011966  0EC8               	movlw	200
  4760  011968  6EE6               	movwf	postinc1,c
  4761  01196A  0E00               	movlw	0
  4762  01196C  6EE6               	movwf	postinc1,c
  4763  01196E  0E01               	movlw	1
  4764  011970  6EE6               	movwf	postinc1,c
  4765  011972  ECFB  F0DA         	call	_StartTimer	;wreg free
  4766  011976                     l13033:
  4767                           
  4768                           ;main.c: 335:   if (TimerDone(TMR_DISPLAY)) {
  4769                           
  4770                           ;main.c: 331:   if (V.ticks) {
  4771  011976  0E0A               	movlw	10
  4772  011978  6EE6               	movwf	postinc1,c
  4773  01197A  EC65  F0DD         	call	_TimerDone	;wreg free
  4774  01197E  5001               	movf	btemp^0,w,c
  4775  011980  B4D8               	btfsc	status,2,c
  4776  011982  EF3F  F091         	goto	l13109
  4777                           
  4778                           ;main.c: 336:    if (TimerDone(TMR_HELPDIS)) {
  4779  011986  0E09               	movlw	9
  4780  011988  6EE6               	movwf	postinc1,c
  4781  01198A  EC65  F0DD         	call	_TimerDone	;wreg free
  4782  01198E  5001               	movf	btemp^0,w,c
  4783  011990  B4D8               	btfsc	status,2,c
  4784  011992  D004               	goto	l13041
  4785                           
  4786                           ;main.c: 337:     set_display_info(DIS_STR);
  4787  011994  0E00               	movlw	0
  4788  011996  6EE6               	movwf	postinc1,c
  4789  011998  EC4A  F0DF         	call	_set_display_info	;wreg free
  4790  01199C                     l13041:
  4791                           
  4792                           ;main.c: 339:    calc_model_data();
  4793  01199C  EC27  F0AE         	call	_calc_model_data	;wreg free
  4794                           
  4795                           ; BSR set to: 57
  4796                           ;main.c: 346:     hid_display(&H);
  4797                           
  4798                           ;main.c: 341:    if (0) {
  4799  0119A0  0EF7               	movlw	_H& (0+255)
  4800  0119A2  6EE6               	movwf	postinc1,c
  4801  0119A4  EC06  F0CF         	call	_hid_display	;wreg free
  4802                           
  4803                           ;main.c: 347:     switch (H.hid_display) {
  4804  0119A8  EFEE  F090         	goto	l13089
  4805  0119AC                     l1350:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;main.c: 349:      V.calib = 0;
  4809  0119AC  0101               	movlb	1	; () banked
  4810  0119AE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4811                           
  4812                           ; BSR set to: 1
  4813                           ;main.c: 350:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4814  0119B0  EE22  F021         	lfsr	2,_C+290	;volatile
  4815  0119B4  50DF               	movf	indf2,w,c
  4816  0119B6  A4D8               	btfss	status,2,c
  4817  0119B8  D002               	goto	l13051
  4818                           
  4819                           ; BSR set to: 1
  4820  0119BA  0E20               	movlw	32
  4821  0119BC  D001               	goto	L1
  4822  0119BE                     l13051:
  4823                           
  4824                           ; BSR set to: 1
  4825  0119BE  0E44               	movlw	68
  4826  0119C0                     L1:
  4827  0119C0  6E0B               	movwf	(btemp+10)^0,c
  4828  0119C2  0E00               	movlw	0
  4829  0119C4  6E0C               	movwf	(btemp+11)^0,c
  4830                           
  4831                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4832  0119C6  0EF1               	movlw	-15
  4833  0119C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4834  0119CE  0EF2               	movlw	-14
  4835  0119D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4836                           
  4837                           ; BSR set to: 1
  4838  0119D6  EE21  F37B         	lfsr	2,_C+124	;volatile
  4839  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4840  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4841  0119E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4842  0119EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4843                           
  4844                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4845  0119F2  0EED               	movlw	-19
  4846  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4847  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4848  011A00  0EEC               	movlw	low STR_22
  4849  011A02  6EE6               	movwf	postinc1,c
  4850  011A04  0EFD               	movlw	high STR_22
  4851  011A06  6EE6               	movwf	postinc1,c
  4852  011A08  0E00               	movlw	0
  4853  011A0A  6EE6               	movwf	postinc1,c
  4854  011A0C  0E00               	movlw	0
  4855  011A0E  6EE6               	movwf	postinc1,c
  4856  011A10  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4857  011A14  0060  F007  FFE6   	movff	btemp,postinc1
  4858  011A1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4859  011A20  0E0A               	movlw	10
  4860  011A22  6EE6               	movwf	postinc1,c
  4861  011A24  EC81  F0CE         	call	_sprintf	;wreg free
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;main.c: 351:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4865  011A28  EE21  F373         	lfsr	2,_C+116	;volatile
  4866  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4867  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4868  011A38  006F FF7B FFE6     	movff	postinc2,postinc1
  4869  011A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4870  011A44  0EBF               	movlw	low STR_23
  4871  011A46  6EE6               	movwf	postinc1,c
  4872  011A48  0EFE               	movlw	high STR_23
  4873  011A4A  6EE6               	movwf	postinc1,c
  4874  011A4C  0E00               	movlw	0
  4875  011A4E  6EE6               	movwf	postinc1,c
  4876  011A50  0E01               	movlw	1
  4877  011A52  6EE6               	movwf	postinc1,c
  4878  011A54  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4879  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  4880  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4881  011A64  0E08               	movlw	8
  4882  011A66  6EE6               	movwf	postinc1,c
  4883  011A68  EC81  F0CE         	call	_sprintf	;wreg free
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;main.c: 352:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4887  011A6C  EE21  F377         	lfsr	2,_C+120	;volatile
  4888  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4889  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4890  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4891  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  4892  011A88  0EAC               	movlw	low STR_24
  4893  011A8A  6EE6               	movwf	postinc1,c
  4894  011A8C  0EFE               	movlw	high STR_24
  4895  011A8E  6EE6               	movwf	postinc1,c
  4896  011A90  0E00               	movlw	0
  4897  011A92  6EE6               	movwf	postinc1,c
  4898  011A94  0E02               	movlw	2
  4899  011A96  6EE6               	movwf	postinc1,c
  4900  011A98  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4901  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  4902  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4903  011AA8  0E08               	movlw	8
  4904  011AAA  6EE6               	movwf	postinc1,c
  4905  011AAC  EC81  F0CE         	call	_sprintf	;wreg free
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 354:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4909  011AB0  EE22  F021         	lfsr	2,_C+290	;volatile
  4910  011AB4  50DF               	movf	indf2,w,c
  4911  011AB6  A4D8               	btfss	status,2,c
  4912  011AB8  D002               	goto	l13063
  4913                           
  4914                           ; BSR set to: 0
  4915  011ABA  0E20               	movlw	32
  4916  011ABC  D001               	goto	L2
  4917  011ABE                     l13063:
  4918                           
  4919                           ; BSR set to: 0
  4920  011ABE  0E44               	movlw	68
  4921  011AC0                     L2:
  4922  011AC0  6E0B               	movwf	(btemp+10)^0,c
  4923  011AC2  0E00               	movlw	0
  4924  011AC4  6E0C               	movwf	(btemp+11)^0,c
  4925                           
  4926                           ;stkvar	_main$3756 @ sp[(-17)+0]
  4927  011AC6  0EEF               	movlw	-17
  4928  011AC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4929  011ACE  0EF0               	movlw	-16
  4930  011AD0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4931                           
  4932                           ; BSR set to: 0
  4933  011AD6  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4934  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4935  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4936  011AE6  006F FF7B FFE6     	movff	postinc2,postinc1
  4937  011AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  4938                           
  4939                           ;stkvar	_main$3756 @ sp[(-21)+0]
  4940  011AF2  0EEB               	movlw	-21
  4941  011AF4  006F FF8F FFE6     	movff	plusw1,postinc1
  4942  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
  4943  011B00  0E9C               	movlw	low STR_25
  4944  011B02  6EE6               	movwf	postinc1,c
  4945  011B04  0EFD               	movlw	high STR_25
  4946  011B06  6EE6               	movwf	postinc1,c
  4947  011B08  0E01               	movlw	1
  4948  011B0A  6EE6               	movwf	postinc1,c
  4949  011B0C  0E00               	movlw	0
  4950  011B0E  6EE6               	movwf	postinc1,c
  4951  011B10  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4952  011B14  0060  F007  FFE6   	movff	btemp,postinc1
  4953  011B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4954  011B20  0E0A               	movlw	10
  4955  011B22  6EE6               	movwf	postinc1,c
  4956  011B24  EC81  F0CE         	call	_sprintf	;wreg free
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;main.c: 355:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4960  011B28  EE21  F3AF         	lfsr	2,_C+176	;volatile
  4961  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4962  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  4963  011B38  006F FF7B FFE6     	movff	postinc2,postinc1
  4964  011B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4965  011B44  0E99               	movlw	low STR_26
  4966  011B46  6EE6               	movwf	postinc1,c
  4967  011B48  0EFE               	movlw	high STR_26
  4968  011B4A  6EE6               	movwf	postinc1,c
  4969  011B4C  0E01               	movlw	1
  4970  011B4E  6EE6               	movwf	postinc1,c
  4971  011B50  0E01               	movlw	1
  4972  011B52  6EE6               	movwf	postinc1,c
  4973  011B54  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4974  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  4975  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4976  011B64  0E08               	movlw	8
  4977  011B66  6EE6               	movwf	postinc1,c
  4978  011B68  EC81  F0CE         	call	_sprintf	;wreg free
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;main.c: 356:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4982  011B6C  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4983  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  4984  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  4985  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4986  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  011B88  0E86               	movlw	low STR_27
  4988  011B8A  6EE6               	movwf	postinc1,c
  4989  011B8C  0EFE               	movlw	high STR_27
  4990  011B8E  6EE6               	movwf	postinc1,c
  4991  011B90  0E01               	movlw	1
  4992  011B92  6EE6               	movwf	postinc1,c
  4993  011B94  0E02               	movlw	2
  4994  011B96  6EE6               	movwf	postinc1,c
  4995  011B98  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  4996  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  4997  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4998  011BA8  0E08               	movlw	8
  4999  011BAA  6EE6               	movwf	postinc1,c
  5000  011BAC  EC81  F0CE         	call	_sprintf	;wreg free
  5001                           
  5002                           ;main.c: 357:      break;
  5003  011BB0  D32B               	goto	l13091
  5004  011BB2                     l1360:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;main.c: 359:      V.calib = 0;
  5008  011BB2  0101               	movlb	1	; () banked
  5009  011BB4  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5010                           
  5011                           ; BSR set to: 1
  5012                           ;main.c: 360:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5013  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  5014  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5018  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5019  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5020  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5021  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5022  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5023  011BEE  0EF8               	movlw	low STR_28
  5024  011BF0  6EE6               	movwf	postinc1,c
  5025  011BF2  0EFE               	movlw	high STR_28
  5026  011BF4  6EE6               	movwf	postinc1,c
  5027  011BF6  0E00               	movlw	0
  5028  011BF8  6EE6               	movwf	postinc1,c
  5029  011BFA  0E00               	movlw	0
  5030  011BFC  6EE6               	movwf	postinc1,c
  5031  011BFE  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5032  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5033  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5034  011C0E  0E0C               	movlw	12
  5035  011C10  6EE6               	movwf	postinc1,c
  5036  011C12  EC81  F0CE         	call	_sprintf	;wreg free
  5037                           
  5038                           ;main.c: 361:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5039  011C16  EE21  F2FF         	lfsr	2,_C
  5040  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5041  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5045  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5046  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5047  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5048  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5049  011C4E  0ED2               	movlw	low STR_29
  5050  011C50  6EE6               	movwf	postinc1,c
  5051  011C52  0EFE               	movlw	high STR_29
  5052  011C54  6EE6               	movwf	postinc1,c
  5053  011C56  0E00               	movlw	0
  5054  011C58  6EE6               	movwf	postinc1,c
  5055  011C5A  0E01               	movlw	1
  5056  011C5C  6EE6               	movwf	postinc1,c
  5057  011C5E  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5058  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5059  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5060  011C6E  0E0C               	movlw	12
  5061  011C70  6EE6               	movwf	postinc1,c
  5062  011C72  EC81  F0CE         	call	_sprintf	;wreg free
  5063                           
  5064                           ;main.c: 362:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5065  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5066  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5068  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5069  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5070  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5071  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5072  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5073  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5074  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5075  011CAE  0EE5               	movlw	low STR_30
  5076  011CB0  6EE6               	movwf	postinc1,c
  5077  011CB2  0EFE               	movlw	high STR_30
  5078  011CB4  6EE6               	movwf	postinc1,c
  5079  011CB6  0E00               	movlw	0
  5080  011CB8  6EE6               	movwf	postinc1,c
  5081  011CBA  0E02               	movlw	2
  5082  011CBC  6EE6               	movwf	postinc1,c
  5083  011CBE  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5084  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5085  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5086  011CCE  0E0C               	movlw	12
  5087  011CD0  6EE6               	movwf	postinc1,c
  5088  011CD2  EC81  F0CE         	call	_sprintf	;wreg free
  5089                           
  5090                           ;main.c: 364:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5091  011CD6  EE21  F39F         	lfsr	2,_C+160	;volatile
  5092  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5094  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5095  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5096  011CF2  0E4D               	movlw	low STR_31
  5097  011CF4  6EE6               	movwf	postinc1,c
  5098  011CF6  0EFE               	movlw	high STR_31
  5099  011CF8  6EE6               	movwf	postinc1,c
  5100  011CFA  0E01               	movlw	1
  5101  011CFC  6EE6               	movwf	postinc1,c
  5102  011CFE  0E00               	movlw	0
  5103  011D00  6EE6               	movwf	postinc1,c
  5104  011D02  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5105  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5106  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5107  011D12  0E08               	movlw	8
  5108  011D14  6EE6               	movwf	postinc1,c
  5109  011D16  EC81  F0CE         	call	_sprintf	;wreg free
  5110                           
  5111                           ;main.c: 365:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5112  011D1A  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5113  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5114  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5115  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5116  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5117  011D36  0E60               	movlw	low STR_32
  5118  011D38  6EE6               	movwf	postinc1,c
  5119  011D3A  0EFE               	movlw	high STR_32
  5120  011D3C  6EE6               	movwf	postinc1,c
  5121  011D3E  0E01               	movlw	1
  5122  011D40  6EE6               	movwf	postinc1,c
  5123  011D42  0E01               	movlw	1
  5124  011D44  6EE6               	movwf	postinc1,c
  5125  011D46  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5126  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5127  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5128  011D56  0E08               	movlw	8
  5129  011D58  6EE6               	movwf	postinc1,c
  5130  011D5A  EC81  F0CE         	call	_sprintf	;wreg free
  5131                           
  5132                           ;main.c: 366:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5133  011D5E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5134  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5135  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5136  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5137  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5138  011D7A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5139  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5140  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5141  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5142  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5143  011D96  ECC2  F0A2         	call	___fladd	;wreg free
  5144  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5145  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5146  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5147  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5148  011DB2  0E73               	movlw	low STR_33
  5149  011DB4  6EE6               	movwf	postinc1,c
  5150  011DB6  0EFE               	movlw	high STR_33
  5151  011DB8  6EE6               	movwf	postinc1,c
  5152  011DBA  0E01               	movlw	1
  5153  011DBC  6EE6               	movwf	postinc1,c
  5154  011DBE  0E02               	movlw	2
  5155  011DC0  6EE6               	movwf	postinc1,c
  5156  011DC2  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5157  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5158  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5159  011DD2  0E08               	movlw	8
  5160  011DD4  6EE6               	movwf	postinc1,c
  5161  011DD6  EC81  F0CE         	call	_sprintf	;wreg free
  5162                           
  5163                           ;main.c: 367:      break;
  5164  011DDA  D216               	goto	l13091
  5165  011DDC                     l1361:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;main.c: 369:      V.calib = 0;
  5169  011DDC  0101               	movlb	1	; () banked
  5170  011DDE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5171                           
  5172                           ; BSR set to: 1
  5173                           ;main.c: 370:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5174  011DE0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5175  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  011DF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011DFC  0EB0               	movlw	low STR_34
  5180  011DFE  6EE6               	movwf	postinc1,c
  5181  011E00  0EFD               	movlw	high STR_34
  5182  011E02  6EE6               	movwf	postinc1,c
  5183  011E04  0E00               	movlw	0
  5184  011E06  6EE6               	movwf	postinc1,c
  5185  011E08  0E00               	movlw	0
  5186  011E0A  6EE6               	movwf	postinc1,c
  5187  011E0C  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5188  011E10  0060  F007  FFE6   	movff	btemp,postinc1
  5189  011E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5190  011E1C  0E08               	movlw	8
  5191  011E1E  6EE6               	movwf	postinc1,c
  5192  011E20  EC81  F0CE         	call	_sprintf	;wreg free
  5193                           
  5194                           ;main.c: 371:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5195  011E24  EE21  F393         	lfsr	2,_C+148	;volatile
  5196  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5197  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5198  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5199  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011E40  EE21  F38F         	lfsr	2,_C+144	;volatile
  5201  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011E50  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  011E56  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  011E5C  0E00               	movlw	low STR_35
  5206  011E5E  6EE6               	movwf	postinc1,c
  5207  011E60  0EFE               	movlw	high STR_35
  5208  011E62  6EE6               	movwf	postinc1,c
  5209  011E64  0E00               	movlw	0
  5210  011E66  6EE6               	movwf	postinc1,c
  5211  011E68  0E01               	movlw	1
  5212  011E6A  6EE6               	movwf	postinc1,c
  5213  011E6C  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5214  011E70  0060  F007  FFE6   	movff	btemp,postinc1
  5215  011E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5216  011E7C  0E0C               	movlw	12
  5217  011E7E  6EE6               	movwf	postinc1,c
  5218  011E80  EC81  F0CE         	call	_sprintf	;wreg free
  5219                           
  5220                           ;main.c: 372:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5221  011E84  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5222  011E88  006F FF78  F00B    	movff	postinc2,btemp+10
  5223  011E8E  006F FF74  F00C    	movff	postdec2,btemp+11
  5224  011E94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5225  011E9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5226  011EA0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5227  011EA4  006F FF78  F00B    	movff	postinc2,btemp+10
  5228  011EAA  006F FF74  F00C    	movff	postdec2,btemp+11
  5229  011EB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5230  011EB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5231  011EBC  0E00               	movlw	0
  5232  011EBE  6EE6               	movwf	postinc1,c
  5233  011EC0  0E05               	movlw	5
  5234  011EC2  6EE6               	movwf	postinc1,c
  5235  011EC4  EC74  F0D0         	call	_spinners	;wreg free
  5236  011EC8  5001               	movf	btemp^0,w,c
  5237  011ECA  6EE6               	movwf	postinc1,c
  5238  011ECC  0E00               	movlw	0
  5239  011ECE  6EE6               	movwf	postinc1,c
  5240  011ED0  0E88               	movlw	low STR_36
  5241  011ED2  6EE6               	movwf	postinc1,c
  5242  011ED4  0EFD               	movlw	high STR_36
  5243  011ED6  6EE6               	movwf	postinc1,c
  5244  011ED8  0E00               	movlw	0
  5245  011EDA  6EE6               	movwf	postinc1,c
  5246  011EDC  0E02               	movlw	2
  5247  011EDE  6EE6               	movwf	postinc1,c
  5248  011EE0  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5249  011EE4  0060  F007  FFE6   	movff	btemp,postinc1
  5250  011EEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5251  011EF0  0E0A               	movlw	10
  5252  011EF2  6EE6               	movwf	postinc1,c
  5253  011EF4  EC81  F0CE         	call	_sprintf	;wreg free
  5254                           
  5255                           ;main.c: 374:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5256  011EF8  EE21  F387         	lfsr	2,_C+136	;volatile
  5257  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5258  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5259  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5260  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5261  011F14  0E74               	movlw	low STR_37
  5262  011F16  6EE6               	movwf	postinc1,c
  5263  011F18  0EFD               	movlw	high STR_37
  5264  011F1A  6EE6               	movwf	postinc1,c
  5265  011F1C  0E01               	movlw	1
  5266  011F1E  6EE6               	movwf	postinc1,c
  5267  011F20  0E00               	movlw	0
  5268  011F22  6EE6               	movwf	postinc1,c
  5269  011F24  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5270  011F28  0060  F007  FFE6   	movff	btemp,postinc1
  5271  011F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5272  011F34  0E08               	movlw	8
  5273  011F36  6EE6               	movwf	postinc1,c
  5274  011F38  EC81  F0CE         	call	_sprintf	;wreg free
  5275                           
  5276                           ;main.c: 375:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5277  011F3C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5278  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5280  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5281  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5282  011F58  EE22  F019         	lfsr	2,_C+282	;volatile
  5283  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5285  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5287  011F74  0EC4               	movlw	low STR_38
  5288  011F76  6EE6               	movwf	postinc1,c
  5289  011F78  0EFD               	movlw	high STR_38
  5290  011F7A  6EE6               	movwf	postinc1,c
  5291  011F7C  0E01               	movlw	1
  5292  011F7E  6EE6               	movwf	postinc1,c
  5293  011F80  0E01               	movlw	1
  5294  011F82  6EE6               	movwf	postinc1,c
  5295  011F84  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5296  011F88  0060  F007  FFE6   	movff	btemp,postinc1
  5297  011F8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5298  011F94  0E0C               	movlw	12
  5299  011F96  6EE6               	movwf	postinc1,c
  5300  011F98  EC81  F0CE         	call	_sprintf	;wreg free
  5301                           
  5302                           ;main.c: 376:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5303  011F9C  EE22  F011         	lfsr	2,_C+274	;volatile
  5304  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5307  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5308  011FB8  EE22  F01D         	lfsr	2,_C+286	;volatile
  5309  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5313  011FD4  0ED8               	movlw	low STR_39
  5314  011FD6  6EE6               	movwf	postinc1,c
  5315  011FD8  0EFD               	movlw	high STR_39
  5316  011FDA  6EE6               	movwf	postinc1,c
  5317  011FDC  0E01               	movlw	1
  5318  011FDE  6EE6               	movwf	postinc1,c
  5319  011FE0  0E02               	movlw	2
  5320  011FE2  6EE6               	movwf	postinc1,c
  5321  011FE4  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5322  011FE8  0060  F007  FFE6   	movff	btemp,postinc1
  5323  011FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5324  011FF4  0E0C               	movlw	12
  5325  011FF6  6EE6               	movwf	postinc1,c
  5326  011FF8  EC81  F0CE         	call	_sprintf	;wreg free
  5327                           
  5328                           ;main.c: 377:      break;
  5329  011FFC  D105               	goto	l13091
  5330  011FFE                     l13075:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;main.c: 379:      if (!V.calib) {
  5334  011FFE  0101               	movlb	1	; () banked
  5335  012000  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5336  012002  A4D8               	btfss	status,2,c
  5337  012004  D02D               	goto	l13079
  5338                           
  5339                           ; BSR set to: 1
  5340                           ;main.c: 380:       lp_filter(0.0, i, -1);
  5341  012006  0EFF               	movlw	255
  5342  012008  6EE6               	movwf	postinc1,c
  5343                           
  5344                           ;stkvar	_i @ sp[(-18)+13]
  5345  01200A  0EFB               	movlw	-5
  5346  01200C  50E3               	movf	plusw1,w,c
  5347  01200E  6EE6               	movwf	postinc1,c
  5348  012010  0E00               	movlw	0
  5349  012012  6EE6               	movwf	postinc1,c
  5350  012014  0E00               	movlw	0
  5351  012016  6EE6               	movwf	postinc1,c
  5352  012018  0E00               	movlw	0
  5353  01201A  6EE6               	movwf	postinc1,c
  5354  01201C  0E00               	movlw	0
  5355  01201E  6EE6               	movwf	postinc1,c
  5356  012020  EC2B  F0C3         	call	_lp_filter	;wreg free
  5357                           
  5358                           ;main.c: 381:       lp_filter(0.0, j, -1);
  5359  012024  0EFF               	movlw	255
  5360  012026  6EE6               	movwf	postinc1,c
  5361                           
  5362                           ;stkvar	_j @ sp[(-18)+12]
  5363  012028  0EFA               	movlw	-6
  5364  01202A  50E3               	movf	plusw1,w,c
  5365  01202C  6EE6               	movwf	postinc1,c
  5366  01202E  0E00               	movlw	0
  5367  012030  6EE6               	movwf	postinc1,c
  5368  012032  0E00               	movlw	0
  5369  012034  6EE6               	movwf	postinc1,c
  5370  012036  0E00               	movlw	0
  5371  012038  6EE6               	movwf	postinc1,c
  5372  01203A  0E00               	movlw	0
  5373  01203C  6EE6               	movwf	postinc1,c
  5374  01203E  EC2B  F0C3         	call	_lp_filter	;wreg free
  5375                           
  5376                           ;main.c: 382:       lp_filter(0.0, k, -1);
  5377  012042  0EFF               	movlw	255
  5378  012044  6EE6               	movwf	postinc1,c
  5379                           
  5380                           ;stkvar	_k @ sp[(-18)+11]
  5381  012046  0EF9               	movlw	-7
  5382  012048  50E3               	movf	plusw1,w,c
  5383  01204A  6EE6               	movwf	postinc1,c
  5384  01204C  0E00               	movlw	0
  5385  01204E  6EE6               	movwf	postinc1,c
  5386  012050  0E00               	movlw	0
  5387  012052  6EE6               	movwf	postinc1,c
  5388  012054  0E00               	movlw	0
  5389  012056  6EE6               	movwf	postinc1,c
  5390  012058  0E00               	movlw	0
  5391  01205A  6EE6               	movwf	postinc1,c
  5392  01205C  EC2B  F0C3         	call	_lp_filter	;wreg free
  5393  012060                     l13079:
  5394                           
  5395                           ;main.c: 384:      V.calib = 1;
  5396  012060  0E01               	movlw	1
  5397  012062  0101               	movlb	1	; () banked
  5398  012064  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5399                           
  5400                           ; BSR set to: 1
  5401                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5402  012066  0E02               	movlw	2
  5403  012068  6EE6               	movwf	postinc1,c
  5404  01206A  ECD1  F0DC         	call	_get_switch	;wreg free
  5405  01206E  5001               	movf	btemp^0,w,c
  5406  012070  6EE6               	movwf	postinc1,c
  5407  012072  0E00               	movlw	0
  5408  012074  6EE6               	movwf	postinc1,c
  5409                           
  5410                           ;stkvar	_i @ sp[(-19)+13]
  5411  012076  0EFA               	movlw	-6
  5412  012078  50E3               	movf	plusw1,w,c
  5413  01207A  0D04               	mullw	4
  5414  01207C  0EFF               	movlw	low _C
  5415  01207E  24F3               	addwf	243,w,c
  5416  012080  6ED9               	movwf	fsr2l,c
  5417  012082  0E06               	movlw	high _C
  5418  012084  20F4               	addwfc	prodh,w,c
  5419  012086  6EDA               	movwf	fsr2h,c
  5420  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5421  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5422  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5423  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5424                           
  5425                           ;stkvar	_i @ sp[(-23)+13]
  5426  0120A0  0EF6               	movlw	-10
  5427  0120A2  50E3               	movf	plusw1,w,c
  5428  0120A4  6EE6               	movwf	postinc1,c
  5429  0120A6  ECEA  F0DE         	call	_get_raw_result	;wreg free
  5430  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5431  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5432  0120B6  0E83               	movlw	low STR_19
  5433  0120B8  6EE6               	movwf	postinc1,c
  5434  0120BA  0EFF               	movlw	high STR_19
  5435  0120BC  6EE6               	movwf	postinc1,c
  5436  0120BE  0E00               	movlw	0
  5437  0120C0  6EE6               	movwf	postinc1,c
  5438  0120C2  0E00               	movlw	0
  5439  0120C4  6EE6               	movwf	postinc1,c
  5440  0120C6  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5441  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5442  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5443  0120D6  0E0C               	movlw	12
  5444  0120D8  6EE6               	movwf	postinc1,c
  5445  0120DA  EC81  F0CE         	call	_sprintf	;wreg free
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5449  0120DE  0E03               	movlw	3
  5450  0120E0  6EE6               	movwf	postinc1,c
  5451  0120E2  ECD1  F0DC         	call	_get_switch	;wreg free
  5452  0120E6  5001               	movf	btemp^0,w,c
  5453  0120E8  6EE6               	movwf	postinc1,c
  5454  0120EA  0E00               	movlw	0
  5455  0120EC  6EE6               	movwf	postinc1,c
  5456                           
  5457                           ;stkvar	_j @ sp[(-19)+12]
  5458  0120EE  0EF9               	movlw	-7
  5459  0120F0  50E3               	movf	plusw1,w,c
  5460  0120F2  0D04               	mullw	4
  5461  0120F4  0EFF               	movlw	low _C
  5462  0120F6  24F3               	addwf	243,w,c
  5463  0120F8  6ED9               	movwf	fsr2l,c
  5464  0120FA  0E06               	movlw	high _C
  5465  0120FC  20F4               	addwfc	prodh,w,c
  5466  0120FE  6EDA               	movwf	fsr2h,c
  5467  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5468  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5471                           
  5472                           ;stkvar	_j @ sp[(-23)+12]
  5473  012118  0EF5               	movlw	-11
  5474  01211A  50E3               	movf	plusw1,w,c
  5475  01211C  6EE6               	movwf	postinc1,c
  5476  01211E  ECEA  F0DE         	call	_get_raw_result	;wreg free
  5477  012122  0060  F007  FFE6   	movff	btemp,postinc1
  5478  012128  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5479  01212E  0E83               	movlw	low STR_19
  5480  012130  6EE6               	movwf	postinc1,c
  5481  012132  0EFF               	movlw	high STR_19
  5482  012134  6EE6               	movwf	postinc1,c
  5483  012136  0E00               	movlw	0
  5484  012138  6EE6               	movwf	postinc1,c
  5485  01213A  0E01               	movlw	1
  5486  01213C  6EE6               	movwf	postinc1,c
  5487  01213E  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5488  012142  0060  F007  FFE6   	movff	btemp,postinc1
  5489  012148  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5490  01214E  0E0C               	movlw	12
  5491  012150  6EE6               	movwf	postinc1,c
  5492  012152  EC81  F0CE         	call	_sprintf	;wreg free
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5496                           ;stkvar	_inp_index @ sp[(-17)+14]
  5497  012156  0EFD               	movlw	-3
  5498  012158  50E3               	movf	plusw1,w,c
  5499  01215A  6E0B               	movwf	(btemp+10)^0,c
  5500  01215C  6A0C               	clrf	(btemp+11)^0,c
  5501  01215E  0E01               	movlw	1
  5502  012160  260B               	addwf	(btemp+10)^0,f,c
  5503  012162  0E00               	movlw	0
  5504  012164  220C               	addwfc	(btemp+11)^0,f,c
  5505  012166  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5506  01216C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5507                           
  5508                           ;stkvar	_k @ sp[(-19)+11]
  5509  012172  0EF8               	movlw	-8
  5510  012174  50E3               	movf	plusw1,w,c
  5511  012176  0D04               	mullw	4
  5512  012178  0EFF               	movlw	low _C
  5513  01217A  24F3               	addwf	243,w,c
  5514  01217C  6ED9               	movwf	fsr2l,c
  5515  01217E  0E06               	movlw	high _C
  5516  012180  20F4               	addwfc	prodh,w,c
  5517  012182  6EDA               	movwf	fsr2h,c
  5518  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5519  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5520  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5521  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5522                           
  5523                           ;stkvar	_k @ sp[(-23)+11]
  5524  01219C  0EF4               	movlw	-12
  5525  01219E  50E3               	movf	plusw1,w,c
  5526  0121A0  6EE6               	movwf	postinc1,c
  5527  0121A2  ECEA  F0DE         	call	_get_raw_result	;wreg free
  5528  0121A6  0060  F007  FFE6   	movff	btemp,postinc1
  5529  0121AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5530  0121B2  0E61               	movlw	low STR_21
  5531  0121B4  6EE6               	movwf	postinc1,c
  5532  0121B6  0EFF               	movlw	high STR_21
  5533  0121B8  6EE6               	movwf	postinc1,c
  5534  0121BA  0E00               	movlw	0
  5535  0121BC  6EE6               	movwf	postinc1,c
  5536  0121BE  0E02               	movlw	2
  5537  0121C0  6EE6               	movwf	postinc1,c
  5538  0121C2  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  5539  0121C6  0060  F007  FFE6   	movff	btemp,postinc1
  5540  0121CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5541  0121D2  0E0C               	movlw	12
  5542  0121D4  6EE6               	movwf	postinc1,c
  5543  0121D6  EC81  F0CE         	call	_sprintf	;wreg free
  5544                           
  5545                           ;main.c: 388:      break;
  5546  0121DA  D016               	goto	l13091
  5547  0121DC                     l13089:
  5548  0121DC  0100               	movlb	0	; () banked
  5549  0121DE  51F7               	movf	_H& (0+255),w,b
  5550  0121E0  6E0B               	movwf	(btemp+10)^0,c
  5551  0121E2  6A0C               	clrf	(btemp+11)^0,c
  5552                           
  5553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5554                           ; Switch size 1, requested type "simple"
  5555                           ; Number of cases is 1, Range of values is 0 to 0
  5556                           ; switch strategies available:
  5557                           ; Name         Instructions Cycles
  5558                           ; simple_byte            4     3 (average)
  5559                           ;	Chosen strategy is simple_byte
  5560  0121E4  500C               	movf	(btemp+11)^0,w,c
  5561  0121E6  0A00               	xorlw	0	; case 0
  5562  0121E8  A4D8               	btfss	status,2,c
  5563  0121EA  D00E               	goto	l13091
  5564                           
  5565                           ; BSR set to: 0
  5566                           ; Switch size 1, requested type "simple"
  5567                           ; Number of cases is 4, Range of values is 0 to 3
  5568                           ; switch strategies available:
  5569                           ; Name         Instructions Cycles
  5570                           ; simple_byte           13     7 (average)
  5571                           ;	Chosen strategy is simple_byte
  5572  0121EC  500B               	movf	(btemp+10)^0,w,c
  5573  0121EE  0A00               	xorlw	0	; case 0
  5574  0121F0  B4D8               	btfsc	status,2,c
  5575  0121F2  D4DF               	goto	l1360
  5576  0121F4  0A01               	xorlw	1	; case 1
  5577  0121F6  B4D8               	btfsc	status,2,c
  5578  0121F8  EFD6  F08C         	goto	l1350
  5579  0121FC  0A03               	xorlw	3	; case 2
  5580  0121FE  B4D8               	btfsc	status,2,c
  5581  012200  D5ED               	goto	l1361
  5582  012202  0A01               	xorlw	1	; case 3
  5583  012204  B4D8               	btfsc	status,2,c
  5584  012206  D6FB               	goto	l13075
  5585  012208                     l13091:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;main.c: 392:     clear_hid_pflags(&H);
  5589  012208  0EF7               	movlw	_H& (0+255)
  5590  01220A  6EE6               	movwf	postinc1,c
  5591  01220C  EC7E  F0DE         	call	_clear_hid_pflags	;wreg free
  5592                           
  5593                           ;main.c: 394:    StartTimer(TMR_DISPLAY, 250);
  5594  012210  0EFA               	movlw	250
  5595  012212  6EE6               	movwf	postinc1,c
  5596  012214  0E00               	movlw	0
  5597  012216  6EE6               	movwf	postinc1,c
  5598  012218  0E0A               	movlw	10
  5599  01221A  6EE6               	movwf	postinc1,c
  5600  01221C  ECFB  F0DA         	call	_StartTimer	;wreg free
  5601                           
  5602                           ;main.c: 395:    V.enter = check_enter_button(&H);
  5603  012220  0EF7               	movlw	_H& (0+255)
  5604  012222  6EE6               	movwf	postinc1,c
  5605  012224  EC1B  F0DB         	call	_check_enter_button	;wreg free
  5606  012228  5001               	movf	btemp^0,w,c
  5607  01222A  0101               	movlb	1	; () banked
  5608  01222C  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5609                           
  5610                           ; BSR set to: 1
  5611                           ;main.c: 396:    if (V.enter && (H.hid_display != HID_AUX)) {
  5612  01222E  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5613  012230  B4D8               	btfsc	status,2,c
  5614  012232  D013               	goto	l13105
  5615                           
  5616                           ; BSR set to: 1
  5617  012234  0E03               	movlw	3
  5618  012236  0100               	movlb	0	; () banked
  5619  012238  19F7               	xorwf	_H& (0+255),w,b
  5620  01223A  B4D8               	btfsc	status,2,c
  5621  01223C  D00E               	goto	l13105
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;main.c: 397:     V.enter = 0;
  5625  01223E  0101               	movlb	1	; () banked
  5626  012240  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5627                           
  5628                           ; BSR set to: 1
  5629                           ;main.c: 398:     V.screen = ~V.screen;
  5630  012242  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5631  012244  D002               	goto	u12720
  5632  012246  0E01               	movlw	1
  5633  012248  D001               	goto	u12726
  5634  01224A                     u12720:
  5635  01224A  0E00               	movlw	0
  5636  01224C                     u12726:
  5637  01224C  0AFF               	xorlw	255
  5638  01224E  6E0C               	movwf	(btemp+11)^0,c
  5639  012250  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5640  012252  180C               	xorwf	(btemp+11)^0,w,c
  5641  012254  0BFE               	andlw	-2
  5642  012256  180C               	xorwf	(btemp+11)^0,w,c
  5643  012258  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5644  01225A                     l13105:
  5645                           
  5646                           ;main.c: 400:    set_vterm(V.screen);
  5647  01225A  0101               	movlb	1	; () banked
  5648  01225C  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5649  01225E  D002               	goto	u12730
  5650  012260  0E01               	movlw	1
  5651  012262  D001               	goto	u12736
  5652  012264                     u12730:
  5653  012264  0E00               	movlw	0
  5654  012266                     u12736:
  5655  012266  6EE6               	movwf	postinc1,c
  5656  012268  EC3B  F0DF         	call	_set_vterm	;wreg free
  5657                           
  5658                           ;main.c: 401:    update_lcd(V.screen);
  5659  01226C  0101               	movlb	1	; () banked
  5660  01226E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5661  012270  D002               	goto	u12740
  5662  012272  0E01               	movlw	1
  5663  012274  D001               	goto	u12746
  5664  012276                     u12740:
  5665  012276  0E00               	movlw	0
  5666  012278                     u12746:
  5667  012278  6EE6               	movwf	postinc1,c
  5668  01227A  ECF9  F0CD         	call	_update_lcd	;wreg free
  5669  01227E                     l13109:
  5670                           
  5671                           ;main.c: 407:   check_help(V.flipper);
  5672  01227E  0101               	movlb	1	; () banked
  5673  012280  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5674  012282  6EE6               	movwf	postinc1,c
  5675  012284  EC20  F0C1         	call	_check_help	;wreg free
  5676                           
  5677                           ;main.c: 409:   if (V.enter) {
  5678  012288  0101               	movlb	1	; () banked
  5679  01228A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5680  01228C  B4D8               	btfsc	status,2,c
  5681  01228E  D062               	goto	l1366
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;main.c: 410:    V.enter = 0;
  5685  012290  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5686                           
  5687                           ;main.c: 411:    V.calib = 0;
  5688  012292  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;main.c: 412:    inp_index += 3;
  5692                           ;stkvar	_inp_index @ sp[(-17)+14]
  5693  012294  0EFD               	movlw	-3
  5694  012296  006F FF8C  F001    	movff	plusw1,btemp
  5695  01229C  0E03               	movlw	3
  5696  01229E  2601               	addwf	btemp^0,f,c
  5697  0122A0  0EFD               	movlw	-3
  5698  0122A2  0060  F007  FFE3   	movff	btemp,plusw1
  5699                           
  5700                           ;main.c: 413:    if (inp_index > 9)
  5701                           ;stkvar	_inp_index @ sp[(-17)+14]
  5702  0122A8  0EFD               	movlw	-3
  5703  0122AA  006F FF8C  F001    	movff	plusw1,btemp
  5704  0122B0  0E09               	movlw	9
  5705  0122B2  6401               	cpfsgt	btemp^0,c
  5706  0122B4  D03A               	goto	l13137
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;main.c: 414:     inp_index = 0;
  5710                           ;stkvar	_inp_index @ sp[(-17)+14]
  5711  0122B6  0EFD               	movlw	-3
  5712  0122B8  6AE3               	clrf	plusw1,c
  5713  0122BA  D037               	goto	l13137
  5714  0122BC                     l13119:
  5715                           
  5716                           ; BSR set to: 1
  5717                           ;main.c: 417:     i = C_BATT;
  5718                           ;stkvar	_i @ sp[(-17)+13]
  5719  0122BC  0EFC               	movlw	-4
  5720  0122BE  6AE3               	clrf	plusw1,c
  5721                           
  5722                           ; BSR set to: 1
  5723                           ;main.c: 418:     j = C_PV;
  5724                           ;stkvar	_j @ sp[(-17)+12]
  5725  0122C0  0EFB               	movlw	-5
  5726  0122C2  6AE3               	clrf	plusw1,c
  5727  0122C4  2AE3               	incf	plusw1,f,c
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;main.c: 419:     k = V_CC;
  5731                           ;stkvar	_k @ sp[(-17)+11]
  5732  0122C6  0EFA               	movlw	-6
  5733  0122C8  6AE3               	clrf	plusw1,c
  5734  0122CA  82E3               	bsf	plusw1,1,c
  5735                           
  5736                           ;main.c: 420:     break;
  5737  0122CC  D043               	goto	l1366
  5738  0122CE                     l13125:
  5739                           
  5740                           ; BSR set to: 1
  5741                           ;main.c: 422:     i = V_BAT;
  5742                           ;stkvar	_i @ sp[(-17)+13]
  5743  0122CE  0EFC               	movlw	-4
  5744  0122D0  6AE3               	clrf	plusw1,c
  5745  0122D2  84E3               	bsf	plusw1,2,c
  5746                           
  5747                           ;main.c: 423:     j = V_PV;
  5748                           ;stkvar	_j @ sp[(-17)+12]
  5749  0122D4  0EFB               	movlw	-5
  5750  0122D6  6AE3               	clrf	plusw1,c
  5751  0122D8  80E3               	bsf	plusw1,0,c
  5752  0122DA  84E3               	bsf	plusw1,2,c	;indir
  5753                           
  5754                           ;main.c: 424:     k = V_CBUS;
  5755                           ;stkvar	_k @ sp[(-17)+11]
  5756  0122DC  0EFA               	movlw	-6
  5757  0122DE  6AE3               	clrf	plusw1,c
  5758  0122E0  82E3               	bsf	plusw1,1,c
  5759  0122E2  84E3               	bsf	plusw1,2,c	;indir
  5760                           
  5761                           ;main.c: 425:     break;
  5762  0122E4  D037               	goto	l1366
  5763  0122E6                     l13127:
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;main.c: 427:     i = V_BBAT;
  5767                           ;stkvar	_i @ sp[(-17)+13]
  5768  0122E6  0EFC               	movlw	-4
  5769  0122E8  6AE3               	clrf	plusw1,c
  5770  0122EA  82E3               	bsf	plusw1,1,c
  5771  0122EC  86E3               	bsf	plusw1,3,c	;indir
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;main.c: 428:     j = V_TEMP;
  5775  0122EE  0E0B               	movlw	11
  5776  0122F0  6E0C               	movwf	(btemp+11)^0,c
  5777                           
  5778                           ;stkvar	_j @ sp[(-17)+12]
  5779  0122F2  0EFB               	movlw	-5
  5780  0122F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5781                           
  5782                           ; BSR set to: 1
  5783                           ;main.c: 429:     k = V_INVERTER;
  5784                           ;stkvar	_k @ sp[(-17)+11]
  5785  0122FA  0EFA               	movlw	-6
  5786  0122FC  6AE3               	clrf	plusw1,c
  5787  0122FE  84E3               	bsf	plusw1,2,c
  5788  012300  86E3               	bsf	plusw1,3,c	;indir
  5789                           
  5790                           ;main.c: 430:     break;
  5791  012302  D028               	goto	l1366
  5792  012304                     l13133:
  5793                           
  5794                           ; BSR set to: 1
  5795                           ;main.c: 432:     i = V_LIGHT_SENSOR;
  5796  012304  0E0D               	movlw	13
  5797  012306  6E0C               	movwf	(btemp+11)^0,c
  5798                           
  5799                           ;stkvar	_i @ sp[(-17)+13]
  5800  012308  0EFC               	movlw	-4
  5801  01230A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5802                           
  5803                           ;main.c: 433:     j = V_LIGHT_SENSOR;
  5804  012310  0E0D               	movlw	13
  5805  012312  6E0C               	movwf	(btemp+11)^0,c
  5806                           
  5807                           ;stkvar	_j @ sp[(-17)+12]
  5808  012314  0EFB               	movlw	-5
  5809  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5810                           
  5811                           ;main.c: 434:     k = V_LIGHT_SENSOR;
  5812  01231C  0E0D               	movlw	13
  5813  01231E  6E0C               	movwf	(btemp+11)^0,c
  5814                           
  5815                           ;stkvar	_k @ sp[(-17)+11]
  5816  012320  0EFA               	movlw	-6
  5817  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5818                           
  5819                           ;main.c: 435:     break;
  5820  012328  D015               	goto	l1366
  5821  01232A                     l13137:
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;stkvar	_inp_index @ sp[(-17)+14]
  5825  01232A  0EFD               	movlw	-3
  5826  01232C  50E3               	movf	plusw1,w,c
  5827  01232E  6E0B               	movwf	(btemp+10)^0,c
  5828  012330  6A0C               	clrf	(btemp+11)^0,c
  5829                           
  5830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5831                           ; Switch size 1, requested type "simple"
  5832                           ; Number of cases is 1, Range of values is 0 to 0
  5833                           ; switch strategies available:
  5834                           ; Name         Instructions Cycles
  5835                           ; simple_byte            4     3 (average)
  5836                           ;	Chosen strategy is simple_byte
  5837  012332  500C               	movf	(btemp+11)^0,w,c
  5838  012334  0A00               	xorlw	0	; case 0
  5839  012336  A4D8               	btfss	status,2,c
  5840  012338  D00D               	goto	l1366
  5841                           
  5842                           ; BSR set to: 1
  5843                           ; Switch size 1, requested type "simple"
  5844                           ; Number of cases is 4, Range of values is 0 to 9
  5845                           ; switch strategies available:
  5846                           ; Name         Instructions Cycles
  5847                           ; simple_byte           13     7 (average)
  5848                           ;	Chosen strategy is simple_byte
  5849  01233A  500B               	movf	(btemp+10)^0,w,c
  5850  01233C  0A00               	xorlw	0	; case 0
  5851  01233E  B4D8               	btfsc	status,2,c
  5852  012340  D7BD               	goto	l13119
  5853  012342  0A03               	xorlw	3	; case 3
  5854  012344  B4D8               	btfsc	status,2,c
  5855  012346  D7C3               	goto	l13125
  5856  012348  0A05               	xorlw	5	; case 6
  5857  01234A  B4D8               	btfsc	status,2,c
  5858  01234C  D7CC               	goto	l13127
  5859  01234E  0A0F               	xorlw	15	; case 9
  5860  012350  B4D8               	btfsc	status,2,c
  5861  012352  D7D8               	goto	l13133
  5862  012354                     l1366:
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;main.c: 444:   if (V.set_sequ) {
  5866  012354  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5867  012356  EF8A  F08C         	goto	l13019
  5868                           
  5869                           ; BSR set to: 1
  5870                           ;main.c: 445:    if (TimerDone(TMR_INFO)) {
  5871  01235A  0E07               	movlw	7
  5872  01235C  6EE6               	movwf	postinc1,c
  5873  01235E  EC65  F0DD         	call	_TimerDone	;wreg free
  5874  012362  5001               	movf	btemp^0,w,c
  5875  012364  B4D8               	btfsc	status,2,c
  5876  012366  D00C               	goto	l13147
  5877                           
  5878                           ;main.c: 446:     V.set_sequ = 0;
  5879  012368  0101               	movlb	1	; () banked
  5880  01236A  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5881                           
  5882                           ; BSR set to: 1
  5883                           ;main.c: 447:     set_vterm(0);
  5884  01236C  0E00               	movlw	0
  5885  01236E  6EE6               	movwf	postinc1,c
  5886  012370  EC3B  F0DF         	call	_set_vterm	;wreg free
  5887                           
  5888                           ;main.c: 448:     update_lcd(0);
  5889  012374  0E00               	movlw	0
  5890  012376  6EE6               	movwf	postinc1,c
  5891  012378  ECF9  F0CD         	call	_update_lcd	;wreg free
  5892                           
  5893                           ;main.c: 449:    } else {
  5894  01237C  EF8A  F08C         	goto	l13019
  5895  012380                     l13147:
  5896                           
  5897                           ;main.c: 450:     set_vterm(2);
  5898  012380  0E02               	movlw	2
  5899  012382  6EE6               	movwf	postinc1,c
  5900  012384  EC3B  F0DF         	call	_set_vterm	;wreg free
  5901                           
  5902                           ;main.c: 451:     update_lcd(2);
  5903  012388  0E02               	movlw	2
  5904  01238A  6EE6               	movwf	postinc1,c
  5905  01238C  ECF9  F0CD         	call	_update_lcd	;wreg free
  5906  012390  EF8A  F08C         	goto	l13019
  5907  012394                     __end_of_main:
  5908                           	opt callstack 0
  5909                           
  5910 ;; *************** function _static_soc *****************
  5911 ;; Defined at:
  5912 ;;		line 117 in file "mbmc.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1  [STACK] void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr2l, fsr2h
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/1
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:   15
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_main
  5937 ;; This function uses a reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text1
  5941  01B128                     __ptext1:
  5942                           	opt callstack 0
  5943  01B128                     _static_soc:
  5944                           	opt callstack 15
  5945                           
  5946                           ;mbmc.c: 119:  C.runtime = 120;
  5947                           
  5948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5949                           ;incstack = 0
  5950  01B128  0E78               	movlw	120
  5951  01B12A  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  5952  01B130  0E00               	movlw	0
  5953  01B132  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  5954                           
  5955                           ;mbmc.c: 120:  C.soc = 100;
  5956  01B138  0E64               	movlw	100
  5957  01B13A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  5958  01B140  0E00               	movlw	0
  5959  01B142  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  5960                           
  5961                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5962  01B148  EE21  F38B         	lfsr	2,_C+140	;volatile
  5963  01B14C  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5964  01B152  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5965  01B158  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5966  01B15E  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5967                           
  5968                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  5969  01B164  EE21  F38F         	lfsr	2,_C+144	;volatile
  5970  01B168  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  5971  01B16E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  5972  01B174  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  5973  01B17A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  5974                           
  5975                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5976  01B180  0012               	return		;funcret
  5977  01B182                     __end_of_static_soc:
  5978                           	opt callstack 0
  5979                           
  5980 ;; *************** function _start_switch_handler *****************
  5981 ;; Defined at:
  5982 ;;		line 124 in file "dio.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1  [STACK] void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 3F/39
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:   16
  6003 ;; This function calls:
  6004 ;;		_INT1_SetInterruptHandler
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text2
  6011  01BE18                     __ptext2:
  6012                           	opt callstack 0
  6013  01BE18                     _start_switch_handler:
  6014                           	opt callstack 14
  6015                           
  6016                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  6017                           
  6018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6019                           ;incstack = 0
  6020  01BE18  0139               	movlb	57	; () banked
  6021  01BE1A  9195               	bcf	149,0,b	;volatile
  6022                           
  6023                           ; BSR set to: 57
  6024                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6025  01BE1C  0ED4               	movlw	low _switch_handler
  6026  01BE1E  6EE6               	movwf	postinc1,c
  6027  01BE20  0E93               	movlw	high _switch_handler
  6028  01BE22  6EE6               	movwf	postinc1,c
  6029  01BE24  0E01               	movlw	low (_switch_handler shr (0+16))
  6030  01BE26  6EE6               	movwf	postinc1,c
  6031  01BE28  ECF1  F0DD         	call	_INT1_SetInterruptHandler	;wreg free
  6032                           
  6033                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6034  01BE2C  0E02               	movlw	2
  6035  01BE2E  0102               	movlb	2	; () banked
  6036  01BE30  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6037                           
  6038                           ; BSR set to: 2
  6039                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6040  01BE32  0139               	movlb	57	; () banked
  6041  01BE34  8195               	bsf	149,0,b	;volatile
  6042                           
  6043                           ; BSR set to: 57
  6044                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6045  01BE36  0012               	return		;funcret
  6046  01BE38                     __end_of_start_switch_handler:
  6047                           	opt callstack 0
  6048                           
  6049 ;; *************** function _srand *****************
  6050 ;; Defined at:
  6051 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  s               2  [STACK] unsigned int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1  [STACK] void 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 3F/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:   15
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;; This function uses a reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text3
  6080  01B84C                     __ptext3:
  6081                           	opt callstack 0
  6082  01B84C                     _srand:
  6083                           	opt callstack 15
  6084                           
  6085                           ;stkvar	_s @ sp[(0)+-2]
  6086                           
  6087                           ; BSR set to: 57
  6088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6089                           ;incstack = 0
  6090  01B84C  0EFE               	movlw	-2
  6091  01B84E  50E3               	movf	plusw1,w,c
  6092  01B850  0FFF               	addlw	255
  6093  01B852  6E0B               	movwf	(btemp+10)^0,c
  6094  01B854  0EFF               	movlw	-1
  6095  01B856  006F FF8C  F00C    	movff	plusw1,btemp+11
  6096  01B85C  0EFF               	movlw	255
  6097  01B85E  220C               	addwfc	(btemp+11)^0,f,c
  6098  01B860  0060  F02C  F0CF   	movff	btemp+10,_seed
  6099  01B866  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6100  01B86C  0100               	movlb	0	; () banked
  6101  01B86E  6BD1               	clrf	(_seed+2)& (0+255),b
  6102  01B870  6BD2               	clrf	(_seed+3)& (0+255),b
  6103  01B872  6BD3               	clrf	(_seed+4)& (0+255),b
  6104  01B874  6BD4               	clrf	(_seed+5)& (0+255),b
  6105  01B876  6BD5               	clrf	(_seed+6)& (0+255),b
  6106  01B878  6BD6               	clrf	(_seed+7)& (0+255),b
  6107                           
  6108                           ; BSR set to: 0
  6109                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6110  01B87A  52E5               	movf	postdec1,f,c
  6111  01B87C  52E5               	movf	postdec1,f,c
  6112  01B87E  0012               	return		;funcret
  6113  01B880                     __end_of_srand:
  6114                           	opt callstack 0
  6115                           
  6116 ;; *************** function _spinners *****************
  6117 ;; Defined at:
  6118 ;;		line 146 in file "mbmc.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  shape           1  [STACK] unsigned char 
  6121 ;;  reset           1  [STACK] unsigned char 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  c               1  [STACK] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1  [STACK] unsigned char 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6137 ;;Total ram usage:        0 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:   16
  6140 ;; This function calls:
  6141 ;;		_strlen
  6142 ;; This function is called by:
  6143 ;;		_main
  6144 ;; This function uses a reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text4
  6148  01A0E8                     __ptext4:
  6149                           	opt callstack 0
  6150  01A0E8                     _spinners:
  6151                           	opt callstack 0
  6152                           
  6153                           ; BSR set to: 0
  6154                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6155  01A0E8  52E6               	movf	postinc1,f,c
  6156                           
  6157                           ;mbmc.c: 146: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 147: {;mbmc.c: 148:  s
      +                          tatic uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6158                           ;stkvar	_shape @ sp[(-1)+-1]
  6159                           
  6160                           ;incstack = 0
  6161  01A0EA  0EFE               	movlw	-2
  6162  01A0EC  006F FF8C  F001    	movff	plusw1,btemp
  6163  01A0F2  0E05               	movlw	5
  6164  01A0F4  6401               	cpfsgt	btemp^0,c
  6165  01A0F6  D002               	goto	l1882
  6166                           
  6167                           ;mbmc.c: 152:   shape = 0;
  6168                           ;stkvar	_shape @ sp[(-1)+-1]
  6169  01A0F8  0EFE               	movlw	-2
  6170  01A0FA  6AE3               	clrf	plusw1,c
  6171  01A0FC                     l1882:
  6172                           
  6173                           ;mbmc.c: 153:  if (reset)
  6174                           ;stkvar	_reset @ sp[(-1)+-2]
  6175  01A0FC  0EFD               	movlw	-3
  6176  01A0FE  50E3               	movf	plusw1,w,c
  6177  01A100  B4D8               	btfsc	status,2,c
  6178  01A102  D00A               	goto	l10811
  6179                           
  6180                           ;mbmc.c: 154:   s[shape] = 0;
  6181                           ;stkvar	_shape @ sp[(-1)+-1]
  6182  01A104  0EFE               	movlw	-2
  6183  01A106  006F FF8C  F00C    	movff	plusw1,btemp+11
  6184  01A10C  500C               	movf	(btemp+11)^0,w,c
  6185  01A10E  0F74               	addlw	low spinners@s
  6186  01A110  6ED9               	movwf	fsr2l,c
  6187  01A112  6ADA               	clrf	fsr2h,c
  6188  01A114  0E00               	movlw	0
  6189  01A116  6EDF               	movwf	indf2,c
  6190  01A118                     l10811:
  6191                           
  6192                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6193                           ;stkvar	_shape @ sp[(-1)+-1]
  6194  01A118  0EFE               	movlw	-2
  6195  01A11A  50E3               	movf	plusw1,w,c
  6196  01A11C  0D14               	mullw	20
  6197  01A11E  0EB5               	movlw	low _spin
  6198  01A120  6E0B               	movwf	(btemp+10)^0,c
  6199  01A122  0EFB               	movlw	high _spin
  6200  01A124  6E0C               	movwf	(btemp+11)^0,c
  6201  01A126  50F3               	movf	243,w,c
  6202  01A128  260B               	addwf	(btemp+10)^0,f,c
  6203  01A12A  50F4               	movf	244,w,c
  6204  01A12C  220C               	addwfc	(btemp+11)^0,f,c
  6205                           
  6206                           ;stkvar	_shape @ sp[(-1)+-1]
  6207  01A12E  0EFE               	movlw	-2
  6208  01A130  006F FF8C  F00A    	movff	plusw1,btemp+9
  6209  01A136  500A               	movf	(btemp+9)^0,w,c
  6210  01A138  0F74               	addlw	low spinners@s
  6211  01A13A  6ED9               	movwf	fsr2l,c
  6212  01A13C  6ADA               	clrf	fsr2h,c
  6213  01A13E  50DF               	movf	indf2,w,c
  6214  01A140  260B               	addwf	(btemp+10)^0,f,c
  6215  01A142  0E00               	movlw	0
  6216  01A144  220C               	addwfc	(btemp+11)^0,f,c
  6217  01A146  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6218  01A14C  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6219  01A152                     	if	0	;tblptru may be non-zero
  6220  01A152                     	endif
  6221  01A152                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6222  01A152  0E00               	movlw	low (__mediumconst shr (0+16))
  6223  01A154  6EF8               	movwf	tblptru,c
  6224  01A156                     	endif
  6225                           
  6226                           ;stkvar	_c @ sp[(-1)+0]
  6227  01A156  0008               	tblrd		*
  6228  01A158  0EFF               	movlw	-1
  6229  01A15A  006F FFD7 FFE3     	movff	tablat,plusw1
  6230                           
  6231                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6232                           ;stkvar	_shape @ sp[(-1)+-1]
  6233  01A160  0EFE               	movlw	-2
  6234  01A162  50E3               	movf	plusw1,w,c
  6235  01A164  0D14               	mullw	20
  6236  01A166  0EB5               	movlw	low _spin
  6237  01A168  6E0B               	movwf	(btemp+10)^0,c
  6238  01A16A  0EFB               	movlw	high _spin
  6239  01A16C  6E0C               	movwf	(btemp+11)^0,c
  6240  01A16E  50F3               	movf	243,w,c
  6241  01A170  260B               	addwf	(btemp+10)^0,f,c
  6242  01A172  50F4               	movf	244,w,c
  6243  01A174  220C               	addwfc	(btemp+11)^0,f,c
  6244  01A176  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6245  01A17C  0060  F033  FFE6   	movff	btemp+11,postinc1
  6246  01A182  EC40  F0D4         	call	_strlen	;wreg free
  6247                           
  6248                           ;stkvar	_shape @ sp[(-1)+-1]
  6249  01A186  0EFE               	movlw	-2
  6250  01A188  006F FF8C  F00C    	movff	plusw1,btemp+11
  6251  01A18E  500C               	movf	(btemp+11)^0,w,c
  6252  01A190  0F74               	addlw	low spinners@s
  6253  01A192  6ED9               	movwf	fsr2l,c
  6254  01A194  6ADA               	clrf	fsr2h,c
  6255  01A196  2ADF               	incf	indf2,f,c
  6256  01A198  50DF               	movf	indf2,w,c
  6257  01A19A  6E0B               	movwf	(btemp+10)^0,c
  6258  01A19C  6A0C               	clrf	(btemp+11)^0,c
  6259  01A19E  5001               	movf	btemp^0,w,c
  6260  01A1A0  5C0B               	subwf	(btemp+10)^0,w,c
  6261  01A1A2  5002               	movf	(btemp+1)^0,w,c
  6262  01A1A4  580C               	subwfb	(btemp+11)^0,w,c
  6263  01A1A6  A0D8               	btfss	status,0,c
  6264  01A1A8  D00A               	goto	l10817
  6265                           
  6266                           ;mbmc.c: 157:   s[shape] = 0;
  6267                           ;stkvar	_shape @ sp[(-1)+-1]
  6268  01A1AA  0EFE               	movlw	-2
  6269  01A1AC  006F FF8C  F00C    	movff	plusw1,btemp+11
  6270  01A1B2  500C               	movf	(btemp+11)^0,w,c
  6271  01A1B4  0F74               	addlw	low spinners@s
  6272  01A1B6  6ED9               	movwf	fsr2l,c
  6273  01A1B8  6ADA               	clrf	fsr2h,c
  6274  01A1BA  0E00               	movlw	0
  6275  01A1BC  6EDF               	movwf	indf2,c
  6276  01A1BE                     l10817:
  6277                           
  6278                           ;mbmc.c: 158:  return c;
  6279                           ;stkvar	_c @ sp[(-1)+0]
  6280  01A1BE  0EFF               	movlw	-1
  6281  01A1C0  006F FF8C  F001    	movff	plusw1,btemp
  6282                           
  6283                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6284  01A1C6  52E5               	movf	postdec1,f,c
  6285  01A1C8  52E5               	movf	postdec1,f,c
  6286  01A1CA  52E5               	movf	postdec1,f,c
  6287  01A1CC  0012               	return		;funcret
  6288  01A1CE                     __end_of_spinners:
  6289                           	opt callstack 0
  6290                           
  6291 ;; *************** function _init_port_dma *****************
  6292 ;; Defined at:
  6293 ;;		line 90 in file "eadog.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1  [STACK] void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/1
  6304 ;;		On exit  : 3F/3B
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:   15
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;; This function uses a reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text5
  6322  01B8B4                     __ptext5:
  6323                           	opt callstack 0
  6324  01B8B4                     _init_port_dma:
  6325                           	opt callstack 15
  6326                           
  6327                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6328                           
  6329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6330                           ;incstack = 0
  6331  01B8B4  0E3F               	movlw	-193
  6332  01B8B6  013B               	movlb	59	; () banked
  6333  01B8B8  17DD               	andwf	221,f,b	;volatile
  6334                           
  6335                           ; BSR set to: 59
  6336                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6337  01B8BA  9BDD               	bcf	221,5,b	;volatile
  6338                           
  6339                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6340  01B8BC  51DD               	movf	221,w,b	;volatile
  6341  01B8BE  0BF9               	andlw	-7
  6342  01B8C0  0902               	iorlw	2
  6343  01B8C2  6FDD               	movwf	221,b	;volatile
  6344                           
  6345                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6346  01B8C4  0EE7               	movlw	-25
  6347  01B8C6  17DD               	andwf	221,f,b	;volatile
  6348                           
  6349                           ; BSR set to: 59
  6350                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6351  01B8C8  81DD               	bsf	221,0,b	;volatile
  6352                           
  6353                           ; BSR set to: 59
  6354                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6355  01B8CA  9DDC               	bcf	220,6,b	;volatile
  6356                           
  6357                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6358  01B8CC  0E3D               	movlw	61
  6359  01B8CE  6FD1               	movwf	209,b	;volatile
  6360  01B8D0  0EEA               	movlw	234
  6361  01B8D2  6FD0               	movwf	208,b	;volatile
  6362                           
  6363                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6364  01B8D4  0EFF               	movlw	low _port_data
  6365  01B8D6  6FD9               	movwf	217,b	;volatile
  6366  01B8D8  0E04               	movlw	high _port_data
  6367  01B8DA  6FDA               	movwf	218,b	;volatile
  6368  01B8DC  0E00               	movlw	low (_port_data shr (0+16))
  6369  01B8DE  6FDB               	movwf	219,b	;volatile
  6370                           
  6371                           ; BSR set to: 59
  6372                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6373  01B8E0  9BDC               	bcf	220,5,b	;volatile
  6374                           
  6375                           ; BSR set to: 59
  6376                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6377  01B8E2  0012               	return		;funcret
  6378  01B8E4                     __end_of_init_port_dma:
  6379                           	opt callstack 0
  6380                           
  6381 ;; *************** function _init_display *****************
  6382 ;; Defined at:
  6383 ;;		line 38 in file "eadog.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;		None
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1  [STACK] void 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6392 ;; Tracked objects:
  6393 ;;		On entry : 3F/3B
  6394 ;;		On exit  : 3F/3D
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:   17
  6404 ;; This function calls:
  6405 ;;		_ringBufS_init
  6406 ;;		_send_lcd_cmd
  6407 ;;		_send_lcd_cmd_long
  6408 ;;		_wdtdelay
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;; This function uses a reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text6
  6415  019FFE                     __ptext6:
  6416                           	opt callstack 0
  6417  019FFE                     _init_display:
  6418                           	opt callstack 13
  6419                           
  6420                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6421                           
  6422                           ; BSR set to: 59
  6423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6424                           ;incstack = 0
  6425  019FFE  0E83               	movlw	low _ring_buf1
  6426  01A000  0100               	movlb	0	; () banked
  6427  01A002  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6428  01A004  0E03               	movlw	high _ring_buf1
  6429  01A006  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6430                           
  6431                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6432  01A008  0E40               	movlw	low _ring_buf2
  6433  01A00A  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6434  01A00C  0E03               	movlw	high _ring_buf2
  6435  01A00E  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6439  01A010  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6440  01A016  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6441  01A01C  EC51  F0DD         	call	_ringBufS_init	;wreg free
  6442                           
  6443                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6444  01A020  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6445  01A026  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6446  01A02C  EC51  F0DD         	call	_ringBufS_init	;wreg free
  6447                           
  6448                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6449  01A030  84BE               	bsf	190,2,c	;volatile
  6450  01A032  84BC               	bsf	188,2,c	;volatile
  6451                           
  6452                           ;eadog.c: 59:  wdtdelay(350000);
  6453  01A034  0E30               	movlw	48
  6454  01A036  6EE6               	movwf	postinc1,c
  6455  01A038  0E57               	movlw	87
  6456  01A03A  6EE6               	movwf	postinc1,c
  6457  01A03C  0E05               	movlw	5
  6458  01A03E  6EE6               	movwf	postinc1,c
  6459  01A040  0E00               	movlw	0
  6460  01A042  6EE6               	movwf	postinc1,c
  6461  01A044  ECC1  F0D8         	call	_wdtdelay	;wreg free
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6465  01A048  0E39               	movlw	57
  6466  01A04A  6EE6               	movwf	postinc1,c
  6467  01A04C  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6471  01A050  0E1D               	movlw	29
  6472  01A052  6EE6               	movwf	postinc1,c
  6473  01A054  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6477  01A058  0E50               	movlw	80
  6478  01A05A  6EE6               	movwf	postinc1,c
  6479  01A05C  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6483  01A060  0E6C               	movlw	108
  6484  01A062  6EE6               	movwf	postinc1,c
  6485  01A064  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6489  01A068  0E76               	movlw	118
  6490  01A06A  6EE6               	movwf	postinc1,c
  6491  01A06C  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6495  01A070  0E38               	movlw	56
  6496  01A072  6EE6               	movwf	postinc1,c
  6497  01A074  EC29  F0DD         	call	_send_lcd_cmd_long	;wreg free
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6501  01A078  0E0F               	movlw	15
  6502  01A07A  6EE6               	movwf	postinc1,c
  6503  01A07C  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6507  01A080  0E01               	movlw	1
  6508  01A082  6EE6               	movwf	postinc1,c
  6509  01A084  EC29  F0DD         	call	_send_lcd_cmd_long	;wreg free
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6513  01A088  0E02               	movlw	2
  6514  01A08A  6EE6               	movwf	postinc1,c
  6515  01A08C  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6519  01A090  0E06               	movlw	6
  6520  01A092  6EE6               	movwf	postinc1,c
  6521  01A094  EC3D  F0DD         	call	_send_lcd_cmd	;wreg free
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;eadog.c: 70:  wdtdelay(30);
  6525  01A098  0E1E               	movlw	30
  6526  01A09A  6EE6               	movwf	postinc1,c
  6527  01A09C  0E00               	movlw	0
  6528  01A09E  6EE6               	movwf	postinc1,c
  6529  01A0A0  0E00               	movlw	0
  6530  01A0A2  6EE6               	movwf	postinc1,c
  6531  01A0A4  0E00               	movlw	0
  6532  01A0A6  6EE6               	movwf	postinc1,c
  6533  01A0A8  ECC1  F0D8         	call	_wdtdelay	;wreg free
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6537  01A0AC  0E02               	movlw	2
  6538  01A0AE  013D               	movlb	61	; () banked
  6539  01A0B0  6F16               	movwf	22,b	;volatile
  6540                           
  6541                           ; BSR set to: 61
  6542                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6543  01A0B2  0E40               	movlw	64
  6544  01A0B4  6F15               	movwf	21,b	;volatile
  6545                           
  6546                           ; BSR set to: 61
  6547                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6548  01A0B6  0E83               	movlw	131
  6549  01A0B8  6F14               	movwf	20,b	;volatile
  6550                           
  6551                           ; BSR set to: 61
  6552                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6553  01A0BA  931A               	bcf	26,1,b	;volatile
  6554                           
  6555                           ; BSR set to: 61
  6556                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6557  01A0BC  0E3F               	movlw	-193
  6558  01A0BE  013B               	movlb	59	; () banked
  6559  01A0C0  17FD               	andwf	253,f,b	;volatile
  6560                           
  6561                           ; BSR set to: 59
  6562                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6563  01A0C2  9BFD               	bcf	253,5,b	;volatile
  6564                           
  6565                           ; BSR set to: 59
  6566                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6567  01A0C4  51FD               	movf	253,w,b	;volatile
  6568  01A0C6  0BF9               	andlw	-7
  6569  01A0C8  0902               	iorlw	2
  6570  01A0CA  6FFD               	movwf	253,b	;volatile
  6571                           
  6572                           ; BSR set to: 59
  6573                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6574  01A0CC  0EE7               	movlw	-25
  6575  01A0CE  17FD               	andwf	253,f,b	;volatile
  6576                           
  6577                           ; BSR set to: 59
  6578                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6579  01A0D0  81FD               	bsf	253,0,b	;volatile
  6580                           
  6581                           ; BSR set to: 59
  6582                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6583  01A0D2  0E83               	movlw	low _ring_buf1
  6584  01A0D4  6FF9               	movwf	249,b	;volatile
  6585  01A0D6  0E03               	movlw	high _ring_buf1
  6586  01A0D8  6FFA               	movwf	250,b	;volatile
  6587  01A0DA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6588  01A0DC  6FFB               	movwf	251,b	;volatile
  6589                           
  6590                           ; BSR set to: 59
  6591                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6592  01A0DE  9BFC               	bcf	252,5,b	;volatile
  6593                           
  6594                           ; BSR set to: 59
  6595                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6596  01A0E0  013D               	movlb	61	; () banked
  6597  01A0E2  831A               	bsf	26,1,b	;volatile
  6598                           
  6599                           ; BSR set to: 61
  6600                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6601  01A0E4  94BE               	bcf	190,2,c	;volatile
  6602                           
  6603                           ; BSR set to: 61
  6604                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6605  01A0E6  0012               	return		;funcret
  6606  01A0E8                     __end_of_init_display:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function _send_lcd_cmd_long *****************
  6610 ;; Defined at:
  6611 ;;		line 129 in file "eadog.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  cmd             1  [STACK] const unsigned char 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1  [STACK] void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6620 ;; Tracked objects:
  6621 ;;		On entry : 3F/0
  6622 ;;		On exit  : 3F/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6629 ;;Total ram usage:        0 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:   16
  6632 ;; This function calls:
  6633 ;;		_SPI1_Exchange8bit
  6634 ;;		_wdtdelay
  6635 ;; This function is called by:
  6636 ;;		_init_display
  6637 ;; This function uses a reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text7
  6641  01BA52                     __ptext7:
  6642                           	opt callstack 0
  6643  01BA52                     _send_lcd_cmd_long:
  6644                           	opt callstack 13
  6645                           
  6646                           ; BSR set to: 61
  6647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6648                           ;incstack = 0
  6649                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6650  01BA52  92BC               	bcf	188,1,c	;volatile
  6651                           
  6652                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6653  01BA54  94BC               	bcf	188,2,c	;volatile
  6654                           
  6655                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6656                           ;stkvar	_cmd @ sp[(0)+-1]
  6657  01BA56  0EFF               	movlw	-1
  6658  01BA58  50E3               	movf	plusw1,w,c
  6659  01BA5A  6EE6               	movwf	postinc1,c
  6660  01BA5C  EC2C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6661                           
  6662                           ; BSR set to: 57
  6663                           ;eadog.c: 134:  wdtdelay(800);
  6664  01BA60  0E20               	movlw	32
  6665  01BA62  6EE6               	movwf	postinc1,c
  6666  01BA64  0E03               	movlw	3
  6667  01BA66  6EE6               	movwf	postinc1,c
  6668  01BA68  0E00               	movlw	0
  6669  01BA6A  6EE6               	movwf	postinc1,c
  6670  01BA6C  0E00               	movlw	0
  6671  01BA6E  6EE6               	movwf	postinc1,c
  6672  01BA70  ECC1  F0D8         	call	_wdtdelay	;wreg free
  6673                           
  6674                           ; BSR set to: 0
  6675  01BA74  82BC               	bsf	188,1,c	;volatile
  6676                           
  6677                           ; BSR set to: 0
  6678                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6679  01BA76  52E5               	movf	postdec1,f,c
  6680  01BA78  0012               	return		;funcret
  6681  01BA7A                     __end_of_send_lcd_cmd_long:
  6682                           	opt callstack 0
  6683                           
  6684 ;; *************** function _send_lcd_cmd *****************
  6685 ;; Defined at:
  6686 ;;		line 117 in file "eadog.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  cmd             1  [STACK] const unsigned char 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1  [STACK] void 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6695 ;; Tracked objects:
  6696 ;;		On entry : 3F/0
  6697 ;;		On exit  : 3F/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:   16
  6707 ;; This function calls:
  6708 ;;		_SPI1_Exchange8bit
  6709 ;;		_wdtdelay
  6710 ;; This function is called by:
  6711 ;;		_init_display
  6712 ;; This function uses a reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text8
  6716  01BA7A                     __ptext8:
  6717                           	opt callstack 0
  6718  01BA7A                     _send_lcd_cmd:
  6719                           	opt callstack 13
  6720                           
  6721                           ; BSR set to: 0
  6722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6723                           ;incstack = 0
  6724                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6725  01BA7A  92BC               	bcf	188,1,c	;volatile
  6726                           
  6727                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6728  01BA7C  94BC               	bcf	188,2,c	;volatile
  6729                           
  6730                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6731                           ;stkvar	_cmd @ sp[(0)+-1]
  6732  01BA7E  0EFF               	movlw	-1
  6733  01BA80  50E3               	movf	plusw1,w,c
  6734  01BA82  6EE6               	movwf	postinc1,c
  6735  01BA84  EC2C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6736                           
  6737                           ; BSR set to: 57
  6738                           ;eadog.c: 122:  wdtdelay(30);
  6739  01BA88  0E1E               	movlw	30
  6740  01BA8A  6EE6               	movwf	postinc1,c
  6741  01BA8C  0E00               	movlw	0
  6742  01BA8E  6EE6               	movwf	postinc1,c
  6743  01BA90  0E00               	movlw	0
  6744  01BA92  6EE6               	movwf	postinc1,c
  6745  01BA94  0E00               	movlw	0
  6746  01BA96  6EE6               	movwf	postinc1,c
  6747  01BA98  ECC1  F0D8         	call	_wdtdelay	;wreg free
  6748                           
  6749                           ; BSR set to: 0
  6750  01BA9C  82BC               	bsf	188,1,c	;volatile
  6751                           
  6752                           ; BSR set to: 0
  6753                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6754  01BA9E  52E5               	movf	postdec1,f,c
  6755  01BAA0  0012               	return		;funcret
  6756  01BAA2                     __end_of_send_lcd_cmd:
  6757                           	opt callstack 0
  6758                           
  6759 ;; *************** function _SPI1_Exchange8bit *****************
  6760 ;; Defined at:
  6761 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  data            1  [STACK] unsigned char 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1  [STACK] unsigned char 
  6768 ;; Registers used:
  6769 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 3F/39
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:   15
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_send_lcd_cmd
  6786 ;;		_send_lcd_cmd_long
  6787 ;; This function uses a reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text9
  6791  01BE58                     __ptext9:
  6792                           	opt callstack 0
  6793  01BE58                     _SPI1_Exchange8bit:
  6794                           	opt callstack 13
  6795                           
  6796                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6797                           
  6798                           ; BSR set to: 0
  6799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6800                           ;incstack = 0
  6801  01BE58  0E01               	movlw	1
  6802  01BE5A  013D               	movlb	61	; () banked
  6803  01BE5C  6F12               	movwf	18,b	;volatile
  6804                           
  6805                           ; BSR set to: 61
  6806                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6807                           ;stkvar	_data @ sp[(0)+-1]
  6808  01BE5E  0EFF               	movlw	-1
  6809  01BE60  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6810  01BE66                     l807:
  6811                           
  6812                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6813  01BE66  0139               	movlb	57	; () banked
  6814  01BE68  A9A2               	btfss	162,4,b	;volatile
  6815  01BE6A  D7FD               	goto	l807
  6816                           
  6817                           ; BSR set to: 57
  6818                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6819  01BE6C  006F F440  F001    	movff	15632,btemp	;volatile
  6820                           
  6821                           ; BSR set to: 57
  6822                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6823  01BE72  52E5               	movf	postdec1,f,c
  6824  01BE74  0012               	return		;funcret
  6825  01BE76                     __end_of_SPI1_Exchange8bit:
  6826                           	opt callstack 0
  6827                           
  6828 ;; *************** function _ringBufS_init *****************
  6829 ;; Defined at:
  6830 ;;		line 22 in file "ringbufs.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  _this           2  [STACK] PTR volatile struct ring
  6833 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1  [STACK] void 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6849 ;;Total ram usage:        0 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:   16
  6852 ;; This function calls:
  6853 ;;		_memset
  6854 ;; This function is called by:
  6855 ;;		_init_display
  6856 ;; This function uses a reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text10
  6860  01BAA2                     __ptext10:
  6861                           	opt callstack 0
  6862  01BAA2                     _ringBufS_init:
  6863                           	opt callstack 13
  6864                           
  6865                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6866                           
  6867                           ; BSR set to: 57
  6868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6869                           ;incstack = 0
  6870  01BAA2  0E43               	movlw	67
  6871  01BAA4  6EE6               	movwf	postinc1,c
  6872  01BAA6  0E00               	movlw	0
  6873  01BAA8  6EE6               	movwf	postinc1,c
  6874  01BAAA  0E00               	movlw	0
  6875  01BAAC  6EE6               	movwf	postinc1,c
  6876  01BAAE  0E00               	movlw	0
  6877  01BAB0  6EE6               	movwf	postinc1,c
  6878                           
  6879                           ;stkvar	__this @ sp[(-4)+-2]
  6880  01BAB2  0EFA               	movlw	-6
  6881  01BAB4  006F FF8F FFE6     	movff	plusw1,postinc1
  6882  01BABA  006F FF8F FFE6     	movff	plusw1,postinc1
  6883  01BAC0  EC16  F0B7         	call	_memset	;wreg free
  6884                           
  6885                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6886  01BAC4  52E5               	movf	postdec1,f,c
  6887  01BAC6  52E5               	movf	postdec1,f,c
  6888  01BAC8  0012               	return		;funcret
  6889  01BACA                     __end_of_ringBufS_init:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _init_bsoc *****************
  6893 ;; Defined at:
  6894 ;;		line 107 in file "bsoc.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;		None
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1  [STACK] void 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/1
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;Total ram usage:        0 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:   18
  6915 ;; This function calls:
  6916 ;;		_TMR3_SetInterruptHandler
  6917 ;;		_Volts_to_SOC
  6918 ;;		___fldiv
  6919 ;;		___flmul
  6920 ;;		___fltol
  6921 ;;		___xxtofl
  6922 ;;		_conv_raw_result
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text11
  6929  017B9A                     __ptext11:
  6930                           	opt callstack 0
  6931  017B9A                     _init_bsoc:
  6932                           	opt callstack 12
  6933                           
  6934                           ;bsoc.c: 112:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6935                           
  6936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6937                           ;incstack = 0
  6938  017B9A  0E00               	movlw	0
  6939  017B9C  6EE6               	movwf	postinc1,c
  6940  017B9E  0E00               	movlw	0
  6941  017BA0  6EE6               	movwf	postinc1,c
  6942  017BA2  0E7A               	movlw	122
  6943  017BA4  6EE6               	movwf	postinc1,c
  6944  017BA6  0E44               	movlw	68
  6945  017BA8  6EE6               	movwf	postinc1,c
  6946  017BAA  0E00               	movlw	0
  6947  017BAC  6EE6               	movwf	postinc1,c
  6948  017BAE  0E04               	movlw	4
  6949  017BB0  6EE6               	movwf	postinc1,c
  6950  017BB2  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  6951  017BB6  0060  F007  FFE6   	movff	btemp,postinc1
  6952  017BBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6953  017BC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6954  017BC8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6955  017BCE  EC27  F0C7         	call	___fltol	;wreg free
  6956  017BD2  0060  F007  FFE6   	movff	btemp,postinc1
  6957  017BD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6958  017BDE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6959  017BE4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6960  017BEA  0E00               	movlw	0
  6961  017BEC  6EE6               	movwf	postinc1,c
  6962  017BEE  EC29  F0C2         	call	___xxtofl	;wreg free
  6963  017BF2  0060  F007  FFE6   	movff	btemp,postinc1
  6964  017BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6965  017BFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6966  017C04  0060  F013  FFE6   	movff	btemp+3,postinc1
  6967  017C0A  ECAD  F09E         	call	___flmul	;wreg free
  6968  017C0E  0060  F007  FFE6   	movff	btemp,postinc1
  6969  017C14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6970  017C1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6971  017C20  0060  F013  FFE6   	movff	btemp+3,postinc1
  6972  017C26  EC27  F0C7         	call	___fltol	;wreg free
  6973  017C2A  0060  F007  FFE6   	movff	btemp,postinc1
  6974  017C30  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6975  017C36  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6976  017C3C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6977  017C42  EC56  F0CC         	call	_Volts_to_SOC	;wreg free
  6978  017C46  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  6979  017C4C  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  6980                           
  6981                           ;bsoc.c: 113:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  6982  017C52  EE21  F38B         	lfsr	2,_C+140	;volatile
  6983  017C56  006F FF7B FFE6     	movff	postinc2,postinc1
  6984  017C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6985  017C62  006F FF7B FFE6     	movff	postinc2,postinc1
  6986  017C68  006F FF7B FFE6     	movff	postinc2,postinc1
  6987  017C6E  0E00               	movlw	0
  6988  017C70  6EE6               	movwf	postinc1,c
  6989  017C72  0E00               	movlw	0
  6990  017C74  6EE6               	movwf	postinc1,c
  6991  017C76  0EC8               	movlw	200
  6992  017C78  6EE6               	movwf	postinc1,c
  6993  017C7A  0E42               	movlw	66
  6994  017C7C  6EE6               	movwf	postinc1,c
  6995  017C7E  0E00               	movlw	0
  6996  017C80  6EE6               	movwf	postinc1,c
  6997  017C82  0E00               	movlw	0
  6998  017C84  6EE6               	movwf	postinc1,c
  6999  017C86  0E7A               	movlw	122
  7000  017C88  6EE6               	movwf	postinc1,c
  7001  017C8A  0E44               	movlw	68
  7002  017C8C  6EE6               	movwf	postinc1,c
  7003  017C8E  0E00               	movlw	0
  7004  017C90  6EE6               	movwf	postinc1,c
  7005  017C92  0E04               	movlw	4
  7006  017C94  6EE6               	movwf	postinc1,c
  7007  017C96  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7008  017C9A  0060  F007  FFE6   	movff	btemp,postinc1
  7009  017CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7010  017CA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7011  017CAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7012  017CB2  EC27  F0C7         	call	___fltol	;wreg free
  7013  017CB6  0060  F007  FFE6   	movff	btemp,postinc1
  7014  017CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7015  017CC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7016  017CC8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7017  017CCE  0E00               	movlw	0
  7018  017CD0  6EE6               	movwf	postinc1,c
  7019  017CD2  EC29  F0C2         	call	___xxtofl	;wreg free
  7020  017CD6  0060  F007  FFE6   	movff	btemp,postinc1
  7021  017CDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7022  017CE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7023  017CE8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7024  017CEE  ECAD  F09E         	call	___flmul	;wreg free
  7025  017CF2  0060  F007  FFE6   	movff	btemp,postinc1
  7026  017CF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7027  017CFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7028  017D04  0060  F013  FFE6   	movff	btemp+3,postinc1
  7029  017D0A  EC27  F0C7         	call	___fltol	;wreg free
  7030  017D0E  0060  F007  FFE6   	movff	btemp,postinc1
  7031  017D14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7032  017D1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7033  017D20  0060  F013  FFE6   	movff	btemp+3,postinc1
  7034  017D26  EC56  F0CC         	call	_Volts_to_SOC	;wreg free
  7035  017D2A  0060  F004  F00B   	movff	btemp,btemp+10
  7036  017D30  0060  F008  F00C   	movff	btemp+1,btemp+11
  7037  017D36  500B               	movf	(btemp+10)^0,w,c
  7038  017D38  6E05               	movwf	(btemp+4)^0,c
  7039  017D3A  500C               	movf	(btemp+11)^0,w,c
  7040  017D3C  6E06               	movwf	(btemp+5)^0,c
  7041  017D3E  6A07               	clrf	(btemp+6)^0,c
  7042  017D40  6A08               	clrf	(btemp+7)^0,c
  7043  017D42  0060  F017  FFE6   	movff	btemp+4,postinc1
  7044  017D48  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7045  017D4E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7046  017D54  0060  F023  FFE6   	movff	btemp+7,postinc1
  7047  017D5A  0E00               	movlw	0
  7048  017D5C  6EE6               	movwf	postinc1,c
  7049  017D5E  EC29  F0C2         	call	___xxtofl	;wreg free
  7050  017D62  0060  F007  FFE6   	movff	btemp,postinc1
  7051  017D68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7052  017D6E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7053  017D74  0060  F013  FFE6   	movff	btemp+3,postinc1
  7054  017D7A  ECA0  F0A6         	call	___fldiv	;wreg free
  7055  017D7E  0060  F007  FFE6   	movff	btemp,postinc1
  7056  017D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7057  017D8A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7058  017D90  0060  F013  FFE6   	movff	btemp+3,postinc1
  7059  017D96  ECAD  F09E         	call	___flmul	;wreg free
  7060  017D9A  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7061  017DA0  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7062  017DA6  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7063  017DAC  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7064                           
  7065                           ;bsoc.c: 114:  C.dynamic_ah_adj = C.dynamic_ah;
  7066  017DB2  EE21  F38F         	lfsr	2,_C+144	;volatile
  7067  017DB6  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7068  017DBC  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7069  017DC2  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7070  017DC8  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7071                           
  7072                           ;bsoc.c: 115:  TMR3_SetInterruptHandler(calc_bsoc);
  7073  017DCE  0E40               	movlw	low _calc_bsoc
  7074  017DD0  6EE6               	movwf	postinc1,c
  7075  017DD2  0E33               	movlw	high _calc_bsoc
  7076  017DD4  6EE6               	movwf	postinc1,c
  7077  017DD6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7078  017DD8  6EE6               	movwf	postinc1,c
  7079  017DDA  ECDD  F0DD         	call	_TMR3_SetInterruptHandler	;wreg free
  7080                           
  7081                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7082  017DDE  0012               	return		;funcret
  7083  017DE0                     __end_of_init_bsoc:
  7084                           	opt callstack 0
  7085                           
  7086 ;; *************** function _Volts_to_SOC *****************
  7087 ;; Defined at:
  7088 ;;		line 172 in file "bsoc.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  cvoltage        4  [STACK] unsigned long 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  soc             4  [STACK] float 
  7093 ;;  slot            1  [STACK] unsigned char 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  2  [STACK] unsigned short 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/1
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7107 ;;Total ram usage:        0 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:   16
  7110 ;; This function calls:
  7111 ;;		___fltol
  7112 ;;		___xxtofl
  7113 ;; This function is called by:
  7114 ;;		_init_bsoc
  7115 ;; This function uses a reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text12
  7119  0198AC                     __ptext12:
  7120                           	opt callstack 0
  7121  0198AC                     _Volts_to_SOC:
  7122                           	opt callstack 0
  7123                           
  7124                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7125  0198AC  0E05               	movlw	5
  7126  0198AE  26E1               	addwf	fsr1l,f,c
  7127  0198B0  0E00               	movlw	0
  7128  0198B2  22E2               	addwfc	fsr1h,f,c
  7129                           
  7130                           ;bsoc.c: 172: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 173: {;bsoc.c: 174:  uint
      +                          8_t slot;;bsoc.c: 175:  float soc = 0;
  7131                           
  7132                           ;incstack = 0
  7133  0198B4  0E00               	movlw	0
  7134  0198B6  6E09               	movwf	(btemp+8)^0,c
  7135  0198B8  0E00               	movlw	0
  7136  0198BA  6E0A               	movwf	(btemp+9)^0,c
  7137  0198BC  0E00               	movlw	0
  7138  0198BE  6E0B               	movwf	(btemp+10)^0,c
  7139  0198C0  0E00               	movlw	0
  7140  0198C2  6E0C               	movwf	(btemp+11)^0,c
  7141                           
  7142                           ;stkvar	_soc @ sp[(-5)+0]
  7143  0198C4  0EFB               	movlw	-5
  7144  0198C6  0060  F027  FFE3   	movff	btemp+8,plusw1
  7145  0198CC  0EFC               	movlw	-4
  7146  0198CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7147  0198D4  0EFD               	movlw	-3
  7148  0198D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7149  0198DC  0EFE               	movlw	-2
  7150  0198DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7151                           
  7152                           ;bsoc.c: 177:  for (slot = 0; slot < 26; slot++) {
  7153                           ;stkvar	_slot @ sp[(-5)+4]
  7154  0198E4  0EFF               	movlw	-1
  7155  0198E6  6AE3               	clrf	plusw1,c
  7156  0198E8                     l10587:
  7157                           
  7158                           ;bsoc.c: 178:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7159                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7160                           ;stkvar	_slot @ sp[(-5)+4]
  7161  0198E8  0EFF               	movlw	-1
  7162  0198EA  50E3               	movf	plusw1,w,c
  7163  0198EC  0D08               	mullw	8
  7164  0198EE  0E55               	movlw	low _BVSOC_TABLE
  7165  0198F0  24F3               	addwf	243,w,c
  7166  0198F2  6EF6               	movwf	tblptrl,c
  7167  0198F4  0EFA               	movlw	high _BVSOC_TABLE
  7168  0198F6  20F4               	addwfc	244,w,c
  7169  0198F8  6EF7               	movwf	tblptrh,c
  7170  0198FA                     	if	1	;There are 3 active tblptr bytes
  7171  0198FA  6AF8               	clrf	tblptru,c
  7172  0198FC  0E00               	movlw	low (__mediumconst shr (0+16))
  7173  0198FE  22F8               	addwfc	tblptru,f,c
  7174  019900                     	endif
  7175  019900  0EF7               	movlw	-9
  7176  019902  50E3               	movf	plusw1,w,c
  7177  019904  0009               	tblrd		*+
  7178  019906  5CF5               	subwf	tablat,w,c
  7179  019908  0EF8               	movlw	-8
  7180  01990A  50E3               	movf	plusw1,w,c
  7181  01990C  0009               	tblrd		*+
  7182  01990E  58F5               	subwfb	tablat,w,c
  7183  019910  0EF9               	movlw	-7
  7184  019912  50E3               	movf	plusw1,w,c
  7185  019914  0009               	tblrd		*+
  7186  019916  58F5               	subwfb	tablat,w,c
  7187  019918  0EFA               	movlw	-6
  7188  01991A  50E3               	movf	plusw1,w,c
  7189  01991C  0009               	tblrd		*+
  7190  01991E  58F5               	subwfb	tablat,w,c
  7191  019920  B0D8               	btfsc	status,0,c
  7192  019922  D034               	goto	l10591
  7193                           
  7194                           ;bsoc.c: 179:    soc = BVSOC_TABLE[slot][1];
  7195                           ;stkvar	_slot @ sp[(-5)+4]
  7196  019924  0EFF               	movlw	-1
  7197  019926  50E3               	movf	plusw1,w,c
  7198  019928  0D08               	mullw	8
  7199  01992A  0E04               	movlw	4
  7200  01992C  26F3               	addwf	243,f,c
  7201  01992E  0E00               	movlw	0
  7202  019930  22F4               	addwfc	244,f,c
  7203  019932  0E55               	movlw	low _BVSOC_TABLE
  7204  019934  24F3               	addwf	243,w,c
  7205  019936  6EF6               	movwf	tblptrl,c
  7206  019938  0EFA               	movlw	high _BVSOC_TABLE
  7207  01993A  20F4               	addwfc	244,w,c
  7208  01993C  6EF7               	movwf	tblptrh,c
  7209  01993E                     	if	1	;There are 3 active tblptr bytes
  7210  01993E  6AF8               	clrf	tblptru,c
  7211  019940  0E00               	movlw	low (__mediumconst shr (0+16))
  7212  019942  22F8               	addwfc	tblptru,f,c
  7213  019944                     	endif
  7214  019944  0009               	tblrd		*+
  7215  019946  006F FFD7 FFE6     	movff	tablat,postinc1
  7216  01994C  0009               	tblrd		*+
  7217  01994E  006F FFD7 FFE6     	movff	tablat,postinc1
  7218  019954  0009               	tblrd		*+
  7219  019956  006F FFD7 FFE6     	movff	tablat,postinc1
  7220  01995C  0009               	tblrd		*+
  7221  01995E  006F FFD7 FFE6     	movff	tablat,postinc1
  7222  019964  0E00               	movlw	0
  7223  019966  6EE6               	movwf	postinc1,c
  7224  019968  EC29  F0C2         	call	___xxtofl	;wreg free
  7225                           
  7226                           ;stkvar	_soc @ sp[(-5)+0]
  7227  01996C  0EFB               	movlw	-5
  7228  01996E  0060  F007  FFE3   	movff	btemp,plusw1
  7229  019974  0EFC               	movlw	-4
  7230  019976  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7231  01997C  0EFD               	movlw	-3
  7232  01997E  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7233  019984  0EFE               	movlw	-2
  7234  019986  0060  F013  FFE3   	movff	btemp+3,plusw1
  7235  01998C                     l10591:
  7236                           
  7237                           ;bsoc.c: 181:  }
  7238                           ;stkvar	_slot @ sp[(-5)+4]
  7239  01998C  0EFF               	movlw	-1
  7240  01998E  2AE3               	incf	plusw1,f,c
  7241                           
  7242                           ;stkvar	_slot @ sp[(-5)+4]
  7243  019990  0EFF               	movlw	-1
  7244  019992  006F FF8C  F001    	movff	plusw1,btemp
  7245  019998  0E19               	movlw	25
  7246  01999A  6401               	cpfsgt	btemp^0,c
  7247  01999C  D7A5               	goto	l10587
  7248                           
  7249                           ;bsoc.c: 182:  return soc;
  7250                           ;stkvar	_soc @ sp[(-5)+0]
  7251  01999E  0EFB               	movlw	-5
  7252  0199A0  006F FF8F FFE6     	movff	plusw1,postinc1
  7253  0199A6  006F FF8F FFE6     	movff	plusw1,postinc1
  7254  0199AC  006F FF8F FFE6     	movff	plusw1,postinc1
  7255  0199B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7256  0199B8  EC27  F0C7         	call	___fltol	;wreg free
  7257                           
  7258                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7259  0199BC  0EF7               	movlw	247
  7260  0199BE  26E1               	addwf	fsr1l,f,c
  7261  0199C0  0EFF               	movlw	255
  7262  0199C2  22E2               	addwfc	fsr1h,f,c
  7263  0199C4  0012               	return		;funcret
  7264  0199C6                     __end_of_Volts_to_SOC:
  7265                           	opt callstack 0
  7266                           
  7267 ;; *************** function _hid_display *****************
  7268 ;; Defined at:
  7269 ;;		line 17 in file "hid.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  h               1  [STACK] PTR struct H_data
  7272 ;;		 -> H(7), 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1  [STACK] PTR struct H_data
  7277 ;; Registers used:
  7278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7279 ;; Tracked objects:
  7280 ;;		On entry : 3F/39
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:   17
  7291 ;; This function calls:
  7292 ;;		_hid_input
  7293 ;; This function is called by:
  7294 ;;		_main
  7295 ;; This function uses a reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text13
  7299  019E0C                     __ptext13:
  7300                           	opt callstack 0
  7301  019E0C                     _hid_display:
  7302                           	opt callstack 13
  7303                           
  7304                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7305                           ;stkvar	_h @ sp[(0)+-1]
  7306                           
  7307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7308                           ;incstack = 0
  7309  019E0C  0EFF               	movlw	-1
  7310  019E0E  50E3               	movf	plusw1,w,c
  7311  019E10  6EE6               	movwf	postinc1,c
  7312  019E12  EC70  F0D5         	call	_hid_input	;wreg free
  7313                           
  7314                           ;hid.c: 21:  switch (h->h_state) {
  7315  019E16  D066               	goto	l10995
  7316  019E18                     l10973:
  7317                           
  7318                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7319                           ;stkvar	_h @ sp[(0)+-1]
  7320  019E18  0EFF               	movlw	-1
  7321  019E1A  50E3               	movf	plusw1,w,c
  7322  019E1C  6ED9               	movwf	fsr2l,c
  7323  019E1E  6ADA               	clrf	fsr2h,c
  7324  019E20  0E01               	movlw	1
  7325  019E22  26D9               	addwf	fsr2l,f,c
  7326  019E24  0E01               	movlw	1
  7327  019E26  6EDF               	movwf	indf2,c
  7328                           
  7329                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7330                           ;stkvar	_h @ sp[(0)+-1]
  7331  019E28  0EFF               	movlw	-1
  7332  019E2A  50E3               	movf	plusw1,w,c
  7333  019E2C  6ED9               	movwf	fsr2l,c
  7334  019E2E  6ADA               	clrf	fsr2h,c
  7335  019E30  0E00               	movlw	0
  7336  019E32  6EDF               	movwf	indf2,c
  7337                           
  7338                           ;hid.c: 25:   h->wait_enter = 1;
  7339                           ;stkvar	_h @ sp[(0)+-1]
  7340  019E34  0EFF               	movlw	-1
  7341  019E36  50E3               	movf	plusw1,w,c
  7342  019E38  6ED9               	movwf	fsr2l,c
  7343  019E3A  6ADA               	clrf	fsr2h,c
  7344  019E3C  0E04               	movlw	4
  7345  019E3E  26D9               	addwf	fsr2l,f,c
  7346  019E40  0E01               	movlw	1
  7347  019E42  6EDF               	movwf	indf2,c
  7348                           
  7349                           ;hid.c: 26:   h->wait_select = 1;
  7350                           ;stkvar	_h @ sp[(0)+-1]
  7351  019E44  0EFF               	movlw	-1
  7352  019E46  50E3               	movf	plusw1,w,c
  7353  019E48  6ED9               	movwf	fsr2l,c
  7354  019E4A  6ADA               	clrf	fsr2h,c
  7355  019E4C  0E02               	movlw	2
  7356  019E4E  26D9               	addwf	fsr2l,f,c
  7357  019E50  0E01               	movlw	1
  7358  019E52  6EDF               	movwf	indf2,c
  7359                           
  7360                           ;hid.c: 27:   h->select_p = SW_OFF;
  7361                           ;stkvar	_h @ sp[(0)+-1]
  7362  019E54  0EFF               	movlw	-1
  7363  019E56  50E3               	movf	plusw1,w,c
  7364  019E58  6ED9               	movwf	fsr2l,c
  7365  019E5A  6ADA               	clrf	fsr2h,c
  7366  019E5C  0E03               	movlw	3
  7367  019E5E  26D9               	addwf	fsr2l,f,c
  7368  019E60  0E00               	movlw	0
  7369  019E62  6EDF               	movwf	indf2,c
  7370                           
  7371                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7372                           ;stkvar	_h @ sp[(0)+-1]
  7373  019E64  0EFF               	movlw	-1
  7374  019E66  50E3               	movf	plusw1,w,c
  7375  019E68  6ED9               	movwf	fsr2l,c
  7376  019E6A  6ADA               	clrf	fsr2h,c
  7377  019E6C  0E05               	movlw	5
  7378  019E6E  26D9               	addwf	fsr2l,f,c
  7379  019E70  0E00               	movlw	0
  7380  019E72  D036               	goto	L3
  7381  019E74                     l10985:
  7382                           
  7383                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7384                           ;stkvar	_h @ sp[(0)+-1]
  7385  019E74  0EFF               	movlw	-1
  7386  019E76  50E3               	movf	plusw1,w,c
  7387  019E78  6ED9               	movwf	fsr2l,c
  7388  019E7A  6ADA               	clrf	fsr2h,c
  7389  019E7C  0E02               	movlw	2
  7390  019E7E  26D9               	addwf	fsr2l,f,c
  7391  019E80  50DF               	movf	indf2,w,c
  7392  019E82  A4D8               	btfss	status,2,c
  7393  019E84  D042               	goto	l1976
  7394                           
  7395                           ;stkvar	_h @ sp[(0)+-1]
  7396  019E86  0EFF               	movlw	-1
  7397  019E88  50E3               	movf	plusw1,w,c
  7398  019E8A  6ED9               	movwf	fsr2l,c
  7399  019E8C  6ADA               	clrf	fsr2h,c
  7400  019E8E  0E03               	movlw	3
  7401  019E90  26D9               	addwf	fsr2l,f,c
  7402  019E92  50DF               	movf	indf2,w,c
  7403  019E94  A4D8               	btfss	status,2,c
  7404  019E96  D039               	goto	l1976
  7405                           
  7406                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7407                           ;stkvar	_h @ sp[(0)+-1]
  7408  019E98  0EFF               	movlw	-1
  7409  019E9A  50E3               	movf	plusw1,w,c
  7410  019E9C  6ED9               	movwf	fsr2l,c
  7411  019E9E  6ADA               	clrf	fsr2h,c
  7412  019EA0  0E06               	movlw	6
  7413  019EA2  26D9               	addwf	fsr2l,f,c
  7414                           
  7415                           ;stkvar	_h @ sp[(0)+-1]
  7416  019EA4  0EFF               	movlw	-1
  7417  019EA6  50E3               	movf	plusw1,w,c
  7418  019EA8  6EE9               	movwf	fsr0l,c
  7419  019EAA  6AEA               	clrf	fsr0h,c
  7420  019EAC  0E06               	movlw	6
  7421  019EAE  26E9               	addwf	fsr0l,f,c
  7422  019EB0  2AEF               	incf	indf0,f,c
  7423  019EB2  50EF               	movf	indf0,w,c
  7424  019EB4  0B03               	andlw	3
  7425  019EB6  6EDF               	movwf	indf2,c
  7426                           
  7427                           ;hid.c: 34:    h->hid_display = h->sequence;
  7428                           ;stkvar	_h @ sp[(0)+-1]
  7429  019EB8  0EFF               	movlw	-1
  7430  019EBA  50E3               	movf	plusw1,w,c
  7431  019EBC  6ED9               	movwf	fsr2l,c
  7432  019EBE  6ADA               	clrf	fsr2h,c
  7433  019EC0  0E06               	movlw	6
  7434  019EC2  26D9               	addwf	fsr2l,f,c
  7435                           
  7436                           ;stkvar	_h @ sp[(0)+-1]
  7437  019EC4  0EFF               	movlw	-1
  7438  019EC6  50E3               	movf	plusw1,w,c
  7439  019EC8  6EE9               	movwf	fsr0l,c
  7440  019ECA  6AEA               	clrf	fsr0h,c
  7441  019ECC  006F FF7F FFEF     	movff	indf2,indf0
  7442                           
  7443                           ;hid.c: 35:    h->wait_select = 1;
  7444                           ;stkvar	_h @ sp[(0)+-1]
  7445  019ED2  0EFF               	movlw	-1
  7446  019ED4  50E3               	movf	plusw1,w,c
  7447  019ED6  6ED9               	movwf	fsr2l,c
  7448  019ED8  6ADA               	clrf	fsr2h,c
  7449  019EDA  0E02               	movlw	2
  7450  019EDC  26D9               	addwf	fsr2l,f,c
  7451  019EDE  0E01               	movlw	1
  7452  019EE0                     L3:
  7453  019EE0  6EDF               	movwf	indf2,c
  7454  019EE2  D013               	goto	l1976
  7455  019EE4                     l10995:
  7456                           
  7457                           ;stkvar	_h @ sp[(0)+-1]
  7458  019EE4  0EFF               	movlw	-1
  7459  019EE6  50E3               	movf	plusw1,w,c
  7460  019EE8  6ED9               	movwf	fsr2l,c
  7461  019EEA  6ADA               	clrf	fsr2h,c
  7462  019EEC  0E01               	movlw	1
  7463  019EEE  26D9               	addwf	fsr2l,f,c
  7464  019EF0  50DF               	movf	indf2,w,c
  7465  019EF2  6E0B               	movwf	(btemp+10)^0,c
  7466  019EF4  6A0C               	clrf	(btemp+11)^0,c
  7467                           
  7468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7469                           ; Switch size 1, requested type "simple"
  7470                           ; Number of cases is 1, Range of values is 0 to 0
  7471                           ; switch strategies available:
  7472                           ; Name         Instructions Cycles
  7473                           ; simple_byte            4     3 (average)
  7474                           ;	Chosen strategy is simple_byte
  7475  019EF6  500C               	movf	(btemp+11)^0,w,c
  7476  019EF8  0A00               	xorlw	0	; case 0
  7477  019EFA  A4D8               	btfss	status,2,c
  7478  019EFC  D7BB               	goto	l10985
  7479                           
  7480                           ; Switch size 1, requested type "simple"
  7481                           ; Number of cases is 2, Range of values is 0 to 1
  7482                           ; switch strategies available:
  7483                           ; Name         Instructions Cycles
  7484                           ; simple_byte            7     4 (average)
  7485                           ;	Chosen strategy is simple_byte
  7486  019EFE  500B               	movf	(btemp+10)^0,w,c
  7487  019F00  0A00               	xorlw	0	; case 0
  7488  019F02  B4D8               	btfsc	status,2,c
  7489  019F04  D789               	goto	l10973
  7490  019F06  0A01               	xorlw	1	; case 1
  7491  019F08  D7B5               	goto	l10985
  7492  019F0A                     l1976:
  7493                           
  7494                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7495  019F0A  52E5               	movf	postdec1,f,c
  7496  019F0C  0012               	return		;funcret
  7497  019F0E                     __end_of_hid_display:
  7498                           	opt callstack 0
  7499                           
  7500 ;; *************** function _hid_input *****************
  7501 ;; Defined at:
  7502 ;;		line 3 in file "hid.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  h               1  [STACK] PTR struct H_data
  7505 ;;		 -> H(7), 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1  [STACK] PTR struct H_data
  7510 ;; Registers used:
  7511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/39
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:   16
  7524 ;; This function calls:
  7525 ;;		_get_switch
  7526 ;; This function is called by:
  7527 ;;		_hid_display
  7528 ;; This function uses a reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text14
  7532  01AAE0                     __ptext14:
  7533                           	opt callstack 0
  7534  01AAE0                     _hid_input:
  7535                           	opt callstack 13
  7536                           
  7537                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7538                           
  7539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7540                           ;incstack = 0
  7541  01AAE0  0E02               	movlw	2
  7542  01AAE2  6EE6               	movwf	postinc1,c
  7543  01AAE4  ECD1  F0DC         	call	_get_switch	;wreg free
  7544  01AAE8  5001               	movf	btemp^0,w,c
  7545  01AAEA  B4D8               	btfsc	status,2,c
  7546  01AAEC  D01C               	goto	l10499
  7547                           
  7548                           ;hid.c: 6:   h->wait_select = 0;
  7549                           ;stkvar	_h @ sp[(0)+-1]
  7550  01AAEE  0EFF               	movlw	-1
  7551  01AAF0  50E3               	movf	plusw1,w,c
  7552  01AAF2  6ED9               	movwf	fsr2l,c
  7553  01AAF4  6ADA               	clrf	fsr2h,c
  7554  01AAF6  0E02               	movlw	2
  7555  01AAF8  26D9               	addwf	fsr2l,f,c
  7556  01AAFA  0E00               	movlw	0
  7557  01AAFC  6EDF               	movwf	indf2,c
  7558                           
  7559                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7560  01AAFE  0E02               	movlw	2
  7561  01AB00  6EE6               	movwf	postinc1,c
  7562  01AB02  ECD1  F0DC         	call	_get_switch	;wreg free
  7563  01AB06  5001               	movf	btemp^0,w,c
  7564  01AB08  B4D8               	btfsc	status,2,c
  7565  01AB0A  D003               	goto	u9750
  7566  01AB0C  6A0C               	clrf	(btemp+11)^0,c
  7567  01AB0E  2A0C               	incf	(btemp+11)^0,f,c
  7568  01AB10  D001               	goto	u9768
  7569  01AB12                     u9750:
  7570  01AB12  6A0C               	clrf	(btemp+11)^0,c
  7571  01AB14                     u9768:
  7572                           
  7573                           ;stkvar	_h @ sp[(0)+-1]
  7574  01AB14  0EFF               	movlw	-1
  7575  01AB16  50E3               	movf	plusw1,w,c
  7576  01AB18  6ED9               	movwf	fsr2l,c
  7577  01AB1A  6ADA               	clrf	fsr2h,c
  7578  01AB1C  0E03               	movlw	3
  7579  01AB1E  26D9               	addwf	fsr2l,f,c
  7580  01AB20  0060  F033  FFDF   	movff	btemp+11,indf2
  7581  01AB26                     l10499:
  7582                           
  7583                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7584  01AB26  0E03               	movlw	3
  7585  01AB28  6EE6               	movwf	postinc1,c
  7586  01AB2A  ECD1  F0DC         	call	_get_switch	;wreg free
  7587  01AB2E  5001               	movf	btemp^0,w,c
  7588  01AB30  B4D8               	btfsc	status,2,c
  7589  01AB32  D01C               	goto	l1967
  7590                           
  7591                           ;hid.c: 11:   h->wait_enter = 0;
  7592                           ;stkvar	_h @ sp[(0)+-1]
  7593  01AB34  0EFF               	movlw	-1
  7594  01AB36  50E3               	movf	plusw1,w,c
  7595  01AB38  6ED9               	movwf	fsr2l,c
  7596  01AB3A  6ADA               	clrf	fsr2h,c
  7597  01AB3C  0E04               	movlw	4
  7598  01AB3E  26D9               	addwf	fsr2l,f,c
  7599  01AB40  0E00               	movlw	0
  7600  01AB42  6EDF               	movwf	indf2,c
  7601                           
  7602                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7603  01AB44  0E03               	movlw	3
  7604  01AB46  6EE6               	movwf	postinc1,c
  7605  01AB48  ECD1  F0DC         	call	_get_switch	;wreg free
  7606  01AB4C  5001               	movf	btemp^0,w,c
  7607  01AB4E  B4D8               	btfsc	status,2,c
  7608  01AB50  D003               	goto	u9780
  7609  01AB52  6A0C               	clrf	(btemp+11)^0,c
  7610  01AB54  2A0C               	incf	(btemp+11)^0,f,c
  7611  01AB56  D001               	goto	u9798
  7612  01AB58                     u9780:
  7613  01AB58  6A0C               	clrf	(btemp+11)^0,c
  7614  01AB5A                     u9798:
  7615                           
  7616                           ;stkvar	_h @ sp[(0)+-1]
  7617  01AB5A  0EFF               	movlw	-1
  7618  01AB5C  50E3               	movf	plusw1,w,c
  7619  01AB5E  6ED9               	movwf	fsr2l,c
  7620  01AB60  6ADA               	clrf	fsr2h,c
  7621  01AB62  0E05               	movlw	5
  7622  01AB64  26D9               	addwf	fsr2l,f,c
  7623  01AB66  0060  F033  FFDF   	movff	btemp+11,indf2
  7624  01AB6C                     l1967:
  7625                           
  7626                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7627  01AB6C  52E5               	movf	postdec1,f,c
  7628  01AB6E  0012               	return		;funcret
  7629  01AB70                     __end_of_hid_input:
  7630                           	opt callstack 0
  7631                           
  7632 ;; *************** function _get_switch *****************
  7633 ;; Defined at:
  7634 ;;		line 18 in file "dio.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  i               1  [STACK] unsigned char 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1  [STACK] enum E17021
  7641 ;; Registers used:
  7642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/1
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7652 ;;Total ram usage:        0 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:   15
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_main
  7659 ;;		_hid_input
  7660 ;; This function uses a reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text15
  7664  01B9A2                     __ptext15:
  7665                           	opt callstack 0
  7666  01B9A2                     _get_switch:
  7667                           	opt callstack 13
  7668                           
  7669                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7670                           ;stkvar	_i @ sp[(0)+-1]
  7671                           
  7672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7673                           ;incstack = 0
  7674  01B9A2  0EFF               	movlw	-1
  7675  01B9A4  006F FF8C  F001    	movff	plusw1,btemp
  7676  01B9AA  0E03               	movlw	3
  7677  01B9AC  6401               	cpfsgt	btemp^0,c
  7678  01B9AE  D002               	goto	l9879
  7679                           
  7680                           ;dio.c: 21:   return SW_OFF;
  7681  01B9B0  0E00               	movlw	0
  7682  01B9B2  D00A               	goto	L4
  7683  01B9B4                     l9879:
  7684                           
  7685                           ;dio.c: 23:  return S.button[i].sw;
  7686                           ;stkvar	_i @ sp[(0)+-1]
  7687  01B9B4  0EFF               	movlw	-1
  7688  01B9B6  50E3               	movf	plusw1,w,c
  7689  01B9B8  0D05               	mullw	5
  7690  01B9BA  0E54               	movlw	low _S
  7691  01B9BC  24F3               	addwf	243,w,c
  7692  01B9BE  6ED9               	movwf	fsr2l,c
  7693  01B9C0  0E02               	movlw	high _S
  7694  01B9C2  20F4               	addwfc	prodh,w,c
  7695  01B9C4  6EDA               	movwf	fsr2h,c
  7696  01B9C6  50DF               	movf	indf2,w,c
  7697  01B9C8                     L4:
  7698  01B9C8  6E01               	movwf	btemp^0,c
  7699                           
  7700                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7701  01B9CA  52E5               	movf	postdec1,f,c
  7702  01B9CC  0012               	return		;funcret
  7703  01B9CE                     __end_of_get_switch:
  7704                           	opt callstack 0
  7705                           
  7706 ;; *************** function _esr_check *****************
  7707 ;; Defined at:
  7708 ;;		line 191 in file "bsoc.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  fsm             1  [STACK] unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  4  [STACK] float 
  7715 ;; Registers used:
  7716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:   18
  7729 ;; This function calls:
  7730 ;;		_StartTimer
  7731 ;;		_TimerDone
  7732 ;;		___fldiv
  7733 ;;		___flsub
  7734 ;;		_conv_raw_result
  7735 ;;		_fabsf
  7736 ;;		_set_load_relay_one
  7737 ;;		_set_load_relay_two
  7738 ;;		_update_adc_result
  7739 ;; This function is called by:
  7740 ;;		_main
  7741 ;; This function uses a reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text16
  7745  017118                     __ptext16:
  7746                           	opt callstack 0
  7747  017118                     _esr_check:
  7748                           	opt callstack 12
  7749                           
  7750                           ;bsoc.c: 191: float esr_check(uint8_t fsm);bsoc.c: 192: {;bsoc.c: 193:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 195:  if (fsm) {
  7751                           ;stkvar	_fsm @ sp[(0)+-1]
  7752                           
  7753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7754                           ;incstack = 0
  7755  017118  0EFF               	movlw	-1
  7756  01711A  50E3               	movf	plusw1,w,c
  7757  01711C  B4D8               	btfsc	status,2,c
  7758  01711E  D146               	goto	l10907
  7759                           
  7760                           ;bsoc.c: 196:   esr_state = 0;
  7761  017120  6A40               	clrf	esr_check@esr_state^0,c
  7762                           
  7763                           ;bsoc.c: 197:   return -10.0;
  7764  017122  0E00               	movlw	0
  7765  017124  6E01               	movwf	btemp^0,c
  7766  017126  0E00               	movlw	0
  7767  017128  6E02               	movwf	(btemp+1)^0,c
  7768  01712A  0E20               	movlw	32
  7769  01712C  6E03               	movwf	(btemp+2)^0,c
  7770  01712E  0EC1               	movlw	193
  7771  017130  D158               	goto	L5
  7772  017132                     l10839:
  7773                           
  7774                           ;bsoc.c: 202:   StartTimer(TMR_ESR, 10000);
  7775  017132  0E10               	movlw	16
  7776  017134  6EE6               	movwf	postinc1,c
  7777  017136  0E27               	movlw	39
  7778  017138  6EE6               	movwf	postinc1,c
  7779  01713A  0E0C               	movlw	12
  7780  01713C  6EE6               	movwf	postinc1,c
  7781  01713E  ECFB  F0DA         	call	_StartTimer	;wreg free
  7782  017142                     l10841:
  7783                           
  7784                           ;bsoc.c: 203:   esr_state++;
  7785  017142  2A40               	incf	esr_check@esr_state^0,f,c
  7786                           
  7787                           ;bsoc.c: 204:   break;
  7788  017144  D147               	goto	l10909
  7789  017146                     l10843:
  7790                           
  7791                           ;bsoc.c: 209:   set_load_relay_one(0);
  7792  017146  0E00               	movlw	0
  7793  017148  6EE6               	movwf	postinc1,c
  7794  01714A  ECE5  F0DF         	call	_set_load_relay_one	;wreg free
  7795                           
  7796                           ;bsoc.c: 210:   set_load_relay_two(0);
  7797  01714E  0E00               	movlw	0
  7798  017150  6EE6               	movwf	postinc1,c
  7799  017152  ECDD  F0DF         	call	_set_load_relay_two	;wreg free
  7800                           
  7801                           ;bsoc.c: 211:   if (TimerDone(TMR_ESR)) {
  7802  017156  0E0C               	movlw	12
  7803  017158  6EE6               	movwf	postinc1,c
  7804  01715A  EC65  F0DD         	call	_TimerDone	;wreg free
  7805  01715E  5001               	movf	btemp^0,w,c
  7806  017160  B4D8               	btfsc	status,2,c
  7807  017162  D009               	goto	l10849
  7808                           
  7809                           ;bsoc.c: 212:    StartTimer(TMR_ESR, 10000);
  7810  017164  0E10               	movlw	16
  7811  017166  6EE6               	movwf	postinc1,c
  7812  017168  0E27               	movlw	39
  7813  01716A  6EE6               	movwf	postinc1,c
  7814  01716C  0E0C               	movlw	12
  7815  01716E  6EE6               	movwf	postinc1,c
  7816  017170  ECFB  F0DA         	call	_StartTimer	;wreg free
  7817                           
  7818                           ;bsoc.c: 213:   } else {
  7819  017174  D006               	goto	l10853
  7820  017176                     l10849:
  7821                           
  7822                           ;bsoc.c: 214:    return -2.0;
  7823  017176  0E00               	movlw	0
  7824  017178  6E01               	movwf	btemp^0,c
  7825  01717A  0E00               	movlw	0
  7826  01717C  6E02               	movwf	(btemp+1)^0,c
  7827  01717E  0E00               	movlw	0
  7828  017180  D066               	goto	L7
  7829  017182                     l10853:
  7830                           
  7831                           ;bsoc.c: 219:   update_adc_result();
  7832  017182  EC9B  F0DB         	call	_update_adc_result	;wreg free
  7833                           
  7834                           ;bsoc.c: 220:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7835  017186  0E00               	movlw	0
  7836  017188  6EE6               	movwf	postinc1,c
  7837  01718A  0E04               	movlw	4
  7838  01718C  6EE6               	movwf	postinc1,c
  7839  01718E  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7840  017192  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7841  017198  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7842  01719E  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7843  0171A4  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7844  0171AA  D7CB               	goto	l10841
  7845  0171AC                     l10859:
  7846                           
  7847                           ;bsoc.c: 224:   set_load_relay_one(1);
  7848  0171AC  0E01               	movlw	1
  7849  0171AE  6EE6               	movwf	postinc1,c
  7850  0171B0  ECE5  F0DF         	call	_set_load_relay_one	;wreg free
  7851                           
  7852                           ;bsoc.c: 225:   if (TimerDone(TMR_ESR)) {
  7853  0171B4  0E0C               	movlw	12
  7854  0171B6  6EE6               	movwf	postinc1,c
  7855  0171B8  EC65  F0DD         	call	_TimerDone	;wreg free
  7856  0171BC  5001               	movf	btemp^0,w,c
  7857  0171BE  B4D8               	btfsc	status,2,c
  7858  0171C0  D009               	goto	l10865
  7859                           
  7860                           ;bsoc.c: 226:    StartTimer(TMR_ESR, 10000);
  7861  0171C2  0E10               	movlw	16
  7862  0171C4  6EE6               	movwf	postinc1,c
  7863  0171C6  0E27               	movlw	39
  7864  0171C8  6EE6               	movwf	postinc1,c
  7865  0171CA  0E0C               	movlw	12
  7866  0171CC  6EE6               	movwf	postinc1,c
  7867  0171CE  ECFB  F0DA         	call	_StartTimer	;wreg free
  7868                           
  7869                           ;bsoc.c: 227:   } else {
  7870  0171D2  D006               	goto	l10869
  7871  0171D4                     l10865:
  7872                           
  7873                           ;bsoc.c: 228:    return -3.0;
  7874  0171D4  0E00               	movlw	0
  7875  0171D6  6E01               	movwf	btemp^0,c
  7876  0171D8  0E00               	movlw	0
  7877  0171DA  6E02               	movwf	(btemp+1)^0,c
  7878  0171DC  0E40               	movlw	64
  7879  0171DE  D037               	goto	L7
  7880  0171E0                     l10869:
  7881                           
  7882                           ;bsoc.c: 231:   update_adc_result();
  7883  0171E0  EC9B  F0DB         	call	_update_adc_result	;wreg free
  7884                           
  7885                           ;bsoc.c: 232:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7886  0171E4  0E00               	movlw	0
  7887  0171E6  6EE6               	movwf	postinc1,c
  7888  0171E8  0E04               	movlw	4
  7889  0171EA  6EE6               	movwf	postinc1,c
  7890  0171EC  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7891  0171F0  0060  F004  F819   	movff	btemp,_C+282	;volatile
  7892  0171F6  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  7893  0171FC  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  7894  017202  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  7895                           
  7896                           ;bsoc.c: 233:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7897  017208  0E00               	movlw	0
  7898  01720A  6EE6               	movwf	postinc1,c
  7899  01720C  0E00               	movlw	0
  7900  01720E  6EE6               	movwf	postinc1,c
  7901  017210  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7902  017214  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  7903  01721A  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  7904  017220  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  7905  017226  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  7906  01722C  D78A               	goto	l10841
  7907  01722E                     l10877:
  7908                           
  7909                           ;bsoc.c: 237:   set_load_relay_two(1);
  7910  01722E  0E01               	movlw	1
  7911  017230  6EE6               	movwf	postinc1,c
  7912  017232  ECDD  F0DF         	call	_set_load_relay_two	;wreg free
  7913                           
  7914                           ;bsoc.c: 238:   if (!TimerDone(TMR_ESR))
  7915  017236  0E0C               	movlw	12
  7916  017238  6EE6               	movwf	postinc1,c
  7917  01723A  EC65  F0DD         	call	_TimerDone	;wreg free
  7918  01723E  5001               	movf	btemp^0,w,c
  7919  017240  A4D8               	btfss	status,2,c
  7920  017242  D008               	goto	l10885
  7921                           
  7922                           ;bsoc.c: 239:    return -4.0;
  7923  017244  0E00               	movlw	0
  7924  017246  6E01               	movwf	btemp^0,c
  7925  017248  0E00               	movlw	0
  7926  01724A  6E02               	movwf	(btemp+1)^0,c
  7927  01724C  0E80               	movlw	128
  7928  01724E                     L7:
  7929  01724E  6E03               	movwf	(btemp+2)^0,c
  7930  017250  0EC0               	movlw	192
  7931  017252  D0C7               	goto	L5
  7932  017254                     l10885:
  7933                           
  7934                           ;bsoc.c: 241:   update_adc_result();
  7935  017254  EC9B  F0DB         	call	_update_adc_result	;wreg free
  7936                           
  7937                           ;bsoc.c: 242:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7938  017258  0E00               	movlw	0
  7939  01725A  6EE6               	movwf	postinc1,c
  7940  01725C  0E04               	movlw	4
  7941  01725E  6EE6               	movwf	postinc1,c
  7942  017260  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7943  017264  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  7944  01726A  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  7945  017270  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  7946  017276  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  7947                           
  7948                           ;bsoc.c: 243:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7949  01727C  0E00               	movlw	0
  7950  01727E  6EE6               	movwf	postinc1,c
  7951  017280  0E00               	movlw	0
  7952  017282  6EE6               	movwf	postinc1,c
  7953  017284  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7954  017288  0060  F004  F811   	movff	btemp,_C+274	;volatile
  7955  01728E  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  7956  017294  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  7957  01729A  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  7958                           
  7959                           ;bsoc.c: 245:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7960  0172A0  EE22  F011         	lfsr	2,_C+274	;volatile
  7961  0172A4  006F FF7B FFE6     	movff	postinc2,postinc1
  7962  0172AA  006F FF7B FFE6     	movff	postinc2,postinc1
  7963  0172B0  006F FF7B FFE6     	movff	postinc2,postinc1
  7964  0172B6  006F FF7B FFE6     	movff	postinc2,postinc1
  7965  0172BC  EE22  F00D         	lfsr	2,_C+270	;volatile
  7966  0172C0  006F FF7B FFE6     	movff	postinc2,postinc1
  7967  0172C6  006F FF7B FFE6     	movff	postinc2,postinc1
  7968  0172CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7969  0172D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7970  0172D8  EC95  F0DA         	call	___flsub	;wreg free
  7971  0172DC  0060  F007  FFE6   	movff	btemp,postinc1
  7972  0172E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7973  0172E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7974  0172EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  7975  0172F4  EE22  F01D         	lfsr	2,_C+286	;volatile
  7976  0172F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7977  0172FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7978  017304  006F FF7B FFE6     	movff	postinc2,postinc1
  7979  01730A  006F FF7B FFE6     	movff	postinc2,postinc1
  7980  017310  EE22  F019         	lfsr	2,_C+282	;volatile
  7981  017314  006F FF7B FFE6     	movff	postinc2,postinc1
  7982  01731A  006F FF7B FFE6     	movff	postinc2,postinc1
  7983  017320  006F FF7B FFE6     	movff	postinc2,postinc1
  7984  017326  006F FF7B FFE6     	movff	postinc2,postinc1
  7985  01732C  EC95  F0DA         	call	___flsub	;wreg free
  7986  017330  0060  F007  FFE6   	movff	btemp,postinc1
  7987  017336  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7988  01733C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7989  017342  0060  F013  FFE6   	movff	btemp+3,postinc1
  7990  017348  ECA0  F0A6         	call	___fldiv	;wreg free
  7991  01734C  0060  F007  FFE6   	movff	btemp,postinc1
  7992  017352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7993  017358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7994  01735E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7995  017364  ECEB  F0D2         	call	_fabsf	;wreg free
  7996  017368  0060  F004  F787   	movff	btemp,_C+136	;volatile
  7997  01736E  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  7998  017374  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  7999  01737A  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8000                           
  8001                           ;bsoc.c: 246:   set_load_relay_one(0);
  8002  017380  0E00               	movlw	0
  8003  017382  6EE6               	movwf	postinc1,c
  8004  017384  ECE5  F0DF         	call	_set_load_relay_one	;wreg free
  8005                           
  8006                           ;bsoc.c: 247:   set_load_relay_two(0);
  8007  017388  0E00               	movlw	0
  8008  01738A  6EE6               	movwf	postinc1,c
  8009  01738C  ECDD  F0DF         	call	_set_load_relay_two	;wreg free
  8010                           
  8011                           ;bsoc.c: 248:   esr_state = 0;
  8012  017390  6A40               	clrf	esr_check@esr_state^0,c
  8013                           
  8014                           ;bsoc.c: 249:   return C.esr;
  8015  017392  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8016  017398  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8017  01739E  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8018  0173A4  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8019  0173AA  D01C               	goto	l2088
  8020  0173AC                     l10907:
  8021  0173AC  5040               	movf	esr_check@esr_state^0,w,c
  8022  0173AE  6E0B               	movwf	(btemp+10)^0,c
  8023  0173B0  6A0C               	clrf	(btemp+11)^0,c
  8024                           
  8025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8026                           ; Switch size 1, requested type "simple"
  8027                           ; Number of cases is 1, Range of values is 0 to 0
  8028                           ; switch strategies available:
  8029                           ; Name         Instructions Cycles
  8030                           ; simple_byte            4     3 (average)
  8031                           ;	Chosen strategy is simple_byte
  8032  0173B2  500C               	movf	(btemp+11)^0,w,c
  8033  0173B4  0A00               	xorlw	0	; case 0
  8034  0173B6  A4D8               	btfss	status,2,c
  8035  0173B8  D00D               	goto	l10909
  8036                           
  8037                           ; Switch size 1, requested type "simple"
  8038                           ; Number of cases is 4, Range of values is 0 to 3
  8039                           ; switch strategies available:
  8040                           ; Name         Instructions Cycles
  8041                           ; simple_byte           13     7 (average)
  8042                           ;	Chosen strategy is simple_byte
  8043  0173BA  500B               	movf	(btemp+10)^0,w,c
  8044  0173BC  0A00               	xorlw	0	; case 0
  8045  0173BE  B4D8               	btfsc	status,2,c
  8046  0173C0  D6B8               	goto	l10839
  8047  0173C2  0A01               	xorlw	1	; case 1
  8048  0173C4  B4D8               	btfsc	status,2,c
  8049  0173C6  D6BF               	goto	l10843
  8050  0173C8  0A03               	xorlw	3	; case 2
  8051  0173CA  B4D8               	btfsc	status,2,c
  8052  0173CC  D6EF               	goto	l10859
  8053  0173CE  0A01               	xorlw	1	; case 3
  8054  0173D0  B4D8               	btfsc	status,2,c
  8055  0173D2  D72D               	goto	l10877
  8056  0173D4                     l10909:
  8057                           
  8058                           ;bsoc.c: 254:  return -1.0;
  8059  0173D4  0E00               	movlw	0
  8060  0173D6  6E01               	movwf	btemp^0,c
  8061  0173D8  0E00               	movlw	0
  8062  0173DA  6E02               	movwf	(btemp+1)^0,c
  8063  0173DC  0E80               	movlw	128
  8064  0173DE  6E03               	movwf	(btemp+2)^0,c
  8065  0173E0  0EBF               	movlw	191
  8066  0173E2                     L5:
  8067  0173E2  6E04               	movwf	(btemp+3)^0,c
  8068  0173E4                     l2088:
  8069                           
  8070                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8071  0173E4  52E5               	movf	postdec1,f,c
  8072  0173E6  0012               	return		;funcret
  8073  0173E8                     __end_of_esr_check:
  8074                           	opt callstack 0
  8075                           
  8076 ;; *************** function _update_adc_result *****************
  8077 ;; Defined at:
  8078 ;;		line 74 in file "daq.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1  [STACK] _Bool 
  8085 ;; Registers used:
  8086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:   17
  8099 ;; This function calls:
  8100 ;;		_StartTimer
  8101 ;;		_TimerDone
  8102 ;;		_check_adc_scan
  8103 ;;		_clear_adc_scan
  8104 ;;		_start_adc_scan
  8105 ;; This function is called by:
  8106 ;;		_esr_check
  8107 ;; This function uses a reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text17
  8111  01B736                     __ptext17:
  8112                           	opt callstack 0
  8113  01B736                     _update_adc_result:
  8114                           	opt callstack 12
  8115                           
  8116                           ;daq.c: 76:  if (R.done) {
  8117                           
  8118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8119                           ;incstack = 0
  8120  01B736  0101               	movlb	1	; () banked
  8121  01B738  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8122  01B73A  B4D8               	btfsc	status,2,c
  8123  01B73C  0012               	return	
  8124                           
  8125                           ; BSR set to: 1
  8126                           ;daq.c: 77:   clear_adc_scan();
  8127  01B73E  EC59  F0E0         	call	_clear_adc_scan	;wreg free
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;daq.c: 78:   start_adc_scan();
  8131  01B742  ECD0  F0D7         	call	_start_adc_scan	;wreg free
  8132                           
  8133                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8134  01B746  0EC8               	movlw	200
  8135  01B748  6EE6               	movwf	postinc1,c
  8136  01B74A  0E00               	movlw	0
  8137  01B74C  6EE6               	movwf	postinc1,c
  8138  01B74E  0E01               	movlw	1
  8139  01B750  6EE6               	movwf	postinc1,c
  8140  01B752  ECFB  F0DA         	call	_StartTimer	;wreg free
  8141  01B756                     l10429:
  8142  01B756  0E01               	movlw	1
  8143  01B758  6EE6               	movwf	postinc1,c
  8144  01B75A  EC65  F0DD         	call	_TimerDone	;wreg free
  8145  01B75E  5001               	movf	btemp^0,w,c
  8146  01B760  A4D8               	btfss	status,2,c
  8147  01B762  0012               	return	
  8148  01B764  EC49  F0E0         	call	_check_adc_scan	;wreg free
  8149  01B768  5001               	movf	btemp^0,w,c
  8150  01B76A  A4D8               	btfss	status,2,c
  8151  01B76C  0012               	return	
  8152  01B76E  D7F3               	goto	l10429
  8153  01B770                     __end_of_update_adc_result:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _start_adc_scan *****************
  8157 ;; Defined at:
  8158 ;;		line 35 in file "daq.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1  [STACK] _Bool 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:   16
  8179 ;; This function calls:
  8180 ;;		_ADCC_DischargeSampleCapacitor
  8181 ;;		_ADCC_SetADIInterruptHandler
  8182 ;;		_ADCC_SetADTIInterruptHandler
  8183 ;;		_ADCC_StartConversion
  8184 ;; This function is called by:
  8185 ;;		_main
  8186 ;;		_update_adc_result
  8187 ;; This function uses a reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text18
  8191  01AFA0                     __ptext18:
  8192                           	opt callstack 0
  8193  01AFA0                     _start_adc_scan:
  8194                           	opt callstack 14
  8195                           
  8196                           ;daq.c: 37:  if (R.done)
  8197                           
  8198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8199                           ;incstack = 0
  8200  01AFA0  0101               	movlb	1	; () banked
  8201  01AFA2  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8202  01AFA4  A4D8               	btfss	status,2,c
  8203  01AFA6  0012               	return	
  8204                           
  8205                           ; BSR set to: 1
  8206                           ;daq.c: 40:  R.scan_index = 0;
  8207  01AFA8  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8211  01AFAA  013A               	movlb	58	; () banked
  8212  01AFAC  5140               	movf	64,w,b	;volatile
  8213  01AFAE  006E F940  F001    	movff	14928,btemp	;volatile
  8214  01AFB4  6A02               	clrf	(btemp+1)^0,c
  8215  01AFB6  0060  F004  F002   	movff	btemp,btemp+1
  8216  01AFBC  6A01               	clrf	btemp^0,c
  8217  01AFBE  2601               	addwf	btemp^0,f,c
  8218  01AFC0  0E00               	movlw	0
  8219  01AFC2  2202               	addwfc	(btemp+1)^0,f,c
  8220  01AFC4  0E77               	movlw	119
  8221  01AFC6  1401               	andwf	btemp^0,w,c
  8222  01AFC8  0101               	movlb	1	; () banked
  8223  01AFCA  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8224  01AFCC  0E3C               	movlw	60
  8225  01AFCE  1402               	andwf	(btemp+1)^0,w,c
  8226  01AFD0  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8230  01AFD2  0EDA               	movlw	low _adc_int_handler
  8231  01AFD4  6EE6               	movwf	postinc1,c
  8232  01AFD6  0EC0               	movlw	high _adc_int_handler
  8233  01AFD8  6EE6               	movwf	postinc1,c
  8234  01AFDA  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8235  01AFDC  6EE6               	movwf	postinc1,c
  8236  01AFDE  EC2D  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8237                           
  8238                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8239  01AFE2  0E00               	movlw	low _adc_int_t_handler
  8240  01AFE4  6EE6               	movwf	postinc1,c
  8241  01AFE6  0EAD               	movlw	high _adc_int_t_handler
  8242  01AFE8  6EE6               	movwf	postinc1,c
  8243  01AFEA  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8244  01AFEC  6EE6               	movwf	postinc1,c
  8245  01AFEE  EC19  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8246                           
  8247                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8248  01AFF2  EC45  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8249                           
  8250                           ; BSR set to: 62
  8251                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8252  01AFF6  0101               	movlb	1	; () banked
  8253  01AFF8  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8254  01AFFA  0B0F               	andlw	15
  8255  01AFFC  6EE6               	movwf	postinc1,c
  8256  01AFFE  ECD4  F0DF         	call	_ADCC_StartConversion	;wreg free
  8257                           
  8258                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8259  01B002  0012               	return		;funcret
  8260  01B004                     __end_of_start_adc_scan:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _ADCC_StartConversion *****************
  8264 ;; Defined at:
  8265 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  channel         1  [STACK] enum E16136
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1  [STACK] void 
  8272 ;; Registers used:
  8273 ;;		fsr1l, fsr1h
  8274 ;; Tracked objects:
  8275 ;;		On entry : 3F/1
  8276 ;;		On exit  : 3F/3E
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   15
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_start_adc_scan
  8290 ;;		_adc_int_t_handler
  8291 ;; This function uses a reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text19
  8295  01BFA8                     __ptext19:
  8296                           	opt callstack 0
  8297  01BFA8                     _ADCC_StartConversion:
  8298                           	opt callstack 0
  8299                           
  8300                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8301                           ;stkvar	_channel @ sp[(0)+-1]
  8302                           
  8303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8304                           ;incstack = 0
  8305 ;; hardware stack exceeded
  8306  01BFA8  0EFF               	movlw	-1
  8307  01BFAA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8308                           
  8309                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8310  01BFB0  013E               	movlb	62	; () banked
  8311  01BFB2  8FF8               	bsf	248,7,b	;volatile
  8312                           
  8313                           ; BSR set to: 62
  8314                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8315  01BFB4  81F8               	bsf	248,0,b	;volatile
  8316                           
  8317                           ; BSR set to: 62
  8318                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8319  01BFB6  52E5               	movf	postdec1,f,c
  8320  01BFB8  0012               	return		;funcret
  8321  01BFBA                     __end_of_ADCC_StartConversion:
  8322                           	opt callstack 0
  8323                           
  8324 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8325 ;; Defined at:
  8326 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1  [STACK] void 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/1
  8337 ;;		On exit  : 3F/3E
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8344 ;;Total ram usage:        0 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:   15
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_start_adc_scan
  8351 ;;		_adc_int_t_handler
  8352 ;; This function uses a reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text20
  8356  01C08A                     __ptext20:
  8357                           	opt callstack 0
  8358  01C08A                     _ADCC_DischargeSampleCapacitor:
  8359                           	opt callstack 0
  8360                           
  8361                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8362                           
  8363                           ; BSR set to: 62
  8364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8365                           ;incstack = 0
  8366 ;; hardware stack exceeded
  8367  01C08A  0E3B               	movlw	59
  8368  01C08C  013E               	movlb	62	; () banked
  8369  01C08E  6FF1               	movwf	241,b	;volatile
  8370                           
  8371                           ; BSR set to: 62
  8372                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8373  01C090  0012               	return		;funcret
  8374  01C092                     __end_of_ADCC_DischargeSampleCapacitor:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _clear_adc_scan *****************
  8378 ;; Defined at:
  8379 ;;		line 66 in file "daq.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1  [STACK] void 
  8386 ;; Registers used:
  8387 ;;		None
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 3F/1
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   15
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_main
  8404 ;;		_update_adc_result
  8405 ;; This function uses a reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text21
  8409  01C0B2                     __ptext21:
  8410                           	opt callstack 0
  8411  01C0B2                     _clear_adc_scan:
  8412                           	opt callstack 13
  8413                           
  8414                           ;daq.c: 68:  R.done = 0;
  8415                           
  8416                           ; BSR set to: 62
  8417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8418                           ;incstack = 0
  8419  01C0B2  0101               	movlb	1	; () banked
  8420  01C0B4  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8421                           
  8422                           ; BSR set to: 1
  8423                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8424  01C0B6  0012               	return		;funcret
  8425  01C0B8                     __end_of_clear_adc_scan:
  8426                           	opt callstack 0
  8427                           
  8428 ;; *************** function _check_adc_scan *****************
  8429 ;; Defined at:
  8430 ;;		line 58 in file "daq.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1  [STACK] _Bool 
  8437 ;; Registers used:
  8438 ;;		btemp
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/1
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:   15
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_main
  8455 ;;		_update_adc_result
  8456 ;; This function uses a reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text22
  8460  01C092                     __ptext22:
  8461                           	opt callstack 0
  8462  01C092                     _check_adc_scan:
  8463                           	opt callstack 13
  8464                           
  8465                           ;daq.c: 60:  return R.done;
  8466                           
  8467                           ; BSR set to: 1
  8468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8469                           ;incstack = 0
  8470  01C092  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8471                           
  8472                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8473  01C098  0012               	return		;funcret
  8474  01C09A                     __end_of_check_adc_scan:
  8475                           	opt callstack 0
  8476                           
  8477 ;; *************** function _set_load_relay_two *****************
  8478 ;; Defined at:
  8479 ;;		line 130 in file "mbmc.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  mode            1  [STACK] _Bool 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1  [STACK] void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr1l, fsr1h
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:   15
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_main
  8504 ;;		_esr_check
  8505 ;; This function uses a reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text23
  8509  01BFBA                     __ptext23:
  8510                           	opt callstack 0
  8511  01BFBA                     _set_load_relay_two:
  8512                           	opt callstack 15
  8513                           
  8514                           ;mbmc.c: 130: void set_load_relay_two(_Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LATDbits.
      +                          LATD5 = mode;
  8515                           ;stkvar	_mode @ sp[(0)+-1]
  8516                           
  8517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8518                           ;incstack = 0
  8519  01BFBA  0EFF               	movlw	-1
  8520  01BFBC  B0E3               	btfsc	plusw1,0,c
  8521  01BFBE  D002               	bra	u9515
  8522  01BFC0  9ABD               	bcf	189,5,c	;volatile
  8523  01BFC2  D001               	bra	u9516
  8524  01BFC4                     u9515:
  8525  01BFC4  8ABD               	bsf	189,5,c	;volatile
  8526  01BFC6                     u9516:
  8527                           
  8528                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8529  01BFC6  52E5               	movf	postdec1,f,c
  8530  01BFC8  0012               	return		;funcret
  8531  01BFCA                     __end_of_set_load_relay_two:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _set_load_relay_one *****************
  8535 ;; Defined at:
  8536 ;;		line 125 in file "mbmc.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  mode            1  [STACK] _Bool 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1  [STACK] void 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr1l, fsr1h
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:   15
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_main
  8561 ;;		_esr_check
  8562 ;; This function uses a reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text24
  8566  01BFCA                     __ptext24:
  8567                           	opt callstack 0
  8568  01BFCA                     _set_load_relay_one:
  8569                           	opt callstack 15
  8570                           
  8571                           ;mbmc.c: 125: void set_load_relay_one(_Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LATDbits.
      +                          LATD4 = mode;
  8572                           ;stkvar	_mode @ sp[(0)+-1]
  8573                           
  8574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8575                           ;incstack = 0
  8576  01BFCA  0EFF               	movlw	-1
  8577  01BFCC  B0E3               	btfsc	plusw1,0,c
  8578  01BFCE  D002               	bra	u9505
  8579  01BFD0  98BD               	bcf	189,4,c	;volatile
  8580  01BFD2  D001               	bra	u9506
  8581  01BFD4                     u9505:
  8582  01BFD4  88BD               	bsf	189,4,c	;volatile
  8583  01BFD6                     u9506:
  8584                           
  8585                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8586  01BFD6  52E5               	movf	postdec1,f,c
  8587  01BFD8  0012               	return		;funcret
  8588  01BFDA                     __end_of_set_load_relay_one:
  8589                           	opt callstack 0
  8590                           
  8591 ;; *************** function _eaDogM_WriteCommand *****************
  8592 ;; Defined at:
  8593 ;;		line 175 in file "eadog.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  cmd             1  [STACK] const unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1  [STACK] void 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8602 ;; Tracked objects:
  8603 ;;		On entry : 3F/3D
  8604 ;;		On exit  : 3F/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;Total ram usage:        0 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:   25
  8614 ;; This function calls:
  8615 ;;		_send_lcd_cmd_dma
  8616 ;; This function is called by:
  8617 ;;		_main
  8618 ;; This function uses a reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text25
  8622  01C008                     __ptext25:
  8623                           	opt callstack 0
  8624  01C008                     _eaDogM_WriteCommand:
  8625                           	opt callstack 5
  8626                           
  8627                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8628                           ;stkvar	_cmd @ sp[(0)+-1]
  8629                           
  8630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8631                           ;incstack = 0
  8632  01C008  0EFF               	movlw	-1
  8633  01C00A  50E3               	movf	plusw1,w,c
  8634  01C00C  6EE6               	movwf	postinc1,c
  8635  01C00E  EC1B  F0D9         	call	_send_lcd_cmd_dma	;wreg free
  8636                           
  8637                           ; BSR set to: 0
  8638                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8639  01C012  52E5               	movf	postdec1,f,c
  8640  01C014  0012               	return		;funcret
  8641  01C016                     __end_of_eaDogM_WriteCommand:
  8642                           	opt callstack 0
  8643                           
  8644 ;; *************** function _convert_adc_data *****************
  8645 ;; Defined at:
  8646 ;;		line 51 in file "mbmc.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  i               1  [STACK] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1  [STACK] void 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/1
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:   18
  8667 ;; This function calls:
  8668 ;;		_conv_raw_result
  8669 ;;		_lp_filter
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text26
  8676  01A51E                     __ptext26:
  8677                           	opt callstack 0
  8678  01A51E                     _convert_adc_data:
  8679                           	opt callstack 0
  8680                           
  8681                           ; BSR set to: 0
  8682                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8683  01A51E  52E6               	movf	postinc1,f,c
  8684                           
  8685                           ;mbmc.c: 53:  uint8_t i = 0;
  8686                           ;stkvar	_i @ sp[(-1)+0]
  8687                           
  8688                           ;incstack = 0
  8689  01A520  0EFF               	movlw	-1
  8690  01A522  6AE3               	clrf	plusw1,c
  8691  01A524                     l10919:
  8692                           
  8693                           ;mbmc.c: 56:   if (V.calib) {
  8694  01A524  0101               	movlb	1	; () banked
  8695  01A526  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8696  01A528  B4D8               	btfsc	status,2,c
  8697  01A52A  D01B               	goto	l10923
  8698                           
  8699                           ; BSR set to: 1
  8700                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8701  01A52C  0E01               	movlw	1
  8702  01A52E  6EE6               	movwf	postinc1,c
  8703                           
  8704                           ;stkvar	_i @ sp[(-2)+0]
  8705  01A530  0EFE               	movlw	-2
  8706  01A532  50E3               	movf	plusw1,w,c
  8707  01A534  6EE6               	movwf	postinc1,c
  8708  01A536  0E01               	movlw	1
  8709  01A538  6EE6               	movwf	postinc1,c
  8710                           
  8711                           ;stkvar	_i @ sp[(-4)+0]
  8712  01A53A  0EFC               	movlw	-4
  8713  01A53C  50E3               	movf	plusw1,w,c
  8714  01A53E  6EE6               	movwf	postinc1,c
  8715  01A540  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8716  01A544  0060  F007  FFE6   	movff	btemp,postinc1
  8717  01A54A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8718  01A550  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8719  01A556  0060  F013  FFE6   	movff	btemp+3,postinc1
  8720  01A55C  EC2B  F0C3         	call	_lp_filter	;wreg free
  8721  01A560  D01A               	goto	L8
  8722  01A562                     l10923:
  8723                           
  8724                           ; BSR set to: 1
  8725                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8726  01A562  0E00               	movlw	0
  8727  01A564  6EE6               	movwf	postinc1,c
  8728                           
  8729                           ;stkvar	_i @ sp[(-2)+0]
  8730  01A566  0EFE               	movlw	-2
  8731  01A568  50E3               	movf	plusw1,w,c
  8732  01A56A  6EE6               	movwf	postinc1,c
  8733  01A56C  0E00               	movlw	0
  8734  01A56E  6EE6               	movwf	postinc1,c
  8735                           
  8736                           ;stkvar	_i @ sp[(-4)+0]
  8737  01A570  0EFC               	movlw	-4
  8738  01A572  50E3               	movf	plusw1,w,c
  8739  01A574  6EE6               	movwf	postinc1,c
  8740  01A576  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8741  01A57A  0060  F007  FFE6   	movff	btemp,postinc1
  8742  01A580  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8743  01A586  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8744  01A58C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8745  01A592  EC2B  F0C3         	call	_lp_filter	;wreg free
  8746  01A596                     L8:
  8747                           
  8748                           ;stkvar	_i @ sp[(-1)+0]
  8749  01A596  0EFF               	movlw	-1
  8750  01A598  50E3               	movf	plusw1,w,c
  8751  01A59A  0D04               	mullw	4
  8752  01A59C  0EFF               	movlw	low _C
  8753  01A59E  24F3               	addwf	243,w,c
  8754  01A5A0  6ED9               	movwf	fsr2l,c
  8755  01A5A2  0E06               	movlw	high _C
  8756  01A5A4  20F4               	addwfc	prodh,w,c
  8757  01A5A6  6EDA               	movwf	fsr2h,c
  8758  01A5A8  0060  F007  FFDE   	movff	btemp,postinc2
  8759  01A5AE  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8760  01A5B4  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8761  01A5BA  0060  F013  FFDE   	movff	btemp+3,postinc2
  8762                           
  8763                           ;mbmc.c: 61:  } while (++i < 16);
  8764                           ;stkvar	_i @ sp[(-1)+0]
  8765  01A5C0  0EFF               	movlw	-1
  8766  01A5C2  2AE3               	incf	plusw1,f,c
  8767  01A5C4  0EFF               	movlw	-1
  8768  01A5C6  006F FF8C  F001    	movff	plusw1,btemp
  8769  01A5CC  0E0F               	movlw	15
  8770  01A5CE  6401               	cpfsgt	btemp^0,c
  8771  01A5D0  D7A9               	goto	l10919
  8772                           
  8773                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8774  01A5D2  52E5               	movf	postdec1,f,c
  8775  01A5D4  0012               	return		;funcret
  8776  01A5D6                     __end_of_convert_adc_data:
  8777                           	opt callstack 0
  8778                           
  8779 ;; *************** function _clear_hid_pflags *****************
  8780 ;; Defined at:
  8781 ;;		line 51 in file "hid.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  h               1  [STACK] PTR struct H_data
  8784 ;;		 -> H(7), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1  [STACK] void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8791 ;; Tracked objects:
  8792 ;;		On entry : 3F/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:   15
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_main
  8807 ;; This function uses a reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text27
  8811  01BCFC                     __ptext27:
  8812                           	opt callstack 0
  8813  01BCFC                     _clear_hid_pflags:
  8814                           	opt callstack 15
  8815                           
  8816                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8817                           ;stkvar	_h @ sp[(0)+-1]
  8818                           
  8819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8820                           ;incstack = 0
  8821  01BCFC  0EFF               	movlw	-1
  8822  01BCFE  50E3               	movf	plusw1,w,c
  8823  01BD00  6ED9               	movwf	fsr2l,c
  8824  01BD02  6ADA               	clrf	fsr2h,c
  8825  01BD04  0E03               	movlw	3
  8826  01BD06  26D9               	addwf	fsr2l,f,c
  8827  01BD08  0E00               	movlw	0
  8828  01BD0A  6EDF               	movwf	indf2,c
  8829                           
  8830                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8831                           ;stkvar	_h @ sp[(0)+-1]
  8832  01BD0C  0EFF               	movlw	-1
  8833  01BD0E  50E3               	movf	plusw1,w,c
  8834  01BD10  6ED9               	movwf	fsr2l,c
  8835  01BD12  6ADA               	clrf	fsr2h,c
  8836  01BD14  0E05               	movlw	5
  8837  01BD16  26D9               	addwf	fsr2l,f,c
  8838  01BD18  0E00               	movlw	0
  8839  01BD1A  6EDF               	movwf	indf2,c
  8840                           
  8841                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8842  01BD1C  52E5               	movf	postdec1,f,c
  8843  01BD1E  0012               	return		;funcret
  8844  01BD20                     __end_of_clear_hid_pflags:
  8845                           	opt callstack 0
  8846                           
  8847 ;; *************** function _check_help *****************
  8848 ;; Defined at:
  8849 ;;		line 40 in file "mconfig.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  flipper         1  [STACK] const _Bool 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  estatus         1    0        _Bool 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1  [STACK] _Bool 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8858 ;; Tracked objects:
  8859 ;;		On entry : 3F/1
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:   27
  8870 ;; This function calls:
  8871 ;;		_StartTimer
  8872 ;;		_TimerDone
  8873 ;;		_display_help
  8874 ;;		_display_info
  8875 ;;		_get_vterm_ptr
  8876 ;;		_help_button
  8877 ;;		_mode_lamp_bright
  8878 ;;		_mode_lamp_dim
  8879 ;;		_set_display_info
  8880 ;;		_set_temp_display_help
  8881 ;;		_set_vterm
  8882 ;;		_sprintf
  8883 ;;		_update_lcd
  8884 ;;		_vterm_dump
  8885 ;; This function is called by:
  8886 ;;		_main
  8887 ;; This function uses a reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text28
  8891  018240                     __ptext28:
  8892                           	opt callstack 0
  8893  018240                     _check_help:
  8894                           	opt callstack 3
  8895                           
  8896                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8897                           
  8898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8899                           ;incstack = 0
  8900  018240  ECB8  F0DB         	call	_help_button	;wreg free
  8901  018244  5001               	movf	btemp^0,w,c
  8902  018246  B4D8               	btfsc	status,2,c
  8903  018248  D0D0               	goto	l12843
  8904  01824A  EC4D  F0E0         	call	_display_info	;wreg free
  8905  01824E  0401               	decf	btemp^0,w,c
  8906  018250  B4D8               	btfsc	status,2,c
  8907  018252  D0CB               	goto	l12843
  8908                           
  8909                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8910  018254  0EDC               	movlw	220
  8911  018256  6EE6               	movwf	postinc1,c
  8912  018258  0E05               	movlw	5
  8913  01825A  6EE6               	movwf	postinc1,c
  8914  01825C  0E0B               	movlw	11
  8915  01825E  6EE6               	movwf	postinc1,c
  8916  018260  ECFB  F0DA         	call	_StartTimer	;wreg free
  8917                           
  8918                           ;mconfig.c: 48:   if (V.debug)
  8919  018264  0101               	movlb	1	; () banked
  8920  018266  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8921                           
  8922                           ; BSR set to: 1
  8923                           ;mconfig.c: 49:    vterm_dump();
  8924  018268  EC2D  F0CB         	call	_vterm_dump	;wreg free
  8925                           
  8926                           ;mconfig.c: 51:   set_vterm(1);
  8927  01826C  0E01               	movlw	1
  8928  01826E  6EE6               	movwf	postinc1,c
  8929  018270  EC3B  F0DF         	call	_set_vterm	;wreg free
  8930                           
  8931                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8932  018274  EC4D  F0E0         	call	_display_info	;wreg free
  8933  018278  5001               	movf	btemp^0,w,c
  8934  01827A  6EE6               	movwf	postinc1,c
  8935  01827C  ECED  F0DF         	call	_set_temp_display_help	;wreg free
  8936                           
  8937                           ; BSR set to: 1
  8938                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8939  018280  0E01               	movlw	1
  8940  018282  6EE6               	movwf	postinc1,c
  8941  018284  EC4A  F0DF         	call	_set_display_info	;wreg free
  8942                           
  8943                           ;mconfig.c: 54:   if (flipper) {
  8944                           ;stkvar	_flipper @ sp[(0)+-1]
  8945  018288  0EFF               	movlw	-1
  8946  01828A  50E3               	movf	plusw1,w,c
  8947  01828C  B4D8               	btfsc	status,2,c
  8948  01828E  D019               	goto	l12829
  8949                           
  8950                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8951  018290  0EB1               	movlw	low STR_46
  8952  018292  6EE6               	movwf	postinc1,c
  8953  018294  0EFF               	movlw	high STR_46
  8954  018296  6EE6               	movwf	postinc1,c
  8955  018298  0E27               	movlw	low STR_48
  8956  01829A  6EE6               	movwf	postinc1,c
  8957  01829C  0EFE               	movlw	high STR_48
  8958  01829E  6EE6               	movwf	postinc1,c
  8959  0182A0  0E01               	movlw	1
  8960  0182A2  6EE6               	movwf	postinc1,c
  8961  0182A4  0E00               	movlw	0
  8962  0182A6  6EE6               	movwf	postinc1,c
  8963  0182A8  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  8964  0182AC  0060  F007  FFE6   	movff	btemp,postinc1
  8965  0182B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8966  0182B8  0E06               	movlw	6
  8967  0182BA  6EE6               	movwf	postinc1,c
  8968  0182BC  EC81  F0CE         	call	_sprintf	;wreg free
  8969                           
  8970                           ;mconfig.c: 56:   } else {
  8971  0182C0  D018               	goto	l1674
  8972  0182C2                     l12829:
  8973                           
  8974                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8975  0182C2  0EC7               	movlw	low STR_47
  8976  0182C4  6EE6               	movwf	postinc1,c
  8977  0182C6  0EFF               	movlw	high STR_47
  8978  0182C8  6EE6               	movwf	postinc1,c
  8979  0182CA  0E27               	movlw	low STR_48
  8980  0182CC  6EE6               	movwf	postinc1,c
  8981  0182CE  0EFE               	movlw	high STR_48
  8982  0182D0  6EE6               	movwf	postinc1,c
  8983  0182D2  0E01               	movlw	1
  8984  0182D4  6EE6               	movwf	postinc1,c
  8985  0182D6  0E00               	movlw	0
  8986  0182D8  6EE6               	movwf	postinc1,c
  8987  0182DA  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  8988  0182DE  0060  F007  FFE6   	movff	btemp,postinc1
  8989  0182E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8990  0182EA  0E06               	movlw	6
  8991  0182EC  6EE6               	movwf	postinc1,c
  8992  0182EE  EC81  F0CE         	call	_sprintf	;wreg free
  8993  0182F2                     l1674:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8997  0182F2  0101               	movlb	1	; () banked
  8998  0182F4  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  8999  0182F6  32E8               	rrcf	wreg,f,c
  9000  0182F8  32E8               	rrcf	wreg,f,c
  9001  0182FA  0B03               	andlw	3
  9002  0182FC  0D24               	mullw	36
  9003  0182FE  0E12               	movlw	18
  9004  018300  26F3               	addwf	243,f,c
  9005  018302  0E00               	movlw	0
  9006  018304  22F4               	addwfc	244,f,c
  9007  018306  0E25               	movlw	low _T
  9008  018308  6E0B               	movwf	(btemp+10)^0,c
  9009  01830A  0EFB               	movlw	high _T
  9010  01830C  6E0C               	movwf	(btemp+11)^0,c
  9011  01830E  50F3               	movf	243,w,c
  9012  018310  260B               	addwf	(btemp+10)^0,f,c
  9013  018312  50F4               	movf	244,w,c
  9014  018314  220C               	addwfc	(btemp+11)^0,f,c
  9015  018316  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9016  01831C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9017  018322  0EBD               	movlw	low STR_50
  9018  018324  6EE6               	movwf	postinc1,c
  9019  018326  0EFF               	movlw	high STR_50
  9020  018328  6EE6               	movwf	postinc1,c
  9021  01832A  0E01               	movlw	1
  9022  01832C  6EE6               	movwf	postinc1,c
  9023  01832E  0E01               	movlw	1
  9024  018330  6EE6               	movwf	postinc1,c
  9025  018332  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9026  018336  0060  F007  FFE6   	movff	btemp,postinc1
  9027  01833C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9028  018342  0E06               	movlw	6
  9029  018344  6EE6               	movwf	postinc1,c
  9030  018346  EC81  F0CE         	call	_sprintf	;wreg free
  9031                           
  9032                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9033  01834A  0101               	movlb	1	; () banked
  9034  01834C  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9035  01834E  32E8               	rrcf	wreg,f,c
  9036  018350  32E8               	rrcf	wreg,f,c
  9037  018352  0B03               	andlw	3
  9038  018354  0D24               	mullw	36
  9039  018356  0E25               	movlw	low _T
  9040  018358  6E0B               	movwf	(btemp+10)^0,c
  9041  01835A  0EFB               	movlw	high _T
  9042  01835C  6E0C               	movwf	(btemp+11)^0,c
  9043  01835E  50F3               	movf	243,w,c
  9044  018360  260B               	addwf	(btemp+10)^0,f,c
  9045  018362  50F4               	movf	244,w,c
  9046  018364  220C               	addwfc	(btemp+11)^0,f,c
  9047  018366  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9048  01836C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9049  018372  0EBD               	movlw	low STR_50
  9050  018374  6EE6               	movwf	postinc1,c
  9051  018376  0EFF               	movlw	high STR_50
  9052  018378  6EE6               	movwf	postinc1,c
  9053  01837A  0E01               	movlw	1
  9054  01837C  6EE6               	movwf	postinc1,c
  9055  01837E  0E02               	movlw	2
  9056  018380  6EE6               	movwf	postinc1,c
  9057  018382  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9058  018386  0060  F007  FFE6   	movff	btemp,postinc1
  9059  01838C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9060  018392  0E06               	movlw	6
  9061  018394  6EE6               	movwf	postinc1,c
  9062  018396  EC81  F0CE         	call	_sprintf	;wreg free
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;mconfig.c: 61:   V.help_id++;
  9066  01839A  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9067  01839E  38DF               	swapf	223,w,c
  9068  0183A0  6E0C               	movwf	(btemp+11)^0,c
  9069  0183A2  320C               	rrcf	(btemp+11)^0,f,c
  9070  0183A4  300C               	rrcf	(btemp+11)^0,w,c
  9071  0183A6  0B03               	andlw	3
  9072  0183A8  6E0C               	movwf	(btemp+11)^0,c
  9073  0183AA  2A0C               	incf	(btemp+11)^0,f,c
  9074  0183AC  3A0C               	swapf	(btemp+11)^0,f,c
  9075  0183AE  360C               	rlcf	(btemp+11)^0,f,c
  9076  0183B0  360C               	rlcf	(btemp+11)^0,f,c
  9077  0183B2  50DF               	movf	223,w,c
  9078  0183B4  180C               	xorwf	(btemp+11)^0,w,c
  9079  0183B6  0B3F               	andlw	-193
  9080  0183B8  180C               	xorwf	(btemp+11)^0,w,c
  9081  0183BA  6EDF               	movwf	223,c
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9085  0183BC  0EB8               	movlw	184
  9086  0183BE  6EE6               	movwf	postinc1,c
  9087  0183C0  0E0B               	movlw	11
  9088  0183C2  6EE6               	movwf	postinc1,c
  9089  0183C4  0E09               	movlw	9
  9090  0183C6  6EE6               	movwf	postinc1,c
  9091  0183C8  ECFB  F0DA         	call	_StartTimer	;wreg free
  9092                           
  9093                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9094  0183CC  0EB8               	movlw	184
  9095  0183CE  6EE6               	movwf	postinc1,c
  9096  0183D0  0E0B               	movlw	11
  9097  0183D2  6EE6               	movwf	postinc1,c
  9098  0183D4  0E07               	movlw	7
  9099  0183D6  6EE6               	movwf	postinc1,c
  9100  0183D8  ECFB  F0DA         	call	_StartTimer	;wreg free
  9101                           
  9102                           ;mconfig.c: 64:   mode_lamp_bright();
  9103  0183DC  EC0B  F0E0         	call	_mode_lamp_bright	;wreg free
  9104                           
  9105                           ;mconfig.c: 65:   update_lcd(1);
  9106  0183E0  0E01               	movlw	1
  9107  0183E2  6EE6               	movwf	postinc1,c
  9108  0183E4  ECF9  F0CD         	call	_update_lcd	;wreg free
  9109                           
  9110                           ;mconfig.c: 67:  } else {
  9111  0183E8  D032               	goto	l1675
  9112  0183EA                     l12843:
  9113                           
  9114                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9115  0183EA  0E09               	movlw	9
  9116  0183EC  6EE6               	movwf	postinc1,c
  9117  0183EE  EC65  F0DD         	call	_TimerDone	;wreg free
  9118  0183F2  5001               	movf	btemp^0,w,c
  9119  0183F4  B4D8               	btfsc	status,2,c
  9120  0183F6  D02B               	goto	l1675
  9121                           
  9122                           ;mconfig.c: 69:    set_vterm(0);
  9123  0183F8  0E00               	movlw	0
  9124  0183FA  6EE6               	movwf	postinc1,c
  9125  0183FC  EC3B  F0DF         	call	_set_vterm	;wreg free
  9126                           
  9127                           ;mconfig.c: 70:    V.help = 0;
  9128  018400  0101               	movlb	1	; () banked
  9129  018402  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9130                           
  9131                           ; BSR set to: 1
  9132                           ;mconfig.c: 71:    set_display_info(display_help());
  9133  018404  EC51  F0E0         	call	_display_help	;wreg free
  9134  018408  5001               	movf	btemp^0,w,c
  9135  01840A  6EE6               	movwf	postinc1,c
  9136  01840C  EC4A  F0DF         	call	_set_display_info	;wreg free
  9137                           
  9138                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9139  018410  0060  F717  FFE6   	movff	_V+149,postinc1
  9140  018416  0060  F71B  FFE6   	movff	_V+150,postinc1
  9141  01841C  EC91  F0DF         	call	_mode_lamp_dim	;wreg free
  9142                           
  9143                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9144  018420  0E0B               	movlw	11
  9145  018422  6EE6               	movwf	postinc1,c
  9146  018424  EC65  F0DD         	call	_TimerDone	;wreg free
  9147  018428  5001               	movf	btemp^0,w,c
  9148  01842A  B4D8               	btfsc	status,2,c
  9149  01842C  D010               	goto	l1675
  9150                           
  9151                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9152  01842E  0101               	movlb	1	; () banked
  9153  018430  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9154  018432  A4D8               	btfss	status,2,c
  9155  018434  D002               	goto	u12540
  9156  018436  0E01               	movlw	1
  9157  018438  D001               	goto	u12550
  9158  01843A                     u12540:
  9159  01843A  0E00               	movlw	0
  9160  01843C                     u12550:
  9161  01843C  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9162                           
  9163                           ; BSR set to: 1
  9164                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9165  01843E  0EDC               	movlw	220
  9166  018440  6EE6               	movwf	postinc1,c
  9167  018442  0E05               	movlw	5
  9168  018444  6EE6               	movwf	postinc1,c
  9169  018446  0E0B               	movlw	11
  9170  018448  6EE6               	movwf	postinc1,c
  9171  01844A  ECFB  F0DA         	call	_StartTimer	;wreg free
  9172  01844E                     l1675:
  9173                           
  9174                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9175  01844E  52E5               	movf	postdec1,f,c
  9176  018450  0012               	return		;funcret
  9177  018452                     __end_of_check_help:
  9178                           	opt callstack 0
  9179                           
  9180 ;; *************** function _vterm_dump *****************
  9181 ;; Defined at:
  9182 ;;		line 121 in file "mconfig.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;		None
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1  [STACK] void 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9191 ;; Tracked objects:
  9192 ;;		On entry : 3F/1
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9200 ;;Total ram usage:        0 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:   26
  9203 ;; This function calls:
  9204 ;;		_WaitMs
  9205 ;;		_eaDogM_WriteStringAtPos
  9206 ;;		_get_vterm_ptr
  9207 ;;		_sprintf
  9208 ;;		_wait_lcd_done
  9209 ;; This function is called by:
  9210 ;;		_check_help
  9211 ;; This function uses a reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text29
  9215  01965A                     __ptext29:
  9216                           	opt callstack 0
  9217  01965A                     _vterm_dump:
  9218                           	opt callstack 3
  9219                           
  9220                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9221                           
  9222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9223                           ;incstack = 0
  9224  01965A  0E01               	movlw	1
  9225  01965C  6EE6               	movwf	postinc1,c
  9226  01965E  0E00               	movlw	0
  9227  019660  6EE6               	movwf	postinc1,c
  9228  019662  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9229  019666  0060  F007  FFE6   	movff	btemp,postinc1
  9230  01966C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9231  019672  0E00               	movlw	0
  9232  019674  6EE6               	movwf	postinc1,c
  9233  019676  0E00               	movlw	0
  9234  019678  6EE6               	movwf	postinc1,c
  9235  01967A  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9236  01967E  0060  F007  FFE6   	movff	btemp,postinc1
  9237  019684  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9238  01968A  0E93               	movlw	low STR_52
  9239  01968C  6EE6               	movwf	postinc1,c
  9240  01968E  0EFF               	movlw	high STR_52
  9241  019690  6EE6               	movwf	postinc1,c
  9242  019692  0E31               	movlw	low (_V+1)
  9243  019694  6EE6               	movwf	postinc1,c
  9244  019696  0E01               	movlw	high (_V+1)
  9245  019698  6EE6               	movwf	postinc1,c
  9246  01969A  0E08               	movlw	8
  9247  01969C  6EE6               	movwf	postinc1,c
  9248  01969E  EC81  F0CE         	call	_sprintf	;wreg free
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;mconfig.c: 124:  wait_lcd_done();
  9252  0196A2  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9256  0196A6  0E31               	movlw	low (_V+1)
  9257  0196A8  6EE6               	movwf	postinc1,c
  9258  0196AA  0E01               	movlw	high (_V+1)
  9259  0196AC  6EE6               	movwf	postinc1,c
  9260  0196AE  0E00               	movlw	0
  9261  0196B0  6EE6               	movwf	postinc1,c
  9262  0196B2  0E00               	movlw	0
  9263  0196B4  6EE6               	movwf	postinc1,c
  9264  0196B6  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9265                           
  9266                           ; BSR set to: 59
  9267                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9268  0196BA  0E01               	movlw	1
  9269  0196BC  6EE6               	movwf	postinc1,c
  9270  0196BE  0E01               	movlw	1
  9271  0196C0  6EE6               	movwf	postinc1,c
  9272  0196C2  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9273  0196C6  0060  F007  FFE6   	movff	btemp,postinc1
  9274  0196CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9275  0196D2  0E00               	movlw	0
  9276  0196D4  6EE6               	movwf	postinc1,c
  9277  0196D6  0E01               	movlw	1
  9278  0196D8  6EE6               	movwf	postinc1,c
  9279  0196DA  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9280  0196DE  0060  F007  FFE6   	movff	btemp,postinc1
  9281  0196E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9282  0196EA  0E93               	movlw	low STR_52
  9283  0196EC  6EE6               	movwf	postinc1,c
  9284  0196EE  0EFF               	movlw	high STR_52
  9285  0196F0  6EE6               	movwf	postinc1,c
  9286  0196F2  0E31               	movlw	low (_V+1)
  9287  0196F4  6EE6               	movwf	postinc1,c
  9288  0196F6  0E01               	movlw	high (_V+1)
  9289  0196F8  6EE6               	movwf	postinc1,c
  9290  0196FA  0E08               	movlw	8
  9291  0196FC  6EE6               	movwf	postinc1,c
  9292  0196FE  EC81  F0CE         	call	_sprintf	;wreg free
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;mconfig.c: 127:  wait_lcd_done();
  9296  019702  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9297                           
  9298                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9299  019706  0E31               	movlw	low (_V+1)
  9300  019708  6EE6               	movwf	postinc1,c
  9301  01970A  0E01               	movlw	high (_V+1)
  9302  01970C  6EE6               	movwf	postinc1,c
  9303  01970E  0E00               	movlw	0
  9304  019710  6EE6               	movwf	postinc1,c
  9305  019712  0E01               	movlw	1
  9306  019714  6EE6               	movwf	postinc1,c
  9307  019716  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9308                           
  9309                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9310  01971A  0E01               	movlw	1
  9311  01971C  6EE6               	movwf	postinc1,c
  9312  01971E  0E02               	movlw	2
  9313  019720  6EE6               	movwf	postinc1,c
  9314  019722  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9315  019726  0060  F007  FFE6   	movff	btemp,postinc1
  9316  01972C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9317  019732  0E00               	movlw	0
  9318  019734  6EE6               	movwf	postinc1,c
  9319  019736  0E02               	movlw	2
  9320  019738  6EE6               	movwf	postinc1,c
  9321  01973A  ECBA  F0DC         	call	_get_vterm_ptr	;wreg free
  9322  01973E  0060  F007  FFE6   	movff	btemp,postinc1
  9323  019744  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9324  01974A  0E93               	movlw	low STR_52
  9325  01974C  6EE6               	movwf	postinc1,c
  9326  01974E  0EFF               	movlw	high STR_52
  9327  019750  6EE6               	movwf	postinc1,c
  9328  019752  0E31               	movlw	low (_V+1)
  9329  019754  6EE6               	movwf	postinc1,c
  9330  019756  0E01               	movlw	high (_V+1)
  9331  019758  6EE6               	movwf	postinc1,c
  9332  01975A  0E08               	movlw	8
  9333  01975C  6EE6               	movwf	postinc1,c
  9334  01975E  EC81  F0CE         	call	_sprintf	;wreg free
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;mconfig.c: 130:  wait_lcd_done();
  9338  019762  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9342  019766  0E31               	movlw	low (_V+1)
  9343  019768  6EE6               	movwf	postinc1,c
  9344  01976A  0E01               	movlw	high (_V+1)
  9345  01976C  6EE6               	movwf	postinc1,c
  9346  01976E  0E00               	movlw	0
  9347  019770  6EE6               	movwf	postinc1,c
  9348  019772  0E02               	movlw	2
  9349  019774  6EE6               	movwf	postinc1,c
  9350  019776  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9351                           
  9352                           ; BSR set to: 59
  9353                           ;mconfig.c: 132:  WaitMs(3000);
  9354  01977A  0EB8               	movlw	184
  9355  01977C  6EE6               	movwf	postinc1,c
  9356  01977E  0E0B               	movlw	11
  9357  019780  6EE6               	movwf	postinc1,c
  9358  019782  ECF0  F0DB         	call	_WaitMs	;wreg free
  9359                           
  9360                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9361  019786  0012               	return		;funcret
  9362  019788                     __end_of_vterm_dump:
  9363                           	opt callstack 0
  9364                           
  9365 ;; *************** function _sprintf *****************
  9366 ;; Defined at:
  9367 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  s               2  [STACK] PTR unsigned char 
  9370 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9371 ;;  fmt             2  [STACK] PTR const unsigned char 
  9372 ;;		 -> STR_65(121), STR_63(3), STR_62(3), STR_61(19), 
  9373 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9374 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9375 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9376 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9377 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9378 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9379 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9380 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9381 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9382 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9383 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9384 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9385 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9386 ;;		 -> STR_2(15), STR_1(17), 
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  f               6  [STACK] struct _IO_FILE
  9389 ;;  ap              2  [STACK] PTR void [1]
  9390 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9391 ;;  ret             2    0        int 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  2  [STACK] int 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 3F/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:   23
  9408 ;; This function calls:
  9409 ;;		_vfprintf
  9410 ;; This function is called by:
  9411 ;;		_main
  9412 ;;		_check_help
  9413 ;;		_vterm_dump
  9414 ;;		_calc_bsoc
  9415 ;; This function uses a reentrant model
  9416 ;;
  9417                           
  9418                           	psect	text30
  9419  019D02                     __ptext30:
  9420                           	opt callstack 0
  9421  019D02                     _sprintf:
  9422                           	opt callstack 0
  9423                           
  9424                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9425  019D02  0E08               	movlw	8
  9426  019D04  26E1               	addwf	fsr1l,f,c
  9427  019D06  0E00               	movlw	0
  9428  019D08  22E2               	addwfc	fsr1h,f,c
  9429                           
  9430                           ;incstack = 0
  9431 ;; hardware stack exceeded
  9432  019D0A  0EFE               	movlw	254
  9433  019D0C  6E0B               	movwf	(btemp+10)^0,c
  9434  019D0E  0EFF               	movlw	255
  9435  019D10  6E0C               	movwf	(btemp+11)^0,c
  9436                           
  9437                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9438  019D12  0EF5               	movlw	245
  9439  019D14  24E1               	addwf	fsr1l,w,c
  9440  019D16  6E09               	movwf	(btemp+8)^0,c
  9441  019D18  0EFF               	movlw	255
  9442  019D1A  20E2               	addwfc	fsr1h,w,c
  9443  019D1C  6E0A               	movwf	(btemp+9)^0,c
  9444  019D1E  500B               	movf	(btemp+10)^0,w,c
  9445  019D20  2609               	addwf	(btemp+8)^0,f,c
  9446  019D22  500C               	movf	(btemp+11)^0,w,c
  9447  019D24  220A               	addwfc	(btemp+9)^0,f,c
  9448                           
  9449                           ;stkvar	_ap @ sp[(-8)+6]
  9450  019D26  0EFF               	movlw	-1
  9451  019D28  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9452  019D2E  0EFE               	movlw	-2
  9453  019D30  0060  F027  FFE3   	movff	btemp+8,plusw1
  9454                           
  9455                           ;stkvar	_s @ sp[(-8)+-3]
  9456  019D36  0EF5               	movlw	-11
  9457  019D38  006F FF8C  F00B    	movff	plusw1,btemp+10
  9458  019D3E  0EF6               	movlw	-10
  9459  019D40  006F FF8C  F00C    	movff	plusw1,btemp+11
  9460                           
  9461                           ;stkvar	_f @ sp[(-8)+0]
  9462  019D46  0EF9               	movlw	-7
  9463  019D48  0060  F033  FFE3   	movff	btemp+11,plusw1
  9464  019D4E  0EF8               	movlw	-8
  9465  019D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9466                           
  9467                           ;stkvar	_f @ sp[(-8)+0]
  9468  019D56  0EFA               	movlw	250
  9469  019D58  24E1               	addwf	fsr1l,w,c
  9470  019D5A  6ED9               	movwf	fsr2l,c
  9471  019D5C  0EFF               	movlw	255
  9472  019D5E  20E2               	addwfc	fsr1h,w,c
  9473  019D60  6EDA               	movwf	fsr2h,c
  9474  019D62  0E00               	movlw	0
  9475  019D64  6EDE               	movwf	postinc2,c
  9476  019D66  0E00               	movlw	0
  9477  019D68  6EDD               	movwf	postdec2,c
  9478                           
  9479                           ;stkvar	_f @ sp[(-8)+0]
  9480  019D6A  0EFC               	movlw	252
  9481  019D6C  24E1               	addwf	fsr1l,w,c
  9482  019D6E  6ED9               	movwf	fsr2l,c
  9483  019D70  0EFF               	movlw	255
  9484  019D72  20E2               	addwfc	fsr1h,w,c
  9485  019D74  6EDA               	movwf	fsr2h,c
  9486  019D76  0E00               	movlw	0
  9487  019D78  6EDE               	movwf	postinc2,c
  9488  019D7A  0E00               	movlw	0
  9489  019D7C  6EDD               	movwf	postdec2,c
  9490                           
  9491                           ;stkvar	_ap @ sp[(-8)+6]
  9492  019D7E  0EFE               	movlw	254
  9493  019D80  24E1               	addwf	fsr1l,w,c
  9494  019D82  6E01               	movwf	btemp^0,c
  9495  019D84  0EFF               	movlw	255
  9496  019D86  20E2               	addwfc	fsr1h,w,c
  9497  019D88  6E02               	movwf	(btemp+1)^0,c
  9498  019D8A  0060  F007  FFE6   	movff	btemp,postinc1
  9499  019D90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9500                           
  9501                           ;stkvar	_fmt @ sp[(-10)+-5]
  9502  019D96  0EF1               	movlw	-15
  9503  019D98  006F FF8F FFE6     	movff	plusw1,postinc1
  9504  019D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9505                           
  9506                           ;stkvar	_f @ sp[(-12)+0]
  9507  019DA4  0EF4               	movlw	244
  9508  019DA6  24E1               	addwf	fsr1l,w,c
  9509  019DA8  6E01               	movwf	btemp^0,c
  9510  019DAA  0EFF               	movlw	255
  9511  019DAC  20E2               	addwfc	fsr1h,w,c
  9512  019DAE  6E02               	movwf	(btemp+1)^0,c
  9513  019DB0  0060  F007  FFE6   	movff	btemp,postinc1
  9514  019DB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9515  019DBC  EC42  F0D3         	call	_vfprintf	;wreg free
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;stkvar	_f @ sp[(-8)+0]
  9519  019DC0  0EFA               	movlw	250
  9520  019DC2  24E1               	addwf	fsr1l,w,c
  9521  019DC4  6ED9               	movwf	fsr2l,c
  9522  019DC6  0EFF               	movlw	255
  9523  019DC8  20E2               	addwfc	fsr1h,w,c
  9524  019DCA  6EDA               	movwf	fsr2h,c
  9525  019DCC  006F FF78  F00B    	movff	postinc2,btemp+10
  9526  019DD2  006F FF74  F00C    	movff	postdec2,btemp+11
  9527                           
  9528                           ;stkvar	_s @ sp[(-8)+-3]
  9529  019DD8  0EF5               	movlw	-11
  9530  019DDA  006F FF8C  F009    	movff	plusw1,btemp+8
  9531  019DE0  0EF6               	movlw	-10
  9532  019DE2  006F FF8C  F00A    	movff	plusw1,btemp+9
  9533  019DE8  500B               	movf	(btemp+10)^0,w,c
  9534  019DEA  2409               	addwf	(btemp+8)^0,w,c
  9535  019DEC  6ED9               	movwf	fsr2l,c
  9536  019DEE  500C               	movf	(btemp+11)^0,w,c
  9537  019DF0  200A               	addwfc	(btemp+9)^0,w,c
  9538  019DF2  6EDA               	movwf	fsr2h,c
  9539  019DF4  0E00               	movlw	0
  9540  019DF6  6EDF               	movwf	indf2,c
  9541                           
  9542                           ; BSR set to: 0
  9543                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9544  019DF8  0EF8               	movlw	248
  9545  019DFA  26E1               	addwf	fsr1l,f,c
  9546  019DFC  0EFF               	movlw	255
  9547  019DFE  22E2               	addwfc	fsr1h,f,c
  9548  019E00  52E5               	movf	postdec1,f,c
  9549  019E02  50E7               	movf	indf1,w,c
  9550  019E04  5EE1               	subwf	fsr1l,f,c
  9551  019E06  0E00               	movlw	0
  9552  019E08  5AE2               	subwfb	fsr1h,f,c
  9553  019E0A  0012               	return		;funcret
  9554  019E0C                     __end_of_sprintf:
  9555                           	opt callstack 0
  9556                           
  9557 ;; *************** function _get_vterm_ptr *****************
  9558 ;; Defined at:
  9559 ;;		line 116 in file "mconfig.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  line            1  [STACK] const unsigned char 
  9562 ;;  vterm           1  [STACK] const unsigned char 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  2  [STACK] PTR unsigned char 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:   15
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_main
  9585 ;;		_check_help
  9586 ;;		_vterm_dump
  9587 ;; This function uses a reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text31
  9591  01B974                     __ptext31:
  9592                           	opt callstack 0
  9593  01B974                     _get_vterm_ptr:
  9594                           	opt callstack 15
  9595                           
  9596                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9597                           ;stkvar	_vterm @ sp[(0)+-2]
  9598                           
  9599                           ; BSR set to: 0
  9600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9601                           ;incstack = 0
  9602  01B974  0EFE               	movlw	-2
  9603  01B976  50E3               	movf	plusw1,w,c
  9604  01B978  0B03               	andlw	3
  9605  01B97A  0D78               	mullw	120
  9606  01B97C  0E2A               	movlw	low _D
  9607  01B97E  6E01               	movwf	btemp^0,c
  9608  01B980  0E08               	movlw	high _D
  9609  01B982  6E02               	movwf	(btemp+1)^0,c
  9610  01B984  50F3               	movf	243,w,c
  9611  01B986  2601               	addwf	btemp^0,f,c
  9612  01B988  50F4               	movf	244,w,c
  9613  01B98A  2202               	addwfc	(btemp+1)^0,f,c
  9614                           
  9615                           ;stkvar	_line @ sp[(0)+-1]
  9616  01B98C  0EFF               	movlw	-1
  9617  01B98E  50E3               	movf	plusw1,w,c
  9618  01B990  0B03               	andlw	3
  9619  01B992  0D28               	mullw	40
  9620  01B994  50F3               	movf	243,w,c
  9621  01B996  2601               	addwf	btemp^0,f,c
  9622  01B998  50F4               	movf	244,w,c
  9623  01B99A  2202               	addwfc	(btemp+1)^0,f,c
  9624                           
  9625                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9626  01B99C  52E5               	movf	postdec1,f,c
  9627  01B99E  52E5               	movf	postdec1,f,c
  9628  01B9A0  0012               	return		;funcret
  9629  01B9A2                     __end_of_get_vterm_ptr:
  9630                           	opt callstack 0
  9631                           
  9632 ;; *************** function _WaitMs *****************
  9633 ;; Defined at:
  9634 ;;		line 32 in file "timers.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  numMilliseco    2  [STACK] const unsigned short 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1  [STACK] void 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/1
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:   16
  9655 ;; This function calls:
  9656 ;;		_StartTimer
  9657 ;;		_TimerDone
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;;		_vterm_dump
  9661 ;; This function uses a reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text32
  9665  01B7E0                     __ptext32:
  9666                           	opt callstack 0
  9667  01B7E0                     _WaitMs:
  9668                           	opt callstack 12
  9669                           
  9670                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9671                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9672                           
  9673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9674                           ;incstack = 0
  9675  01B7E0  0EFE               	movlw	-2
  9676  01B7E2  006F FF8F FFE6     	movff	plusw1,postinc1
  9677  01B7E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9678  01B7EE  0E00               	movlw	0
  9679  01B7F0  6EE6               	movwf	postinc1,c
  9680  01B7F2  ECFB  F0DA         	call	_StartTimer	;wreg free
  9681                           
  9682                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9683  01B7F6  D005               	goto	l9821
  9684  01B7F8                     l1606:
  9685                           
  9686                           ;timers.c: 36:   __nop();
  9687  01B7F8  F000               	nop	
  9688                           
  9689                           ;timers.c: 37:   __nop();
  9690  01B7FA  F000               	nop	
  9691                           
  9692                           ;timers.c: 38:   __nop();
  9693  01B7FC  F000               	nop	
  9694                           
  9695                           ;timers.c: 39:   __nop();
  9696  01B7FE  F000               	nop	
  9697  01B800  0004               	clrwdt		;# 
  9698  01B802                     l9821:
  9699                           
  9700                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9701  01B802  0E00               	movlw	0
  9702  01B804  6EE6               	movwf	postinc1,c
  9703  01B806  EC65  F0DD         	call	_TimerDone	;wreg free
  9704  01B80A  5001               	movf	btemp^0,w,c
  9705  01B80C  B4D8               	btfsc	status,2,c
  9706  01B80E  D7F4               	goto	l1606
  9707                           
  9708                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9709  01B810  52E5               	movf	postdec1,f,c
  9710  01B812  52E5               	movf	postdec1,f,c
  9711  01B814  0012               	return		;funcret
  9712  01B816                     __end_of_WaitMs:
  9713                           	opt callstack 0
  9714                           
  9715 ;; *************** function _update_lcd *****************
  9716 ;; Defined at:
  9717 ;;		line 85 in file "mconfig.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  vterm           1  [STACK] unsigned char 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1  [STACK] unsigned char 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;Total ram usage:        0 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:   26
  9738 ;; This function calls:
  9739 ;;		_eaDogM_WriteStringAtPos
  9740 ;;		_wait_lcd_done
  9741 ;; This function is called by:
  9742 ;;		_main
  9743 ;;		_check_help
  9744 ;; This function uses a reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text33
  9748  019BF2                     __ptext33:
  9749                           	opt callstack 0
  9750  019BF2                     _update_lcd:
  9751                           	opt callstack 4
  9752                           
  9753                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9754                           ;stkvar	_vterm @ sp[(0)+-1]
  9755                           
  9756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9757                           ;incstack = 0
  9758  019BF2  0EFF               	movlw	-1
  9759  019BF4  006F FF8C  F001    	movff	plusw1,btemp
  9760  019BFA  0E03               	movlw	3
  9761  019BFC  1601               	andwf	btemp^0,f,c
  9762  019BFE  0EFF               	movlw	-1
  9763  019C00  0060  F007  FFE3   	movff	btemp,plusw1
  9764                           
  9765                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9766  019C06  EE22  F20A         	lfsr	2,_D+480
  9767  019C0A  A0DF               	btfss	indf2,0,c
  9768  019C0C  D004               	goto	l12629
  9769                           
  9770                           ;stkvar	_vterm @ sp[(0)+-1]
  9771  019C0E  0EFF               	movlw	-1
  9772  019C10  50E3               	movf	plusw1,w,c
  9773  019C12  B4D8               	btfsc	status,2,c
  9774  019C14  D074               	goto	l1682
  9775  019C16                     l12629:
  9776                           
  9777                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9778                           ;stkvar	_vterm @ sp[(0)+-1]
  9779  019C16  0EFF               	movlw	-1
  9780  019C18  50E3               	movf	plusw1,w,c
  9781  019C1A  0D78               	mullw	120
  9782  019C1C  0E3A               	movlw	low (_D+16)
  9783  019C1E  24F3               	addwf	243,w,c
  9784  019C20  6ED9               	movwf	fsr2l,c
  9785  019C22  0E08               	movlw	high (_D+16)
  9786  019C24  20F4               	addwfc	prodh,w,c
  9787  019C26  6EDA               	movwf	fsr2h,c
  9788  019C28  0E00               	movlw	0
  9789  019C2A  6EDF               	movwf	indf2,c
  9790                           
  9791                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9792                           ;stkvar	_vterm @ sp[(0)+-1]
  9793  019C2C  0EFF               	movlw	-1
  9794  019C2E  50E3               	movf	plusw1,w,c
  9795  019C30  0D78               	mullw	120
  9796  019C32  0E62               	movlw	low (_D+56)
  9797  019C34  24F3               	addwf	243,w,c
  9798  019C36  6ED9               	movwf	fsr2l,c
  9799  019C38  0E08               	movlw	high (_D+56)
  9800  019C3A  20F4               	addwfc	prodh,w,c
  9801  019C3C  6EDA               	movwf	fsr2h,c
  9802  019C3E  0E00               	movlw	0
  9803  019C40  6EDF               	movwf	indf2,c
  9804                           
  9805                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9806                           ;stkvar	_vterm @ sp[(0)+-1]
  9807  019C42  0EFF               	movlw	-1
  9808  019C44  50E3               	movf	plusw1,w,c
  9809  019C46  0D78               	mullw	120
  9810  019C48  0E8A               	movlw	low (_D+96)
  9811  019C4A  24F3               	addwf	243,w,c
  9812  019C4C  6ED9               	movwf	fsr2l,c
  9813  019C4E  0E08               	movlw	high (_D+96)
  9814  019C50  20F4               	addwfc	prodh,w,c
  9815  019C52  6EDA               	movwf	fsr2h,c
  9816  019C54  0E00               	movlw	0
  9817  019C56  6EDF               	movwf	indf2,c
  9818                           
  9819                           ;mconfig.c: 95:  wait_lcd_done();
  9820  019C58  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9824                           ;stkvar	_vterm @ sp[(0)+-1]
  9825  019C5C  0EFF               	movlw	-1
  9826  019C5E  50E3               	movf	plusw1,w,c
  9827  019C60  0D78               	mullw	120
  9828  019C62  0E2A               	movlw	low _D
  9829  019C64  6E0B               	movwf	(btemp+10)^0,c
  9830  019C66  0E08               	movlw	high _D
  9831  019C68  6E0C               	movwf	(btemp+11)^0,c
  9832  019C6A  50F3               	movf	243,w,c
  9833  019C6C  260B               	addwf	(btemp+10)^0,f,c
  9834  019C6E  50F4               	movf	244,w,c
  9835  019C70  220C               	addwfc	(btemp+11)^0,f,c
  9836  019C72  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9837  019C78  0060  F033  FFE6   	movff	btemp+11,postinc1
  9838  019C7E  0E00               	movlw	0
  9839  019C80  6EE6               	movwf	postinc1,c
  9840  019C82  0E00               	movlw	0
  9841  019C84  6EE6               	movwf	postinc1,c
  9842  019C86  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9843                           
  9844                           ; BSR set to: 59
  9845                           ;mconfig.c: 97:  wait_lcd_done();
  9846  019C8A  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9850                           ;stkvar	_vterm @ sp[(0)+-1]
  9851  019C8E  0EFF               	movlw	-1
  9852  019C90  50E3               	movf	plusw1,w,c
  9853  019C92  0D78               	mullw	120
  9854  019C94  0E2A               	movlw	low _D
  9855  019C96  6E0B               	movwf	(btemp+10)^0,c
  9856  019C98  0E08               	movlw	high _D
  9857  019C9A  6E0C               	movwf	(btemp+11)^0,c
  9858  019C9C  0E28               	movlw	40
  9859  019C9E  260B               	addwf	(btemp+10)^0,f,c
  9860  019CA0  0E00               	movlw	0
  9861  019CA2  220C               	addwfc	(btemp+11)^0,f,c
  9862  019CA4  50F3               	movf	243,w,c
  9863  019CA6  260B               	addwf	(btemp+10)^0,f,c
  9864  019CA8  50F4               	movf	244,w,c
  9865  019CAA  220C               	addwfc	(btemp+11)^0,f,c
  9866  019CAC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9867  019CB2  0060  F033  FFE6   	movff	btemp+11,postinc1
  9868  019CB8  0E00               	movlw	0
  9869  019CBA  6EE6               	movwf	postinc1,c
  9870  019CBC  0E01               	movlw	1
  9871  019CBE  6EE6               	movwf	postinc1,c
  9872  019CC0  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9873                           
  9874                           ; BSR set to: 59
  9875                           ;mconfig.c: 99:  wait_lcd_done();
  9876  019CC4  EC68  F0DF         	call	_wait_lcd_done	;wreg free
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9880                           ;stkvar	_vterm @ sp[(0)+-1]
  9881  019CC8  0EFF               	movlw	-1
  9882  019CCA  50E3               	movf	plusw1,w,c
  9883  019CCC  0D78               	mullw	120
  9884  019CCE  0E2A               	movlw	low _D
  9885  019CD0  6E0B               	movwf	(btemp+10)^0,c
  9886  019CD2  0E08               	movlw	high _D
  9887  019CD4  6E0C               	movwf	(btemp+11)^0,c
  9888  019CD6  0E50               	movlw	80
  9889  019CD8  260B               	addwf	(btemp+10)^0,f,c
  9890  019CDA  0E00               	movlw	0
  9891  019CDC  220C               	addwfc	(btemp+11)^0,f,c
  9892  019CDE  50F3               	movf	243,w,c
  9893  019CE0  260B               	addwf	(btemp+10)^0,f,c
  9894  019CE2  50F4               	movf	244,w,c
  9895  019CE4  220C               	addwfc	(btemp+11)^0,f,c
  9896  019CE6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9897  019CEC  0060  F033  FFE6   	movff	btemp+11,postinc1
  9898  019CF2  0E00               	movlw	0
  9899  019CF4  6EE6               	movwf	postinc1,c
  9900  019CF6  0E02               	movlw	2
  9901  019CF8  6EE6               	movwf	postinc1,c
  9902  019CFA  EC0B  F0DC         	call	_eaDogM_WriteStringAtPos	;wreg free
  9903  019CFE                     l1682:
  9904                           
  9905                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9906  019CFE  52E5               	movf	postdec1,f,c
  9907  019D00  0012               	return		;funcret
  9908  019D02                     __end_of_update_lcd:
  9909                           	opt callstack 0
  9910                           
  9911 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9912 ;; Defined at:
  9913 ;;		line 278 in file "eadog.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  r               1  [STACK] const unsigned char 
  9916 ;;  c               1  [STACK] const unsigned char 
  9917 ;;  strPtr          2  [STACK] PTR unsigned char 
  9918 ;;		 -> D.lcd(480), D(482), V(191), 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1  [STACK] void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9925 ;; Tracked objects:
  9926 ;;		On entry : 3F/0
  9927 ;;		On exit  : 3F/3B
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;Total ram usage:        0 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:   25
  9937 ;; This function calls:
  9938 ;;		_eaDogM_WriteString
  9939 ;;		_send_lcd_cmd_dma
  9940 ;; This function is called by:
  9941 ;;		_update_lcd
  9942 ;;		_vterm_dump
  9943 ;; This function uses a reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text34
  9947  01B816                     __ptext34:
  9948                           	opt callstack 0
  9949  01B816                     _eaDogM_WriteStringAtPos:
  9950                           	opt callstack 4
  9951                           
  9952                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9953                           ;stkvar	_c @ sp[(0)+-2]
  9954                           
  9955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9956                           ;incstack = 0
  9957  01B816  0EFE               	movlw	-2
  9958  01B818  006F FF8C  F00C    	movff	plusw1,btemp+11
  9959                           
  9960                           ;stkvar	_r @ sp[(0)+-1]
  9961  01B81E  0EFF               	movlw	-1
  9962  01B820  50E3               	movf	plusw1,w,c
  9963  01B822  0D10               	mullw	16
  9964  01B824  50F3               	movf	243,w,c
  9965  01B826  240C               	addwf	(btemp+11)^0,w,c
  9966  01B828  0F80               	addlw	128
  9967  01B82A  6EE6               	movwf	postinc1,c
  9968  01B82C  EC1B  F0D9         	call	_send_lcd_cmd_dma	;wreg free
  9969                           
  9970                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9971                           ;stkvar	_strPtr @ sp[(0)+-4]
  9972  01B830  0EFC               	movlw	-4
  9973  01B832  006F FF8F FFE6     	movff	plusw1,postinc1
  9974  01B838  006F FF8F FFE6     	movff	plusw1,postinc1
  9975  01B83E  ECED  F0D3         	call	_eaDogM_WriteString	;wreg free
  9976                           
  9977                           ; BSR set to: 59
  9978                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9979  01B842  52E5               	movf	postdec1,f,c
  9980  01B844  52E5               	movf	postdec1,f,c
  9981  01B846  52E5               	movf	postdec1,f,c
  9982  01B848  52E5               	movf	postdec1,f,c
  9983  01B84A  0012               	return		;funcret
  9984  01B84C                     __end_of_eaDogM_WriteStringAtPos:
  9985                           	opt callstack 0
  9986                           
  9987 ;; *************** function _send_lcd_cmd_dma *****************
  9988 ;; Defined at:
  9989 ;;		line 220 in file "eadog.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  strPtr          1  [STACK] unsigned char 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1  [STACK] void 
  9996 ;; Registers used:
  9997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/3D
 10000 ;;		On exit  : 3F/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:   24
 10010 ;; This function calls:
 10011 ;;		_printf
 10012 ;;		_ringBufS_flush
 10013 ;;		_start_lcd
 10014 ;;		_wait_lcd_done
 10015 ;;		_wait_lcd_set
 10016 ;; This function is called by:
 10017 ;;		_eaDogM_WriteCommand
 10018 ;;		_eaDogM_WriteStringAtPos
 10019 ;; This function uses a reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text35
 10023  01B236                     __ptext35:
 10024                           	opt callstack 0
 10025  01B236                     _send_lcd_cmd_dma:
 10026                           	opt callstack 4
 10027                           
 10028                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
 10029                           
 10030                           ; BSR set to: 59
 10031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10032                           ;incstack = 0
 10033  01B236  EC5C  F0E0         	call	_wait_lcd_set	;wreg free
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
 10037  01B23A  0E00               	movlw	0
 10038  01B23C  6EE6               	movwf	postinc1,c
 10039  01B23E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10040  01B244  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10041  01B24A  EC27  F0D5         	call	_ringBufS_flush	;wreg free
 10042  01B24E  92BC               	bcf	188,1,c	;volatile
 10043  01B250  94BC               	bcf	188,2,c	;volatile
 10044                           
 10045                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
 10046  01B252  013B               	movlb	59	; () banked
 10047  01B254  9FFC               	bcf	252,7,b	;volatile
 10048                           
 10049                           ; BSR set to: 59
 10050                           ;eadog.c: 229:  DMA1SSZ = 1;
 10051  01B256  0E00               	movlw	0
 10052  01B258  6FF8               	movwf	248,b	;volatile
 10053  01B25A  0E01               	movlw	1
 10054  01B25C  6FF7               	movwf	247,b	;volatile
 10055                           
 10056                           ; BSR set to: 59
 10057                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
 10058  01B25E  8FFC               	bsf	252,7,b	;volatile
 10059                           
 10060                           ; BSR set to: 59
 10061                           ;eadog.c: 231:  printf("%c", strPtr);
 10062                           ;stkvar	_strPtr @ sp[(0)+-1]
 10063  01B260  0EFF               	movlw	-1
 10064  01B262  50E3               	movf	plusw1,w,c
 10065  01B264  6EE6               	movwf	postinc1,c
 10066  01B266  0E00               	movlw	0
 10067  01B268  6EE6               	movwf	postinc1,c
 10068  01B26A  0EF9               	movlw	low STR_44
 10069  01B26C  6EE6               	movwf	postinc1,c
 10070  01B26E  0EFF               	movlw	high STR_44
 10071  01B270  6EE6               	movwf	postinc1,c
 10072  01B272  0E04               	movlw	4
 10073  01B274  6EE6               	movwf	postinc1,c
 10074  01B276  EC02  F0D8         	call	_printf	;wreg free
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;eadog.c: 232:  start_lcd();
 10078  01B27A  EC5F  F0E0         	call	_start_lcd	;wreg free
 10079                           
 10080                           ; BSR set to: 59
 10081                           ;eadog.c: 233:  wait_lcd_done();
 10082  01B27E  EC68  F0DF         	call	_wait_lcd_done	;wreg free
 10083                           
 10084                           ; BSR set to: 0
 10085  01B282  82BC               	bsf	188,1,c	;volatile
 10086                           
 10087                           ; BSR set to: 0
 10088                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10089  01B284  52E5               	movf	postdec1,f,c
 10090  01B286  0012               	return		;funcret
 10091  01B288                     __end_of_send_lcd_cmd_dma:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function _wait_lcd_done *****************
 10095 ;; Defined at:
 10096 ;;		line 156 in file "eadog.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1  [STACK] void 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 3F/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   16
 10117 ;; This function calls:
 10118 ;;		_wdtdelay
 10119 ;; This function is called by:
 10120 ;;		_send_lcd_cmd_dma
 10121 ;;		_update_lcd
 10122 ;;		_vterm_dump
 10123 ;; This function uses a reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text36
 10127  01BED0                     __ptext36:
 10128                           	opt callstack 0
 10129  01BED0                     _wait_lcd_done:
 10130                           	opt callstack 13
 10131                           
 10132                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10133                           
 10134                           ; BSR set to: 0
 10135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10136                           ;incstack = 0
 10137  01BED0  0100               	movlb	0	; () banked
 10138  01BED2  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10139  01BED4  D7FD               	goto	_wait_lcd_done
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;eadog.c: 159:  wdtdelay(50);
 10143  01BED6  0E32               	movlw	50
 10144  01BED8  6EE6               	movwf	postinc1,c
 10145  01BEDA  0E00               	movlw	0
 10146  01BEDC  6EE6               	movwf	postinc1,c
 10147  01BEDE  0E00               	movlw	0
 10148  01BEE0  6EE6               	movwf	postinc1,c
 10149  01BEE2  0E00               	movlw	0
 10150  01BEE4  6EE6               	movwf	postinc1,c
 10151  01BEE6  ECC1  F0D8         	call	_wdtdelay	;wreg free
 10152                           
 10153                           ; BSR set to: 0
 10154                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10155  01BEEA  0012               	return		;funcret
 10156  01BEEC                     __end_of_wait_lcd_done:
 10157                           	opt callstack 0
 10158                           
 10159 ;; *************** function _wdtdelay *****************
 10160 ;; Defined at:
 10161 ;;		line 23 in file "eadog.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  delay           4  [STACK] const unsigned long 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1  [STACK] void 
 10168 ;; Registers used:
 10169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 3F/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;Total ram usage:        0 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:   15
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_init_display
 10186 ;;		_send_lcd_cmd
 10187 ;;		_send_lcd_cmd_long
 10188 ;;		_wait_lcd_done
 10189 ;; This function uses a reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text37
 10193  01B182                     __ptext37:
 10194                           	opt callstack 0
 10195  01B182                     _wdtdelay:
 10196                           	opt callstack 13
 10197                           
 10198                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10199                           
 10200                           ; BSR set to: 0
 10201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10202                           ;incstack = 0
 10203  01B182  0100               	movlb	0	; () banked
 10204  01B184  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10205  01B186  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10206  01B188  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10207  01B18A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10208  01B18C                     l1447:
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;eadog.c: 28:   __nop();
 10212  01B18C  F000               	nop	
 10213  01B18E  0004               	clrwdt		;# 
 10214                           
 10215                           ;eadog.c: 30:  };
 10216  01B190  0E01               	movlw	1
 10217  01B192  0100               	movlb	0	; () banked
 10218  01B194  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10219  01B196  0E00               	movlw	0
 10220  01B198  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10221  01B19A  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10222  01B19C  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;stkvar	_delay @ sp[(0)+-4]
 10226  01B19E  0EFC               	movlw	-4
 10227  01B1A0  006F FF8C  F001    	movff	plusw1,btemp
 10228  01B1A6  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10229  01B1A8  5C01               	subwf	btemp^0,w,c
 10230  01B1AA  0EFD               	movlw	-3
 10231  01B1AC  006F FF8C  F001    	movff	plusw1,btemp
 10232  01B1B2  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10233  01B1B4  5801               	subwfb	btemp^0,w,c
 10234  01B1B6  0EFE               	movlw	-2
 10235  01B1B8  006F FF8C  F001    	movff	plusw1,btemp
 10236  01B1BE  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10237  01B1C0  5801               	subwfb	btemp^0,w,c
 10238  01B1C2  0EFF               	movlw	-1
 10239  01B1C4  006F FF8C  F001    	movff	plusw1,btemp
 10240  01B1CA  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10241  01B1CC  5801               	subwfb	btemp^0,w,c
 10242  01B1CE  B0D8               	btfsc	status,0,c
 10243  01B1D0  D7DD               	goto	l1447
 10244                           
 10245                           ; BSR set to: 0
 10246                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10247  01B1D2  52E5               	movf	postdec1,f,c
 10248  01B1D4  52E5               	movf	postdec1,f,c
 10249  01B1D6  52E5               	movf	postdec1,f,c
 10250  01B1D8  52E5               	movf	postdec1,f,c
 10251  01B1DA  0012               	return		;funcret
 10252  01B1DC                     __end_of_wdtdelay:
 10253                           	opt callstack 0
 10254                           
 10255 ;; *************** function _eaDogM_WriteString *****************
 10256 ;; Defined at:
 10257 ;;		line 199 in file "eadog.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  strPtr          2  [STACK] PTR unsigned char 
 10260 ;;		 -> D.lcd(480), D(482), V(191), 
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;		None
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1  [STACK] void 
 10265 ;; Registers used:
 10266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10267 ;; Tracked objects:
 10268 ;;		On entry : 3F/0
 10269 ;;		On exit  : 3F/3B
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10276 ;;Total ram usage:        0 bytes
 10277 ;; Hardware stack levels used:    1
 10278 ;; Hardware stack levels required when called:   24
 10279 ;; This function calls:
 10280 ;;		_printf
 10281 ;;		_ringBufS_flush
 10282 ;;		_start_lcd
 10283 ;;		_strlen
 10284 ;;		_wait_lcd_set
 10285 ;; This function is called by:
 10286 ;;		_eaDogM_WriteStringAtPos
 10287 ;; This function uses a reentrant model
 10288 ;;
 10289                           
 10290                           	psect	text38
 10291  01A7DA                     __ptext38:
 10292                           	opt callstack 0
 10293  01A7DA                     _eaDogM_WriteString:
 10294                           	opt callstack 4
 10295                           
 10296                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10297                           
 10298                           ; BSR set to: 0
 10299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10300                           ;incstack = 0
 10301  01A7DA  EC5C  F0E0         	call	_wait_lcd_set	;wreg free
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10305  01A7DE  0E00               	movlw	0
 10306  01A7E0  6EE6               	movwf	postinc1,c
 10307  01A7E2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10308  01A7E8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10309  01A7EE  EC27  F0D5         	call	_ringBufS_flush	;wreg free
 10310  01A7F2  94BC               	bcf	188,2,c	;volatile
 10311                           
 10312                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10313                           ;stkvar	_strPtr @ sp[(0)+-2]
 10314  01A7F4  0EFE               	movlw	-2
 10315  01A7F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10316  01A7FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10317  01A802  EC40  F0D4         	call	_strlen	;wreg free
 10318  01A806  5002               	movf	(btemp+1)^0,w,c
 10319  01A808  E104               	bnz	u12280
 10320  01A80A  0E41               	movlw	65
 10321  01A80C  5C01               	subwf	btemp^0,w,c
 10322  01A80E  A0D8               	btfss	status,0,c
 10323  01A810  D010               	goto	l12583
 10324  01A812                     u12280:
 10325                           
 10326                           ;stkvar	_strPtr @ sp[(0)+-2]
 10327  01A812  0EFE               	movlw	-2
 10328  01A814  006F FF8C  F00B    	movff	plusw1,btemp+10
 10329  01A81A  0EFF               	movlw	-1
 10330  01A81C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10331  01A822  0E40               	movlw	64
 10332  01A824  240B               	addwf	(btemp+10)^0,w,c
 10333  01A826  6ED9               	movwf	fsr2l,c
 10334  01A828  0E00               	movlw	0
 10335  01A82A  200C               	addwfc	(btemp+11)^0,w,c
 10336  01A82C  6EDA               	movwf	fsr2h,c
 10337  01A82E  0E00               	movlw	0
 10338  01A830  6EDF               	movwf	indf2,c
 10339  01A832                     l12583:
 10340                           
 10341                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10342  01A832  013B               	movlb	59	; () banked
 10343  01A834  9FFC               	bcf	252,7,b	;volatile
 10344                           
 10345                           ; BSR set to: 59
 10346                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10347                           ;stkvar	_strPtr @ sp[(0)+-2]
 10348  01A836  0EFE               	movlw	-2
 10349  01A838  006F FF8F FFE6     	movff	plusw1,postinc1
 10350  01A83E  006F FF8F FFE6     	movff	plusw1,postinc1
 10351  01A844  EC40  F0D4         	call	_strlen	;wreg free
 10352  01A848  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10353  01A84E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10354                           
 10355                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10356  01A854  013B               	movlb	59	; () banked
 10357  01A856  8FFC               	bsf	252,7,b	;volatile
 10358                           
 10359                           ; BSR set to: 59
 10360                           ;eadog.c: 210:  printf("%s", strPtr);
 10361                           ;stkvar	_strPtr @ sp[(0)+-2]
 10362  01A858  0EFE               	movlw	-2
 10363  01A85A  006F FF8F FFE6     	movff	plusw1,postinc1
 10364  01A860  006F FF8F FFE6     	movff	plusw1,postinc1
 10365  01A866  0EFC               	movlw	low STR_43
 10366  01A868  6EE6               	movwf	postinc1,c
 10367  01A86A  0EFF               	movlw	high STR_43
 10368  01A86C  6EE6               	movwf	postinc1,c
 10369  01A86E  0E04               	movlw	4
 10370  01A870  6EE6               	movwf	postinc1,c
 10371  01A872  EC02  F0D8         	call	_printf	;wreg free
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;eadog.c: 211:  start_lcd();
 10375  01A876  EC5F  F0E0         	call	_start_lcd	;wreg free
 10376                           
 10377                           ; BSR set to: 59
 10378                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10379  01A87A  52E5               	movf	postdec1,f,c
 10380  01A87C  52E5               	movf	postdec1,f,c
 10381  01A87E  0012               	return		;funcret
 10382  01A880                     __end_of_eaDogM_WriteString:
 10383                           	opt callstack 0
 10384                           
 10385 ;; *************** function _wait_lcd_set *****************
 10386 ;; Defined at:
 10387 ;;		line 146 in file "eadog.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;		None
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1  [STACK] void 
 10394 ;; Registers used:
 10395 ;;		None
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/3D
 10398 ;;		On exit  : 3F/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10405 ;;Total ram usage:        0 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:   15
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		_eaDogM_WriteString
 10412 ;;		_send_lcd_cmd_dma
 10413 ;; This function uses a reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text39
 10417  01C0B8                     __ptext39:
 10418                           	opt callstack 0
 10419  01C0B8                     _wait_lcd_set:
 10420                           	opt callstack 12
 10421                           
 10422                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10423                           
 10424                           ; BSR set to: 59
 10425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10426                           ;incstack = 0
 10427  01C0B8  0100               	movlb	0	; () banked
 10428  01C0BA  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10429                           
 10430                           ; BSR set to: 0
 10431                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10432  01C0BC  0012               	return		;funcret
 10433  01C0BE                     __end_of_wait_lcd_set:
 10434                           	opt callstack 0
 10435                           
 10436 ;; *************** function _start_lcd *****************
 10437 ;; Defined at:
 10438 ;;		line 141 in file "eadog.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1  [STACK] void 
 10445 ;; Registers used:
 10446 ;;		None
 10447 ;; Tracked objects:
 10448 ;;		On entry : 3F/0
 10449 ;;		On exit  : 3F/3B
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10456 ;;Total ram usage:        0 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   15
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_eaDogM_WriteString
 10463 ;;		_send_lcd_cmd_dma
 10464 ;; This function uses a reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text40
 10468  01C0BE                     __ptext40:
 10469                           	opt callstack 0
 10470  01C0BE                     _start_lcd:
 10471                           	opt callstack 12
 10472                           
 10473                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10474                           
 10475                           ; BSR set to: 0
 10476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10477                           ;incstack = 0
 10478  01C0BE  013B               	movlb	59	; () banked
 10479  01C0C0  8DFC               	bsf	252,6,b	;volatile
 10480                           
 10481                           ; BSR set to: 59
 10482                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10483  01C0C2  0012               	return		;funcret
 10484  01C0C4                     __end_of_start_lcd:
 10485                           	opt callstack 0
 10486                           
 10487 ;; *************** function _ringBufS_flush *****************
 10488 ;; Defined at:
 10489 ;;		line 76 in file "ringbufs.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10492 ;;		 -> ring_buf1(67), 
 10493 ;;  clearBuffer     1  [STACK] const char 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1  [STACK] void 
 10498 ;; Registers used:
 10499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10500 ;; Tracked objects:
 10501 ;;		On entry : 3F/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10509 ;;Total ram usage:        0 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:   16
 10512 ;; This function calls:
 10513 ;;		_memset
 10514 ;; This function is called by:
 10515 ;;		_eaDogM_WriteString
 10516 ;;		_send_lcd_cmd_dma
 10517 ;; This function uses a reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text41
 10521  01AA4E                     __ptext41:
 10522                           	opt callstack 0
 10523  01AA4E                     _ringBufS_flush:
 10524                           	opt callstack 11
 10525                           
 10526                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10527                           ;stkvar	__this @ sp[(0)+-2]
 10528                           
 10529                           ; BSR set to: 59
 10530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10531                           ;incstack = 0
 10532  01AA4E  0EFE               	movlw	-2
 10533  01AA50  006F FF8C  F00B    	movff	plusw1,btemp+10
 10534  01AA56  0EFF               	movlw	-1
 10535  01AA58  006F FF8C  F00C    	movff	plusw1,btemp+11
 10536  01AA5E  0E42               	movlw	66
 10537  01AA60  240B               	addwf	(btemp+10)^0,w,c
 10538  01AA62  6ED9               	movwf	fsr2l,c
 10539  01AA64  0E00               	movlw	0
 10540  01AA66  200C               	addwfc	(btemp+11)^0,w,c
 10541  01AA68  6EDA               	movwf	fsr2h,c
 10542  01AA6A  0E00               	movlw	0
 10543  01AA6C  6EDF               	movwf	indf2,c
 10544                           
 10545                           ;ringbufs.c: 79:  _this->head = 0;
 10546                           ;stkvar	__this @ sp[(0)+-2]
 10547  01AA6E  0EFE               	movlw	-2
 10548  01AA70  006F FF8C  F00B    	movff	plusw1,btemp+10
 10549  01AA76  0EFF               	movlw	-1
 10550  01AA78  006F FF8C  F00C    	movff	plusw1,btemp+11
 10551  01AA7E  0E40               	movlw	64
 10552  01AA80  240B               	addwf	(btemp+10)^0,w,c
 10553  01AA82  6ED9               	movwf	fsr2l,c
 10554  01AA84  0E00               	movlw	0
 10555  01AA86  200C               	addwfc	(btemp+11)^0,w,c
 10556  01AA88  6EDA               	movwf	fsr2h,c
 10557  01AA8A  0E00               	movlw	0
 10558  01AA8C  6EDF               	movwf	indf2,c
 10559                           
 10560                           ;ringbufs.c: 80:  _this->tail = 0;
 10561                           ;stkvar	__this @ sp[(0)+-2]
 10562  01AA8E  0EFE               	movlw	-2
 10563  01AA90  006F FF8C  F00B    	movff	plusw1,btemp+10
 10564  01AA96  0EFF               	movlw	-1
 10565  01AA98  006F FF8C  F00C    	movff	plusw1,btemp+11
 10566  01AA9E  0E41               	movlw	65
 10567  01AAA0  240B               	addwf	(btemp+10)^0,w,c
 10568  01AAA2  6ED9               	movwf	fsr2l,c
 10569  01AAA4  0E00               	movlw	0
 10570  01AAA6  200C               	addwfc	(btemp+11)^0,w,c
 10571  01AAA8  6EDA               	movwf	fsr2h,c
 10572  01AAAA  0E00               	movlw	0
 10573  01AAAC  6EDF               	movwf	indf2,c
 10574                           
 10575                           ;ringbufs.c: 81:  if (clearBuffer) {
 10576                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10577  01AAAE  0EFD               	movlw	-3
 10578  01AAB0  50E3               	movf	plusw1,w,c
 10579  01AAB2  B4D8               	btfsc	status,2,c
 10580  01AAB4  D011               	goto	l1591
 10581                           
 10582                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10583  01AAB6  0E40               	movlw	64
 10584  01AAB8  6EE6               	movwf	postinc1,c
 10585  01AABA  0E00               	movlw	0
 10586  01AABC  6EE6               	movwf	postinc1,c
 10587  01AABE  0E00               	movlw	0
 10588  01AAC0  6EE6               	movwf	postinc1,c
 10589  01AAC2  0E00               	movlw	0
 10590  01AAC4  6EE6               	movwf	postinc1,c
 10591                           
 10592                           ;stkvar	__this @ sp[(-4)+-2]
 10593  01AAC6  0EFA               	movlw	-6
 10594  01AAC8  006F FF8F FFE6     	movff	plusw1,postinc1
 10595  01AACE  006F FF8F FFE6     	movff	plusw1,postinc1
 10596  01AAD4  EC16  F0B7         	call	_memset	;wreg free
 10597  01AAD8                     l1591:
 10598                           
 10599                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10600  01AAD8  52E5               	movf	postdec1,f,c
 10601  01AADA  52E5               	movf	postdec1,f,c
 10602  01AADC  52E5               	movf	postdec1,f,c
 10603  01AADE  0012               	return		;funcret
 10604  01AAE0                     __end_of_ringBufS_flush:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _memset *****************
 10608 ;; Defined at:
 10609 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  dest            2  [STACK] PTR void 
 10612 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10613 ;;  c               2  [STACK] int 
 10614 ;;  n               2  [STACK] unsigned int 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  s               2  [STACK] PTR unsigned char 
 10617 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10618 ;;  k               2  [STACK] unsigned int 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  2  [STACK] PTR void 
 10621 ;; Registers used:
 10622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10632 ;;Total ram usage:        0 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:   15
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_ringBufS_init
 10639 ;;		_ringBufS_flush
 10640 ;; This function uses a reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text42
 10644  016E2C                     __ptext42:
 10645                           	opt callstack 0
 10646  016E2C                     _memset:
 10647                           	opt callstack 0
 10648                           
 10649                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10650  016E2C  52E6               	movf	postinc1,f,c
 10651  016E2E  52E6               	movf	postinc1,f,c
 10652  016E30  52E6               	movf	postinc1,f,c
 10653  016E32  52E6               	movf	postinc1,f,c
 10654                           
 10655                           ;stkvar	_dest @ sp[(-4)+-2]
 10656                           
 10657                           ;incstack = 0
 10658  016E34  0EFA               	movlw	-6
 10659  016E36  006F FF8C  F00B    	movff	plusw1,btemp+10
 10660  016E3C  0EFB               	movlw	-5
 10661  016E3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10662                           
 10663                           ;stkvar	_s @ sp[(-4)+0]
 10664  016E44  0EFD               	movlw	-3
 10665  016E46  0060  F033  FFE3   	movff	btemp+11,plusw1
 10666  016E4C  0EFC               	movlw	-4
 10667  016E4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10668                           
 10669                           ;stkvar	_n @ sp[(-4)+-6]
 10670  016E54  0EF6               	movlw	-10
 10671  016E56  006F FF8C  F001    	movff	plusw1,btemp
 10672  016E5C  0EF7               	movlw	-9
 10673  016E5E  50E3               	movf	plusw1,w,c
 10674  016E60  1001               	iorwf	btemp^0,w,c
 10675  016E62  B4D8               	btfsc	status,2,c
 10676  016E64  D154               	goto	u10890
 10677                           
 10678                           ;stkvar	_c @ sp[(-4)+-4]
 10679                           ;stkvar	_s @ sp[(-4)+0]
 10680  016E66  0EFC               	movlw	-4
 10681  016E68  006F FF8F FFD9     	movff	plusw1,fsr2l
 10682  016E6E  0EFD               	movlw	-3
 10683  016E70  006F FF8F FFDA     	movff	plusw1,fsr2h
 10684  016E76  0EF8               	movlw	-8
 10685  016E78  006F FF8F FFDF     	movff	plusw1,indf2
 10686                           
 10687                           ;stkvar	_c @ sp[(-4)+-4]
 10688                           ;stkvar	_n @ sp[(-4)+-6]
 10689                           ;stkvar	_s @ sp[(-4)+0]
 10690  016E7E  0EFC               	movlw	-4
 10691  016E80  006F FF8C  F00B    	movff	plusw1,btemp+10
 10692  016E86  0EFD               	movlw	-3
 10693  016E88  006F FF8C  F00C    	movff	plusw1,btemp+11
 10694  016E8E  0EF6               	movlw	-10
 10695  016E90  50E3               	movf	plusw1,w,c
 10696  016E92  260B               	addwf	(btemp+10)^0,f,c
 10697  016E94  0EF7               	movlw	-9
 10698  016E96  50E3               	movf	plusw1,w,c
 10699  016E98  220C               	addwfc	(btemp+11)^0,f,c
 10700  016E9A  0EFF               	movlw	255
 10701  016E9C  240B               	addwf	(btemp+10)^0,w,c
 10702  016E9E  6ED9               	movwf	fsr2l,c
 10703  016EA0  0EFF               	movlw	255
 10704  016EA2  200C               	addwfc	(btemp+11)^0,w,c
 10705  016EA4  6EDA               	movwf	fsr2h,c
 10706  016EA6  0EF8               	movlw	-8
 10707  016EA8  006F FF8F FFDF     	movff	plusw1,indf2
 10708                           
 10709                           ;stkvar	_n @ sp[(-4)+-6]
 10710  016EAE  0EF7               	movlw	-9
 10711  016EB0  50E3               	movf	plusw1,w,c
 10712  016EB2  E108               	bnz	l11755
 10713  016EB4  0EF6               	movlw	-10
 10714  016EB6  006F FF8C  F001    	movff	plusw1,btemp
 10715  016EBC  0E03               	movlw	3
 10716  016EBE  5E01               	subwf	btemp^0,f,c
 10717  016EC0  A0D8               	btfss	status,0,c
 10718  016EC2  D125               	goto	u10890
 10719  016EC4                     l11755:
 10720                           
 10721                           ;stkvar	_c @ sp[(-4)+-4]
 10722                           ;stkvar	_s @ sp[(-4)+0]
 10723  016EC4  0EFC               	movlw	-4
 10724  016EC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10725  016ECC  0EFD               	movlw	-3
 10726  016ECE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10727  016ED4  0E01               	movlw	1
 10728  016ED6  240B               	addwf	(btemp+10)^0,w,c
 10729  016ED8  6ED9               	movwf	fsr2l,c
 10730  016EDA  0E00               	movlw	0
 10731  016EDC  200C               	addwfc	(btemp+11)^0,w,c
 10732  016EDE  6EDA               	movwf	fsr2h,c
 10733  016EE0  0EF8               	movlw	-8
 10734  016EE2  006F FF8F FFDF     	movff	plusw1,indf2
 10735                           
 10736                           ;stkvar	_c @ sp[(-4)+-4]
 10737                           ;stkvar	_s @ sp[(-4)+0]
 10738  016EE8  0EFC               	movlw	-4
 10739  016EEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10740  016EF0  0EFD               	movlw	-3
 10741  016EF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10742  016EF8  0E02               	movlw	2
 10743  016EFA  240B               	addwf	(btemp+10)^0,w,c
 10744  016EFC  6ED9               	movwf	fsr2l,c
 10745  016EFE  0E00               	movlw	0
 10746  016F00  200C               	addwfc	(btemp+11)^0,w,c
 10747  016F02  6EDA               	movwf	fsr2h,c
 10748  016F04  0EF8               	movlw	-8
 10749  016F06  006F FF8F FFDF     	movff	plusw1,indf2
 10750                           
 10751                           ;stkvar	_c @ sp[(-4)+-4]
 10752                           ;stkvar	_n @ sp[(-4)+-6]
 10753                           ;stkvar	_s @ sp[(-4)+0]
 10754  016F0C  0EFC               	movlw	-4
 10755  016F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10756  016F14  0EFD               	movlw	-3
 10757  016F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 10758  016F1C  0EF6               	movlw	-10
 10759  016F1E  50E3               	movf	plusw1,w,c
 10760  016F20  260B               	addwf	(btemp+10)^0,f,c
 10761  016F22  0EF7               	movlw	-9
 10762  016F24  50E3               	movf	plusw1,w,c
 10763  016F26  220C               	addwfc	(btemp+11)^0,f,c
 10764  016F28  0EFE               	movlw	254
 10765  016F2A  240B               	addwf	(btemp+10)^0,w,c
 10766  016F2C  6ED9               	movwf	fsr2l,c
 10767  016F2E  0EFF               	movlw	255
 10768  016F30  200C               	addwfc	(btemp+11)^0,w,c
 10769  016F32  6EDA               	movwf	fsr2h,c
 10770  016F34  0EF8               	movlw	-8
 10771  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 10772                           
 10773                           ;stkvar	_c @ sp[(-4)+-4]
 10774                           ;stkvar	_n @ sp[(-4)+-6]
 10775                           ;stkvar	_s @ sp[(-4)+0]
 10776  016F3C  0EFC               	movlw	-4
 10777  016F3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10778  016F44  0EFD               	movlw	-3
 10779  016F46  006F FF8C  F00C    	movff	plusw1,btemp+11
 10780  016F4C  0EF6               	movlw	-10
 10781  016F4E  50E3               	movf	plusw1,w,c
 10782  016F50  260B               	addwf	(btemp+10)^0,f,c
 10783  016F52  0EF7               	movlw	-9
 10784  016F54  50E3               	movf	plusw1,w,c
 10785  016F56  220C               	addwfc	(btemp+11)^0,f,c
 10786  016F58  0EFD               	movlw	253
 10787  016F5A  240B               	addwf	(btemp+10)^0,w,c
 10788  016F5C  6ED9               	movwf	fsr2l,c
 10789  016F5E  0EFF               	movlw	255
 10790  016F60  200C               	addwfc	(btemp+11)^0,w,c
 10791  016F62  6EDA               	movwf	fsr2h,c
 10792  016F64  0EF8               	movlw	-8
 10793  016F66  006F FF8F FFDF     	movff	plusw1,indf2
 10794                           
 10795                           ;stkvar	_n @ sp[(-4)+-6]
 10796  016F6C  0EF7               	movlw	-9
 10797  016F6E  50E3               	movf	plusw1,w,c
 10798  016F70  E108               	bnz	l11761
 10799  016F72  0EF6               	movlw	-10
 10800  016F74  006F FF8C  F001    	movff	plusw1,btemp
 10801  016F7A  0E07               	movlw	7
 10802  016F7C  5E01               	subwf	btemp^0,f,c
 10803  016F7E  A0D8               	btfss	status,0,c
 10804  016F80  D0C6               	goto	u10890
 10805  016F82                     l11761:
 10806                           
 10807                           ;stkvar	_c @ sp[(-4)+-4]
 10808                           ;stkvar	_s @ sp[(-4)+0]
 10809  016F82  0EFC               	movlw	-4
 10810  016F84  006F FF8C  F00B    	movff	plusw1,btemp+10
 10811  016F8A  0EFD               	movlw	-3
 10812  016F8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10813  016F92  0E03               	movlw	3
 10814  016F94  240B               	addwf	(btemp+10)^0,w,c
 10815  016F96  6ED9               	movwf	fsr2l,c
 10816  016F98  0E00               	movlw	0
 10817  016F9A  200C               	addwfc	(btemp+11)^0,w,c
 10818  016F9C  6EDA               	movwf	fsr2h,c
 10819  016F9E  0EF8               	movlw	-8
 10820  016FA0  006F FF8F FFDF     	movff	plusw1,indf2
 10821                           
 10822                           ;stkvar	_c @ sp[(-4)+-4]
 10823                           ;stkvar	_n @ sp[(-4)+-6]
 10824                           ;stkvar	_s @ sp[(-4)+0]
 10825  016FA6  0EFC               	movlw	-4
 10826  016FA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 10827  016FAE  0EFD               	movlw	-3
 10828  016FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10829  016FB6  0EF6               	movlw	-10
 10830  016FB8  50E3               	movf	plusw1,w,c
 10831  016FBA  260B               	addwf	(btemp+10)^0,f,c
 10832  016FBC  0EF7               	movlw	-9
 10833  016FBE  50E3               	movf	plusw1,w,c
 10834  016FC0  220C               	addwfc	(btemp+11)^0,f,c
 10835  016FC2  0EFC               	movlw	252
 10836  016FC4  240B               	addwf	(btemp+10)^0,w,c
 10837  016FC6  6ED9               	movwf	fsr2l,c
 10838  016FC8  0EFF               	movlw	255
 10839  016FCA  200C               	addwfc	(btemp+11)^0,w,c
 10840  016FCC  6EDA               	movwf	fsr2h,c
 10841  016FCE  0EF8               	movlw	-8
 10842  016FD0  006F FF8F FFDF     	movff	plusw1,indf2
 10843                           
 10844                           ;stkvar	_n @ sp[(-4)+-6]
 10845  016FD6  0EF7               	movlw	-9
 10846  016FD8  50E3               	movf	plusw1,w,c
 10847  016FDA  E108               	bnz	l11767
 10848  016FDC  0EF6               	movlw	-10
 10849  016FDE  006F FF8C  F001    	movff	plusw1,btemp
 10850  016FE4  0E09               	movlw	9
 10851  016FE6  5E01               	subwf	btemp^0,f,c
 10852  016FE8  A0D8               	btfss	status,0,c
 10853  016FEA  D091               	goto	u10890
 10854  016FEC                     l11767:
 10855                           
 10856                           ;stkvar	_s @ sp[(-4)+0]
 10857  016FEC  0EFC               	movlw	-4
 10858  016FEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10859  016FF4  1E0B               	comf	(btemp+10)^0,f,c
 10860  016FF6  0EFD               	movlw	-3
 10861  016FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10862  016FFE  1E0C               	comf	(btemp+11)^0,f,c
 10863  017000  2A0B               	incf	(btemp+10)^0,f,c
 10864  017002  B4D8               	btfsc	status,2,c
 10865  017004  2A0C               	incf	(btemp+11)^0,f,c
 10866  017006  0E03               	movlw	3
 10867  017008  160B               	andwf	(btemp+10)^0,f,c
 10868  01700A  0E00               	movlw	0
 10869  01700C  160C               	andwf	(btemp+11)^0,f,c
 10870                           
 10871                           ;stkvar	_k @ sp[(-4)+2]
 10872  01700E  0EFE               	movlw	-2
 10873  017010  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10874  017016  0EFF               	movlw	-1
 10875  017018  0060  F033  FFE3   	movff	btemp+11,plusw1
 10876                           
 10877                           ;stkvar	_k @ sp[(-4)+2]
 10878                           ;stkvar	_s @ sp[(-4)+0]
 10879  01701E  0EFC               	movlw	-4
 10880  017020  50E3               	movf	plusw1,w,c
 10881  017022  6E01               	movwf	btemp^0,c
 10882  017024  0EFE               	movlw	-2
 10883  017026  50E3               	movf	plusw1,w,c
 10884  017028  2601               	addwf	btemp^0,f,c
 10885  01702A  0EFC               	movlw	-4
 10886  01702C  0060  F007  FFE3   	movff	btemp,plusw1
 10887  017032  0EFD               	movlw	-3
 10888  017034  50E3               	movf	plusw1,w,c
 10889  017036  6E01               	movwf	btemp^0,c
 10890  017038  0EFF               	movlw	-1
 10891  01703A  50E3               	movf	plusw1,w,c
 10892  01703C  2201               	addwfc	btemp^0,f,c
 10893  01703E  0EFD               	movlw	-3
 10894  017040  0060  F007  FFE3   	movff	btemp,plusw1
 10895                           
 10896                           ;stkvar	_k @ sp[(-4)+2]
 10897                           ;stkvar	_n @ sp[(-4)+-6]
 10898  017046  0EF6               	movlw	-10
 10899  017048  50E3               	movf	plusw1,w,c
 10900  01704A  6E01               	movwf	btemp^0,c
 10901  01704C  0EFE               	movlw	-2
 10902  01704E  50E3               	movf	plusw1,w,c
 10903  017050  5E01               	subwf	btemp^0,f,c
 10904  017052  0EF6               	movlw	-10
 10905  017054  0060  F007  FFE3   	movff	btemp,plusw1
 10906  01705A  0EF7               	movlw	-9
 10907  01705C  50E3               	movf	plusw1,w,c
 10908  01705E  6E01               	movwf	btemp^0,c
 10909  017060  0EFF               	movlw	-1
 10910  017062  50E3               	movf	plusw1,w,c
 10911  017064  5A01               	subwfb	btemp^0,f,c
 10912  017066  0EF7               	movlw	-9
 10913  017068  0060  F007  FFE3   	movff	btemp,plusw1
 10914  01706E  0EFC               	movlw	252
 10915  017070  6E0B               	movwf	(btemp+10)^0,c
 10916  017072  0EFF               	movlw	255
 10917  017074  6E0C               	movwf	(btemp+11)^0,c
 10918                           
 10919                           ;stkvar	_n @ sp[(-4)+-6]
 10920  017076  0EF6               	movlw	-10
 10921  017078  006F FF8C  F001    	movff	plusw1,btemp
 10922  01707E  500B               	movf	(btemp+10)^0,w,c
 10923  017080  1601               	andwf	btemp^0,f,c
 10924  017082  0EF6               	movlw	-10
 10925  017084  0060  F007  FFE3   	movff	btemp,plusw1
 10926  01708A  0EF7               	movlw	-9
 10927  01708C  006F FF8C  F001    	movff	plusw1,btemp
 10928  017092  500C               	movf	(btemp+11)^0,w,c
 10929  017094  1601               	andwf	btemp^0,f,c
 10930  017096  0EF7               	movlw	-9
 10931  017098  D02E               	goto	L9
 10932  01709A                     l11775:
 10933                           
 10934                           ;stkvar	_c @ sp[(-4)+-4]
 10935                           ;stkvar	_s @ sp[(-4)+0]
 10936  01709A  0EFC               	movlw	-4
 10937  01709C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10938  0170A2  0EFD               	movlw	-3
 10939  0170A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10940  0170AA  0EF8               	movlw	-8
 10941  0170AC  006F FF8F FFDF     	movff	plusw1,indf2
 10942                           
 10943                           ;stkvar	_n @ sp[(-4)+-6]
 10944  0170B2  0EF6               	movlw	-10
 10945  0170B4  006F FF8C  F001    	movff	plusw1,btemp
 10946  0170BA  0E01               	movlw	1
 10947  0170BC  5E01               	subwf	btemp^0,f,c
 10948  0170BE  0EF6               	movlw	-10
 10949  0170C0  0060  F007  FFE3   	movff	btemp,plusw1
 10950  0170C6  0EF7               	movlw	-9
 10951  0170C8  006F FF8C  F001    	movff	plusw1,btemp
 10952  0170CE  0E00               	movlw	0
 10953  0170D0  5A01               	subwfb	btemp^0,f,c
 10954  0170D2  0EF7               	movlw	-9
 10955  0170D4  0060  F007  FFE3   	movff	btemp,plusw1
 10956                           
 10957                           ;stkvar	_s @ sp[(-4)+0]
 10958  0170DA  0EFC               	movlw	-4
 10959  0170DC  50E3               	movf	plusw1,w,c
 10960  0170DE  0F01               	addlw	1
 10961  0170E0  6E01               	movwf	btemp^0,c
 10962  0170E2  0EFC               	movlw	-4
 10963  0170E4  0060  F007  FFE3   	movff	btemp,plusw1
 10964  0170EA  6A01               	clrf	btemp^0,c
 10965  0170EC  0EFD               	movlw	-3
 10966  0170EE  50E3               	movf	plusw1,w,c
 10967  0170F0  2001               	addwfc	btemp^0,w,c
 10968  0170F2  6E01               	movwf	btemp^0,c
 10969  0170F4  0EFD               	movlw	-3
 10970  0170F6                     L9:
 10971  0170F6  0060  F007  FFE3   	movff	btemp,plusw1
 10972                           
 10973                           ;stkvar	_n @ sp[(-4)+-6]
 10974  0170FC  0EF6               	movlw	-10
 10975  0170FE  006F FF8C  F001    	movff	plusw1,btemp
 10976  017104  0EF7               	movlw	-9
 10977  017106  50E3               	movf	plusw1,w,c
 10978  017108  1001               	iorwf	btemp^0,w,c
 10979  01710A  A4D8               	btfss	status,2,c
 10980  01710C  D7C6               	goto	l11775
 10981  01710E                     u10890:
 10982                           
 10983                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10984  01710E  0EF6               	movlw	246
 10985  017110  26E1               	addwf	fsr1l,f,c
 10986  017112  0EFF               	movlw	255
 10987  017114  22E2               	addwfc	fsr1h,f,c
 10988  017116  0012               	return		;funcret
 10989  017118                     __end_of_memset:
 10990                           	opt callstack 0
 10991                           
 10992 ;; *************** function _printf *****************
 10993 ;; Defined at:
 10994 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  fmt             2  [STACK] PTR const unsigned char 
 10997 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  ap              2  [STACK] PTR void [1]
 11000 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11001 ;;  ret             2    0        int 
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  2  [STACK] int 
 11004 ;; Registers used:
 11005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11006 ;; Tracked objects:
 11007 ;;		On entry : 3F/3B
 11008 ;;		On exit  : 3F/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:   23
 11018 ;; This function calls:
 11019 ;;		_vfprintf
 11020 ;; This function is called by:
 11021 ;;		_eaDogM_WriteString
 11022 ;;		_send_lcd_cmd_dma
 11023 ;; This function uses a reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text43
 11027  01B004                     __ptext43:
 11028                           	opt callstack 0
 11029  01B004                     _printf:
 11030                           	opt callstack 0
 11031                           
 11032                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11033  01B004  52E6               	movf	postinc1,f,c
 11034  01B006  52E6               	movf	postinc1,f,c
 11035                           
 11036                           ;stkvar	?_printf @ sp[(-2)+-3]
 11037                           
 11038                           ;incstack = 0
 11039  01B008  0EFB               	movlw	251
 11040  01B00A  24E1               	addwf	fsr1l,w,c
 11041  01B00C  6E0B               	movwf	(btemp+10)^0,c
 11042  01B00E  0EFF               	movlw	255
 11043  01B010  20E2               	addwfc	fsr1h,w,c
 11044  01B012  6E0C               	movwf	(btemp+11)^0,c
 11045                           
 11046                           ;stkvar	_ap @ sp[(-2)+0]
 11047  01B014  0EFF               	movlw	-1
 11048  01B016  0060  F033  FFE3   	movff	btemp+11,plusw1
 11049  01B01C  0EFE               	movlw	-2
 11050  01B01E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11051                           
 11052                           ;stkvar	_ap @ sp[(-2)+0]
 11053  01B024  0EFE               	movlw	254
 11054  01B026  24E1               	addwf	fsr1l,w,c
 11055  01B028  6E01               	movwf	btemp^0,c
 11056  01B02A  0EFF               	movlw	255
 11057  01B02C  20E2               	addwfc	fsr1h,w,c
 11058  01B02E  6E02               	movwf	(btemp+1)^0,c
 11059  01B030  0060  F007  FFE6   	movff	btemp,postinc1
 11060  01B036  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11061                           
 11062                           ;stkvar	_fmt @ sp[(-4)+-3]
 11063  01B03C  0EF9               	movlw	-7
 11064  01B03E  006F FF8F FFE6     	movff	plusw1,postinc1
 11065  01B044  006F FF8F FFE6     	movff	plusw1,postinc1
 11066  01B04A  0E00               	movlw	0
 11067  01B04C  6EE6               	movwf	postinc1,c
 11068  01B04E  0E00               	movlw	0
 11069  01B050  6EE6               	movwf	postinc1,c
 11070  01B052  EC42  F0D3         	call	_vfprintf	;wreg free
 11071                           
 11072                           ; BSR set to: 0
 11073                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11074  01B056  52E5               	movf	postdec1,f,c
 11075  01B058  52E5               	movf	postdec1,f,c
 11076  01B05A  52E5               	movf	postdec1,f,c
 11077  01B05C  50E7               	movf	indf1,w,c
 11078  01B05E  5EE1               	subwf	fsr1l,f,c
 11079  01B060  0E00               	movlw	0
 11080  01B062  5AE2               	subwfb	fsr1h,f,c
 11081  01B064  0012               	return		;funcret
 11082  01B066                     __end_of_printf:
 11083                           	opt callstack 0
 11084                           
 11085 ;; *************** function _vfprintf *****************
 11086 ;; Defined at:
 11087 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11090 ;;		 -> f(6), NULL(0), 
 11091 ;;  fmt             2  [STACK] PTR const unsigned char 
 11092 ;;		 -> STR_65(121), STR_63(3), STR_62(3), STR_61(19), 
 11093 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11094 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11095 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11096 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11097 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11098 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11099 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11100 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11101 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11102 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11103 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11104 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11105 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11106 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11107 ;;		 -> STR_1(17), 
 11108 ;;  ap              2  [STACK] PTR PTR void 
 11109 ;;		 -> ap(2), ap(2), 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  cfmt            2  [STACK] PTR unsigned char 
 11112 ;;		 -> STR_65(121), STR_63(3), STR_62(3), STR_61(19), 
 11113 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11114 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11115 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11116 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11117 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11118 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11119 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11120 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11121 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11122 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11123 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11124 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11125 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11126 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11127 ;;		 -> STR_1(17), 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  2  [STACK] int 
 11130 ;; Registers used:
 11131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 3F/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:   22
 11144 ;; This function calls:
 11145 ;;		_vfpfcnvrt
 11146 ;; This function is called by:
 11147 ;;		_sprintf
 11148 ;;		_printf
 11149 ;; This function uses a reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text44
 11153  01A684                     __ptext44:
 11154                           	opt callstack 0
 11155  01A684                     _vfprintf:
 11156                           	opt callstack 0
 11157                           
 11158                           ; BSR set to: 0
 11159                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11160  01A684  52E6               	movf	postinc1,f,c
 11161  01A686  52E6               	movf	postinc1,f,c
 11162                           
 11163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11164                           ;stkvar	_fmt @ sp[(-2)+-4]
 11165                           
 11166                           ;incstack = 0
 11167 ;; hardware stack exceeded
 11168  01A688  0EFA               	movlw	-6
 11169  01A68A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11170  01A690  0EFB               	movlw	-5
 11171  01A692  006F FF8C  F00C    	movff	plusw1,btemp+11
 11172                           
 11173                           ;stkvar	_cfmt @ sp[(-2)+0]
 11174  01A698  0EFF               	movlw	-1
 11175  01A69A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11176  01A6A0  0EFE               	movlw	-2
 11177  01A6A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11178                           
 11179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11180  01A6A8  0100               	movlb	0	; () banked
 11181  01A6AA  6BC0               	clrf	_nout& (0+255),b
 11182  01A6AC  6BC1               	clrf	(_nout+1)& (0+255),b
 11183                           
 11184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11185  01A6AE  D021               	goto	l12599
 11186  01A6B0                     l12597:
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11190                           ;stkvar	_ap @ sp[(-2)+-6]
 11191  01A6B0  0EF8               	movlw	-8
 11192  01A6B2  006F FF8F FFE6     	movff	plusw1,postinc1
 11193  01A6B8  006F FF8F FFE6     	movff	plusw1,postinc1
 11194                           
 11195                           ;stkvar	_cfmt @ sp[(-4)+0]
 11196  01A6BE  0EFC               	movlw	252
 11197  01A6C0  24E1               	addwf	fsr1l,w,c
 11198  01A6C2  6E01               	movwf	btemp^0,c
 11199  01A6C4  0EFF               	movlw	255
 11200  01A6C6  20E2               	addwfc	fsr1h,w,c
 11201  01A6C8  6E02               	movwf	(btemp+1)^0,c
 11202  01A6CA  0060  F007  FFE6   	movff	btemp,postinc1
 11203  01A6D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11204                           
 11205                           ;stkvar	_fp @ sp[(-6)+-2]
 11206  01A6D6  0EF8               	movlw	-8
 11207  01A6D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  01A6DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  01A6E4  ECCA  F091         	call	_vfpfcnvrt	;wreg free
 11210  01A6E8  5001               	movf	btemp^0,w,c
 11211  01A6EA  0100               	movlb	0	; () banked
 11212  01A6EC  27C0               	addwf	_nout& (0+255),f,b
 11213  01A6EE  5002               	movf	(btemp+1)^0,w,c
 11214  01A6F0  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11215  01A6F2                     l12599:
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11219                           ;stkvar	_cfmt @ sp[(-2)+0]
 11220  01A6F2  50E1               	movf	fsr1l,w,c
 11221  01A6F4  0FFE               	addlw	-2
 11222  01A6F6  6ED9               	movwf	fsr2l,c
 11223  01A6F8  50E2               	movf	fsr1h,w,c
 11224  01A6FA  6EDA               	movwf	fsr2h,c
 11225  01A6FC  0EFF               	movlw	255
 11226  01A6FE  22DA               	addwfc	fsr2h,f,c
 11227  01A700  006F FF7B FFF6     	movff	postinc2,tblptrl
 11228  01A706  006F FF77 FFF7     	movff	postdec2,tblptrh
 11229  01A70C                     	if	0	;tblptru may be non-zero
 11230  01A70C                     	endif
 11231  01A70C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11232  01A70C  0E00               	movlw	low (__mediumconst shr (0+16))
 11233  01A70E  6EF8               	movwf	tblptru,c
 11234  01A710                     	endif
 11235  01A710  0008               	tblrd		*
 11236  01A712  50F5               	movf	tablat,w,c
 11237  01A714  0900               	iorlw	0
 11238  01A716  A4D8               	btfss	status,2,c
 11239  01A718  D7CB               	goto	l12597
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11243  01A71A  0060  F300  F001   	movff	_nout,btemp
 11244  01A720  0060  F304  F002   	movff	_nout+1,btemp+1
 11245                           
 11246                           ; BSR set to: 0
 11247                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11248  01A726  0EF8               	movlw	248
 11249  01A728  26E1               	addwf	fsr1l,f,c
 11250  01A72A  0EFF               	movlw	255
 11251  01A72C  22E2               	addwfc	fsr1h,f,c
 11252  01A72E  0012               	return		;funcret
 11253  01A730                     __end_of_vfprintf:
 11254                           	opt callstack 0
 11255                           
 11256 ;; *************** function _vfpfcnvrt *****************
 11257 ;; Defined at:
 11258 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11261 ;;		 -> f(6), NULL(0), 
 11262 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11263 ;;		 -> cfmt(2), 
 11264 ;;  ap              2  [STACK] PTR PTR void 
 11265 ;;		 -> ap(2), ap(2), 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  llu             8  [STACK] unsigned long long 
 11268 ;;  ll              8  [STACK] long long 
 11269 ;;  f               4  [STACK] long long 
 11270 ;;  ct              3  [STACK] unsigned char [3]
 11271 ;;  vp              3    0        PTR void 
 11272 ;;  cp              2  [STACK] PTR unsigned char 
 11273 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11274 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 11275 ;;		 -> V(191), 
 11276 ;;  i               2    0        int 
 11277 ;;  done            2    0        int 
 11278 ;;  c               1  [STACK] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  2  [STACK] int 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11292 ;;Total ram usage:        0 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:   21
 11295 ;; This function calls:
 11296 ;;		_atoi
 11297 ;;		_ctoa
 11298 ;;		_dtoa
 11299 ;;		_efgtoa
 11300 ;;		_fputc
 11301 ;;		_isdigit
 11302 ;;		_isupper
 11303 ;;		_stoa
 11304 ;;		_strncmp
 11305 ;;		_tolower
 11306 ;;		_utoa
 11307 ;;		_xtoa
 11308 ;; This function is called by:
 11309 ;;		_vfprintf
 11310 ;; This function uses a reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text45
 11314  012394                     __ptext45:
 11315                           	opt callstack 0
 11316  012394                     _vfpfcnvrt:
 11317                           	opt callstack 0
 11318                           
 11319                           ; BSR set to: 0
 11320                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11321  012394  0E20               	movlw	32
 11322  012396  26E1               	addwf	fsr1l,f,c
 11323  012398  0E00               	movlw	0
 11324  01239A  22E2               	addwfc	fsr1h,f,c
 11325                           
 11326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11327                           ;stkvar	_fmt @ sp[(-32)+-4]
 11328                           
 11329                           ;incstack = 0
 11330 ;; hardware stack exceeded
 11331  01239C  0EDC               	movlw	-36
 11332  01239E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11333  0123A4  0EDD               	movlw	-35
 11334  0123A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11335  0123AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11336  0123B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11337  0123B8                     	if	0	;tblptru may be non-zero
 11338  0123B8                     	endif
 11339  0123B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11340  0123B8  0E00               	movlw	low (__mediumconst shr (0+16))
 11341  0123BA  6EF8               	movwf	tblptru,c
 11342  0123BC                     	endif
 11343  0123BC  0008               	tblrd		*
 11344  0123BE  50F5               	movf	tablat,w,c
 11345  0123C0  0A25               	xorlw	37
 11346  0123C2  A4D8               	btfss	status,2,c
 11347  0123C4  EF71  F099         	goto	l12543
 11348                           
 11349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11350                           ;stkvar	_fmt @ sp[(-32)+-4]
 11351  0123C8  0EDC               	movlw	-36
 11352  0123CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11353  0123D0  0EDD               	movlw	-35
 11354  0123D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11355  0123D8  2ADE               	incf	postinc2,f,c
 11356  0123DA  0E00               	movlw	0
 11357  0123DC  22DD               	addwfc	postdec2,f,c
 11358                           
 11359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11360  0123DE  6A3A               	clrf	_width^0,c
 11361  0123E0  6A3B               	clrf	(_width+1)^0,c
 11362  0123E2  6A3E               	clrf	_flags^0,c
 11363  0123E4  6A3F               	clrf	(_flags+1)^0,c
 11364                           
 11365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11366  0123E6  683C               	setf	_prec^0,c
 11367  0123E8  683D               	setf	(_prec+1)^0,c
 11368                           
 11369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11370                           ;stkvar	_fmt @ sp[(-32)+-4]
 11371  0123EA  0EDC               	movlw	-36
 11372  0123EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11373  0123F2  0EDD               	movlw	-35
 11374  0123F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11375  0123FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11376  012400  006F FF77 FFF7     	movff	postdec2,tblptrh
 11377  012406                     	if	0	;tblptru may be non-zero
 11378  012406                     	endif
 11379  012406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11380  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11381  012408  6EF8               	movwf	tblptru,c
 11382  01240A                     	endif
 11383  01240A  0008               	tblrd		*
 11384  01240C  50F5               	movf	tablat,w,c
 11385  01240E  0A2A               	xorlw	42
 11386  012410  A4D8               	btfss	status,2,c
 11387  012412  D031               	goto	l12361
 11388                           
 11389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11390                           ;stkvar	_fmt @ sp[(-32)+-4]
 11391  012414  0EDC               	movlw	-36
 11392  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11393  01241C  0EDD               	movlw	-35
 11394  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11395  012424  2ADE               	incf	postinc2,f,c
 11396  012426  0E00               	movlw	0
 11397  012428  22DD               	addwfc	postdec2,f,c
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11400                           ;stkvar	_ap @ sp[(-32)+-6]
 11401  01242A  0EDA               	movlw	-38
 11402  01242C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11403  012432  0EDB               	movlw	-37
 11404  012434  006F FF8F FFDA     	movff	plusw1,fsr2h
 11405  01243A  0E02               	movlw	2
 11406  01243C  5EDE               	subwf	postinc2,f,c
 11407  01243E  0E00               	movlw	0
 11408  012440  5ADD               	subwfb	postdec2,f,c
 11409  012442  006F FF78  F00B    	movff	postinc2,btemp+10
 11410  012448  006F FF74  F00C    	movff	postdec2,btemp+11
 11411  01244E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11412  012454  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11413  01245A  006F FF78  F03A    	movff	postinc2,_width
 11414  012460  006F FF74  F03B    	movff	postdec2,_width+1
 11415                           
 11416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11417  012466  AE3B               	btfss	(_width+1)^0,7,c
 11418  012468  D066               	goto	u12020
 11419                           
 11420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11421  01246A  803E               	bsf	_flags^0,0,c
 11422                           
 11423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11424  01246C  6C3A               	negf	_width^0,c
 11425  01246E  1E3B               	comf	(_width+1)^0,f,c
 11426  012470  B0D8               	btfsc	status,0,c
 11427  012472  2A3B               	incf	(_width+1)^0,f,c
 11428  012474  D060               	goto	u12020
 11429  012476                     l12361:
 11430                           
 11431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11432                           ;stkvar	_fmt @ sp[(-32)+-4]
 11433  012476  0EDC               	movlw	-36
 11434  012478  006F FF8F FFD9     	movff	plusw1,fsr2l
 11435  01247E  0EDD               	movlw	-35
 11436  012480  006F FF8F FFDA     	movff	plusw1,fsr2h
 11437  012486  006F FF78  F00B    	movff	postinc2,btemp+10
 11438  01248C  006F FF74  F00C    	movff	postdec2,btemp+11
 11439  012492  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11440  012498  0060  F033  FFE6   	movff	btemp+11,postinc1
 11441  01249E  EC93  F0BC         	call	_atoi	;wreg free
 11442  0124A2  0060  F004  F03A   	movff	btemp,_width
 11443  0124A8  0060  F008  F03B   	movff	btemp+1,_width+1
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11446  0124AE  D00B               	goto	l12365
 11447  0124B0                     l12363:
 11448                           
 11449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11450                           ;stkvar	_fmt @ sp[(-32)+-4]
 11451  0124B0  0EDC               	movlw	-36
 11452  0124B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11453  0124B8  0EDD               	movlw	-35
 11454  0124BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11455  0124C0  2ADE               	incf	postinc2,f,c
 11456  0124C2  0E00               	movlw	0
 11457  0124C4  22DD               	addwfc	postdec2,f,c
 11458  0124C6                     l12365:
 11459  0124C6  0ED0               	movlw	208
 11460  0124C8  6E0B               	movwf	(btemp+10)^0,c
 11461  0124CA  0EFF               	movlw	255
 11462  0124CC  6E0C               	movwf	(btemp+11)^0,c
 11463                           
 11464                           ;stkvar	_fmt @ sp[(-32)+-4]
 11465  0124CE  0EDC               	movlw	-36
 11466  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11467  0124D6  0EDD               	movlw	-35
 11468  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11469  0124DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11470  0124E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11471  0124EA                     	if	0	;tblptru may be non-zero
 11472  0124EA                     	endif
 11473  0124EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11474  0124EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11475  0124EC  6EF8               	movwf	tblptru,c
 11476  0124EE                     	endif
 11477  0124EE  0008               	tblrd		*
 11478  0124F0  50F5               	movf	tablat,w,c
 11479  0124F2  6E09               	movwf	(btemp+8)^0,c
 11480  0124F4  6A0A               	clrf	(btemp+9)^0,c
 11481  0124F6  500B               	movf	(btemp+10)^0,w,c
 11482  0124F8  2609               	addwf	(btemp+8)^0,f,c
 11483  0124FA  500C               	movf	(btemp+11)^0,w,c
 11484  0124FC  220A               	addwfc	(btemp+9)^0,f,c
 11485  0124FE  500A               	movf	(btemp+9)^0,w,c
 11486  012500  E106               	bnz	u12000
 11487  012502  0E0A               	movlw	10
 11488  012504  5C09               	subwf	(btemp+8)^0,w,c
 11489  012506  B0D8               	btfsc	status,0,c
 11490  012508  D002               	goto	u12000
 11491  01250A  0E01               	movlw	1
 11492  01250C  D001               	goto	u12010
 11493  01250E                     u12000:
 11494  01250E  0E00               	movlw	0
 11495  012510                     u12010:
 11496  012510  6E0B               	movwf	(btemp+10)^0,c
 11497  012512  6A0C               	clrf	(btemp+11)^0,c
 11498                           
 11499                           ;stkvar	_vfpfcnvrt$5552 @ sp[(-32)+4]
 11500  012514  0EE4               	movlw	-28
 11501  012516  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11502  01251C  0EE5               	movlw	-27
 11503  01251E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11504                           
 11505                           ;stkvar	_vfpfcnvrt$5552 @ sp[(-32)+4]
 11506  012524  0EE4               	movlw	-28
 11507  012526  006F FF8C  F001    	movff	plusw1,btemp
 11508  01252C  0EE5               	movlw	-27
 11509  01252E  50E3               	movf	plusw1,w,c
 11510  012530  1001               	iorwf	btemp^0,w,c
 11511  012532  A4D8               	btfss	status,2,c
 11512  012534  D7BD               	goto	l12363
 11513  012536                     u12020:
 11514                           
 11515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11516                           ;stkvar	_fmt @ sp[(-32)+-4]
 11517  012536  0EDC               	movlw	-36
 11518  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
 11519  01253E  0EDD               	movlw	-35
 11520  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
 11521  012546  006F FF7B FFF6     	movff	postinc2,tblptrl
 11522  01254C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11523  012552                     	if	0	;tblptru may be non-zero
 11524  012552                     	endif
 11525  012552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11526  012552  0E00               	movlw	low (__mediumconst shr (0+16))
 11527  012554  6EF8               	movwf	tblptru,c
 11528  012556                     	endif
 11529  012556  0008               	tblrd		*
 11530  012558  50F5               	movf	tablat,w,c
 11531  01255A  0A2E               	xorlw	46
 11532  01255C  A4D8               	btfss	status,2,c
 11533  01255E  D0AC               	goto	u12070
 11534                           
 11535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11536  012560  6A3C               	clrf	_prec^0,c
 11537  012562  6A3D               	clrf	(_prec+1)^0,c
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11540                           ;stkvar	_fmt @ sp[(-32)+-4]
 11541  012564  0EDC               	movlw	-36
 11542  012566  006F FF8F FFD9     	movff	plusw1,fsr2l
 11543  01256C  0EDD               	movlw	-35
 11544  01256E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11545  012574  2ADE               	incf	postinc2,f,c
 11546  012576  0E00               	movlw	0
 11547  012578  22DD               	addwfc	postdec2,f,c
 11548                           
 11549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11550                           ;stkvar	_fmt @ sp[(-32)+-4]
 11551  01257A  0EDC               	movlw	-36
 11552  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11553  012582  0EDD               	movlw	-35
 11554  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11555  01258A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11556  012590  006F FF77 FFF7     	movff	postdec2,tblptrh
 11557  012596                     	if	0	;tblptru may be non-zero
 11558  012596                     	endif
 11559  012596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11560  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 11561  012598  6EF8               	movwf	tblptru,c
 11562  01259A                     	endif
 11563  01259A  0008               	tblrd		*
 11564  01259C  50F5               	movf	tablat,w,c
 11565  01259E  0A2A               	xorlw	42
 11566  0125A0  A4D8               	btfss	status,2,c
 11567  0125A2  D02A               	goto	l12383
 11568                           
 11569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11570                           ;stkvar	_fmt @ sp[(-32)+-4]
 11571  0125A4  0EDC               	movlw	-36
 11572  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11573  0125AC  0EDD               	movlw	-35
 11574  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11575  0125B4  2ADE               	incf	postinc2,f,c
 11576  0125B6  0E00               	movlw	0
 11577  0125B8  22DD               	addwfc	postdec2,f,c
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11580                           ;stkvar	_ap @ sp[(-32)+-6]
 11581  0125BA  0EDA               	movlw	-38
 11582  0125BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11583  0125C2  0EDB               	movlw	-37
 11584  0125C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11585  0125CA  0E02               	movlw	2
 11586  0125CC  5EDE               	subwf	postinc2,f,c
 11587  0125CE  0E00               	movlw	0
 11588  0125D0  5ADD               	subwfb	postdec2,f,c
 11589  0125D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11590  0125D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11591  0125DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11592  0125E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11593  0125EA  006F FF78  F03C    	movff	postinc2,_prec
 11594  0125F0  006F FF74  F03D    	movff	postdec2,_prec+1
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11597  0125F6  D060               	goto	u12070
 11598  0125F8                     l12383:
 11599                           
 11600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11601                           ;stkvar	_fmt @ sp[(-32)+-4]
 11602  0125F8  0EDC               	movlw	-36
 11603  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11604  012600  0EDD               	movlw	-35
 11605  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 11606  012608  006F FF78  F00B    	movff	postinc2,btemp+10
 11607  01260E  006F FF74  F00C    	movff	postdec2,btemp+11
 11608  012614  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11609  01261A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11610  012620  EC93  F0BC         	call	_atoi	;wreg free
 11611  012624  0060  F004  F03C   	movff	btemp,_prec
 11612  01262A  0060  F008  F03D   	movff	btemp+1,_prec+1
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11615  012630  D00B               	goto	l12387
 11616  012632                     l12385:
 11617                           
 11618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11619                           ;stkvar	_fmt @ sp[(-32)+-4]
 11620  012632  0EDC               	movlw	-36
 11621  012634  006F FF8F FFD9     	movff	plusw1,fsr2l
 11622  01263A  0EDD               	movlw	-35
 11623  01263C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11624  012642  2ADE               	incf	postinc2,f,c
 11625  012644  0E00               	movlw	0
 11626  012646  22DD               	addwfc	postdec2,f,c
 11627  012648                     l12387:
 11628  012648  0ED0               	movlw	208
 11629  01264A  6E0B               	movwf	(btemp+10)^0,c
 11630  01264C  0EFF               	movlw	255
 11631  01264E  6E0C               	movwf	(btemp+11)^0,c
 11632                           
 11633                           ;stkvar	_fmt @ sp[(-32)+-4]
 11634  012650  0EDC               	movlw	-36
 11635  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 11636  012658  0EDD               	movlw	-35
 11637  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11638  012660  006F FF7B FFF6     	movff	postinc2,tblptrl
 11639  012666  006F FF77 FFF7     	movff	postdec2,tblptrh
 11640  01266C                     	if	0	;tblptru may be non-zero
 11641  01266C                     	endif
 11642  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11643  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 11644  01266E  6EF8               	movwf	tblptru,c
 11645  012670                     	endif
 11646  012670  0008               	tblrd		*
 11647  012672  50F5               	movf	tablat,w,c
 11648  012674  6E09               	movwf	(btemp+8)^0,c
 11649  012676  6A0A               	clrf	(btemp+9)^0,c
 11650  012678  500B               	movf	(btemp+10)^0,w,c
 11651  01267A  2609               	addwf	(btemp+8)^0,f,c
 11652  01267C  500C               	movf	(btemp+11)^0,w,c
 11653  01267E  220A               	addwfc	(btemp+9)^0,f,c
 11654  012680  500A               	movf	(btemp+9)^0,w,c
 11655  012682  E106               	bnz	u12050
 11656  012684  0E0A               	movlw	10
 11657  012686  5C09               	subwf	(btemp+8)^0,w,c
 11658  012688  B0D8               	btfsc	status,0,c
 11659  01268A  D002               	goto	u12050
 11660  01268C  0E01               	movlw	1
 11661  01268E  D001               	goto	u12060
 11662  012690                     u12050:
 11663  012690  0E00               	movlw	0
 11664  012692                     u12060:
 11665  012692  6E0B               	movwf	(btemp+10)^0,c
 11666  012694  6A0C               	clrf	(btemp+11)^0,c
 11667                           
 11668                           ;stkvar	_vfpfcnvrt$5553 @ sp[(-32)+0]
 11669  012696  0EE0               	movlw	-32
 11670  012698  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11671  01269E  0EE1               	movlw	-31
 11672  0126A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11673                           
 11674                           ;stkvar	_vfpfcnvrt$5553 @ sp[(-32)+0]
 11675  0126A6  0EE0               	movlw	-32
 11676  0126A8  006F FF8C  F001    	movff	plusw1,btemp
 11677  0126AE  0EE1               	movlw	-31
 11678  0126B0  50E3               	movf	plusw1,w,c
 11679  0126B2  1001               	iorwf	btemp^0,w,c
 11680  0126B4  A4D8               	btfss	status,2,c
 11681  0126B6  D7BD               	goto	l12385
 11682  0126B8                     u12070:
 11683                           
 11684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11685                           ;stkvar	_fmt @ sp[(-32)+-4]
 11686  0126B8  0EDC               	movlw	-36
 11687  0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11688  0126C0  0EDD               	movlw	-35
 11689  0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11690  0126C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11691  0126CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11692  0126D4                     	if	0	;tblptru may be non-zero
 11693  0126D4                     	endif
 11694  0126D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11695  0126D4  0E00               	movlw	low (__mediumconst shr (0+16))
 11696  0126D6  6EF8               	movwf	tblptru,c
 11697  0126D8                     	endif
 11698  0126D8  0008               	tblrd		*
 11699  0126DA  50F5               	movf	tablat,w,c
 11700  0126DC  6EE6               	movwf	postinc1,c
 11701  0126DE  0E00               	movlw	0
 11702  0126E0  6EE6               	movwf	postinc1,c
 11703  0126E2  EC3E  F0D6         	call	_tolower	;wreg free
 11704                           
 11705                           ;stkvar	_ct @ sp[(-32)+26]
 11706  0126E6  0EFA               	movlw	-6
 11707  0126E8  0060  F007  FFE3   	movff	btemp,plusw1
 11708                           
 11709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11710                           ;stkvar	_ct @ sp[(-32)+26]
 11711  0126EE  0EFA               	movlw	-6
 11712  0126F0  50E3               	movf	plusw1,w,c
 11713  0126F2  B4D8               	btfsc	status,2,c
 11714  0126F4  D05B               	goto	l12403
 11715                           
 11716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11717                           ;stkvar	_ct @ sp[(-32)+26]
 11718  0126F6  0EFB               	movlw	251
 11719  0126F8  24E1               	addwf	fsr1l,w,c
 11720  0126FA  6ED9               	movwf	fsr2l,c
 11721  0126FC  0EFF               	movlw	255
 11722  0126FE  20E2               	addwfc	fsr1h,w,c
 11723  012700  6EDA               	movwf	fsr2h,c
 11724                           
 11725                           ;stkvar	_fmt @ sp[(-32)+-4]
 11726  012702  0EDC               	movlw	-36
 11727  012704  006F FF8F FFE9     	movff	plusw1,fsr0l
 11728  01270A  0EDD               	movlw	-35
 11729  01270C  006F FF8F FFEA     	movff	plusw1,fsr0h
 11730  012712  006F FFB8  F00B    	movff	postinc0,btemp+10
 11731  012718  006F FFB4  F00C    	movff	postdec0,btemp+11
 11732  01271E  0E01               	movlw	1
 11733  012720  260B               	addwf	(btemp+10)^0,f,c
 11734  012722  0E00               	movlw	0
 11735  012724  220C               	addwfc	(btemp+11)^0,f,c
 11736  012726  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11737  01272C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11738  012732                     	if	0	;tblptru may be non-zero
 11739  012732                     	endif
 11740  012732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11741  012732  0E00               	movlw	low (__mediumconst shr (0+16))
 11742  012734  6EF8               	movwf	tblptru,c
 11743  012736                     	endif
 11744  012736  0008               	tblrd		*
 11745  012738  50F5               	movf	tablat,w,c
 11746  01273A  6EE6               	movwf	postinc1,c
 11747  01273C  0E00               	movlw	0
 11748  01273E  6EE6               	movwf	postinc1,c
 11749  012740  EC3E  F0D6         	call	_tolower	;wreg free
 11750  012744  5001               	movf	btemp^0,w,c
 11751  012746  6EDF               	movwf	indf2,c
 11752                           
 11753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11754                           ;stkvar	_ct @ sp[(-32)+26]
 11755  012748  0EFB               	movlw	251
 11756  01274A  24E1               	addwf	fsr1l,w,c
 11757  01274C  6ED9               	movwf	fsr2l,c
 11758  01274E  0EFF               	movlw	255
 11759  012750  20E2               	addwfc	fsr1h,w,c
 11760  012752  6EDA               	movwf	fsr2h,c
 11761  012754  50DF               	movf	indf2,w,c
 11762  012756  B4D8               	btfsc	status,2,c
 11763  012758  D029               	goto	l12403
 11764                           
 11765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11766                           ;stkvar	_ct @ sp[(-32)+26]
 11767  01275A  0EFC               	movlw	252
 11768  01275C  24E1               	addwf	fsr1l,w,c
 11769  01275E  6ED9               	movwf	fsr2l,c
 11770  012760  0EFF               	movlw	255
 11771  012762  20E2               	addwfc	fsr1h,w,c
 11772  012764  6EDA               	movwf	fsr2h,c
 11773                           
 11774                           ;stkvar	_fmt @ sp[(-32)+-4]
 11775  012766  0EDC               	movlw	-36
 11776  012768  006F FF8F FFE9     	movff	plusw1,fsr0l
 11777  01276E  0EDD               	movlw	-35
 11778  012770  006F FF8F FFEA     	movff	plusw1,fsr0h
 11779  012776  006F FFB8  F00B    	movff	postinc0,btemp+10
 11780  01277C  006F FFB4  F00C    	movff	postdec0,btemp+11
 11781  012782  0E02               	movlw	2
 11782  012784  260B               	addwf	(btemp+10)^0,f,c
 11783  012786  0E00               	movlw	0
 11784  012788  220C               	addwfc	(btemp+11)^0,f,c
 11785  01278A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11786  012790  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11787  012796                     	if	0	;tblptru may be non-zero
 11788  012796                     	endif
 11789  012796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11790  012796  0E00               	movlw	low (__mediumconst shr (0+16))
 11791  012798  6EF8               	movwf	tblptru,c
 11792  01279A                     	endif
 11793  01279A  0008               	tblrd		*
 11794  01279C  50F5               	movf	tablat,w,c
 11795  01279E  6EE6               	movwf	postinc1,c
 11796  0127A0  0E00               	movlw	0
 11797  0127A2  6EE6               	movwf	postinc1,c
 11798  0127A4  EC3E  F0D6         	call	_tolower	;wreg free
 11799  0127A8  5001               	movf	btemp^0,w,c
 11800  0127AA  6EDF               	movwf	indf2,c
 11801  0127AC                     l12403:
 11802                           
 11803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11804                           ;stkvar	_fmt @ sp[(-32)+-4]
 11805  0127AC  0EDC               	movlw	-36
 11806  0127AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11807  0127B4  0EDD               	movlw	-35
 11808  0127B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11809  0127BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11810  0127C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11811  0127C8                     	if	0	;tblptru may be non-zero
 11812  0127C8                     	endif
 11813  0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11814  0127C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11815  0127CA  6EF8               	movwf	tblptru,c
 11816  0127CC                     	endif
 11817  0127CC  0008               	tblrd		*
 11818  0127CE  50F5               	movf	tablat,w,c
 11819  0127D0  0A63               	xorlw	99
 11820  0127D2  A4D8               	btfss	status,2,c
 11821  0127D4  D037               	goto	l12413
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11824                           ;stkvar	_fmt @ sp[(-32)+-4]
 11825  0127D6  0EDC               	movlw	-36
 11826  0127D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11827  0127DE  0EDD               	movlw	-35
 11828  0127E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11829  0127E6  2ADE               	incf	postinc2,f,c
 11830  0127E8  0E00               	movlw	0
 11831  0127EA  22DD               	addwfc	postdec2,f,c
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11834                           ;stkvar	_ap @ sp[(-32)+-6]
 11835  0127EC  0EDA               	movlw	-38
 11836  0127EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11837  0127F4  0EDB               	movlw	-37
 11838  0127F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11839  0127FC  0E02               	movlw	2
 11840  0127FE  5EDE               	subwf	postinc2,f,c
 11841  012800  0E00               	movlw	0
 11842  012802  5ADD               	subwfb	postdec2,f,c
 11843  012804  006F FF78  F00B    	movff	postinc2,btemp+10
 11844  01280A  006F FF74  F00C    	movff	postdec2,btemp+11
 11845  012810  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11846  012816  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11847  01281C  50DF               	movf	indf2,w,c
 11848  01281E  6E0C               	movwf	(btemp+11)^0,c
 11849                           
 11850                           ;stkvar	_c @ sp[(-32)+31]
 11851  012820  0EFF               	movlw	-1
 11852  012822  0060  F033  FFE3   	movff	btemp+11,plusw1
 11853                           
 11854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11855                           ;stkvar	_c @ sp[(-32)+31]
 11856  012828  0EFF               	movlw	-1
 11857  01282A  50E3               	movf	plusw1,w,c
 11858  01282C  6EE6               	movwf	postinc1,c
 11859                           
 11860                           ;stkvar	_fp @ sp[(-33)+-2]
 11861  01282E  0EDD               	movlw	-35
 11862  012830  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  012836  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  01283C  ECB8  F0D5         	call	_ctoa	;wreg free
 11865  012840  EF9B  F099         	goto	l2371
 11866  012844                     l12413:
 11867                           
 11868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11869                           ;stkvar	_fmt @ sp[(-32)+-4]
 11870  012844  0EDC               	movlw	-36
 11871  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11872  01284C  0EDD               	movlw	-35
 11873  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11874  012854  006F FF7B FFF6     	movff	postinc2,tblptrl
 11875  01285A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11876  012860                     	if	0	;tblptru may be non-zero
 11877  012860                     	endif
 11878  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11879  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 11880  012862  6EF8               	movwf	tblptru,c
 11881  012864                     	endif
 11882  012864  0008               	tblrd		*
 11883  012866  50F5               	movf	tablat,w,c
 11884  012868  0A64               	xorlw	100
 11885  01286A  B4D8               	btfsc	status,2,c
 11886  01286C  D015               	goto	u12120
 11887                           
 11888                           ;stkvar	_fmt @ sp[(-32)+-4]
 11889  01286E  0EDC               	movlw	-36
 11890  012870  006F FF8F FFD9     	movff	plusw1,fsr2l
 11891  012876  0EDD               	movlw	-35
 11892  012878  006F FF8F FFDA     	movff	plusw1,fsr2h
 11893  01287E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11894  012884  006F FF77 FFF7     	movff	postdec2,tblptrh
 11895  01288A                     	if	0	;tblptru may be non-zero
 11896  01288A                     	endif
 11897  01288A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11898  01288A  0E00               	movlw	low (__mediumconst shr (0+16))
 11899  01288C  6EF8               	movwf	tblptru,c
 11900  01288E                     	endif
 11901  01288E  0008               	tblrd		*
 11902  012890  50F5               	movf	tablat,w,c
 11903  012892  0A69               	xorlw	105
 11904  012894  A4D8               	btfss	status,2,c
 11905  012896  D076               	goto	l12425
 11906  012898                     u12120:
 11907                           
 11908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11909                           ;stkvar	_fmt @ sp[(-32)+-4]
 11910  012898  0EDC               	movlw	-36
 11911  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11912  0128A0  0EDD               	movlw	-35
 11913  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11914  0128A8  2ADE               	incf	postinc2,f,c
 11915  0128AA  0E00               	movlw	0
 11916  0128AC  22DD               	addwfc	postdec2,f,c
 11917                           
 11918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11919                           ;stkvar	_ap @ sp[(-32)+-6]
 11920  0128AE  0EDA               	movlw	-38
 11921  0128B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11922  0128B6  0EDB               	movlw	-37
 11923  0128B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11924  0128BE  0E02               	movlw	2
 11925  0128C0  5EDE               	subwf	postinc2,f,c
 11926  0128C2  0E00               	movlw	0
 11927  0128C4  5ADD               	subwfb	postdec2,f,c
 11928  0128C6  006F FF78  F00B    	movff	postinc2,btemp+10
 11929  0128CC  006F FF74  F00C    	movff	postdec2,btemp+11
 11930  0128D2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11931  0128D8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11932  0128DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11933  0128E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11934                           
 11935                           ;stkvar	_ll @ sp[(-32)+14]
 11936  0128EA  0EEE               	movlw	-18
 11937  0128EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11938  0128F2  0EEF               	movlw	-17
 11939  0128F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11940  0128FA  6A01               	clrf	btemp^0,c
 11941  0128FC  BEE3               	btfsc	plusw1,7,c
 11942  0128FE  6801               	setf	btemp^0,c
 11943  012900  0EF0               	movlw	-16
 11944  012902  0060  F007  FFE3   	movff	btemp,plusw1
 11945  012908  0EF1               	movlw	-15
 11946  01290A  0060  F007  FFE3   	movff	btemp,plusw1
 11947  012910  0EF2               	movlw	-14
 11948  012912  0060  F007  FFE3   	movff	btemp,plusw1
 11949  012918  0EF3               	movlw	-13
 11950  01291A  0060  F007  FFE3   	movff	btemp,plusw1
 11951  012920  0EF4               	movlw	-12
 11952  012922  0060  F007  FFE3   	movff	btemp,plusw1
 11953  012928  0EF5               	movlw	-11
 11954  01292A  0060  F007  FFE3   	movff	btemp,plusw1
 11955  012930                     l12421:
 11956                           
 11957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11958                           ;stkvar	_ll @ sp[(-32)+14]
 11959  012930  50E1               	movf	fsr1l,w,c
 11960  012932  0FEE               	addlw	-18
 11961  012934  6ED9               	movwf	fsr2l,c
 11962  012936  50E2               	movf	fsr1h,w,c
 11963  012938  6EDA               	movwf	fsr2h,c
 11964  01293A  0EFF               	movlw	255
 11965  01293C  22DA               	addwfc	fsr2h,f,c
 11966  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 11967  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 11968  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 11969  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 11970  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 11971  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 11972  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 11973  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 11974                           
 11975                           ;stkvar	_fp @ sp[(-40)+-2]
 11976  01296E  0ED6               	movlw	-42
 11977  012970  006F FF8F FFE6     	movff	plusw1,postinc1
 11978  012976  006F FF8F FFE6     	movff	plusw1,postinc1
 11979  01297C  ECE7  F0AB         	call	_dtoa	;wreg free
 11980  012980  EF9B  F099         	goto	l2371
 11981  012984                     l12425:
 11982                           
 11983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11984  012984  0E02               	movlw	2
 11985  012986  6EE6               	movwf	postinc1,c
 11986  012988  0E00               	movlw	0
 11987  01298A  6EE6               	movwf	postinc1,c
 11988  01298C  0EEA               	movlw	low STR_74
 11989  01298E  6EE6               	movwf	postinc1,c
 11990  012990  0EFF               	movlw	high STR_74
 11991  012992  6EE6               	movwf	postinc1,c
 11992                           
 11993                           ;stkvar	_fmt @ sp[(-36)+-4]
 11994  012994  0ED8               	movlw	-40
 11995  012996  006F FF8F FFD9     	movff	plusw1,fsr2l
 11996  01299C  0ED9               	movlw	-39
 11997  01299E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11998  0129A4  006F FF78  F00B    	movff	postinc2,btemp+10
 11999  0129AA  006F FF74  F00C    	movff	postdec2,btemp+11
 12000  0129B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12001  0129B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 12002  0129BC  EC10  F0C0         	call	_strncmp	;wreg free
 12003  0129C0  5001               	movf	btemp^0,w,c
 12004  0129C2  1002               	iorwf	(btemp+1)^0,w,c
 12005  0129C4  B4D8               	btfsc	status,2,c
 12006  0129C6  D022               	goto	u12140
 12007  0129C8  0E02               	movlw	2
 12008  0129CA  6EE6               	movwf	postinc1,c
 12009  0129CC  0E00               	movlw	0
 12010  0129CE  6EE6               	movwf	postinc1,c
 12011  0129D0  0EF0               	movlw	low STR_78
 12012  0129D2  6EE6               	movwf	postinc1,c
 12013  0129D4  0EFF               	movlw	high STR_78
 12014  0129D6  6EE6               	movwf	postinc1,c
 12015                           
 12016                           ;stkvar	_fmt @ sp[(-36)+-4]
 12017  0129D8  0ED8               	movlw	-40
 12018  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12019  0129E0  0ED9               	movlw	-39
 12020  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12021  0129E8  006F FF78  F00B    	movff	postinc2,btemp+10
 12022  0129EE  006F FF74  F00C    	movff	postdec2,btemp+11
 12023  0129F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12024  0129FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 12025  012A00  EC10  F0C0         	call	_strncmp	;wreg free
 12026  012A04  5001               	movf	btemp^0,w,c
 12027  012A06  1002               	iorwf	(btemp+1)^0,w,c
 12028  012A08  A4D8               	btfss	status,2,c
 12029  012A0A  D069               	goto	l12437
 12030  012A0C                     u12140:
 12031                           
 12032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12033                           ;stkvar	_fmt @ sp[(-32)+-4]
 12034  012A0C  0EDC               	movlw	-36
 12035  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12036  012A14  0EDD               	movlw	-35
 12037  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12038  012A1C  0E02               	movlw	2
 12039  012A1E  26DE               	addwf	postinc2,f,c
 12040  012A20  0E00               	movlw	0
 12041  012A22  22DD               	addwfc	postdec2,f,c
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12044                           ;stkvar	_ap @ sp[(-32)+-6]
 12045  012A24  0EDA               	movlw	-38
 12046  012A26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12047  012A2C  0EDB               	movlw	-37
 12048  012A2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12049  012A34  0E04               	movlw	4
 12050  012A36  5EDE               	subwf	postinc2,f,c
 12051  012A38  0E00               	movlw	0
 12052  012A3A  5ADD               	subwfb	postdec2,f,c
 12053  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12054  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 12055  012A48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12056  012A4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12057  012A54  006F FF78  F009    	movff	postinc2,btemp+8
 12058  012A5A  006F FF78  F00A    	movff	postinc2,btemp+9
 12059  012A60  006F FF78  F00B    	movff	postinc2,btemp+10
 12060  012A66  006F FF78  F00C    	movff	postinc2,btemp+11
 12061  012A6C  0060  F024  F011   	movff	btemp+8,btemp+16
 12062  012A72  0060  F028  F012   	movff	btemp+9,btemp+17
 12063  012A78  0060  F02C  F013   	movff	btemp+10,btemp+18
 12064  012A7E  0060  F030  F014   	movff	btemp+11,btemp+19
 12065  012A84  6A15               	clrf	(btemp+20)^0,c
 12066  012A86  BE14               	btfsc	(btemp+19)^0,7,c
 12067  012A88  6815               	setf	(btemp+20)^0,c
 12068  012A8A  0060  F054  F016   	movff	btemp+20,btemp+21
 12069  012A90  0060  F054  F017   	movff	btemp+20,btemp+22
 12070  012A96  0060  F054  F018   	movff	btemp+20,btemp+23
 12071                           
 12072                           ;stkvar	_ll @ sp[(-32)+14]
 12073  012A9C  0EEE               	movlw	-18
 12074  012A9E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12075  012AA4  0EEF               	movlw	-17
 12076  012AA6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12077  012AAC  0EF0               	movlw	-16
 12078  012AAE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12079  012AB4  0EF1               	movlw	-15
 12080  012AB6  0060  F053  FFE3   	movff	btemp+19,plusw1
 12081  012ABC  0EF2               	movlw	-14
 12082  012ABE  0060  F057  FFE3   	movff	btemp+20,plusw1
 12083  012AC4  0EF3               	movlw	-13
 12084  012AC6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12085  012ACC  0EF4               	movlw	-12
 12086  012ACE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12087  012AD4  0EF5               	movlw	-11
 12088  012AD6  0060  F063  FFE3   	movff	btemp+23,plusw1
 12089  012ADC  D729               	goto	l12421
 12090  012ADE                     l12437:
 12091                           
 12092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12093                           ;stkvar	_ct @ sp[(-32)+26]
 12094  012ADE  0EFA               	movlw	-6
 12095  012AE0  006F FF8C  F001    	movff	plusw1,btemp
 12096  012AE6  0E66               	movlw	102
 12097  012AE8  1801               	xorwf	btemp^0,w,c
 12098  012AEA  A4D8               	btfss	status,2,c
 12099  012AEC  D06E               	goto	l12449
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12102                           ;stkvar	_fmt @ sp[(-32)+-4]
 12103  012AEE  0EDC               	movlw	-36
 12104  012AF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12105  012AF6  0EDD               	movlw	-35
 12106  012AF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12107  012AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12108  012B04  006F FF77 FFF7     	movff	postdec2,tblptrh
 12109  012B0A                     	if	0	;tblptru may be non-zero
 12110  012B0A                     	endif
 12111  012B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12112  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12113  012B0C  6EF8               	movwf	tblptru,c
 12114  012B0E                     	endif
 12115                           
 12116                           ;stkvar	_c @ sp[(-32)+31]
 12117  012B0E  0008               	tblrd		*
 12118  012B10  0EFF               	movlw	-1
 12119  012B12  006F FFD7 FFE3     	movff	tablat,plusw1
 12120                           
 12121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12122                           ;stkvar	_fmt @ sp[(-32)+-4]
 12123  012B18  0EDC               	movlw	-36
 12124  012B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12125  012B20  0EDD               	movlw	-35
 12126  012B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12127  012B28  2ADE               	incf	postinc2,f,c
 12128  012B2A  0E00               	movlw	0
 12129  012B2C  22DD               	addwfc	postdec2,f,c
 12130                           
 12131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12132                           ;stkvar	_ap @ sp[(-32)+-6]
 12133  012B2E  0EDA               	movlw	-38
 12134  012B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 12135  012B36  0EDB               	movlw	-37
 12136  012B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 12137  012B3E  0E04               	movlw	4
 12138  012B40  5EDE               	subwf	postinc2,f,c
 12139  012B42  0E00               	movlw	0
 12140  012B44  5ADD               	subwfb	postdec2,f,c
 12141  012B46  006F FF78  F00B    	movff	postinc2,btemp+10
 12142  012B4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12143  012B52  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12144  012B58  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12145  012B5E  006F FF78  F009    	movff	postinc2,btemp+8
 12146  012B64  006F FF78  F00A    	movff	postinc2,btemp+9
 12147  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 12148  012B70  006F FF78  F00C    	movff	postinc2,btemp+11
 12149                           
 12150                           ;stkvar	_f @ sp[(-32)+22]
 12151  012B76  0EF6               	movlw	-10
 12152  012B78  0060  F027  FFE3   	movff	btemp+8,plusw1
 12153  012B7E  0EF7               	movlw	-9
 12154  012B80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12155  012B86  0EF8               	movlw	-8
 12156  012B88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12157  012B8E  0EF9               	movlw	-7
 12158  012B90  0060  F033  FFE3   	movff	btemp+11,plusw1
 12159  012B96                     l12445:
 12160                           
 12161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12162                           ;stkvar	_c @ sp[(-32)+31]
 12163  012B96  0EFF               	movlw	-1
 12164  012B98  50E3               	movf	plusw1,w,c
 12165  012B9A  6EE6               	movwf	postinc1,c
 12166                           
 12167                           ;stkvar	_f @ sp[(-33)+22]
 12168  012B9C  0EF5               	movlw	-11
 12169  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12170  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12171  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12172  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12173                           
 12174                           ;stkvar	_fp @ sp[(-37)+-2]
 12175  012BB6  0ED9               	movlw	-39
 12176  012BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  012BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  012BC4  EC00  F080         	call	_efgtoa	;wreg free
 12179  012BC8  D3B6               	goto	l2371
 12180  012BCA                     l12449:
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12183  012BCA  0E02               	movlw	2
 12184  012BCC  6EE6               	movwf	postinc1,c
 12185  012BCE  0E00               	movlw	0
 12186  012BD0  6EE6               	movwf	postinc1,c
 12187  012BD2  0EED               	movlw	low STR_83
 12188  012BD4  6EE6               	movwf	postinc1,c
 12189  012BD6  0EFF               	movlw	high STR_83
 12190  012BD8  6EE6               	movwf	postinc1,c
 12191                           
 12192                           ;stkvar	_ct @ sp[(-36)+26]
 12193  012BDA  0EF6               	movlw	246
 12194  012BDC  24E1               	addwf	fsr1l,w,c
 12195  012BDE  6E01               	movwf	btemp^0,c
 12196  012BE0  0EFF               	movlw	255
 12197  012BE2  20E2               	addwfc	fsr1h,w,c
 12198  012BE4  6E02               	movwf	(btemp+1)^0,c
 12199  012BE6  0060  F007  FFE6   	movff	btemp,postinc1
 12200  012BEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12201  012BF2  EC10  F0C0         	call	_strncmp	;wreg free
 12202  012BF6  5001               	movf	btemp^0,w,c
 12203  012BF8  1002               	iorwf	(btemp+1)^0,w,c
 12204  012BFA  A4D8               	btfss	status,2,c
 12205  012BFC  D096               	goto	l12469
 12206                           
 12207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12208                           ;stkvar	_fmt @ sp[(-32)+-4]
 12209  012BFE  0EDC               	movlw	-36
 12210  012C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12211  012C06  0EDD               	movlw	-35
 12212  012C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12213  012C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12214  012C14  006F FF74  F00C    	movff	postdec2,btemp+11
 12215  012C1A  0E01               	movlw	1
 12216  012C1C  260B               	addwf	(btemp+10)^0,f,c
 12217  012C1E  0E00               	movlw	0
 12218  012C20  220C               	addwfc	(btemp+11)^0,f,c
 12219  012C22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12220  012C28  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12221  012C2E                     	if	0	;tblptru may be non-zero
 12222  012C2E                     	endif
 12223  012C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12224  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12225  012C30  6EF8               	movwf	tblptru,c
 12226  012C32                     	endif
 12227                           
 12228                           ;stkvar	_c @ sp[(-32)+31]
 12229  012C32  0008               	tblrd		*
 12230  012C34  0EFF               	movlw	-1
 12231  012C36  006F FFD7 FFE3     	movff	tablat,plusw1
 12232  012C3C  0EBF               	movlw	191
 12233  012C3E  6E0B               	movwf	(btemp+10)^0,c
 12234  012C40  0EFF               	movlw	255
 12235  012C42  6E0C               	movwf	(btemp+11)^0,c
 12236                           
 12237                           ;stkvar	_fmt @ sp[(-32)+-4]
 12238  012C44  0EDC               	movlw	-36
 12239  012C46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12240  012C4C  0EDD               	movlw	-35
 12241  012C4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12242  012C54  006F FF7B FFF6     	movff	postinc2,tblptrl
 12243  012C5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12244  012C60                     	if	0	;tblptru may be non-zero
 12245  012C60                     	endif
 12246  012C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12247  012C60  0E00               	movlw	low (__mediumconst shr (0+16))
 12248  012C62  6EF8               	movwf	tblptru,c
 12249  012C64                     	endif
 12250  012C64  0008               	tblrd		*
 12251  012C66  50F5               	movf	tablat,w,c
 12252  012C68  6E09               	movwf	(btemp+8)^0,c
 12253  012C6A  6A0A               	clrf	(btemp+9)^0,c
 12254  012C6C  500B               	movf	(btemp+10)^0,w,c
 12255  012C6E  2609               	addwf	(btemp+8)^0,f,c
 12256  012C70  500C               	movf	(btemp+11)^0,w,c
 12257  012C72  220A               	addwfc	(btemp+9)^0,f,c
 12258  012C74  500A               	movf	(btemp+9)^0,w,c
 12259  012C76  E106               	bnz	u12170
 12260  012C78  0E1A               	movlw	26
 12261  012C7A  5C09               	subwf	(btemp+8)^0,w,c
 12262  012C7C  B0D8               	btfsc	status,0,c
 12263  012C7E  D002               	goto	u12170
 12264  012C80  0E01               	movlw	1
 12265  012C82  D001               	goto	u12180
 12266  012C84                     u12170:
 12267  012C84  0E00               	movlw	0
 12268  012C86                     u12180:
 12269  012C86  6E0B               	movwf	(btemp+10)^0,c
 12270  012C88  6A0C               	clrf	(btemp+11)^0,c
 12271                           
 12272                           ;stkvar	_vfpfcnvrt$5564 @ sp[(-32)+2]
 12273  012C8A  0EE2               	movlw	-30
 12274  012C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12275  012C92  0EE3               	movlw	-29
 12276  012C94  0060  F033  FFE3   	movff	btemp+11,plusw1
 12277                           
 12278                           ;stkvar	_vfpfcnvrt$5564 @ sp[(-32)+2]
 12279  012C9A  0EE2               	movlw	-30
 12280  012C9C  006F FF8C  F001    	movff	plusw1,btemp
 12281  012CA2  0EE3               	movlw	-29
 12282  012CA4  50E3               	movf	plusw1,w,c
 12283  012CA6  1001               	iorwf	btemp^0,w,c
 12284                           
 12285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12286                           ;stkvar	_ap @ sp[(-32)+-6]
 12287                           
 12288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12289                           
 12290                           ;stkvar	_f @ sp[(-32)+22]
 12291                           
 12292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12293                           ;stkvar	_ap @ sp[(-32)+-6]
 12294  012CA8  0EDA               	movlw	-38
 12295  012CAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12296  012CB0  0EDB               	movlw	-37
 12297  012CB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12298  012CB8  0E04               	movlw	4
 12299  012CBA  5EDE               	subwf	postinc2,f,c
 12300  012CBC  0E00               	movlw	0
 12301  012CBE  5ADD               	subwfb	postdec2,f,c
 12302  012CC0  006F FF78  F00B    	movff	postinc2,btemp+10
 12303  012CC6  006F FF74  F00C    	movff	postdec2,btemp+11
 12304  012CCC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12305  012CD2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12306  012CD8  006F FF78  F009    	movff	postinc2,btemp+8
 12307  012CDE  006F FF78  F00A    	movff	postinc2,btemp+9
 12308  012CE4  006F FF78  F00B    	movff	postinc2,btemp+10
 12309  012CEA  006F FF78  F00C    	movff	postinc2,btemp+11
 12310                           
 12311                           ;stkvar	_f @ sp[(-32)+22]
 12312  012CF0  0EF6               	movlw	-10
 12313  012CF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12314  012CF8  0EF7               	movlw	-9
 12315  012CFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12316  012D00  0EF8               	movlw	-8
 12317  012D02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12318  012D08  0EF9               	movlw	-7
 12319  012D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12320                           
 12321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12322                           ;stkvar	_fmt @ sp[(-32)+-4]
 12323  012D10  0EDC               	movlw	-36
 12324  012D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 12325  012D18  0EDD               	movlw	-35
 12326  012D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12327  012D20  0E02               	movlw	2
 12328  012D22  26DE               	addwf	postinc2,f,c
 12329  012D24  0E00               	movlw	0
 12330  012D26  22DD               	addwfc	postdec2,f,c
 12331  012D28  D736               	goto	l12445
 12332  012D2A                     l12469:
 12333                           
 12334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12335                           ;stkvar	_fmt @ sp[(-32)+-4]
 12336  012D2A  0EDC               	movlw	-36
 12337  012D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12338  012D32  0EDD               	movlw	-35
 12339  012D34  006F FF8F FFDA     	movff	plusw1,fsr2h
 12340  012D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12341  012D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 12342  012D46                     	if	0	;tblptru may be non-zero
 12343  012D46                     	endif
 12344  012D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12345  012D46  0E00               	movlw	low (__mediumconst shr (0+16))
 12346  012D48  6EF8               	movwf	tblptru,c
 12347  012D4A                     	endif
 12348  012D4A  0008               	tblrd		*
 12349  012D4C  50F5               	movf	tablat,w,c
 12350  012D4E  0A73               	xorlw	115
 12351  012D50  A4D8               	btfss	status,2,c
 12352  012D52  D042               	goto	l12479
 12353                           
 12354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12355                           ;stkvar	_fmt @ sp[(-32)+-4]
 12356  012D54  0EDC               	movlw	-36
 12357  012D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12358  012D5C  0EDD               	movlw	-35
 12359  012D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12360  012D64  2ADE               	incf	postinc2,f,c
 12361  012D66  0E00               	movlw	0
 12362  012D68  22DD               	addwfc	postdec2,f,c
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12365                           ;stkvar	_ap @ sp[(-32)+-6]
 12366  012D6A  0EDA               	movlw	-38
 12367  012D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12368  012D72  0EDB               	movlw	-37
 12369  012D74  006F FF8F FFDA     	movff	plusw1,fsr2h
 12370  012D7A  0E02               	movlw	2
 12371  012D7C  5EDE               	subwf	postinc2,f,c
 12372  012D7E  0E00               	movlw	0
 12373  012D80  5ADD               	subwfb	postdec2,f,c
 12374  012D82  006F FF78  F00B    	movff	postinc2,btemp+10
 12375  012D88  006F FF74  F00C    	movff	postdec2,btemp+11
 12376  012D8E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12377  012D94  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12378  012D9A  006F FF78  F00B    	movff	postinc2,btemp+10
 12379  012DA0  006F FF74  F00C    	movff	postdec2,btemp+11
 12380                           
 12381                           ;stkvar	_cp @ sp[(-32)+29]
 12382  012DA6  0EFE               	movlw	-2
 12383  012DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12384  012DAE  0EFD               	movlw	-3
 12385  012DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12386                           
 12387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12388                           ;stkvar	_cp @ sp[(-32)+29]
 12389  012DB6  0EFD               	movlw	-3
 12390  012DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12391  012DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12392                           
 12393                           ;stkvar	_fp @ sp[(-34)+-2]
 12394  012DC4  0EDC               	movlw	-36
 12395  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12396  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12397  012DD2  ECF4  F0B9         	call	_stoa	;wreg free
 12398  012DD6  D2AF               	goto	l2371
 12399  012DD8                     l12479:
 12400                           
 12401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12402                           ;stkvar	_fmt @ sp[(-32)+-4]
 12403  012DD8  0EDC               	movlw	-36
 12404  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12405  012DE0  0EDD               	movlw	-35
 12406  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12407  012DE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12408  012DEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12409  012DF4                     	if	0	;tblptru may be non-zero
 12410  012DF4                     	endif
 12411  012DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12412  012DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12413  012DF6  6EF8               	movwf	tblptru,c
 12414  012DF8                     	endif
 12415  012DF8  0008               	tblrd		*
 12416  012DFA  50F5               	movf	tablat,w,c
 12417  012DFC  0A75               	xorlw	117
 12418  012DFE  A4D8               	btfss	status,2,c
 12419  012E00  D07C               	goto	l12489
 12420                           
 12421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12422                           ;stkvar	_fmt @ sp[(-32)+-4]
 12423  012E02  0EDC               	movlw	-36
 12424  012E04  006F FF8F FFD9     	movff	plusw1,fsr2l
 12425  012E0A  0EDD               	movlw	-35
 12426  012E0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12427  012E12  2ADE               	incf	postinc2,f,c
 12428  012E14  0E00               	movlw	0
 12429  012E16  22DD               	addwfc	postdec2,f,c
 12430                           
 12431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12432                           ;stkvar	_ap @ sp[(-32)+-6]
 12433  012E18  0EDA               	movlw	-38
 12434  012E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12435  012E20  0EDB               	movlw	-37
 12436  012E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12437  012E28  0E02               	movlw	2
 12438  012E2A  5EDE               	subwf	postinc2,f,c
 12439  012E2C  0E00               	movlw	0
 12440  012E2E  5ADD               	subwfb	postdec2,f,c
 12441  012E30  006F FF78  F00B    	movff	postinc2,btemp+10
 12442  012E36  006F FF74  F00C    	movff	postdec2,btemp+11
 12443  012E3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12444  012E42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12445  012E48  006F FF78  F00B    	movff	postinc2,btemp+10
 12446  012E4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12447  012E54  500B               	movf	(btemp+10)^0,w,c
 12448  012E56  6E11               	movwf	(btemp+16)^0,c
 12449  012E58  500C               	movf	(btemp+11)^0,w,c
 12450  012E5A  6E12               	movwf	(btemp+17)^0,c
 12451  012E5C  6A13               	clrf	(btemp+18)^0,c
 12452  012E5E  6A14               	clrf	(btemp+19)^0,c
 12453  012E60  6A15               	clrf	(btemp+20)^0,c
 12454  012E62  6A16               	clrf	(btemp+21)^0,c
 12455  012E64  6A17               	clrf	(btemp+22)^0,c
 12456  012E66  6A18               	clrf	(btemp+23)^0,c
 12457                           
 12458                           ;stkvar	_llu @ sp[(-32)+6]
 12459  012E68  0EE6               	movlw	-26
 12460  012E6A  0060  F047  FFE3   	movff	btemp+16,plusw1
 12461  012E70  0EE7               	movlw	-25
 12462  012E72  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12463  012E78  0EE8               	movlw	-24
 12464  012E7A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12465  012E80  0EE9               	movlw	-23
 12466  012E82  0060  F053  FFE3   	movff	btemp+19,plusw1
 12467  012E88  0EEA               	movlw	-22
 12468  012E8A  0060  F057  FFE3   	movff	btemp+20,plusw1
 12469  012E90  0EEB               	movlw	-21
 12470  012E92  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12471  012E98  0EEC               	movlw	-20
 12472  012E9A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12473  012EA0  0EED               	movlw	-19
 12474  012EA2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12475                           
 12476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12477                           ;stkvar	_llu @ sp[(-32)+6]
 12478  012EA8  50E1               	movf	fsr1l,w,c
 12479  012EAA  0FE6               	addlw	-26
 12480  012EAC  6ED9               	movwf	fsr2l,c
 12481  012EAE  50E2               	movf	fsr1h,w,c
 12482  012EB0  6EDA               	movwf	fsr2h,c
 12483  012EB2  0EFF               	movlw	255
 12484  012EB4  22DA               	addwfc	fsr2h,f,c
 12485  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12486  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12487  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12488  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12489  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12490  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12491  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12492  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12493                           
 12494                           ;stkvar	_fp @ sp[(-40)+-2]
 12495  012EE6  0ED6               	movlw	-42
 12496  012EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  012EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  012EF4  ECE0  F0B3         	call	_utoa	;wreg free
 12499  012EF8  D21E               	goto	l2371
 12500  012EFA                     l12489:
 12501                           
 12502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12503  012EFA  0E02               	movlw	2
 12504  012EFC  6EE6               	movwf	postinc1,c
 12505  012EFE  0E00               	movlw	0
 12506  012F00  6EE6               	movwf	postinc1,c
 12507  012F02  0EF3               	movlw	low STR_88
 12508  012F04  6EE6               	movwf	postinc1,c
 12509  012F06  0EFF               	movlw	high STR_88
 12510  012F08  6EE6               	movwf	postinc1,c
 12511                           
 12512                           ;stkvar	_fmt @ sp[(-36)+-4]
 12513  012F0A  0ED8               	movlw	-40
 12514  012F0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12515  012F12  0ED9               	movlw	-39
 12516  012F14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12517  012F1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12518  012F20  006F FF74  F00C    	movff	postdec2,btemp+11
 12519  012F26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12520  012F2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12521  012F32  EC10  F0C0         	call	_strncmp	;wreg free
 12522  012F36  5001               	movf	btemp^0,w,c
 12523  012F38  1002               	iorwf	(btemp+1)^0,w,c
 12524  012F3A  A4D8               	btfss	status,2,c
 12525  012F3C  D039               	goto	l12499
 12526                           
 12527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12528                           ;stkvar	_fmt @ sp[(-32)+-4]
 12529  012F3E  0EDC               	movlw	-36
 12530  012F40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12531  012F46  0EDD               	movlw	-35
 12532  012F48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12533  012F4E  0E02               	movlw	2
 12534  012F50  26DE               	addwf	postinc2,f,c
 12535  012F52  0E00               	movlw	0
 12536  012F54  22DD               	addwfc	postdec2,f,c
 12537                           
 12538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12539                           ;stkvar	_ap @ sp[(-32)+-6]
 12540  012F56  0EDA               	movlw	-38
 12541  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 12542  012F5E  0EDB               	movlw	-37
 12543  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 12544  012F66  0E04               	movlw	4
 12545  012F68  5EDE               	subwf	postinc2,f,c
 12546  012F6A  0E00               	movlw	0
 12547  012F6C  5ADD               	subwfb	postdec2,f,c
 12548  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 12549  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 12550  012F7A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12551  012F80  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12552  012F86  006F FF78  F009    	movff	postinc2,btemp+8
 12553  012F8C  006F FF78  F00A    	movff	postinc2,btemp+9
 12554  012F92  006F FF78  F00B    	movff	postinc2,btemp+10
 12555  012F98  006F FF78  F00C    	movff	postinc2,btemp+11
 12556  012F9E  5009               	movf	(btemp+8)^0,w,c
 12557  012FA0  6E11               	movwf	(btemp+16)^0,c
 12558  012FA2  500A               	movf	(btemp+9)^0,w,c
 12559  012FA4  6E12               	movwf	(btemp+17)^0,c
 12560  012FA6  500B               	movf	(btemp+10)^0,w,c
 12561  012FA8  6E13               	movwf	(btemp+18)^0,c
 12562  012FAA  500C               	movf	(btemp+11)^0,w,c
 12563  012FAC  6E14               	movwf	(btemp+19)^0,c
 12564  012FAE  D758               	goto	L10
 12565  012FB0                     l12499:
 12566                           
 12567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12568                           ;stkvar	_fmt @ sp[(-32)+-4]
 12569  012FB0  0EDC               	movlw	-36
 12570  012FB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12571  012FB8  0EDD               	movlw	-35
 12572  012FBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12573  012FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12574  012FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12575  012FCC                     	if	0	;tblptru may be non-zero
 12576  012FCC                     	endif
 12577  012FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12578  012FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 12579  012FCE  6EF8               	movwf	tblptru,c
 12580  012FD0                     	endif
 12581  012FD0  0008               	tblrd		*
 12582  012FD2  50F5               	movf	tablat,w,c
 12583  012FD4  0A78               	xorlw	120
 12584  012FD6  B4D8               	btfsc	status,2,c
 12585  012FD8  D015               	goto	u12240
 12586                           
 12587                           ;stkvar	_fmt @ sp[(-32)+-4]
 12588  012FDA  0EDC               	movlw	-36
 12589  012FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12590  012FE2  0EDD               	movlw	-35
 12591  012FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12592  012FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12593  012FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12594  012FF6                     	if	0	;tblptru may be non-zero
 12595  012FF6                     	endif
 12596  012FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12597  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12598  012FF8  6EF8               	movwf	tblptru,c
 12599  012FFA                     	endif
 12600  012FFA  0008               	tblrd		*
 12601  012FFC  50F5               	movf	tablat,w,c
 12602  012FFE  0A58               	xorlw	88
 12603  013000  A4D8               	btfss	status,2,c
 12604  013002  D094               	goto	l12513
 12605  013004                     u12240:
 12606                           
 12607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12608                           ;stkvar	_fmt @ sp[(-32)+-4]
 12609  013004  0EDC               	movlw	-36
 12610  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 12611  01300C  0EDD               	movlw	-35
 12612  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12613  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 12614  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12615  013020                     	if	0	;tblptru may be non-zero
 12616  013020                     	endif
 12617  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12618  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 12619  013022  6EF8               	movwf	tblptru,c
 12620  013024                     	endif
 12621                           
 12622                           ;stkvar	_c @ sp[(-32)+31]
 12623  013024  0008               	tblrd		*
 12624  013026  0EFF               	movlw	-1
 12625  013028  006F FFD7 FFE3     	movff	tablat,plusw1
 12626                           
 12627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12628                           ;stkvar	_fmt @ sp[(-32)+-4]
 12629  01302E  0EDC               	movlw	-36
 12630  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 12631  013036  0EDD               	movlw	-35
 12632  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 12633  01303E  2ADE               	incf	postinc2,f,c
 12634  013040  0E00               	movlw	0
 12635  013042  22DD               	addwfc	postdec2,f,c
 12636                           
 12637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12638                           ;stkvar	_ap @ sp[(-32)+-6]
 12639  013044  0EDA               	movlw	-38
 12640  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 12641  01304C  0EDB               	movlw	-37
 12642  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12643  013054  0E02               	movlw	2
 12644  013056  5EDE               	subwf	postinc2,f,c
 12645  013058  0E00               	movlw	0
 12646  01305A  5ADD               	subwfb	postdec2,f,c
 12647  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 12648  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 12649  013068  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12650  01306E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12651  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 12652  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 12653  013080  500B               	movf	(btemp+10)^0,w,c
 12654  013082  6E11               	movwf	(btemp+16)^0,c
 12655  013084  500C               	movf	(btemp+11)^0,w,c
 12656  013086  6E12               	movwf	(btemp+17)^0,c
 12657  013088  6A13               	clrf	(btemp+18)^0,c
 12658  01308A  6A14               	clrf	(btemp+19)^0,c
 12659  01308C  6A15               	clrf	(btemp+20)^0,c
 12660  01308E  6A16               	clrf	(btemp+21)^0,c
 12661  013090  6A17               	clrf	(btemp+22)^0,c
 12662  013092  6A18               	clrf	(btemp+23)^0,c
 12663                           
 12664                           ;stkvar	_llu @ sp[(-32)+6]
 12665  013094  0EE6               	movlw	-26
 12666  013096  0060  F047  FFE3   	movff	btemp+16,plusw1
 12667  01309C  0EE7               	movlw	-25
 12668  01309E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12669  0130A4  0EE8               	movlw	-24
 12670  0130A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12671  0130AC  0EE9               	movlw	-23
 12672  0130AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 12673  0130B4  0EEA               	movlw	-22
 12674  0130B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 12675  0130BC  0EEB               	movlw	-21
 12676  0130BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12677  0130C4  0EEC               	movlw	-20
 12678  0130C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12679  0130CC  0EED               	movlw	-19
 12680  0130CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12681                           
 12682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12683                           ;stkvar	_c @ sp[(-32)+31]
 12684  0130D4  0EFF               	movlw	-1
 12685  0130D6  50E3               	movf	plusw1,w,c
 12686  0130D8  6EE6               	movwf	postinc1,c
 12687                           
 12688                           ;stkvar	_llu @ sp[(-33)+6]
 12689  0130DA  50E1               	movf	fsr1l,w,c
 12690  0130DC  0FE5               	addlw	-27
 12691  0130DE  6ED9               	movwf	fsr2l,c
 12692  0130E0  50E2               	movf	fsr1h,w,c
 12693  0130E2  6EDA               	movwf	fsr2h,c
 12694  0130E4  0EFF               	movlw	255
 12695  0130E6  22DA               	addwfc	fsr2h,f,c
 12696  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 12697  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12698  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 12699  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 12700  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 12701  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 12702  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 12703  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 12704                           
 12705                           ;stkvar	_fp @ sp[(-41)+-2]
 12706  013118  0ED5               	movlw	-43
 12707  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 12708  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 12709  013126  EC4D  F0B0         	call	_xtoa	;wreg free
 12710  01312A  D105               	goto	l2371
 12711  01312C                     l12513:
 12712                           
 12713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12714  01312C  0E02               	movlw	2
 12715  01312E  6EE6               	movwf	postinc1,c
 12716  013130  0E00               	movlw	0
 12717  013132  6EE6               	movwf	postinc1,c
 12718  013134  0EF6               	movlw	low STR_93
 12719  013136  6EE6               	movwf	postinc1,c
 12720  013138  0EFF               	movlw	high STR_93
 12721  01313A  6EE6               	movwf	postinc1,c
 12722                           
 12723                           ;stkvar	_fmt @ sp[(-36)+-4]
 12724  01313C  0ED8               	movlw	-40
 12725  01313E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12726  013144  0ED9               	movlw	-39
 12727  013146  006F FF8F FFDA     	movff	plusw1,fsr2h
 12728  01314C  006F FF78  F00B    	movff	postinc2,btemp+10
 12729  013152  006F FF74  F00C    	movff	postdec2,btemp+11
 12730  013158  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12731  01315E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12732  013164  EC10  F0C0         	call	_strncmp	;wreg free
 12733  013168  5001               	movf	btemp^0,w,c
 12734  01316A  1002               	iorwf	(btemp+1)^0,w,c
 12735  01316C  B4D8               	btfsc	status,2,c
 12736  01316E  D022               	goto	u12260
 12737  013170  0E02               	movlw	2
 12738  013172  6EE6               	movwf	postinc1,c
 12739  013174  0E00               	movlw	0
 12740  013176  6EE6               	movwf	postinc1,c
 12741  013178  0EE7               	movlw	low STR_97
 12742  01317A  6EE6               	movwf	postinc1,c
 12743  01317C  0EFF               	movlw	high STR_97
 12744  01317E  6EE6               	movwf	postinc1,c
 12745                           
 12746                           ;stkvar	_fmt @ sp[(-36)+-4]
 12747  013180  0ED8               	movlw	-40
 12748  013182  006F FF8F FFD9     	movff	plusw1,fsr2l
 12749  013188  0ED9               	movlw	-39
 12750  01318A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12751  013190  006F FF78  F00B    	movff	postinc2,btemp+10
 12752  013196  006F FF74  F00C    	movff	postdec2,btemp+11
 12753  01319C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12754  0131A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12755  0131A8  EC10  F0C0         	call	_strncmp	;wreg free
 12756  0131AC  5001               	movf	btemp^0,w,c
 12757  0131AE  1002               	iorwf	(btemp+1)^0,w,c
 12758  0131B0  A4D8               	btfss	status,2,c
 12759  0131B2  D058               	goto	l12527
 12760  0131B4                     u12260:
 12761                           
 12762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12763                           ;stkvar	_fmt @ sp[(-32)+-4]
 12764  0131B4  0EDC               	movlw	-36
 12765  0131B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12766  0131BC  0EDD               	movlw	-35
 12767  0131BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12768  0131C4  006F FF78  F00B    	movff	postinc2,btemp+10
 12769  0131CA  006F FF74  F00C    	movff	postdec2,btemp+11
 12770  0131D0  0E01               	movlw	1
 12771  0131D2  260B               	addwf	(btemp+10)^0,f,c
 12772  0131D4  0E00               	movlw	0
 12773  0131D6  220C               	addwfc	(btemp+11)^0,f,c
 12774  0131D8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12775  0131DE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12776  0131E4                     	if	0	;tblptru may be non-zero
 12777  0131E4                     	endif
 12778  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12779  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 12780  0131E6  6EF8               	movwf	tblptru,c
 12781  0131E8                     	endif
 12782                           
 12783                           ;stkvar	_c @ sp[(-32)+31]
 12784  0131E8  0008               	tblrd		*
 12785  0131EA  0EFF               	movlw	-1
 12786  0131EC  006F FFD7 FFE3     	movff	tablat,plusw1
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12789                           ;stkvar	_fmt @ sp[(-32)+-4]
 12790  0131F2  0EDC               	movlw	-36
 12791  0131F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12792  0131FA  0EDD               	movlw	-35
 12793  0131FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12794  013202  0E02               	movlw	2
 12795  013204  26DE               	addwf	postinc2,f,c
 12796  013206  0E00               	movlw	0
 12797  013208  22DD               	addwfc	postdec2,f,c
 12798                           
 12799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12800                           ;stkvar	_ap @ sp[(-32)+-6]
 12801  01320A  0EDA               	movlw	-38
 12802  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12803  013212  0EDB               	movlw	-37
 12804  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 12805  01321A  0E04               	movlw	4
 12806  01321C  5EDE               	subwf	postinc2,f,c
 12807  01321E  0E00               	movlw	0
 12808  013220  5ADD               	subwfb	postdec2,f,c
 12809  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 12810  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 12811  01322E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12812  013234  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12813  01323A  006F FF78  F009    	movff	postinc2,btemp+8
 12814  013240  006F FF78  F00A    	movff	postinc2,btemp+9
 12815  013246  006F FF78  F00B    	movff	postinc2,btemp+10
 12816  01324C  006F FF78  F00C    	movff	postinc2,btemp+11
 12817  013252  5009               	movf	(btemp+8)^0,w,c
 12818  013254  6E11               	movwf	(btemp+16)^0,c
 12819  013256  500A               	movf	(btemp+9)^0,w,c
 12820  013258  6E12               	movwf	(btemp+17)^0,c
 12821  01325A  500B               	movf	(btemp+10)^0,w,c
 12822  01325C  6E13               	movwf	(btemp+18)^0,c
 12823  01325E  500C               	movf	(btemp+11)^0,w,c
 12824  013260  6E14               	movwf	(btemp+19)^0,c
 12825  013262  D714               	goto	L11
 12826  013264                     l12527:
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12829                           ;stkvar	_fmt @ sp[(-32)+-4]
 12830  013264  0EDC               	movlw	-36
 12831  013266  006F FF8F FFD9     	movff	plusw1,fsr2l
 12832  01326C  0EDD               	movlw	-35
 12833  01326E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12834  013274  006F FF7B FFF6     	movff	postinc2,tblptrl
 12835  01327A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12836  013280                     	if	0	;tblptru may be non-zero
 12837  013280                     	endif
 12838  013280                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12839  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 12840  013282  6EF8               	movwf	tblptru,c
 12841  013284                     	endif
 12842  013284  0008               	tblrd		*
 12843  013286  50F5               	movf	tablat,w,c
 12844  013288  0A25               	xorlw	37
 12845  01328A  A4D8               	btfss	status,2,c
 12846  01328C  D01A               	goto	l12537
 12847                           
 12848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12849                           ;stkvar	_fmt @ sp[(-32)+-4]
 12850  01328E  0EDC               	movlw	-36
 12851  013290  006F FF8F FFD9     	movff	plusw1,fsr2l
 12852  013296  0EDD               	movlw	-35
 12853  013298  006F FF8F FFDA     	movff	plusw1,fsr2h
 12854  01329E  2ADE               	incf	postinc2,f,c
 12855  0132A0  0E00               	movlw	0
 12856  0132A2  22DD               	addwfc	postdec2,f,c
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12859                           ;stkvar	_fp @ sp[(-32)+-2]
 12860  0132A4  0EDE               	movlw	-34
 12861  0132A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12862  0132AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12863  0132B2  0E25               	movlw	37
 12864  0132B4  6EE6               	movwf	postinc1,c
 12865  0132B6  0E00               	movlw	0
 12866  0132B8  6EE6               	movwf	postinc1,c
 12867  0132BA  ECC4  F0CB         	call	_fputc	;wreg free
 12868  0132BE                     l12533:
 12869                           
 12870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12871  0132BE  0E01               	movlw	1
 12872  0132C0  D00C               	goto	L12
 12873  0132C2                     l12537:
 12874                           
 12875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12876                           ;stkvar	_fmt @ sp[(-32)+-4]
 12877  0132C2  0EDC               	movlw	-36
 12878  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12879  0132CA  0EDD               	movlw	-35
 12880  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12881  0132D2  2ADE               	incf	postinc2,f,c
 12882  0132D4  0E00               	movlw	0
 12883  0132D6  22DD               	addwfc	postdec2,f,c
 12884                           
 12885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12886  0132D8  0E00               	movlw	0
 12887  0132DA                     L12:
 12888  0132DA  6E01               	movwf	btemp^0,c
 12889  0132DC  0E00               	movlw	0
 12890  0132DE  6E02               	movwf	(btemp+1)^0,c
 12891  0132E0  D02A               	goto	l2371
 12892  0132E2                     l12543:
 12893                           
 12894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12895                           ;stkvar	_fp @ sp[(-32)+-2]
 12896  0132E2  0EDE               	movlw	-34
 12897  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12898  0132EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12899                           
 12900                           ;stkvar	_fmt @ sp[(-34)+-4]
 12901  0132F0  0EDA               	movlw	-38
 12902  0132F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12903  0132F8  0EDB               	movlw	-37
 12904  0132FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12905  013300  006F FF7B FFF6     	movff	postinc2,tblptrl
 12906  013306  006F FF77 FFF7     	movff	postdec2,tblptrh
 12907  01330C                     	if	0	;tblptru may be non-zero
 12908  01330C                     	endif
 12909  01330C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12910  01330C  0E00               	movlw	low (__mediumconst shr (0+16))
 12911  01330E  6EF8               	movwf	tblptru,c
 12912  013310                     	endif
 12913  013310  0008               	tblrd		*
 12914  013312  50F5               	movf	tablat,w,c
 12915  013314  6EE6               	movwf	postinc1,c
 12916  013316  0E00               	movlw	0
 12917  013318  6EE6               	movwf	postinc1,c
 12918  01331A  ECC4  F0CB         	call	_fputc	;wreg free
 12919                           
 12920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12921                           ;stkvar	_fmt @ sp[(-32)+-4]
 12922  01331E  0EDC               	movlw	-36
 12923  013320  006F FF8F FFD9     	movff	plusw1,fsr2l
 12924  013326  0EDD               	movlw	-35
 12925  013328  006F FF8F FFDA     	movff	plusw1,fsr2h
 12926  01332E  2ADE               	incf	postinc2,f,c
 12927  013330  0E00               	movlw	0
 12928  013332  22DD               	addwfc	postdec2,f,c
 12929  013334  D7C4               	goto	l12533
 12930  013336                     l2371:
 12931                           
 12932                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12933  013336  0EDA               	movlw	218
 12934  013338  26E1               	addwf	fsr1l,f,c
 12935  01333A  0EFF               	movlw	255
 12936  01333C  22E2               	addwfc	fsr1h,f,c
 12937  01333E  0012               	return		;funcret
 12938  013340                     __end_of_vfpfcnvrt:
 12939                           	opt callstack 0
 12940                           
 12941 ;; *************** function _xtoa *****************
 12942 ;; Defined at:
 12943 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12946 ;;		 -> f(6), NULL(0), 
 12947 ;;  d               8  [STACK] unsigned long long 
 12948 ;;  x               1  [STACK] unsigned char 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  n               8  [STACK] unsigned long long 
 12951 ;;  c               2  [STACK] int 
 12952 ;;  i               2  [STACK] int 
 12953 ;;  w               2  [STACK] int 
 12954 ;;  p               2  [STACK] int 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  2  [STACK] int 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12968 ;;Total ram usage:        0 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:   20
 12971 ;; This function calls:
 12972 ;;		_isalpha
 12973 ;;		_isupper
 12974 ;;		_pad
 12975 ;;		_toupper
 12976 ;; This function is called by:
 12977 ;;		_vfpfcnvrt
 12978 ;; This function uses a reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text46
 12982  01609A                     __ptext46:
 12983                           	opt callstack 0
 12984  01609A                     _xtoa:
 12985                           	opt callstack 0
 12986                           
 12987                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12988  01609A  0E14               	movlw	20
 12989  01609C  26E1               	addwf	fsr1l,f,c
 12990  01609E  0E00               	movlw	0
 12991  0160A0  22E2               	addwfc	fsr1h,f,c
 12992                           
 12993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12994                           
 12995                           ;incstack = 0
 12996 ;; hardware stack exceeded
 12997  0160A2  AE3D               	btfss	(_prec+1)^0,7,c
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13000  0160A4  923E               	bcf	_flags^0,1,c
 13001                           
 13002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13003  0160A6  BE3D               	btfsc	(_prec+1)^0,7,c
 13004  0160A8  D005               	goto	u11790
 13005  0160AA  503D               	movf	(_prec+1)^0,w,c
 13006  0160AC  E110               	bnz	l12267
 13007  0160AE  043C               	decf	_prec^0,w,c
 13008  0160B0  B0D8               	btfsc	status,0,c
 13009  0160B2  D00D               	goto	l12267
 13010  0160B4                     u11790:
 13011  0160B4  0E01               	movlw	1
 13012  0160B6  6E0B               	movwf	(btemp+10)^0,c
 13013  0160B8  0E00               	movlw	0
 13014  0160BA  6E0C               	movwf	(btemp+11)^0,c
 13015                           
 13016                           ;stkvar	_p @ sp[(-20)+18]
 13017  0160BC  0EFE               	movlw	-2
 13018  0160BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13019  0160C4  0EFF               	movlw	-1
 13020  0160C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13021  0160CC  D008               	goto	l2321
 13022  0160CE                     l12267:
 13023                           
 13024                           ;stkvar	_p @ sp[(-20)+18]
 13025  0160CE  0EFE               	movlw	-2
 13026  0160D0  0060  F0F3  FFE3   	movff	_prec,plusw1
 13027  0160D6  0EFF               	movlw	-1
 13028  0160D8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13029  0160DE                     l2321:
 13030                           
 13031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13032                           ;stkvar	_w @ sp[(-20)+16]
 13033  0160DE  0EFC               	movlw	-4
 13034  0160E0  0060  F0EB  FFE3   	movff	_width,plusw1
 13035  0160E6  0EFD               	movlw	-3
 13036  0160E8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13037                           
 13038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13039  0160EE  A83E               	btfss	_flags^0,4,c
 13040  0160F0  D00B               	goto	l12273
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13043                           ;stkvar	_w @ sp[(-20)+16]
 13044  0160F2  50E1               	movf	fsr1l,w,c
 13045  0160F4  0FFC               	addlw	-4
 13046  0160F6  6ED9               	movwf	fsr2l,c
 13047  0160F8  50E2               	movf	fsr1h,w,c
 13048  0160FA  6EDA               	movwf	fsr2h,c
 13049  0160FC  0EFF               	movlw	255
 13050  0160FE  22DA               	addwfc	fsr2h,f,c
 13051  016100  0EFE               	movlw	254
 13052  016102  26DE               	addwf	postinc2,f,c
 13053  016104  0EFF               	movlw	255
 13054  016106  22DD               	addwfc	postdec2,f,c
 13055  016108                     l12273:
 13056                           
 13057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13058                           ;stkvar	_d @ sp[(-20)+-10]
 13059  016108  0EE2               	movlw	226
 13060  01610A  24E1               	addwf	fsr1l,w,c
 13061  01610C  6ED9               	movwf	fsr2l,c
 13062  01610E  0EFF               	movlw	255
 13063  016110  20E2               	addwfc	fsr1h,w,c
 13064  016112  6EDA               	movwf	fsr2h,c
 13065                           
 13066                           ;stkvar	_n @ sp[(-20)+4]
 13067  016114  0E08               	movlw	8
 13068  016116  6E01               	movwf	btemp^0,c
 13069  016118  0EF0               	movlw	-16
 13070  01611A                     us1181999:
 13071  01611A  006F FF7B FFE3     	movff	postinc2,plusw1
 13072  016120  28E8               	incf	wreg,w,c
 13073  016122  2E01               	decfsz	btemp^0,f,c
 13074  016124  D7FA               	bra	us1181999
 13075                           
 13076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13077  016126  0E4F               	movlw	79
 13078  016128  6E0B               	movwf	(btemp+10)^0,c
 13079  01612A  0E00               	movlw	0
 13080  01612C  6E0C               	movwf	(btemp+11)^0,c
 13081                           
 13082                           ;stkvar	_i @ sp[(-20)+14]
 13083  01612E  0EFA               	movlw	-6
 13084  016130  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13085  016136  0EFB               	movlw	-5
 13086  016138  0060  F033  FFE3   	movff	btemp+11,plusw1
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13089  01613E  0102               	movlb	2	; () banked
 13090  016140  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13093  016142  D0EE               	goto	l12311
 13094  016144                     l12279:
 13095                           
 13096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13097                           ;stkvar	_i @ sp[(-20)+14]
 13098  016144  50E1               	movf	fsr1l,w,c
 13099  016146  0FFA               	addlw	-6
 13100  016148  6ED9               	movwf	fsr2l,c
 13101  01614A  50E2               	movf	fsr1h,w,c
 13102  01614C  6EDA               	movwf	fsr2h,c
 13103  01614E  0EFF               	movlw	255
 13104  016150  22DA               	addwfc	fsr2h,f,c
 13105  016152  06DE               	decf	postinc2,f,c
 13106  016154  0E00               	movlw	0
 13107  016156  5ADD               	subwfb	postdec2,f,c
 13108                           
 13109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13110                           ;stkvar	_n @ sp[(-20)+4]
 13111  016158  0EF0               	movlw	-16
 13112  01615A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13113  016160  0EF1               	movlw	-15
 13114  016162  006F FF8C  F00C    	movff	plusw1,btemp+11
 13115  016168  0E0F               	movlw	15
 13116  01616A  160B               	andwf	(btemp+10)^0,f,c
 13117  01616C  0E00               	movlw	0
 13118  01616E  160C               	andwf	(btemp+11)^0,f,c
 13119                           
 13120                           ;stkvar	_c @ sp[(-20)+12]
 13121  016170  0EF8               	movlw	-8
 13122  016172  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13123  016178  0EF9               	movlw	-7
 13124  01617A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13125                           
 13126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13127                           ;stkvar	_c @ sp[(-20)+12]
 13128  016180  0EF9               	movlw	-7
 13129  016182  BEE3               	btfsc	plusw1,7,c
 13130  016184  D00F               	goto	l12287
 13131  016186  0EF9               	movlw	-7
 13132  016188  50E3               	movf	plusw1,w,c
 13133  01618A  E108               	bnz	u11820
 13134  01618C  0EF8               	movlw	-8
 13135  01618E  006F FF8C  F001    	movff	plusw1,btemp
 13136  016194  0E0A               	movlw	10
 13137  016196  5E01               	subwf	btemp^0,f,c
 13138  016198  A0D8               	btfss	status,0,c
 13139  01619A  D004               	goto	l12287
 13140  01619C                     u11820:
 13141                           
 13142                           ;stkvar	_c @ sp[(-20)+12]
 13143  01619C  0EF8               	movlw	-8
 13144  01619E  50E3               	movf	plusw1,w,c
 13145  0161A0  0F57               	addlw	87
 13146  0161A2  D003               	goto	L13
 13147  0161A4                     l12287:
 13148                           
 13149                           ;stkvar	_c @ sp[(-20)+12]
 13150  0161A4  0EF8               	movlw	-8
 13151  0161A6  50E3               	movf	plusw1,w,c
 13152  0161A8  0F30               	addlw	48
 13153  0161AA                     L13:
 13154  0161AA  6E0B               	movwf	(btemp+10)^0,c
 13155  0161AC  0EF9               	movlw	-7
 13156  0161AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13157  0161B4  0E00               	movlw	0
 13158  0161B6  220C               	addwfc	(btemp+11)^0,f,c
 13159                           
 13160                           ;stkvar	_c @ sp[(-20)+12]
 13161  0161B8  0EF8               	movlw	-8
 13162  0161BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13163  0161C0  0EF9               	movlw	-7
 13164  0161C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13165  0161C8  0EBF               	movlw	191
 13166  0161CA  6E0B               	movwf	(btemp+10)^0,c
 13167  0161CC  0EFF               	movlw	255
 13168  0161CE  6E0C               	movwf	(btemp+11)^0,c
 13169                           
 13170                           ;stkvar	_x @ sp[(-20)+-11]
 13171  0161D0  0EE1               	movlw	-31
 13172  0161D2  50E3               	movf	plusw1,w,c
 13173  0161D4  6E09               	movwf	(btemp+8)^0,c
 13174  0161D6  6A0A               	clrf	(btemp+9)^0,c
 13175  0161D8  500B               	movf	(btemp+10)^0,w,c
 13176  0161DA  2609               	addwf	(btemp+8)^0,f,c
 13177  0161DC  500C               	movf	(btemp+11)^0,w,c
 13178  0161DE  220A               	addwfc	(btemp+9)^0,f,c
 13179  0161E0  500A               	movf	(btemp+9)^0,w,c
 13180  0161E2  E106               	bnz	u11830
 13181  0161E4  0E1A               	movlw	26
 13182  0161E6  5C09               	subwf	(btemp+8)^0,w,c
 13183  0161E8  B0D8               	btfsc	status,0,c
 13184  0161EA  D002               	goto	u11830
 13185  0161EC  0E01               	movlw	1
 13186  0161EE  D001               	goto	u11840
 13187  0161F0                     u11830:
 13188  0161F0  0E00               	movlw	0
 13189  0161F2                     u11840:
 13190  0161F2  6E0B               	movwf	(btemp+10)^0,c
 13191  0161F4  6A0C               	clrf	(btemp+11)^0,c
 13192                           
 13193                           ;stkvar	_xtoa$5537 @ sp[(-20)+2]
 13194  0161F6  0EEE               	movlw	-18
 13195  0161F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13196  0161FE  0EEF               	movlw	-17
 13197  016200  0060  F033  FFE3   	movff	btemp+11,plusw1
 13198                           
 13199                           ;stkvar	_xtoa$5537 @ sp[(-20)+2]
 13200  016206  0EEE               	movlw	-18
 13201  016208  006F FF8C  F001    	movff	plusw1,btemp
 13202  01620E  0EEF               	movlw	-17
 13203  016210  50E3               	movf	plusw1,w,c
 13204  016212  1001               	iorwf	btemp^0,w,c
 13205  016214  B4D8               	btfsc	status,2,c
 13206  016216  D041               	goto	l12303
 13207  016218  0E9F               	movlw	159
 13208  01621A  6E0B               	movwf	(btemp+10)^0,c
 13209  01621C  0EFF               	movlw	255
 13210  01621E  6E0C               	movwf	(btemp+11)^0,c
 13211                           
 13212                           ;stkvar	_c @ sp[(-20)+12]
 13213  016220  0EF8               	movlw	-8
 13214  016222  006F FF8C  F009    	movff	plusw1,btemp+8
 13215  016228  0EF9               	movlw	-7
 13216  01622A  006F FF8C  F00A    	movff	plusw1,btemp+9
 13217  016230  0E20               	movlw	32
 13218  016232  1209               	iorwf	(btemp+8)^0,f,c
 13219  016234  0E00               	movlw	0
 13220  016236  120A               	iorwf	(btemp+9)^0,f,c
 13221  016238  500B               	movf	(btemp+10)^0,w,c
 13222  01623A  2609               	addwf	(btemp+8)^0,f,c
 13223  01623C  500C               	movf	(btemp+11)^0,w,c
 13224  01623E  220A               	addwfc	(btemp+9)^0,f,c
 13225  016240  500A               	movf	(btemp+9)^0,w,c
 13226  016242  E106               	bnz	u11860
 13227  016244  0E1A               	movlw	26
 13228  016246  5C09               	subwf	(btemp+8)^0,w,c
 13229  016248  B0D8               	btfsc	status,0,c
 13230  01624A  D002               	goto	u11860
 13231  01624C  0E01               	movlw	1
 13232  01624E  D001               	goto	u11870
 13233  016250                     u11860:
 13234  016250  0E00               	movlw	0
 13235  016252                     u11870:
 13236  016252  6E0B               	movwf	(btemp+10)^0,c
 13237  016254  6A0C               	clrf	(btemp+11)^0,c
 13238                           
 13239                           ;stkvar	_xtoa$5538 @ sp[(-20)+0]
 13240  016256  0EEC               	movlw	-20
 13241  016258  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13242  01625E  0EED               	movlw	-19
 13243  016260  0060  F033  FFE3   	movff	btemp+11,plusw1
 13244                           
 13245                           ;stkvar	_xtoa$5538 @ sp[(-20)+0]
 13246  016266  0EEC               	movlw	-20
 13247  016268  006F FF8C  F001    	movff	plusw1,btemp
 13248  01626E  0EED               	movlw	-19
 13249  016270  50E3               	movf	plusw1,w,c
 13250  016272  1001               	iorwf	btemp^0,w,c
 13251  016274  B4D8               	btfsc	status,2,c
 13252  016276  D011               	goto	l12303
 13253                           
 13254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13255                           ;stkvar	_c @ sp[(-20)+12]
 13256  016278  0EF8               	movlw	-8
 13257  01627A  006F FF8F FFE6     	movff	plusw1,postinc1
 13258  016280  006F FF8F FFE6     	movff	plusw1,postinc1
 13259  016286  ECFC  F0D5         	call	_toupper	;wreg free
 13260                           
 13261                           ;stkvar	_c @ sp[(-20)+12]
 13262  01628A  0EF8               	movlw	-8
 13263  01628C  0060  F007  FFE3   	movff	btemp,plusw1
 13264  016292  0EF9               	movlw	-7
 13265  016294  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13266  01629A                     l12303:
 13267                           
 13268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13269                           ;stkvar	_c @ sp[(-20)+12]
 13270                           ;stkvar	_i @ sp[(-20)+14]
 13271  01629A  0EFA               	movlw	-6
 13272  01629C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13273  0162A2  0EFB               	movlw	-5
 13274  0162A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13275  0162AA  0E97               	movlw	low _dbuf
 13276  0162AC  240B               	addwf	(btemp+10)^0,w,c
 13277  0162AE  6ED9               	movwf	fsr2l,c
 13278  0162B0  0E02               	movlw	high _dbuf
 13279  0162B2  200C               	addwfc	(btemp+11)^0,w,c
 13280  0162B4  6EDA               	movwf	fsr2h,c
 13281  0162B6  0EF8               	movlw	-8
 13282  0162B8  006F FF8F FFDF     	movff	plusw1,indf2
 13283                           
 13284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13285                           ;stkvar	_p @ sp[(-20)+18]
 13286  0162BE  50E1               	movf	fsr1l,w,c
 13287  0162C0  0FFE               	addlw	-2
 13288  0162C2  6ED9               	movwf	fsr2l,c
 13289  0162C4  50E2               	movf	fsr1h,w,c
 13290  0162C6  6EDA               	movwf	fsr2h,c
 13291  0162C8  0EFF               	movlw	255
 13292  0162CA  22DA               	addwfc	fsr2h,f,c
 13293  0162CC  06DE               	decf	postinc2,f,c
 13294  0162CE  0E00               	movlw	0
 13295  0162D0  5ADD               	subwfb	postdec2,f,c
 13296                           
 13297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13298                           ;stkvar	_w @ sp[(-20)+16]
 13299  0162D2  50E1               	movf	fsr1l,w,c
 13300  0162D4  0FFC               	addlw	-4
 13301  0162D6  6ED9               	movwf	fsr2l,c
 13302  0162D8  50E2               	movf	fsr1h,w,c
 13303  0162DA  6EDA               	movwf	fsr2h,c
 13304  0162DC  0EFF               	movlw	255
 13305  0162DE  22DA               	addwfc	fsr2h,f,c
 13306  0162E0  06DE               	decf	postinc2,f,c
 13307  0162E2  0E00               	movlw	0
 13308  0162E4  5ADD               	subwfb	postdec2,f,c
 13309                           
 13310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13311  0162E6  0E04               	movlw	4
 13312  0162E8  6E0C               	movwf	(btemp+11)^0,c
 13313                           
 13314                           ;stkvar	_n @ sp[(-20)+4]
 13315  0162EA  50E1               	movf	fsr1l,w,c
 13316  0162EC  0FF0               	addlw	-16
 13317  0162EE  6ED9               	movwf	fsr2l,c
 13318  0162F0  50E2               	movf	fsr1h,w,c
 13319  0162F2  6EDA               	movwf	fsr2h,c
 13320  0162F4  0EFF               	movlw	255
 13321  0162F6  22DA               	addwfc	fsr2h,f,c
 13322  0162F8  280C               	incf	(btemp+11)^0,w,c
 13323  0162FA  52DE               	movf	postinc2,f,c
 13324  0162FC  D00F               	goto	u11890
 13325  0162FE                     u11895:
 13326  0162FE  52DE               	movf	postinc2,f,c
 13327  016300  52DE               	movf	postinc2,f,c
 13328  016302  52DE               	movf	postinc2,f,c
 13329  016304  52DE               	movf	postinc2,f,c
 13330  016306  52DE               	movf	postinc2,f,c
 13331  016308  52DE               	movf	postinc2,f,c
 13332  01630A  90D8               	bcf	status,0,c
 13333  01630C  32DD               	rrcf	postdec2,f,c
 13334  01630E  32DD               	rrcf	postdec2,f,c
 13335  016310  32DD               	rrcf	postdec2,f,c
 13336  016312  32DD               	rrcf	postdec2,f,c
 13337  016314  32DD               	rrcf	postdec2,f,c
 13338  016316  32DD               	rrcf	postdec2,f,c
 13339  016318  32DD               	rrcf	postdec2,f,c
 13340  01631A  32DE               	rrcf	postinc2,f,c
 13341  01631C                     u11890:
 13342  01631C  2EE8               	decfsz	wreg,f,c
 13343  01631E  D7EF               	goto	u11895
 13344  016320                     l12311:
 13345                           
 13346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13347                           ;stkvar	_i @ sp[(-20)+14]
 13348  016320  0EFB               	movlw	-5
 13349  016322  BEE3               	btfsc	plusw1,7,c
 13350  016324  D03A               	goto	u11940
 13351  016326  0EFB               	movlw	-5
 13352  016328  50E3               	movf	plusw1,w,c
 13353  01632A  E108               	bnz	u11900
 13354  01632C  0EFA               	movlw	-6
 13355  01632E  006F FF8C  F001    	movff	plusw1,btemp
 13356  016334  0E02               	movlw	2
 13357  016336  5E01               	subwf	btemp^0,f,c
 13358  016338  A0D8               	btfss	status,0,c
 13359  01633A  D02F               	goto	u11940
 13360  01633C                     u11900:
 13361                           
 13362                           ;stkvar	_n @ sp[(-20)+4]
 13363  01633C  0EF0               	movlw	-16
 13364  01633E  50E3               	movf	plusw1,w,c
 13365  016340  E115               	bnz	u11911
 13366  016342  0EF1               	movlw	-15
 13367  016344  50E3               	movf	plusw1,w,c
 13368  016346  E112               	bnz	u11911
 13369  016348  0EF2               	movlw	-14
 13370  01634A  50E3               	movf	plusw1,w,c
 13371  01634C  E10F               	bnz	u11911
 13372  01634E  0EF3               	movlw	-13
 13373  016350  50E3               	movf	plusw1,w,c
 13374  016352  E10C               	bnz	u11911
 13375  016354  0EF4               	movlw	-12
 13376  016356  50E3               	movf	plusw1,w,c
 13377  016358  E109               	bnz	u11911
 13378  01635A  0EF5               	movlw	-11
 13379  01635C  50E3               	movf	plusw1,w,c
 13380  01635E  E106               	bnz	u11911
 13381  016360  0EF6               	movlw	-10
 13382  016362  50E3               	movf	plusw1,w,c
 13383  016364  E103               	bnz	u11911
 13384  016366  0EF7               	movlw	-9
 13385  016368  50E3               	movf	plusw1,w,c
 13386  01636A  A4D8               	btfss	status,2,c
 13387  01636C                     u11911:
 13388  01636C  D6EB               	goto	l12279
 13389                           
 13390                           ;stkvar	_p @ sp[(-20)+18]
 13391  01636E  0EFF               	movlw	-1
 13392  016370  BEE3               	btfsc	plusw1,7,c
 13393  016372  D007               	goto	u11920
 13394  016374  0EFF               	movlw	-1
 13395  016376  50E3               	movf	plusw1,w,c
 13396  016378  E103               	bnz	u11921
 13397  01637A  0EFE               	movlw	-2
 13398  01637C  04E3               	decf	plusw1,w,c
 13399  01637E  B0D8               	btfsc	status,0,c
 13400  016380                     u11921:
 13401  016380  D6E1               	goto	l12279
 13402  016382                     u11920:
 13403                           
 13404                           ;stkvar	_w @ sp[(-20)+16]
 13405  016382  0EFD               	movlw	-3
 13406  016384  BEE3               	btfsc	plusw1,7,c
 13407  016386  D009               	goto	u11940
 13408  016388  0EFD               	movlw	-3
 13409  01638A  50E3               	movf	plusw1,w,c
 13410  01638C  E104               	bnz	u11930
 13411  01638E  0EFC               	movlw	-4
 13412  016390  04E3               	decf	plusw1,w,c
 13413  016392  A0D8               	btfss	status,0,c
 13414  016394  D002               	goto	u11940
 13415  016396                     u11930:
 13416  016396  B23E               	btfsc	_flags^0,1,c
 13417  016398  D6D5               	goto	l12279
 13418  01639A                     u11940:
 13419                           
 13420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13421  01639A  A83E               	btfss	_flags^0,4,c
 13422  01639C  D036               	goto	l12327
 13423                           
 13424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13425                           ;stkvar	_i @ sp[(-20)+14]
 13426  01639E  50E1               	movf	fsr1l,w,c
 13427  0163A0  0FFA               	addlw	-6
 13428  0163A2  6ED9               	movwf	fsr2l,c
 13429  0163A4  50E2               	movf	fsr1h,w,c
 13430  0163A6  6EDA               	movwf	fsr2h,c
 13431  0163A8  0EFF               	movlw	255
 13432  0163AA  22DA               	addwfc	fsr2h,f,c
 13433  0163AC  06DE               	decf	postinc2,f,c
 13434  0163AE  0E00               	movlw	0
 13435  0163B0  5ADD               	subwfb	postdec2,f,c
 13436                           
 13437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13438                           ;stkvar	_x @ sp[(-20)+-11]
 13439                           ;stkvar	_i @ sp[(-20)+14]
 13440  0163B2  0EFA               	movlw	-6
 13441  0163B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13442  0163BA  0EFB               	movlw	-5
 13443  0163BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13444  0163C2  0E97               	movlw	low _dbuf
 13445  0163C4  240B               	addwf	(btemp+10)^0,w,c
 13446  0163C6  6ED9               	movwf	fsr2l,c
 13447  0163C8  0E02               	movlw	high _dbuf
 13448  0163CA  200C               	addwfc	(btemp+11)^0,w,c
 13449  0163CC  6EDA               	movwf	fsr2h,c
 13450  0163CE  0EE1               	movlw	-31
 13451  0163D0  006F FF8F FFDF     	movff	plusw1,indf2
 13452                           
 13453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13454                           ;stkvar	_i @ sp[(-20)+14]
 13455  0163D6  50E1               	movf	fsr1l,w,c
 13456  0163D8  0FFA               	addlw	-6
 13457  0163DA  6ED9               	movwf	fsr2l,c
 13458  0163DC  50E2               	movf	fsr1h,w,c
 13459  0163DE  6EDA               	movwf	fsr2h,c
 13460  0163E0  0EFF               	movlw	255
 13461  0163E2  22DA               	addwfc	fsr2h,f,c
 13462  0163E4  06DE               	decf	postinc2,f,c
 13463  0163E6  0E00               	movlw	0
 13464  0163E8  5ADD               	subwfb	postdec2,f,c
 13465                           
 13466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13467                           ;stkvar	_i @ sp[(-20)+14]
 13468  0163EA  0EFA               	movlw	-6
 13469  0163EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13470  0163F2  0EFB               	movlw	-5
 13471  0163F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13472  0163FA  0E97               	movlw	low _dbuf
 13473  0163FC  240B               	addwf	(btemp+10)^0,w,c
 13474  0163FE  6ED9               	movwf	fsr2l,c
 13475  016400  0E02               	movlw	high _dbuf
 13476  016402  200C               	addwfc	(btemp+11)^0,w,c
 13477  016404  6EDA               	movwf	fsr2h,c
 13478  016406  0E30               	movlw	48
 13479  016408  6EDF               	movwf	indf2,c
 13480  01640A                     l12327:
 13481                           
 13482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13483                           ;stkvar	_w @ sp[(-20)+16]
 13484  01640A  0EFC               	movlw	-4
 13485  01640C  006F FF8F FFE6     	movff	plusw1,postinc1
 13486  016412  006F FF8F FFE6     	movff	plusw1,postinc1
 13487                           
 13488                           ;stkvar	_i @ sp[(-22)+14]
 13489  016418  0E97               	movlw	low _dbuf
 13490  01641A  6E0B               	movwf	(btemp+10)^0,c
 13491  01641C  0E02               	movlw	high _dbuf
 13492  01641E  6E0C               	movwf	(btemp+11)^0,c
 13493  016420  0EF8               	movlw	-8
 13494  016422  50E3               	movf	plusw1,w,c
 13495  016424  260B               	addwf	(btemp+10)^0,f,c
 13496  016426  0EF9               	movlw	-7
 13497  016428  50E3               	movf	plusw1,w,c
 13498  01642A  220C               	addwfc	(btemp+11)^0,f,c
 13499  01642C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13500  016432  0060  F033  FFE6   	movff	btemp+11,postinc1
 13501                           
 13502                           ;stkvar	_fp @ sp[(-24)+-2]
 13503  016438  0EE6               	movlw	-26
 13504  01643A  006F FF8F FFE6     	movff	plusw1,postinc1
 13505  016440  006F FF8F FFE6     	movff	plusw1,postinc1
 13506  016446  EC6F  F0CD         	call	_pad	;wreg free
 13507                           
 13508                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13509  01644A  0EE1               	movlw	225
 13510  01644C  26E1               	addwf	fsr1l,f,c
 13511  01644E  0EFF               	movlw	255
 13512  016450  22E2               	addwfc	fsr1h,f,c
 13513  016452  0012               	return		;funcret
 13514  016454                     __end_of_xtoa:
 13515                           	opt callstack 0
 13516                           
 13517 ;; *************** function _toupper *****************
 13518 ;; Defined at:
 13519 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  c               2  [STACK] int 
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  2  [STACK] int 
 13526 ;; Registers used:
 13527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/2
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:   16
 13540 ;; This function calls:
 13541 ;;		_islower
 13542 ;; This function is called by:
 13543 ;;		_xtoa
 13544 ;; This function uses a reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text47
 13548  01ABF8                     __ptext47:
 13549                           	opt callstack 0
 13550  01ABF8                     _toupper:
 13551                           	opt callstack 0
 13552                           
 13553                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13554  01ABF8  52E6               	movf	postinc1,f,c
 13555  01ABFA  52E6               	movf	postinc1,f,c
 13556                           
 13557                           ;stkvar	_c @ sp[(-2)+-2]
 13558                           
 13559                           ;incstack = 0
 13560 ;; hardware stack exceeded
 13561  01ABFC  0EFC               	movlw	-4
 13562  01ABFE  50E3               	movf	plusw1,w,c
 13563  01AC00  0F9F               	addlw	159
 13564  01AC02  6E0B               	movwf	(btemp+10)^0,c
 13565  01AC04  0EFD               	movlw	-3
 13566  01AC06  006F FF8C  F00C    	movff	plusw1,btemp+11
 13567  01AC0C  0EFF               	movlw	255
 13568  01AC0E  220C               	addwfc	(btemp+11)^0,f,c
 13569  01AC10  500C               	movf	(btemp+11)^0,w,c
 13570  01AC12  E106               	bnz	u6200
 13571  01AC14  0E1A               	movlw	26
 13572  01AC16  5C0B               	subwf	(btemp+10)^0,w,c
 13573  01AC18  B0D8               	btfsc	status,0,c
 13574  01AC1A  D002               	goto	u6200
 13575  01AC1C  0E01               	movlw	1
 13576  01AC1E  D001               	goto	u6210
 13577  01AC20                     u6200:
 13578  01AC20  0E00               	movlw	0
 13579  01AC22                     u6210:
 13580  01AC22  6E0B               	movwf	(btemp+10)^0,c
 13581  01AC24  6A0C               	clrf	(btemp+11)^0,c
 13582                           
 13583                           ;stkvar	_toupper$6344 @ sp[(-2)+0]
 13584  01AC26  0EFE               	movlw	-2
 13585  01AC28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13586  01AC2E  0EFF               	movlw	-1
 13587  01AC30  0060  F033  FFE3   	movff	btemp+11,plusw1
 13588                           
 13589                           ;stkvar	_toupper$6344 @ sp[(-2)+0]
 13590  01AC36  0EFE               	movlw	-2
 13591  01AC38  006F FF8C  F001    	movff	plusw1,btemp
 13592  01AC3E  0EFF               	movlw	-1
 13593  01AC40  50E3               	movf	plusw1,w,c
 13594  01AC42  1001               	iorwf	btemp^0,w,c
 13595  01AC44  B4D8               	btfsc	status,2,c
 13596  01AC46  D00D               	goto	l8013
 13597                           
 13598                           ;stkvar	_c @ sp[(-2)+-2]
 13599  01AC48  0EFC               	movlw	-4
 13600  01AC4A  006F FF8C  F001    	movff	plusw1,btemp
 13601  01AC50  0EFD               	movlw	-3
 13602  01AC52  006F FF8C  F002    	movff	plusw1,btemp+1
 13603  01AC58  0E5F               	movlw	95
 13604  01AC5A  1601               	andwf	btemp^0,f,c
 13605  01AC5C  0E00               	movlw	0
 13606  01AC5E  1602               	andwf	(btemp+1)^0,f,c
 13607  01AC60  D008               	goto	l3488
 13608  01AC62                     l8013:
 13609                           
 13610                           ;stkvar	_c @ sp[(-2)+-2]
 13611  01AC62  0EFC               	movlw	-4
 13612  01AC64  006F FF8C  F001    	movff	plusw1,btemp
 13613  01AC6A  0EFD               	movlw	-3
 13614  01AC6C  006F FF8C  F002    	movff	plusw1,btemp+1
 13615  01AC72                     l3488:
 13616                           
 13617                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13618  01AC72  52E5               	movf	postdec1,f,c
 13619  01AC74  52E5               	movf	postdec1,f,c
 13620  01AC76  52E5               	movf	postdec1,f,c
 13621  01AC78  52E5               	movf	postdec1,f,c
 13622  01AC7A  0012               	return		;funcret
 13623  01AC7C                     __end_of_toupper:
 13624                           	opt callstack 0
 13625                           
 13626 ;; *************** function _islower *****************
 13627 ;; Defined at:
 13628 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;  c               2  [STACK] int 
 13631 ;; Auto vars:     Size  Location     Type
 13632 ;;		None
 13633 ;; Return value:  Size  Location     Type
 13634 ;;                  2  [STACK] int 
 13635 ;; Registers used:
 13636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13637 ;; Tracked objects:
 13638 ;;		On entry : 0/0
 13639 ;;		On exit  : 0/0
 13640 ;;		Unchanged: 0/0
 13641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13646 ;;Total ram usage:        0 bytes
 13647 ;; Hardware stack levels used:    1
 13648 ;; Hardware stack levels required when called:   15
 13649 ;; This function calls:
 13650 ;;		Nothing
 13651 ;; This function is called by:
 13652 ;;		_toupper
 13653 ;; This function uses a reentrant model
 13654 ;;
 13655                           
 13656                           	psect	text48
 13657  01B8E4                     __ptext48:
 13658                           	opt callstack 0
 13659  01B8E4                     _islower:
 13660                           	opt callstack 0
 13661                           
 13662                           ;stkvar	_c @ sp[(0)+-2]
 13663                           
 13664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13665                           ;incstack = 0
 13666 ;; hardware stack exceeded
 13667  01B8E4  0EFE               	movlw	-2
 13668  01B8E6  50E3               	movf	plusw1,w,c
 13669  01B8E8  0F9F               	addlw	159
 13670  01B8EA  6E0B               	movwf	(btemp+10)^0,c
 13671  01B8EC  0EFF               	movlw	-1
 13672  01B8EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13673  01B8F4  0EFF               	movlw	255
 13674  01B8F6  220C               	addwfc	(btemp+11)^0,f,c
 13675  01B8F8  500C               	movf	(btemp+11)^0,w,c
 13676  01B8FA  E106               	bnz	u5890
 13677  01B8FC  0E1A               	movlw	26
 13678  01B8FE  5C0B               	subwf	(btemp+10)^0,w,c
 13679  01B900  B0D8               	btfsc	status,0,c
 13680  01B902  D002               	goto	u5890
 13681  01B904  0E01               	movlw	1
 13682  01B906  D001               	goto	u5900
 13683  01B908                     u5890:
 13684  01B908  0E00               	movlw	0
 13685  01B90A                     u5900:
 13686  01B90A  6E01               	movwf	btemp^0,c
 13687  01B90C  6A02               	clrf	(btemp+1)^0,c
 13688                           
 13689                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13690  01B90E  52E5               	movf	postdec1,f,c
 13691  01B910  52E5               	movf	postdec1,f,c
 13692  01B912  0012               	return		;funcret
 13693  01B914                     __end_of_islower:
 13694                           	opt callstack 0
 13695                           
 13696 ;; *************** function _isalpha *****************
 13697 ;; Defined at:
 13698 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13699 ;; Parameters:    Size  Location     Type
 13700 ;;  c               2  [STACK] int 
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;		None
 13703 ;; Return value:  Size  Location     Type
 13704 ;;                  2  [STACK] int 
 13705 ;; Registers used:
 13706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/0
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;Total ram usage:        0 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; Hardware stack levels required when called:   15
 13719 ;; This function calls:
 13720 ;;		Nothing
 13721 ;; This function is called by:
 13722 ;;		_xtoa
 13723 ;; This function uses a reentrant model
 13724 ;;
 13725                           
 13726                           	psect	text49
 13727  01B570                     __ptext49:
 13728                           	opt callstack 0
 13729  01B570                     _isalpha:
 13730                           	opt callstack 0
 13731                           
 13732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13733                           ;incstack = 0
 13734 ;; hardware stack exceeded
 13735  01B570  0E9F               	movlw	159
 13736  01B572  6E0B               	movwf	(btemp+10)^0,c
 13737  01B574  0EFF               	movlw	255
 13738  01B576  6E0C               	movwf	(btemp+11)^0,c
 13739                           
 13740                           ;stkvar	_c @ sp[(0)+-2]
 13741  01B578  0EFE               	movlw	-2
 13742  01B57A  006F FF8C  F009    	movff	plusw1,btemp+8
 13743  01B580  0EFF               	movlw	-1
 13744  01B582  006F FF8C  F00A    	movff	plusw1,btemp+9
 13745  01B588  0E20               	movlw	32
 13746  01B58A  1209               	iorwf	(btemp+8)^0,f,c
 13747  01B58C  0E00               	movlw	0
 13748  01B58E  120A               	iorwf	(btemp+9)^0,f,c
 13749  01B590  500B               	movf	(btemp+10)^0,w,c
 13750  01B592  2609               	addwf	(btemp+8)^0,f,c
 13751  01B594  500C               	movf	(btemp+11)^0,w,c
 13752  01B596  220A               	addwfc	(btemp+9)^0,f,c
 13753  01B598  500A               	movf	(btemp+9)^0,w,c
 13754  01B59A  E106               	bnz	u6180
 13755  01B59C  0E1A               	movlw	26
 13756  01B59E  5C09               	subwf	(btemp+8)^0,w,c
 13757  01B5A0  B0D8               	btfsc	status,0,c
 13758  01B5A2  D002               	goto	u6180
 13759  01B5A4  0E01               	movlw	1
 13760  01B5A6  D001               	goto	u6190
 13761  01B5A8                     u6180:
 13762  01B5A8  0E00               	movlw	0
 13763  01B5AA                     u6190:
 13764  01B5AA  6E01               	movwf	btemp^0,c
 13765  01B5AC  6A02               	clrf	(btemp+1)^0,c
 13766                           
 13767                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13768  01B5AE  52E5               	movf	postdec1,f,c
 13769  01B5B0  52E5               	movf	postdec1,f,c
 13770  01B5B2  0012               	return		;funcret
 13771  01B5B4                     __end_of_isalpha:
 13772                           	opt callstack 0
 13773                           
 13774 ;; *************** function _utoa *****************
 13775 ;; Defined at:
 13776 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13779 ;;		 -> f(6), NULL(0), 
 13780 ;;  d               8  [STACK] unsigned long long 
 13781 ;; Auto vars:     Size  Location     Type
 13782 ;;  n               8  [STACK] unsigned long long 
 13783 ;;  i               2  [STACK] int 
 13784 ;;  w               2  [STACK] int 
 13785 ;;  p               2  [STACK] int 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  2  [STACK] int 
 13788 ;; Registers used:
 13789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13799 ;;Total ram usage:        0 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:   20
 13802 ;; This function calls:
 13803 ;;		___lodiv
 13804 ;;		___lomod
 13805 ;;		_pad
 13806 ;; This function is called by:
 13807 ;;		_vfpfcnvrt
 13808 ;; This function uses a reentrant model
 13809 ;;
 13810                           
 13811                           	psect	text50
 13812  0167C0                     __ptext50:
 13813                           	opt callstack 0
 13814  0167C0                     _utoa:
 13815                           	opt callstack 0
 13816                           
 13817                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13818  0167C0  0E0E               	movlw	14
 13819  0167C2  26E1               	addwf	fsr1l,f,c
 13820  0167C4  0E00               	movlw	0
 13821  0167C6  22E2               	addwfc	fsr1h,f,c
 13822                           
 13823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13824                           
 13825                           ;incstack = 0
 13826 ;; hardware stack exceeded
 13827  0167C8  AE3D               	btfss	(_prec+1)^0,7,c
 13828                           
 13829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13830  0167CA  923E               	bcf	_flags^0,1,c
 13831                           
 13832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13833  0167CC  BE3D               	btfsc	(_prec+1)^0,7,c
 13834  0167CE  D005               	goto	u11710
 13835  0167D0  503D               	movf	(_prec+1)^0,w,c
 13836  0167D2  E110               	bnz	l12227
 13837  0167D4  043C               	decf	_prec^0,w,c
 13838  0167D6  B0D8               	btfsc	status,0,c
 13839  0167D8  D00D               	goto	l12227
 13840  0167DA                     u11710:
 13841  0167DA  0E01               	movlw	1
 13842  0167DC  6E0B               	movwf	(btemp+10)^0,c
 13843  0167DE  0E00               	movlw	0
 13844  0167E0  6E0C               	movwf	(btemp+11)^0,c
 13845                           
 13846                           ;stkvar	_p @ sp[(-14)+12]
 13847  0167E2  0EFE               	movlw	-2
 13848  0167E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13849  0167EA  0EFF               	movlw	-1
 13850  0167EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13851  0167F2  D008               	goto	l2306
 13852  0167F4                     l12227:
 13853                           
 13854                           ;stkvar	_p @ sp[(-14)+12]
 13855  0167F4  0EFE               	movlw	-2
 13856  0167F6  0060  F0F3  FFE3   	movff	_prec,plusw1
 13857  0167FC  0EFF               	movlw	-1
 13858  0167FE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13859  016804                     l2306:
 13860                           
 13861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13862                           ;stkvar	_w @ sp[(-14)+10]
 13863  016804  0EFC               	movlw	-4
 13864  016806  0060  F0EB  FFE3   	movff	_width,plusw1
 13865  01680C  0EFD               	movlw	-3
 13866  01680E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13867                           
 13868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13869                           ;stkvar	_d @ sp[(-14)+-10]
 13870  016814  0EE8               	movlw	232
 13871  016816  24E1               	addwf	fsr1l,w,c
 13872  016818  6ED9               	movwf	fsr2l,c
 13873  01681A  0EFF               	movlw	255
 13874  01681C  20E2               	addwfc	fsr1h,w,c
 13875  01681E  6EDA               	movwf	fsr2h,c
 13876                           
 13877                           ;stkvar	_n @ sp[(-14)+0]
 13878  016820  0E08               	movlw	8
 13879  016822  6E01               	movwf	btemp^0,c
 13880  016824  0EF2               	movlw	-14
 13881  016826                     us1172999:
 13882  016826  006F FF7B FFE3     	movff	postinc2,plusw1
 13883  01682C  28E8               	incf	wreg,w,c
 13884  01682E  2E01               	decfsz	btemp^0,f,c
 13885  016830  D7FA               	bra	us1172999
 13886                           
 13887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13888  016832  0E4F               	movlw	79
 13889  016834  6E0B               	movwf	(btemp+10)^0,c
 13890  016836  0E00               	movlw	0
 13891  016838  6E0C               	movwf	(btemp+11)^0,c
 13892                           
 13893                           ;stkvar	_i @ sp[(-14)+8]
 13894  01683A  0EFA               	movlw	-6
 13895  01683C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13896  016842  0EFB               	movlw	-5
 13897  016844  0060  F033  FFE3   	movff	btemp+11,plusw1
 13898                           
 13899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13900  01684A  0102               	movlb	2	; () banked
 13901  01684C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13902                           
 13903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13904  01684E  D0FB               	goto	l12245
 13905  016850                     l12235:
 13906                           
 13907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13908                           ;stkvar	_i @ sp[(-14)+8]
 13909  016850  50E1               	movf	fsr1l,w,c
 13910  016852  0FFA               	addlw	-6
 13911  016854  6ED9               	movwf	fsr2l,c
 13912  016856  50E2               	movf	fsr1h,w,c
 13913  016858  6EDA               	movwf	fsr2h,c
 13914  01685A  0EFF               	movlw	255
 13915  01685C  22DA               	addwfc	fsr2h,f,c
 13916  01685E  06DE               	decf	postinc2,f,c
 13917  016860  0E00               	movlw	0
 13918  016862  5ADD               	subwfb	postdec2,f,c
 13919                           
 13920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13921  016864  0E0A               	movlw	10
 13922  016866  6EE6               	movwf	postinc1,c
 13923  016868  0E00               	movlw	0
 13924  01686A  6EE6               	movwf	postinc1,c
 13925  01686C  0E00               	movlw	0
 13926  01686E  6EE6               	movwf	postinc1,c
 13927  016870  0E00               	movlw	0
 13928  016872  6EE6               	movwf	postinc1,c
 13929  016874  0E00               	movlw	0
 13930  016876  6EE6               	movwf	postinc1,c
 13931  016878  0E00               	movlw	0
 13932  01687A  6EE6               	movwf	postinc1,c
 13933  01687C  0E00               	movlw	0
 13934  01687E  6EE6               	movwf	postinc1,c
 13935  016880  0E00               	movlw	0
 13936  016882  6EE6               	movwf	postinc1,c
 13937                           
 13938                           ;stkvar	_n @ sp[(-22)+0]
 13939  016884  50E1               	movf	fsr1l,w,c
 13940  016886  0FEA               	addlw	-22
 13941  016888  6ED9               	movwf	fsr2l,c
 13942  01688A  50E2               	movf	fsr1h,w,c
 13943  01688C  6EDA               	movwf	fsr2h,c
 13944  01688E  0EFF               	movlw	255
 13945  016890  22DA               	addwfc	fsr2h,f,c
 13946  016892  006F FF7B FFE6     	movff	postinc2,postinc1
 13947  016898  006F FF7B FFE6     	movff	postinc2,postinc1
 13948  01689E  006F FF7B FFE6     	movff	postinc2,postinc1
 13949  0168A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13950  0168AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13951  0168B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13952  0168B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13953  0168BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13954  0168C2  EC8D  F0CA         	call	___lomod	;wreg free
 13955  0168C6  52E5               	movf	postdec1,f,c
 13956  0168C8  006F FF9C  F018    	movff	indf1,btemp+23
 13957  0168CE  52E5               	movf	postdec1,f,c
 13958  0168D0  006F FF9C  F017    	movff	indf1,btemp+22
 13959  0168D6  52E5               	movf	postdec1,f,c
 13960  0168D8  006F FF9C  F016    	movff	indf1,btemp+21
 13961  0168DE  52E5               	movf	postdec1,f,c
 13962  0168E0  006F FF9C  F015    	movff	indf1,btemp+20
 13963  0168E6  52E5               	movf	postdec1,f,c
 13964  0168E8  006F FF9C  F014    	movff	indf1,btemp+19
 13965  0168EE  52E5               	movf	postdec1,f,c
 13966  0168F0  006F FF9C  F013    	movff	indf1,btemp+18
 13967  0168F6  52E5               	movf	postdec1,f,c
 13968  0168F8  006F FF9C  F012    	movff	indf1,btemp+17
 13969  0168FE  52E5               	movf	postdec1,f,c
 13970  016900  006F FF9C  F011    	movff	indf1,btemp+16
 13971  016906  0EF8               	movlw	248
 13972  016908  26E1               	addwf	fsr1l,f,c
 13973  01690A  0EFF               	movlw	255
 13974  01690C  22E2               	addwfc	fsr1h,f,c
 13975  01690E  0E30               	movlw	48
 13976  016910  2611               	addwf	(btemp+16)^0,f,c
 13977                           
 13978                           ;stkvar	_i @ sp[(-14)+8]
 13979  016912  0EFA               	movlw	-6
 13980  016914  006F FF8C  F00B    	movff	plusw1,btemp+10
 13981  01691A  0EFB               	movlw	-5
 13982  01691C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13983  016922  0E97               	movlw	low _dbuf
 13984  016924  240B               	addwf	(btemp+10)^0,w,c
 13985  016926  6ED9               	movwf	fsr2l,c
 13986  016928  0E02               	movlw	high _dbuf
 13987  01692A  200C               	addwfc	(btemp+11)^0,w,c
 13988  01692C  6EDA               	movwf	fsr2h,c
 13989  01692E  0060  F047  FFDF   	movff	btemp+16,indf2
 13990                           
 13991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13992                           ;stkvar	_p @ sp[(-14)+12]
 13993  016934  50E1               	movf	fsr1l,w,c
 13994  016936  0FFE               	addlw	-2
 13995  016938  6ED9               	movwf	fsr2l,c
 13996  01693A  50E2               	movf	fsr1h,w,c
 13997  01693C  6EDA               	movwf	fsr2h,c
 13998  01693E  0EFF               	movlw	255
 13999  016940  22DA               	addwfc	fsr2h,f,c
 14000  016942  06DE               	decf	postinc2,f,c
 14001  016944  0E00               	movlw	0
 14002  016946  5ADD               	subwfb	postdec2,f,c
 14003                           
 14004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14005                           ;stkvar	_w @ sp[(-14)+10]
 14006  016948  50E1               	movf	fsr1l,w,c
 14007  01694A  0FFC               	addlw	-4
 14008  01694C  6ED9               	movwf	fsr2l,c
 14009  01694E  50E2               	movf	fsr1h,w,c
 14010  016950  6EDA               	movwf	fsr2h,c
 14011  016952  0EFF               	movlw	255
 14012  016954  22DA               	addwfc	fsr2h,f,c
 14013  016956  06DE               	decf	postinc2,f,c
 14014  016958  0E00               	movlw	0
 14015  01695A  5ADD               	subwfb	postdec2,f,c
 14016                           
 14017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14018  01695C  0E0A               	movlw	10
 14019  01695E  6EE6               	movwf	postinc1,c
 14020  016960  0E00               	movlw	0
 14021  016962  6EE6               	movwf	postinc1,c
 14022  016964  0E00               	movlw	0
 14023  016966  6EE6               	movwf	postinc1,c
 14024  016968  0E00               	movlw	0
 14025  01696A  6EE6               	movwf	postinc1,c
 14026  01696C  0E00               	movlw	0
 14027  01696E  6EE6               	movwf	postinc1,c
 14028  016970  0E00               	movlw	0
 14029  016972  6EE6               	movwf	postinc1,c
 14030  016974  0E00               	movlw	0
 14031  016976  6EE6               	movwf	postinc1,c
 14032  016978  0E00               	movlw	0
 14033  01697A  6EE6               	movwf	postinc1,c
 14034                           
 14035                           ;stkvar	_n @ sp[(-22)+0]
 14036  01697C  50E1               	movf	fsr1l,w,c
 14037  01697E  0FEA               	addlw	-22
 14038  016980  6ED9               	movwf	fsr2l,c
 14039  016982  50E2               	movf	fsr1h,w,c
 14040  016984  6EDA               	movwf	fsr2h,c
 14041  016986  0EFF               	movlw	255
 14042  016988  22DA               	addwfc	fsr2h,f,c
 14043  01698A  006F FF7B FFE6     	movff	postinc2,postinc1
 14044  016990  006F FF7B FFE6     	movff	postinc2,postinc1
 14045  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 14046  01699C  006F FF7B FFE6     	movff	postinc2,postinc1
 14047  0169A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14048  0169A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14049  0169AE  006F FF7B FFE6     	movff	postinc2,postinc1
 14050  0169B4  006F FF7B FFE6     	movff	postinc2,postinc1
 14051  0169BA  EC67  F0C6         	call	___lodiv	;wreg free
 14052  0169BE  52E5               	movf	postdec1,f,c
 14053  0169C0  006F FF9C  F018    	movff	indf1,btemp+23
 14054  0169C6  52E5               	movf	postdec1,f,c
 14055  0169C8  006F FF9C  F017    	movff	indf1,btemp+22
 14056  0169CE  52E5               	movf	postdec1,f,c
 14057  0169D0  006F FF9C  F016    	movff	indf1,btemp+21
 14058  0169D6  52E5               	movf	postdec1,f,c
 14059  0169D8  006F FF9C  F015    	movff	indf1,btemp+20
 14060  0169DE  52E5               	movf	postdec1,f,c
 14061  0169E0  006F FF9C  F014    	movff	indf1,btemp+19
 14062  0169E6  52E5               	movf	postdec1,f,c
 14063  0169E8  006F FF9C  F013    	movff	indf1,btemp+18
 14064  0169EE  52E5               	movf	postdec1,f,c
 14065  0169F0  006F FF9C  F012    	movff	indf1,btemp+17
 14066  0169F6  52E5               	movf	postdec1,f,c
 14067  0169F8  006F FF9C  F011    	movff	indf1,btemp+16
 14068  0169FE  0EF8               	movlw	248
 14069  016A00  26E1               	addwf	fsr1l,f,c
 14070  016A02  0EFF               	movlw	255
 14071  016A04  22E2               	addwfc	fsr1h,f,c
 14072                           
 14073                           ;stkvar	_n @ sp[(-14)+0]
 14074  016A06  0EF2               	movlw	-14
 14075  016A08  0060  F047  FFE3   	movff	btemp+16,plusw1
 14076  016A0E  0EF3               	movlw	-13
 14077  016A10  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14078  016A16  0EF4               	movlw	-12
 14079  016A18  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14080  016A1E  0EF5               	movlw	-11
 14081  016A20  0060  F053  FFE3   	movff	btemp+19,plusw1
 14082  016A26  0EF6               	movlw	-10
 14083  016A28  0060  F057  FFE3   	movff	btemp+20,plusw1
 14084  016A2E  0EF7               	movlw	-9
 14085  016A30  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14086  016A36  0EF8               	movlw	-8
 14087  016A38  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14088  016A3E  0EF9               	movlw	-7
 14089  016A40  0060  F063  FFE3   	movff	btemp+23,plusw1
 14090  016A46                     l12245:
 14091                           
 14092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14093                           ;stkvar	_i @ sp[(-14)+8]
 14094  016A46  0EFA               	movlw	-6
 14095  016A48  006F FF8C  F001    	movff	plusw1,btemp
 14096  016A4E  0EFB               	movlw	-5
 14097  016A50  50E3               	movf	plusw1,w,c
 14098  016A52  1001               	iorwf	btemp^0,w,c
 14099  016A54  B4D8               	btfsc	status,2,c
 14100  016A56  D02F               	goto	u11770
 14101                           
 14102                           ;stkvar	_n @ sp[(-14)+0]
 14103  016A58  0EF2               	movlw	-14
 14104  016A5A  50E3               	movf	plusw1,w,c
 14105  016A5C  E115               	bnz	u11741
 14106  016A5E  0EF3               	movlw	-13
 14107  016A60  50E3               	movf	plusw1,w,c
 14108  016A62  E112               	bnz	u11741
 14109  016A64  0EF4               	movlw	-12
 14110  016A66  50E3               	movf	plusw1,w,c
 14111  016A68  E10F               	bnz	u11741
 14112  016A6A  0EF5               	movlw	-11
 14113  016A6C  50E3               	movf	plusw1,w,c
 14114  016A6E  E10C               	bnz	u11741
 14115  016A70  0EF6               	movlw	-10
 14116  016A72  50E3               	movf	plusw1,w,c
 14117  016A74  E109               	bnz	u11741
 14118  016A76  0EF7               	movlw	-9
 14119  016A78  50E3               	movf	plusw1,w,c
 14120  016A7A  E106               	bnz	u11741
 14121  016A7C  0EF8               	movlw	-8
 14122  016A7E  50E3               	movf	plusw1,w,c
 14123  016A80  E103               	bnz	u11741
 14124  016A82  0EF9               	movlw	-7
 14125  016A84  50E3               	movf	plusw1,w,c
 14126  016A86  A4D8               	btfss	status,2,c
 14127  016A88                     u11741:
 14128  016A88  D6E3               	goto	l12235
 14129                           
 14130                           ;stkvar	_p @ sp[(-14)+12]
 14131  016A8A  0EFF               	movlw	-1
 14132  016A8C  BEE3               	btfsc	plusw1,7,c
 14133  016A8E  D007               	goto	u11750
 14134  016A90  0EFF               	movlw	-1
 14135  016A92  50E3               	movf	plusw1,w,c
 14136  016A94  E103               	bnz	u11751
 14137  016A96  0EFE               	movlw	-2
 14138  016A98  04E3               	decf	plusw1,w,c
 14139  016A9A  B0D8               	btfsc	status,0,c
 14140  016A9C                     u11751:
 14141  016A9C  D6D9               	goto	l12235
 14142  016A9E                     u11750:
 14143                           
 14144                           ;stkvar	_w @ sp[(-14)+10]
 14145  016A9E  0EFD               	movlw	-3
 14146  016AA0  BEE3               	btfsc	plusw1,7,c
 14147  016AA2  D009               	goto	u11770
 14148  016AA4  0EFD               	movlw	-3
 14149  016AA6  50E3               	movf	plusw1,w,c
 14150  016AA8  E104               	bnz	u11760
 14151  016AAA  0EFC               	movlw	-4
 14152  016AAC  04E3               	decf	plusw1,w,c
 14153  016AAE  A0D8               	btfss	status,0,c
 14154  016AB0  D002               	goto	u11770
 14155  016AB2                     u11760:
 14156  016AB2  B23E               	btfsc	_flags^0,1,c
 14157  016AB4  D6CD               	goto	l12235
 14158  016AB6                     u11770:
 14159                           
 14160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14161                           ;stkvar	_w @ sp[(-14)+10]
 14162  016AB6  0EFC               	movlw	-4
 14163  016AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14164  016ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 14165                           
 14166                           ;stkvar	_i @ sp[(-16)+8]
 14167  016AC4  0E97               	movlw	low _dbuf
 14168  016AC6  6E0B               	movwf	(btemp+10)^0,c
 14169  016AC8  0E02               	movlw	high _dbuf
 14170  016ACA  6E0C               	movwf	(btemp+11)^0,c
 14171  016ACC  0EF8               	movlw	-8
 14172  016ACE  50E3               	movf	plusw1,w,c
 14173  016AD0  260B               	addwf	(btemp+10)^0,f,c
 14174  016AD2  0EF9               	movlw	-7
 14175  016AD4  50E3               	movf	plusw1,w,c
 14176  016AD6  220C               	addwfc	(btemp+11)^0,f,c
 14177  016AD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14178  016ADE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14179                           
 14180                           ;stkvar	_fp @ sp[(-18)+-2]
 14181  016AE4  0EEC               	movlw	-20
 14182  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 14183  016AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 14184  016AF2  EC6F  F0CD         	call	_pad	;wreg free
 14185                           
 14186                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14187  016AF6  0EE8               	movlw	232
 14188  016AF8  26E1               	addwf	fsr1l,f,c
 14189  016AFA  0EFF               	movlw	255
 14190  016AFC  22E2               	addwfc	fsr1h,f,c
 14191  016AFE  0012               	return		;funcret
 14192  016B00                     __end_of_utoa:
 14193                           	opt callstack 0
 14194                           
 14195 ;; *************** function ___lomod *****************
 14196 ;; Defined at:
 14197 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;  dividend        8  [STACK] unsigned long long 
 14200 ;;  divisor         8  [STACK] unsigned long long 
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;  counter         1  [STACK] unsigned char 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  8  [STACK] unsigned long long 
 14205 ;; Registers used:
 14206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/2
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:   15
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_utoa
 14223 ;; This function uses a reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text51
 14227  01951A                     __ptext51:
 14228                           	opt callstack 0
 14229  01951A                     ___lomod:
 14230                           	opt callstack 0
 14231                           
 14232                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14233  01951A  52E6               	movf	postinc1,f,c
 14234                           
 14235                           ;stkvar	_divisor @ sp[(-1)+-16]
 14236                           
 14237                           ;incstack = 0
 14238 ;; hardware stack exceeded
 14239  01951C  0EEF               	movlw	-17
 14240  01951E  50E3               	movf	plusw1,w,c
 14241  019520  E116               	bnz	u7330
 14242  019522  0EF0               	movlw	-16
 14243  019524  50E3               	movf	plusw1,w,c
 14244  019526  E113               	bnz	u7330
 14245  019528  0EF1               	movlw	-15
 14246  01952A  50E3               	movf	plusw1,w,c
 14247  01952C  E110               	bnz	u7330
 14248  01952E  0EF2               	movlw	-14
 14249  019530  50E3               	movf	plusw1,w,c
 14250  019532  E10D               	bnz	u7330
 14251  019534  0EF3               	movlw	-13
 14252  019536  50E3               	movf	plusw1,w,c
 14253  019538  E10A               	bnz	u7330
 14254  01953A  0EF4               	movlw	-12
 14255  01953C  50E3               	movf	plusw1,w,c
 14256  01953E  E107               	bnz	u7330
 14257  019540  0EF5               	movlw	-11
 14258  019542  50E3               	movf	plusw1,w,c
 14259  019544  E104               	bnz	u7330
 14260  019546  0EF6               	movlw	-10
 14261  019548  50E3               	movf	plusw1,w,c
 14262  01954A  B4D8               	btfsc	status,2,c
 14263  01954C  D075               	goto	u7360
 14264  01954E                     u7330:
 14265                           
 14266                           ;stkvar	_counter @ sp[(-1)+0]
 14267  01954E  0EFF               	movlw	-1
 14268  019550  6AE3               	clrf	plusw1,c
 14269  019552  D012               	goto	L14
 14270  019554                     l8623:
 14271                           
 14272                           ;stkvar	_divisor @ sp[(-1)+-16]
 14273  019554  90D8               	bcf	status,0,c
 14274  019556  0EEF               	movlw	-17
 14275  019558  36E3               	rlcf	plusw1,f,c
 14276  01955A  0EF0               	movlw	-16
 14277  01955C  36E3               	rlcf	plusw1,f,c
 14278  01955E  0EF1               	movlw	-15
 14279  019560  36E3               	rlcf	plusw1,f,c
 14280  019562  0EF2               	movlw	-14
 14281  019564  36E3               	rlcf	plusw1,f,c
 14282  019566  0EF3               	movlw	-13
 14283  019568  36E3               	rlcf	plusw1,f,c
 14284  01956A  0EF4               	movlw	-12
 14285  01956C  36E3               	rlcf	plusw1,f,c
 14286  01956E  0EF5               	movlw	-11
 14287  019570  36E3               	rlcf	plusw1,f,c
 14288  019572  0EF6               	movlw	-10
 14289  019574  36E3               	rlcf	plusw1,f,c
 14290                           
 14291                           ;stkvar	_counter @ sp[(-1)+0]
 14292  019576  0EFF               	movlw	-1
 14293  019578                     L14:
 14294  019578  2AE3               	incf	plusw1,f,c
 14295                           
 14296                           ;stkvar	_divisor @ sp[(-1)+-16]
 14297  01957A  0EF6               	movlw	-10
 14298  01957C  AEE3               	btfss	plusw1,7,c
 14299  01957E  D7EA               	goto	l8623
 14300  019580                     u7340:
 14301                           
 14302                           ;stkvar	_divisor @ sp[(-1)+-16]
 14303                           ;stkvar	_dividend @ sp[(-1)+-8]
 14304  019580  50E1               	movf	fsr1l,w,c
 14305  019582  0FF7               	addlw	-9
 14306  019584  6ED9               	movwf	fsr2l,c
 14307  019586  50E2               	movf	fsr1h,w,c
 14308  019588  6EDA               	movwf	fsr2h,c
 14309  01958A  0EFF               	movlw	255
 14310  01958C  22DA               	addwfc	fsr2h,f,c
 14311  01958E  0EEF               	movlw	-17
 14312  019590  50E3               	movf	plusw1,w,c
 14313  019592  5CDE               	subwf	postinc2,w,c
 14314  019594  0EF0               	movlw	-16
 14315  019596  50E3               	movf	plusw1,w,c
 14316  019598  58DE               	subwfb	postinc2,w,c
 14317  01959A  0EF1               	movlw	-15
 14318  01959C  50E3               	movf	plusw1,w,c
 14319  01959E  58DE               	subwfb	postinc2,w,c
 14320  0195A0  0EF2               	movlw	-14
 14321  0195A2  50E3               	movf	plusw1,w,c
 14322  0195A4  58DE               	subwfb	postinc2,w,c
 14323  0195A6  0EF3               	movlw	-13
 14324  0195A8  50E3               	movf	plusw1,w,c
 14325  0195AA  58DE               	subwfb	postinc2,w,c
 14326  0195AC  0EF4               	movlw	-12
 14327  0195AE  50E3               	movf	plusw1,w,c
 14328  0195B0  58DE               	subwfb	postinc2,w,c
 14329  0195B2  0EF5               	movlw	-11
 14330  0195B4  50E3               	movf	plusw1,w,c
 14331  0195B6  58DE               	subwfb	postinc2,w,c
 14332  0195B8  0EF6               	movlw	-10
 14333  0195BA  50E3               	movf	plusw1,w,c
 14334  0195BC  58DE               	subwfb	postinc2,w,c
 14335  0195BE  A0D8               	btfss	status,0,c
 14336  0195C0  D01F               	goto	l8631
 14337                           
 14338                           ;stkvar	_divisor @ sp[(-1)+-16]
 14339                           ;stkvar	_dividend @ sp[(-1)+-8]
 14340  0195C2  50E1               	movf	fsr1l,w,c
 14341  0195C4  0FF7               	addlw	-9
 14342  0195C6  6ED9               	movwf	fsr2l,c
 14343  0195C8  50E2               	movf	fsr1h,w,c
 14344  0195CA  6EDA               	movwf	fsr2h,c
 14345  0195CC  0EFF               	movlw	255
 14346  0195CE  22DA               	addwfc	fsr2h,f,c
 14347  0195D0  0EEF               	movlw	-17
 14348  0195D2  50E3               	movf	plusw1,w,c
 14349  0195D4  5EDE               	subwf	postinc2,f,c
 14350  0195D6  0EF0               	movlw	-16
 14351  0195D8  50E3               	movf	plusw1,w,c
 14352  0195DA  5ADE               	subwfb	postinc2,f,c
 14353  0195DC  0EF1               	movlw	-15
 14354  0195DE  50E3               	movf	plusw1,w,c
 14355  0195E0  5ADE               	subwfb	postinc2,f,c
 14356  0195E2  0EF2               	movlw	-14
 14357  0195E4  50E3               	movf	plusw1,w,c
 14358  0195E6  5ADE               	subwfb	postinc2,f,c
 14359  0195E8  0EF3               	movlw	-13
 14360  0195EA  50E3               	movf	plusw1,w,c
 14361  0195EC  5ADE               	subwfb	postinc2,f,c
 14362  0195EE  0EF4               	movlw	-12
 14363  0195F0  50E3               	movf	plusw1,w,c
 14364  0195F2  5ADE               	subwfb	postinc2,f,c
 14365  0195F4  0EF5               	movlw	-11
 14366  0195F6  50E3               	movf	plusw1,w,c
 14367  0195F8  5ADE               	subwfb	postinc2,f,c
 14368  0195FA  0EF6               	movlw	-10
 14369  0195FC  50E3               	movf	plusw1,w,c
 14370  0195FE  5ADE               	subwfb	postinc2,f,c
 14371  019600                     l8631:
 14372                           
 14373                           ;stkvar	_divisor @ sp[(-1)+-16]
 14374  019600  90D8               	bcf	status,0,c
 14375  019602  0EF6               	movlw	-10
 14376  019604  32E3               	rrcf	plusw1,f,c
 14377  019606  0EF5               	movlw	-11
 14378  019608  32E3               	rrcf	plusw1,f,c
 14379  01960A  0EF4               	movlw	-12
 14380  01960C  32E3               	rrcf	plusw1,f,c
 14381  01960E  0EF3               	movlw	-13
 14382  019610  32E3               	rrcf	plusw1,f,c
 14383  019612  0EF2               	movlw	-14
 14384  019614  32E3               	rrcf	plusw1,f,c
 14385  019616  0EF1               	movlw	-15
 14386  019618  32E3               	rrcf	plusw1,f,c
 14387  01961A  0EF0               	movlw	-16
 14388  01961C  32E3               	rrcf	plusw1,f,c
 14389  01961E  0EEF               	movlw	-17
 14390  019620  32E3               	rrcf	plusw1,f,c
 14391                           
 14392                           ;stkvar	_counter @ sp[(-1)+0]
 14393  019622  0EFF               	movlw	-1
 14394  019624  50E3               	movf	plusw1,w,c
 14395  019626  6E01               	movwf	btemp^0,c
 14396  019628  0E01               	movlw	1
 14397  01962A  5E01               	subwf	btemp^0,f,c
 14398  01962C  0EFF               	movlw	-1
 14399  01962E  0060  F007  FFE3   	movff	btemp,plusw1
 14400  019634  A4D8               	btfss	status,2,c
 14401  019636  D7A4               	goto	u7340
 14402  019638                     u7360:
 14403                           
 14404                           ;stkvar	_dividend @ sp[(-1)+-8]
 14405  019638  0EF7               	movlw	247
 14406  01963A  24E1               	addwf	fsr1l,w,c
 14407  01963C  6ED9               	movwf	fsr2l,c
 14408  01963E  0EFF               	movlw	255
 14409  019640  20E2               	addwfc	fsr1h,w,c
 14410  019642  6EDA               	movwf	fsr2h,c
 14411                           
 14412                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14413  019644  0E08               	movlw	8
 14414  019646  6E01               	movwf	btemp^0,c
 14415  019648  0EF7               	movlw	-9
 14416  01964A                     us737999:
 14417  01964A  006F FF7B FFE3     	movff	postinc2,plusw1
 14418  019650  28E8               	incf	wreg,w,c
 14419  019652  2E01               	decfsz	btemp^0,f,c
 14420  019654  D7FA               	bra	us737999
 14421                           
 14422                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14423  019656  52E5               	movf	postdec1,f,c
 14424  019658  0012               	return		;funcret
 14425  01965A                     __end_of___lomod:
 14426                           	opt callstack 0
 14427                           
 14428 ;; *************** function ___lodiv *****************
 14429 ;; Defined at:
 14430 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;  dividend        8  [STACK] unsigned long long 
 14433 ;;  divisor         8  [STACK] unsigned long long 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  quotient        8  [STACK] unsigned long long 
 14436 ;;  counter         1  [STACK] unsigned char 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  8  [STACK] unsigned long long 
 14439 ;; Registers used:
 14440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/2
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14450 ;;Total ram usage:        0 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:   15
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_utoa
 14457 ;; This function uses a reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text52
 14461  018CCE                     __ptext52:
 14462                           	opt callstack 0
 14463  018CCE                     ___lodiv:
 14464                           	opt callstack 0
 14465                           
 14466                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14467  018CCE  0E09               	movlw	9
 14468  018CD0  26E1               	addwf	fsr1l,f,c
 14469  018CD2  0E00               	movlw	0
 14470  018CD4  22E2               	addwfc	fsr1h,f,c
 14471                           
 14472                           ;stkvar	_quotient @ sp[(-9)+0]
 14473                           
 14474                           ;incstack = 0
 14475 ;; hardware stack exceeded
 14476  018CD6  0E07               	movlw	7
 14477  018CD8  6E01               	movwf	btemp^0,c
 14478  018CDA  0EF7               	movlw	-9
 14479  018CDC                     u7271:
 14480  018CDC  6AE3               	clrf	plusw1,c
 14481  018CDE  2AE8               	incf	wreg,f,c
 14482  018CE0  0601               	decf	btemp^0,f,c
 14483  018CE2  E2FC               	bc	u7271
 14484                           
 14485                           ;stkvar	_divisor @ sp[(-9)+-16]
 14486  018CE4  0EE7               	movlw	-25
 14487  018CE6  50E3               	movf	plusw1,w,c
 14488  018CE8  E116               	bnz	u7280
 14489  018CEA  0EE8               	movlw	-24
 14490  018CEC  50E3               	movf	plusw1,w,c
 14491  018CEE  E113               	bnz	u7280
 14492  018CF0  0EE9               	movlw	-23
 14493  018CF2  50E3               	movf	plusw1,w,c
 14494  018CF4  E110               	bnz	u7280
 14495  018CF6  0EEA               	movlw	-22
 14496  018CF8  50E3               	movf	plusw1,w,c
 14497  018CFA  E10D               	bnz	u7280
 14498  018CFC  0EEB               	movlw	-21
 14499  018CFE  50E3               	movf	plusw1,w,c
 14500  018D00  E10A               	bnz	u7280
 14501  018D02  0EEC               	movlw	-20
 14502  018D04  50E3               	movf	plusw1,w,c
 14503  018D06  E107               	bnz	u7280
 14504  018D08  0EED               	movlw	-19
 14505  018D0A  50E3               	movf	plusw1,w,c
 14506  018D0C  E104               	bnz	u7280
 14507  018D0E  0EEE               	movlw	-18
 14508  018D10  50E3               	movf	plusw1,w,c
 14509  018D12  B4D8               	btfsc	status,2,c
 14510  018D14  D088               	goto	u7310
 14511  018D16                     u7280:
 14512                           
 14513                           ;stkvar	_counter @ sp[(-9)+8]
 14514  018D16  0EFF               	movlw	-1
 14515  018D18  6AE3               	clrf	plusw1,c
 14516  018D1A  D012               	goto	L15
 14517  018D1C                     l8599:
 14518                           
 14519                           ;stkvar	_divisor @ sp[(-9)+-16]
 14520  018D1C  90D8               	bcf	status,0,c
 14521  018D1E  0EE7               	movlw	-25
 14522  018D20  36E3               	rlcf	plusw1,f,c
 14523  018D22  0EE8               	movlw	-24
 14524  018D24  36E3               	rlcf	plusw1,f,c
 14525  018D26  0EE9               	movlw	-23
 14526  018D28  36E3               	rlcf	plusw1,f,c
 14527  018D2A  0EEA               	movlw	-22
 14528  018D2C  36E3               	rlcf	plusw1,f,c
 14529  018D2E  0EEB               	movlw	-21
 14530  018D30  36E3               	rlcf	plusw1,f,c
 14531  018D32  0EEC               	movlw	-20
 14532  018D34  36E3               	rlcf	plusw1,f,c
 14533  018D36  0EED               	movlw	-19
 14534  018D38  36E3               	rlcf	plusw1,f,c
 14535  018D3A  0EEE               	movlw	-18
 14536  018D3C  36E3               	rlcf	plusw1,f,c
 14537                           
 14538                           ;stkvar	_counter @ sp[(-9)+8]
 14539  018D3E  0EFF               	movlw	-1
 14540  018D40                     L15:
 14541  018D40  2AE3               	incf	plusw1,f,c
 14542                           
 14543                           ;stkvar	_divisor @ sp[(-9)+-16]
 14544  018D42  0EEE               	movlw	-18
 14545  018D44  AEE3               	btfss	plusw1,7,c
 14546  018D46  D7EA               	goto	l8599
 14547  018D48                     u7290:
 14548                           
 14549                           ;stkvar	_quotient @ sp[(-9)+0]
 14550  018D48  90D8               	bcf	status,0,c
 14551  018D4A  0EF7               	movlw	-9
 14552  018D4C  36E3               	rlcf	plusw1,f,c
 14553  018D4E  0EF8               	movlw	-8
 14554  018D50  36E3               	rlcf	plusw1,f,c
 14555  018D52  0EF9               	movlw	-7
 14556  018D54  36E3               	rlcf	plusw1,f,c
 14557  018D56  0EFA               	movlw	-6
 14558  018D58  36E3               	rlcf	plusw1,f,c
 14559  018D5A  0EFB               	movlw	-5
 14560  018D5C  36E3               	rlcf	plusw1,f,c
 14561  018D5E  0EFC               	movlw	-4
 14562  018D60  36E3               	rlcf	plusw1,f,c
 14563  018D62  0EFD               	movlw	-3
 14564  018D64  36E3               	rlcf	plusw1,f,c
 14565  018D66  0EFE               	movlw	-2
 14566  018D68  36E3               	rlcf	plusw1,f,c
 14567                           
 14568                           ;stkvar	_divisor @ sp[(-9)+-16]
 14569                           ;stkvar	_dividend @ sp[(-9)+-8]
 14570  018D6A  50E1               	movf	fsr1l,w,c
 14571  018D6C  0FEF               	addlw	-17
 14572  018D6E  6ED9               	movwf	fsr2l,c
 14573  018D70  50E2               	movf	fsr1h,w,c
 14574  018D72  6EDA               	movwf	fsr2h,c
 14575  018D74  0EFF               	movlw	255
 14576  018D76  22DA               	addwfc	fsr2h,f,c
 14577  018D78  0EE7               	movlw	-25
 14578  018D7A  50E3               	movf	plusw1,w,c
 14579  018D7C  5CDE               	subwf	postinc2,w,c
 14580  018D7E  0EE8               	movlw	-24
 14581  018D80  50E3               	movf	plusw1,w,c
 14582  018D82  58DE               	subwfb	postinc2,w,c
 14583  018D84  0EE9               	movlw	-23
 14584  018D86  50E3               	movf	plusw1,w,c
 14585  018D88  58DE               	subwfb	postinc2,w,c
 14586  018D8A  0EEA               	movlw	-22
 14587  018D8C  50E3               	movf	plusw1,w,c
 14588  018D8E  58DE               	subwfb	postinc2,w,c
 14589  018D90  0EEB               	movlw	-21
 14590  018D92  50E3               	movf	plusw1,w,c
 14591  018D94  58DE               	subwfb	postinc2,w,c
 14592  018D96  0EEC               	movlw	-20
 14593  018D98  50E3               	movf	plusw1,w,c
 14594  018D9A  58DE               	subwfb	postinc2,w,c
 14595  018D9C  0EED               	movlw	-19
 14596  018D9E  50E3               	movf	plusw1,w,c
 14597  018DA0  58DE               	subwfb	postinc2,w,c
 14598  018DA2  0EEE               	movlw	-18
 14599  018DA4  50E3               	movf	plusw1,w,c
 14600  018DA6  58DE               	subwfb	postinc2,w,c
 14601  018DA8  A0D8               	btfss	status,0,c
 14602  018DAA  D021               	goto	l8611
 14603                           
 14604                           ;stkvar	_divisor @ sp[(-9)+-16]
 14605                           ;stkvar	_dividend @ sp[(-9)+-8]
 14606  018DAC  50E1               	movf	fsr1l,w,c
 14607  018DAE  0FEF               	addlw	-17
 14608  018DB0  6ED9               	movwf	fsr2l,c
 14609  018DB2  50E2               	movf	fsr1h,w,c
 14610  018DB4  6EDA               	movwf	fsr2h,c
 14611  018DB6  0EFF               	movlw	255
 14612  018DB8  22DA               	addwfc	fsr2h,f,c
 14613  018DBA  0EE7               	movlw	-25
 14614  018DBC  50E3               	movf	plusw1,w,c
 14615  018DBE  5EDE               	subwf	postinc2,f,c
 14616  018DC0  0EE8               	movlw	-24
 14617  018DC2  50E3               	movf	plusw1,w,c
 14618  018DC4  5ADE               	subwfb	postinc2,f,c
 14619  018DC6  0EE9               	movlw	-23
 14620  018DC8  50E3               	movf	plusw1,w,c
 14621  018DCA  5ADE               	subwfb	postinc2,f,c
 14622  018DCC  0EEA               	movlw	-22
 14623  018DCE  50E3               	movf	plusw1,w,c
 14624  018DD0  5ADE               	subwfb	postinc2,f,c
 14625  018DD2  0EEB               	movlw	-21
 14626  018DD4  50E3               	movf	plusw1,w,c
 14627  018DD6  5ADE               	subwfb	postinc2,f,c
 14628  018DD8  0EEC               	movlw	-20
 14629  018DDA  50E3               	movf	plusw1,w,c
 14630  018DDC  5ADE               	subwfb	postinc2,f,c
 14631  018DDE  0EED               	movlw	-19
 14632  018DE0  50E3               	movf	plusw1,w,c
 14633  018DE2  5ADE               	subwfb	postinc2,f,c
 14634  018DE4  0EEE               	movlw	-18
 14635  018DE6  50E3               	movf	plusw1,w,c
 14636  018DE8  5ADE               	subwfb	postinc2,f,c
 14637                           
 14638                           ;stkvar	_quotient @ sp[(-9)+0]
 14639  018DEA  0EF7               	movlw	-9
 14640  018DEC  80E3               	bsf	plusw1,0,c
 14641  018DEE                     l8611:
 14642                           
 14643                           ;stkvar	_divisor @ sp[(-9)+-16]
 14644  018DEE  90D8               	bcf	status,0,c
 14645  018DF0  0EEE               	movlw	-18
 14646  018DF2  32E3               	rrcf	plusw1,f,c
 14647  018DF4  0EED               	movlw	-19
 14648  018DF6  32E3               	rrcf	plusw1,f,c
 14649  018DF8  0EEC               	movlw	-20
 14650  018DFA  32E3               	rrcf	plusw1,f,c
 14651  018DFC  0EEB               	movlw	-21
 14652  018DFE  32E3               	rrcf	plusw1,f,c
 14653  018E00  0EEA               	movlw	-22
 14654  018E02  32E3               	rrcf	plusw1,f,c
 14655  018E04  0EE9               	movlw	-23
 14656  018E06  32E3               	rrcf	plusw1,f,c
 14657  018E08  0EE8               	movlw	-24
 14658  018E0A  32E3               	rrcf	plusw1,f,c
 14659  018E0C  0EE7               	movlw	-25
 14660  018E0E  32E3               	rrcf	plusw1,f,c
 14661                           
 14662                           ;stkvar	_counter @ sp[(-9)+8]
 14663  018E10  0EFF               	movlw	-1
 14664  018E12  50E3               	movf	plusw1,w,c
 14665  018E14  6E01               	movwf	btemp^0,c
 14666  018E16  0E01               	movlw	1
 14667  018E18  5E01               	subwf	btemp^0,f,c
 14668  018E1A  0EFF               	movlw	-1
 14669  018E1C  0060  F007  FFE3   	movff	btemp,plusw1
 14670  018E22  A4D8               	btfss	status,2,c
 14671  018E24  D791               	goto	u7290
 14672  018E26                     u7310:
 14673                           
 14674                           ;stkvar	_quotient @ sp[(-9)+0]
 14675  018E26  0EF7               	movlw	247
 14676  018E28  24E1               	addwf	fsr1l,w,c
 14677  018E2A  6ED9               	movwf	fsr2l,c
 14678  018E2C  0EFF               	movlw	255
 14679  018E2E  20E2               	addwfc	fsr1h,w,c
 14680  018E30  6EDA               	movwf	fsr2h,c
 14681                           
 14682                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14683  018E32  0E08               	movlw	8
 14684  018E34  6E01               	movwf	btemp^0,c
 14685  018E36  0EEF               	movlw	-17
 14686  018E38                     us732999:
 14687  018E38  006F FF7B FFE3     	movff	postinc2,plusw1
 14688  018E3E  28E8               	incf	wreg,w,c
 14689  018E40  2E01               	decfsz	btemp^0,f,c
 14690  018E42  D7FA               	bra	us732999
 14691                           
 14692                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14693  018E44  0EF7               	movlw	247
 14694  018E46  26E1               	addwf	fsr1l,f,c
 14695  018E48  0EFF               	movlw	255
 14696  018E4A  22E2               	addwfc	fsr1h,f,c
 14697  018E4C  0012               	return		;funcret
 14698  018E4E                     __end_of___lodiv:
 14699                           	opt callstack 0
 14700                           
 14701 ;; *************** function _strncmp *****************
 14702 ;; Defined at:
 14703 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14704 ;; Parameters:    Size  Location     Type
 14705 ;;  _l              2  [STACK] PTR const unsigned char 
 14706 ;;		 -> ct(3), STR_65(121), STR_63(3), STR_62(3), 
 14707 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14708 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14709 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14710 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14711 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14712 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14713 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14714 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14715 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14716 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14717 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14718 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14719 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14720 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14721 ;;		 -> STR_2(15), STR_1(17), 
 14722 ;;  _r              2  [STACK] PTR const unsigned char 
 14723 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14724 ;;		 -> STR_80(3), STR_76(3), 
 14725 ;;  n               2  [STACK] unsigned int 
 14726 ;; Auto vars:     Size  Location     Type
 14727 ;;  r               2  [STACK] PTR const unsigned char 
 14728 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14729 ;;		 -> STR_80(3), STR_76(3), 
 14730 ;;  l               2  [STACK] PTR const unsigned char 
 14731 ;;		 -> ct(3), STR_65(121), STR_63(3), STR_62(3), 
 14732 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14733 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14734 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14735 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14736 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14737 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14738 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14739 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14740 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14741 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14742 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14743 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14744 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14745 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14746 ;;		 -> STR_2(15), STR_1(17), 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  2  [STACK] int 
 14749 ;; Registers used:
 14750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;Total ram usage:        0 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:   15
 14763 ;; This function calls:
 14764 ;;		Nothing
 14765 ;; This function is called by:
 14766 ;;		_vfpfcnvrt
 14767 ;; This function uses a reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text53
 14771  018020                     __ptext53:
 14772                           	opt callstack 0
 14773  018020                     _strncmp:
 14774                           	opt callstack 0
 14775                           
 14776                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14777  018020  52E6               	movf	postinc1,f,c
 14778  018022  52E6               	movf	postinc1,f,c
 14779  018024  52E6               	movf	postinc1,f,c
 14780  018026  52E6               	movf	postinc1,f,c
 14781                           
 14782                           ;stkvar	__l @ sp[(-4)+-2]
 14783                           
 14784                           ;incstack = 0
 14785 ;; hardware stack exceeded
 14786  018028  0EFA               	movlw	-6
 14787  01802A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14788  018030  0EFB               	movlw	-5
 14789  018032  006F FF8C  F00C    	movff	plusw1,btemp+11
 14790                           
 14791                           ;stkvar	_l @ sp[(-4)+2]
 14792  018038  0EFF               	movlw	-1
 14793  01803A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14794  018040  0EFE               	movlw	-2
 14795  018042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14796                           
 14797                           ;stkvar	__r @ sp[(-4)+-4]
 14798  018048  0EF8               	movlw	-8
 14799  01804A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14800  018050  0EF9               	movlw	-7
 14801  018052  006F FF8C  F00C    	movff	plusw1,btemp+11
 14802                           
 14803                           ;stkvar	_r @ sp[(-4)+0]
 14804  018058  0EFD               	movlw	-3
 14805  01805A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14806  018060  0EFC               	movlw	-4
 14807  018062  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14808                           
 14809                           ;stkvar	_n @ sp[(-4)+-6]
 14810  018068  0EF6               	movlw	-10
 14811  01806A  006F FF8C  F001    	movff	plusw1,btemp
 14812  018070  0E01               	movlw	1
 14813  018072  5E01               	subwf	btemp^0,f,c
 14814  018074  0EF6               	movlw	-10
 14815  018076  0060  F007  FFE3   	movff	btemp,plusw1
 14816  01807C  0EF7               	movlw	-9
 14817  01807E  006F FF8C  F001    	movff	plusw1,btemp
 14818  018084  0E00               	movlw	0
 14819  018086  5A01               	subwfb	btemp^0,f,c
 14820  018088  0EF7               	movlw	-9
 14821  01808A  0060  F007  FFE3   	movff	btemp,plusw1
 14822  018090  0EF6               	movlw	-10
 14823  018092  28E3               	incf	plusw1,w,c
 14824  018094  E13F               	bnz	l9307
 14825  018096  0EF7               	movlw	-9
 14826  018098  28E3               	incf	plusw1,w,c
 14827  01809A  A4D8               	btfss	status,2,c
 14828  01809C  D03B               	goto	l9307
 14829  01809E  0E00               	movlw	0
 14830  0180A0  6E01               	movwf	btemp^0,c
 14831  0180A2  0E00               	movlw	0
 14832  0180A4  6E02               	movwf	(btemp+1)^0,c
 14833  0180A6  D0C7               	goto	l3460
 14834  0180A8                     l9305:
 14835                           
 14836                           ;stkvar	_l @ sp[(-4)+2]
 14837  0180A8  0EFE               	movlw	-2
 14838  0180AA  50E3               	movf	plusw1,w,c
 14839  0180AC  0F01               	addlw	1
 14840  0180AE  6E01               	movwf	btemp^0,c
 14841  0180B0  0EFE               	movlw	-2
 14842  0180B2  0060  F007  FFE3   	movff	btemp,plusw1
 14843  0180B8  6A01               	clrf	btemp^0,c
 14844  0180BA  0EFF               	movlw	-1
 14845  0180BC  50E3               	movf	plusw1,w,c
 14846  0180BE  2001               	addwfc	btemp^0,w,c
 14847  0180C0  6E01               	movwf	btemp^0,c
 14848  0180C2  0EFF               	movlw	-1
 14849  0180C4  0060  F007  FFE3   	movff	btemp,plusw1
 14850                           
 14851                           ;stkvar	_r @ sp[(-4)+0]
 14852  0180CA  0EFC               	movlw	-4
 14853  0180CC  50E3               	movf	plusw1,w,c
 14854  0180CE  0F01               	addlw	1
 14855  0180D0  6E01               	movwf	btemp^0,c
 14856  0180D2  0EFC               	movlw	-4
 14857  0180D4  0060  F007  FFE3   	movff	btemp,plusw1
 14858  0180DA  6A01               	clrf	btemp^0,c
 14859  0180DC  0EFD               	movlw	-3
 14860  0180DE  50E3               	movf	plusw1,w,c
 14861  0180E0  2001               	addwfc	btemp^0,w,c
 14862  0180E2  6E01               	movwf	btemp^0,c
 14863  0180E4  0EFD               	movlw	-3
 14864  0180E6  0060  F007  FFE3   	movff	btemp,plusw1
 14865                           
 14866                           ;stkvar	_n @ sp[(-4)+-6]
 14867  0180EC  0EF6               	movlw	-10
 14868  0180EE  006F FF8C  F001    	movff	plusw1,btemp
 14869  0180F4  0E01               	movlw	1
 14870  0180F6  5E01               	subwf	btemp^0,f,c
 14871  0180F8  0EF6               	movlw	-10
 14872  0180FA  0060  F007  FFE3   	movff	btemp,plusw1
 14873  018100  0EF7               	movlw	-9
 14874  018102  006F FF8C  F001    	movff	plusw1,btemp
 14875  018108  0E00               	movlw	0
 14876  01810A  5A01               	subwfb	btemp^0,f,c
 14877  01810C  0EF7               	movlw	-9
 14878  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 14879  018114                     l9307:
 14880                           
 14881                           ;stkvar	_l @ sp[(-4)+2]
 14882  018114  0EFE               	movlw	-2
 14883  018116  006F FF8F FFF6     	movff	plusw1,tblptrl
 14884  01811C  0EFF               	movlw	-1
 14885  01811E  006F FF8F FFF7     	movff	plusw1,tblptrh
 14886  018124  0E00               	movlw	low (__mediumconst shr (0+16))
 14887  018126  6EF8               	movwf	tblptru,c
 14888  018128  0E1F               	movlw	(high __ramtop+-1)
 14889  01812A  64F7               	cpfsgt	tblptrh,c
 14890  01812C  D003               	bra	u8607
 14891  01812E  0008               	tblrd		*
 14892  018130  50F5               	movf	tablat,w,c
 14893  018132  D007               	bra	u8600
 14894  018134                     u8607:
 14895  018134  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14896  01813A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14897  018140  50EF               	movf	indf0,w,c
 14898  018142                     u8600:
 14899  018142  0900               	iorlw	0
 14900  018144  B4D8               	btfsc	status,2,c
 14901  018146  D04A               	goto	u8640
 14902                           
 14903                           ;stkvar	_r @ sp[(-4)+0]
 14904  018148  50E1               	movf	fsr1l,w,c
 14905  01814A  0FFC               	addlw	-4
 14906  01814C  6ED9               	movwf	fsr2l,c
 14907  01814E  50E2               	movf	fsr1h,w,c
 14908  018150  6EDA               	movwf	fsr2h,c
 14909  018152  0EFF               	movlw	255
 14910  018154  22DA               	addwfc	fsr2h,f,c
 14911  018156  006F FF7B FFF6     	movff	postinc2,tblptrl
 14912  01815C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14913  018162                     	if	0	;tblptru may be non-zero
 14914  018162                     	endif
 14915  018162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14916  018162  0E00               	movlw	low (__mediumconst shr (0+16))
 14917  018164  6EF8               	movwf	tblptru,c
 14918  018166                     	endif
 14919  018166  0008               	tblrd		*
 14920  018168  50F5               	movf	tablat,w,c
 14921  01816A  0900               	iorlw	0
 14922  01816C  B4D8               	btfsc	status,2,c
 14923  01816E  D036               	goto	u8640
 14924                           
 14925                           ;stkvar	_n @ sp[(-4)+-6]
 14926  018170  0EF6               	movlw	-10
 14927  018172  006F FF8C  F001    	movff	plusw1,btemp
 14928  018178  0EF7               	movlw	-9
 14929  01817A  50E3               	movf	plusw1,w,c
 14930  01817C  1001               	iorwf	btemp^0,w,c
 14931  01817E  B4D8               	btfsc	status,2,c
 14932  018180  D02D               	goto	u8640
 14933                           
 14934                           ;stkvar	_r @ sp[(-4)+0]
 14935  018182  50E1               	movf	fsr1l,w,c
 14936  018184  0FFC               	addlw	-4
 14937  018186  6ED9               	movwf	fsr2l,c
 14938  018188  50E2               	movf	fsr1h,w,c
 14939  01818A  6EDA               	movwf	fsr2h,c
 14940  01818C  0EFF               	movlw	255
 14941  01818E  22DA               	addwfc	fsr2h,f,c
 14942  018190  006F FF7B FFF6     	movff	postinc2,tblptrl
 14943  018196  006F FF77 FFF7     	movff	postdec2,tblptrh
 14944  01819C                     	if	0	;tblptru may be non-zero
 14945  01819C                     	endif
 14946  01819C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14947  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 14948  01819E  6EF8               	movwf	tblptru,c
 14949  0181A0                     	endif
 14950  0181A0  0008               	tblrd		*
 14951  0181A2  006F FFD4  F00C    	movff	tablat,btemp+11
 14952                           
 14953                           ;stkvar	_l @ sp[(-4)+2]
 14954  0181A8  0EFE               	movlw	-2
 14955  0181AA  006F FF8F FFF6     	movff	plusw1,tblptrl
 14956  0181B0  0EFF               	movlw	-1
 14957  0181B2  006F FF8F FFF7     	movff	plusw1,tblptrh
 14958  0181B8  0E00               	movlw	low (__mediumconst shr (0+16))
 14959  0181BA  6EF8               	movwf	tblptru,c
 14960  0181BC  0E1F               	movlw	(high __ramtop+-1)
 14961  0181BE  64F7               	cpfsgt	tblptrh,c
 14962  0181C0  D003               	bra	u8647
 14963  0181C2  0008               	tblrd		*
 14964  0181C4  50F5               	movf	tablat,w,c
 14965  0181C6  D007               	bra	u8645
 14966  0181C8                     u8647:
 14967  0181C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14968  0181CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14969  0181D4  50EF               	movf	indf0,w,c
 14970  0181D6                     u8645:
 14971  0181D6  180C               	xorwf	(btemp+11)^0,w,c
 14972  0181D8  B4D8               	btfsc	status,2,c
 14973  0181DA  D766               	goto	l9305
 14974  0181DC                     u8640:
 14975                           
 14976                           ;stkvar	_l @ sp[(-4)+2]
 14977  0181DC  0EFE               	movlw	-2
 14978  0181DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 14979  0181E4  0EFF               	movlw	-1
 14980  0181E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 14981  0181EC  0E00               	movlw	low (__mediumconst shr (0+16))
 14982  0181EE  6EF8               	movwf	tblptru,c
 14983  0181F0  0E1F               	movlw	(high __ramtop+-1)
 14984  0181F2  64F7               	cpfsgt	tblptrh,c
 14985  0181F4  D003               	bra	u8657
 14986  0181F6  0008               	tblrd		*
 14987  0181F8  50F5               	movf	tablat,w,c
 14988  0181FA  D007               	bra	u8650
 14989  0181FC                     u8657:
 14990  0181FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14991  018202  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14992  018208  50EF               	movf	indf0,w,c
 14993  01820A                     u8650:
 14994  01820A  6E01               	movwf	btemp^0,c
 14995  01820C  6A02               	clrf	(btemp+1)^0,c
 14996                           
 14997                           ;stkvar	_r @ sp[(-4)+0]
 14998  01820E  50E1               	movf	fsr1l,w,c
 14999  018210  0FFC               	addlw	-4
 15000  018212  6ED9               	movwf	fsr2l,c
 15001  018214  50E2               	movf	fsr1h,w,c
 15002  018216  6EDA               	movwf	fsr2h,c
 15003  018218  0EFF               	movlw	255
 15004  01821A  22DA               	addwfc	fsr2h,f,c
 15005  01821C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15006  018222  006F FF77 FFF7     	movff	postdec2,tblptrh
 15007  018228                     	if	0	;tblptru may be non-zero
 15008  018228                     	endif
 15009  018228                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15010  018228  0E00               	movlw	low (__mediumconst shr (0+16))
 15011  01822A  6EF8               	movwf	tblptru,c
 15012  01822C                     	endif
 15013  01822C  0008               	tblrd		*
 15014  01822E  50F5               	movf	tablat,w,c
 15015  018230  5E01               	subwf	btemp^0,f,c
 15016  018232  0E00               	movlw	0
 15017  018234  5A02               	subwfb	(btemp+1)^0,f,c
 15018  018236                     l3460:
 15019                           
 15020                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15021  018236  0EF6               	movlw	246
 15022  018238  26E1               	addwf	fsr1l,f,c
 15023  01823A  0EFF               	movlw	255
 15024  01823C  22E2               	addwfc	fsr1h,f,c
 15025  01823E  0012               	return		;funcret
 15026  018240                     __end_of_strncmp:
 15027                           	opt callstack 0
 15028                           
 15029 ;; *************** function _stoa *****************
 15030 ;; Defined at:
 15031 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15034 ;;		 -> f(6), NULL(0), 
 15035 ;;  s               2  [STACK] PTR unsigned char 
 15036 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 15037 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 15038 ;;		 -> V(191), 
 15039 ;; Auto vars:     Size  Location     Type
 15040 ;;  nuls            7  [STACK] unsigned char [7]
 15041 ;;  l               2  [STACK] int 
 15042 ;;  p               2  [STACK] int 
 15043 ;;  cp              2  [STACK] PTR unsigned char 
 15044 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 15045 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 15046 ;;		 -> STR_3(7), V(191), 
 15047 ;;  w               2  [STACK] int 
 15048 ;;  i               2  [STACK] int 
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  2  [STACK] int 
 15051 ;; Registers used:
 15052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15062 ;;Total ram usage:        0 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:   18
 15065 ;; This function calls:
 15066 ;;		_fputc
 15067 ;;		_strlen
 15068 ;; This function is called by:
 15069 ;;		_vfpfcnvrt
 15070 ;; This function uses a reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text54
 15074  0173E8                     __ptext54:
 15075                           	opt callstack 0
 15076  0173E8                     _stoa:
 15077                           	opt callstack 0
 15078                           
 15079                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15080  0173E8  0E11               	movlw	17
 15081  0173EA  26E1               	addwf	fsr1l,f,c
 15082  0173EC  0E00               	movlw	0
 15083  0173EE  22E2               	addwfc	fsr1h,f,c
 15084                           
 15085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15086                           
 15087                           ;incstack = 0
 15088 ;; hardware stack exceeded
 15089  0173F0  EE20  F0F0         	lfsr	2,stoa@F1166
 15090                           
 15091                           ;stkvar	_nuls @ sp[(-17)+0]
 15092  0173F4  0E07               	movlw	7
 15093  0173F6  6E01               	movwf	btemp^0,c
 15094  0173F8  0EEF               	movlw	-17
 15095  0173FA                     us1160999:
 15096  0173FA  006F FF7B FFE3     	movff	postinc2,plusw1
 15097  017400  28E8               	incf	wreg,w,c
 15098  017402  2E01               	decfsz	btemp^0,f,c
 15099  017404  D7FA               	bra	us1160999
 15100                           
 15101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15102                           ;stkvar	_s @ sp[(-17)+-4]
 15103  017406  0EEB               	movlw	-21
 15104  017408  006F FF8C  F00B    	movff	plusw1,btemp+10
 15105  01740E  0EEC               	movlw	-20
 15106  017410  006F FF8C  F00C    	movff	plusw1,btemp+11
 15107                           
 15108                           ;stkvar	_cp @ sp[(-17)+11]
 15109  017416  0EFB               	movlw	-5
 15110  017418  0060  F033  FFE3   	movff	btemp+11,plusw1
 15111  01741E  0EFA               	movlw	-6
 15112  017420  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15113                           
 15114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15115                           ;stkvar	_cp @ sp[(-17)+11]
 15116  017426  0EFA               	movlw	-6
 15117  017428  006F FF8C  F001    	movff	plusw1,btemp
 15118  01742E  0EFB               	movlw	-5
 15119  017430  50E3               	movf	plusw1,w,c
 15120  017432  1001               	iorwf	btemp^0,w,c
 15121  017434  A4D8               	btfss	status,2,c
 15122  017436  D00E               	goto	l12175
 15123                           
 15124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15125                           ;stkvar	_nuls @ sp[(-17)+0]
 15126  017438  0EEF               	movlw	239
 15127  01743A  24E1               	addwf	fsr1l,w,c
 15128  01743C  6E0B               	movwf	(btemp+10)^0,c
 15129  01743E  0EFF               	movlw	255
 15130  017440  20E2               	addwfc	fsr1h,w,c
 15131  017442  6E0C               	movwf	(btemp+11)^0,c
 15132                           
 15133                           ;stkvar	_cp @ sp[(-17)+11]
 15134  017444  0EFB               	movlw	-5
 15135  017446  0060  F033  FFE3   	movff	btemp+11,plusw1
 15136  01744C  0EFA               	movlw	-6
 15137  01744E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15138  017454                     l12175:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15141                           ;stkvar	_cp @ sp[(-17)+11]
 15142  017454  0EFA               	movlw	-6
 15143  017456  006F FF8F FFE6     	movff	plusw1,postinc1
 15144  01745C  006F FF8F FFE6     	movff	plusw1,postinc1
 15145  017462  EC40  F0D4         	call	_strlen	;wreg free
 15146                           
 15147                           ;stkvar	_l @ sp[(-17)+7]
 15148  017466  0EF6               	movlw	-10
 15149  017468  0060  F007  FFE3   	movff	btemp,plusw1
 15150  01746E  0EF7               	movlw	-9
 15151  017470  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15152                           
 15153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15154                           ;stkvar	_p @ sp[(-17)+9]
 15155  017476  0EF8               	movlw	-8
 15156  017478  0060  F0F3  FFE3   	movff	_prec,plusw1
 15157  01747E  0EF9               	movlw	-7
 15158  017480  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15159                           
 15160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15161                           ;stkvar	_p @ sp[(-17)+9]
 15162  017486  0EF9               	movlw	-7
 15163  017488  BEE3               	btfsc	plusw1,7,c
 15164  01748A  D023               	goto	l2285
 15165                           
 15166                           ;stkvar	_l @ sp[(-17)+7]
 15167                           ;stkvar	_p @ sp[(-17)+9]
 15168  01748C  50E1               	movf	fsr1l,w,c
 15169  01748E  0FF8               	addlw	-8
 15170  017490  6ED9               	movwf	fsr2l,c
 15171  017492  50E2               	movf	fsr1h,w,c
 15172  017494  6EDA               	movwf	fsr2h,c
 15173  017496  0EFF               	movlw	255
 15174  017498  22DA               	addwfc	fsr2h,f,c
 15175  01749A  0EF6               	movlw	-10
 15176  01749C  50E3               	movf	plusw1,w,c
 15177  01749E  5CDE               	subwf	postinc2,w,c
 15178  0174A0  50DE               	movf	postinc2,w,c
 15179  0174A2  0A80               	xorlw	128
 15180  0174A4  6E01               	movwf	btemp^0,c
 15181  0174A6  0EF7               	movlw	-9
 15182  0174A8  50E3               	movf	plusw1,w,c
 15183  0174AA  0A80               	xorlw	128
 15184  0174AC  5801               	subwfb	btemp^0,w,c
 15185  0174AE  B0D8               	btfsc	status,0,c
 15186  0174B0  D010               	goto	l2285
 15187                           
 15188                           ;stkvar	_p @ sp[(-17)+9]
 15189                           ;stkvar	_l @ sp[(-17)+7]
 15190  0174B2  0EF8               	movlw	-8
 15191  0174B4  006F FF8C  F001    	movff	plusw1,btemp
 15192  0174BA  0EF6               	movlw	-10
 15193  0174BC  0060  F007  FFE3   	movff	btemp,plusw1
 15194  0174C2  0EF9               	movlw	-7
 15195  0174C4  006F FF8C  F001    	movff	plusw1,btemp
 15196  0174CA  0EF7               	movlw	-9
 15197  0174CC  0060  F007  FFE3   	movff	btemp,plusw1
 15198  0174D2                     l2285:
 15199                           
 15200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15201                           ;stkvar	_l @ sp[(-17)+7]
 15202                           ;stkvar	_p @ sp[(-17)+9]
 15203  0174D2  0EF6               	movlw	-10
 15204  0174D4  006F FF8C  F001    	movff	plusw1,btemp
 15205  0174DA  0EF8               	movlw	-8
 15206  0174DC  0060  F007  FFE3   	movff	btemp,plusw1
 15207  0174E2  0EF7               	movlw	-9
 15208  0174E4  006F FF8C  F001    	movff	plusw1,btemp
 15209  0174EA  0EF9               	movlw	-7
 15210  0174EC  0060  F007  FFE3   	movff	btemp,plusw1
 15211                           
 15212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15213                           ;stkvar	_w @ sp[(-17)+13]
 15214  0174F2  0EFC               	movlw	-4
 15215  0174F4  0060  F0EB  FFE3   	movff	_width,plusw1
 15216  0174FA  0EFD               	movlw	-3
 15217  0174FC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15218                           
 15219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15220  017502  A03E               	btfss	_flags^0,0,c
 15221  017504  D01F               	goto	l12195
 15222  017506  D031               	goto	u11650
 15223  017508                     l12191:
 15224                           
 15225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15226                           ;stkvar	_fp @ sp[(-17)+-2]
 15227  017508  0EED               	movlw	-19
 15228  01750A  006F FF8F FFE6     	movff	plusw1,postinc1
 15229  017510  006F FF8F FFE6     	movff	plusw1,postinc1
 15230  017516  0E20               	movlw	32
 15231  017518  6EE6               	movwf	postinc1,c
 15232  01751A  0E00               	movlw	0
 15233  01751C  6EE6               	movwf	postinc1,c
 15234  01751E  ECC4  F0CB         	call	_fputc	;wreg free
 15235                           
 15236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15237                           ;stkvar	_l @ sp[(-17)+7]
 15238  017522  0EF6               	movlw	-10
 15239  017524  50E3               	movf	plusw1,w,c
 15240  017526  0F01               	addlw	1
 15241  017528  6E01               	movwf	btemp^0,c
 15242  01752A  0EF6               	movlw	-10
 15243  01752C  0060  F007  FFE3   	movff	btemp,plusw1
 15244  017532  6A01               	clrf	btemp^0,c
 15245  017534  0EF7               	movlw	-9
 15246  017536  50E3               	movf	plusw1,w,c
 15247  017538  2001               	addwfc	btemp^0,w,c
 15248  01753A  6E01               	movwf	btemp^0,c
 15249  01753C  0EF7               	movlw	-9
 15250  01753E  0060  F007  FFE3   	movff	btemp,plusw1
 15251  017544                     l12195:
 15252                           
 15253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15254                           ;stkvar	_w @ sp[(-17)+13]
 15255                           ;stkvar	_l @ sp[(-17)+7]
 15256  017544  50E1               	movf	fsr1l,w,c
 15257  017546  0FF6               	addlw	-10
 15258  017548  6ED9               	movwf	fsr2l,c
 15259  01754A  50E2               	movf	fsr1h,w,c
 15260  01754C  6EDA               	movwf	fsr2h,c
 15261  01754E  0EFF               	movlw	255
 15262  017550  22DA               	addwfc	fsr2h,f,c
 15263  017552  0EFC               	movlw	-4
 15264  017554  50E3               	movf	plusw1,w,c
 15265  017556  5CDE               	subwf	postinc2,w,c
 15266  017558  50DE               	movf	postinc2,w,c
 15267  01755A  0A80               	xorlw	128
 15268  01755C  6E01               	movwf	btemp^0,c
 15269  01755E  0EFD               	movlw	-3
 15270  017560  50E3               	movf	plusw1,w,c
 15271  017562  0A80               	xorlw	128
 15272  017564  5801               	subwfb	btemp^0,w,c
 15273  017566  A0D8               	btfss	status,0,c
 15274  017568  D7CF               	goto	l12191
 15275  01756A                     u11650:
 15276                           
 15277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15278                           ;stkvar	_i @ sp[(-17)+15]
 15279  01756A  0EFE               	movlw	-2
 15280  01756C  6AE3               	clrf	plusw1,c
 15281  01756E  0EFF               	movlw	-1
 15282  017570  6AE3               	clrf	plusw1,c
 15283                           
 15284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15285  017572  D045               	goto	l12205
 15286  017574                     l12199:
 15287                           
 15288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15289                           ;stkvar	_fp @ sp[(-17)+-2]
 15290  017574  0EED               	movlw	-19
 15291  017576  006F FF8F FFE6     	movff	plusw1,postinc1
 15292  01757C  006F FF8F FFE6     	movff	plusw1,postinc1
 15293                           
 15294                           ;stkvar	_cp @ sp[(-19)+11]
 15295  017582  0EF8               	movlw	-8
 15296  017584  006F FF8F FFF6     	movff	plusw1,tblptrl
 15297  01758A  0EF9               	movlw	-7
 15298  01758C  006F FF8F FFF7     	movff	plusw1,tblptrh
 15299  017592  0E00               	movlw	low (__mediumconst shr (0+16))
 15300  017594  6EF8               	movwf	tblptru,c
 15301  017596  0E1F               	movlw	(high __ramtop+-1)
 15302  017598  64F7               	cpfsgt	tblptrh,c
 15303  01759A  D003               	bra	u11667
 15304  01759C  0008               	tblrd		*
 15305  01759E  50F5               	movf	tablat,w,c
 15306  0175A0  D007               	bra	u11660
 15307  0175A2                     u11667:
 15308  0175A2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15309  0175A8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15310  0175AE  50EF               	movf	indf0,w,c
 15311  0175B0                     u11660:
 15312  0175B0  6EE6               	movwf	postinc1,c
 15313  0175B2  0E00               	movlw	0
 15314  0175B4  6EE6               	movwf	postinc1,c
 15315  0175B6  ECC4  F0CB         	call	_fputc	;wreg free
 15316                           
 15317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15318                           ;stkvar	_cp @ sp[(-17)+11]
 15319  0175BA  0EFA               	movlw	-6
 15320  0175BC  50E3               	movf	plusw1,w,c
 15321  0175BE  0F01               	addlw	1
 15322  0175C0  6E01               	movwf	btemp^0,c
 15323  0175C2  0EFA               	movlw	-6
 15324  0175C4  0060  F007  FFE3   	movff	btemp,plusw1
 15325  0175CA  6A01               	clrf	btemp^0,c
 15326  0175CC  0EFB               	movlw	-5
 15327  0175CE  50E3               	movf	plusw1,w,c
 15328  0175D0  2001               	addwfc	btemp^0,w,c
 15329  0175D2  6E01               	movwf	btemp^0,c
 15330  0175D4  0EFB               	movlw	-5
 15331  0175D6  0060  F007  FFE3   	movff	btemp,plusw1
 15332                           
 15333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15334                           ;stkvar	_i @ sp[(-17)+15]
 15335  0175DC  0EFE               	movlw	-2
 15336  0175DE  50E3               	movf	plusw1,w,c
 15337  0175E0  0F01               	addlw	1
 15338  0175E2  6E01               	movwf	btemp^0,c
 15339  0175E4  0EFE               	movlw	-2
 15340  0175E6  0060  F007  FFE3   	movff	btemp,plusw1
 15341  0175EC  6A01               	clrf	btemp^0,c
 15342  0175EE  0EFF               	movlw	-1
 15343  0175F0  50E3               	movf	plusw1,w,c
 15344  0175F2  2001               	addwfc	btemp^0,w,c
 15345  0175F4  6E01               	movwf	btemp^0,c
 15346  0175F6  0EFF               	movlw	-1
 15347  0175F8  0060  F007  FFE3   	movff	btemp,plusw1
 15348  0175FE                     l12205:
 15349                           
 15350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15351                           ;stkvar	_p @ sp[(-17)+9]
 15352                           ;stkvar	_i @ sp[(-17)+15]
 15353  0175FE  50E1               	movf	fsr1l,w,c
 15354  017600  0FFE               	addlw	-2
 15355  017602  6ED9               	movwf	fsr2l,c
 15356  017604  50E2               	movf	fsr1h,w,c
 15357  017606  6EDA               	movwf	fsr2h,c
 15358  017608  0EFF               	movlw	255
 15359  01760A  22DA               	addwfc	fsr2h,f,c
 15360  01760C  0EF8               	movlw	-8
 15361  01760E  50E3               	movf	plusw1,w,c
 15362  017610  5CDE               	subwf	postinc2,w,c
 15363  017612  50DE               	movf	postinc2,w,c
 15364  017614  0A80               	xorlw	128
 15365  017616  6E01               	movwf	btemp^0,c
 15366  017618  0EF9               	movlw	-7
 15367  01761A  50E3               	movf	plusw1,w,c
 15368  01761C  0A80               	xorlw	128
 15369  01761E  5801               	subwfb	btemp^0,w,c
 15370  017620  A0D8               	btfss	status,0,c
 15371  017622  D7A8               	goto	l12199
 15372                           
 15373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15374  017624  B03E               	btfsc	_flags^0,0,c
 15375  017626  D01F               	goto	l12213
 15376  017628  D031               	goto	u11690
 15377  01762A                     l12209:
 15378                           
 15379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15380                           ;stkvar	_fp @ sp[(-17)+-2]
 15381  01762A  0EED               	movlw	-19
 15382  01762C  006F FF8F FFE6     	movff	plusw1,postinc1
 15383  017632  006F FF8F FFE6     	movff	plusw1,postinc1
 15384  017638  0E20               	movlw	32
 15385  01763A  6EE6               	movwf	postinc1,c
 15386  01763C  0E00               	movlw	0
 15387  01763E  6EE6               	movwf	postinc1,c
 15388  017640  ECC4  F0CB         	call	_fputc	;wreg free
 15389                           
 15390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15391                           ;stkvar	_l @ sp[(-17)+7]
 15392  017644  0EF6               	movlw	-10
 15393  017646  50E3               	movf	plusw1,w,c
 15394  017648  0F01               	addlw	1
 15395  01764A  6E01               	movwf	btemp^0,c
 15396  01764C  0EF6               	movlw	-10
 15397  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 15398  017654  6A01               	clrf	btemp^0,c
 15399  017656  0EF7               	movlw	-9
 15400  017658  50E3               	movf	plusw1,w,c
 15401  01765A  2001               	addwfc	btemp^0,w,c
 15402  01765C  6E01               	movwf	btemp^0,c
 15403  01765E  0EF7               	movlw	-9
 15404  017660  0060  F007  FFE3   	movff	btemp,plusw1
 15405  017666                     l12213:
 15406                           
 15407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15408                           ;stkvar	_w @ sp[(-17)+13]
 15409                           ;stkvar	_l @ sp[(-17)+7]
 15410  017666  50E1               	movf	fsr1l,w,c
 15411  017668  0FF6               	addlw	-10
 15412  01766A  6ED9               	movwf	fsr2l,c
 15413  01766C  50E2               	movf	fsr1h,w,c
 15414  01766E  6EDA               	movwf	fsr2h,c
 15415  017670  0EFF               	movlw	255
 15416  017672  22DA               	addwfc	fsr2h,f,c
 15417  017674  0EFC               	movlw	-4
 15418  017676  50E3               	movf	plusw1,w,c
 15419  017678  5CDE               	subwf	postinc2,w,c
 15420  01767A  50DE               	movf	postinc2,w,c
 15421  01767C  0A80               	xorlw	128
 15422  01767E  6E01               	movwf	btemp^0,c
 15423  017680  0EFD               	movlw	-3
 15424  017682  50E3               	movf	plusw1,w,c
 15425  017684  0A80               	xorlw	128
 15426  017686  5801               	subwfb	btemp^0,w,c
 15427  017688  A0D8               	btfss	status,0,c
 15428  01768A  D7CF               	goto	l12209
 15429  01768C                     u11690:
 15430                           
 15431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15432                           ;stkvar	_l @ sp[(-17)+7]
 15433  01768C  0EF6               	movlw	-10
 15434  01768E  006F FF8C  F001    	movff	plusw1,btemp
 15435  017694  0EF7               	movlw	-9
 15436  017696  006F FF8C  F002    	movff	plusw1,btemp+1
 15437                           
 15438                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15439  01769C  0EEB               	movlw	235
 15440  01769E  26E1               	addwf	fsr1l,f,c
 15441  0176A0  0EFF               	movlw	255
 15442  0176A2  22E2               	addwfc	fsr1h,f,c
 15443  0176A4  0012               	return		;funcret
 15444  0176A6                     __end_of_stoa:
 15445                           	opt callstack 0
 15446                           
 15447 ;; *************** function _efgtoa *****************
 15448 ;; Defined at:
 15449 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15452 ;;		 -> f(6), NULL(0), 
 15453 ;;  f               4  [STACK] PTR struct _IO_FILE
 15454 ;;  c               1  [STACK] unsigned char 
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  u               4  [STACK] unsigned char 
 15457 ;;  g               4  [STACK] unsigned char 
 15458 ;;  l               4  [STACK] unsigned char 
 15459 ;;  h               4  [STACK] unsigned char 
 15460 ;;  ou              4  [STACK] unsigned char 
 15461 ;;  n               2  [STACK] int 
 15462 ;;  e               2  [STACK] int 
 15463 ;;  i               2  [STACK] int 
 15464 ;;  w               2  [STACK] int 
 15465 ;;  p               2  [STACK] int 
 15466 ;;  sign            2  [STACK] int 
 15467 ;;  d               2  [STACK] int 
 15468 ;;  ne              2  [STACK] int 
 15469 ;;  m               2  [STACK] int 
 15470 ;;  pp              2  [STACK] int 
 15471 ;;  t               2  [STACK] int 
 15472 ;;  mode            1  [STACK] unsigned char 
 15473 ;;  nmode           1  [STACK] unsigned char 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  2  [STACK] int 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15487 ;;Total ram usage:        0 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:   20
 15490 ;; This function calls:
 15491 ;;		___awdiv
 15492 ;;		___awmod
 15493 ;;		___fladd
 15494 ;;		___fldiv
 15495 ;;		___fleq
 15496 ;;		___flge
 15497 ;;		___flmul
 15498 ;;		___flneg
 15499 ;;		___flsub
 15500 ;;		___fltol
 15501 ;;		___fpclassifyf
 15502 ;;		_floorf
 15503 ;;		_isupper
 15504 ;;		_pad
 15505 ;;		_strcpy
 15506 ;;		_tolower
 15507 ;; This function is called by:
 15508 ;;		_vfpfcnvrt
 15509 ;; This function uses a reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text55
 15513  010000                     __ptext55:
 15514                           	opt callstack 0
 15515  010000                     _efgtoa:
 15516                           	opt callstack 0
 15517                           
 15518                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15519  010000  0E38               	movlw	56
 15520  010002  26E1               	addwf	fsr1l,f,c
 15521  010004  0E00               	movlw	0
 15522  010006  22E2               	addwfc	fsr1h,f,c
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15525                           ;stkvar	_sign @ sp[(-56)+42]
 15526                           
 15527                           ;incstack = 0
 15528 ;; hardware stack exceeded
 15529  010008  0EF2               	movlw	-14
 15530  01000A  6AE3               	clrf	plusw1,c
 15531  01000C  0EF3               	movlw	-13
 15532  01000E  6AE3               	clrf	plusw1,c
 15533                           
 15534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15535                           ;stkvar	_f @ sp[(-56)+-6]
 15536  010010  0EC2               	movlw	-62
 15537  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15538  010018  0EC3               	movlw	-61
 15539  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15540  010020  0EC4               	movlw	-60
 15541  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15542  010028  0EC5               	movlw	-59
 15543  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15544                           
 15545                           ;stkvar	_g @ sp[(-56)+16]
 15546  010030  0ED8               	movlw	-40
 15547  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15548  010038  0ED9               	movlw	-39
 15549  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15550  010040  0EDA               	movlw	-38
 15551  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15552  010048  0EDB               	movlw	-37
 15553  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15554                           
 15555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15556                           ;stkvar	_g @ sp[(-56)+16]
 15557  010050  0EDB               	movlw	-37
 15558  010052  AEE3               	btfss	plusw1,7,c
 15559  010054  D02B               	goto	l11873
 15560                           
 15561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15562  010056  0E01               	movlw	1
 15563  010058  6E0B               	movwf	(btemp+10)^0,c
 15564  01005A  0E00               	movlw	0
 15565  01005C  6E0C               	movwf	(btemp+11)^0,c
 15566                           
 15567                           ;stkvar	_sign @ sp[(-56)+42]
 15568  01005E  0EF2               	movlw	-14
 15569  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15570  010066  0EF3               	movlw	-13
 15571  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15572                           
 15573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15574                           ;stkvar	_g @ sp[(-56)+16]
 15575  01006E  0ED8               	movlw	-40
 15576  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15577  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15578  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15579  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15580  010088  ECE2  F0D9         	call	___flneg	;wreg free
 15581                           
 15582                           ;stkvar	_g @ sp[(-56)+16]
 15583  01008C  0ED8               	movlw	-40
 15584  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15585  010094  0ED9               	movlw	-39
 15586  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15587  01009C  0EDA               	movlw	-38
 15588  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15589  0100A4  0EDB               	movlw	-37
 15590  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15591  0100AC                     l11873:
 15592                           
 15593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15594                           ;stkvar	_n @ sp[(-56)+32]
 15595  0100AC  0EE8               	movlw	-24
 15596  0100AE  6AE3               	clrf	plusw1,c
 15597  0100B0  0EE9               	movlw	-23
 15598  0100B2  6AE3               	clrf	plusw1,c
 15599                           
 15600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15601                           ;stkvar	_w @ sp[(-56)+38]
 15602  0100B4  0EEE               	movlw	-18
 15603  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15604  0100BC  0EEF               	movlw	-17
 15605  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15606                           
 15607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15608                           ;stkvar	_sign @ sp[(-56)+42]
 15609  0100C4  0EF2               	movlw	-14
 15610  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15611  0100CC  0EF3               	movlw	-13
 15612  0100CE  50E3               	movf	plusw1,w,c
 15613  0100D0  1001               	iorwf	btemp^0,w,c
 15614  0100D2  A4D8               	btfss	status,2,c
 15615  0100D4  D002               	goto	u11100
 15616  0100D6  A43E               	btfss	_flags^0,2,c
 15617  0100D8  D036               	goto	l11893
 15618  0100DA                     u11100:
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15621                           ;stkvar	_sign @ sp[(-56)+42]
 15622  0100DA  0EF2               	movlw	-14
 15623  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15624  0100E2  0EF3               	movlw	-13
 15625  0100E4  50E3               	movf	plusw1,w,c
 15626  0100E6  1001               	iorwf	btemp^0,w,c
 15627  0100E8  A4D8               	btfss	status,2,c
 15628  0100EA  D002               	goto	l11885
 15629  0100EC  0E2B               	movlw	43
 15630  0100EE  D001               	goto	L16
 15631  0100F0                     l11885:
 15632  0100F0  0E2D               	movlw	45
 15633  0100F2                     L16:
 15634  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15635  0100F4  0E00               	movlw	0
 15636  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15637                           
 15638                           ;stkvar	_efgtoa$5499 @ sp[(-56)+10]
 15639  0100F8  0ED2               	movlw	-46
 15640  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15641  010100  0ED3               	movlw	-45
 15642  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15643                           
 15644                           ;stkvar	_efgtoa$5499 @ sp[(-56)+10]
 15645  010108  0ED2               	movlw	-46
 15646  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 15647                           
 15648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15649                           ;stkvar	_n @ sp[(-56)+32]
 15650  010110  0EE8               	movlw	-24
 15651  010112  50E3               	movf	plusw1,w,c
 15652  010114  0F01               	addlw	1
 15653  010116  6E01               	movwf	btemp^0,c
 15654  010118  0EE8               	movlw	-24
 15655  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15656  010120  6A01               	clrf	btemp^0,c
 15657  010122  0EE9               	movlw	-23
 15658  010124  50E3               	movf	plusw1,w,c
 15659  010126  2001               	addwfc	btemp^0,w,c
 15660  010128  6E01               	movwf	btemp^0,c
 15661  01012A  0EE9               	movlw	-23
 15662  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15663                           
 15664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15665                           ;stkvar	_w @ sp[(-56)+38]
 15666  010132  50E1               	movf	fsr1l,w,c
 15667  010134  0FEE               	addlw	-18
 15668  010136  6ED9               	movwf	fsr2l,c
 15669  010138  50E2               	movf	fsr1h,w,c
 15670  01013A  6EDA               	movwf	fsr2h,c
 15671  01013C  0EFF               	movlw	255
 15672  01013E  22DA               	addwfc	fsr2h,f,c
 15673  010140  06DE               	decf	postinc2,f,c
 15674  010142  0E00               	movlw	0
 15675  010144  5ADD               	subwfb	postdec2,f,c
 15676  010146                     l11893:
 15677                           
 15678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15679                           ;stkvar	_g @ sp[(-56)+16]
 15680  010146  0ED8               	movlw	-40
 15681  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15682  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15683  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15685  010160  ECD9  F0C4         	call	___fpclassifyf	;wreg free
 15686  010164  0401               	decf	btemp^0,w,c
 15687  010166  1002               	iorwf	(btemp+1)^0,w,c
 15688  010168  A4D8               	btfss	status,2,c
 15689  01016A  D076               	goto	l11911
 15690  01016C  0EBF               	movlw	191
 15691  01016E  6E0B               	movwf	(btemp+10)^0,c
 15692  010170  0EFF               	movlw	255
 15693  010172  6E0C               	movwf	(btemp+11)^0,c
 15694                           
 15695                           ;stkvar	_c @ sp[(-56)+-7]
 15696  010174  0EC1               	movlw	-63
 15697  010176  50E3               	movf	plusw1,w,c
 15698  010178  6E09               	movwf	(btemp+8)^0,c
 15699  01017A  6A0A               	clrf	(btemp+9)^0,c
 15700  01017C  500B               	movf	(btemp+10)^0,w,c
 15701  01017E  2609               	addwf	(btemp+8)^0,f,c
 15702  010180  500C               	movf	(btemp+11)^0,w,c
 15703  010182  220A               	addwfc	(btemp+9)^0,f,c
 15704  010184  500A               	movf	(btemp+9)^0,w,c
 15705  010186  E106               	bnz	u11130
 15706  010188  0E1A               	movlw	26
 15707  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15708  01018C  B0D8               	btfsc	status,0,c
 15709  01018E  D002               	goto	u11130
 15710  010190  0E01               	movlw	1
 15711  010192  D001               	goto	u11140
 15712  010194                     u11130:
 15713  010194  0E00               	movlw	0
 15714  010196                     u11140:
 15715  010196  6E0B               	movwf	(btemp+10)^0,c
 15716  010198  6A0C               	clrf	(btemp+11)^0,c
 15717                           
 15718                           ;stkvar	_efgtoa$5500 @ sp[(-56)+8]
 15719  01019A  0ED0               	movlw	-48
 15720  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15721  0101A2  0ED1               	movlw	-47
 15722  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15723                           
 15724                           ;stkvar	_efgtoa$5500 @ sp[(-56)+8]
 15725  0101AA  0ED0               	movlw	-48
 15726  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15727  0101B2  0ED1               	movlw	-47
 15728  0101B4  50E3               	movf	plusw1,w,c
 15729  0101B6  1001               	iorwf	btemp^0,w,c
 15730  0101B8  B4D8               	btfsc	status,2,c
 15731  0101BA  D017               	goto	l11903
 15732                           
 15733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15734  0101BC  0ED7               	movlw	low STR_66
 15735  0101BE  6EE6               	movwf	postinc1,c
 15736  0101C0  0EFF               	movlw	high STR_66
 15737  0101C2  6EE6               	movwf	postinc1,c
 15738                           
 15739                           ;stkvar	_n @ sp[(-58)+32]
 15740  0101C4  0E97               	movlw	low _dbuf
 15741  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15742  0101C8  0E02               	movlw	high _dbuf
 15743  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15744  0101CC  0EE6               	movlw	-26
 15745  0101CE  50E3               	movf	plusw1,w,c
 15746  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15747  0101D2  0EE7               	movlw	-25
 15748  0101D4  50E3               	movf	plusw1,w,c
 15749  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15750  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15751  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15752  0101E4  ECC3  F0D1         	call	_strcpy	;wreg free
 15753                           
 15754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15755  0101E8  D016               	goto	l11905
 15756  0101EA                     l11903:
 15757                           
 15758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15759  0101EA  0EDF               	movlw	low STR_67
 15760  0101EC  6EE6               	movwf	postinc1,c
 15761  0101EE  0EFF               	movlw	high STR_67
 15762  0101F0  6EE6               	movwf	postinc1,c
 15763                           
 15764                           ;stkvar	_n @ sp[(-58)+32]
 15765  0101F2  0E97               	movlw	low _dbuf
 15766  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15767  0101F6  0E02               	movlw	high _dbuf
 15768  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15769  0101FA  0EE6               	movlw	-26
 15770  0101FC  50E3               	movf	plusw1,w,c
 15771  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15772  010200  0EE7               	movlw	-25
 15773  010202  50E3               	movf	plusw1,w,c
 15774  010204  220C               	addwfc	(btemp+11)^0,f,c
 15775  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15776  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15777  010212  ECC3  F0D1         	call	_strcpy	;wreg free
 15778  010216                     l11905:
 15779                           
 15780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15781                           ;stkvar	_w @ sp[(-56)+38]
 15782  010216  50E1               	movf	fsr1l,w,c
 15783  010218  0FEE               	addlw	-18
 15784  01021A  6ED9               	movwf	fsr2l,c
 15785  01021C  50E2               	movf	fsr1h,w,c
 15786  01021E  6EDA               	movwf	fsr2h,c
 15787  010220  0EFF               	movlw	255
 15788  010222  22DA               	addwfc	fsr2h,f,c
 15789  010224  0EFD               	movlw	253
 15790  010226  26DE               	addwf	postinc2,f,c
 15791  010228  0EFF               	movlw	255
 15792  01022A  22DD               	addwfc	postdec2,f,c
 15793  01022C                     l11907:
 15794                           
 15795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15796                           ;stkvar	_w @ sp[(-56)+38]
 15797  01022C  0EEE               	movlw	-18
 15798  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15799  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15800  01023A  0E97               	movlw	low _dbuf
 15801  01023C  6EE6               	movwf	postinc1,c
 15802  01023E  0E02               	movlw	high _dbuf
 15803  010240  6EE6               	movwf	postinc1,c
 15804                           
 15805                           ;stkvar	_fp @ sp[(-60)+-2]
 15806  010242  0EC2               	movlw	-62
 15807  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15808  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15809  010250  EC6F  F0CD         	call	_pad	;wreg free
 15810  010254  EF1D  F089         	goto	l2203
 15811  010258                     l11911:
 15812                           
 15813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15814                           ;stkvar	_g @ sp[(-56)+16]
 15815  010258  0ED8               	movlw	-40
 15816  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15817  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15818  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15819  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15820  010272  ECD9  F0C4         	call	___fpclassifyf	;wreg free
 15821  010276  5001               	movf	btemp^0,w,c
 15822  010278  1002               	iorwf	(btemp+1)^0,w,c
 15823  01027A  A4D8               	btfss	status,2,c
 15824  01027C  D056               	goto	l11929
 15825  01027E  0EBF               	movlw	191
 15826  010280  6E0B               	movwf	(btemp+10)^0,c
 15827  010282  0EFF               	movlw	255
 15828  010284  6E0C               	movwf	(btemp+11)^0,c
 15829                           
 15830                           ;stkvar	_c @ sp[(-56)+-7]
 15831  010286  0EC1               	movlw	-63
 15832  010288  50E3               	movf	plusw1,w,c
 15833  01028A  6E09               	movwf	(btemp+8)^0,c
 15834  01028C  6A0A               	clrf	(btemp+9)^0,c
 15835  01028E  500B               	movf	(btemp+10)^0,w,c
 15836  010290  2609               	addwf	(btemp+8)^0,f,c
 15837  010292  500C               	movf	(btemp+11)^0,w,c
 15838  010294  220A               	addwfc	(btemp+9)^0,f,c
 15839  010296  500A               	movf	(btemp+9)^0,w,c
 15840  010298  E106               	bnz	u11170
 15841  01029A  0E1A               	movlw	26
 15842  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15843  01029E  B0D8               	btfsc	status,0,c
 15844  0102A0  D002               	goto	u11170
 15845  0102A2  0E01               	movlw	1
 15846  0102A4  D001               	goto	u11180
 15847  0102A6                     u11170:
 15848  0102A6  0E00               	movlw	0
 15849  0102A8                     u11180:
 15850  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15851  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15852                           
 15853                           ;stkvar	_efgtoa$5504 @ sp[(-56)+6]
 15854  0102AC  0ECE               	movlw	-50
 15855  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15856  0102B4  0ECF               	movlw	-49
 15857  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15858                           
 15859                           ;stkvar	_efgtoa$5504 @ sp[(-56)+6]
 15860  0102BC  0ECE               	movlw	-50
 15861  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15862  0102C4  0ECF               	movlw	-49
 15863  0102C6  50E3               	movf	plusw1,w,c
 15864  0102C8  1001               	iorwf	btemp^0,w,c
 15865  0102CA  B4D8               	btfsc	status,2,c
 15866  0102CC  D017               	goto	l11921
 15867                           
 15868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15869  0102CE  0EDB               	movlw	low STR_70
 15870  0102D0  6EE6               	movwf	postinc1,c
 15871  0102D2  0EFF               	movlw	high STR_70
 15872  0102D4  6EE6               	movwf	postinc1,c
 15873                           
 15874                           ;stkvar	_n @ sp[(-58)+32]
 15875  0102D6  0E97               	movlw	low _dbuf
 15876  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15877  0102DA  0E02               	movlw	high _dbuf
 15878  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15879  0102DE  0EE6               	movlw	-26
 15880  0102E0  50E3               	movf	plusw1,w,c
 15881  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15882  0102E4  0EE7               	movlw	-25
 15883  0102E6  50E3               	movf	plusw1,w,c
 15884  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15885  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15886  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15887  0102F6  ECC3  F0D1         	call	_strcpy	;wreg free
 15888                           
 15889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15890  0102FA  D78D               	goto	l11905
 15891  0102FC                     l11921:
 15892                           
 15893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15894  0102FC  0EE3               	movlw	low STR_71
 15895  0102FE  6EE6               	movwf	postinc1,c
 15896  010300  0EFF               	movlw	high STR_71
 15897  010302  6EE6               	movwf	postinc1,c
 15898                           
 15899                           ;stkvar	_n @ sp[(-58)+32]
 15900  010304  0E97               	movlw	low _dbuf
 15901  010306  6E0B               	movwf	(btemp+10)^0,c
 15902  010308  0E02               	movlw	high _dbuf
 15903  01030A  6E0C               	movwf	(btemp+11)^0,c
 15904  01030C  0EE6               	movlw	-26
 15905  01030E  50E3               	movf	plusw1,w,c
 15906  010310  260B               	addwf	(btemp+10)^0,f,c
 15907  010312  0EE7               	movlw	-25
 15908  010314  50E3               	movf	plusw1,w,c
 15909  010316  220C               	addwfc	(btemp+11)^0,f,c
 15910  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15911  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15912  010324  ECC3  F0D1         	call	_strcpy	;wreg free
 15913  010328  D776               	goto	l11905
 15914  01032A                     l11929:
 15915                           
 15916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15917  01032A  0E00               	movlw	0
 15918  01032C  6E09               	movwf	(btemp+8)^0,c
 15919  01032E  0E00               	movlw	0
 15920  010330  6E0A               	movwf	(btemp+9)^0,c
 15921  010332  0E80               	movlw	128
 15922  010334  6E0B               	movwf	(btemp+10)^0,c
 15923  010336  0E3F               	movlw	63
 15924  010338  6E0C               	movwf	(btemp+11)^0,c
 15925                           
 15926                           ;stkvar	_u @ sp[(-56)+12]
 15927  01033A  0ED4               	movlw	-44
 15928  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15929  010342  0ED5               	movlw	-43
 15930  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15931  01034A  0ED6               	movlw	-42
 15932  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15933  010352  0ED7               	movlw	-41
 15934  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15935                           
 15936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15937                           ;stkvar	_e @ sp[(-56)+34]
 15938  01035A  0EEA               	movlw	-22
 15939  01035C  6AE3               	clrf	plusw1,c
 15940  01035E  0EEB               	movlw	-21
 15941  010360  6AE3               	clrf	plusw1,c
 15942                           
 15943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15944  010362  0E00               	movlw	0
 15945  010364  6EE6               	movwf	postinc1,c
 15946  010366  0E00               	movlw	0
 15947  010368  6EE6               	movwf	postinc1,c
 15948  01036A  0E00               	movlw	0
 15949  01036C  6EE6               	movwf	postinc1,c
 15950  01036E  0E00               	movlw	0
 15951  010370  6EE6               	movwf	postinc1,c
 15952                           
 15953                           ;stkvar	_g @ sp[(-60)+16]
 15954  010372  0ED4               	movlw	-44
 15955  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15956  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15957  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15958  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15959  01038C  EC2D  F0D2         	call	___fleq	;wreg free
 15960  010390  A001               	btfss	btemp& (0+255),0,c
 15961  010392  D039               	goto	l11941
 15962  010394  D0BC               	goto	u11220
 15963  010396                     l11937:
 15964                           
 15965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15966  010396  0E00               	movlw	0
 15967  010398  6EE6               	movwf	postinc1,c
 15968  01039A  0E00               	movlw	0
 15969  01039C  6EE6               	movwf	postinc1,c
 15970  01039E  0E20               	movlw	32
 15971  0103A0  6EE6               	movwf	postinc1,c
 15972  0103A2  0E41               	movlw	65
 15973  0103A4  6EE6               	movwf	postinc1,c
 15974                           
 15975                           ;stkvar	_u @ sp[(-60)+12]
 15976  0103A6  0ED0               	movlw	-48
 15977  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15978  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15979  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15980  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15981  0103C0  ECAD  F09E         	call	___flmul	;wreg free
 15982                           
 15983                           ;stkvar	_u @ sp[(-56)+12]
 15984  0103C4  0ED4               	movlw	-44
 15985  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15986  0103CC  0ED5               	movlw	-43
 15987  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15988  0103D4  0ED6               	movlw	-42
 15989  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15990  0103DC  0ED7               	movlw	-41
 15991  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15992                           
 15993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15994                           ;stkvar	_e @ sp[(-56)+34]
 15995  0103E4  0EEA               	movlw	-22
 15996  0103E6  50E3               	movf	plusw1,w,c
 15997  0103E8  0F01               	addlw	1
 15998  0103EA  6E01               	movwf	btemp^0,c
 15999  0103EC  0EEA               	movlw	-22
 16000  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16001  0103F4  6A01               	clrf	btemp^0,c
 16002  0103F6  0EEB               	movlw	-21
 16003  0103F8  50E3               	movf	plusw1,w,c
 16004  0103FA  2001               	addwfc	btemp^0,w,c
 16005  0103FC  6E01               	movwf	btemp^0,c
 16006  0103FE  0EEB               	movlw	-21
 16007  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16008  010406                     l11941:
 16009                           
 16010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16011  010406  0E00               	movlw	0
 16012  010408  6EE6               	movwf	postinc1,c
 16013  01040A  0E00               	movlw	0
 16014  01040C  6EE6               	movwf	postinc1,c
 16015  01040E  0E20               	movlw	32
 16016  010410  6EE6               	movwf	postinc1,c
 16017  010412  0E41               	movlw	65
 16018  010414  6EE6               	movwf	postinc1,c
 16019                           
 16020                           ;stkvar	_u @ sp[(-60)+12]
 16021  010416  0ED0               	movlw	-48
 16022  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16023  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16024  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16025  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16026  010430  ECAD  F09E         	call	___flmul	;wreg free
 16027  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16028  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16029  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16030  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16031                           
 16032                           ;stkvar	_g @ sp[(-60)+16]
 16033  01044C  0ED4               	movlw	-44
 16034  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16035  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16036  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16037  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16038  010466  ECE0  F0C7         	call	___flge	;wreg free
 16039  01046A  A001               	btfss	btemp& (0+255),0,c
 16040  01046C  D032               	goto	l11947
 16041  01046E  D793               	goto	l11937
 16042  010470                     l11943:
 16043                           
 16044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16045  010470  0E00               	movlw	0
 16046  010472  6EE6               	movwf	postinc1,c
 16047  010474  0E00               	movlw	0
 16048  010476  6EE6               	movwf	postinc1,c
 16049  010478  0E20               	movlw	32
 16050  01047A  6EE6               	movwf	postinc1,c
 16051  01047C  0E41               	movlw	65
 16052  01047E  6EE6               	movwf	postinc1,c
 16053                           
 16054                           ;stkvar	_u @ sp[(-60)+12]
 16055  010480  0ED0               	movlw	-48
 16056  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16057  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16058  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16059  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16060  01049A  ECA0  F0A6         	call	___fldiv	;wreg free
 16061                           
 16062                           ;stkvar	_u @ sp[(-56)+12]
 16063  01049E  0ED4               	movlw	-44
 16064  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16065  0104A6  0ED5               	movlw	-43
 16066  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16067  0104AE  0ED6               	movlw	-42
 16068  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16069  0104B6  0ED7               	movlw	-41
 16070  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16071                           
 16072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16073                           ;stkvar	_e @ sp[(-56)+34]
 16074  0104BE  50E1               	movf	fsr1l,w,c
 16075  0104C0  0FEA               	addlw	-22
 16076  0104C2  6ED9               	movwf	fsr2l,c
 16077  0104C4  50E2               	movf	fsr1h,w,c
 16078  0104C6  6EDA               	movwf	fsr2h,c
 16079  0104C8  0EFF               	movlw	255
 16080  0104CA  22DA               	addwfc	fsr2h,f,c
 16081  0104CC  06DE               	decf	postinc2,f,c
 16082  0104CE  0E00               	movlw	0
 16083  0104D0  5ADD               	subwfb	postdec2,f,c
 16084  0104D2                     l11947:
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16087                           ;stkvar	_u @ sp[(-56)+12]
 16088  0104D2  0ED4               	movlw	-44
 16089  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16090  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16091  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16092  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16093                           
 16094                           ;stkvar	_g @ sp[(-60)+16]
 16095  0104EC  0ED4               	movlw	-44
 16096  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16097  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16098  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16099  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16100  010506  ECE0  F0C7         	call	___flge	;wreg free
 16101  01050A  A001               	btfss	btemp& (0+255),0,c
 16102  01050C  D7B1               	goto	l11943
 16103  01050E                     u11220:
 16104                           
 16105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16106                           ;stkvar	_c @ sp[(-56)+-7]
 16107  01050E  0EC1               	movlw	-63
 16108  010510  50E3               	movf	plusw1,w,c
 16109  010512  6EE6               	movwf	postinc1,c
 16110  010514  0E00               	movlw	0
 16111  010516  6EE6               	movwf	postinc1,c
 16112  010518  EC3E  F0D6         	call	_tolower	;wreg free
 16113                           
 16114                           ;stkvar	_mode @ sp[(-56)+54]
 16115  01051C  0EFE               	movlw	-2
 16116  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16117                           
 16118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16119                           ;stkvar	_mode @ sp[(-56)+54]
 16120                           ;stkvar	_nmode @ sp[(-56)+55]
 16121  010524  0EFE               	movlw	-2
 16122  010526  006F FF8C  F001    	movff	plusw1,btemp
 16123  01052C  0EFF               	movlw	-1
 16124  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16125                           
 16126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16127                           ;stkvar	_mode @ sp[(-56)+54]
 16128  010534  0EFE               	movlw	-2
 16129  010536  006F FF8C  F001    	movff	plusw1,btemp
 16130  01053C  0E67               	movlw	103
 16131  01053E  1801               	xorwf	btemp^0,w,c
 16132  010540  A4D8               	btfss	status,2,c
 16133  010542  D025               	goto	l11965
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16136  010544  503C               	movf	_prec^0,w,c
 16137  010546  103D               	iorwf	(_prec+1)^0,w,c
 16138  010548  A4D8               	btfss	status,2,c
 16139  01054A  D004               	goto	l11959
 16140                           
 16141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16142  01054C  0E00               	movlw	0
 16143  01054E  6E3D               	movwf	(_prec+1)^0,c
 16144  010550  0E01               	movlw	1
 16145  010552  6E3C               	movwf	_prec^0,c
 16146  010554                     l11959:
 16147                           
 16148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16149  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16150  010556  D005               	goto	u11250
 16151  010558  503D               	movf	(_prec+1)^0,w,c
 16152  01055A  E110               	bnz	l11963
 16153  01055C  043C               	decf	_prec^0,w,c
 16154  01055E  B0D8               	btfsc	status,0,c
 16155  010560  D00D               	goto	l11963
 16156  010562                     u11250:
 16157  010562  0E06               	movlw	6
 16158  010564  6E0B               	movwf	(btemp+10)^0,c
 16159  010566  0E00               	movlw	0
 16160  010568  6E0C               	movwf	(btemp+11)^0,c
 16161                           
 16162                           ;stkvar	_p @ sp[(-56)+40]
 16163  01056A  0EF0               	movlw	-16
 16164  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16165  010572  0EF1               	movlw	-15
 16166  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16167  01057A  D00C               	goto	l11971
 16168  01057C                     l11963:
 16169                           
 16170                           ;stkvar	_p @ sp[(-56)+40]
 16171  01057C  0EF0               	movlw	-16
 16172  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16173  010584  0EF1               	movlw	-15
 16174  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16175  01058C  D003               	goto	l11971
 16176  01058E                     l11965:
 16177                           
 16178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16179  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16180  010590  D7F5               	goto	l11963
 16181  010592  D7E7               	goto	u11250
 16182  010594                     l11971:
 16183                           
 16184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16185                           ;stkvar	_mode @ sp[(-56)+54]
 16186  010594  0EFE               	movlw	-2
 16187  010596  006F FF8C  F001    	movff	plusw1,btemp
 16188  01059C  0E67               	movlw	103
 16189  01059E  1801               	xorwf	btemp^0,w,c
 16190  0105A0  A4D8               	btfss	status,2,c
 16191  0105A2  D02F               	goto	l11981
 16192                           
 16193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16194                           ;stkvar	_e @ sp[(-56)+34]
 16195  0105A4  0EEB               	movlw	-21
 16196  0105A6  AEE3               	btfss	plusw1,7,c
 16197  0105A8  D00E               	goto	u11280
 16198  0105AA  0EEA               	movlw	-22
 16199  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16200  0105B2  0EFC               	movlw	252
 16201  0105B4  5E01               	subwf	btemp^0,f,c
 16202  0105B6  0EEB               	movlw	-21
 16203  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16204  0105BE  0EFF               	movlw	255
 16205  0105C0  5A01               	subwfb	btemp^0,f,c
 16206  0105C2  A0D8               	btfss	status,0,c
 16207  0105C4  D018               	goto	l11979
 16208  0105C6                     u11280:
 16209                           
 16210                           ;stkvar	_e @ sp[(-56)+34]
 16211                           ;stkvar	_p @ sp[(-56)+40]
 16212  0105C6  0EF0               	movlw	-16
 16213  0105C8  50E3               	movf	plusw1,w,c
 16214  0105CA  0FFF               	addlw	255
 16215  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16216  0105CE  0EF1               	movlw	-15
 16217  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16218  0105D6  0EFF               	movlw	255
 16219  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16220  0105DA  0EEA               	movlw	-22
 16221  0105DC  50E3               	movf	plusw1,w,c
 16222  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16223  0105E0  500C               	movf	(btemp+11)^0,w,c
 16224  0105E2  0A80               	xorlw	128
 16225  0105E4  6E01               	movwf	btemp^0,c
 16226  0105E6  0EEB               	movlw	-21
 16227  0105E8  50E3               	movf	plusw1,w,c
 16228  0105EA  0A80               	xorlw	128
 16229  0105EC  5801               	subwfb	btemp^0,w,c
 16230  0105EE  A0D8               	btfss	status,0,c
 16231  0105F0  D002               	goto	l11979
 16232                           
 16233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16234  0105F2  0E66               	movlw	102
 16235  0105F4  D001               	goto	L17
 16236  0105F6                     l11979:
 16237                           
 16238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16239  0105F6  0E65               	movlw	101
 16240  0105F8                     L17:
 16241  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16242                           
 16243                           ;stkvar	_nmode @ sp[(-56)+55]
 16244  0105FA  0EFF               	movlw	-1
 16245  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16246  010602                     l11981:
 16247                           
 16248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16249                           ;stkvar	_p @ sp[(-56)+40]
 16250                           ;stkvar	_m @ sp[(-56)+48]
 16251  010602  0EF0               	movlw	-16
 16252  010604  006F FF8C  F001    	movff	plusw1,btemp
 16253  01060A  0EF8               	movlw	-8
 16254  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16255  010612  0EF1               	movlw	-15
 16256  010614  006F FF8C  F001    	movff	plusw1,btemp
 16257  01061A  0EF9               	movlw	-7
 16258  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16261                           ;stkvar	_mode @ sp[(-56)+54]
 16262  010622  0EFE               	movlw	-2
 16263  010624  006F FF8C  F001    	movff	plusw1,btemp
 16264  01062A  0E67               	movlw	103
 16265  01062C  1801               	xorwf	btemp^0,w,c
 16266  01062E  A4D8               	btfss	status,2,c
 16267  010630  D00B               	goto	u11320
 16268                           
 16269                           ;stkvar	_nmode @ sp[(-56)+55]
 16270  010632  0EFF               	movlw	-1
 16271  010634  006F FF8C  F001    	movff	plusw1,btemp
 16272  01063A  0E66               	movlw	102
 16273  01063C  1801               	xorwf	btemp^0,w,c
 16274  01063E  A4D8               	btfss	status,2,c
 16275  010640  D014               	goto	l2232
 16276                           
 16277                           ;stkvar	_e @ sp[(-56)+34]
 16278  010642  0EEB               	movlw	-21
 16279  010644  AEE3               	btfss	plusw1,7,c
 16280  010646  D011               	goto	l2232
 16281  010648                     u11320:
 16282                           
 16283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16284                           ;stkvar	_m @ sp[(-56)+48]
 16285  010648  0EF8               	movlw	-8
 16286  01064A  50E3               	movf	plusw1,w,c
 16287  01064C  0F01               	addlw	1
 16288  01064E  6E01               	movwf	btemp^0,c
 16289  010650  0EF8               	movlw	-8
 16290  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16291  010658  6A01               	clrf	btemp^0,c
 16292  01065A  0EF9               	movlw	-7
 16293  01065C  50E3               	movf	plusw1,w,c
 16294  01065E  2001               	addwfc	btemp^0,w,c
 16295  010660  6E01               	movwf	btemp^0,c
 16296  010662  0EF9               	movlw	-7
 16297  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16298  01066A                     l2232:
 16299                           
 16300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16301                           ;stkvar	_nmode @ sp[(-56)+55]
 16302  01066A  0EFF               	movlw	-1
 16303  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16304  010672  0E66               	movlw	102
 16305  010674  1801               	xorwf	btemp^0,w,c
 16306  010676  A4D8               	btfss	status,2,c
 16307  010678  D03B               	goto	l12001
 16308                           
 16309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16310                           ;stkvar	_e @ sp[(-56)+34]
 16311  01067A  0EEB               	movlw	-21
 16312  01067C  AEE3               	btfss	plusw1,7,c
 16313  01067E  D01C               	goto	l11997
 16314                           
 16315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16316  010680  0E00               	movlw	0
 16317  010682  6E09               	movwf	(btemp+8)^0,c
 16318  010684  0E00               	movlw	0
 16319  010686  6E0A               	movwf	(btemp+9)^0,c
 16320  010688  0E80               	movlw	128
 16321  01068A  6E0B               	movwf	(btemp+10)^0,c
 16322  01068C  0E3F               	movlw	63
 16323  01068E  6E0C               	movwf	(btemp+11)^0,c
 16324                           
 16325                           ;stkvar	_u @ sp[(-56)+12]
 16326  010690  0ED4               	movlw	-44
 16327  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16328  010698  0ED5               	movlw	-43
 16329  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16330  0106A0  0ED6               	movlw	-42
 16331  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16332  0106A8  0ED7               	movlw	-41
 16333  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16336                           ;stkvar	_e @ sp[(-56)+34]
 16337  0106B0  0EEA               	movlw	-22
 16338  0106B2  6AE3               	clrf	plusw1,c
 16339  0106B4  0EEB               	movlw	-21
 16340  0106B6  6AE3               	clrf	plusw1,c
 16341  0106B8                     l11997:
 16342                           
 16343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16344                           ;stkvar	_mode @ sp[(-56)+54]
 16345  0106B8  0EFE               	movlw	-2
 16346  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16347  0106C0  0E67               	movlw	103
 16348  0106C2  1801               	xorwf	btemp^0,w,c
 16349  0106C4  B4D8               	btfsc	status,2,c
 16350  0106C6  D014               	goto	l12001
 16351                           
 16352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16353                           ;stkvar	_e @ sp[(-56)+34]
 16354                           ;stkvar	_m @ sp[(-56)+48]
 16355  0106C8  0EF8               	movlw	-8
 16356  0106CA  50E3               	movf	plusw1,w,c
 16357  0106CC  6E01               	movwf	btemp^0,c
 16358  0106CE  0EEA               	movlw	-22
 16359  0106D0  50E3               	movf	plusw1,w,c
 16360  0106D2  2601               	addwf	btemp^0,f,c
 16361  0106D4  0EF8               	movlw	-8
 16362  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16363  0106DC  0EF9               	movlw	-7
 16364  0106DE  50E3               	movf	plusw1,w,c
 16365  0106E0  6E01               	movwf	btemp^0,c
 16366  0106E2  0EEB               	movlw	-21
 16367  0106E4  50E3               	movf	plusw1,w,c
 16368  0106E6  2201               	addwfc	btemp^0,f,c
 16369  0106E8  0EF9               	movlw	-7
 16370  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16371  0106F0                     l12001:
 16372                           
 16373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16374                           ;stkvar	_i @ sp[(-56)+36]
 16375  0106F0  0EEC               	movlw	-20
 16376  0106F2  6AE3               	clrf	plusw1,c
 16377  0106F4  0EED               	movlw	-19
 16378  0106F6  6AE3               	clrf	plusw1,c
 16379                           
 16380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16381                           ;stkvar	_g @ sp[(-56)+16]
 16382  0106F8  0ED8               	movlw	-40
 16383  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16384  010700  0ED9               	movlw	-39
 16385  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16386  010708  0EDA               	movlw	-38
 16387  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16388  010710  0EDB               	movlw	-37
 16389  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16390                           
 16391                           ;stkvar	_h @ sp[(-56)+24]
 16392  010718  0EE0               	movlw	-32
 16393  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16394  010720  0EE1               	movlw	-31
 16395  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16396  010728  0EE2               	movlw	-30
 16397  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16398  010730  0EE3               	movlw	-29
 16399  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16400                           
 16401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16402                           ;stkvar	_u @ sp[(-56)+12]
 16403  010738  0ED4               	movlw	-44
 16404  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16405  010740  0ED5               	movlw	-43
 16406  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16407  010748  0ED6               	movlw	-42
 16408  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16409  010750  0ED7               	movlw	-41
 16410  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16411                           
 16412                           ;stkvar	_ou @ sp[(-56)+28]
 16413  010758  0EE4               	movlw	-28
 16414  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16415  010760  0EE5               	movlw	-27
 16416  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16417  010768  0EE6               	movlw	-26
 16418  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16419  010770  0EE7               	movlw	-25
 16420  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16421                           
 16422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16423  010778  D0D6               	goto	l12017
 16424  01077A                     l12007:
 16425                           
 16426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16427                           ;stkvar	_u @ sp[(-56)+12]
 16428  01077A  0ED4               	movlw	-44
 16429  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16433                           
 16434                           ;stkvar	_h @ sp[(-60)+24]
 16435  010794  0EDC               	movlw	-36
 16436  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16437  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16438  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16439  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16440  0107AE  ECA0  F0A6         	call	___fldiv	;wreg free
 16441  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16442  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16443  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16444  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16445  0107CA  EC2A  F0B2         	call	_floorf	;wreg free
 16446                           
 16447                           ;stkvar	_l @ sp[(-56)+20]
 16448  0107CE  0EDC               	movlw	-36
 16449  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16450  0107D6  0EDD               	movlw	-35
 16451  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16452  0107DE  0EDE               	movlw	-34
 16453  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16454  0107E6  0EDF               	movlw	-33
 16455  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16456                           
 16457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16458                           ;stkvar	_l @ sp[(-56)+20]
 16459  0107EE  0EDC               	movlw	-36
 16460  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16461  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16462  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16463  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16464  010808  EC27  F0C7         	call	___fltol	;wreg free
 16465  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16466  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16467                           
 16468                           ;stkvar	_d @ sp[(-56)+44]
 16469  010818  0EF4               	movlw	-12
 16470  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16471  010820  0EF5               	movlw	-11
 16472  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16473                           
 16474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16475                           ;stkvar	_u @ sp[(-56)+12]
 16476  010828  0ED4               	movlw	-44
 16477  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16478  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16479  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16480  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16481                           
 16482                           ;stkvar	_l @ sp[(-60)+20]
 16483  010842  0ED8               	movlw	-40
 16484  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16485  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16486  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16487  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16488  01085C  ECAD  F09E         	call	___flmul	;wreg free
 16489  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16490  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16491  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16492  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16493                           
 16494                           ;stkvar	_h @ sp[(-60)+24]
 16495  010878  0EDC               	movlw	-36
 16496  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16497  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16498  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16499  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16500  010892  EC95  F0DA         	call	___flsub	;wreg free
 16501                           
 16502                           ;stkvar	_h @ sp[(-56)+24]
 16503  010896  0EE0               	movlw	-32
 16504  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16505  01089E  0EE1               	movlw	-31
 16506  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16507  0108A6  0EE2               	movlw	-30
 16508  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16509  0108AE  0EE3               	movlw	-29
 16510  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16511                           
 16512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16513  0108B6  0E00               	movlw	0
 16514  0108B8  6EE6               	movwf	postinc1,c
 16515  0108BA  0E00               	movlw	0
 16516  0108BC  6EE6               	movwf	postinc1,c
 16517  0108BE  0E20               	movlw	32
 16518  0108C0  6EE6               	movwf	postinc1,c
 16519  0108C2  0E41               	movlw	65
 16520  0108C4  6EE6               	movwf	postinc1,c
 16521                           
 16522                           ;stkvar	_u @ sp[(-60)+12]
 16523  0108C6  0ED0               	movlw	-48
 16524  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16526  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16527  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16528  0108E0  ECA0  F0A6         	call	___fldiv	;wreg free
 16529                           
 16530                           ;stkvar	_u @ sp[(-56)+12]
 16531  0108E4  0ED4               	movlw	-44
 16532  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16533  0108EC  0ED5               	movlw	-43
 16534  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16535  0108F4  0ED6               	movlw	-42
 16536  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16537  0108FC  0ED7               	movlw	-41
 16538  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16539                           
 16540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16541                           ;stkvar	_i @ sp[(-56)+36]
 16542  010904  0EEC               	movlw	-20
 16543  010906  50E3               	movf	plusw1,w,c
 16544  010908  0F01               	addlw	1
 16545  01090A  6E01               	movwf	btemp^0,c
 16546  01090C  0EEC               	movlw	-20
 16547  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16548  010914  6A01               	clrf	btemp^0,c
 16549  010916  0EED               	movlw	-19
 16550  010918  50E3               	movf	plusw1,w,c
 16551  01091A  2001               	addwfc	btemp^0,w,c
 16552  01091C  6E01               	movwf	btemp^0,c
 16553  01091E  0EED               	movlw	-19
 16554  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16555  010926                     l12017:
 16556                           
 16557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16558                           ;stkvar	_m @ sp[(-56)+48]
 16559                           ;stkvar	_i @ sp[(-56)+36]
 16560  010926  50E1               	movf	fsr1l,w,c
 16561  010928  0FEC               	addlw	-20
 16562  01092A  6ED9               	movwf	fsr2l,c
 16563  01092C  50E2               	movf	fsr1h,w,c
 16564  01092E  6EDA               	movwf	fsr2h,c
 16565  010930  0EFF               	movlw	255
 16566  010932  22DA               	addwfc	fsr2h,f,c
 16567  010934  0EF8               	movlw	-8
 16568  010936  50E3               	movf	plusw1,w,c
 16569  010938  5CDE               	subwf	postinc2,w,c
 16570  01093A  50DE               	movf	postinc2,w,c
 16571  01093C  0A80               	xorlw	128
 16572  01093E  6E01               	movwf	btemp^0,c
 16573  010940  0EF9               	movlw	-7
 16574  010942  50E3               	movf	plusw1,w,c
 16575  010944  0A80               	xorlw	128
 16576  010946  5801               	subwfb	btemp^0,w,c
 16577  010948  A0D8               	btfss	status,0,c
 16578  01094A  D717               	goto	l12007
 16579                           
 16580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16581  01094C  0E00               	movlw	0
 16582  01094E  6EE6               	movwf	postinc1,c
 16583  010950  0E00               	movlw	0
 16584  010952  6EE6               	movwf	postinc1,c
 16585  010954  0EA0               	movlw	160
 16586  010956  6EE6               	movwf	postinc1,c
 16587  010958  0E40               	movlw	64
 16588  01095A  6EE6               	movwf	postinc1,c
 16589                           
 16590                           ;stkvar	_u @ sp[(-60)+12]
 16591  01095C  0ED0               	movlw	-48
 16592  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16593  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16594  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16595  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16596  010976  ECAD  F09E         	call	___flmul	;wreg free
 16597                           
 16598                           ;stkvar	_l @ sp[(-56)+20]
 16599  01097A  0EDC               	movlw	-36
 16600  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16601  010982  0EDD               	movlw	-35
 16602  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16603  01098A  0EDE               	movlw	-34
 16604  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16605  010992  0EDF               	movlw	-33
 16606  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16607                           
 16608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16609                           ;stkvar	_l @ sp[(-56)+20]
 16610  01099A  0EDC               	movlw	-36
 16611  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16612  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16613  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16614  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16615                           
 16616                           ;stkvar	_h @ sp[(-60)+24]
 16617  0109B4  0EDC               	movlw	-36
 16618  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16619  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16620  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16621  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16622  0109CE  ECE0  F0C7         	call	___flge	;wreg free
 16623  0109D2  A001               	btfss	btemp& (0+255),0,c
 16624  0109D4  D021               	goto	u11390
 16625                           
 16626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16627                           ;stkvar	_l @ sp[(-56)+20]
 16628                           
 16629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16630                           
 16631                           ;stkvar	_l @ sp[(-56)+20]
 16632                           
 16633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16634  0109D6  0EDC               	movlw	-36
 16635  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16636  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16637  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16638  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16639                           
 16640                           ;stkvar	_h @ sp[(-60)+24]
 16641  0109F0  0EDC               	movlw	-36
 16642  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16643  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16644  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16645  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16646  010A0A  EC2D  F0D2         	call	___fleq	;wreg free
 16647  010A0E  A001               	btfss	btemp& (0+255),0,c
 16648  010A10  D01B               	goto	l12031
 16649                           
 16650                           ;stkvar	_d @ sp[(-56)+44]
 16651  010A12  0EF4               	movlw	-12
 16652  010A14  B0E3               	btfsc	plusw1,0,c
 16653  010A16  D018               	goto	l12031
 16654  010A18                     u11390:
 16655                           
 16656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16657  010A18  0E00               	movlw	0
 16658  010A1A  6E09               	movwf	(btemp+8)^0,c
 16659  010A1C  0E00               	movlw	0
 16660  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16661  010A20  0E00               	movlw	0
 16662  010A22  6E0B               	movwf	(btemp+10)^0,c
 16663  010A24  0E00               	movlw	0
 16664  010A26  6E0C               	movwf	(btemp+11)^0,c
 16665                           
 16666                           ;stkvar	_l @ sp[(-56)+20]
 16667  010A28  0EDC               	movlw	-36
 16668  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16669  010A30  0EDD               	movlw	-35
 16670  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16671  010A38  0EDE               	movlw	-34
 16672  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16673  010A40  0EDF               	movlw	-33
 16674  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16675  010A48                     l12031:
 16676                           
 16677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16678                           ;stkvar	_l @ sp[(-56)+20]
 16679  010A48  0EDC               	movlw	-36
 16680  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16681  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16682  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16683  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16684                           
 16685                           ;stkvar	_g @ sp[(-60)+16]
 16686  010A62  0ED4               	movlw	-44
 16687  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16688  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16689  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16690  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16691  010A7C  ECC2  F0A2         	call	___fladd	;wreg free
 16692                           
 16693                           ;stkvar	_h @ sp[(-56)+24]
 16694  010A80  0EE0               	movlw	-32
 16695  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16696  010A88  0EE1               	movlw	-31
 16697  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16698  010A90  0EE2               	movlw	-30
 16699  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16700  010A98  0EE3               	movlw	-29
 16701  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16704                           ;stkvar	_ou @ sp[(-56)+28]
 16705  010AA0  0EE4               	movlw	-28
 16706  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16707  010AA8  0EE5               	movlw	-27
 16708  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16709  010AB0  0EE6               	movlw	-26
 16710  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16711  010AB8  0EE7               	movlw	-25
 16712  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16713                           
 16714                           ;stkvar	_u @ sp[(-56)+12]
 16715  010AC0  0ED4               	movlw	-44
 16716  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16717  010AC8  0ED5               	movlw	-43
 16718  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16719  010AD0  0ED6               	movlw	-42
 16720  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16721  010AD8  0ED7               	movlw	-41
 16722  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16725                           ;stkvar	_nmode @ sp[(-56)+55]
 16726  010AE0  0EFF               	movlw	-1
 16727  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16728  010AE8  0E65               	movlw	101
 16729  010AEA  1801               	xorwf	btemp^0,w,c
 16730  010AEC  B4D8               	btfsc	status,2,c
 16731  010AEE  D011               	goto	l12039
 16732                           
 16733                           ;stkvar	_e @ sp[(-56)+34]
 16734                           ;stkvar	_ne @ sp[(-56)+46]
 16735  010AF0  0EEA               	movlw	-22
 16736  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16737  010AF8  0EF6               	movlw	-10
 16738  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16739  010B00  0EEB               	movlw	-21
 16740  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16741  010B08  0EF7               	movlw	-9
 16742  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16743  010B10  D004               	goto	l2247
 16744  010B12                     l12039:
 16745                           
 16746                           ;stkvar	_ne @ sp[(-56)+46]
 16747  010B12  0EF6               	movlw	-10
 16748  010B14  6AE3               	clrf	plusw1,c
 16749  010B16  0EF7               	movlw	-9
 16750  010B18  6AE3               	clrf	plusw1,c
 16751  010B1A                     l2247:
 16752                           
 16753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16754                           ;stkvar	_pp @ sp[(-56)+50]
 16755  010B1A  0EFA               	movlw	-6
 16756  010B1C  6AE3               	clrf	plusw1,c
 16757  010B1E  0EFB               	movlw	-5
 16758  010B20  6AE3               	clrf	plusw1,c
 16759                           
 16760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16761                           ;stkvar	_t @ sp[(-56)+52]
 16762  010B22  0EFC               	movlw	-4
 16763  010B24  6AE3               	clrf	plusw1,c
 16764  010B26  0EFD               	movlw	-3
 16765  010B28  6AE3               	clrf	plusw1,c
 16766                           
 16767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16768                           ;stkvar	_i @ sp[(-56)+36]
 16769  010B2A  0EEC               	movlw	-20
 16770  010B2C  6AE3               	clrf	plusw1,c
 16771  010B2E  0EED               	movlw	-19
 16772  010B30  6AE3               	clrf	plusw1,c
 16773                           
 16774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16775  010B32  D1B7               	goto	l12091
 16776  010B34                     l12041:
 16777                           
 16778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16779                           ;stkvar	_u @ sp[(-56)+12]
 16780  010B34  0ED4               	movlw	-44
 16781  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16783  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16785                           
 16786                           ;stkvar	_h @ sp[(-60)+24]
 16787  010B4E  0EDC               	movlw	-36
 16788  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16789  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16790  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16791  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16792  010B68  ECA0  F0A6         	call	___fldiv	;wreg free
 16793  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16794  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16795  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16796  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16797  010B84  EC2A  F0B2         	call	_floorf	;wreg free
 16798                           
 16799                           ;stkvar	_l @ sp[(-56)+20]
 16800  010B88  0EDC               	movlw	-36
 16801  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16802  010B90  0EDD               	movlw	-35
 16803  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16804  010B98  0EDE               	movlw	-34
 16805  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16806  010BA0  0EDF               	movlw	-33
 16807  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16808                           
 16809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16810                           ;stkvar	_l @ sp[(-56)+20]
 16811  010BA8  0EDC               	movlw	-36
 16812  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16814  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16815  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  010BC2  EC27  F0C7         	call	___fltol	;wreg free
 16817  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16818  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16819                           
 16820                           ;stkvar	_d @ sp[(-56)+44]
 16821  010BD2  0EF4               	movlw	-12
 16822  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16823  010BDA  0EF5               	movlw	-11
 16824  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16825                           
 16826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16827  010BE2  B83E               	btfsc	_flags^0,4,c
 16828  010BE4  D026               	goto	l12055
 16829                           
 16830                           ;stkvar	_d @ sp[(-56)+44]
 16831  010BE6  0EF4               	movlw	-12
 16832  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16833  010BEE  0EF5               	movlw	-11
 16834  010BF0  50E3               	movf	plusw1,w,c
 16835  010BF2  1001               	iorwf	btemp^0,w,c
 16836  010BF4  A4D8               	btfss	status,2,c
 16837  010BF6  D01D               	goto	l12055
 16838                           
 16839                           ;stkvar	_mode @ sp[(-56)+54]
 16840  010BF8  0EFE               	movlw	-2
 16841  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16842  010C00  0E67               	movlw	103
 16843  010C02  1801               	xorwf	btemp^0,w,c
 16844  010C04  A4D8               	btfss	status,2,c
 16845  010C06  D015               	goto	l12055
 16846                           
 16847                           ;stkvar	_ne @ sp[(-56)+46]
 16848  010C08  0EF7               	movlw	-9
 16849  010C0A  AEE3               	btfss	plusw1,7,c
 16850  010C0C  D012               	goto	l12055
 16851                           
 16852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16853                           ;stkvar	_t @ sp[(-56)+52]
 16854  010C0E  0EFC               	movlw	-4
 16855  010C10  50E3               	movf	plusw1,w,c
 16856  010C12  0F01               	addlw	1
 16857  010C14  6E01               	movwf	btemp^0,c
 16858  010C16  0EFC               	movlw	-4
 16859  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16860  010C1E  6A01               	clrf	btemp^0,c
 16861  010C20  0EFD               	movlw	-3
 16862  010C22  50E3               	movf	plusw1,w,c
 16863  010C24  2001               	addwfc	btemp^0,w,c
 16864  010C26  6E01               	movwf	btemp^0,c
 16865  010C28  0EFD               	movlw	-3
 16866  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16867                           
 16868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16869  010C30  D0AF               	goto	l12083
 16870  010C32                     l12055:
 16871                           
 16872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16873                           ;stkvar	_pp @ sp[(-56)+50]
 16874  010C32  0EFA               	movlw	-6
 16875  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16876  010C3A  0EFB               	movlw	-5
 16877  010C3C  50E3               	movf	plusw1,w,c
 16878  010C3E  1001               	iorwf	btemp^0,w,c
 16879  010C40  A4D8               	btfss	status,2,c
 16880  010C42  D070               	goto	l12075
 16881                           
 16882                           ;stkvar	_ne @ sp[(-56)+46]
 16883  010C44  0EF7               	movlw	-9
 16884  010C46  AEE3               	btfss	plusw1,7,c
 16885  010C48  D06D               	goto	l12075
 16886                           
 16887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16888                           ;stkvar	_n @ sp[(-56)+32]
 16889  010C4A  0EE8               	movlw	-24
 16890  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16891  010C52  0EE9               	movlw	-23
 16892  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16893  010C5A  0E97               	movlw	low _dbuf
 16894  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16895  010C5E  6ED9               	movwf	fsr2l,c
 16896  010C60  0E02               	movlw	high _dbuf
 16897  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16898  010C64  6EDA               	movwf	fsr2h,c
 16899  010C66  0E2E               	movlw	46
 16900  010C68  6EDF               	movwf	indf2,c
 16901                           
 16902                           ;stkvar	_n @ sp[(-56)+32]
 16903  010C6A  0EE8               	movlw	-24
 16904  010C6C  50E3               	movf	plusw1,w,c
 16905  010C6E  0F01               	addlw	1
 16906  010C70  6E01               	movwf	btemp^0,c
 16907  010C72  0EE8               	movlw	-24
 16908  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16909  010C7A  6A01               	clrf	btemp^0,c
 16910  010C7C  0EE9               	movlw	-23
 16911  010C7E  50E3               	movf	plusw1,w,c
 16912  010C80  2001               	addwfc	btemp^0,w,c
 16913  010C82  6E01               	movwf	btemp^0,c
 16914  010C84  0EE9               	movlw	-23
 16915  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16916                           
 16917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16918                           ;stkvar	_w @ sp[(-56)+38]
 16919  010C8C  50E1               	movf	fsr1l,w,c
 16920  010C8E  0FEE               	addlw	-18
 16921  010C90  6ED9               	movwf	fsr2l,c
 16922  010C92  50E2               	movf	fsr1h,w,c
 16923  010C94  6EDA               	movwf	fsr2h,c
 16924  010C96  0EFF               	movlw	255
 16925  010C98  22DA               	addwfc	fsr2h,f,c
 16926  010C9A  06DE               	decf	postinc2,f,c
 16927  010C9C  0E00               	movlw	0
 16928  010C9E  5ADD               	subwfb	postdec2,f,c
 16929                           
 16930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16931  010CA0  0E01               	movlw	1
 16932  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16933  010CA4  0E00               	movlw	0
 16934  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16935                           
 16936                           ;stkvar	_pp @ sp[(-56)+50]
 16937  010CA8  0EFA               	movlw	-6
 16938  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16939  010CB0  0EFB               	movlw	-5
 16940  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16941  010CB8  D035               	goto	l12075
 16942  010CBA                     l12067:
 16943                           
 16944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16945                           ;stkvar	_n @ sp[(-56)+32]
 16946  010CBA  0EE8               	movlw	-24
 16947  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16948  010CC2  0EE9               	movlw	-23
 16949  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16950  010CCA  0E97               	movlw	low _dbuf
 16951  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16952  010CCE  6ED9               	movwf	fsr2l,c
 16953  010CD0  0E02               	movlw	high _dbuf
 16954  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16955  010CD4  6EDA               	movwf	fsr2h,c
 16956  010CD6  0E30               	movlw	48
 16957  010CD8  6EDF               	movwf	indf2,c
 16958                           
 16959                           ;stkvar	_n @ sp[(-56)+32]
 16960  010CDA  0EE8               	movlw	-24
 16961  010CDC  50E3               	movf	plusw1,w,c
 16962  010CDE  0F01               	addlw	1
 16963  010CE0  6E01               	movwf	btemp^0,c
 16964  010CE2  0EE8               	movlw	-24
 16965  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16966  010CEA  6A01               	clrf	btemp^0,c
 16967  010CEC  0EE9               	movlw	-23
 16968  010CEE  50E3               	movf	plusw1,w,c
 16969  010CF0  2001               	addwfc	btemp^0,w,c
 16970  010CF2  6E01               	movwf	btemp^0,c
 16971  010CF4  0EE9               	movlw	-23
 16972  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16973                           
 16974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16975                           ;stkvar	_w @ sp[(-56)+38]
 16976  010CFC  50E1               	movf	fsr1l,w,c
 16977  010CFE  0FEE               	addlw	-18
 16978  010D00  6ED9               	movwf	fsr2l,c
 16979  010D02  50E2               	movf	fsr1h,w,c
 16980  010D04  6EDA               	movwf	fsr2h,c
 16981  010D06  0EFF               	movlw	255
 16982  010D08  22DA               	addwfc	fsr2h,f,c
 16983  010D0A  06DE               	decf	postinc2,f,c
 16984  010D0C  0E00               	movlw	0
 16985  010D0E  5ADD               	subwfb	postdec2,f,c
 16986                           
 16987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16988                           ;stkvar	_t @ sp[(-56)+52]
 16989  010D10  50E1               	movf	fsr1l,w,c
 16990  010D12  0FFC               	addlw	-4
 16991  010D14  6ED9               	movwf	fsr2l,c
 16992  010D16  50E2               	movf	fsr1h,w,c
 16993  010D18  6EDA               	movwf	fsr2h,c
 16994  010D1A  0EFF               	movlw	255
 16995  010D1C  22DA               	addwfc	fsr2h,f,c
 16996  010D1E  06DE               	decf	postinc2,f,c
 16997  010D20  0E00               	movlw	0
 16998  010D22  5ADD               	subwfb	postdec2,f,c
 16999  010D24                     l12075:
 17000                           
 17001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17002                           ;stkvar	_t @ sp[(-56)+52]
 17003  010D24  0EFC               	movlw	-4
 17004  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17005  010D2C  0EFD               	movlw	-3
 17006  010D2E  50E3               	movf	plusw1,w,c
 17007  010D30  1001               	iorwf	btemp^0,w,c
 17008  010D32  A4D8               	btfss	status,2,c
 17009  010D34  D7C2               	goto	l12067
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17012                           ;stkvar	_n @ sp[(-56)+32]
 17013  010D36  0EE8               	movlw	-24
 17014  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17015  010D3E  0EE9               	movlw	-23
 17016  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17017  010D46  0E97               	movlw	low _dbuf
 17018  010D48  240B               	addwf	(btemp+10)^0,w,c
 17019  010D4A  6ED9               	movwf	fsr2l,c
 17020  010D4C  0E02               	movlw	high _dbuf
 17021  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17022  010D50  6EDA               	movwf	fsr2h,c
 17023                           
 17024                           ;stkvar	_d @ sp[(-56)+44]
 17025  010D52  0EF4               	movlw	-12
 17026  010D54  50E3               	movf	plusw1,w,c
 17027  010D56  0F30               	addlw	48
 17028  010D58  6EDF               	movwf	indf2,c
 17029                           
 17030                           ;stkvar	_n @ sp[(-56)+32]
 17031  010D5A  0EE8               	movlw	-24
 17032  010D5C  50E3               	movf	plusw1,w,c
 17033  010D5E  0F01               	addlw	1
 17034  010D60  6E01               	movwf	btemp^0,c
 17035  010D62  0EE8               	movlw	-24
 17036  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17037  010D6A  6A01               	clrf	btemp^0,c
 17038  010D6C  0EE9               	movlw	-23
 17039  010D6E  50E3               	movf	plusw1,w,c
 17040  010D70  2001               	addwfc	btemp^0,w,c
 17041  010D72  6E01               	movwf	btemp^0,c
 17042  010D74  0EE9               	movlw	-23
 17043  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17046                           ;stkvar	_w @ sp[(-56)+38]
 17047  010D7C  50E1               	movf	fsr1l,w,c
 17048  010D7E  0FEE               	addlw	-18
 17049  010D80  6ED9               	movwf	fsr2l,c
 17050  010D82  50E2               	movf	fsr1h,w,c
 17051  010D84  6EDA               	movwf	fsr2h,c
 17052  010D86  0EFF               	movlw	255
 17053  010D88  22DA               	addwfc	fsr2h,f,c
 17054  010D8A  06DE               	decf	postinc2,f,c
 17055  010D8C  0E00               	movlw	0
 17056  010D8E  5ADD               	subwfb	postdec2,f,c
 17057  010D90                     l12083:
 17058                           
 17059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17060                           ;stkvar	_u @ sp[(-56)+12]
 17061  010D90  0ED4               	movlw	-44
 17062  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17063  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17064  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17065  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17066                           
 17067                           ;stkvar	_l @ sp[(-60)+20]
 17068  010DAA  0ED8               	movlw	-40
 17069  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17070  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17071  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17072  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17073  010DC4  ECAD  F09E         	call	___flmul	;wreg free
 17074  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17075  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17076  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17077  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17078                           
 17079                           ;stkvar	_h @ sp[(-60)+24]
 17080  010DE0  0EDC               	movlw	-36
 17081  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17084  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17085  010DFA  EC95  F0DA         	call	___flsub	;wreg free
 17086                           
 17087                           ;stkvar	_h @ sp[(-56)+24]
 17088  010DFE  0EE0               	movlw	-32
 17089  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17090  010E06  0EE1               	movlw	-31
 17091  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17092  010E0E  0EE2               	movlw	-30
 17093  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17094  010E16  0EE3               	movlw	-29
 17095  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17096                           
 17097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17098  010E1E  0E00               	movlw	0
 17099  010E20  6EE6               	movwf	postinc1,c
 17100  010E22  0E00               	movlw	0
 17101  010E24  6EE6               	movwf	postinc1,c
 17102  010E26  0E20               	movlw	32
 17103  010E28  6EE6               	movwf	postinc1,c
 17104  010E2A  0E41               	movlw	65
 17105  010E2C  6EE6               	movwf	postinc1,c
 17106                           
 17107                           ;stkvar	_u @ sp[(-60)+12]
 17108  010E2E  0ED0               	movlw	-48
 17109  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17110  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17111  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17112  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17113  010E48  ECA0  F0A6         	call	___fldiv	;wreg free
 17114                           
 17115                           ;stkvar	_u @ sp[(-56)+12]
 17116  010E4C  0ED4               	movlw	-44
 17117  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17118  010E54  0ED5               	movlw	-43
 17119  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17120  010E5C  0ED6               	movlw	-42
 17121  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17122  010E64  0ED7               	movlw	-41
 17123  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17124                           
 17125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17126                           ;stkvar	_ne @ sp[(-56)+46]
 17127  010E6C  50E1               	movf	fsr1l,w,c
 17128  010E6E  0FF6               	addlw	-10
 17129  010E70  6ED9               	movwf	fsr2l,c
 17130  010E72  50E2               	movf	fsr1h,w,c
 17131  010E74  6EDA               	movwf	fsr2h,c
 17132  010E76  0EFF               	movlw	255
 17133  010E78  22DA               	addwfc	fsr2h,f,c
 17134  010E7A  06DE               	decf	postinc2,f,c
 17135  010E7C  0E00               	movlw	0
 17136  010E7E  5ADD               	subwfb	postdec2,f,c
 17137                           
 17138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17139                           ;stkvar	_i @ sp[(-56)+36]
 17140  010E80  0EEC               	movlw	-20
 17141  010E82  50E3               	movf	plusw1,w,c
 17142  010E84  0F01               	addlw	1
 17143  010E86  6E01               	movwf	btemp^0,c
 17144  010E88  0EEC               	movlw	-20
 17145  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17146  010E90  6A01               	clrf	btemp^0,c
 17147  010E92  0EED               	movlw	-19
 17148  010E94  50E3               	movf	plusw1,w,c
 17149  010E96  2001               	addwfc	btemp^0,w,c
 17150  010E98  6E01               	movwf	btemp^0,c
 17151  010E9A  0EED               	movlw	-19
 17152  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17153  010EA2                     l12091:
 17154                           
 17155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17156                           ;stkvar	_m @ sp[(-56)+48]
 17157                           ;stkvar	_i @ sp[(-56)+36]
 17158  010EA2  50E1               	movf	fsr1l,w,c
 17159  010EA4  0FEC               	addlw	-20
 17160  010EA6  6ED9               	movwf	fsr2l,c
 17161  010EA8  50E2               	movf	fsr1h,w,c
 17162  010EAA  6EDA               	movwf	fsr2h,c
 17163  010EAC  0EFF               	movlw	255
 17164  010EAE  22DA               	addwfc	fsr2h,f,c
 17165  010EB0  0EF8               	movlw	-8
 17166  010EB2  50E3               	movf	plusw1,w,c
 17167  010EB4  5CDE               	subwf	postinc2,w,c
 17168  010EB6  50DE               	movf	postinc2,w,c
 17169  010EB8  0A80               	xorlw	128
 17170  010EBA  6E01               	movwf	btemp^0,c
 17171  010EBC  0EF9               	movlw	-7
 17172  010EBE  50E3               	movf	plusw1,w,c
 17173  010EC0  0A80               	xorlw	128
 17174  010EC2  5801               	subwfb	btemp^0,w,c
 17175  010EC4  B0D8               	btfsc	status,0,c
 17176  010EC6  D00E               	goto	u11490
 17177                           
 17178                           ;stkvar	_n @ sp[(-56)+32]
 17179  010EC8  0EE9               	movlw	-23
 17180  010ECA  BEE3               	btfsc	plusw1,7,c
 17181  010ECC  D633               	goto	l12041
 17182  010ECE  0EE9               	movlw	-23
 17183  010ED0  50E3               	movf	plusw1,w,c
 17184  010ED2  E108               	bnz	u11490
 17185  010ED4  0EE8               	movlw	-24
 17186  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17187  010EDC  0E4B               	movlw	75
 17188  010EDE  5E01               	subwf	btemp^0,f,c
 17189  010EE0  A0D8               	btfss	status,0,c
 17190  010EE2  D628               	goto	l12041
 17191  010EE4                     u11490:
 17192                           
 17193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17194                           ;stkvar	_pp @ sp[(-56)+50]
 17195  010EE4  0EFA               	movlw	-6
 17196  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17197  010EEC  0EFB               	movlw	-5
 17198  010EEE  50E3               	movf	plusw1,w,c
 17199  010EF0  1001               	iorwf	btemp^0,w,c
 17200  010EF2  B4D8               	btfsc	status,2,c
 17201  010EF4  A83E               	btfss	_flags^0,4,c
 17202  010EF6  D021               	goto	l12103
 17203                           
 17204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17205                           ;stkvar	_n @ sp[(-56)+32]
 17206  010EF8  0EE8               	movlw	-24
 17207  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17208  010F00  0EE9               	movlw	-23
 17209  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17210  010F08  0E97               	movlw	low _dbuf
 17211  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17212  010F0C  6ED9               	movwf	fsr2l,c
 17213  010F0E  0E02               	movlw	high _dbuf
 17214  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17215  010F12  6EDA               	movwf	fsr2h,c
 17216  010F14  0E2E               	movlw	46
 17217  010F16  6EDF               	movwf	indf2,c
 17218                           
 17219                           ;stkvar	_n @ sp[(-56)+32]
 17220  010F18  0EE8               	movlw	-24
 17221  010F1A  50E3               	movf	plusw1,w,c
 17222  010F1C  0F01               	addlw	1
 17223  010F1E  6E01               	movwf	btemp^0,c
 17224  010F20  0EE8               	movlw	-24
 17225  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17226  010F28  6A01               	clrf	btemp^0,c
 17227  010F2A  0EE9               	movlw	-23
 17228  010F2C  50E3               	movf	plusw1,w,c
 17229  010F2E  2001               	addwfc	btemp^0,w,c
 17230  010F30  6E01               	movwf	btemp^0,c
 17231  010F32  0EE9               	movlw	-23
 17232  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17233  010F3A                     l12103:
 17234                           
 17235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17236                           ;stkvar	_n @ sp[(-56)+32]
 17237  010F3A  0EE8               	movlw	-24
 17238  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17239  010F42  0EE9               	movlw	-23
 17240  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17241  010F4A  0E97               	movlw	low _dbuf
 17242  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17243  010F4E  6ED9               	movwf	fsr2l,c
 17244  010F50  0E02               	movlw	high _dbuf
 17245  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17246  010F54  6EDA               	movwf	fsr2h,c
 17247  010F56  0E00               	movlw	0
 17248  010F58  6EDF               	movwf	indf2,c
 17249                           
 17250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17251                           ;stkvar	_nmode @ sp[(-56)+55]
 17252  010F5A  0EFF               	movlw	-1
 17253  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17254  010F62  0E65               	movlw	101
 17255  010F64  1801               	xorwf	btemp^0,w,c
 17256  010F66  A4D8               	btfss	status,2,c
 17257  010F68  EF16  F081         	goto	l11907
 17258                           
 17259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17260  010F6C  0E4F               	movlw	79
 17261  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17262  010F70  0E00               	movlw	0
 17263  010F72  6E0C               	movwf	(btemp+11)^0,c
 17264                           
 17265                           ;stkvar	_i @ sp[(-56)+36]
 17266  010F74  0EEC               	movlw	-20
 17267  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17268  010F7C  0EED               	movlw	-19
 17269  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17270                           
 17271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17272                           ;stkvar	_i @ sp[(-56)+36]
 17273  010F84  0EEC               	movlw	-20
 17274  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17275  010F8C  0EED               	movlw	-19
 17276  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17277  010F94  0E97               	movlw	low _dbuf
 17278  010F96  240B               	addwf	(btemp+10)^0,w,c
 17279  010F98  6ED9               	movwf	fsr2l,c
 17280  010F9A  0E02               	movlw	high _dbuf
 17281  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17282  010F9E  6EDA               	movwf	fsr2h,c
 17283  010FA0  0E00               	movlw	0
 17284  010FA2  6EDF               	movwf	indf2,c
 17285                           
 17286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17287                           ;stkvar	_sign @ sp[(-56)+42]
 17288  010FA4  0EF2               	movlw	-14
 17289  010FA6  6AE3               	clrf	plusw1,c
 17290  010FA8  0EF3               	movlw	-13
 17291  010FAA  6AE3               	clrf	plusw1,c
 17292                           
 17293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17294                           ;stkvar	_e @ sp[(-56)+34]
 17295  010FAC  0EEB               	movlw	-21
 17296  010FAE  AEE3               	btfss	plusw1,7,c
 17297  010FB0  D012               	goto	l12117
 17298                           
 17299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17300  010FB2  0E01               	movlw	1
 17301  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17302  010FB6  0E00               	movlw	0
 17303  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17304                           
 17305                           ;stkvar	_sign @ sp[(-56)+42]
 17306  010FBA  0EF2               	movlw	-14
 17307  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17308  010FC2  0EF3               	movlw	-13
 17309  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17310                           
 17311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17312                           ;stkvar	_e @ sp[(-56)+34]
 17313                           ;stkvar	_e @ sp[(-56)+34]
 17314  010FCA  0EEA               	movlw	-22
 17315  010FCC  6CE3               	negf	plusw1,c
 17316  010FCE  0EEB               	movlw	-21
 17317  010FD0  1EE3               	comf	plusw1,f,c
 17318  010FD2  B0D8               	btfsc	status,0,c
 17319  010FD4  2AE3               	incf	plusw1,f,c
 17320  010FD6                     l12117:
 17321                           
 17322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17323  010FD6  0E02               	movlw	2
 17324  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17325  010FDA  0E00               	movlw	0
 17326  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17327                           
 17328                           ;stkvar	_p @ sp[(-56)+40]
 17329  010FDE  0EF0               	movlw	-16
 17330  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17331  010FE6  0EF1               	movlw	-15
 17332  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17333                           
 17334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17335  010FEE  D051               	goto	l12129
 17336  010FF0                     l12119:
 17337                           
 17338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17339                           ;stkvar	_i @ sp[(-56)+36]
 17340  010FF0  50E1               	movf	fsr1l,w,c
 17341  010FF2  0FEC               	addlw	-20
 17342  010FF4  6ED9               	movwf	fsr2l,c
 17343  010FF6  50E2               	movf	fsr1h,w,c
 17344  010FF8  6EDA               	movwf	fsr2h,c
 17345  010FFA  0EFF               	movlw	255
 17346  010FFC  22DA               	addwfc	fsr2h,f,c
 17347  010FFE  06DE               	decf	postinc2,f,c
 17348  011000  0E00               	movlw	0
 17349  011002  5ADD               	subwfb	postdec2,f,c
 17350                           
 17351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17352                           ;stkvar	_i @ sp[(-56)+36]
 17353  011004  0EEC               	movlw	-20
 17354  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17355  01100C  0EED               	movlw	-19
 17356  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17357  011014  0E97               	movlw	low _dbuf
 17358  011016  240B               	addwf	(btemp+10)^0,w,c
 17359  011018  6ED9               	movwf	fsr2l,c
 17360  01101A  0E02               	movlw	high _dbuf
 17361  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17362  01101E  6EDA               	movwf	fsr2h,c
 17363  011020  0E0A               	movlw	10
 17364  011022  6EE6               	movwf	postinc1,c
 17365  011024  0E00               	movlw	0
 17366  011026  6EE6               	movwf	postinc1,c
 17367                           
 17368                           ;stkvar	_e @ sp[(-58)+34]
 17369  011028  0EE8               	movlw	-24
 17370  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17371  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17372  011036  ECE3  F0CC         	call	___awmod	;wreg free
 17373  01103A  5001               	movf	btemp^0,w,c
 17374  01103C  0F30               	addlw	48
 17375  01103E  6EDF               	movwf	indf2,c
 17376                           
 17377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17378  011040  0E0A               	movlw	10
 17379  011042  6EE6               	movwf	postinc1,c
 17380  011044  0E00               	movlw	0
 17381  011046  6EE6               	movwf	postinc1,c
 17382                           
 17383                           ;stkvar	_e @ sp[(-58)+34]
 17384  011048  0EE8               	movlw	-24
 17385  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17386  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17387  011056  EC43  F0C9         	call	___awdiv	;wreg free
 17388                           
 17389                           ;stkvar	_e @ sp[(-56)+34]
 17390  01105A  0EEA               	movlw	-22
 17391  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17392  011062  0EEB               	movlw	-21
 17393  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17394                           
 17395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17396                           ;stkvar	_p @ sp[(-56)+40]
 17397  01106A  50E1               	movf	fsr1l,w,c
 17398  01106C  0FF0               	addlw	-16
 17399  01106E  6ED9               	movwf	fsr2l,c
 17400  011070  50E2               	movf	fsr1h,w,c
 17401  011072  6EDA               	movwf	fsr2h,c
 17402  011074  0EFF               	movlw	255
 17403  011076  22DA               	addwfc	fsr2h,f,c
 17404  011078  06DE               	decf	postinc2,f,c
 17405  01107A  0E00               	movlw	0
 17406  01107C  5ADD               	subwfb	postdec2,f,c
 17407                           
 17408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17409                           ;stkvar	_w @ sp[(-56)+38]
 17410  01107E  50E1               	movf	fsr1l,w,c
 17411  011080  0FEE               	addlw	-18
 17412  011082  6ED9               	movwf	fsr2l,c
 17413  011084  50E2               	movf	fsr1h,w,c
 17414  011086  6EDA               	movwf	fsr2h,c
 17415  011088  0EFF               	movlw	255
 17416  01108A  22DA               	addwfc	fsr2h,f,c
 17417  01108C  06DE               	decf	postinc2,f,c
 17418  01108E  0E00               	movlw	0
 17419  011090  5ADD               	subwfb	postdec2,f,c
 17420  011092                     l12129:
 17421                           
 17422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17423                           ;stkvar	_e @ sp[(-56)+34]
 17424  011092  0EEA               	movlw	-22
 17425  011094  006F FF8C  F001    	movff	plusw1,btemp
 17426  01109A  0EEB               	movlw	-21
 17427  01109C  50E3               	movf	plusw1,w,c
 17428  01109E  1001               	iorwf	btemp^0,w,c
 17429  0110A0  A4D8               	btfss	status,2,c
 17430  0110A2  D7A6               	goto	l12119
 17431                           
 17432                           ;stkvar	_p @ sp[(-56)+40]
 17433  0110A4  0EF1               	movlw	-15
 17434  0110A6  BEE3               	btfsc	plusw1,7,c
 17435  0110A8  D007               	goto	u11550
 17436  0110AA  0EF1               	movlw	-15
 17437  0110AC  50E3               	movf	plusw1,w,c
 17438  0110AE  E1A0               	bnz	l12119
 17439  0110B0  0EF0               	movlw	-16
 17440  0110B2  04E3               	decf	plusw1,w,c
 17441  0110B4  B0D8               	btfsc	status,0,c
 17442  0110B6  D79C               	goto	l12119
 17443  0110B8                     u11550:
 17444                           
 17445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17446                           ;stkvar	_i @ sp[(-56)+36]
 17447  0110B8  50E1               	movf	fsr1l,w,c
 17448  0110BA  0FEC               	addlw	-20
 17449  0110BC  6ED9               	movwf	fsr2l,c
 17450  0110BE  50E2               	movf	fsr1h,w,c
 17451  0110C0  6EDA               	movwf	fsr2h,c
 17452  0110C2  0EFF               	movlw	255
 17453  0110C4  22DA               	addwfc	fsr2h,f,c
 17454  0110C6  06DE               	decf	postinc2,f,c
 17455  0110C8  0E00               	movlw	0
 17456  0110CA  5ADD               	subwfb	postdec2,f,c
 17457                           
 17458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17459                           ;stkvar	_sign @ sp[(-56)+42]
 17460  0110CC  0EF2               	movlw	-14
 17461  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17462  0110D4  0EF3               	movlw	-13
 17463  0110D6  50E3               	movf	plusw1,w,c
 17464  0110D8  1001               	iorwf	btemp^0,w,c
 17465  0110DA  A4D8               	btfss	status,2,c
 17466  0110DC  D002               	goto	l12139
 17467  0110DE  0E2B               	movlw	43
 17468  0110E0  D001               	goto	L18
 17469  0110E2                     l12139:
 17470  0110E2  0E2D               	movlw	45
 17471  0110E4                     L18:
 17472  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17473  0110E6  0E00               	movlw	0
 17474  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17475                           
 17476                           ;stkvar	_efgtoa$5508 @ sp[(-56)+4]
 17477  0110EA  0ECC               	movlw	-52
 17478  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17479  0110F2  0ECD               	movlw	-51
 17480  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17481                           
 17482                           ;stkvar	_efgtoa$5508 @ sp[(-56)+4]
 17483                           ;stkvar	_i @ sp[(-56)+36]
 17484  0110FA  0EEC               	movlw	-20
 17485  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17486  011102  0EED               	movlw	-19
 17487  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17488  01110A  0E97               	movlw	low _dbuf
 17489  01110C  240B               	addwf	(btemp+10)^0,w,c
 17490  01110E  6ED9               	movwf	fsr2l,c
 17491  011110  0E02               	movlw	high _dbuf
 17492  011112  200C               	addwfc	(btemp+11)^0,w,c
 17493  011114  6EDA               	movwf	fsr2h,c
 17494  011116  0ECC               	movlw	-52
 17495  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17496                           
 17497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17498                           ;stkvar	_w @ sp[(-56)+38]
 17499  01111E  50E1               	movf	fsr1l,w,c
 17500  011120  0FEE               	addlw	-18
 17501  011122  6ED9               	movwf	fsr2l,c
 17502  011124  50E2               	movf	fsr1h,w,c
 17503  011126  6EDA               	movwf	fsr2h,c
 17504  011128  0EFF               	movlw	255
 17505  01112A  22DA               	addwfc	fsr2h,f,c
 17506  01112C  06DE               	decf	postinc2,f,c
 17507  01112E  0E00               	movlw	0
 17508  011130  5ADD               	subwfb	postdec2,f,c
 17509                           
 17510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17511                           ;stkvar	_i @ sp[(-56)+36]
 17512  011132  50E1               	movf	fsr1l,w,c
 17513  011134  0FEC               	addlw	-20
 17514  011136  6ED9               	movwf	fsr2l,c
 17515  011138  50E2               	movf	fsr1h,w,c
 17516  01113A  6EDA               	movwf	fsr2h,c
 17517  01113C  0EFF               	movlw	255
 17518  01113E  22DA               	addwfc	fsr2h,f,c
 17519  011140  06DE               	decf	postinc2,f,c
 17520  011142  0E00               	movlw	0
 17521  011144  5ADD               	subwfb	postdec2,f,c
 17522  011146  0EBF               	movlw	191
 17523  011148  6E0B               	movwf	(btemp+10)^0,c
 17524  01114A  0EFF               	movlw	255
 17525  01114C  6E0C               	movwf	(btemp+11)^0,c
 17526                           
 17527                           ;stkvar	_c @ sp[(-56)+-7]
 17528  01114E  0EC1               	movlw	-63
 17529  011150  50E3               	movf	plusw1,w,c
 17530  011152  6E09               	movwf	(btemp+8)^0,c
 17531  011154  6A0A               	clrf	(btemp+9)^0,c
 17532  011156  500B               	movf	(btemp+10)^0,w,c
 17533  011158  2609               	addwf	(btemp+8)^0,f,c
 17534  01115A  500C               	movf	(btemp+11)^0,w,c
 17535  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17536  01115E  500A               	movf	(btemp+9)^0,w,c
 17537  011160  E106               	bnz	u11570
 17538  011162  0E1A               	movlw	26
 17539  011164  5C09               	subwf	(btemp+8)^0,w,c
 17540  011166  B0D8               	btfsc	status,0,c
 17541  011168  D002               	goto	u11570
 17542  01116A  0E01               	movlw	1
 17543  01116C  D001               	goto	u11580
 17544  01116E                     u11570:
 17545  01116E  0E00               	movlw	0
 17546  011170                     u11580:
 17547  011170  6E0B               	movwf	(btemp+10)^0,c
 17548  011172  6A0C               	clrf	(btemp+11)^0,c
 17549                           
 17550                           ;stkvar	_efgtoa$5510 @ sp[(-56)+0]
 17551  011174  0EC8               	movlw	-56
 17552  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17553  01117C  0EC9               	movlw	-55
 17554  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17555                           
 17556                           ;stkvar	_efgtoa$5510 @ sp[(-56)+0]
 17557  011184  0EC8               	movlw	-56
 17558  011186  006F FF8C  F001    	movff	plusw1,btemp
 17559  01118C  0EC9               	movlw	-55
 17560  01118E  50E3               	movf	plusw1,w,c
 17561  011190  1001               	iorwf	btemp^0,w,c
 17562  011192  A4D8               	btfss	status,2,c
 17563  011194  D002               	goto	l12155
 17564  011196  0E65               	movlw	101
 17565  011198  D001               	goto	L19
 17566  01119A                     l12155:
 17567  01119A  0E45               	movlw	69
 17568  01119C                     L19:
 17569  01119C  6E0B               	movwf	(btemp+10)^0,c
 17570  01119E  0E00               	movlw	0
 17571  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17572                           
 17573                           ;stkvar	_efgtoa$5509 @ sp[(-56)+2]
 17574  0111A2  0ECA               	movlw	-54
 17575  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17576  0111AA  0ECB               	movlw	-53
 17577  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17578                           
 17579                           ;stkvar	_efgtoa$5509 @ sp[(-56)+2]
 17580                           ;stkvar	_i @ sp[(-56)+36]
 17581  0111B2  0EEC               	movlw	-20
 17582  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17583  0111BA  0EED               	movlw	-19
 17584  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17585  0111C2  0E97               	movlw	low _dbuf
 17586  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17587  0111C6  6ED9               	movwf	fsr2l,c
 17588  0111C8  0E02               	movlw	high _dbuf
 17589  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17590  0111CC  6EDA               	movwf	fsr2h,c
 17591  0111CE  0ECA               	movlw	-54
 17592  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17593                           
 17594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17595                           ;stkvar	_w @ sp[(-56)+38]
 17596  0111D6  50E1               	movf	fsr1l,w,c
 17597  0111D8  0FEE               	addlw	-18
 17598  0111DA  6ED9               	movwf	fsr2l,c
 17599  0111DC  50E2               	movf	fsr1h,w,c
 17600  0111DE  6EDA               	movwf	fsr2h,c
 17601  0111E0  0EFF               	movlw	255
 17602  0111E2  22DA               	addwfc	fsr2h,f,c
 17603  0111E4  06DE               	decf	postinc2,f,c
 17604  0111E6  0E00               	movlw	0
 17605  0111E8  5ADD               	subwfb	postdec2,f,c
 17606                           
 17607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17608                           ;stkvar	_i @ sp[(-56)+36]
 17609  0111EA  0EEC               	movlw	-20
 17610  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17611  0111F2  0EED               	movlw	-19
 17612  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17613  0111FA  0E97               	movlw	low _dbuf
 17614  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17615  0111FE  6E09               	movwf	(btemp+8)^0,c
 17616  011200  0E02               	movlw	high _dbuf
 17617  011202  200C               	addwfc	(btemp+11)^0,w,c
 17618  011204  6E0A               	movwf	(btemp+9)^0,c
 17619  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17620  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17621                           
 17622                           ;stkvar	_n @ sp[(-58)+32]
 17623  011212  0E97               	movlw	low _dbuf
 17624  011214  6E0B               	movwf	(btemp+10)^0,c
 17625  011216  0E02               	movlw	high _dbuf
 17626  011218  6E0C               	movwf	(btemp+11)^0,c
 17627  01121A  0EE6               	movlw	-26
 17628  01121C  50E3               	movf	plusw1,w,c
 17629  01121E  260B               	addwf	(btemp+10)^0,f,c
 17630  011220  0EE7               	movlw	-25
 17631  011222  50E3               	movf	plusw1,w,c
 17632  011224  220C               	addwfc	(btemp+11)^0,f,c
 17633  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17634  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17635  011232  ECC3  F0D1         	call	_strcpy	;wreg free
 17636  011236  EF16  F081         	goto	l11907
 17637  01123A                     l2203:
 17638                           
 17639                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17640  01123A  0EC1               	movlw	193
 17641  01123C  26E1               	addwf	fsr1l,f,c
 17642  01123E  0EFF               	movlw	255
 17643  011240  22E2               	addwfc	fsr1h,f,c
 17644  011242  0012               	return		;funcret
 17645  011244                     __end_of_efgtoa:
 17646                           	opt callstack 0
 17647                           
 17648 ;; *************** function _tolower *****************
 17649 ;; Defined at:
 17650 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17651 ;; Parameters:    Size  Location     Type
 17652 ;;  c               2  [STACK] int 
 17653 ;; Auto vars:     Size  Location     Type
 17654 ;;		None
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  2  [STACK] int 
 17657 ;; Registers used:
 17658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/0
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17668 ;;Total ram usage:        0 bytes
 17669 ;; Hardware stack levels used:    1
 17670 ;; Hardware stack levels required when called:   16
 17671 ;; This function calls:
 17672 ;;		_isupper
 17673 ;; This function is called by:
 17674 ;;		_efgtoa
 17675 ;;		_vfpfcnvrt
 17676 ;; This function uses a reentrant model
 17677 ;;
 17678                           
 17679                           	psect	text56
 17680  01AC7C                     __ptext56:
 17681                           	opt callstack 0
 17682  01AC7C                     _tolower:
 17683                           	opt callstack 0
 17684                           
 17685                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17686  01AC7C  52E6               	movf	postinc1,f,c
 17687  01AC7E  52E6               	movf	postinc1,f,c
 17688                           
 17689                           ;stkvar	_c @ sp[(-2)+-2]
 17690                           
 17691                           ;incstack = 0
 17692 ;; hardware stack exceeded
 17693  01AC80  0EFC               	movlw	-4
 17694  01AC82  50E3               	movf	plusw1,w,c
 17695  01AC84  0FBF               	addlw	191
 17696  01AC86  6E0B               	movwf	(btemp+10)^0,c
 17697  01AC88  0EFD               	movlw	-3
 17698  01AC8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17699  01AC90  0EFF               	movlw	255
 17700  01AC92  220C               	addwfc	(btemp+11)^0,f,c
 17701  01AC94  500C               	movf	(btemp+11)^0,w,c
 17702  01AC96  E106               	bnz	u6050
 17703  01AC98  0E1A               	movlw	26
 17704  01AC9A  5C0B               	subwf	(btemp+10)^0,w,c
 17705  01AC9C  B0D8               	btfsc	status,0,c
 17706  01AC9E  D002               	goto	u6050
 17707  01ACA0  0E01               	movlw	1
 17708  01ACA2  D001               	goto	u6060
 17709  01ACA4                     u6050:
 17710  01ACA4  0E00               	movlw	0
 17711  01ACA6                     u6060:
 17712  01ACA6  6E0B               	movwf	(btemp+10)^0,c
 17713  01ACA8  6A0C               	clrf	(btemp+11)^0,c
 17714                           
 17715                           ;stkvar	_tolower$6329 @ sp[(-2)+0]
 17716  01ACAA  0EFE               	movlw	-2
 17717  01ACAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17718  01ACB2  0EFF               	movlw	-1
 17719  01ACB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17720                           
 17721                           ;stkvar	_tolower$6329 @ sp[(-2)+0]
 17722  01ACBA  0EFE               	movlw	-2
 17723  01ACBC  006F FF8C  F001    	movff	plusw1,btemp
 17724  01ACC2  0EFF               	movlw	-1
 17725  01ACC4  50E3               	movf	plusw1,w,c
 17726  01ACC6  1001               	iorwf	btemp^0,w,c
 17727  01ACC8  B4D8               	btfsc	status,2,c
 17728  01ACCA  D00D               	goto	l7957
 17729                           
 17730                           ;stkvar	_c @ sp[(-2)+-2]
 17731  01ACCC  0EFC               	movlw	-4
 17732  01ACCE  006F FF8C  F001    	movff	plusw1,btemp
 17733  01ACD4  0EFD               	movlw	-3
 17734  01ACD6  006F FF8C  F002    	movff	plusw1,btemp+1
 17735  01ACDC  0E20               	movlw	32
 17736  01ACDE  1201               	iorwf	btemp^0,f,c
 17737  01ACE0  0E00               	movlw	0
 17738  01ACE2  1202               	iorwf	(btemp+1)^0,f,c
 17739  01ACE4  D008               	goto	l3475
 17740  01ACE6                     l7957:
 17741                           
 17742                           ;stkvar	_c @ sp[(-2)+-2]
 17743  01ACE6  0EFC               	movlw	-4
 17744  01ACE8  006F FF8C  F001    	movff	plusw1,btemp
 17745  01ACEE  0EFD               	movlw	-3
 17746  01ACF0  006F FF8C  F002    	movff	plusw1,btemp+1
 17747  01ACF6                     l3475:
 17748                           
 17749                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17750  01ACF6  52E5               	movf	postdec1,f,c
 17751  01ACF8  52E5               	movf	postdec1,f,c
 17752  01ACFA  52E5               	movf	postdec1,f,c
 17753  01ACFC  52E5               	movf	postdec1,f,c
 17754  01ACFE  0012               	return		;funcret
 17755  01AD00                     __end_of_tolower:
 17756                           	opt callstack 0
 17757                           
 17758 ;; *************** function _isupper *****************
 17759 ;; Defined at:
 17760 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17761 ;; Parameters:    Size  Location     Type
 17762 ;;  c               2  [STACK] int 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;		None
 17765 ;; Return value:  Size  Location     Type
 17766 ;;                  2  [STACK] int 
 17767 ;; Registers used:
 17768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17769 ;; Tracked objects:
 17770 ;;		On entry : 0/0
 17771 ;;		On exit  : 0/0
 17772 ;;		Unchanged: 0/0
 17773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17778 ;;Total ram usage:        0 bytes
 17779 ;; Hardware stack levels used:    1
 17780 ;; Hardware stack levels required when called:   15
 17781 ;; This function calls:
 17782 ;;		Nothing
 17783 ;; This function is called by:
 17784 ;;		_efgtoa
 17785 ;;		_xtoa
 17786 ;;		_vfpfcnvrt
 17787 ;;		_tolower
 17788 ;; This function uses a reentrant model
 17789 ;;
 17790                           
 17791                           	psect	text57
 17792  01B914                     __ptext57:
 17793                           	opt callstack 0
 17794  01B914                     _isupper:
 17795                           	opt callstack 0
 17796                           
 17797                           ;stkvar	_c @ sp[(0)+-2]
 17798                           
 17799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17800                           ;incstack = 0
 17801 ;; hardware stack exceeded
 17802  01B914  0EFE               	movlw	-2
 17803  01B916  50E3               	movf	plusw1,w,c
 17804  01B918  0FBF               	addlw	191
 17805  01B91A  6E0B               	movwf	(btemp+10)^0,c
 17806  01B91C  0EFF               	movlw	-1
 17807  01B91E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17808  01B924  0EFF               	movlw	255
 17809  01B926  220C               	addwfc	(btemp+11)^0,f,c
 17810  01B928  500C               	movf	(btemp+11)^0,w,c
 17811  01B92A  E106               	bnz	u5450
 17812  01B92C  0E1A               	movlw	26
 17813  01B92E  5C0B               	subwf	(btemp+10)^0,w,c
 17814  01B930  B0D8               	btfsc	status,0,c
 17815  01B932  D002               	goto	u5450
 17816  01B934  0E01               	movlw	1
 17817  01B936  D001               	goto	u5460
 17818  01B938                     u5450:
 17819  01B938  0E00               	movlw	0
 17820  01B93A                     u5460:
 17821  01B93A  6E01               	movwf	btemp^0,c
 17822  01B93C  6A02               	clrf	(btemp+1)^0,c
 17823                           
 17824                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17825  01B93E  52E5               	movf	postdec1,f,c
 17826  01B940  52E5               	movf	postdec1,f,c
 17827  01B942  0012               	return		;funcret
 17828  01B944                     __end_of_isupper:
 17829                           	opt callstack 0
 17830                           
 17831 ;; *************** function _strcpy *****************
 17832 ;; Defined at:
 17833 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17834 ;; Parameters:    Size  Location     Type
 17835 ;;  dest            2  [STACK] PTR unsigned char 
 17836 ;;		 -> dbuf(80), 
 17837 ;;  src             2  [STACK] PTR const unsigned char 
 17838 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17839 ;;		 -> dbuf(80), 
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;  d               2  [STACK] PTR unsigned char 
 17842 ;;		 -> dbuf(80), 
 17843 ;;  s               2  [STACK] PTR const unsigned char 
 17844 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17845 ;;		 -> dbuf(80), 
 17846 ;; Return value:  Size  Location     Type
 17847 ;;                  2  [STACK] PTR unsigned char 
 17848 ;; Registers used:
 17849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17859 ;;Total ram usage:        0 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; Hardware stack levels required when called:   15
 17862 ;; This function calls:
 17863 ;;		Nothing
 17864 ;; This function is called by:
 17865 ;;		_efgtoa
 17866 ;; This function uses a reentrant model
 17867 ;;
 17868                           
 17869                           	psect	text58
 17870  01A386                     __ptext58:
 17871                           	opt callstack 0
 17872  01A386                     _strcpy:
 17873                           	opt callstack 0
 17874                           
 17875                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17876  01A386  52E6               	movf	postinc1,f,c
 17877  01A388  52E6               	movf	postinc1,f,c
 17878  01A38A  52E6               	movf	postinc1,f,c
 17879  01A38C  52E6               	movf	postinc1,f,c
 17880                           
 17881                           ;stkvar	_src @ sp[(-4)+-4]
 17882                           
 17883                           ;incstack = 0
 17884 ;; hardware stack exceeded
 17885  01A38E  0EF8               	movlw	-8
 17886  01A390  006F FF8C  F00B    	movff	plusw1,btemp+10
 17887  01A396  0EF9               	movlw	-7
 17888  01A398  006F FF8C  F00C    	movff	plusw1,btemp+11
 17889                           
 17890                           ;stkvar	_s @ sp[(-4)+2]
 17891  01A39E  0EFF               	movlw	-1
 17892  01A3A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17893  01A3A6  0EFE               	movlw	-2
 17894  01A3A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17895                           
 17896                           ;stkvar	_dest @ sp[(-4)+-2]
 17897  01A3AE  0EFA               	movlw	-6
 17898  01A3B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17899  01A3B6  0EFB               	movlw	-5
 17900  01A3B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17901                           
 17902                           ;stkvar	_d @ sp[(-4)+0]
 17903  01A3BE  0EFD               	movlw	-3
 17904  01A3C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17905  01A3C6  0EFC               	movlw	-4
 17906  01A3C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17907  01A3CE                     l11739:
 17908                           
 17909                           ;stkvar	_s @ sp[(-4)+2]
 17910  01A3CE  50E1               	movf	fsr1l,w,c
 17911  01A3D0  0FFE               	addlw	-2
 17912  01A3D2  6ED9               	movwf	fsr2l,c
 17913  01A3D4  50E2               	movf	fsr1h,w,c
 17914  01A3D6  6EDA               	movwf	fsr2h,c
 17915  01A3D8  0EFF               	movlw	255
 17916  01A3DA  22DA               	addwfc	fsr2h,f,c
 17917  01A3DC  006F FF7C  F00B    	movff	indf2,btemp+10
 17918  01A3E2  0E01               	movlw	1
 17919  01A3E4  26DE               	addwf	postinc2,f,c
 17920  01A3E6  006F FF7C  F00C    	movff	indf2,btemp+11
 17921  01A3EC  0E00               	movlw	0
 17922  01A3EE  22DD               	addwfc	postdec2,f,c
 17923  01A3F0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17924  01A3F6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17925  01A3FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17926  01A3FE  6EF8               	movwf	tblptru,c
 17927                           
 17928                           ;stkvar	_d @ sp[(-4)+0]
 17929  01A400  50E1               	movf	fsr1l,w,c
 17930  01A402  0FFC               	addlw	-4
 17931  01A404  6ED9               	movwf	fsr2l,c
 17932  01A406  50E2               	movf	fsr1h,w,c
 17933  01A408  6EDA               	movwf	fsr2h,c
 17934  01A40A  0EFF               	movlw	255
 17935  01A40C  22DA               	addwfc	fsr2h,f,c
 17936  01A40E  006F FF7C  F00B    	movff	indf2,btemp+10
 17937  01A414  0E01               	movlw	1
 17938  01A416  26DE               	addwf	postinc2,f,c
 17939  01A418  006F FF7C  F00C    	movff	indf2,btemp+11
 17940  01A41E  0E00               	movlw	0
 17941  01A420  22DD               	addwfc	postdec2,f,c
 17942  01A422  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17943  01A428  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17944  01A42E  0E1F               	movlw	(high __ramtop+-1)
 17945  01A430  64F7               	cpfsgt	tblptrh,c
 17946  01A432  D003               	bra	u10837
 17947  01A434  0008               	tblrd		*
 17948  01A436  50F5               	movf	tablat,w,c
 17949  01A438  D007               	bra	u10830
 17950  01A43A                     u10837:
 17951  01A43A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17952  01A440  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17953  01A446  50EF               	movf	indf0,w,c
 17954  01A448                     u10830:
 17955  01A448  6EDF               	movwf	indf2,c
 17956  01A44A  50DF               	movf	indf2,w,c
 17957  01A44C  A4D8               	btfss	status,2,c
 17958  01A44E  D7BF               	goto	l11739
 17959                           
 17960                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17961  01A450  0EF8               	movlw	248
 17962  01A452  26E1               	addwf	fsr1l,f,c
 17963  01A454  0EFF               	movlw	255
 17964  01A456  22E2               	addwfc	fsr1h,f,c
 17965  01A458  0012               	return		;funcret
 17966  01A45A                     __end_of_strcpy:
 17967                           	opt callstack 0
 17968                           
 17969 ;; *************** function _floorf *****************
 17970 ;; Defined at:
 17971 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  x               4  [STACK] float 
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;  u               4  [STACK] struct .
 17976 ;;  m               4  [STACK] unsigned long 
 17977 ;;  e               2  [STACK] int 
 17978 ;; Return value:  Size  Location     Type
 17979 ;;                  4  [STACK] float 
 17980 ;; Registers used:
 17981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17982 ;; Tracked objects:
 17983 ;;		On entry : 0/0
 17984 ;;		On exit  : 0/0
 17985 ;;		Unchanged: 0/0
 17986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17991 ;;Total ram usage:        0 bytes
 17992 ;; Hardware stack levels used:    1
 17993 ;; Hardware stack levels required when called:   15
 17994 ;; This function calls:
 17995 ;;		Nothing
 17996 ;; This function is called by:
 17997 ;;		_efgtoa
 17998 ;; This function uses a reentrant model
 17999 ;;
 18000                           
 18001                           	psect	text59
 18002  016454                     __ptext59:
 18003                           	opt callstack 0
 18004  016454                     _floorf:
 18005                           	opt callstack 0
 18006                           
 18007                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18008  016454  0E0A               	movlw	10
 18009  016456  26E1               	addwf	fsr1l,f,c
 18010  016458  0E00               	movlw	0
 18011  01645A  22E2               	addwfc	fsr1h,f,c
 18012                           
 18013                           ;incstack = 0
 18014 ;; hardware stack exceeded
 18015  01645C  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18016  016462  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18017  016468  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18018  01646E  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18019                           
 18020                           ;stkvar	_u @ sp[(-10)+0]
 18021  016474  0EF6               	movlw	-10
 18022  016476  0060  F027  FFE3   	movff	btemp+8,plusw1
 18023  01647C  0EF7               	movlw	-9
 18024  01647E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18025  016484  0EF8               	movlw	-8
 18026  016486  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18027  01648C  0EF9               	movlw	-7
 18028  01648E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18029                           
 18030                           ;stkvar	_x @ sp[(-10)+-4]
 18031  016494  0EF2               	movlw	-14
 18032  016496  006F FF8C  F009    	movff	plusw1,btemp+8
 18033  01649C  0EF3               	movlw	-13
 18034  01649E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18035  0164A4  0EF4               	movlw	-12
 18036  0164A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18037  0164AC  0EF5               	movlw	-11
 18038  0164AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18039                           
 18040                           ;stkvar	_u @ sp[(-10)+0]
 18041  0164B4  0EF6               	movlw	-10
 18042  0164B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18043  0164BC  0EF7               	movlw	-9
 18044  0164BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18045  0164C4  0EF8               	movlw	-8
 18046  0164C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18047  0164CC  0EF9               	movlw	-7
 18048  0164CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18049  0164D4  0E81               	movlw	129
 18050  0164D6  6E0B               	movwf	(btemp+10)^0,c
 18051  0164D8  0EFF               	movlw	255
 18052  0164DA  6E0C               	movwf	(btemp+11)^0,c
 18053                           
 18054                           ;stkvar	_u @ sp[(-10)+0]
 18055  0164DC  0EF6               	movlw	-10
 18056  0164DE  006F FF8C  F005    	movff	plusw1,btemp+4
 18057  0164E4  0EF7               	movlw	-9
 18058  0164E6  006F FF8C  F006    	movff	plusw1,btemp+5
 18059  0164EC  0EF8               	movlw	-8
 18060  0164EE  006F FF8C  F007    	movff	plusw1,btemp+6
 18061  0164F4  0EF9               	movlw	-7
 18062  0164F6  006F FF8C  F008    	movff	plusw1,btemp+7
 18063  0164FC  0E18               	movlw	24
 18064  0164FE  D005               	goto	u6080
 18065  016500                     u6085:
 18066  016500  90D8               	bcf	status,0,c
 18067  016502  3208               	rrcf	(btemp+7)^0,f,c
 18068  016504  3207               	rrcf	(btemp+6)^0,f,c
 18069  016506  3206               	rrcf	(btemp+5)^0,f,c
 18070  016508  3205               	rrcf	(btemp+4)^0,f,c
 18071  01650A                     u6080:
 18072  01650A  2EE8               	decfsz	wreg,f,c
 18073  01650C  D7F9               	goto	u6085
 18074  01650E  0060  F014  F009   	movff	btemp+4,btemp+8
 18075  016514  0060  F018  F00A   	movff	btemp+5,btemp+9
 18076  01651A  0EFF               	movlw	255
 18077  01651C  1609               	andwf	(btemp+8)^0,f,c
 18078  01651E  0E00               	movlw	0
 18079  016520  160A               	andwf	(btemp+9)^0,f,c
 18080  016522  500B               	movf	(btemp+10)^0,w,c
 18081  016524  2609               	addwf	(btemp+8)^0,f,c
 18082  016526  500C               	movf	(btemp+11)^0,w,c
 18083  016528  220A               	addwfc	(btemp+9)^0,f,c
 18084                           
 18085                           ;stkvar	_e @ sp[(-10)+8]
 18086  01652A  0EFE               	movlw	-2
 18087  01652C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18088  016532  0EFF               	movlw	-1
 18089  016534  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18090                           
 18091                           ;stkvar	_e @ sp[(-10)+8]
 18092  01653A  0EFF               	movlw	-1
 18093  01653C  BEE3               	btfsc	plusw1,7,c
 18094  01653E  D019               	goto	l7971
 18095  016540  0EFF               	movlw	-1
 18096  016542  50E3               	movf	plusw1,w,c
 18097  016544  E108               	bnz	u6090
 18098  016546  0EFE               	movlw	-2
 18099  016548  006F FF8C  F001    	movff	plusw1,btemp
 18100  01654E  0E17               	movlw	23
 18101  016550  5E01               	subwf	btemp^0,f,c
 18102  016552  A0D8               	btfss	status,0,c
 18103  016554  D00E               	goto	l7971
 18104  016556                     u6090:
 18105                           
 18106                           ;stkvar	_x @ sp[(-10)+-4]
 18107  016556  0EF2               	movlw	-14
 18108  016558  006F FF8C  F001    	movff	plusw1,btemp
 18109  01655E  0EF3               	movlw	-13
 18110  016560  006F FF8C  F002    	movff	plusw1,btemp+1
 18111  016566  0EF4               	movlw	-12
 18112  016568  006F FF8C  F003    	movff	plusw1,btemp+2
 18113  01656E  0EF5               	movlw	-11
 18114  016570  D11F               	goto	L20
 18115  016572                     l7971:
 18116                           
 18117                           ;stkvar	_e @ sp[(-10)+8]
 18118  016572  0EFF               	movlw	-1
 18119  016574  BEE3               	btfsc	plusw1,7,c
 18120  016576  D0B4               	goto	l7987
 18121                           
 18122                           ;stkvar	_e @ sp[(-10)+8]
 18123  016578  0EFE               	movlw	-2
 18124  01657A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18125  016580  0EFF               	movlw	255
 18126  016582  6E05               	movwf	(btemp+4)^0,c
 18127  016584  0EFF               	movlw	255
 18128  016586  6E06               	movwf	(btemp+5)^0,c
 18129  016588  0E7F               	movlw	127
 18130  01658A  6E07               	movwf	(btemp+6)^0,c
 18131  01658C  0E00               	movlw	0
 18132  01658E  6E08               	movwf	(btemp+7)^0,c
 18133  016590                     u6115:
 18134  016590  660C               	tstfsz	(btemp+11)^0,c
 18135  016592  D001               	goto	u6116
 18136  016594  D007               	goto	u6117
 18137  016596                     u6116:
 18138  016596  3408               	rlcf	(btemp+7)^0,w,c
 18139  016598  3208               	rrcf	(btemp+7)^0,f,c
 18140  01659A  3207               	rrcf	(btemp+6)^0,f,c
 18141  01659C  3206               	rrcf	(btemp+5)^0,f,c
 18142  01659E  3205               	rrcf	(btemp+4)^0,f,c
 18143  0165A0  2E0C               	decfsz	(btemp+11)^0,f,c
 18144  0165A2  D7F6               	goto	u6115
 18145  0165A4                     u6117:
 18146                           
 18147                           ;stkvar	_m @ sp[(-10)+4]
 18148  0165A4  0EFA               	movlw	-6
 18149  0165A6  0060  F017  FFE3   	movff	btemp+4,plusw1
 18150  0165AC  0EFB               	movlw	-5
 18151  0165AE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18152  0165B4  0EFC               	movlw	-4
 18153  0165B6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18154  0165BC  0EFD               	movlw	-3
 18155  0165BE  0060  F023  FFE3   	movff	btemp+7,plusw1
 18156                           
 18157                           ;stkvar	_m @ sp[(-10)+4]
 18158                           ;stkvar	_u @ sp[(-10)+0]
 18159  0165C4  0EF6               	movlw	-10
 18160  0165C6  006F FF8C  F009    	movff	plusw1,btemp+8
 18161  0165CC  0EF7               	movlw	-9
 18162  0165CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18163  0165D4  0EF8               	movlw	-8
 18164  0165D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18165  0165DC  0EF9               	movlw	-7
 18166  0165DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18167  0165E4  0EFA               	movlw	-6
 18168  0165E6  50E3               	movf	plusw1,w,c
 18169  0165E8  1609               	andwf	(btemp+8)^0,f,c
 18170  0165EA  0EFB               	movlw	-5
 18171  0165EC  50E3               	movf	plusw1,w,c
 18172  0165EE  160A               	andwf	(btemp+9)^0,f,c
 18173  0165F0  0EFC               	movlw	-4
 18174  0165F2  50E3               	movf	plusw1,w,c
 18175  0165F4  160B               	andwf	(btemp+10)^0,f,c
 18176  0165F6  0EFD               	movlw	-3
 18177  0165F8  50E3               	movf	plusw1,w,c
 18178  0165FA  160C               	andwf	(btemp+11)^0,f,c
 18179  0165FC  5009               	movf	(btemp+8)^0,w,c
 18180  0165FE  100A               	iorwf	(btemp+9)^0,w,c
 18181  016600  100B               	iorwf	(btemp+10)^0,w,c
 18182  016602  100C               	iorwf	(btemp+11)^0,w,c
 18183  016604  B4D8               	btfsc	status,2,c
 18184  016606  D7A7               	goto	u6090
 18185                           
 18186                           ;stkvar	_u @ sp[(-10)+0]
 18187  016608  0EF6               	movlw	-10
 18188  01660A  006F FF8C  F009    	movff	plusw1,btemp+8
 18189  016610  0EF7               	movlw	-9
 18190  016612  006F FF8C  F00A    	movff	plusw1,btemp+9
 18191  016618  0EF8               	movlw	-8
 18192  01661A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18193  016620  0EF9               	movlw	-7
 18194  016622  006F FF8C  F00C    	movff	plusw1,btemp+11
 18195  016628  0E20               	movlw	32
 18196  01662A  D005               	goto	u6130
 18197  01662C                     u6135:
 18198  01662C  90D8               	bcf	status,0,c
 18199  01662E  320C               	rrcf	(btemp+11)^0,f,c
 18200  016630  320B               	rrcf	(btemp+10)^0,f,c
 18201  016632  320A               	rrcf	(btemp+9)^0,f,c
 18202  016634  3209               	rrcf	(btemp+8)^0,f,c
 18203  016636                     u6130:
 18204  016636  2EE8               	decfsz	wreg,f,c
 18205  016638  D7F9               	goto	u6135
 18206  01663A  5009               	movf	(btemp+8)^0,w,c
 18207  01663C  B4D8               	btfsc	status,2,c
 18208  01663E  D028               	goto	l7985
 18209                           
 18210                           ;stkvar	_m @ sp[(-10)+4]
 18211                           ;stkvar	_u @ sp[(-10)+0]
 18212  016640  0EF6               	movlw	-10
 18213  016642  50E3               	movf	plusw1,w,c
 18214  016644  6E01               	movwf	btemp^0,c
 18215  016646  0EFA               	movlw	-6
 18216  016648  50E3               	movf	plusw1,w,c
 18217  01664A  2601               	addwf	btemp^0,f,c
 18218  01664C  0EF6               	movlw	-10
 18219  01664E  0060  F007  FFE3   	movff	btemp,plusw1
 18220  016654  0EF7               	movlw	-9
 18221  016656  50E3               	movf	plusw1,w,c
 18222  016658  6E01               	movwf	btemp^0,c
 18223  01665A  0EFB               	movlw	-5
 18224  01665C  50E3               	movf	plusw1,w,c
 18225  01665E  2201               	addwfc	btemp^0,f,c
 18226  016660  0EF7               	movlw	-9
 18227  016662  0060  F007  FFE3   	movff	btemp,plusw1
 18228  016668  0EF8               	movlw	-8
 18229  01666A  50E3               	movf	plusw1,w,c
 18230  01666C  6E01               	movwf	btemp^0,c
 18231  01666E  0EFC               	movlw	-4
 18232  016670  50E3               	movf	plusw1,w,c
 18233  016672  2201               	addwfc	btemp^0,f,c
 18234  016674  0EF8               	movlw	-8
 18235  016676  0060  F007  FFE3   	movff	btemp,plusw1
 18236  01667C  0EF9               	movlw	-7
 18237  01667E  50E3               	movf	plusw1,w,c
 18238  016680  6E01               	movwf	btemp^0,c
 18239  016682  0EFD               	movlw	-3
 18240  016684  50E3               	movf	plusw1,w,c
 18241  016686  2201               	addwfc	btemp^0,f,c
 18242  016688  0EF9               	movlw	-7
 18243  01668A  0060  F007  FFE3   	movff	btemp,plusw1
 18244  016690                     l7985:
 18245                           
 18246                           ;stkvar	_m @ sp[(-10)+4]
 18247  016690  0EFA               	movlw	-6
 18248  016692  006F FF8C  F009    	movff	plusw1,btemp+8
 18249  016698  0EFB               	movlw	-5
 18250  01669A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18251  0166A0  0EFC               	movlw	-4
 18252  0166A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18253  0166A8  0EFD               	movlw	-3
 18254  0166AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18255  0166B0  1C09               	comf	(btemp+8)^0,w,c
 18256  0166B2  6E05               	movwf	(btemp+4)^0,c
 18257  0166B4  1C0A               	comf	(btemp+9)^0,w,c
 18258  0166B6  6E06               	movwf	(btemp+5)^0,c
 18259  0166B8  1C0B               	comf	(btemp+10)^0,w,c
 18260  0166BA  6E07               	movwf	(btemp+6)^0,c
 18261  0166BC  1C0C               	comf	(btemp+11)^0,w,c
 18262  0166BE  6E08               	movwf	(btemp+7)^0,c
 18263                           
 18264                           ;stkvar	_u @ sp[(-10)+0]
 18265  0166C0  50E1               	movf	fsr1l,w,c
 18266  0166C2  0FF6               	addlw	-10
 18267  0166C4  6ED9               	movwf	fsr2l,c
 18268  0166C6  50E2               	movf	fsr1h,w,c
 18269  0166C8  6EDA               	movwf	fsr2h,c
 18270  0166CA  0EFF               	movlw	255
 18271  0166CC  22DA               	addwfc	fsr2h,f,c
 18272  0166CE  5005               	movf	(btemp+4)^0,w,c
 18273  0166D0  16DE               	andwf	postinc2,f,c
 18274  0166D2  5006               	movf	(btemp+5)^0,w,c
 18275  0166D4  16DE               	andwf	postinc2,f,c
 18276  0166D6  5007               	movf	(btemp+6)^0,w,c
 18277  0166D8  16DE               	andwf	postinc2,f,c
 18278  0166DA  5008               	movf	(btemp+7)^0,w,c
 18279  0166DC  16DE               	andwf	postinc2,f,c
 18280  0166DE  D05B               	goto	l7995
 18281  0166E0                     l7987:
 18282                           
 18283                           ;stkvar	_u @ sp[(-10)+0]
 18284  0166E0  0EF6               	movlw	-10
 18285  0166E2  006F FF8C  F009    	movff	plusw1,btemp+8
 18286  0166E8  0EF7               	movlw	-9
 18287  0166EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18288  0166F0  0EF8               	movlw	-8
 18289  0166F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18290  0166F8  0EF9               	movlw	-7
 18291  0166FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18292  016700  0E20               	movlw	32
 18293  016702  D005               	goto	u6150
 18294  016704                     u6155:
 18295  016704  90D8               	bcf	status,0,c
 18296  016706  320C               	rrcf	(btemp+11)^0,f,c
 18297  016708  320B               	rrcf	(btemp+10)^0,f,c
 18298  01670A  320A               	rrcf	(btemp+9)^0,f,c
 18299  01670C  3209               	rrcf	(btemp+8)^0,f,c
 18300  01670E                     u6150:
 18301  01670E  2EE8               	decfsz	wreg,f,c
 18302  016710  D7F9               	goto	u6155
 18303  016712  6609               	tstfsz	(btemp+8)^0,c
 18304  016714  D009               	goto	l7991
 18305                           
 18306                           ;stkvar	_u @ sp[(-10)+0]
 18307  016716  0EF6               	movlw	-10
 18308  016718  6AE3               	clrf	plusw1,c
 18309  01671A  0EF7               	movlw	-9
 18310  01671C  6AE3               	clrf	plusw1,c
 18311  01671E  0EF8               	movlw	-8
 18312  016720  6AE3               	clrf	plusw1,c
 18313  016722  0EF9               	movlw	-7
 18314  016724  6AE3               	clrf	plusw1,c
 18315  016726  D037               	goto	l7995
 18316  016728                     l7991:
 18317                           
 18318                           ;stkvar	_u @ sp[(-10)+0]
 18319  016728  0EF6               	movlw	-10
 18320  01672A  006F FF8C  F009    	movff	plusw1,btemp+8
 18321  016730  0EF7               	movlw	-9
 18322  016732  006F FF8C  F00A    	movff	plusw1,btemp+9
 18323  016738  0EF8               	movlw	-8
 18324  01673A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18325  016740  0EF9               	movlw	-7
 18326  016742  006F FF8C  F00C    	movff	plusw1,btemp+11
 18327  016748  90D8               	bcf	status,0,c
 18328  01674A  3409               	rlcf	(btemp+8)^0,w,c
 18329  01674C  6E05               	movwf	(btemp+4)^0,c
 18330  01674E  340A               	rlcf	(btemp+9)^0,w,c
 18331  016750  6E06               	movwf	(btemp+5)^0,c
 18332  016752  340B               	rlcf	(btemp+10)^0,w,c
 18333  016754  6E07               	movwf	(btemp+6)^0,c
 18334  016756  340C               	rlcf	(btemp+11)^0,w,c
 18335  016758  6E08               	movwf	(btemp+7)^0,c
 18336  01675A  5005               	movf	(btemp+4)^0,w,c
 18337  01675C  1006               	iorwf	(btemp+5)^0,w,c
 18338  01675E  1007               	iorwf	(btemp+6)^0,w,c
 18339  016760  1008               	iorwf	(btemp+7)^0,w,c
 18340  016762  B4D8               	btfsc	status,2,c
 18341  016764  D018               	goto	l7995
 18342  016766  0E00               	movlw	0
 18343  016768  6E09               	movwf	(btemp+8)^0,c
 18344  01676A  0E00               	movlw	0
 18345  01676C  6E0A               	movwf	(btemp+9)^0,c
 18346  01676E  0E80               	movlw	128
 18347  016770  6E0B               	movwf	(btemp+10)^0,c
 18348  016772  0EBF               	movlw	191
 18349  016774  6E0C               	movwf	(btemp+11)^0,c
 18350                           
 18351                           ;stkvar	_u @ sp[(-10)+0]
 18352  016776  0EF6               	movlw	-10
 18353  016778  0060  F027  FFE3   	movff	btemp+8,plusw1
 18354  01677E  0EF7               	movlw	-9
 18355  016780  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18356  016786  0EF8               	movlw	-8
 18357  016788  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18358  01678E  0EF9               	movlw	-7
 18359  016790  0060  F033  FFE3   	movff	btemp+11,plusw1
 18360  016796                     l7995:
 18361                           
 18362                           ;stkvar	_u @ sp[(-10)+0]
 18363  016796  0EF6               	movlw	-10
 18364  016798  006F FF8C  F001    	movff	plusw1,btemp
 18365  01679E  0EF7               	movlw	-9
 18366  0167A0  006F FF8C  F002    	movff	plusw1,btemp+1
 18367  0167A6  0EF8               	movlw	-8
 18368  0167A8  006F FF8C  F003    	movff	plusw1,btemp+2
 18369  0167AE  0EF9               	movlw	-7
 18370  0167B0                     L20:
 18371  0167B0  006F FF8C  F004    	movff	plusw1,btemp+3
 18372                           
 18373                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18374  0167B6  0EF2               	movlw	242
 18375  0167B8  26E1               	addwf	fsr1l,f,c
 18376  0167BA  0EFF               	movlw	255
 18377  0167BC  22E2               	addwfc	fsr1h,f,c
 18378  0167BE  0012               	return		;funcret
 18379  0167C0                     __end_of_floorf:
 18380                           	opt callstack 0
 18381                           
 18382 ;; *************** function ___fpclassifyf *****************
 18383 ;; Defined at:
 18384 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;  x               4  [STACK] float 
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;  u               4  [STACK] struct .
 18389 ;;  e               2  [STACK] int 
 18390 ;; Return value:  Size  Location     Type
 18391 ;;                  2  [STACK] int 
 18392 ;; Registers used:
 18393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18403 ;;Total ram usage:        0 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:   15
 18406 ;; This function calls:
 18407 ;;		Nothing
 18408 ;; This function is called by:
 18409 ;;		_efgtoa
 18410 ;; This function uses a reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text60
 18414  0189B2                     __ptext60:
 18415                           	opt callstack 0
 18416  0189B2                     ___fpclassifyf:
 18417                           	opt callstack 0
 18418                           
 18419                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18420  0189B2  0E06               	movlw	6
 18421  0189B4  26E1               	addwf	fsr1l,f,c
 18422  0189B6  0E00               	movlw	0
 18423  0189B8  22E2               	addwfc	fsr1h,f,c
 18424                           
 18425                           ;incstack = 0
 18426 ;; hardware stack exceeded
 18427  0189BA  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18428  0189C0  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18429  0189C6  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18430  0189CC  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18431                           
 18432                           ;stkvar	_u @ sp[(-6)+0]
 18433  0189D2  0EFA               	movlw	-6
 18434  0189D4  0060  F027  FFE3   	movff	btemp+8,plusw1
 18435  0189DA  0EFB               	movlw	-5
 18436  0189DC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18437  0189E2  0EFC               	movlw	-4
 18438  0189E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18439  0189EA  0EFD               	movlw	-3
 18440  0189EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18441                           
 18442                           ;stkvar	_x @ sp[(-6)+-4]
 18443  0189F2  0EF6               	movlw	-10
 18444  0189F4  006F FF8C  F009    	movff	plusw1,btemp+8
 18445  0189FA  0EF7               	movlw	-9
 18446  0189FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18447  018A02  0EF8               	movlw	-8
 18448  018A04  006F FF8C  F00B    	movff	plusw1,btemp+10
 18449  018A0A  0EF9               	movlw	-7
 18450  018A0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18451                           
 18452                           ;stkvar	_u @ sp[(-6)+0]
 18453  018A12  0EFA               	movlw	-6
 18454  018A14  0060  F027  FFE3   	movff	btemp+8,plusw1
 18455  018A1A  0EFB               	movlw	-5
 18456  018A1C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18457  018A22  0EFC               	movlw	-4
 18458  018A24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18459  018A2A  0EFD               	movlw	-3
 18460  018A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18461                           
 18462                           ;stkvar	_u @ sp[(-6)+0]
 18463  018A32  0EFA               	movlw	-6
 18464  018A34  006F FF8C  F009    	movff	plusw1,btemp+8
 18465  018A3A  0EFB               	movlw	-5
 18466  018A3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18467  018A42  0EFC               	movlw	-4
 18468  018A44  006F FF8C  F00B    	movff	plusw1,btemp+10
 18469  018A4A  0EFD               	movlw	-3
 18470  018A4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18471  018A52  0E18               	movlw	24
 18472  018A54  D005               	goto	u5960
 18473  018A56                     u5965:
 18474  018A56  90D8               	bcf	status,0,c
 18475  018A58  320C               	rrcf	(btemp+11)^0,f,c
 18476  018A5A  320B               	rrcf	(btemp+10)^0,f,c
 18477  018A5C  320A               	rrcf	(btemp+9)^0,f,c
 18478  018A5E  3209               	rrcf	(btemp+8)^0,f,c
 18479  018A60                     u5960:
 18480  018A60  2EE8               	decfsz	wreg,f,c
 18481  018A62  D7F9               	goto	u5965
 18482  018A64  0060  F024  F007   	movff	btemp+8,btemp+6
 18483  018A6A  0060  F028  F008   	movff	btemp+9,btemp+7
 18484  018A70  0EFF               	movlw	255
 18485  018A72  1607               	andwf	(btemp+6)^0,f,c
 18486  018A74  0E00               	movlw	0
 18487  018A76  1608               	andwf	(btemp+7)^0,f,c
 18488                           
 18489                           ;stkvar	_e @ sp[(-6)+4]
 18490  018A78  0EFE               	movlw	-2
 18491  018A7A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18492  018A80  0EFF               	movlw	-1
 18493  018A82  0060  F023  FFE3   	movff	btemp+7,plusw1
 18494                           
 18495                           ;stkvar	_e @ sp[(-6)+4]
 18496  018A88  0EFE               	movlw	-2
 18497  018A8A  006F FF8C  F001    	movff	plusw1,btemp
 18498  018A90  0EFF               	movlw	-1
 18499  018A92  50E3               	movf	plusw1,w,c
 18500  018A94  1001               	iorwf	btemp^0,w,c
 18501  018A96  A4D8               	btfss	status,2,c
 18502  018A98  D023               	goto	l7933
 18503                           
 18504                           ;stkvar	_u @ sp[(-6)+0]
 18505  018A9A  0EFA               	movlw	-6
 18506  018A9C  006F FF8C  F009    	movff	plusw1,btemp+8
 18507  018AA2  0EFB               	movlw	-5
 18508  018AA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 18509  018AAA  0EFC               	movlw	-4
 18510  018AAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18511  018AB2  0EFD               	movlw	-3
 18512  018AB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18513  018ABA  90D8               	bcf	status,0,c
 18514  018ABC  3409               	rlcf	(btemp+8)^0,w,c
 18515  018ABE  6E05               	movwf	(btemp+4)^0,c
 18516  018AC0  340A               	rlcf	(btemp+9)^0,w,c
 18517  018AC2  6E06               	movwf	(btemp+5)^0,c
 18518  018AC4  340B               	rlcf	(btemp+10)^0,w,c
 18519  018AC6  6E07               	movwf	(btemp+6)^0,c
 18520  018AC8  340C               	rlcf	(btemp+11)^0,w,c
 18521  018ACA  6E08               	movwf	(btemp+7)^0,c
 18522  018ACC  5005               	movf	(btemp+4)^0,w,c
 18523  018ACE  1006               	iorwf	(btemp+5)^0,w,c
 18524  018AD0  1007               	iorwf	(btemp+6)^0,w,c
 18525  018AD2  1008               	iorwf	(btemp+7)^0,w,c
 18526  018AD4  A4D8               	btfss	status,2,c
 18527  018AD6  D002               	goto	l7929
 18528  018AD8  0E02               	movlw	2
 18529  018ADA  D02E               	goto	L21
 18530  018ADC                     l7929:
 18531  018ADC  0E03               	movlw	3
 18532  018ADE  D02C               	goto	L21
 18533  018AE0                     l7933:
 18534                           
 18535                           ;stkvar	_e @ sp[(-6)+4]
 18536  018AE0  0EFE               	movlw	-2
 18537  018AE2  28E3               	incf	plusw1,w,c
 18538  018AE4  E128               	bnz	l7939
 18539  018AE6  0EFF               	movlw	-1
 18540  018AE8  50E3               	movf	plusw1,w,c
 18541  018AEA  A4D8               	btfss	status,2,c
 18542  018AEC  D024               	goto	l7939
 18543                           
 18544                           ;stkvar	_u @ sp[(-6)+0]
 18545  018AEE  0EFA               	movlw	-6
 18546  018AF0  006F FF8C  F009    	movff	plusw1,btemp+8
 18547  018AF6  0EFB               	movlw	-5
 18548  018AF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 18549  018AFE  0EFC               	movlw	-4
 18550  018B00  006F FF8C  F00B    	movff	plusw1,btemp+10
 18551  018B06  0EFD               	movlw	-3
 18552  018B08  006F FF8C  F00C    	movff	plusw1,btemp+11
 18553  018B0E  0E09               	movlw	9
 18554  018B10                     u6005:
 18555  018B10  90D8               	bcf	status,0,c
 18556  018B12  3609               	rlcf	(btemp+8)^0,f,c
 18557  018B14  360A               	rlcf	(btemp+9)^0,f,c
 18558  018B16  360B               	rlcf	(btemp+10)^0,f,c
 18559  018B18  360C               	rlcf	(btemp+11)^0,f,c
 18560  018B1A  2EE8               	decfsz	wreg,f,c
 18561  018B1C  D7F9               	goto	u6005
 18562  018B1E  5009               	movf	(btemp+8)^0,w,c
 18563  018B20  100A               	iorwf	(btemp+9)^0,w,c
 18564  018B22  100B               	iorwf	(btemp+10)^0,w,c
 18565  018B24  100C               	iorwf	(btemp+11)^0,w,c
 18566  018B26  A4D8               	btfss	status,2,c
 18567  018B28  D002               	goto	u6010
 18568  018B2A  0E01               	movlw	1
 18569  018B2C  D001               	goto	u6020
 18570  018B2E                     u6010:
 18571  018B2E  0E00               	movlw	0
 18572  018B30                     u6020:
 18573  018B30  6E01               	movwf	btemp^0,c
 18574  018B32  6A02               	clrf	(btemp+1)^0,c
 18575  018B34  D004               	goto	l3085
 18576  018B36                     l7939:
 18577  018B36  0E04               	movlw	4
 18578  018B38                     L21:
 18579  018B38  6E01               	movwf	btemp^0,c
 18580  018B3A  0E00               	movlw	0
 18581  018B3C  6E02               	movwf	(btemp+1)^0,c
 18582  018B3E                     l3085:
 18583                           
 18584                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18585  018B3E  0EF6               	movlw	246
 18586  018B40  26E1               	addwf	fsr1l,f,c
 18587  018B42  0EFF               	movlw	255
 18588  018B44  22E2               	addwfc	fsr1h,f,c
 18589  018B46  0012               	return		;funcret
 18590  018B48                     __end_of___fpclassifyf:
 18591                           	opt callstack 0
 18592                           
 18593 ;; *************** function ___fltol *****************
 18594 ;; Defined at:
 18595 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;  f1              4  [STACK] int 
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;  exp1            1  [STACK] unsigned char 
 18600 ;;  sign1           1  [STACK] unsigned char 
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  4  [STACK] long 
 18603 ;; Registers used:
 18604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18614 ;;Total ram usage:        0 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; Hardware stack levels required when called:   15
 18617 ;; This function calls:
 18618 ;;		Nothing
 18619 ;; This function is called by:
 18620 ;;		_main
 18621 ;;		_calc_bsoc
 18622 ;;		_init_bsoc
 18623 ;;		_Volts_to_SOC
 18624 ;;		_efgtoa
 18625 ;; This function uses a reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text61
 18629  018E4E                     __ptext61:
 18630                           	opt callstack 0
 18631  018E4E                     ___fltol:
 18632                           	opt callstack 0
 18633                           
 18634                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18635  018E4E  52E6               	movf	postinc1,f,c
 18636  018E50  52E6               	movf	postinc1,f,c
 18637                           
 18638                           ;stkvar	_f1 @ sp[(-2)+-4]
 18639                           
 18640                           ;incstack = 0
 18641 ;; hardware stack exceeded
 18642  018E52  0EFA               	movlw	-6
 18643  018E54  006F FF8C  F009    	movff	plusw1,btemp+8
 18644  018E5A  0EFB               	movlw	-5
 18645  018E5C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18646  018E62  0EFC               	movlw	-4
 18647  018E64  006F FF8C  F00B    	movff	plusw1,btemp+10
 18648  018E6A  0EFD               	movlw	-3
 18649  018E6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18650  018E72  0E18               	movlw	24
 18651  018E74  D005               	goto	u7170
 18652  018E76                     u7175:
 18653  018E76  90D8               	bcf	status,0,c
 18654  018E78  320C               	rrcf	(btemp+11)^0,f,c
 18655  018E7A  320B               	rrcf	(btemp+10)^0,f,c
 18656  018E7C  320A               	rrcf	(btemp+9)^0,f,c
 18657  018E7E  3209               	rrcf	(btemp+8)^0,f,c
 18658  018E80                     u7170:
 18659  018E80  2EE8               	decfsz	wreg,f,c
 18660  018E82  D7F9               	goto	u7175
 18661                           
 18662                           ;stkvar	_exp1 @ sp[(-2)+0]
 18663  018E84  0EFE               	movlw	-2
 18664  018E86  0060  F027  FFE3   	movff	btemp+8,plusw1
 18665  018E8C  0EFE               	movlw	-2
 18666  018E8E  50E3               	movf	plusw1,w,c
 18667  018E90  A4D8               	btfss	status,2,c
 18668  018E92  D006               	goto	l8559
 18669  018E94                     u7180:
 18670  018E94  0E00               	movlw	0
 18671  018E96  6E01               	movwf	btemp^0,c
 18672  018E98  6A02               	clrf	(btemp+1)^0,c
 18673  018E9A  6A03               	clrf	(btemp+2)^0,c
 18674  018E9C  6A04               	clrf	(btemp+3)^0,c
 18675  018E9E  D08B               	goto	l2701
 18676  018EA0                     l8559:
 18677                           
 18678                           ;stkvar	_f1 @ sp[(-2)+-4]
 18679  018EA0  0EFA               	movlw	-6
 18680  018EA2  006F FF8C  F009    	movff	plusw1,btemp+8
 18681  018EA8  0EFB               	movlw	-5
 18682  018EAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18683  018EB0  0EFC               	movlw	-4
 18684  018EB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18685  018EB8  0EFD               	movlw	-3
 18686  018EBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18687  018EC0  0E20               	movlw	32
 18688  018EC2  D005               	goto	u7190
 18689  018EC4                     u7195:
 18690  018EC4  90D8               	bcf	status,0,c
 18691  018EC6  320C               	rrcf	(btemp+11)^0,f,c
 18692  018EC8  320B               	rrcf	(btemp+10)^0,f,c
 18693  018ECA  320A               	rrcf	(btemp+9)^0,f,c
 18694  018ECC  3209               	rrcf	(btemp+8)^0,f,c
 18695  018ECE                     u7190:
 18696  018ECE  2EE8               	decfsz	wreg,f,c
 18697  018ED0  D7F9               	goto	u7195
 18698                           
 18699                           ;stkvar	_sign1 @ sp[(-2)+1]
 18700  018ED2  0EFF               	movlw	-1
 18701  018ED4  0060  F027  FFE3   	movff	btemp+8,plusw1
 18702                           
 18703                           ;stkvar	_f1 @ sp[(-2)+-4]
 18704  018EDA  0EFC               	movlw	-4
 18705  018EDC  8EE3               	bsf	plusw1,7,c
 18706                           
 18707                           ;stkvar	_f1 @ sp[(-2)+-4]
 18708  018EDE  50E1               	movf	fsr1l,w,c
 18709  018EE0  0FFA               	addlw	-6
 18710  018EE2  6ED9               	movwf	fsr2l,c
 18711  018EE4  50E2               	movf	fsr1h,w,c
 18712  018EE6  6EDA               	movwf	fsr2h,c
 18713  018EE8  0EFF               	movlw	255
 18714  018EEA  22DA               	addwfc	fsr2h,f,c
 18715  018EEC  0EFF               	movlw	255
 18716  018EEE  16DE               	andwf	postinc2,f,c
 18717  018EF0  0EFF               	movlw	255
 18718  018EF2  16DE               	andwf	postinc2,f,c
 18719  018EF4  0EFF               	movlw	255
 18720  018EF6  16DE               	andwf	postinc2,f,c
 18721  018EF8  0E00               	movlw	0
 18722  018EFA  16DE               	andwf	postinc2,f,c
 18723                           
 18724                           ;stkvar	_exp1 @ sp[(-2)+0]
 18725  018EFC  0EFE               	movlw	-2
 18726  018EFE  006F FF8C  F001    	movff	plusw1,btemp
 18727  018F04  0E96               	movlw	150
 18728  018F06  5E01               	subwf	btemp^0,f,c
 18729  018F08  0EFE               	movlw	-2
 18730  018F0A  0060  F007  FFE3   	movff	btemp,plusw1
 18731                           
 18732                           ;stkvar	_exp1 @ sp[(-2)+0]
 18733  018F10  0EFE               	movlw	-2
 18734  018F12  AEE3               	btfss	plusw1,7,c
 18735  018F14  D014               	goto	l8577
 18736                           
 18737                           ;stkvar	_exp1 @ sp[(-2)+0]
 18738  018F16  0EFE               	movlw	-2
 18739  018F18  50E3               	movf	plusw1,w,c
 18740  018F1A  0A80               	xorlw	128
 18741  018F1C  0F97               	addlw	151
 18742  018F1E  A0D8               	btfss	status,0,c
 18743  018F20  D7B9               	goto	u7180
 18744  018F22                     l8575:
 18745                           
 18746                           ;stkvar	_f1 @ sp[(-2)+-4]
 18747  018F22  90D8               	bcf	status,0,c
 18748  018F24  0EFD               	movlw	-3
 18749  018F26  32E3               	rrcf	plusw1,f,c
 18750  018F28  0EFC               	movlw	-4
 18751  018F2A  32E3               	rrcf	plusw1,f,c
 18752  018F2C  0EFB               	movlw	-5
 18753  018F2E  32E3               	rrcf	plusw1,f,c
 18754  018F30  0EFA               	movlw	-6
 18755  018F32  32E3               	rrcf	plusw1,f,c
 18756                           
 18757                           ;stkvar	_exp1 @ sp[(-2)+0]
 18758  018F34  0EFE               	movlw	-2
 18759  018F36  2AE3               	incf	plusw1,f,c
 18760  018F38  B4D8               	btfsc	status,2,c
 18761  018F3A  D018               	goto	u7240
 18762  018F3C  D7F2               	goto	l8575
 18763  018F3E                     l8577:
 18764                           
 18765                           ;stkvar	_exp1 @ sp[(-2)+0]
 18766  018F3E  0EFE               	movlw	-2
 18767  018F40  006F FF8C  F001    	movff	plusw1,btemp
 18768  018F46  0E1F               	movlw	31
 18769  018F48  6401               	cpfsgt	btemp^0,c
 18770  018F4A  D00C               	goto	l8585
 18771  018F4C  D7A3               	goto	u7180
 18772  018F4E                     l8583:
 18773                           
 18774                           ;stkvar	_f1 @ sp[(-2)+-4]
 18775  018F4E  90D8               	bcf	status,0,c
 18776  018F50  0EFA               	movlw	-6
 18777  018F52  36E3               	rlcf	plusw1,f,c
 18778  018F54  0EFB               	movlw	-5
 18779  018F56  36E3               	rlcf	plusw1,f,c
 18780  018F58  0EFC               	movlw	-4
 18781  018F5A  36E3               	rlcf	plusw1,f,c
 18782  018F5C  0EFD               	movlw	-3
 18783  018F5E  36E3               	rlcf	plusw1,f,c
 18784                           
 18785                           ;stkvar	_exp1 @ sp[(-2)+0]
 18786  018F60  0EFE               	movlw	-2
 18787  018F62  06E3               	decf	plusw1,f,c
 18788  018F64                     l8585:
 18789                           
 18790                           ;stkvar	_exp1 @ sp[(-2)+0]
 18791  018F64  0EFE               	movlw	-2
 18792  018F66  50E3               	movf	plusw1,w,c
 18793  018F68  A4D8               	btfss	status,2,c
 18794  018F6A  D7F1               	goto	l8583
 18795  018F6C                     u7240:
 18796                           
 18797                           ;stkvar	_sign1 @ sp[(-2)+1]
 18798  018F6C  0EFF               	movlw	-1
 18799  018F6E  50E3               	movf	plusw1,w,c
 18800  018F70  B4D8               	btfsc	status,2,c
 18801  018F72  D011               	goto	u7260
 18802                           
 18803                           ;stkvar	_f1 @ sp[(-2)+-4]
 18804                           ;stkvar	_f1 @ sp[(-2)+-4]
 18805  018F74  0EFA               	movlw	-6
 18806  018F76  6CE3               	negf	plusw1,c
 18807  018F78  0EFB               	movlw	-5
 18808  018F7A  1EE3               	comf	plusw1,f,c
 18809  018F7C  0EFC               	movlw	-4
 18810  018F7E  1EE3               	comf	plusw1,f,c
 18811  018F80  0EFD               	movlw	-3
 18812  018F82  1EE3               	comf	plusw1,f,c
 18813  018F84  E308               	bnc	u7260
 18814  018F86  0EFB               	movlw	-5
 18815  018F88  2AE3               	incf	plusw1,f,c
 18816  018F8A  E305               	bnc	u7260
 18817  018F8C  0EFC               	movlw	-4
 18818  018F8E  2AE3               	incf	plusw1,f,c
 18819  018F90  E302               	bnc	u7260
 18820  018F92  0EFD               	movlw	-3
 18821  018F94  2AE3               	incf	plusw1,f,c
 18822  018F96                     u7260:
 18823                           
 18824                           ;stkvar	_f1 @ sp[(-2)+-4]
 18825  018F96  0EFA               	movlw	-6
 18826  018F98  006F FF8C  F001    	movff	plusw1,btemp
 18827  018F9E  0EFB               	movlw	-5
 18828  018FA0  006F FF8C  F002    	movff	plusw1,btemp+1
 18829  018FA6  0EFC               	movlw	-4
 18830  018FA8  006F FF8C  F003    	movff	plusw1,btemp+2
 18831  018FAE  0EFD               	movlw	-3
 18832  018FB0  006F FF8C  F004    	movff	plusw1,btemp+3
 18833  018FB6                     l2701:
 18834                           
 18835                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18836  018FB6  0EFA               	movlw	250
 18837  018FB8  26E1               	addwf	fsr1l,f,c
 18838  018FBA  0EFF               	movlw	255
 18839  018FBC  22E2               	addwfc	fsr1h,f,c
 18840  018FBE  0012               	return		;funcret
 18841  018FC0                     __end_of___fltol:
 18842                           	opt callstack 0
 18843                           
 18844 ;; *************** function ___flneg *****************
 18845 ;; Defined at:
 18846 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18847 ;; Parameters:    Size  Location     Type
 18848 ;;  f1              4  [STACK] long 
 18849 ;; Auto vars:     Size  Location     Type
 18850 ;;		None
 18851 ;; Return value:  Size  Location     Type
 18852 ;;                  4  [STACK] long 
 18853 ;; Registers used:
 18854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18855 ;; Tracked objects:
 18856 ;;		On entry : 0/0
 18857 ;;		On exit  : 0/0
 18858 ;;		Unchanged: 0/0
 18859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18864 ;;Total ram usage:        0 bytes
 18865 ;; Hardware stack levels used:    1
 18866 ;; Hardware stack levels required when called:   15
 18867 ;; This function calls:
 18868 ;;		Nothing
 18869 ;; This function is called by:
 18870 ;;		_calc_bsoc
 18871 ;;		_efgtoa
 18872 ;; This function uses a reentrant model
 18873 ;;
 18874                           
 18875                           	psect	text62
 18876  01B3C4                     __ptext62:
 18877                           	opt callstack 0
 18878  01B3C4                     ___flneg:
 18879                           	opt callstack 0
 18880                           
 18881                           ;stkvar	_f1 @ sp[(0)+-4]
 18882                           
 18883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18884                           ;incstack = 0
 18885 ;; hardware stack exceeded
 18886  01B3C4  0EFC               	movlw	-4
 18887  01B3C6  50E3               	movf	plusw1,w,c
 18888  01B3C8  E10A               	bnz	u7160
 18889  01B3CA  0EFD               	movlw	-3
 18890  01B3CC  50E3               	movf	plusw1,w,c
 18891  01B3CE  E107               	bnz	u7160
 18892  01B3D0  0EFE               	movlw	-2
 18893  01B3D2  50E3               	movf	plusw1,w,c
 18894  01B3D4  E104               	bnz	u7160
 18895  01B3D6  0EFF               	movlw	-1
 18896  01B3D8  50E3               	movf	plusw1,w,c
 18897  01B3DA  B4D8               	btfsc	status,2,c
 18898  01B3DC  D002               	goto	l8549
 18899  01B3DE                     u7160:
 18900                           
 18901                           ;stkvar	_f1 @ sp[(0)+-4]
 18902  01B3DE  0EFF               	movlw	-1
 18903  01B3E0  7EE3               	btg	plusw1,7,c
 18904  01B3E2                     l8549:
 18905                           
 18906                           ;stkvar	_f1 @ sp[(0)+-4]
 18907  01B3E2  0EFC               	movlw	-4
 18908  01B3E4  006F FF8C  F001    	movff	plusw1,btemp
 18909  01B3EA  0EFD               	movlw	-3
 18910  01B3EC  006F FF8C  F002    	movff	plusw1,btemp+1
 18911  01B3F2  0EFE               	movlw	-2
 18912  01B3F4  006F FF8C  F003    	movff	plusw1,btemp+2
 18913  01B3FA  0EFF               	movlw	-1
 18914  01B3FC  006F FF8C  F004    	movff	plusw1,btemp+3
 18915                           
 18916                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18917  01B402  52E5               	movf	postdec1,f,c
 18918  01B404  52E5               	movf	postdec1,f,c
 18919  01B406  52E5               	movf	postdec1,f,c
 18920  01B408  52E5               	movf	postdec1,f,c
 18921  01B40A  0012               	return		;funcret
 18922  01B40C                     __end_of___flneg:
 18923                           	opt callstack 0
 18924                           
 18925 ;; *************** function ___fleq *****************
 18926 ;; Defined at:
 18927 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18928 ;; Parameters:    Size  Location     Type
 18929 ;;  ff1             4  [STACK] long 
 18930 ;;  ff2             4  [STACK] long 
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;		None
 18933 ;; Return value:  Size  Location     Type
 18934 ;;		None               void
 18935 ;; Registers used:
 18936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18946 ;;Total ram usage:        0 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:   15
 18949 ;; This function calls:
 18950 ;;		Nothing
 18951 ;; This function is called by:
 18952 ;;		_efgtoa
 18953 ;; This function uses a reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text63
 18957  01A45A                     __ptext63:
 18958                           	opt callstack 0
 18959  01A45A                     ___fleq:
 18960                           	opt callstack 0
 18961                           
 18962                           ;stkvar	_ff1 @ sp[(0)+-4]
 18963                           
 18964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18965                           ;incstack = 0
 18966 ;; hardware stack exceeded
 18967  01A45A  50E1               	movf	fsr1l,w,c
 18968  01A45C  0FFC               	addlw	-4
 18969  01A45E  6ED9               	movwf	fsr2l,c
 18970  01A460  50E2               	movf	fsr1h,w,c
 18971  01A462  6EDA               	movwf	fsr2h,c
 18972  01A464  0EFF               	movlw	255
 18973  01A466  22DA               	addwfc	fsr2h,f,c
 18974  01A468  0E00               	movlw	0
 18975  01A46A  14DE               	andwf	postinc2,w,c
 18976  01A46C  6E09               	movwf	(btemp+8)^0,c
 18977  01A46E  0E00               	movlw	0
 18978  01A470  14DE               	andwf	postinc2,w,c
 18979  01A472  6E0A               	movwf	(btemp+9)^0,c
 18980  01A474  0E80               	movlw	128
 18981  01A476  14DE               	andwf	postinc2,w,c
 18982  01A478  6E0B               	movwf	(btemp+10)^0,c
 18983  01A47A  0E7F               	movlw	127
 18984  01A47C  14DE               	andwf	postinc2,w,c
 18985  01A47E  6E0C               	movwf	(btemp+11)^0,c
 18986  01A480  5009               	movf	(btemp+8)^0,w,c
 18987  01A482  100A               	iorwf	(btemp+9)^0,w,c
 18988  01A484  100B               	iorwf	(btemp+10)^0,w,c
 18989  01A486  100C               	iorwf	(btemp+11)^0,w,c
 18990  01A488  A4D8               	btfss	status,2,c
 18991  01A48A  D008               	goto	l8507
 18992                           
 18993                           ;stkvar	_ff1 @ sp[(0)+-4]
 18994  01A48C  0EFC               	movlw	-4
 18995  01A48E  6AE3               	clrf	plusw1,c
 18996  01A490  0EFD               	movlw	-3
 18997  01A492  6AE3               	clrf	plusw1,c
 18998  01A494  0EFE               	movlw	-2
 18999  01A496  6AE3               	clrf	plusw1,c
 19000  01A498  0EFF               	movlw	-1
 19001  01A49A  6AE3               	clrf	plusw1,c
 19002  01A49C                     l8507:
 19003                           
 19004                           ;stkvar	_ff2 @ sp[(0)+-8]
 19005  01A49C  50E1               	movf	fsr1l,w,c
 19006  01A49E  0FF8               	addlw	-8
 19007  01A4A0  6ED9               	movwf	fsr2l,c
 19008  01A4A2  50E2               	movf	fsr1h,w,c
 19009  01A4A4  6EDA               	movwf	fsr2h,c
 19010  01A4A6  0EFF               	movlw	255
 19011  01A4A8  22DA               	addwfc	fsr2h,f,c
 19012  01A4AA  0E00               	movlw	0
 19013  01A4AC  14DE               	andwf	postinc2,w,c
 19014  01A4AE  6E09               	movwf	(btemp+8)^0,c
 19015  01A4B0  0E00               	movlw	0
 19016  01A4B2  14DE               	andwf	postinc2,w,c
 19017  01A4B4  6E0A               	movwf	(btemp+9)^0,c
 19018  01A4B6  0E80               	movlw	128
 19019  01A4B8  14DE               	andwf	postinc2,w,c
 19020  01A4BA  6E0B               	movwf	(btemp+10)^0,c
 19021  01A4BC  0E7F               	movlw	127
 19022  01A4BE  14DE               	andwf	postinc2,w,c
 19023  01A4C0  6E0C               	movwf	(btemp+11)^0,c
 19024  01A4C2  5009               	movf	(btemp+8)^0,w,c
 19025  01A4C4  100A               	iorwf	(btemp+9)^0,w,c
 19026  01A4C6  100B               	iorwf	(btemp+10)^0,w,c
 19027  01A4C8  100C               	iorwf	(btemp+11)^0,w,c
 19028  01A4CA  A4D8               	btfss	status,2,c
 19029  01A4CC  D008               	goto	l8511
 19030                           
 19031                           ;stkvar	_ff2 @ sp[(0)+-8]
 19032  01A4CE  0EF8               	movlw	-8
 19033  01A4D0  6AE3               	clrf	plusw1,c
 19034  01A4D2  0EF9               	movlw	-7
 19035  01A4D4  6AE3               	clrf	plusw1,c
 19036  01A4D6  0EFA               	movlw	-6
 19037  01A4D8  6AE3               	clrf	plusw1,c
 19038  01A4DA  0EFB               	movlw	-5
 19039  01A4DC  6AE3               	clrf	plusw1,c
 19040  01A4DE                     l8511:
 19041                           
 19042                           ;stkvar	_ff2 @ sp[(0)+-8]
 19043                           ;stkvar	_ff1 @ sp[(0)+-4]
 19044  01A4DE  50E1               	movf	fsr1l,w,c
 19045  01A4E0  0FFC               	addlw	-4
 19046  01A4E2  6ED9               	movwf	fsr2l,c
 19047  01A4E4  50E2               	movf	fsr1h,w,c
 19048  01A4E6  6EDA               	movwf	fsr2h,c
 19049  01A4E8  0EFF               	movlw	255
 19050  01A4EA  22DA               	addwfc	fsr2h,f,c
 19051  01A4EC  0EF8               	movlw	-8
 19052  01A4EE  50E3               	movf	plusw1,w,c
 19053  01A4F0  18DE               	xorwf	postinc2,w,c
 19054  01A4F2  E10D               	bnz	u7100
 19055  01A4F4  0EF9               	movlw	-7
 19056  01A4F6  50E3               	movf	plusw1,w,c
 19057  01A4F8  18DE               	xorwf	postinc2,w,c
 19058  01A4FA  E109               	bnz	u7100
 19059  01A4FC  0EFA               	movlw	-6
 19060  01A4FE  50E3               	movf	plusw1,w,c
 19061  01A500  18DE               	xorwf	postinc2,w,c
 19062  01A502  E105               	bnz	u7100
 19063  01A504  0EFB               	movlw	-5
 19064  01A506  50E3               	movf	plusw1,w,c
 19065  01A508  18DE               	xorwf	postinc2,w,c
 19066  01A50A  B4D8               	btfsc	status,2,c
 19067  01A50C  D002               	goto	l8515
 19068  01A50E                     u7100:
 19069  01A50E  9001               	bcf	btemp& (0+255),0,c
 19070  01A510  D001               	goto	l2663
 19071  01A512                     l8515:
 19072  01A512  8001               	bsf	btemp& (0+255),0,c
 19073  01A514                     l2663:
 19074                           
 19075                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19076  01A514  0EF8               	movlw	248
 19077  01A516  26E1               	addwf	fsr1l,f,c
 19078  01A518  0EFF               	movlw	255
 19079  01A51A  22E2               	addwfc	fsr1h,f,c
 19080  01A51C  0012               	return		;funcret
 19081  01A51E                     __end_of___fleq:
 19082                           	opt callstack 0
 19083                           
 19084 ;; *************** function ___awmod *****************
 19085 ;; Defined at:
 19086 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;  dividend        2  [STACK] int 
 19089 ;;  divisor         2  [STACK] int 
 19090 ;; Auto vars:     Size  Location     Type
 19091 ;;  sign            1  [STACK] unsigned char 
 19092 ;;  counter         1  [STACK] unsigned char 
 19093 ;; Return value:  Size  Location     Type
 19094 ;;                  2  [STACK] int 
 19095 ;; Registers used:
 19096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19097 ;; Tracked objects:
 19098 ;;		On entry : 0/0
 19099 ;;		On exit  : 0/0
 19100 ;;		Unchanged: 0/0
 19101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19106 ;;Total ram usage:        0 bytes
 19107 ;; Hardware stack levels used:    1
 19108 ;; Hardware stack levels required when called:   15
 19109 ;; This function calls:
 19110 ;;		Nothing
 19111 ;; This function is called by:
 19112 ;;		_efgtoa
 19113 ;; This function uses a reentrant model
 19114 ;;
 19115                           
 19116                           	psect	text64
 19117  0199C6                     __ptext64:
 19118                           	opt callstack 0
 19119  0199C6                     ___awmod:
 19120                           	opt callstack 0
 19121                           
 19122                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19123  0199C6  52E6               	movf	postinc1,f,c
 19124  0199C8  52E6               	movf	postinc1,f,c
 19125                           
 19126                           ;stkvar	_sign @ sp[(-2)+0]
 19127                           
 19128                           ;incstack = 0
 19129 ;; hardware stack exceeded
 19130  0199CA  0EFE               	movlw	-2
 19131  0199CC  6AE3               	clrf	plusw1,c
 19132                           
 19133                           ;stkvar	_dividend @ sp[(-2)+-2]
 19134  0199CE  0EFD               	movlw	-3
 19135  0199D0  AEE3               	btfss	plusw1,7,c
 19136  0199D2  D009               	goto	l8473
 19137                           
 19138                           ;stkvar	_dividend @ sp[(-2)+-2]
 19139                           ;stkvar	_dividend @ sp[(-2)+-2]
 19140  0199D4  0EFC               	movlw	-4
 19141  0199D6  6CE3               	negf	plusw1,c
 19142  0199D8  0EFD               	movlw	-3
 19143  0199DA  1EE3               	comf	plusw1,f,c
 19144  0199DC  B0D8               	btfsc	status,0,c
 19145  0199DE  2AE3               	incf	plusw1,f,c
 19146                           
 19147                           ;stkvar	_sign @ sp[(-2)+0]
 19148  0199E0  0EFE               	movlw	-2
 19149  0199E2  6AE3               	clrf	plusw1,c
 19150  0199E4  2AE3               	incf	plusw1,f,c
 19151  0199E6                     l8473:
 19152                           
 19153                           ;stkvar	_divisor @ sp[(-2)+-4]
 19154  0199E6  0EFB               	movlw	-5
 19155  0199E8  AEE3               	btfss	plusw1,7,c
 19156  0199EA  D006               	goto	l8477
 19157                           
 19158                           ;stkvar	_divisor @ sp[(-2)+-4]
 19159                           ;stkvar	_divisor @ sp[(-2)+-4]
 19160  0199EC  0EFA               	movlw	-6
 19161  0199EE  6CE3               	negf	plusw1,c
 19162  0199F0  0EFB               	movlw	-5
 19163  0199F2  1EE3               	comf	plusw1,f,c
 19164  0199F4  B0D8               	btfsc	status,0,c
 19165  0199F6  2AE3               	incf	plusw1,f,c
 19166  0199F8                     l8477:
 19167                           
 19168                           ;stkvar	_divisor @ sp[(-2)+-4]
 19169  0199F8  0EFA               	movlw	-6
 19170  0199FA  006F FF8C  F001    	movff	plusw1,btemp
 19171  019A00  0EFB               	movlw	-5
 19172  019A02  50E3               	movf	plusw1,w,c
 19173  019A04  1001               	iorwf	btemp^0,w,c
 19174  019A06  B4D8               	btfsc	status,2,c
 19175  019A08  D053               	goto	u7060
 19176                           
 19177                           ;stkvar	_counter @ sp[(-2)+1]
 19178  019A0A  0EFF               	movlw	-1
 19179  019A0C  6AE3               	clrf	plusw1,c
 19180  019A0E  D012               	goto	L22
 19181  019A10                     l8481:
 19182                           
 19183                           ;stkvar	_divisor @ sp[(-2)+-4]
 19184  019A10  0EFA               	movlw	-6
 19185  019A12  50E3               	movf	plusw1,w,c
 19186  019A14  90D8               	bcf	status,0,c
 19187  019A16  34E8               	rlcf	wreg,w,c
 19188  019A18  6E01               	movwf	btemp^0,c
 19189  019A1A  0EFA               	movlw	-6
 19190  019A1C  0060  F007  FFE3   	movff	btemp,plusw1
 19191  019A22  0EFB               	movlw	-5
 19192  019A24  50E3               	movf	plusw1,w,c
 19193  019A26  34E8               	rlcf	wreg,w,c
 19194  019A28  6E01               	movwf	btemp^0,c
 19195  019A2A  0EFB               	movlw	-5
 19196  019A2C  0060  F007  FFE3   	movff	btemp,plusw1
 19197                           
 19198                           ;stkvar	_counter @ sp[(-2)+1]
 19199  019A32  0EFF               	movlw	-1
 19200  019A34                     L22:
 19201  019A34  2AE3               	incf	plusw1,f,c
 19202                           
 19203                           ;stkvar	_divisor @ sp[(-2)+-4]
 19204  019A36  0EFB               	movlw	-5
 19205  019A38  AEE3               	btfss	plusw1,7,c
 19206  019A3A  D7EA               	goto	l8481
 19207  019A3C                     u7040:
 19208                           
 19209                           ;stkvar	_divisor @ sp[(-2)+-4]
 19210  019A3C  0EFA               	movlw	-6
 19211  019A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19212  019A44  0EFB               	movlw	-5
 19213  019A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 19214                           
 19215                           ;stkvar	_dividend @ sp[(-2)+-2]
 19216  019A4C  0EFC               	movlw	-4
 19217  019A4E  006F FF8C  F009    	movff	plusw1,btemp+8
 19218  019A54  0EFD               	movlw	-3
 19219  019A56  006F FF8C  F00A    	movff	plusw1,btemp+9
 19220  019A5C  500B               	movf	(btemp+10)^0,w,c
 19221  019A5E  5C09               	subwf	(btemp+8)^0,w,c
 19222  019A60  500C               	movf	(btemp+11)^0,w,c
 19223  019A62  580A               	subwfb	(btemp+9)^0,w,c
 19224  019A64  A0D8               	btfss	status,0,c
 19225  019A66  D014               	goto	l8491
 19226                           
 19227                           ;stkvar	_divisor @ sp[(-2)+-4]
 19228                           ;stkvar	_dividend @ sp[(-2)+-2]
 19229  019A68  0EFC               	movlw	-4
 19230  019A6A  50E3               	movf	plusw1,w,c
 19231  019A6C  6E01               	movwf	btemp^0,c
 19232  019A6E  0EFA               	movlw	-6
 19233  019A70  50E3               	movf	plusw1,w,c
 19234  019A72  5E01               	subwf	btemp^0,f,c
 19235  019A74  0EFC               	movlw	-4
 19236  019A76  0060  F007  FFE3   	movff	btemp,plusw1
 19237  019A7C  0EFD               	movlw	-3
 19238  019A7E  50E3               	movf	plusw1,w,c
 19239  019A80  6E01               	movwf	btemp^0,c
 19240  019A82  0EFB               	movlw	-5
 19241  019A84  50E3               	movf	plusw1,w,c
 19242  019A86  5A01               	subwfb	btemp^0,f,c
 19243  019A88  0EFD               	movlw	-3
 19244  019A8A  0060  F007  FFE3   	movff	btemp,plusw1
 19245  019A90                     l8491:
 19246                           
 19247                           ;stkvar	_divisor @ sp[(-2)+-4]
 19248  019A90  90D8               	bcf	status,0,c
 19249  019A92  0EFB               	movlw	-5
 19250  019A94  32E3               	rrcf	plusw1,f,c
 19251  019A96  0EFA               	movlw	-6
 19252  019A98  32E3               	rrcf	plusw1,f,c
 19253                           
 19254                           ;stkvar	_counter @ sp[(-2)+1]
 19255  019A9A  0EFF               	movlw	-1
 19256  019A9C  50E3               	movf	plusw1,w,c
 19257  019A9E  6E01               	movwf	btemp^0,c
 19258  019AA0  0E01               	movlw	1
 19259  019AA2  5E01               	subwf	btemp^0,f,c
 19260  019AA4  0EFF               	movlw	-1
 19261  019AA6  0060  F007  FFE3   	movff	btemp,plusw1
 19262  019AAC  A4D8               	btfss	status,2,c
 19263  019AAE  D7C6               	goto	u7040
 19264  019AB0                     u7060:
 19265                           
 19266                           ;stkvar	_sign @ sp[(-2)+0]
 19267  019AB0  0EFE               	movlw	-2
 19268  019AB2  50E3               	movf	plusw1,w,c
 19269  019AB4  B4D8               	btfsc	status,2,c
 19270  019AB6  D006               	goto	l8499
 19271                           
 19272                           ;stkvar	_dividend @ sp[(-2)+-2]
 19273                           ;stkvar	_dividend @ sp[(-2)+-2]
 19274  019AB8  0EFC               	movlw	-4
 19275  019ABA  6CE3               	negf	plusw1,c
 19276  019ABC  0EFD               	movlw	-3
 19277  019ABE  1EE3               	comf	plusw1,f,c
 19278  019AC0  B0D8               	btfsc	status,0,c
 19279  019AC2  2AE3               	incf	plusw1,f,c
 19280  019AC4                     l8499:
 19281                           
 19282                           ;stkvar	_dividend @ sp[(-2)+-2]
 19283  019AC4  0EFC               	movlw	-4
 19284  019AC6  006F FF8C  F001    	movff	plusw1,btemp
 19285  019ACC  0EFD               	movlw	-3
 19286  019ACE  006F FF8C  F002    	movff	plusw1,btemp+1
 19287                           
 19288                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19289  019AD4  0EFA               	movlw	250
 19290  019AD6  26E1               	addwf	fsr1l,f,c
 19291  019AD8  0EFF               	movlw	255
 19292  019ADA  22E2               	addwfc	fsr1h,f,c
 19293  019ADC  0012               	return		;funcret
 19294  019ADE                     __end_of___awmod:
 19295                           	opt callstack 0
 19296                           
 19297 ;; *************** function ___awdiv *****************
 19298 ;; Defined at:
 19299 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19300 ;; Parameters:    Size  Location     Type
 19301 ;;  dividend        2  [STACK] int 
 19302 ;;  divisor         2  [STACK] int 
 19303 ;; Auto vars:     Size  Location     Type
 19304 ;;  quotient        2  [STACK] int 
 19305 ;;  sign            1  [STACK] unsigned char 
 19306 ;;  counter         1  [STACK] unsigned char 
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  2  [STACK] int 
 19309 ;; Registers used:
 19310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19320 ;;Total ram usage:        0 bytes
 19321 ;; Hardware stack levels used:    1
 19322 ;; Hardware stack levels required when called:   15
 19323 ;; This function calls:
 19324 ;;		Nothing
 19325 ;; This function is called by:
 19326 ;;		_efgtoa
 19327 ;; This function uses a reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text65
 19331  019286                     __ptext65:
 19332                           	opt callstack 0
 19333  019286                     ___awdiv:
 19334                           	opt callstack 0
 19335                           
 19336                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19337  019286  52E6               	movf	postinc1,f,c
 19338  019288  52E6               	movf	postinc1,f,c
 19339  01928A  52E6               	movf	postinc1,f,c
 19340  01928C  52E6               	movf	postinc1,f,c
 19341                           
 19342                           ;stkvar	_sign @ sp[(-4)+2]
 19343                           
 19344                           ;incstack = 0
 19345 ;; hardware stack exceeded
 19346  01928E  0EFE               	movlw	-2
 19347  019290  6AE3               	clrf	plusw1,c
 19348                           
 19349                           ;stkvar	_divisor @ sp[(-4)+-4]
 19350  019292  0EF9               	movlw	-7
 19351  019294  AEE3               	btfss	plusw1,7,c
 19352  019296  D009               	goto	l8427
 19353                           
 19354                           ;stkvar	_divisor @ sp[(-4)+-4]
 19355                           ;stkvar	_divisor @ sp[(-4)+-4]
 19356  019298  0EF8               	movlw	-8
 19357  01929A  6CE3               	negf	plusw1,c
 19358  01929C  0EF9               	movlw	-7
 19359  01929E  1EE3               	comf	plusw1,f,c
 19360  0192A0  B0D8               	btfsc	status,0,c
 19361  0192A2  2AE3               	incf	plusw1,f,c
 19362                           
 19363                           ;stkvar	_sign @ sp[(-4)+2]
 19364  0192A4  0EFE               	movlw	-2
 19365  0192A6  6AE3               	clrf	plusw1,c
 19366  0192A8  2AE3               	incf	plusw1,f,c
 19367  0192AA                     l8427:
 19368                           
 19369                           ;stkvar	_dividend @ sp[(-4)+-2]
 19370  0192AA  0EFB               	movlw	-5
 19371  0192AC  AEE3               	btfss	plusw1,7,c
 19372  0192AE  D008               	goto	l8433
 19373                           
 19374                           ;stkvar	_dividend @ sp[(-4)+-2]
 19375                           ;stkvar	_dividend @ sp[(-4)+-2]
 19376  0192B0  0EFA               	movlw	-6
 19377  0192B2  6CE3               	negf	plusw1,c
 19378  0192B4  0EFB               	movlw	-5
 19379  0192B6  1EE3               	comf	plusw1,f,c
 19380  0192B8  B0D8               	btfsc	status,0,c
 19381  0192BA  2AE3               	incf	plusw1,f,c
 19382                           
 19383                           ;stkvar	_sign @ sp[(-4)+2]
 19384  0192BC  0EFE               	movlw	-2
 19385  0192BE  70E3               	btg	plusw1,0,c
 19386  0192C0                     l8433:
 19387                           
 19388                           ;stkvar	_quotient @ sp[(-4)+0]
 19389  0192C0  0EFC               	movlw	-4
 19390  0192C2  6AE3               	clrf	plusw1,c
 19391  0192C4  0EFD               	movlw	-3
 19392  0192C6  6AE3               	clrf	plusw1,c
 19393                           
 19394                           ;stkvar	_divisor @ sp[(-4)+-4]
 19395  0192C8  0EF8               	movlw	-8
 19396  0192CA  006F FF8C  F001    	movff	plusw1,btemp
 19397  0192D0  0EF9               	movlw	-7
 19398  0192D2  50E3               	movf	plusw1,w,c
 19399  0192D4  1001               	iorwf	btemp^0,w,c
 19400  0192D6  B4D8               	btfsc	status,2,c
 19401  0192D8  D066               	goto	u6990
 19402                           
 19403                           ;stkvar	_counter @ sp[(-4)+3]
 19404  0192DA  0EFF               	movlw	-1
 19405  0192DC  6AE3               	clrf	plusw1,c
 19406  0192DE  D012               	goto	L23
 19407  0192E0                     l8439:
 19408                           
 19409                           ;stkvar	_divisor @ sp[(-4)+-4]
 19410  0192E0  0EF8               	movlw	-8
 19411  0192E2  50E3               	movf	plusw1,w,c
 19412  0192E4  90D8               	bcf	status,0,c
 19413  0192E6  34E8               	rlcf	wreg,w,c
 19414  0192E8  6E01               	movwf	btemp^0,c
 19415  0192EA  0EF8               	movlw	-8
 19416  0192EC  0060  F007  FFE3   	movff	btemp,plusw1
 19417  0192F2  0EF9               	movlw	-7
 19418  0192F4  50E3               	movf	plusw1,w,c
 19419  0192F6  34E8               	rlcf	wreg,w,c
 19420  0192F8  6E01               	movwf	btemp^0,c
 19421  0192FA  0EF9               	movlw	-7
 19422  0192FC  0060  F007  FFE3   	movff	btemp,plusw1
 19423                           
 19424                           ;stkvar	_counter @ sp[(-4)+3]
 19425  019302  0EFF               	movlw	-1
 19426  019304                     L23:
 19427  019304  2AE3               	incf	plusw1,f,c
 19428                           
 19429                           ;stkvar	_divisor @ sp[(-4)+-4]
 19430  019306  0EF9               	movlw	-7
 19431  019308  AEE3               	btfss	plusw1,7,c
 19432  01930A  D7EA               	goto	l8439
 19433  01930C                     u6970:
 19434                           
 19435                           ;stkvar	_quotient @ sp[(-4)+0]
 19436  01930C  0EFC               	movlw	-4
 19437  01930E  50E3               	movf	plusw1,w,c
 19438  019310  90D8               	bcf	status,0,c
 19439  019312  34E8               	rlcf	wreg,w,c
 19440  019314  6E01               	movwf	btemp^0,c
 19441  019316  0EFC               	movlw	-4
 19442  019318  0060  F007  FFE3   	movff	btemp,plusw1
 19443  01931E  0EFD               	movlw	-3
 19444  019320  50E3               	movf	plusw1,w,c
 19445  019322  34E8               	rlcf	wreg,w,c
 19446  019324  6E01               	movwf	btemp^0,c
 19447  019326  0EFD               	movlw	-3
 19448  019328  0060  F007  FFE3   	movff	btemp,plusw1
 19449                           
 19450                           ;stkvar	_divisor @ sp[(-4)+-4]
 19451  01932E  0EF8               	movlw	-8
 19452  019330  006F FF8C  F00B    	movff	plusw1,btemp+10
 19453  019336  0EF9               	movlw	-7
 19454  019338  006F FF8C  F00C    	movff	plusw1,btemp+11
 19455                           
 19456                           ;stkvar	_dividend @ sp[(-4)+-2]
 19457  01933E  0EFA               	movlw	-6
 19458  019340  006F FF8C  F009    	movff	plusw1,btemp+8
 19459  019346  0EFB               	movlw	-5
 19460  019348  006F FF8C  F00A    	movff	plusw1,btemp+9
 19461  01934E  500B               	movf	(btemp+10)^0,w,c
 19462  019350  5C09               	subwf	(btemp+8)^0,w,c
 19463  019352  500C               	movf	(btemp+11)^0,w,c
 19464  019354  580A               	subwfb	(btemp+9)^0,w,c
 19465  019356  A0D8               	btfss	status,0,c
 19466  019358  D016               	goto	l8453
 19467                           
 19468                           ;stkvar	_divisor @ sp[(-4)+-4]
 19469                           ;stkvar	_dividend @ sp[(-4)+-2]
 19470  01935A  0EFA               	movlw	-6
 19471  01935C  50E3               	movf	plusw1,w,c
 19472  01935E  6E01               	movwf	btemp^0,c
 19473  019360  0EF8               	movlw	-8
 19474  019362  50E3               	movf	plusw1,w,c
 19475  019364  5E01               	subwf	btemp^0,f,c
 19476  019366  0EFA               	movlw	-6
 19477  019368  0060  F007  FFE3   	movff	btemp,plusw1
 19478  01936E  0EFB               	movlw	-5
 19479  019370  50E3               	movf	plusw1,w,c
 19480  019372  6E01               	movwf	btemp^0,c
 19481  019374  0EF9               	movlw	-7
 19482  019376  50E3               	movf	plusw1,w,c
 19483  019378  5A01               	subwfb	btemp^0,f,c
 19484  01937A  0EFB               	movlw	-5
 19485  01937C  0060  F007  FFE3   	movff	btemp,plusw1
 19486                           
 19487                           ;stkvar	_quotient @ sp[(-4)+0]
 19488  019382  0EFC               	movlw	-4
 19489  019384  80E3               	bsf	plusw1,0,c
 19490  019386                     l8453:
 19491                           
 19492                           ;stkvar	_divisor @ sp[(-4)+-4]
 19493  019386  90D8               	bcf	status,0,c
 19494  019388  0EF9               	movlw	-7
 19495  01938A  32E3               	rrcf	plusw1,f,c
 19496  01938C  0EF8               	movlw	-8
 19497  01938E  32E3               	rrcf	plusw1,f,c
 19498                           
 19499                           ;stkvar	_counter @ sp[(-4)+3]
 19500  019390  0EFF               	movlw	-1
 19501  019392  50E3               	movf	plusw1,w,c
 19502  019394  6E01               	movwf	btemp^0,c
 19503  019396  0E01               	movlw	1
 19504  019398  5E01               	subwf	btemp^0,f,c
 19505  01939A  0EFF               	movlw	-1
 19506  01939C  0060  F007  FFE3   	movff	btemp,plusw1
 19507  0193A2  A4D8               	btfss	status,2,c
 19508  0193A4  D7B3               	goto	u6970
 19509  0193A6                     u6990:
 19510                           
 19511                           ;stkvar	_sign @ sp[(-4)+2]
 19512  0193A6  0EFE               	movlw	-2
 19513  0193A8  50E3               	movf	plusw1,w,c
 19514  0193AA  B4D8               	btfsc	status,2,c
 19515  0193AC  D006               	goto	l8461
 19516                           
 19517                           ;stkvar	_quotient @ sp[(-4)+0]
 19518                           ;stkvar	_quotient @ sp[(-4)+0]
 19519  0193AE  0EFC               	movlw	-4
 19520  0193B0  6CE3               	negf	plusw1,c
 19521  0193B2  0EFD               	movlw	-3
 19522  0193B4  1EE3               	comf	plusw1,f,c
 19523  0193B6  B0D8               	btfsc	status,0,c
 19524  0193B8  2AE3               	incf	plusw1,f,c
 19525  0193BA                     l8461:
 19526                           
 19527                           ;stkvar	_quotient @ sp[(-4)+0]
 19528  0193BA  0EFC               	movlw	-4
 19529  0193BC  006F FF8C  F001    	movff	plusw1,btemp
 19530  0193C2  0EFD               	movlw	-3
 19531  0193C4  006F FF8C  F002    	movff	plusw1,btemp+1
 19532                           
 19533                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19534  0193CA  0EF8               	movlw	248
 19535  0193CC  26E1               	addwf	fsr1l,f,c
 19536  0193CE  0EFF               	movlw	255
 19537  0193D0  22E2               	addwfc	fsr1h,f,c
 19538  0193D2  0012               	return		;funcret
 19539  0193D4                     __end_of___awdiv:
 19540                           	opt callstack 0
 19541                           
 19542 ;; *************** function _dtoa *****************
 19543 ;; Defined at:
 19544 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19545 ;; Parameters:    Size  Location     Type
 19546 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19547 ;;		 -> f(6), NULL(0), 
 19548 ;;  d               8  [STACK] long long 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  n               8  [STACK] long long 
 19551 ;;  i               2  [STACK] int 
 19552 ;;  s               2  [STACK] int 
 19553 ;;  w               2  [STACK] int 
 19554 ;;  p               2  [STACK] int 
 19555 ;; Return value:  Size  Location     Type
 19556 ;;                  2  [STACK] int 
 19557 ;; Registers used:
 19558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19559 ;; Tracked objects:
 19560 ;;		On entry : 0/0
 19561 ;;		On exit  : 0/0
 19562 ;;		Unchanged: 0/0
 19563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19568 ;;Total ram usage:        0 bytes
 19569 ;; Hardware stack levels used:    1
 19570 ;; Hardware stack levels required when called:   20
 19571 ;; This function calls:
 19572 ;;		___aodiv
 19573 ;;		___aomod
 19574 ;;		_abs
 19575 ;;		_pad
 19576 ;; This function is called by:
 19577 ;;		_vfpfcnvrt
 19578 ;; This function uses a reentrant model
 19579 ;;
 19580                           
 19581                           	psect	text66
 19582  0157CE                     __ptext66:
 19583                           	opt callstack 0
 19584  0157CE                     _dtoa:
 19585                           	opt callstack 0
 19586                           
 19587                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19588  0157CE  0E12               	movlw	18
 19589  0157D0  26E1               	addwf	fsr1l,f,c
 19590  0157D2  0E00               	movlw	0
 19591  0157D4  22E2               	addwfc	fsr1h,f,c
 19592                           
 19593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19594                           ;stkvar	_d @ sp[(-18)+-10]
 19595                           
 19596                           ;incstack = 0
 19597 ;; hardware stack exceeded
 19598  0157D6  0EE4               	movlw	228
 19599  0157D8  24E1               	addwf	fsr1l,w,c
 19600  0157DA  6ED9               	movwf	fsr2l,c
 19601  0157DC  0EFF               	movlw	255
 19602  0157DE  20E2               	addwfc	fsr1h,w,c
 19603  0157E0  6EDA               	movwf	fsr2h,c
 19604                           
 19605                           ;stkvar	_n @ sp[(-18)+2]
 19606  0157E2  0E08               	movlw	8
 19607  0157E4  6E01               	movwf	btemp^0,c
 19608  0157E6  0EF0               	movlw	-16
 19609  0157E8                     us1091999:
 19610  0157E8  006F FF7B FFE3     	movff	postinc2,plusw1
 19611  0157EE  28E8               	incf	wreg,w,c
 19612  0157F0  2E01               	decfsz	btemp^0,f,c
 19613  0157F2  D7FA               	bra	us1091999
 19614                           
 19615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19616                           ;stkvar	_n @ sp[(-18)+2]
 19617  0157F4  0EF7               	movlw	-9
 19618  0157F6  AEE3               	btfss	plusw1,7,c
 19619  0157F8  D002               	goto	u10920
 19620  0157FA  0E01               	movlw	1
 19621  0157FC  D001               	goto	u10930
 19622  0157FE                     u10920:
 19623  0157FE  0E00               	movlw	0
 19624  015800                     u10930:
 19625  015800  6E0B               	movwf	(btemp+10)^0,c
 19626  015802  6A0C               	clrf	(btemp+11)^0,c
 19627                           
 19628                           ;stkvar	_s @ sp[(-18)+12]
 19629  015804  0EFA               	movlw	-6
 19630  015806  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19631  01580C  0EFB               	movlw	-5
 19632  01580E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19633                           
 19634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19635                           ;stkvar	_s @ sp[(-18)+12]
 19636  015814  0EFA               	movlw	-6
 19637  015816  006F FF8C  F001    	movff	plusw1,btemp
 19638  01581C  0EFB               	movlw	-5
 19639  01581E  50E3               	movf	plusw1,w,c
 19640  015820  1001               	iorwf	btemp^0,w,c
 19641  015822  B4D8               	btfsc	status,2,c
 19642  015824  D025               	goto	u10950
 19643                           
 19644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19645                           ;stkvar	_n @ sp[(-18)+2]
 19646                           ;stkvar	_n @ sp[(-18)+2]
 19647  015826  0EF0               	movlw	-16
 19648  015828  6CE3               	negf	plusw1,c
 19649  01582A  0EF1               	movlw	-15
 19650  01582C  1EE3               	comf	plusw1,f,c
 19651  01582E  0EF2               	movlw	-14
 19652  015830  1EE3               	comf	plusw1,f,c
 19653  015832  0EF3               	movlw	-13
 19654  015834  1EE3               	comf	plusw1,f,c
 19655  015836  0EF4               	movlw	-12
 19656  015838  1EE3               	comf	plusw1,f,c
 19657  01583A  0EF5               	movlw	-11
 19658  01583C  1EE3               	comf	plusw1,f,c
 19659  01583E  0EF6               	movlw	-10
 19660  015840  1EE3               	comf	plusw1,f,c
 19661  015842  0EF7               	movlw	-9
 19662  015844  1EE3               	comf	plusw1,f,c
 19663  015846  E314               	bnc	u10950
 19664  015848  0EF1               	movlw	-15
 19665  01584A  2AE3               	incf	plusw1,f,c
 19666  01584C  E311               	bnc	u10950
 19667  01584E  0EF2               	movlw	-14
 19668  015850  2AE3               	incf	plusw1,f,c
 19669  015852  E30E               	bnc	u10950
 19670  015854  0EF3               	movlw	-13
 19671  015856  2AE3               	incf	plusw1,f,c
 19672  015858  E30B               	bnc	u10950
 19673  01585A  0EF4               	movlw	-12
 19674  01585C  2AE3               	incf	plusw1,f,c
 19675  01585E  E308               	bnc	u10950
 19676  015860  0EF5               	movlw	-11
 19677  015862  2AE3               	incf	plusw1,f,c
 19678  015864  E305               	bnc	u10950
 19679  015866  0EF6               	movlw	-10
 19680  015868  2AE3               	incf	plusw1,f,c
 19681  01586A  E302               	bnc	u10950
 19682  01586C  0EF7               	movlw	-9
 19683  01586E  2AE3               	incf	plusw1,f,c
 19684  015870                     u10950:
 19685                           
 19686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19687  015870  AE3D               	btfss	(_prec+1)^0,7,c
 19688                           
 19689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19690  015872  923E               	bcf	_flags^0,1,c
 19691                           
 19692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19693  015874  BE3D               	btfsc	(_prec+1)^0,7,c
 19694  015876  D005               	goto	u10970
 19695  015878  503D               	movf	(_prec+1)^0,w,c
 19696  01587A  E110               	bnz	l11813
 19697  01587C  043C               	decf	_prec^0,w,c
 19698  01587E  B0D8               	btfsc	status,0,c
 19699  015880  D00D               	goto	l11813
 19700  015882                     u10970:
 19701  015882  0E01               	movlw	1
 19702  015884  6E0B               	movwf	(btemp+10)^0,c
 19703  015886  0E00               	movlw	0
 19704  015888  6E0C               	movwf	(btemp+11)^0,c
 19705                           
 19706                           ;stkvar	_p @ sp[(-18)+16]
 19707  01588A  0EFE               	movlw	-2
 19708  01588C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19709  015892  0EFF               	movlw	-1
 19710  015894  0060  F033  FFE3   	movff	btemp+11,plusw1
 19711  01589A  D008               	goto	l2167
 19712  01589C                     l11813:
 19713                           
 19714                           ;stkvar	_p @ sp[(-18)+16]
 19715  01589C  0EFE               	movlw	-2
 19716  01589E  0060  F0F3  FFE3   	movff	_prec,plusw1
 19717  0158A4  0EFF               	movlw	-1
 19718  0158A6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19719  0158AC                     l2167:
 19720                           
 19721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19722                           ;stkvar	_w @ sp[(-18)+14]
 19723  0158AC  0EFC               	movlw	-4
 19724  0158AE  0060  F0EB  FFE3   	movff	_width,plusw1
 19725  0158B4  0EFD               	movlw	-3
 19726  0158B6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19727                           
 19728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19729                           ;stkvar	_s @ sp[(-18)+12]
 19730  0158BC  0EFA               	movlw	-6
 19731  0158BE  006F FF8C  F001    	movff	plusw1,btemp
 19732  0158C4  0EFB               	movlw	-5
 19733  0158C6  50E3               	movf	plusw1,w,c
 19734  0158C8  1001               	iorwf	btemp^0,w,c
 19735  0158CA  A4D8               	btfss	status,2,c
 19736  0158CC  D002               	goto	u10990
 19737  0158CE  A43E               	btfss	_flags^0,2,c
 19738  0158D0  D00A               	goto	l11821
 19739  0158D2                     u10990:
 19740                           
 19741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19742                           ;stkvar	_w @ sp[(-18)+14]
 19743  0158D2  50E1               	movf	fsr1l,w,c
 19744  0158D4  0FFC               	addlw	-4
 19745  0158D6  6ED9               	movwf	fsr2l,c
 19746  0158D8  50E2               	movf	fsr1h,w,c
 19747  0158DA  6EDA               	movwf	fsr2h,c
 19748  0158DC  0EFF               	movlw	255
 19749  0158DE  22DA               	addwfc	fsr2h,f,c
 19750  0158E0  06DE               	decf	postinc2,f,c
 19751  0158E2  0E00               	movlw	0
 19752  0158E4  5ADD               	subwfb	postdec2,f,c
 19753  0158E6                     l11821:
 19754                           
 19755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19756  0158E6  0E4F               	movlw	79
 19757  0158E8  6E0B               	movwf	(btemp+10)^0,c
 19758  0158EA  0E00               	movlw	0
 19759  0158EC  6E0C               	movwf	(btemp+11)^0,c
 19760                           
 19761                           ;stkvar	_i @ sp[(-18)+10]
 19762  0158EE  0EF8               	movlw	-8
 19763  0158F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19764  0158F6  0EF9               	movlw	-7
 19765  0158F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19766                           
 19767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19768  0158FE  0102               	movlb	2	; () banked
 19769  015900  6BE6               	clrf	(_dbuf+79)& (0+255),b
 19770                           
 19771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19772  015902  D109               	goto	l11835
 19773  015904                     l11825:
 19774                           
 19775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19776                           ;stkvar	_i @ sp[(-18)+10]
 19777  015904  50E1               	movf	fsr1l,w,c
 19778  015906  0FF8               	addlw	-8
 19779  015908  6ED9               	movwf	fsr2l,c
 19780  01590A  50E2               	movf	fsr1h,w,c
 19781  01590C  6EDA               	movwf	fsr2h,c
 19782  01590E  0EFF               	movlw	255
 19783  015910  22DA               	addwfc	fsr2h,f,c
 19784  015912  06DE               	decf	postinc2,f,c
 19785  015914  0E00               	movlw	0
 19786  015916  5ADD               	subwfb	postdec2,f,c
 19787                           
 19788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19789  015918  0E0A               	movlw	10
 19790  01591A  6EE6               	movwf	postinc1,c
 19791  01591C  0E00               	movlw	0
 19792  01591E  6EE6               	movwf	postinc1,c
 19793  015920  0E00               	movlw	0
 19794  015922  6EE6               	movwf	postinc1,c
 19795  015924  0E00               	movlw	0
 19796  015926  6EE6               	movwf	postinc1,c
 19797  015928  0E00               	movlw	0
 19798  01592A  6EE6               	movwf	postinc1,c
 19799  01592C  0E00               	movlw	0
 19800  01592E  6EE6               	movwf	postinc1,c
 19801  015930  0E00               	movlw	0
 19802  015932  6EE6               	movwf	postinc1,c
 19803  015934  0E00               	movlw	0
 19804  015936  6EE6               	movwf	postinc1,c
 19805                           
 19806                           ;stkvar	_n @ sp[(-26)+2]
 19807  015938  50E1               	movf	fsr1l,w,c
 19808  01593A  0FE8               	addlw	-24
 19809  01593C  6ED9               	movwf	fsr2l,c
 19810  01593E  50E2               	movf	fsr1h,w,c
 19811  015940  6EDA               	movwf	fsr2h,c
 19812  015942  0EFF               	movlw	255
 19813  015944  22DA               	addwfc	fsr2h,f,c
 19814  015946  006F FF7B FFE6     	movff	postinc2,postinc1
 19815  01594C  006F FF7B FFE6     	movff	postinc2,postinc1
 19816  015952  006F FF7B FFE6     	movff	postinc2,postinc1
 19817  015958  006F FF7B FFE6     	movff	postinc2,postinc1
 19818  01595E  006F FF7B FFE6     	movff	postinc2,postinc1
 19819  015964  006F FF7B FFE6     	movff	postinc2,postinc1
 19820  01596A  006F FF7B FFE6     	movff	postinc2,postinc1
 19821  015970  006F FF7B FFE6     	movff	postinc2,postinc1
 19822  015976  ECF0  F0BE         	call	___aomod	;wreg free
 19823  01597A  52E5               	movf	postdec1,f,c
 19824  01597C  006F FF9C  F018    	movff	indf1,btemp+23
 19825  015982  52E5               	movf	postdec1,f,c
 19826  015984  006F FF9C  F017    	movff	indf1,btemp+22
 19827  01598A  52E5               	movf	postdec1,f,c
 19828  01598C  006F FF9C  F016    	movff	indf1,btemp+21
 19829  015992  52E5               	movf	postdec1,f,c
 19830  015994  006F FF9C  F015    	movff	indf1,btemp+20
 19831  01599A  52E5               	movf	postdec1,f,c
 19832  01599C  006F FF9C  F014    	movff	indf1,btemp+19
 19833  0159A2  52E5               	movf	postdec1,f,c
 19834  0159A4  006F FF9C  F013    	movff	indf1,btemp+18
 19835  0159AA  52E5               	movf	postdec1,f,c
 19836  0159AC  006F FF9C  F012    	movff	indf1,btemp+17
 19837  0159B2  52E5               	movf	postdec1,f,c
 19838  0159B4  006F FF9C  F011    	movff	indf1,btemp+16
 19839  0159BA  0EF8               	movlw	248
 19840  0159BC  26E1               	addwf	fsr1l,f,c
 19841  0159BE  0EFF               	movlw	255
 19842  0159C0  22E2               	addwfc	fsr1h,f,c
 19843  0159C2  0060  F044  F00B   	movff	btemp+16,btemp+10
 19844  0159C8  0060  F048  F00C   	movff	btemp+17,btemp+11
 19845  0159CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19846  0159D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 19847  0159DA  EC72  F0DA         	call	_abs	;wreg free
 19848  0159DE  0E30               	movlw	48
 19849  0159E0  2601               	addwf	btemp^0,f,c
 19850                           
 19851                           ;stkvar	_i @ sp[(-18)+10]
 19852  0159E2  0EF8               	movlw	-8
 19853  0159E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19854  0159EA  0EF9               	movlw	-7
 19855  0159EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19856  0159F2  0E97               	movlw	low _dbuf
 19857  0159F4  240B               	addwf	(btemp+10)^0,w,c
 19858  0159F6  6ED9               	movwf	fsr2l,c
 19859  0159F8  0E02               	movlw	high _dbuf
 19860  0159FA  200C               	addwfc	(btemp+11)^0,w,c
 19861  0159FC  6EDA               	movwf	fsr2h,c
 19862  0159FE  0060  F007  FFDF   	movff	btemp,indf2
 19863                           
 19864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19865                           ;stkvar	_p @ sp[(-18)+16]
 19866  015A04  50E1               	movf	fsr1l,w,c
 19867  015A06  0FFE               	addlw	-2
 19868  015A08  6ED9               	movwf	fsr2l,c
 19869  015A0A  50E2               	movf	fsr1h,w,c
 19870  015A0C  6EDA               	movwf	fsr2h,c
 19871  015A0E  0EFF               	movlw	255
 19872  015A10  22DA               	addwfc	fsr2h,f,c
 19873  015A12  06DE               	decf	postinc2,f,c
 19874  015A14  0E00               	movlw	0
 19875  015A16  5ADD               	subwfb	postdec2,f,c
 19876                           
 19877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19878                           ;stkvar	_w @ sp[(-18)+14]
 19879  015A18  50E1               	movf	fsr1l,w,c
 19880  015A1A  0FFC               	addlw	-4
 19881  015A1C  6ED9               	movwf	fsr2l,c
 19882  015A1E  50E2               	movf	fsr1h,w,c
 19883  015A20  6EDA               	movwf	fsr2h,c
 19884  015A22  0EFF               	movlw	255
 19885  015A24  22DA               	addwfc	fsr2h,f,c
 19886  015A26  06DE               	decf	postinc2,f,c
 19887  015A28  0E00               	movlw	0
 19888  015A2A  5ADD               	subwfb	postdec2,f,c
 19889                           
 19890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19891  015A2C  0E0A               	movlw	10
 19892  015A2E  6EE6               	movwf	postinc1,c
 19893  015A30  0E00               	movlw	0
 19894  015A32  6EE6               	movwf	postinc1,c
 19895  015A34  0E00               	movlw	0
 19896  015A36  6EE6               	movwf	postinc1,c
 19897  015A38  0E00               	movlw	0
 19898  015A3A  6EE6               	movwf	postinc1,c
 19899  015A3C  0E00               	movlw	0
 19900  015A3E  6EE6               	movwf	postinc1,c
 19901  015A40  0E00               	movlw	0
 19902  015A42  6EE6               	movwf	postinc1,c
 19903  015A44  0E00               	movlw	0
 19904  015A46  6EE6               	movwf	postinc1,c
 19905  015A48  0E00               	movlw	0
 19906  015A4A  6EE6               	movwf	postinc1,c
 19907                           
 19908                           ;stkvar	_n @ sp[(-26)+2]
 19909  015A4C  50E1               	movf	fsr1l,w,c
 19910  015A4E  0FE8               	addlw	-24
 19911  015A50  6ED9               	movwf	fsr2l,c
 19912  015A52  50E2               	movf	fsr1h,w,c
 19913  015A54  6EDA               	movwf	fsr2h,c
 19914  015A56  0EFF               	movlw	255
 19915  015A58  22DA               	addwfc	fsr2h,f,c
 19916  015A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 19917  015A60  006F FF7B FFE6     	movff	postinc2,postinc1
 19918  015A66  006F FF7B FFE6     	movff	postinc2,postinc1
 19919  015A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 19920  015A72  006F FF7B FFE6     	movff	postinc2,postinc1
 19921  015A78  006F FF7B FFE6     	movff	postinc2,postinc1
 19922  015A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 19923  015A84  006F FF7B FFE6     	movff	postinc2,postinc1
 19924  015A8A  EC53  F0BB         	call	___aodiv	;wreg free
 19925  015A8E  52E5               	movf	postdec1,f,c
 19926  015A90  006F FF9C  F018    	movff	indf1,btemp+23
 19927  015A96  52E5               	movf	postdec1,f,c
 19928  015A98  006F FF9C  F017    	movff	indf1,btemp+22
 19929  015A9E  52E5               	movf	postdec1,f,c
 19930  015AA0  006F FF9C  F016    	movff	indf1,btemp+21
 19931  015AA6  52E5               	movf	postdec1,f,c
 19932  015AA8  006F FF9C  F015    	movff	indf1,btemp+20
 19933  015AAE  52E5               	movf	postdec1,f,c
 19934  015AB0  006F FF9C  F014    	movff	indf1,btemp+19
 19935  015AB6  52E5               	movf	postdec1,f,c
 19936  015AB8  006F FF9C  F013    	movff	indf1,btemp+18
 19937  015ABE  52E5               	movf	postdec1,f,c
 19938  015AC0  006F FF9C  F012    	movff	indf1,btemp+17
 19939  015AC6  52E5               	movf	postdec1,f,c
 19940  015AC8  006F FF9C  F011    	movff	indf1,btemp+16
 19941  015ACE  0EF8               	movlw	248
 19942  015AD0  26E1               	addwf	fsr1l,f,c
 19943  015AD2  0EFF               	movlw	255
 19944  015AD4  22E2               	addwfc	fsr1h,f,c
 19945                           
 19946                           ;stkvar	_n @ sp[(-18)+2]
 19947  015AD6  0EF0               	movlw	-16
 19948  015AD8  0060  F047  FFE3   	movff	btemp+16,plusw1
 19949  015ADE  0EF1               	movlw	-15
 19950  015AE0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19951  015AE6  0EF2               	movlw	-14
 19952  015AE8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19953  015AEE  0EF3               	movlw	-13
 19954  015AF0  0060  F053  FFE3   	movff	btemp+19,plusw1
 19955  015AF6  0EF4               	movlw	-12
 19956  015AF8  0060  F057  FFE3   	movff	btemp+20,plusw1
 19957  015AFE  0EF5               	movlw	-11
 19958  015B00  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19959  015B06  0EF6               	movlw	-10
 19960  015B08  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19961  015B0E  0EF7               	movlw	-9
 19962  015B10  0060  F063  FFE3   	movff	btemp+23,plusw1
 19963  015B16                     l11835:
 19964                           
 19965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19966                           ;stkvar	_i @ sp[(-18)+10]
 19967  015B16  0EF9               	movlw	-7
 19968  015B18  BEE3               	btfsc	plusw1,7,c
 19969  015B1A  D036               	goto	u11040
 19970  015B1C  0EF9               	movlw	-7
 19971  015B1E  50E3               	movf	plusw1,w,c
 19972  015B20  E104               	bnz	u11000
 19973  015B22  0EF8               	movlw	-8
 19974  015B24  04E3               	decf	plusw1,w,c
 19975  015B26  A0D8               	btfss	status,0,c
 19976  015B28  D02F               	goto	u11040
 19977  015B2A                     u11000:
 19978                           
 19979                           ;stkvar	_n @ sp[(-18)+2]
 19980  015B2A  0EF0               	movlw	-16
 19981  015B2C  50E3               	movf	plusw1,w,c
 19982  015B2E  E115               	bnz	u11011
 19983  015B30  0EF1               	movlw	-15
 19984  015B32  50E3               	movf	plusw1,w,c
 19985  015B34  E112               	bnz	u11011
 19986  015B36  0EF2               	movlw	-14
 19987  015B38  50E3               	movf	plusw1,w,c
 19988  015B3A  E10F               	bnz	u11011
 19989  015B3C  0EF3               	movlw	-13
 19990  015B3E  50E3               	movf	plusw1,w,c
 19991  015B40  E10C               	bnz	u11011
 19992  015B42  0EF4               	movlw	-12
 19993  015B44  50E3               	movf	plusw1,w,c
 19994  015B46  E109               	bnz	u11011
 19995  015B48  0EF5               	movlw	-11
 19996  015B4A  50E3               	movf	plusw1,w,c
 19997  015B4C  E106               	bnz	u11011
 19998  015B4E  0EF6               	movlw	-10
 19999  015B50  50E3               	movf	plusw1,w,c
 20000  015B52  E103               	bnz	u11011
 20001  015B54  0EF7               	movlw	-9
 20002  015B56  50E3               	movf	plusw1,w,c
 20003  015B58  A4D8               	btfss	status,2,c
 20004  015B5A                     u11011:
 20005  015B5A  D6D4               	goto	l11825
 20006                           
 20007                           ;stkvar	_p @ sp[(-18)+16]
 20008  015B5C  0EFF               	movlw	-1
 20009  015B5E  BEE3               	btfsc	plusw1,7,c
 20010  015B60  D007               	goto	u11020
 20011  015B62  0EFF               	movlw	-1
 20012  015B64  50E3               	movf	plusw1,w,c
 20013  015B66  E103               	bnz	u11021
 20014  015B68  0EFE               	movlw	-2
 20015  015B6A  04E3               	decf	plusw1,w,c
 20016  015B6C  B0D8               	btfsc	status,0,c
 20017  015B6E                     u11021:
 20018  015B6E  D6CA               	goto	l11825
 20019  015B70                     u11020:
 20020                           
 20021                           ;stkvar	_w @ sp[(-18)+14]
 20022  015B70  0EFD               	movlw	-3
 20023  015B72  BEE3               	btfsc	plusw1,7,c
 20024  015B74  D009               	goto	u11040
 20025  015B76  0EFD               	movlw	-3
 20026  015B78  50E3               	movf	plusw1,w,c
 20027  015B7A  E104               	bnz	u11030
 20028  015B7C  0EFC               	movlw	-4
 20029  015B7E  04E3               	decf	plusw1,w,c
 20030  015B80  A0D8               	btfss	status,0,c
 20031  015B82  D002               	goto	u11040
 20032  015B84                     u11030:
 20033  015B84  B23E               	btfsc	_flags^0,1,c
 20034  015B86  D6BE               	goto	l11825
 20035  015B88                     u11040:
 20036                           
 20037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20038                           ;stkvar	_s @ sp[(-18)+12]
 20039  015B88  0EFA               	movlw	-6
 20040  015B8A  006F FF8C  F001    	movff	plusw1,btemp
 20041  015B90  0EFB               	movlw	-5
 20042  015B92  50E3               	movf	plusw1,w,c
 20043  015B94  1001               	iorwf	btemp^0,w,c
 20044  015B96  A4D8               	btfss	status,2,c
 20045  015B98  D002               	goto	u11060
 20046  015B9A  A43E               	btfss	_flags^0,2,c
 20047  015B9C  D033               	goto	l11859
 20048  015B9E                     u11060:
 20049                           
 20050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20051                           ;stkvar	_i @ sp[(-18)+10]
 20052  015B9E  50E1               	movf	fsr1l,w,c
 20053  015BA0  0FF8               	addlw	-8
 20054  015BA2  6ED9               	movwf	fsr2l,c
 20055  015BA4  50E2               	movf	fsr1h,w,c
 20056  015BA6  6EDA               	movwf	fsr2h,c
 20057  015BA8  0EFF               	movlw	255
 20058  015BAA  22DA               	addwfc	fsr2h,f,c
 20059  015BAC  06DE               	decf	postinc2,f,c
 20060  015BAE  0E00               	movlw	0
 20061  015BB0  5ADD               	subwfb	postdec2,f,c
 20062                           
 20063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20064                           ;stkvar	_s @ sp[(-18)+12]
 20065  015BB2  0EFA               	movlw	-6
 20066  015BB4  006F FF8C  F001    	movff	plusw1,btemp
 20067  015BBA  0EFB               	movlw	-5
 20068  015BBC  50E3               	movf	plusw1,w,c
 20069  015BBE  1001               	iorwf	btemp^0,w,c
 20070  015BC0  A4D8               	btfss	status,2,c
 20071  015BC2  D002               	goto	l11855
 20072  015BC4  0E2B               	movlw	43
 20073  015BC6  D001               	goto	L24
 20074  015BC8                     l11855:
 20075  015BC8  0E2D               	movlw	45
 20076  015BCA                     L24:
 20077  015BCA  6E0B               	movwf	(btemp+10)^0,c
 20078  015BCC  0E00               	movlw	0
 20079  015BCE  6E0C               	movwf	(btemp+11)^0,c
 20080                           
 20081                           ;stkvar	_dtoa$5476 @ sp[(-18)+0]
 20082  015BD0  0EEE               	movlw	-18
 20083  015BD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20084  015BD8  0EEF               	movlw	-17
 20085  015BDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 20086                           
 20087                           ;stkvar	_dtoa$5476 @ sp[(-18)+0]
 20088                           ;stkvar	_i @ sp[(-18)+10]
 20089  015BE0  0EF8               	movlw	-8
 20090  015BE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20091  015BE8  0EF9               	movlw	-7
 20092  015BEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20093  015BF0  0E97               	movlw	low _dbuf
 20094  015BF2  240B               	addwf	(btemp+10)^0,w,c
 20095  015BF4  6ED9               	movwf	fsr2l,c
 20096  015BF6  0E02               	movlw	high _dbuf
 20097  015BF8  200C               	addwfc	(btemp+11)^0,w,c
 20098  015BFA  6EDA               	movwf	fsr2h,c
 20099  015BFC  0EEE               	movlw	-18
 20100  015BFE  006F FF8F FFDF     	movff	plusw1,indf2
 20101  015C04                     l11859:
 20102                           
 20103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20104                           ;stkvar	_w @ sp[(-18)+14]
 20105  015C04  0EFC               	movlw	-4
 20106  015C06  006F FF8F FFE6     	movff	plusw1,postinc1
 20107  015C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20108                           
 20109                           ;stkvar	_i @ sp[(-20)+10]
 20110  015C12  0E97               	movlw	low _dbuf
 20111  015C14  6E0B               	movwf	(btemp+10)^0,c
 20112  015C16  0E02               	movlw	high _dbuf
 20113  015C18  6E0C               	movwf	(btemp+11)^0,c
 20114  015C1A  0EF6               	movlw	-10
 20115  015C1C  50E3               	movf	plusw1,w,c
 20116  015C1E  260B               	addwf	(btemp+10)^0,f,c
 20117  015C20  0EF7               	movlw	-9
 20118  015C22  50E3               	movf	plusw1,w,c
 20119  015C24  220C               	addwfc	(btemp+11)^0,f,c
 20120  015C26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20121  015C2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 20122                           
 20123                           ;stkvar	_fp @ sp[(-22)+-2]
 20124  015C32  0EE8               	movlw	-24
 20125  015C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20126  015C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20127  015C40  EC6F  F0CD         	call	_pad	;wreg free
 20128                           
 20129                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20130  015C44  0EE4               	movlw	228
 20131  015C46  26E1               	addwf	fsr1l,f,c
 20132  015C48  0EFF               	movlw	255
 20133  015C4A  22E2               	addwfc	fsr1h,f,c
 20134  015C4C  0012               	return		;funcret
 20135  015C4E                     __end_of_dtoa:
 20136                           	opt callstack 0
 20137                           
 20138 ;; *************** function _abs *****************
 20139 ;; Defined at:
 20140 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  a               2  [STACK] int 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;		None
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  2  [STACK] int 
 20147 ;; Registers used:
 20148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/2
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20158 ;;Total ram usage:        0 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; Hardware stack levels required when called:   15
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_dtoa
 20165 ;; This function uses a reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text67
 20169  01B4E4                     __ptext67:
 20170                           	opt callstack 0
 20171  01B4E4                     _abs:
 20172                           	opt callstack 0
 20173                           
 20174                           ;stkvar	_a @ sp[(0)+-2]
 20175                           
 20176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20177                           ;incstack = 0
 20178 ;; hardware stack exceeded
 20179  01B4E4  0EFF               	movlw	-1
 20180  01B4E6  BEE3               	btfsc	plusw1,7,c
 20181  01B4E8  D007               	goto	u5950
 20182  01B4EA  0EFF               	movlw	-1
 20183  01B4EC  50E3               	movf	plusw1,w,c
 20184  01B4EE  E112               	bnz	l7915
 20185  01B4F0  0EFE               	movlw	-2
 20186  01B4F2  04E3               	decf	plusw1,w,c
 20187  01B4F4  B0D8               	btfsc	status,0,c
 20188  01B4F6  D00E               	goto	l7915
 20189  01B4F8                     u5950:
 20190                           
 20191                           ;stkvar	_a @ sp[(0)+-2]
 20192  01B4F8  0EFE               	movlw	-2
 20193  01B4FA  006F FF8C  F001    	movff	plusw1,btemp
 20194  01B500  1E01               	comf	btemp^0,f,c
 20195  01B502  0EFF               	movlw	-1
 20196  01B504  006F FF8C  F002    	movff	plusw1,btemp+1
 20197  01B50A  1E02               	comf	(btemp+1)^0,f,c
 20198  01B50C  2A01               	incf	btemp^0,f,c
 20199  01B50E  B4D8               	btfsc	status,2,c
 20200  01B510  2A02               	incf	(btemp+1)^0,f,c
 20201  01B512  D008               	goto	l3093
 20202  01B514                     l7915:
 20203                           
 20204                           ;stkvar	_a @ sp[(0)+-2]
 20205  01B514  0EFE               	movlw	-2
 20206  01B516  006F FF8C  F001    	movff	plusw1,btemp
 20207  01B51C  0EFF               	movlw	-1
 20208  01B51E  006F FF8C  F002    	movff	plusw1,btemp+1
 20209  01B524                     l3093:
 20210                           
 20211                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20212  01B524  52E5               	movf	postdec1,f,c
 20213  01B526  52E5               	movf	postdec1,f,c
 20214  01B528  0012               	return		;funcret
 20215  01B52A                     __end_of_abs:
 20216                           	opt callstack 0
 20217                           
 20218 ;; *************** function ___aomod *****************
 20219 ;; Defined at:
 20220 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20221 ;; Parameters:    Size  Location     Type
 20222 ;;  dividend        8  [STACK] long long 
 20223 ;;  divisor         8  [STACK] long long 
 20224 ;; Auto vars:     Size  Location     Type
 20225 ;;  sign            1  [STACK] unsigned char 
 20226 ;;  counter         1  [STACK] unsigned char 
 20227 ;; Return value:  Size  Location     Type
 20228 ;;                  8  [STACK] long long 
 20229 ;; Registers used:
 20230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20231 ;; Tracked objects:
 20232 ;;		On entry : 0/2
 20233 ;;		On exit  : 0/0
 20234 ;;		Unchanged: 0/0
 20235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20240 ;;Total ram usage:        0 bytes
 20241 ;; Hardware stack levels used:    1
 20242 ;; Hardware stack levels required when called:   15
 20243 ;; This function calls:
 20244 ;;		Nothing
 20245 ;; This function is called by:
 20246 ;;		_dtoa
 20247 ;; This function uses a reentrant model
 20248 ;;
 20249                           
 20250                           	psect	text68
 20251  017DE0                     __ptext68:
 20252                           	opt callstack 0
 20253  017DE0                     ___aomod:
 20254                           	opt callstack 0
 20255                           
 20256                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20257  017DE0  52E6               	movf	postinc1,f,c
 20258  017DE2  52E6               	movf	postinc1,f,c
 20259                           
 20260                           ;stkvar	_sign @ sp[(-2)+0]
 20261                           
 20262                           ;incstack = 0
 20263 ;; hardware stack exceeded
 20264  017DE4  0EFE               	movlw	-2
 20265  017DE6  6AE3               	clrf	plusw1,c
 20266                           
 20267                           ;stkvar	_dividend @ sp[(-2)+-8]
 20268  017DE8  0EFD               	movlw	-3
 20269  017DEA  AEE3               	btfss	plusw1,7,c
 20270  017DEC  D028               	goto	l8073
 20271                           
 20272                           ;stkvar	_dividend @ sp[(-2)+-8]
 20273                           ;stkvar	_dividend @ sp[(-2)+-8]
 20274  017DEE  0EF6               	movlw	-10
 20275  017DF0  6CE3               	negf	plusw1,c
 20276  017DF2  0EF7               	movlw	-9
 20277  017DF4  1EE3               	comf	plusw1,f,c
 20278  017DF6  0EF8               	movlw	-8
 20279  017DF8  1EE3               	comf	plusw1,f,c
 20280  017DFA  0EF9               	movlw	-7
 20281  017DFC  1EE3               	comf	plusw1,f,c
 20282  017DFE  0EFA               	movlw	-6
 20283  017E00  1EE3               	comf	plusw1,f,c
 20284  017E02  0EFB               	movlw	-5
 20285  017E04  1EE3               	comf	plusw1,f,c
 20286  017E06  0EFC               	movlw	-4
 20287  017E08  1EE3               	comf	plusw1,f,c
 20288  017E0A  0EFD               	movlw	-3
 20289  017E0C  1EE3               	comf	plusw1,f,c
 20290  017E0E  E314               	bnc	u6380
 20291  017E10  0EF7               	movlw	-9
 20292  017E12  2AE3               	incf	plusw1,f,c
 20293  017E14  E311               	bnc	u6380
 20294  017E16  0EF8               	movlw	-8
 20295  017E18  2AE3               	incf	plusw1,f,c
 20296  017E1A  E30E               	bnc	u6380
 20297  017E1C  0EF9               	movlw	-7
 20298  017E1E  2AE3               	incf	plusw1,f,c
 20299  017E20  E30B               	bnc	u6380
 20300  017E22  0EFA               	movlw	-6
 20301  017E24  2AE3               	incf	plusw1,f,c
 20302  017E26  E308               	bnc	u6380
 20303  017E28  0EFB               	movlw	-5
 20304  017E2A  2AE3               	incf	plusw1,f,c
 20305  017E2C  E305               	bnc	u6380
 20306  017E2E  0EFC               	movlw	-4
 20307  017E30  2AE3               	incf	plusw1,f,c
 20308  017E32  E302               	bnc	u6380
 20309  017E34  0EFD               	movlw	-3
 20310  017E36  2AE3               	incf	plusw1,f,c
 20311  017E38                     u6380:
 20312                           
 20313                           ;stkvar	_sign @ sp[(-2)+0]
 20314  017E38  0EFE               	movlw	-2
 20315  017E3A  6AE3               	clrf	plusw1,c
 20316  017E3C  2AE3               	incf	plusw1,f,c
 20317  017E3E                     l8073:
 20318                           
 20319                           ;stkvar	_divisor @ sp[(-2)+-16]
 20320  017E3E  0EF5               	movlw	-11
 20321  017E40  AEE3               	btfss	plusw1,7,c
 20322  017E42  D025               	goto	u6400
 20323                           
 20324                           ;stkvar	_divisor @ sp[(-2)+-16]
 20325                           ;stkvar	_divisor @ sp[(-2)+-16]
 20326  017E44  0EEE               	movlw	-18
 20327  017E46  6CE3               	negf	plusw1,c
 20328  017E48  0EEF               	movlw	-17
 20329  017E4A  1EE3               	comf	plusw1,f,c
 20330  017E4C  0EF0               	movlw	-16
 20331  017E4E  1EE3               	comf	plusw1,f,c
 20332  017E50  0EF1               	movlw	-15
 20333  017E52  1EE3               	comf	plusw1,f,c
 20334  017E54  0EF2               	movlw	-14
 20335  017E56  1EE3               	comf	plusw1,f,c
 20336  017E58  0EF3               	movlw	-13
 20337  017E5A  1EE3               	comf	plusw1,f,c
 20338  017E5C  0EF4               	movlw	-12
 20339  017E5E  1EE3               	comf	plusw1,f,c
 20340  017E60  0EF5               	movlw	-11
 20341  017E62  1EE3               	comf	plusw1,f,c
 20342  017E64  E314               	bnc	u6400
 20343  017E66  0EEF               	movlw	-17
 20344  017E68  2AE3               	incf	plusw1,f,c
 20345  017E6A  E311               	bnc	u6400
 20346  017E6C  0EF0               	movlw	-16
 20347  017E6E  2AE3               	incf	plusw1,f,c
 20348  017E70  E30E               	bnc	u6400
 20349  017E72  0EF1               	movlw	-15
 20350  017E74  2AE3               	incf	plusw1,f,c
 20351  017E76  E30B               	bnc	u6400
 20352  017E78  0EF2               	movlw	-14
 20353  017E7A  2AE3               	incf	plusw1,f,c
 20354  017E7C  E308               	bnc	u6400
 20355  017E7E  0EF3               	movlw	-13
 20356  017E80  2AE3               	incf	plusw1,f,c
 20357  017E82  E305               	bnc	u6400
 20358  017E84  0EF4               	movlw	-12
 20359  017E86  2AE3               	incf	plusw1,f,c
 20360  017E88  E302               	bnc	u6400
 20361  017E8A  0EF5               	movlw	-11
 20362  017E8C  2AE3               	incf	plusw1,f,c
 20363  017E8E                     u6400:
 20364                           
 20365                           ;stkvar	_divisor @ sp[(-2)+-16]
 20366  017E8E  0EEE               	movlw	-18
 20367  017E90  50E3               	movf	plusw1,w,c
 20368  017E92  E116               	bnz	u6410
 20369  017E94  0EEF               	movlw	-17
 20370  017E96  50E3               	movf	plusw1,w,c
 20371  017E98  E113               	bnz	u6410
 20372  017E9A  0EF0               	movlw	-16
 20373  017E9C  50E3               	movf	plusw1,w,c
 20374  017E9E  E110               	bnz	u6410
 20375  017EA0  0EF1               	movlw	-15
 20376  017EA2  50E3               	movf	plusw1,w,c
 20377  017EA4  E10D               	bnz	u6410
 20378  017EA6  0EF2               	movlw	-14
 20379  017EA8  50E3               	movf	plusw1,w,c
 20380  017EAA  E10A               	bnz	u6410
 20381  017EAC  0EF3               	movlw	-13
 20382  017EAE  50E3               	movf	plusw1,w,c
 20383  017EB0  E107               	bnz	u6410
 20384  017EB2  0EF4               	movlw	-12
 20385  017EB4  50E3               	movf	plusw1,w,c
 20386  017EB6  E104               	bnz	u6410
 20387  017EB8  0EF5               	movlw	-11
 20388  017EBA  50E3               	movf	plusw1,w,c
 20389  017EBC  B4D8               	btfsc	status,2,c
 20390  017EBE  D075               	goto	u6440
 20391  017EC0                     u6410:
 20392                           
 20393                           ;stkvar	_counter @ sp[(-2)+1]
 20394  017EC0  0EFF               	movlw	-1
 20395  017EC2  6AE3               	clrf	plusw1,c
 20396  017EC4  D012               	goto	L25
 20397  017EC6                     l8081:
 20398                           
 20399                           ;stkvar	_divisor @ sp[(-2)+-16]
 20400  017EC6  90D8               	bcf	status,0,c
 20401  017EC8  0EEE               	movlw	-18
 20402  017ECA  36E3               	rlcf	plusw1,f,c
 20403  017ECC  0EEF               	movlw	-17
 20404  017ECE  36E3               	rlcf	plusw1,f,c
 20405  017ED0  0EF0               	movlw	-16
 20406  017ED2  36E3               	rlcf	plusw1,f,c
 20407  017ED4  0EF1               	movlw	-15
 20408  017ED6  36E3               	rlcf	plusw1,f,c
 20409  017ED8  0EF2               	movlw	-14
 20410  017EDA  36E3               	rlcf	plusw1,f,c
 20411  017EDC  0EF3               	movlw	-13
 20412  017EDE  36E3               	rlcf	plusw1,f,c
 20413  017EE0  0EF4               	movlw	-12
 20414  017EE2  36E3               	rlcf	plusw1,f,c
 20415  017EE4  0EF5               	movlw	-11
 20416  017EE6  36E3               	rlcf	plusw1,f,c
 20417                           
 20418                           ;stkvar	_counter @ sp[(-2)+1]
 20419  017EE8  0EFF               	movlw	-1
 20420  017EEA                     L25:
 20421  017EEA  2AE3               	incf	plusw1,f,c
 20422                           
 20423                           ;stkvar	_divisor @ sp[(-2)+-16]
 20424  017EEC  0EF5               	movlw	-11
 20425  017EEE  AEE3               	btfss	plusw1,7,c
 20426  017EF0  D7EA               	goto	l8081
 20427  017EF2                     u6420:
 20428                           
 20429                           ;stkvar	_divisor @ sp[(-2)+-16]
 20430                           ;stkvar	_dividend @ sp[(-2)+-8]
 20431  017EF2  50E1               	movf	fsr1l,w,c
 20432  017EF4  0FF6               	addlw	-10
 20433  017EF6  6ED9               	movwf	fsr2l,c
 20434  017EF8  50E2               	movf	fsr1h,w,c
 20435  017EFA  6EDA               	movwf	fsr2h,c
 20436  017EFC  0EFF               	movlw	255
 20437  017EFE  22DA               	addwfc	fsr2h,f,c
 20438  017F00  0EEE               	movlw	-18
 20439  017F02  50E3               	movf	plusw1,w,c
 20440  017F04  5CDE               	subwf	postinc2,w,c
 20441  017F06  0EEF               	movlw	-17
 20442  017F08  50E3               	movf	plusw1,w,c
 20443  017F0A  58DE               	subwfb	postinc2,w,c
 20444  017F0C  0EF0               	movlw	-16
 20445  017F0E  50E3               	movf	plusw1,w,c
 20446  017F10  58DE               	subwfb	postinc2,w,c
 20447  017F12  0EF1               	movlw	-15
 20448  017F14  50E3               	movf	plusw1,w,c
 20449  017F16  58DE               	subwfb	postinc2,w,c
 20450  017F18  0EF2               	movlw	-14
 20451  017F1A  50E3               	movf	plusw1,w,c
 20452  017F1C  58DE               	subwfb	postinc2,w,c
 20453  017F1E  0EF3               	movlw	-13
 20454  017F20  50E3               	movf	plusw1,w,c
 20455  017F22  58DE               	subwfb	postinc2,w,c
 20456  017F24  0EF4               	movlw	-12
 20457  017F26  50E3               	movf	plusw1,w,c
 20458  017F28  58DE               	subwfb	postinc2,w,c
 20459  017F2A  0EF5               	movlw	-11
 20460  017F2C  50E3               	movf	plusw1,w,c
 20461  017F2E  58DE               	subwfb	postinc2,w,c
 20462  017F30  A0D8               	btfss	status,0,c
 20463  017F32  D01F               	goto	l8089
 20464                           
 20465                           ;stkvar	_divisor @ sp[(-2)+-16]
 20466                           ;stkvar	_dividend @ sp[(-2)+-8]
 20467  017F34  50E1               	movf	fsr1l,w,c
 20468  017F36  0FF6               	addlw	-10
 20469  017F38  6ED9               	movwf	fsr2l,c
 20470  017F3A  50E2               	movf	fsr1h,w,c
 20471  017F3C  6EDA               	movwf	fsr2h,c
 20472  017F3E  0EFF               	movlw	255
 20473  017F40  22DA               	addwfc	fsr2h,f,c
 20474  017F42  0EEE               	movlw	-18
 20475  017F44  50E3               	movf	plusw1,w,c
 20476  017F46  5EDE               	subwf	postinc2,f,c
 20477  017F48  0EEF               	movlw	-17
 20478  017F4A  50E3               	movf	plusw1,w,c
 20479  017F4C  5ADE               	subwfb	postinc2,f,c
 20480  017F4E  0EF0               	movlw	-16
 20481  017F50  50E3               	movf	plusw1,w,c
 20482  017F52  5ADE               	subwfb	postinc2,f,c
 20483  017F54  0EF1               	movlw	-15
 20484  017F56  50E3               	movf	plusw1,w,c
 20485  017F58  5ADE               	subwfb	postinc2,f,c
 20486  017F5A  0EF2               	movlw	-14
 20487  017F5C  50E3               	movf	plusw1,w,c
 20488  017F5E  5ADE               	subwfb	postinc2,f,c
 20489  017F60  0EF3               	movlw	-13
 20490  017F62  50E3               	movf	plusw1,w,c
 20491  017F64  5ADE               	subwfb	postinc2,f,c
 20492  017F66  0EF4               	movlw	-12
 20493  017F68  50E3               	movf	plusw1,w,c
 20494  017F6A  5ADE               	subwfb	postinc2,f,c
 20495  017F6C  0EF5               	movlw	-11
 20496  017F6E  50E3               	movf	plusw1,w,c
 20497  017F70  5ADE               	subwfb	postinc2,f,c
 20498  017F72                     l8089:
 20499                           
 20500                           ;stkvar	_divisor @ sp[(-2)+-16]
 20501  017F72  90D8               	bcf	status,0,c
 20502  017F74  0EF5               	movlw	-11
 20503  017F76  32E3               	rrcf	plusw1,f,c
 20504  017F78  0EF4               	movlw	-12
 20505  017F7A  32E3               	rrcf	plusw1,f,c
 20506  017F7C  0EF3               	movlw	-13
 20507  017F7E  32E3               	rrcf	plusw1,f,c
 20508  017F80  0EF2               	movlw	-14
 20509  017F82  32E3               	rrcf	plusw1,f,c
 20510  017F84  0EF1               	movlw	-15
 20511  017F86  32E3               	rrcf	plusw1,f,c
 20512  017F88  0EF0               	movlw	-16
 20513  017F8A  32E3               	rrcf	plusw1,f,c
 20514  017F8C  0EEF               	movlw	-17
 20515  017F8E  32E3               	rrcf	plusw1,f,c
 20516  017F90  0EEE               	movlw	-18
 20517  017F92  32E3               	rrcf	plusw1,f,c
 20518                           
 20519                           ;stkvar	_counter @ sp[(-2)+1]
 20520  017F94  0EFF               	movlw	-1
 20521  017F96  50E3               	movf	plusw1,w,c
 20522  017F98  6E01               	movwf	btemp^0,c
 20523  017F9A  0E01               	movlw	1
 20524  017F9C  5E01               	subwf	btemp^0,f,c
 20525  017F9E  0EFF               	movlw	-1
 20526  017FA0  0060  F007  FFE3   	movff	btemp,plusw1
 20527  017FA6  A4D8               	btfss	status,2,c
 20528  017FA8  D7A4               	goto	u6420
 20529  017FAA                     u6440:
 20530                           
 20531                           ;stkvar	_sign @ sp[(-2)+0]
 20532  017FAA  0EFE               	movlw	-2
 20533  017FAC  50E3               	movf	plusw1,w,c
 20534  017FAE  B4D8               	btfsc	status,2,c
 20535  017FB0  D025               	goto	u6460
 20536                           
 20537                           ;stkvar	_dividend @ sp[(-2)+-8]
 20538                           ;stkvar	_dividend @ sp[(-2)+-8]
 20539  017FB2  0EF6               	movlw	-10
 20540  017FB4  6CE3               	negf	plusw1,c
 20541  017FB6  0EF7               	movlw	-9
 20542  017FB8  1EE3               	comf	plusw1,f,c
 20543  017FBA  0EF8               	movlw	-8
 20544  017FBC  1EE3               	comf	plusw1,f,c
 20545  017FBE  0EF9               	movlw	-7
 20546  017FC0  1EE3               	comf	plusw1,f,c
 20547  017FC2  0EFA               	movlw	-6
 20548  017FC4  1EE3               	comf	plusw1,f,c
 20549  017FC6  0EFB               	movlw	-5
 20550  017FC8  1EE3               	comf	plusw1,f,c
 20551  017FCA  0EFC               	movlw	-4
 20552  017FCC  1EE3               	comf	plusw1,f,c
 20553  017FCE  0EFD               	movlw	-3
 20554  017FD0  1EE3               	comf	plusw1,f,c
 20555  017FD2  E314               	bnc	u6460
 20556  017FD4  0EF7               	movlw	-9
 20557  017FD6  2AE3               	incf	plusw1,f,c
 20558  017FD8  E311               	bnc	u6460
 20559  017FDA  0EF8               	movlw	-8
 20560  017FDC  2AE3               	incf	plusw1,f,c
 20561  017FDE  E30E               	bnc	u6460
 20562  017FE0  0EF9               	movlw	-7
 20563  017FE2  2AE3               	incf	plusw1,f,c
 20564  017FE4  E30B               	bnc	u6460
 20565  017FE6  0EFA               	movlw	-6
 20566  017FE8  2AE3               	incf	plusw1,f,c
 20567  017FEA  E308               	bnc	u6460
 20568  017FEC  0EFB               	movlw	-5
 20569  017FEE  2AE3               	incf	plusw1,f,c
 20570  017FF0  E305               	bnc	u6460
 20571  017FF2  0EFC               	movlw	-4
 20572  017FF4  2AE3               	incf	plusw1,f,c
 20573  017FF6  E302               	bnc	u6460
 20574  017FF8  0EFD               	movlw	-3
 20575  017FFA  2AE3               	incf	plusw1,f,c
 20576  017FFC                     u6460:
 20577                           
 20578                           ;stkvar	_dividend @ sp[(-2)+-8]
 20579  017FFC  0EF6               	movlw	246
 20580  017FFE  24E1               	addwf	fsr1l,w,c
 20581  018000  6ED9               	movwf	fsr2l,c
 20582  018002  0EFF               	movlw	255
 20583  018004  20E2               	addwfc	fsr1h,w,c
 20584  018006  6EDA               	movwf	fsr2h,c
 20585                           
 20586                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20587  018008  0E08               	movlw	8
 20588  01800A  6E01               	movwf	btemp^0,c
 20589  01800C  0EF6               	movlw	-10
 20590  01800E                     us647999:
 20591  01800E  006F FF7B FFE3     	movff	postinc2,plusw1
 20592  018014  28E8               	incf	wreg,w,c
 20593  018016  2E01               	decfsz	btemp^0,f,c
 20594  018018  D7FA               	bra	us647999
 20595                           
 20596                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20597  01801A  52E5               	movf	postdec1,f,c
 20598  01801C  52E5               	movf	postdec1,f,c
 20599  01801E  0012               	return		;funcret
 20600  018020                     __end_of___aomod:
 20601                           	opt callstack 0
 20602                           
 20603 ;; *************** function ___aodiv *****************
 20604 ;; Defined at:
 20605 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20606 ;; Parameters:    Size  Location     Type
 20607 ;;  dividend        8  [STACK] long long 
 20608 ;;  divisor         8  [STACK] long long 
 20609 ;; Auto vars:     Size  Location     Type
 20610 ;;  quotient        8  [STACK] long long 
 20611 ;;  sign            1  [STACK] unsigned char 
 20612 ;;  counter         1  [STACK] unsigned char 
 20613 ;; Return value:  Size  Location     Type
 20614 ;;                  8  [STACK] long long 
 20615 ;; Registers used:
 20616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20617 ;; Tracked objects:
 20618 ;;		On entry : 0/2
 20619 ;;		On exit  : 0/0
 20620 ;;		Unchanged: 0/0
 20621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20626 ;;Total ram usage:        0 bytes
 20627 ;; Hardware stack levels used:    1
 20628 ;; Hardware stack levels required when called:   15
 20629 ;; This function calls:
 20630 ;;		Nothing
 20631 ;; This function is called by:
 20632 ;;		_dtoa
 20633 ;; This function uses a reentrant model
 20634 ;;
 20635                           
 20636                           	psect	text69
 20637  0176A6                     __ptext69:
 20638                           	opt callstack 0
 20639  0176A6                     ___aodiv:
 20640                           	opt callstack 0
 20641                           
 20642                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20643  0176A6  0E0A               	movlw	10
 20644  0176A8  26E1               	addwf	fsr1l,f,c
 20645  0176AA  0E00               	movlw	0
 20646  0176AC  22E2               	addwfc	fsr1h,f,c
 20647                           
 20648                           ;stkvar	_sign @ sp[(-10)+8]
 20649                           
 20650                           ;incstack = 0
 20651 ;; hardware stack exceeded
 20652  0176AE  0EFE               	movlw	-2
 20653  0176B0  6AE3               	clrf	plusw1,c
 20654                           
 20655                           ;stkvar	_divisor @ sp[(-10)+-16]
 20656  0176B2  0EED               	movlw	-19
 20657  0176B4  AEE3               	btfss	plusw1,7,c
 20658  0176B6  D028               	goto	l8029
 20659                           
 20660                           ;stkvar	_divisor @ sp[(-10)+-16]
 20661                           ;stkvar	_divisor @ sp[(-10)+-16]
 20662  0176B8  0EE6               	movlw	-26
 20663  0176BA  6CE3               	negf	plusw1,c
 20664  0176BC  0EE7               	movlw	-25
 20665  0176BE  1EE3               	comf	plusw1,f,c
 20666  0176C0  0EE8               	movlw	-24
 20667  0176C2  1EE3               	comf	plusw1,f,c
 20668  0176C4  0EE9               	movlw	-23
 20669  0176C6  1EE3               	comf	plusw1,f,c
 20670  0176C8  0EEA               	movlw	-22
 20671  0176CA  1EE3               	comf	plusw1,f,c
 20672  0176CC  0EEB               	movlw	-21
 20673  0176CE  1EE3               	comf	plusw1,f,c
 20674  0176D0  0EEC               	movlw	-20
 20675  0176D2  1EE3               	comf	plusw1,f,c
 20676  0176D4  0EED               	movlw	-19
 20677  0176D6  1EE3               	comf	plusw1,f,c
 20678  0176D8  E314               	bnc	u6260
 20679  0176DA  0EE7               	movlw	-25
 20680  0176DC  2AE3               	incf	plusw1,f,c
 20681  0176DE  E311               	bnc	u6260
 20682  0176E0  0EE8               	movlw	-24
 20683  0176E2  2AE3               	incf	plusw1,f,c
 20684  0176E4  E30E               	bnc	u6260
 20685  0176E6  0EE9               	movlw	-23
 20686  0176E8  2AE3               	incf	plusw1,f,c
 20687  0176EA  E30B               	bnc	u6260
 20688  0176EC  0EEA               	movlw	-22
 20689  0176EE  2AE3               	incf	plusw1,f,c
 20690  0176F0  E308               	bnc	u6260
 20691  0176F2  0EEB               	movlw	-21
 20692  0176F4  2AE3               	incf	plusw1,f,c
 20693  0176F6  E305               	bnc	u6260
 20694  0176F8  0EEC               	movlw	-20
 20695  0176FA  2AE3               	incf	plusw1,f,c
 20696  0176FC  E302               	bnc	u6260
 20697  0176FE  0EED               	movlw	-19
 20698  017700  2AE3               	incf	plusw1,f,c
 20699  017702                     u6260:
 20700                           
 20701                           ;stkvar	_sign @ sp[(-10)+8]
 20702  017702  0EFE               	movlw	-2
 20703  017704  6AE3               	clrf	plusw1,c
 20704  017706  2AE3               	incf	plusw1,f,c
 20705  017708                     l8029:
 20706                           
 20707                           ;stkvar	_dividend @ sp[(-10)+-8]
 20708  017708  0EF5               	movlw	-11
 20709  01770A  AEE3               	btfss	plusw1,7,c
 20710  01770C  D027               	goto	l8035
 20711                           
 20712                           ;stkvar	_dividend @ sp[(-10)+-8]
 20713                           ;stkvar	_dividend @ sp[(-10)+-8]
 20714  01770E  0EEE               	movlw	-18
 20715  017710  6CE3               	negf	plusw1,c
 20716  017712  0EEF               	movlw	-17
 20717  017714  1EE3               	comf	plusw1,f,c
 20718  017716  0EF0               	movlw	-16
 20719  017718  1EE3               	comf	plusw1,f,c
 20720  01771A  0EF1               	movlw	-15
 20721  01771C  1EE3               	comf	plusw1,f,c
 20722  01771E  0EF2               	movlw	-14
 20723  017720  1EE3               	comf	plusw1,f,c
 20724  017722  0EF3               	movlw	-13
 20725  017724  1EE3               	comf	plusw1,f,c
 20726  017726  0EF4               	movlw	-12
 20727  017728  1EE3               	comf	plusw1,f,c
 20728  01772A  0EF5               	movlw	-11
 20729  01772C  1EE3               	comf	plusw1,f,c
 20730  01772E  E314               	bnc	u6280
 20731  017730  0EEF               	movlw	-17
 20732  017732  2AE3               	incf	plusw1,f,c
 20733  017734  E311               	bnc	u6280
 20734  017736  0EF0               	movlw	-16
 20735  017738  2AE3               	incf	plusw1,f,c
 20736  01773A  E30E               	bnc	u6280
 20737  01773C  0EF1               	movlw	-15
 20738  01773E  2AE3               	incf	plusw1,f,c
 20739  017740  E30B               	bnc	u6280
 20740  017742  0EF2               	movlw	-14
 20741  017744  2AE3               	incf	plusw1,f,c
 20742  017746  E308               	bnc	u6280
 20743  017748  0EF3               	movlw	-13
 20744  01774A  2AE3               	incf	plusw1,f,c
 20745  01774C  E305               	bnc	u6280
 20746  01774E  0EF4               	movlw	-12
 20747  017750  2AE3               	incf	plusw1,f,c
 20748  017752  E302               	bnc	u6280
 20749  017754  0EF5               	movlw	-11
 20750  017756  2AE3               	incf	plusw1,f,c
 20751  017758                     u6280:
 20752                           
 20753                           ;stkvar	_sign @ sp[(-10)+8]
 20754  017758  0EFE               	movlw	-2
 20755  01775A  70E3               	btg	plusw1,0,c
 20756  01775C                     l8035:
 20757                           
 20758                           ;stkvar	_quotient @ sp[(-10)+0]
 20759  01775C  0E07               	movlw	7
 20760  01775E  6E01               	movwf	btemp^0,c
 20761  017760  0EF6               	movlw	-10
 20762  017762                     u6291:
 20763  017762  6AE3               	clrf	plusw1,c
 20764  017764  2AE8               	incf	wreg,f,c
 20765  017766  0601               	decf	btemp^0,f,c
 20766  017768  E2FC               	bc	u6291
 20767                           
 20768                           ;stkvar	_divisor @ sp[(-10)+-16]
 20769  01776A  0EE6               	movlw	-26
 20770  01776C  50E3               	movf	plusw1,w,c
 20771  01776E  E116               	bnz	u6300
 20772  017770  0EE7               	movlw	-25
 20773  017772  50E3               	movf	plusw1,w,c
 20774  017774  E113               	bnz	u6300
 20775  017776  0EE8               	movlw	-24
 20776  017778  50E3               	movf	plusw1,w,c
 20777  01777A  E110               	bnz	u6300
 20778  01777C  0EE9               	movlw	-23
 20779  01777E  50E3               	movf	plusw1,w,c
 20780  017780  E10D               	bnz	u6300
 20781  017782  0EEA               	movlw	-22
 20782  017784  50E3               	movf	plusw1,w,c
 20783  017786  E10A               	bnz	u6300
 20784  017788  0EEB               	movlw	-21
 20785  01778A  50E3               	movf	plusw1,w,c
 20786  01778C  E107               	bnz	u6300
 20787  01778E  0EEC               	movlw	-20
 20788  017790  50E3               	movf	plusw1,w,c
 20789  017792  E104               	bnz	u6300
 20790  017794  0EED               	movlw	-19
 20791  017796  50E3               	movf	plusw1,w,c
 20792  017798  B4D8               	btfsc	status,2,c
 20793  01779A  D088               	goto	u6330
 20794  01779C                     u6300:
 20795                           
 20796                           ;stkvar	_counter @ sp[(-10)+9]
 20797  01779C  0EFF               	movlw	-1
 20798  01779E  6AE3               	clrf	plusw1,c
 20799  0177A0  D012               	goto	L26
 20800  0177A2                     l8041:
 20801                           
 20802                           ;stkvar	_divisor @ sp[(-10)+-16]
 20803  0177A2  90D8               	bcf	status,0,c
 20804  0177A4  0EE6               	movlw	-26
 20805  0177A6  36E3               	rlcf	plusw1,f,c
 20806  0177A8  0EE7               	movlw	-25
 20807  0177AA  36E3               	rlcf	plusw1,f,c
 20808  0177AC  0EE8               	movlw	-24
 20809  0177AE  36E3               	rlcf	plusw1,f,c
 20810  0177B0  0EE9               	movlw	-23
 20811  0177B2  36E3               	rlcf	plusw1,f,c
 20812  0177B4  0EEA               	movlw	-22
 20813  0177B6  36E3               	rlcf	plusw1,f,c
 20814  0177B8  0EEB               	movlw	-21
 20815  0177BA  36E3               	rlcf	plusw1,f,c
 20816  0177BC  0EEC               	movlw	-20
 20817  0177BE  36E3               	rlcf	plusw1,f,c
 20818  0177C0  0EED               	movlw	-19
 20819  0177C2  36E3               	rlcf	plusw1,f,c
 20820                           
 20821                           ;stkvar	_counter @ sp[(-10)+9]
 20822  0177C4  0EFF               	movlw	-1
 20823  0177C6                     L26:
 20824  0177C6  2AE3               	incf	plusw1,f,c
 20825                           
 20826                           ;stkvar	_divisor @ sp[(-10)+-16]
 20827  0177C8  0EED               	movlw	-19
 20828  0177CA  AEE3               	btfss	plusw1,7,c
 20829  0177CC  D7EA               	goto	l8041
 20830  0177CE                     u6310:
 20831                           
 20832                           ;stkvar	_quotient @ sp[(-10)+0]
 20833  0177CE  90D8               	bcf	status,0,c
 20834  0177D0  0EF6               	movlw	-10
 20835  0177D2  36E3               	rlcf	plusw1,f,c
 20836  0177D4  0EF7               	movlw	-9
 20837  0177D6  36E3               	rlcf	plusw1,f,c
 20838  0177D8  0EF8               	movlw	-8
 20839  0177DA  36E3               	rlcf	plusw1,f,c
 20840  0177DC  0EF9               	movlw	-7
 20841  0177DE  36E3               	rlcf	plusw1,f,c
 20842  0177E0  0EFA               	movlw	-6
 20843  0177E2  36E3               	rlcf	plusw1,f,c
 20844  0177E4  0EFB               	movlw	-5
 20845  0177E6  36E3               	rlcf	plusw1,f,c
 20846  0177E8  0EFC               	movlw	-4
 20847  0177EA  36E3               	rlcf	plusw1,f,c
 20848  0177EC  0EFD               	movlw	-3
 20849  0177EE  36E3               	rlcf	plusw1,f,c
 20850                           
 20851                           ;stkvar	_divisor @ sp[(-10)+-16]
 20852                           ;stkvar	_dividend @ sp[(-10)+-8]
 20853  0177F0  50E1               	movf	fsr1l,w,c
 20854  0177F2  0FEE               	addlw	-18
 20855  0177F4  6ED9               	movwf	fsr2l,c
 20856  0177F6  50E2               	movf	fsr1h,w,c
 20857  0177F8  6EDA               	movwf	fsr2h,c
 20858  0177FA  0EFF               	movlw	255
 20859  0177FC  22DA               	addwfc	fsr2h,f,c
 20860  0177FE  0EE6               	movlw	-26
 20861  017800  50E3               	movf	plusw1,w,c
 20862  017802  5CDE               	subwf	postinc2,w,c
 20863  017804  0EE7               	movlw	-25
 20864  017806  50E3               	movf	plusw1,w,c
 20865  017808  58DE               	subwfb	postinc2,w,c
 20866  01780A  0EE8               	movlw	-24
 20867  01780C  50E3               	movf	plusw1,w,c
 20868  01780E  58DE               	subwfb	postinc2,w,c
 20869  017810  0EE9               	movlw	-23
 20870  017812  50E3               	movf	plusw1,w,c
 20871  017814  58DE               	subwfb	postinc2,w,c
 20872  017816  0EEA               	movlw	-22
 20873  017818  50E3               	movf	plusw1,w,c
 20874  01781A  58DE               	subwfb	postinc2,w,c
 20875  01781C  0EEB               	movlw	-21
 20876  01781E  50E3               	movf	plusw1,w,c
 20877  017820  58DE               	subwfb	postinc2,w,c
 20878  017822  0EEC               	movlw	-20
 20879  017824  50E3               	movf	plusw1,w,c
 20880  017826  58DE               	subwfb	postinc2,w,c
 20881  017828  0EED               	movlw	-19
 20882  01782A  50E3               	movf	plusw1,w,c
 20883  01782C  58DE               	subwfb	postinc2,w,c
 20884  01782E  A0D8               	btfss	status,0,c
 20885  017830  D021               	goto	l8053
 20886                           
 20887                           ;stkvar	_divisor @ sp[(-10)+-16]
 20888                           ;stkvar	_dividend @ sp[(-10)+-8]
 20889  017832  50E1               	movf	fsr1l,w,c
 20890  017834  0FEE               	addlw	-18
 20891  017836  6ED9               	movwf	fsr2l,c
 20892  017838  50E2               	movf	fsr1h,w,c
 20893  01783A  6EDA               	movwf	fsr2h,c
 20894  01783C  0EFF               	movlw	255
 20895  01783E  22DA               	addwfc	fsr2h,f,c
 20896  017840  0EE6               	movlw	-26
 20897  017842  50E3               	movf	plusw1,w,c
 20898  017844  5EDE               	subwf	postinc2,f,c
 20899  017846  0EE7               	movlw	-25
 20900  017848  50E3               	movf	plusw1,w,c
 20901  01784A  5ADE               	subwfb	postinc2,f,c
 20902  01784C  0EE8               	movlw	-24
 20903  01784E  50E3               	movf	plusw1,w,c
 20904  017850  5ADE               	subwfb	postinc2,f,c
 20905  017852  0EE9               	movlw	-23
 20906  017854  50E3               	movf	plusw1,w,c
 20907  017856  5ADE               	subwfb	postinc2,f,c
 20908  017858  0EEA               	movlw	-22
 20909  01785A  50E3               	movf	plusw1,w,c
 20910  01785C  5ADE               	subwfb	postinc2,f,c
 20911  01785E  0EEB               	movlw	-21
 20912  017860  50E3               	movf	plusw1,w,c
 20913  017862  5ADE               	subwfb	postinc2,f,c
 20914  017864  0EEC               	movlw	-20
 20915  017866  50E3               	movf	plusw1,w,c
 20916  017868  5ADE               	subwfb	postinc2,f,c
 20917  01786A  0EED               	movlw	-19
 20918  01786C  50E3               	movf	plusw1,w,c
 20919  01786E  5ADE               	subwfb	postinc2,f,c
 20920                           
 20921                           ;stkvar	_quotient @ sp[(-10)+0]
 20922  017870  0EF6               	movlw	-10
 20923  017872  80E3               	bsf	plusw1,0,c
 20924  017874                     l8053:
 20925                           
 20926                           ;stkvar	_divisor @ sp[(-10)+-16]
 20927  017874  90D8               	bcf	status,0,c
 20928  017876  0EED               	movlw	-19
 20929  017878  32E3               	rrcf	plusw1,f,c
 20930  01787A  0EEC               	movlw	-20
 20931  01787C  32E3               	rrcf	plusw1,f,c
 20932  01787E  0EEB               	movlw	-21
 20933  017880  32E3               	rrcf	plusw1,f,c
 20934  017882  0EEA               	movlw	-22
 20935  017884  32E3               	rrcf	plusw1,f,c
 20936  017886  0EE9               	movlw	-23
 20937  017888  32E3               	rrcf	plusw1,f,c
 20938  01788A  0EE8               	movlw	-24
 20939  01788C  32E3               	rrcf	plusw1,f,c
 20940  01788E  0EE7               	movlw	-25
 20941  017890  32E3               	rrcf	plusw1,f,c
 20942  017892  0EE6               	movlw	-26
 20943  017894  32E3               	rrcf	plusw1,f,c
 20944                           
 20945                           ;stkvar	_counter @ sp[(-10)+9]
 20946  017896  0EFF               	movlw	-1
 20947  017898  50E3               	movf	plusw1,w,c
 20948  01789A  6E01               	movwf	btemp^0,c
 20949  01789C  0E01               	movlw	1
 20950  01789E  5E01               	subwf	btemp^0,f,c
 20951  0178A0  0EFF               	movlw	-1
 20952  0178A2  0060  F007  FFE3   	movff	btemp,plusw1
 20953  0178A8  A4D8               	btfss	status,2,c
 20954  0178AA  D791               	goto	u6310
 20955  0178AC                     u6330:
 20956                           
 20957                           ;stkvar	_sign @ sp[(-10)+8]
 20958  0178AC  0EFE               	movlw	-2
 20959  0178AE  50E3               	movf	plusw1,w,c
 20960  0178B0  B4D8               	btfsc	status,2,c
 20961  0178B2  D025               	goto	u6350
 20962                           
 20963                           ;stkvar	_quotient @ sp[(-10)+0]
 20964                           ;stkvar	_quotient @ sp[(-10)+0]
 20965  0178B4  0EF6               	movlw	-10
 20966  0178B6  6CE3               	negf	plusw1,c
 20967  0178B8  0EF7               	movlw	-9
 20968  0178BA  1EE3               	comf	plusw1,f,c
 20969  0178BC  0EF8               	movlw	-8
 20970  0178BE  1EE3               	comf	plusw1,f,c
 20971  0178C0  0EF9               	movlw	-7
 20972  0178C2  1EE3               	comf	plusw1,f,c
 20973  0178C4  0EFA               	movlw	-6
 20974  0178C6  1EE3               	comf	plusw1,f,c
 20975  0178C8  0EFB               	movlw	-5
 20976  0178CA  1EE3               	comf	plusw1,f,c
 20977  0178CC  0EFC               	movlw	-4
 20978  0178CE  1EE3               	comf	plusw1,f,c
 20979  0178D0  0EFD               	movlw	-3
 20980  0178D2  1EE3               	comf	plusw1,f,c
 20981  0178D4  E314               	bnc	u6350
 20982  0178D6  0EF7               	movlw	-9
 20983  0178D8  2AE3               	incf	plusw1,f,c
 20984  0178DA  E311               	bnc	u6350
 20985  0178DC  0EF8               	movlw	-8
 20986  0178DE  2AE3               	incf	plusw1,f,c
 20987  0178E0  E30E               	bnc	u6350
 20988  0178E2  0EF9               	movlw	-7
 20989  0178E4  2AE3               	incf	plusw1,f,c
 20990  0178E6  E30B               	bnc	u6350
 20991  0178E8  0EFA               	movlw	-6
 20992  0178EA  2AE3               	incf	plusw1,f,c
 20993  0178EC  E308               	bnc	u6350
 20994  0178EE  0EFB               	movlw	-5
 20995  0178F0  2AE3               	incf	plusw1,f,c
 20996  0178F2  E305               	bnc	u6350
 20997  0178F4  0EFC               	movlw	-4
 20998  0178F6  2AE3               	incf	plusw1,f,c
 20999  0178F8  E302               	bnc	u6350
 21000  0178FA  0EFD               	movlw	-3
 21001  0178FC  2AE3               	incf	plusw1,f,c
 21002  0178FE                     u6350:
 21003                           
 21004                           ;stkvar	_quotient @ sp[(-10)+0]
 21005  0178FE  0EF6               	movlw	246
 21006  017900  24E1               	addwf	fsr1l,w,c
 21007  017902  6ED9               	movwf	fsr2l,c
 21008  017904  0EFF               	movlw	255
 21009  017906  20E2               	addwfc	fsr1h,w,c
 21010  017908  6EDA               	movwf	fsr2h,c
 21011                           
 21012                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21013  01790A  0E08               	movlw	8
 21014  01790C  6E01               	movwf	btemp^0,c
 21015  01790E  0EEE               	movlw	-18
 21016  017910                     us636999:
 21017  017910  006F FF7B FFE3     	movff	postinc2,plusw1
 21018  017916  28E8               	incf	wreg,w,c
 21019  017918  2E01               	decfsz	btemp^0,f,c
 21020  01791A  D7FA               	bra	us636999
 21021                           
 21022                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21023  01791C  0EF6               	movlw	246
 21024  01791E  26E1               	addwf	fsr1l,f,c
 21025  017920  0EFF               	movlw	255
 21026  017922  22E2               	addwfc	fsr1h,f,c
 21027  017924  0012               	return		;funcret
 21028  017926                     __end_of___aodiv:
 21029                           	opt callstack 0
 21030                           
 21031 ;; *************** function _ctoa *****************
 21032 ;; Defined at:
 21033 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21034 ;; Parameters:    Size  Location     Type
 21035 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21036 ;;		 -> f(6), NULL(0), 
 21037 ;;  c               1  [STACK] unsigned char 
 21038 ;; Auto vars:     Size  Location     Type
 21039 ;;  w               2  [STACK] int 
 21040 ;;  l               2    0        int 
 21041 ;; Return value:  Size  Location     Type
 21042 ;;                  2  [STACK] int 
 21043 ;; Registers used:
 21044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21045 ;; Tracked objects:
 21046 ;;		On entry : 0/0
 21047 ;;		On exit  : 0/0
 21048 ;;		Unchanged: 0/0
 21049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;Total ram usage:        0 bytes
 21055 ;; Hardware stack levels used:    1
 21056 ;; Hardware stack levels required when called:   20
 21057 ;; This function calls:
 21058 ;;		_pad
 21059 ;; This function is called by:
 21060 ;;		_vfpfcnvrt
 21061 ;; This function uses a reentrant model
 21062 ;;
 21063                           
 21064                           	psect	text70
 21065  01AB70                     __ptext70:
 21066                           	opt callstack 0
 21067  01AB70                     _ctoa:
 21068                           	opt callstack 0
 21069                           
 21070                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21071  01AB70  52E6               	movf	postinc1,f,c
 21072  01AB72  52E6               	movf	postinc1,f,c
 21073                           
 21074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21075                           
 21076                           ;incstack = 0
 21077 ;; hardware stack exceeded
 21078  01AB74  503A               	movf	_width^0,w,c
 21079  01AB76  103B               	iorwf	(_width+1)^0,w,c
 21080  01AB78  A4D8               	btfss	status,2,c
 21081  01AB7A  D009               	goto	l11787
 21082                           
 21083                           ;stkvar	_w @ sp[(-2)+0]
 21084  01AB7C  0EFE               	movlw	-2
 21085  01AB7E  0060  F0EB  FFE3   	movff	_width,plusw1
 21086  01AB84  0EFF               	movlw	-1
 21087  01AB86  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21088  01AB8C  D016               	goto	l11789
 21089  01AB8E                     l11787:
 21090  01AB8E  0EFF               	movlw	255
 21091  01AB90  6E0B               	movwf	(btemp+10)^0,c
 21092  01AB92  0EFF               	movlw	255
 21093  01AB94  6E0C               	movwf	(btemp+11)^0,c
 21094  01AB96  0060  F0E8  F009   	movff	_width,btemp+8
 21095  01AB9C  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21096  01ABA2  500B               	movf	(btemp+10)^0,w,c
 21097  01ABA4  2609               	addwf	(btemp+8)^0,f,c
 21098  01ABA6  500C               	movf	(btemp+11)^0,w,c
 21099  01ABA8  220A               	addwfc	(btemp+9)^0,f,c
 21100                           
 21101                           ;stkvar	_w @ sp[(-2)+0]
 21102  01ABAA  0EFE               	movlw	-2
 21103  01ABAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21104  01ABB2  0EFF               	movlw	-1
 21105  01ABB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21106  01ABBA                     l11789:
 21107                           
 21108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21109                           ;stkvar	_c @ sp[(-2)+-3]
 21110  01ABBA  0EFB               	movlw	-5
 21111  01ABBC  006F FF8C  F297    	movff	plusw1,_dbuf
 21112                           
 21113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21114  01ABC2  0102               	movlb	2	; () banked
 21115  01ABC4  6B98               	clrf	(_dbuf+1)& (0+255),b
 21116                           
 21117                           ; BSR set to: 2
 21118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21119                           ;stkvar	_w @ sp[(-2)+0]
 21120  01ABC6  0EFE               	movlw	-2
 21121  01ABC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21122  01ABCE  006F FF8F FFE6     	movff	plusw1,postinc1
 21123  01ABD4  0E97               	movlw	low _dbuf
 21124  01ABD6  6EE6               	movwf	postinc1,c
 21125  01ABD8  0E02               	movlw	high _dbuf
 21126  01ABDA  6EE6               	movwf	postinc1,c
 21127                           
 21128                           ;stkvar	_fp @ sp[(-6)+-2]
 21129  01ABDC  0EF8               	movlw	-8
 21130  01ABDE  006F FF8F FFE6     	movff	plusw1,postinc1
 21131  01ABE4  006F FF8F FFE6     	movff	plusw1,postinc1
 21132  01ABEA  EC6F  F0CD         	call	_pad	;wreg free
 21133                           
 21134                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21135  01ABEE  0EFB               	movlw	251
 21136  01ABF0  26E1               	addwf	fsr1l,f,c
 21137  01ABF2  0EFF               	movlw	255
 21138  01ABF4  22E2               	addwfc	fsr1h,f,c
 21139  01ABF6  0012               	return		;funcret
 21140  01ABF8                     __end_of_ctoa:
 21141                           	opt callstack 0
 21142                           
 21143 ;; *************** function _pad *****************
 21144 ;; Defined at:
 21145 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21146 ;; Parameters:    Size  Location     Type
 21147 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21148 ;;		 -> f(6), NULL(0), 
 21149 ;;  buf             2  [STACK] PTR unsigned char 
 21150 ;;		 -> dbuf(80), 
 21151 ;;  p               2  [STACK] int 
 21152 ;; Auto vars:     Size  Location     Type
 21153 ;;  w               2  [STACK] int 
 21154 ;;  i               2  [STACK] int 
 21155 ;; Return value:  Size  Location     Type
 21156 ;;                  2  [STACK] int 
 21157 ;; Registers used:
 21158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21159 ;; Tracked objects:
 21160 ;;		On entry : 0/2
 21161 ;;		On exit  : 0/0
 21162 ;;		Unchanged: 0/0
 21163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;Total ram usage:        0 bytes
 21169 ;; Hardware stack levels used:    1
 21170 ;; Hardware stack levels required when called:   19
 21171 ;; This function calls:
 21172 ;;		_fputc
 21173 ;;		_fputs
 21174 ;;		_strlen
 21175 ;; This function is called by:
 21176 ;;		_ctoa
 21177 ;;		_dtoa
 21178 ;;		_efgtoa
 21179 ;;		_utoa
 21180 ;;		_xtoa
 21181 ;; This function uses a reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text71
 21185  019ADE                     __ptext71:
 21186                           	opt callstack 0
 21187  019ADE                     _pad:
 21188                           	opt callstack 0
 21189                           
 21190                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21191  019ADE  52E6               	movf	postinc1,f,c
 21192  019AE0  52E6               	movf	postinc1,f,c
 21193  019AE2  52E6               	movf	postinc1,f,c
 21194  019AE4  52E6               	movf	postinc1,f,c
 21195                           
 21196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21197                           
 21198                           ;incstack = 0
 21199 ;; hardware stack exceeded
 21200  019AE6  A03E               	btfss	_flags^0,0,c
 21201  019AE8  D010               	goto	l11719
 21202                           
 21203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21204                           ;stkvar	_fp @ sp[(-4)+-2]
 21205  019AEA  0EFA               	movlw	-6
 21206  019AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 21207  019AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 21208                           
 21209                           ;stkvar	_buf @ sp[(-6)+-4]
 21210  019AF8  0EF6               	movlw	-10
 21211  019AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 21212  019B00  006F FF8F FFE6     	movff	plusw1,postinc1
 21213  019B06  EC91  F0D4         	call	_fputs	;wreg free
 21214  019B0A                     l11719:
 21215                           
 21216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21217                           ;stkvar	_p @ sp[(-4)+-6]
 21218  019B0A  0EF7               	movlw	-9
 21219  019B0C  BEE3               	btfsc	plusw1,7,c
 21220  019B0E  D011               	goto	l11723
 21221                           
 21222                           ;stkvar	_p @ sp[(-4)+-6]
 21223                           ;stkvar	_w @ sp[(-4)+0]
 21224  019B10  0EF6               	movlw	-10
 21225  019B12  006F FF8C  F001    	movff	plusw1,btemp
 21226  019B18  0EFC               	movlw	-4
 21227  019B1A  0060  F007  FFE3   	movff	btemp,plusw1
 21228  019B20  0EF7               	movlw	-9
 21229  019B22  006F FF8C  F001    	movff	plusw1,btemp
 21230  019B28  0EFD               	movlw	-3
 21231  019B2A  0060  F007  FFE3   	movff	btemp,plusw1
 21232  019B30  D004               	goto	l2147
 21233  019B32                     l11723:
 21234                           
 21235                           ;stkvar	_w @ sp[(-4)+0]
 21236  019B32  0EFC               	movlw	-4
 21237  019B34  6AE3               	clrf	plusw1,c
 21238  019B36  0EFD               	movlw	-3
 21239  019B38  6AE3               	clrf	plusw1,c
 21240  019B3A                     l2147:
 21241                           
 21242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21243                           ;stkvar	_i @ sp[(-4)+2]
 21244  019B3A  0EFE               	movlw	-2
 21245  019B3C  6AE3               	clrf	plusw1,c
 21246  019B3E  0EFF               	movlw	-1
 21247  019B40  6AE3               	clrf	plusw1,c
 21248                           
 21249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21250  019B42  D01E               	goto	l11729
 21251  019B44                     l11725:
 21252                           
 21253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21254                           ;stkvar	_fp @ sp[(-4)+-2]
 21255  019B44  0EFA               	movlw	-6
 21256  019B46  006F FF8F FFE6     	movff	plusw1,postinc1
 21257  019B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  019B52  0E20               	movlw	32
 21259  019B54  6EE6               	movwf	postinc1,c
 21260  019B56  0E00               	movlw	0
 21261  019B58  6EE6               	movwf	postinc1,c
 21262  019B5A  ECC4  F0CB         	call	_fputc	;wreg free
 21263                           
 21264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21265                           ;stkvar	_i @ sp[(-4)+2]
 21266  019B5E  0EFE               	movlw	-2
 21267  019B60  50E3               	movf	plusw1,w,c
 21268  019B62  0F01               	addlw	1
 21269  019B64  6E01               	movwf	btemp^0,c
 21270  019B66  0EFE               	movlw	-2
 21271  019B68  0060  F007  FFE3   	movff	btemp,plusw1
 21272  019B6E  6A01               	clrf	btemp^0,c
 21273  019B70  0EFF               	movlw	-1
 21274  019B72  50E3               	movf	plusw1,w,c
 21275  019B74  2001               	addwfc	btemp^0,w,c
 21276  019B76  6E01               	movwf	btemp^0,c
 21277  019B78  0EFF               	movlw	-1
 21278  019B7A  0060  F007  FFE3   	movff	btemp,plusw1
 21279  019B80                     l11729:
 21280                           
 21281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21282                           ;stkvar	_w @ sp[(-4)+0]
 21283                           ;stkvar	_i @ sp[(-4)+2]
 21284  019B80  50E1               	movf	fsr1l,w,c
 21285  019B82  0FFE               	addlw	-2
 21286  019B84  6ED9               	movwf	fsr2l,c
 21287  019B86  50E2               	movf	fsr1h,w,c
 21288  019B88  6EDA               	movwf	fsr2h,c
 21289  019B8A  0EFF               	movlw	255
 21290  019B8C  22DA               	addwfc	fsr2h,f,c
 21291  019B8E  0EFC               	movlw	-4
 21292  019B90  50E3               	movf	plusw1,w,c
 21293  019B92  5CDE               	subwf	postinc2,w,c
 21294  019B94  50DE               	movf	postinc2,w,c
 21295  019B96  0A80               	xorlw	128
 21296  019B98  6E01               	movwf	btemp^0,c
 21297  019B9A  0EFD               	movlw	-3
 21298  019B9C  50E3               	movf	plusw1,w,c
 21299  019B9E  0A80               	xorlw	128
 21300  019BA0  5801               	subwfb	btemp^0,w,c
 21301  019BA2  A0D8               	btfss	status,0,c
 21302  019BA4  D7CF               	goto	l11725
 21303                           
 21304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21305  019BA6  B03E               	btfsc	_flags^0,0,c
 21306  019BA8  D010               	goto	l11733
 21307                           
 21308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21309                           ;stkvar	_fp @ sp[(-4)+-2]
 21310  019BAA  0EFA               	movlw	-6
 21311  019BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 21312  019BB2  006F FF8F FFE6     	movff	plusw1,postinc1
 21313                           
 21314                           ;stkvar	_buf @ sp[(-6)+-4]
 21315  019BB8  0EF6               	movlw	-10
 21316  019BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 21317  019BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 21318  019BC6  EC91  F0D4         	call	_fputs	;wreg free
 21319  019BCA                     l11733:
 21320                           
 21321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21322                           ;stkvar	_w @ sp[(-4)+0]
 21323                           ;stkvar	_buf @ sp[(-4)+-4]
 21324  019BCA  0EF8               	movlw	-8
 21325  019BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 21326  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 21327  019BD8  EC40  F0D4         	call	_strlen	;wreg free
 21328  019BDC  0EFC               	movlw	-4
 21329  019BDE  50E3               	movf	plusw1,w,c
 21330  019BE0  2601               	addwf	btemp^0,f,c
 21331  019BE2  0EFD               	movlw	-3
 21332  019BE4  50E3               	movf	plusw1,w,c
 21333  019BE6  2202               	addwfc	(btemp+1)^0,f,c
 21334                           
 21335                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21336  019BE8  0EF6               	movlw	246
 21337  019BEA  26E1               	addwf	fsr1l,f,c
 21338  019BEC  0EFF               	movlw	255
 21339  019BEE  22E2               	addwfc	fsr1h,f,c
 21340  019BF0  0012               	return		;funcret
 21341  019BF2                     __end_of_pad:
 21342                           	opt callstack 0
 21343                           
 21344 ;; *************** function _strlen *****************
 21345 ;; Defined at:
 21346 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21347 ;; Parameters:    Size  Location     Type
 21348 ;;  s               2  [STACK] PTR const unsigned char 
 21349 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21350 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21351 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21352 ;;		 -> V(191), 
 21353 ;; Auto vars:     Size  Location     Type
 21354 ;;  a               2  [STACK] PTR const unsigned char 
 21355 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21356 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21357 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21358 ;;		 -> V(191), 
 21359 ;; Return value:  Size  Location     Type
 21360 ;;                  2  [STACK] unsigned int 
 21361 ;; Registers used:
 21362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21363 ;; Tracked objects:
 21364 ;;		On entry : 0/0
 21365 ;;		On exit  : 0/0
 21366 ;;		Unchanged: 0/0
 21367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21372 ;;Total ram usage:        0 bytes
 21373 ;; Hardware stack levels used:    1
 21374 ;; Hardware stack levels required when called:   15
 21375 ;; This function calls:
 21376 ;;		Nothing
 21377 ;; This function is called by:
 21378 ;;		_eaDogM_WriteString
 21379 ;;		_spinners
 21380 ;;		_calc_bsoc
 21381 ;;		_pad
 21382 ;;		_stoa
 21383 ;; This function uses a reentrant model
 21384 ;;
 21385                           
 21386                           	psect	text72
 21387  01A880                     __ptext72:
 21388                           	opt callstack 0
 21389  01A880                     _strlen:
 21390                           	opt callstack 0
 21391                           
 21392                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21393  01A880  52E6               	movf	postinc1,f,c
 21394  01A882  52E6               	movf	postinc1,f,c
 21395                           
 21396                           ;stkvar	_s @ sp[(-2)+-2]
 21397                           
 21398                           ;incstack = 0
 21399 ;; hardware stack exceeded
 21400  01A884  0EFC               	movlw	-4
 21401  01A886  006F FF8C  F00B    	movff	plusw1,btemp+10
 21402  01A88C  0EFD               	movlw	-3
 21403  01A88E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21404                           
 21405                           ;stkvar	_a @ sp[(-2)+0]
 21406  01A894  0EFF               	movlw	-1
 21407  01A896  0060  F033  FFE3   	movff	btemp+11,plusw1
 21408  01A89C  0EFE               	movlw	-2
 21409  01A89E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21410  01A8A4  D011               	goto	l7647
 21411  01A8A6                     l7645:
 21412                           
 21413                           ;stkvar	_s @ sp[(-2)+-2]
 21414  01A8A6  0EFC               	movlw	-4
 21415  01A8A8  50E3               	movf	plusw1,w,c
 21416  01A8AA  0F01               	addlw	1
 21417  01A8AC  6E01               	movwf	btemp^0,c
 21418  01A8AE  0EFC               	movlw	-4
 21419  01A8B0  0060  F007  FFE3   	movff	btemp,plusw1
 21420  01A8B6  6A01               	clrf	btemp^0,c
 21421  01A8B8  0EFD               	movlw	-3
 21422  01A8BA  50E3               	movf	plusw1,w,c
 21423  01A8BC  2001               	addwfc	btemp^0,w,c
 21424  01A8BE  6E01               	movwf	btemp^0,c
 21425  01A8C0  0EFD               	movlw	-3
 21426  01A8C2  0060  F007  FFE3   	movff	btemp,plusw1
 21427  01A8C8                     l7647:
 21428                           
 21429                           ;stkvar	_s @ sp[(-2)+-2]
 21430  01A8C8  0EFC               	movlw	-4
 21431  01A8CA  006F FF8F FFF6     	movff	plusw1,tblptrl
 21432  01A8D0  0EFD               	movlw	-3
 21433  01A8D2  006F FF8F FFF7     	movff	plusw1,tblptrh
 21434  01A8D8  0E00               	movlw	low (__mediumconst shr (0+16))
 21435  01A8DA  6EF8               	movwf	tblptru,c
 21436  01A8DC  0E1F               	movlw	(high __ramtop+-1)
 21437  01A8DE  64F7               	cpfsgt	tblptrh,c
 21438  01A8E0  D003               	bra	u5427
 21439  01A8E2  0008               	tblrd		*
 21440  01A8E4  50F5               	movf	tablat,w,c
 21441  01A8E6  D007               	bra	u5420
 21442  01A8E8                     u5427:
 21443  01A8E8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21444  01A8EE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21445  01A8F4  50EF               	movf	indf0,w,c
 21446  01A8F6                     u5420:
 21447  01A8F6  0900               	iorlw	0
 21448  01A8F8  A4D8               	btfss	status,2,c
 21449  01A8FA  D7D5               	goto	l7645
 21450                           
 21451                           ;stkvar	_a @ sp[(-2)+0]
 21452                           ;stkvar	_s @ sp[(-2)+-2]
 21453  01A8FC  0EFC               	movlw	-4
 21454  01A8FE  006F FF8C  F001    	movff	plusw1,btemp
 21455  01A904  0EFD               	movlw	-3
 21456  01A906  006F FF8C  F002    	movff	plusw1,btemp+1
 21457  01A90C  0EFE               	movlw	-2
 21458  01A90E  50E3               	movf	plusw1,w,c
 21459  01A910  5E01               	subwf	btemp^0,f,c
 21460  01A912  0EFF               	movlw	-1
 21461  01A914  50E3               	movf	plusw1,w,c
 21462  01A916  5A02               	subwfb	(btemp+1)^0,f,c
 21463                           
 21464                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21465  01A918  52E5               	movf	postdec1,f,c
 21466  01A91A  52E5               	movf	postdec1,f,c
 21467  01A91C  52E5               	movf	postdec1,f,c
 21468  01A91E  52E5               	movf	postdec1,f,c
 21469  01A920  0012               	return		;funcret
 21470  01A922                     __end_of_strlen:
 21471                           	opt callstack 0
 21472                           
 21473 ;; *************** function _fputs *****************
 21474 ;; Defined at:
 21475 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21476 ;; Parameters:    Size  Location     Type
 21477 ;;  s               2  [STACK] PTR const unsigned char 
 21478 ;;		 -> dbuf(80), 
 21479 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21480 ;;		 -> f(6), NULL(0), 
 21481 ;; Auto vars:     Size  Location     Type
 21482 ;;  i               2  [STACK] int 
 21483 ;;  c               1  [STACK] unsigned char 
 21484 ;; Return value:  Size  Location     Type
 21485 ;;                  2  [STACK] int 
 21486 ;; Registers used:
 21487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21488 ;; Tracked objects:
 21489 ;;		On entry : 0/2
 21490 ;;		On exit  : 0/0
 21491 ;;		Unchanged: 0/0
 21492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21497 ;;Total ram usage:        0 bytes
 21498 ;; Hardware stack levels used:    1
 21499 ;; Hardware stack levels required when called:   18
 21500 ;; This function calls:
 21501 ;;		_fputc
 21502 ;; This function is called by:
 21503 ;;		_pad
 21504 ;; This function uses a reentrant model
 21505 ;;
 21506                           
 21507                           	psect	text73
 21508  01A922                     __ptext73:
 21509                           	opt callstack 0
 21510  01A922                     _fputs:
 21511                           	opt callstack 0
 21512                           
 21513                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21514  01A922  52E6               	movf	postinc1,f,c
 21515  01A924  52E6               	movf	postinc1,f,c
 21516  01A926  52E6               	movf	postinc1,f,c
 21517                           
 21518                           ;stkvar	_i @ sp[(-3)+0]
 21519                           
 21520                           ;incstack = 0
 21521 ;; hardware stack exceeded
 21522  01A928  0EFD               	movlw	-3
 21523  01A92A  6AE3               	clrf	plusw1,c
 21524  01A92C  0EFE               	movlw	-2
 21525  01A92E  6AE3               	clrf	plusw1,c
 21526  01A930  D01F               	goto	l11713
 21527  01A932                     l11709:
 21528                           
 21529                           ;stkvar	_fp @ sp[(-3)+-4]
 21530  01A932  0EF9               	movlw	-7
 21531  01A934  006F FF8F FFE6     	movff	plusw1,postinc1
 21532  01A93A  006F FF8F FFE6     	movff	plusw1,postinc1
 21533                           
 21534                           ;stkvar	_c @ sp[(-5)+2]
 21535  01A940  0EFD               	movlw	-3
 21536  01A942  50E3               	movf	plusw1,w,c
 21537  01A944  6EE6               	movwf	postinc1,c
 21538  01A946  0E00               	movlw	0
 21539  01A948  6EE6               	movwf	postinc1,c
 21540  01A94A  ECC4  F0CB         	call	_fputc	;wreg free
 21541                           
 21542                           ;stkvar	_i @ sp[(-3)+0]
 21543  01A94E  0EFD               	movlw	-3
 21544  01A950  50E3               	movf	plusw1,w,c
 21545  01A952  0F01               	addlw	1
 21546  01A954  6E01               	movwf	btemp^0,c
 21547  01A956  0EFD               	movlw	-3
 21548  01A958  0060  F007  FFE3   	movff	btemp,plusw1
 21549  01A95E  6A01               	clrf	btemp^0,c
 21550  01A960  0EFE               	movlw	-2
 21551  01A962  50E3               	movf	plusw1,w,c
 21552  01A964  2001               	addwfc	btemp^0,w,c
 21553  01A966  6E01               	movwf	btemp^0,c
 21554  01A968  0EFE               	movlw	-2
 21555  01A96A  0060  F007  FFE3   	movff	btemp,plusw1
 21556  01A970                     l11713:
 21557                           
 21558                           ;stkvar	_i @ sp[(-3)+0]
 21559  01A970  0EFD               	movlw	-3
 21560  01A972  006F FF8C  F00B    	movff	plusw1,btemp+10
 21561  01A978  0EFE               	movlw	-2
 21562  01A97A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21563                           
 21564                           ;stkvar	_s @ sp[(-3)+-2]
 21565  01A980  0EFB               	movlw	-5
 21566  01A982  006F FF8C  F009    	movff	plusw1,btemp+8
 21567  01A988  0EFC               	movlw	-4
 21568  01A98A  006F FF8C  F00A    	movff	plusw1,btemp+9
 21569  01A990  500B               	movf	(btemp+10)^0,w,c
 21570  01A992  2409               	addwf	(btemp+8)^0,w,c
 21571  01A994  6ED9               	movwf	fsr2l,c
 21572  01A996  500C               	movf	(btemp+11)^0,w,c
 21573  01A998  200A               	addwfc	(btemp+9)^0,w,c
 21574  01A99A  6EDA               	movwf	fsr2h,c
 21575  01A99C  50DF               	movf	indf2,w,c
 21576  01A99E  6E0C               	movwf	(btemp+11)^0,c
 21577                           
 21578                           ;stkvar	_c @ sp[(-3)+2]
 21579  01A9A0  0EFF               	movlw	-1
 21580  01A9A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21581  01A9A8  0EFF               	movlw	-1
 21582  01A9AA  50E3               	movf	plusw1,w,c
 21583  01A9AC  A4D8               	btfss	status,2,c
 21584  01A9AE  D7C1               	goto	l11709
 21585                           
 21586                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21587  01A9B0  0EF9               	movlw	249
 21588  01A9B2  26E1               	addwf	fsr1l,f,c
 21589  01A9B4  0EFF               	movlw	255
 21590  01A9B6  22E2               	addwfc	fsr1h,f,c
 21591  01A9B8  0012               	return		;funcret
 21592  01A9BA                     __end_of_fputs:
 21593                           	opt callstack 0
 21594                           
 21595 ;; *************** function _fputc *****************
 21596 ;; Defined at:
 21597 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;  c               2  [STACK] int 
 21600 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21601 ;;		 -> f(6), NULL(0), 
 21602 ;; Auto vars:     Size  Location     Type
 21603 ;;		None
 21604 ;; Return value:  Size  Location     Type
 21605 ;;                  2  [STACK] int 
 21606 ;; Registers used:
 21607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21608 ;; Tracked objects:
 21609 ;;		On entry : 0/0
 21610 ;;		On exit  : 0/0
 21611 ;;		Unchanged: 0/0
 21612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21617 ;;Total ram usage:        0 bytes
 21618 ;; Hardware stack levels used:    1
 21619 ;; Hardware stack levels required when called:   17
 21620 ;; This function calls:
 21621 ;;		_putch
 21622 ;; This function is called by:
 21623 ;;		_pad
 21624 ;;		_stoa
 21625 ;;		_vfpfcnvrt
 21626 ;;		_fputs
 21627 ;; This function uses a reentrant model
 21628 ;;
 21629                           
 21630                           	psect	text74
 21631  019788                     __ptext74:
 21632                           	opt callstack 0
 21633  019788                     _fputc:
 21634                           	opt callstack 0
 21635                           
 21636                           ;stkvar	_fp @ sp[(0)+-4]
 21637                           
 21638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21639                           ;incstack = 0
 21640 ;; hardware stack exceeded
 21641  019788  0EFC               	movlw	-4
 21642  01978A  006F FF8C  F001    	movff	plusw1,btemp
 21643  019790  0EFD               	movlw	-3
 21644  019792  50E3               	movf	plusw1,w,c
 21645  019794  1001               	iorwf	btemp^0,w,c
 21646  019796  B4D8               	btfsc	status,2,c
 21647  019798  D009               	goto	u10750
 21648                           
 21649                           ;stkvar	_fp @ sp[(0)+-4]
 21650  01979A  0EFC               	movlw	-4
 21651  01979C  006F FF8C  F001    	movff	plusw1,btemp
 21652  0197A2  0EFD               	movlw	-3
 21653  0197A4  50E3               	movf	plusw1,w,c
 21654  0197A6  1001               	iorwf	btemp^0,w,c
 21655  0197A8  A4D8               	btfss	status,2,c
 21656  0197AA  D006               	goto	l11697
 21657  0197AC                     u10750:
 21658                           
 21659                           ;stkvar	_c @ sp[(0)+-2]
 21660  0197AC  0EFE               	movlw	-2
 21661  0197AE  50E3               	movf	plusw1,w,c
 21662  0197B0  6EE6               	movwf	postinc1,c
 21663  0197B2  EC76  F0DF         	call	_putch	;wreg free
 21664  0197B6  D075               	goto	l3193
 21665  0197B8                     l11697:
 21666                           
 21667                           ;stkvar	_fp @ sp[(0)+-4]
 21668  0197B8  0EFC               	movlw	-4
 21669  0197BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21670  0197C0  0EFD               	movlw	-3
 21671  0197C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21672  0197C8  0E04               	movlw	4
 21673  0197CA  240B               	addwf	(btemp+10)^0,w,c
 21674  0197CC  6ED9               	movwf	fsr2l,c
 21675  0197CE  0E00               	movlw	0
 21676  0197D0  200C               	addwfc	(btemp+11)^0,w,c
 21677  0197D2  6EDA               	movwf	fsr2h,c
 21678  0197D4  50DE               	movf	postinc2,w,c
 21679  0197D6  10DE               	iorwf	postinc2,w,c
 21680  0197D8  B4D8               	btfsc	status,2,c
 21681  0197DA  D026               	goto	u10770
 21682                           
 21683                           ;stkvar	_fp @ sp[(0)+-4]
 21684  0197DC  0EFC               	movlw	-4
 21685  0197DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21686  0197E4  0EFD               	movlw	-3
 21687  0197E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21688  0197EC  0E04               	movlw	4
 21689  0197EE  240B               	addwf	(btemp+10)^0,w,c
 21690  0197F0  6ED9               	movwf	fsr2l,c
 21691  0197F2  0E00               	movlw	0
 21692  0197F4  200C               	addwfc	(btemp+11)^0,w,c
 21693  0197F6  6EDA               	movwf	fsr2h,c
 21694                           
 21695                           ;stkvar	_fp @ sp[(0)+-4]
 21696  0197F8  0EFC               	movlw	-4
 21697  0197FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21698  019800  0EFD               	movlw	-3
 21699  019802  006F FF8C  F00C    	movff	plusw1,btemp+11
 21700  019808  0E02               	movlw	2
 21701  01980A  240B               	addwf	(btemp+10)^0,w,c
 21702  01980C  6EE9               	movwf	fsr0l,c
 21703  01980E  0E00               	movlw	0
 21704  019810  200C               	addwfc	(btemp+11)^0,w,c
 21705  019812  6EEA               	movwf	fsr0h,c
 21706  019814  50DE               	movf	postinc2,w,c
 21707  019816  5CEE               	subwf	postinc0,w,c
 21708  019818  50EE               	movf	postinc0,w,c
 21709  01981A  0A80               	xorlw	128
 21710  01981C  6E01               	movwf	btemp^0,c
 21711  01981E  50DE               	movf	postinc2,w,c
 21712  019820  0A80               	xorlw	128
 21713  019822  5801               	subwfb	btemp^0,w,c
 21714  019824  B0D8               	btfsc	status,0,c
 21715  019826  D03D               	goto	l3193
 21716  019828                     u10770:
 21717                           
 21718                           ;stkvar	_c @ sp[(0)+-2]
 21719                           ;stkvar	_fp @ sp[(0)+-4]
 21720  019828  0EFC               	movlw	-4
 21721  01982A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21722  019830  0EFD               	movlw	-3
 21723  019832  006F FF8C  F00C    	movff	plusw1,btemp+11
 21724  019838  0E02               	movlw	2
 21725  01983A  240B               	addwf	(btemp+10)^0,w,c
 21726  01983C  6ED9               	movwf	fsr2l,c
 21727  01983E  0E00               	movlw	0
 21728  019840  200C               	addwfc	(btemp+11)^0,w,c
 21729  019842  6EDA               	movwf	fsr2h,c
 21730  019844  006F FF78  F00B    	movff	postinc2,btemp+10
 21731  01984A  006F FF74  F00C    	movff	postdec2,btemp+11
 21732                           
 21733                           ;stkvar	_fp @ sp[(0)+-4]
 21734  019850  0EFC               	movlw	-4
 21735  019852  006F FF8F FFD9     	movff	plusw1,fsr2l
 21736  019858  0EFD               	movlw	-3
 21737  01985A  006F FF8F FFDA     	movff	plusw1,fsr2h
 21738  019860  006F FF78  F009    	movff	postinc2,btemp+8
 21739  019866  006F FF74  F00A    	movff	postdec2,btemp+9
 21740  01986C  500B               	movf	(btemp+10)^0,w,c
 21741  01986E  2409               	addwf	(btemp+8)^0,w,c
 21742  019870  6ED9               	movwf	fsr2l,c
 21743  019872  500C               	movf	(btemp+11)^0,w,c
 21744  019874  200A               	addwfc	(btemp+9)^0,w,c
 21745  019876  6EDA               	movwf	fsr2h,c
 21746  019878  0EFE               	movlw	-2
 21747  01987A  006F FF8F FFDF     	movff	plusw1,indf2
 21748                           
 21749                           ;stkvar	_fp @ sp[(0)+-4]
 21750  019880  0EFC               	movlw	-4
 21751  019882  006F FF8C  F00B    	movff	plusw1,btemp+10
 21752  019888  0EFD               	movlw	-3
 21753  01988A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21754  019890  0E02               	movlw	2
 21755  019892  240B               	addwf	(btemp+10)^0,w,c
 21756  019894  6ED9               	movwf	fsr2l,c
 21757  019896  0E00               	movlw	0
 21758  019898  200C               	addwfc	(btemp+11)^0,w,c
 21759  01989A  6EDA               	movwf	fsr2h,c
 21760  01989C  2ADE               	incf	postinc2,f,c
 21761  01989E  0E00               	movlw	0
 21762  0198A0  22DD               	addwfc	postdec2,f,c
 21763  0198A2                     l3193:
 21764                           
 21765                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21766  0198A2  52E5               	movf	postdec1,f,c
 21767  0198A4  52E5               	movf	postdec1,f,c
 21768  0198A6  52E5               	movf	postdec1,f,c
 21769  0198A8  52E5               	movf	postdec1,f,c
 21770  0198AA  0012               	return		;funcret
 21771  0198AC                     __end_of_fputc:
 21772                           	opt callstack 0
 21773                           
 21774 ;; *************** function _putch *****************
 21775 ;; Defined at:
 21776 ;;		line 170 in file "eadog.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;  c               1  [STACK] unsigned char 
 21779 ;; Auto vars:     Size  Location     Type
 21780 ;;		None
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  1  [STACK] void 
 21783 ;; Registers used:
 21784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/0
 21787 ;;		On exit  : 0/0
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21794 ;;Total ram usage:        0 bytes
 21795 ;; Hardware stack levels used:    1
 21796 ;; Hardware stack levels required when called:   16
 21797 ;; This function calls:
 21798 ;;		_ringBufS_put_dma
 21799 ;; This function is called by:
 21800 ;;		_fputc
 21801 ;; This function uses a reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text75
 21805  01BEEC                     __ptext75:
 21806                           	opt callstack 0
 21807  01BEEC                     _putch:
 21808                           	opt callstack 0
 21809                           
 21810                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21811                           ;stkvar	_c @ sp[(0)+-1]
 21812                           
 21813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21814                           ;incstack = 0
 21815 ;; hardware stack exceeded
 21816  01BEEC  0EFF               	movlw	-1
 21817  01BEEE  50E3               	movf	plusw1,w,c
 21818  01BEF0  6EE6               	movwf	postinc1,c
 21819  01BEF2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21820  01BEF8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21821  01BEFE  EC98  F0D3         	call	_ringBufS_put_dma	;wreg free
 21822                           
 21823                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21824  01BF02  52E5               	movf	postdec1,f,c
 21825  01BF04  0012               	return		;funcret
 21826  01BF06                     __end_of_putch:
 21827                           	opt callstack 0
 21828                           
 21829 ;; *************** function _ringBufS_put_dma *****************
 21830 ;; Defined at:
 21831 ;;		line 67 in file "ringbufs.c"
 21832 ;; Parameters:    Size  Location     Type
 21833 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21834 ;;		 -> ring_buf1(67), 
 21835 ;;  c               1  [STACK] const unsigned char 
 21836 ;; Auto vars:     Size  Location     Type
 21837 ;;		None
 21838 ;; Return value:  Size  Location     Type
 21839 ;;                  1  [STACK] void 
 21840 ;; Registers used:
 21841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21842 ;; Tracked objects:
 21843 ;;		On entry : 0/0
 21844 ;;		On exit  : 0/0
 21845 ;;		Unchanged: 0/0
 21846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21851 ;;Total ram usage:        0 bytes
 21852 ;; Hardware stack levels used:    1
 21853 ;; Hardware stack levels required when called:   15
 21854 ;; This function calls:
 21855 ;;		Nothing
 21856 ;; This function is called by:
 21857 ;;		_putch
 21858 ;; This function uses a reentrant model
 21859 ;;
 21860                           
 21861                           	psect	text76
 21862  01A730                     __ptext76:
 21863                           	opt callstack 0
 21864  01A730                     _ringBufS_put_dma:
 21865                           	opt callstack 0
 21866                           
 21867                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21868                           ;stkvar	__this @ sp[(0)+-2]
 21869                           
 21870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21871                           ;incstack = 0
 21872 ;; hardware stack exceeded
 21873  01A730  0EFE               	movlw	-2
 21874  01A732  006F FF8C  F00B    	movff	plusw1,btemp+10
 21875  01A738  0EFF               	movlw	-1
 21876  01A73A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21877  01A740  0E42               	movlw	66
 21878  01A742  240B               	addwf	(btemp+10)^0,w,c
 21879  01A744  6ED9               	movwf	fsr2l,c
 21880  01A746  0E00               	movlw	0
 21881  01A748  200C               	addwfc	(btemp+11)^0,w,c
 21882  01A74A  6EDA               	movwf	fsr2h,c
 21883  01A74C  0E40               	movlw	64
 21884  01A74E  60DF               	cpfslt	indf2,c
 21885  01A750  D040               	goto	l1587
 21886                           
 21887                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21888                           ;stkvar	_c @ sp[(0)+-3]
 21889                           ;stkvar	__this @ sp[(0)+-2]
 21890  01A752  0EFE               	movlw	-2
 21891  01A754  006F FF8C  F00B    	movff	plusw1,btemp+10
 21892  01A75A  0EFF               	movlw	-1
 21893  01A75C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21894  01A762  0E40               	movlw	64
 21895  01A764  240B               	addwf	(btemp+10)^0,w,c
 21896  01A766  6ED9               	movwf	fsr2l,c
 21897  01A768  0E00               	movlw	0
 21898  01A76A  200C               	addwfc	(btemp+11)^0,w,c
 21899  01A76C  6EDA               	movwf	fsr2h,c
 21900  01A76E  50DF               	movf	indf2,w,c
 21901  01A770  6E0C               	movwf	(btemp+11)^0,c
 21902                           
 21903                           ;stkvar	__this @ sp[(0)+-2]
 21904  01A772  0EFE               	movlw	-2
 21905  01A774  006F FF8C  F009    	movff	plusw1,btemp+8
 21906  01A77A  0EFF               	movlw	-1
 21907  01A77C  006F FF8C  F00A    	movff	plusw1,btemp+9
 21908  01A782  500C               	movf	(btemp+11)^0,w,c
 21909  01A784  2409               	addwf	(btemp+8)^0,w,c
 21910  01A786  6ED9               	movwf	fsr2l,c
 21911  01A788  0E00               	movlw	0
 21912  01A78A  200A               	addwfc	(btemp+9)^0,w,c
 21913  01A78C  6EDA               	movwf	fsr2h,c
 21914  01A78E  0EFD               	movlw	-3
 21915  01A790  006F FF8F FFDF     	movff	plusw1,indf2
 21916                           
 21917                           ;ringbufs.c: 71:   ++_this->head;
 21918                           ;stkvar	__this @ sp[(0)+-2]
 21919  01A796  0EFE               	movlw	-2
 21920  01A798  006F FF8C  F00B    	movff	plusw1,btemp+10
 21921  01A79E  0EFF               	movlw	-1
 21922  01A7A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21923  01A7A6  0E40               	movlw	64
 21924  01A7A8  240B               	addwf	(btemp+10)^0,w,c
 21925  01A7AA  6ED9               	movwf	fsr2l,c
 21926  01A7AC  0E00               	movlw	0
 21927  01A7AE  200C               	addwfc	(btemp+11)^0,w,c
 21928  01A7B0  6EDA               	movwf	fsr2h,c
 21929  01A7B2  2ADF               	incf	indf2,f,c
 21930                           
 21931                           ;ringbufs.c: 72:   ++_this->count;
 21932                           ;stkvar	__this @ sp[(0)+-2]
 21933  01A7B4  0EFE               	movlw	-2
 21934  01A7B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21935  01A7BC  0EFF               	movlw	-1
 21936  01A7BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21937  01A7C4  0E42               	movlw	66
 21938  01A7C6  240B               	addwf	(btemp+10)^0,w,c
 21939  01A7C8  6ED9               	movwf	fsr2l,c
 21940  01A7CA  0E00               	movlw	0
 21941  01A7CC  200C               	addwfc	(btemp+11)^0,w,c
 21942  01A7CE  6EDA               	movwf	fsr2h,c
 21943  01A7D0  2ADF               	incf	indf2,f,c
 21944  01A7D2                     l1587:
 21945                           
 21946                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21947  01A7D2  52E5               	movf	postdec1,f,c
 21948  01A7D4  52E5               	movf	postdec1,f,c
 21949  01A7D6  52E5               	movf	postdec1,f,c
 21950  01A7D8  0012               	return		;funcret
 21951  01A7DA                     __end_of_ringBufS_put_dma:
 21952                           	opt callstack 0
 21953                           
 21954 ;; *************** function _atoi *****************
 21955 ;; Defined at:
 21956 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  s               2  [STACK] PTR const unsigned char 
 21959 ;;		 -> STR_65(121), STR_63(3), STR_62(3), STR_61(19), 
 21960 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21961 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21962 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21963 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21964 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21965 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21966 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21967 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21968 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21969 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21970 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21971 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21972 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21973 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21974 ;;		 -> STR_1(17), 
 21975 ;; Auto vars:     Size  Location     Type
 21976 ;;  n               2  [STACK] int 
 21977 ;;  neg             2  [STACK] int 
 21978 ;; Return value:  Size  Location     Type
 21979 ;;                  2  [STACK] int 
 21980 ;; Registers used:
 21981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21982 ;; Tracked objects:
 21983 ;;		On entry : 0/0
 21984 ;;		On exit  : 0/0
 21985 ;;		Unchanged: 0/0
 21986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21991 ;;Total ram usage:        0 bytes
 21992 ;; Hardware stack levels used:    1
 21993 ;; Hardware stack levels required when called:   16
 21994 ;; This function calls:
 21995 ;;		_isdigit
 21996 ;;		_isspace
 21997 ;; This function is called by:
 21998 ;;		_vfpfcnvrt
 21999 ;; This function uses a reentrant model
 22000 ;;
 22001                           
 22002                           	psect	text77
 22003  017926                     __ptext77:
 22004                           	opt callstack 0
 22005  017926                     _atoi:
 22006                           	opt callstack 0
 22007                           
 22008                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22009  017926  0E09               	movlw	9
 22010  017928  26E1               	addwf	fsr1l,f,c
 22011  01792A  0E00               	movlw	0
 22012  01792C  22E2               	addwfc	fsr1h,f,c
 22013                           
 22014                           ;stkvar	_n @ sp[(-9)+5]
 22015                           
 22016                           ;incstack = 0
 22017 ;; hardware stack exceeded
 22018  01792E  0EFC               	movlw	-4
 22019  017930  6AE3               	clrf	plusw1,c
 22020  017932  0EFD               	movlw	-3
 22021  017934  6AE3               	clrf	plusw1,c
 22022                           
 22023                           ;stkvar	_neg @ sp[(-9)+7]
 22024  017936  0EFE               	movlw	-2
 22025  017938  6AE3               	clrf	plusw1,c
 22026  01793A  0EFF               	movlw	-1
 22027  01793C  6AE3               	clrf	plusw1,c
 22028  01793E  D011               	goto	l9255
 22029  017940                     l9253:
 22030                           
 22031                           ;stkvar	_s @ sp[(-9)+-2]
 22032  017940  0EF5               	movlw	-11
 22033  017942  50E3               	movf	plusw1,w,c
 22034  017944  0F01               	addlw	1
 22035  017946  6E01               	movwf	btemp^0,c
 22036  017948  0EF5               	movlw	-11
 22037  01794A  0060  F007  FFE3   	movff	btemp,plusw1
 22038  017950  6A01               	clrf	btemp^0,c
 22039  017952  0EF6               	movlw	-10
 22040  017954  50E3               	movf	plusw1,w,c
 22041  017956  2001               	addwfc	btemp^0,w,c
 22042  017958  6E01               	movwf	btemp^0,c
 22043  01795A  0EF6               	movlw	-10
 22044  01795C  0060  F007  FFE3   	movff	btemp,plusw1
 22045  017962                     l9255:
 22046                           
 22047                           ;stkvar	_atoi$6059 @ sp[(-9)+4]
 22048  017962  0EFB               	movlw	-5
 22049  017964  6AE3               	clrf	plusw1,c
 22050  017966  2AE3               	incf	plusw1,f,c
 22051                           
 22052                           ;stkvar	_s @ sp[(-9)+-2]
 22053  017968  50E1               	movf	fsr1l,w,c
 22054  01796A  0FF5               	addlw	-11
 22055  01796C  6ED9               	movwf	fsr2l,c
 22056  01796E  50E2               	movf	fsr1h,w,c
 22057  017970  6EDA               	movwf	fsr2h,c
 22058  017972  0EFF               	movlw	255
 22059  017974  22DA               	addwfc	fsr2h,f,c
 22060  017976  006F FF7B FFF6     	movff	postinc2,tblptrl
 22061  01797C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22062  017982                     	if	0	;tblptru may be non-zero
 22063  017982                     	endif
 22064  017982                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22065  017982  0E00               	movlw	low (__mediumconst shr (0+16))
 22066  017984  6EF8               	movwf	tblptru,c
 22067  017986                     	endif
 22068  017986  0008               	tblrd		*
 22069  017988  50F5               	movf	tablat,w,c
 22070  01798A  0A20               	xorlw	32
 22071  01798C  B4D8               	btfsc	status,2,c
 22072  01798E  D023               	goto	l9263
 22073  017990  0EF7               	movlw	247
 22074  017992  6E0B               	movwf	(btemp+10)^0,c
 22075  017994  0EFF               	movlw	255
 22076  017996  6E0C               	movwf	(btemp+11)^0,c
 22077                           
 22078                           ;stkvar	_s @ sp[(-9)+-2]
 22079  017998  50E1               	movf	fsr1l,w,c
 22080  01799A  0FF5               	addlw	-11
 22081  01799C  6ED9               	movwf	fsr2l,c
 22082  01799E  50E2               	movf	fsr1h,w,c
 22083  0179A0  6EDA               	movwf	fsr2h,c
 22084  0179A2  0EFF               	movlw	255
 22085  0179A4  22DA               	addwfc	fsr2h,f,c
 22086  0179A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 22087  0179AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 22088  0179B2                     	if	0	;tblptru may be non-zero
 22089  0179B2                     	endif
 22090  0179B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22091  0179B2  0E00               	movlw	low (__mediumconst shr (0+16))
 22092  0179B4  6EF8               	movwf	tblptru,c
 22093  0179B6                     	endif
 22094  0179B6  0008               	tblrd		*
 22095  0179B8  50F5               	movf	tablat,w,c
 22096  0179BA  6E09               	movwf	(btemp+8)^0,c
 22097  0179BC  6A0A               	clrf	(btemp+9)^0,c
 22098  0179BE  500B               	movf	(btemp+10)^0,w,c
 22099  0179C0  2609               	addwf	(btemp+8)^0,f,c
 22100  0179C2  500C               	movf	(btemp+11)^0,w,c
 22101  0179C4  220A               	addwfc	(btemp+9)^0,f,c
 22102  0179C6  500A               	movf	(btemp+9)^0,w,c
 22103  0179C8  E104               	bnz	u8530
 22104  0179CA  0E05               	movlw	5
 22105  0179CC  5C09               	subwf	(btemp+8)^0,w,c
 22106  0179CE  A0D8               	btfss	status,0,c
 22107  0179D0  D002               	goto	l9263
 22108  0179D2                     u8530:
 22109                           
 22110                           ;stkvar	_atoi$6059 @ sp[(-9)+4]
 22111  0179D2  0EFB               	movlw	-5
 22112  0179D4  6AE3               	clrf	plusw1,c
 22113  0179D6                     l9263:
 22114                           
 22115                           ;stkvar	_atoi$6059 @ sp[(-9)+4]
 22116  0179D6  0EFB               	movlw	-5
 22117  0179D8  50E3               	movf	plusw1,w,c
 22118  0179DA  6E0B               	movwf	(btemp+10)^0,c
 22119  0179DC  6A0C               	clrf	(btemp+11)^0,c
 22120                           
 22121                           ;stkvar	_atoi$6058 @ sp[(-9)+2]
 22122  0179DE  0EF9               	movlw	-7
 22123  0179E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22124  0179E6  0EFA               	movlw	-6
 22125  0179E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22126                           
 22127                           ;stkvar	_atoi$6058 @ sp[(-9)+2]
 22128  0179EE  0EF9               	movlw	-7
 22129  0179F0  006F FF8C  F001    	movff	plusw1,btemp
 22130  0179F6  0EFA               	movlw	-6
 22131  0179F8  50E3               	movf	plusw1,w,c
 22132  0179FA  1001               	iorwf	btemp^0,w,c
 22133  0179FC  B4D8               	btfsc	status,2,c
 22134  0179FE  D01F               	goto	l9273
 22135  017A00  D79F               	goto	l9253
 22136  017A02                     l9269:
 22137  017A02  0E01               	movlw	1
 22138  017A04  6E0B               	movwf	(btemp+10)^0,c
 22139  017A06  0E00               	movlw	0
 22140  017A08  6E0C               	movwf	(btemp+11)^0,c
 22141                           
 22142                           ;stkvar	_neg @ sp[(-9)+7]
 22143  017A0A  0EFE               	movlw	-2
 22144  017A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22145  017A12  0EFF               	movlw	-1
 22146  017A14  0060  F033  FFE3   	movff	btemp+11,plusw1
 22147  017A1A                     l9271:
 22148                           
 22149                           ;stkvar	_s @ sp[(-9)+-2]
 22150  017A1A  0EF5               	movlw	-11
 22151  017A1C  50E3               	movf	plusw1,w,c
 22152  017A1E  0F01               	addlw	1
 22153  017A20  6E01               	movwf	btemp^0,c
 22154  017A22  0EF5               	movlw	-11
 22155  017A24  0060  F007  FFE3   	movff	btemp,plusw1
 22156  017A2A  6A01               	clrf	btemp^0,c
 22157  017A2C  0EF6               	movlw	-10
 22158  017A2E  50E3               	movf	plusw1,w,c
 22159  017A30  2001               	addwfc	btemp^0,w,c
 22160  017A32  6E01               	movwf	btemp^0,c
 22161  017A34  0EF6               	movlw	-10
 22162  017A36  0060  F007  FFE3   	movff	btemp,plusw1
 22163  017A3C  D053               	goto	l9279
 22164  017A3E                     l9273:
 22165                           
 22166                           ;stkvar	_s @ sp[(-9)+-2]
 22167  017A3E  50E1               	movf	fsr1l,w,c
 22168  017A40  0FF5               	addlw	-11
 22169  017A42  6ED9               	movwf	fsr2l,c
 22170  017A44  50E2               	movf	fsr1h,w,c
 22171  017A46  6EDA               	movwf	fsr2h,c
 22172  017A48  0EFF               	movlw	255
 22173  017A4A  22DA               	addwfc	fsr2h,f,c
 22174  017A4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 22175  017A52  006F FF77 FFF7     	movff	postdec2,tblptrh
 22176  017A58                     	if	0	;tblptru may be non-zero
 22177  017A58                     	endif
 22178  017A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22179  017A58  0E00               	movlw	low (__mediumconst shr (0+16))
 22180  017A5A  6EF8               	movwf	tblptru,c
 22181  017A5C                     	endif
 22182  017A5C  0008               	tblrd		*
 22183  017A5E  50F5               	movf	tablat,w,c
 22184  017A60  6E0B               	movwf	(btemp+10)^0,c
 22185  017A62  6A0C               	clrf	(btemp+11)^0,c
 22186                           
 22187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22188                           ; Switch size 1, requested type "simple"
 22189                           ; Number of cases is 1, Range of values is 0 to 0
 22190                           ; switch strategies available:
 22191                           ; Name         Instructions Cycles
 22192                           ; simple_byte            4     3 (average)
 22193                           ;	Chosen strategy is simple_byte
 22194  017A64  500C               	movf	(btemp+11)^0,w,c
 22195  017A66  0A00               	xorlw	0	; case 0
 22196  017A68  A4D8               	btfss	status,2,c
 22197  017A6A  D03C               	goto	l9279
 22198                           
 22199                           ; Switch size 1, requested type "simple"
 22200                           ; Number of cases is 2, Range of values is 43 to 45
 22201                           ; switch strategies available:
 22202                           ; Name         Instructions Cycles
 22203                           ; simple_byte            7     4 (average)
 22204                           ;	Chosen strategy is simple_byte
 22205  017A6C  500B               	movf	(btemp+10)^0,w,c
 22206  017A6E  0A2B               	xorlw	43	; case 43
 22207  017A70  B4D8               	btfsc	status,2,c
 22208  017A72  D7D3               	goto	l9271
 22209  017A74  0A06               	xorlw	6	; case 45
 22210  017A76  B4D8               	btfsc	status,2,c
 22211  017A78  D7C4               	goto	l9269
 22212  017A7A  D034               	goto	l9279
 22213  017A7C                     l9275:
 22214                           
 22215                           ;stkvar	_n @ sp[(-9)+5]
 22216  017A7C  0EFC               	movlw	-4
 22217  017A7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22218  017A84  0EFD               	movlw	-3
 22219  017A86  006F FF8C  F00C    	movff	plusw1,btemp+11
 22220  017A8C  0E0A               	movlw	10
 22221  017A8E  020B               	mulwf	(btemp+10)^0,c
 22222  017A90  006F FFCC  F009    	movff	prodl,btemp+8
 22223  017A96  006F FFD0  F00A    	movff	prodh,btemp+9
 22224  017A9C  020C               	mulwf	(btemp+11)^0,c
 22225  017A9E  50F3               	movf	prodl,w,c
 22226  017AA0  260A               	addwf	(btemp+9)^0,f,c
 22227                           
 22228                           ;stkvar	_s @ sp[(-9)+-2]
 22229  017AA2  50E1               	movf	fsr1l,w,c
 22230  017AA4  0FF5               	addlw	-11
 22231  017AA6  6ED9               	movwf	fsr2l,c
 22232  017AA8  50E2               	movf	fsr1h,w,c
 22233  017AAA  6EDA               	movwf	fsr2h,c
 22234  017AAC  0EFF               	movlw	255
 22235  017AAE  22DA               	addwfc	fsr2h,f,c
 22236  017AB0  006F FF7B FFF6     	movff	postinc2,tblptrl
 22237  017AB6  006F FF77 FFF7     	movff	postdec2,tblptrh
 22238  017ABC                     	if	0	;tblptru may be non-zero
 22239  017ABC                     	endif
 22240  017ABC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22241  017ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 22242  017ABE  6EF8               	movwf	tblptru,c
 22243  017AC0                     	endif
 22244  017AC0  0008               	tblrd		*
 22245  017AC2  50F5               	movf	tablat,w,c
 22246  017AC4  5E09               	subwf	(btemp+8)^0,f,c
 22247  017AC6  0E00               	movlw	0
 22248  017AC8  5A0A               	subwfb	(btemp+9)^0,f,c
 22249  017ACA  0E30               	movlw	48
 22250  017ACC  2609               	addwf	(btemp+8)^0,f,c
 22251  017ACE  0E00               	movlw	0
 22252  017AD0  220A               	addwfc	(btemp+9)^0,f,c
 22253                           
 22254                           ;stkvar	_n @ sp[(-9)+5]
 22255  017AD2  0EFC               	movlw	-4
 22256  017AD4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22257  017ADA  0EFD               	movlw	-3
 22258  017ADC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22259  017AE2  D79B               	goto	l9271
 22260  017AE4                     l9279:
 22261  017AE4  0ED0               	movlw	208
 22262  017AE6  6E0B               	movwf	(btemp+10)^0,c
 22263  017AE8  0EFF               	movlw	255
 22264  017AEA  6E0C               	movwf	(btemp+11)^0,c
 22265                           
 22266                           ;stkvar	_s @ sp[(-9)+-2]
 22267  017AEC  50E1               	movf	fsr1l,w,c
 22268  017AEE  0FF5               	addlw	-11
 22269  017AF0  6ED9               	movwf	fsr2l,c
 22270  017AF2  50E2               	movf	fsr1h,w,c
 22271  017AF4  6EDA               	movwf	fsr2h,c
 22272  017AF6  0EFF               	movlw	255
 22273  017AF8  22DA               	addwfc	fsr2h,f,c
 22274  017AFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22275  017B00  006F FF77 FFF7     	movff	postdec2,tblptrh
 22276  017B06                     	if	0	;tblptru may be non-zero
 22277  017B06                     	endif
 22278  017B06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22279  017B06  0E00               	movlw	low (__mediumconst shr (0+16))
 22280  017B08  6EF8               	movwf	tblptru,c
 22281  017B0A                     	endif
 22282  017B0A  0008               	tblrd		*
 22283  017B0C  50F5               	movf	tablat,w,c
 22284  017B0E  6E09               	movwf	(btemp+8)^0,c
 22285  017B10  6A0A               	clrf	(btemp+9)^0,c
 22286  017B12  500B               	movf	(btemp+10)^0,w,c
 22287  017B14  2609               	addwf	(btemp+8)^0,f,c
 22288  017B16  500C               	movf	(btemp+11)^0,w,c
 22289  017B18  220A               	addwfc	(btemp+9)^0,f,c
 22290  017B1A  500A               	movf	(btemp+9)^0,w,c
 22291  017B1C  E106               	bnz	u8550
 22292  017B1E  0E0A               	movlw	10
 22293  017B20  5C09               	subwf	(btemp+8)^0,w,c
 22294  017B22  B0D8               	btfsc	status,0,c
 22295  017B24  D002               	goto	u8550
 22296  017B26  0E01               	movlw	1
 22297  017B28  D001               	goto	u8560
 22298  017B2A                     u8550:
 22299  017B2A  0E00               	movlw	0
 22300  017B2C                     u8560:
 22301  017B2C  6E0B               	movwf	(btemp+10)^0,c
 22302  017B2E  6A0C               	clrf	(btemp+11)^0,c
 22303                           
 22304                           ;stkvar	_atoi$6060 @ sp[(-9)+0]
 22305  017B30  0EF7               	movlw	-9
 22306  017B32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22307  017B38  0EF8               	movlw	-8
 22308  017B3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22309                           
 22310                           ;stkvar	_atoi$6060 @ sp[(-9)+0]
 22311  017B40  0EF7               	movlw	-9
 22312  017B42  006F FF8C  F001    	movff	plusw1,btemp
 22313  017B48  0EF8               	movlw	-8
 22314  017B4A  50E3               	movf	plusw1,w,c
 22315  017B4C  1001               	iorwf	btemp^0,w,c
 22316  017B4E  A4D8               	btfss	status,2,c
 22317  017B50  D795               	goto	l9275
 22318                           
 22319                           ;stkvar	_neg @ sp[(-9)+7]
 22320  017B52  0EFE               	movlw	-2
 22321  017B54  006F FF8C  F001    	movff	plusw1,btemp
 22322  017B5A  0EFF               	movlw	-1
 22323  017B5C  50E3               	movf	plusw1,w,c
 22324  017B5E  1001               	iorwf	btemp^0,w,c
 22325  017B60  A4D8               	btfss	status,2,c
 22326  017B62  D00E               	goto	l9289
 22327                           
 22328                           ;stkvar	_n @ sp[(-9)+5]
 22329  017B64  0EFC               	movlw	-4
 22330  017B66  006F FF8C  F001    	movff	plusw1,btemp
 22331  017B6C  1E01               	comf	btemp^0,f,c
 22332  017B6E  0EFD               	movlw	-3
 22333  017B70  006F FF8C  F002    	movff	plusw1,btemp+1
 22334  017B76  1E02               	comf	(btemp+1)^0,f,c
 22335  017B78  2A01               	incf	btemp^0,f,c
 22336  017B7A  B4D8               	btfsc	status,2,c
 22337  017B7C  2A02               	incf	(btemp+1)^0,f,c
 22338  017B7E  D008               	goto	l3124
 22339  017B80                     l9289:
 22340                           
 22341                           ;stkvar	_n @ sp[(-9)+5]
 22342  017B80  0EFC               	movlw	-4
 22343  017B82  006F FF8C  F001    	movff	plusw1,btemp
 22344  017B88  0EFD               	movlw	-3
 22345  017B8A  006F FF8C  F002    	movff	plusw1,btemp+1
 22346  017B90                     l3124:
 22347                           
 22348                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22349  017B90  0EF5               	movlw	245
 22350  017B92  26E1               	addwf	fsr1l,f,c
 22351  017B94  0EFF               	movlw	255
 22352  017B96  22E2               	addwfc	fsr1h,f,c
 22353  017B98  0012               	return		;funcret
 22354  017B9A                     __end_of_atoi:
 22355                           	opt callstack 0
 22356                           
 22357 ;; *************** function _isspace *****************
 22358 ;; Defined at:
 22359 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;  c               2  [STACK] int 
 22362 ;; Auto vars:     Size  Location     Type
 22363 ;;		None
 22364 ;; Return value:  Size  Location     Type
 22365 ;;                  2  [STACK] int 
 22366 ;; Registers used:
 22367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22368 ;; Tracked objects:
 22369 ;;		On entry : 0/0
 22370 ;;		On exit  : 0/0
 22371 ;;		Unchanged: 0/0
 22372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22377 ;;Total ram usage:        0 bytes
 22378 ;; Hardware stack levels used:    1
 22379 ;; Hardware stack levels required when called:   15
 22380 ;; This function calls:
 22381 ;;		Nothing
 22382 ;; This function is called by:
 22383 ;;		_atoi
 22384 ;; This function uses a reentrant model
 22385 ;;
 22386                           
 22387                           	psect	text78
 22388  01B288                     __ptext78:
 22389                           	opt callstack 0
 22390  01B288                     _isspace:
 22391                           	opt callstack 0
 22392                           
 22393                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22394  01B288  52E6               	movf	postinc1,f,c
 22395                           
 22396                           ;stkvar	_isspace$6109 @ sp[(-1)+0]
 22397                           
 22398                           ;incstack = 0
 22399 ;; hardware stack exceeded
 22400  01B28A  0EFF               	movlw	-1
 22401  01B28C  6AE3               	clrf	plusw1,c
 22402  01B28E  2AE3               	incf	plusw1,f,c
 22403                           
 22404                           ;stkvar	_c @ sp[(-1)+-2]
 22405  01B290  0EFD               	movlw	-3
 22406  01B292  006F FF8C  F001    	movff	plusw1,btemp
 22407  01B298  0E20               	movlw	32
 22408  01B29A  1801               	xorwf	btemp^0,w,c
 22409  01B29C  E104               	bnz	u7380
 22410  01B29E  0EFE               	movlw	-2
 22411  01B2A0  50E3               	movf	plusw1,w,c
 22412  01B2A2  B4D8               	btfsc	status,2,c
 22413  01B2A4  D012               	goto	l8647
 22414  01B2A6                     u7380:
 22415                           
 22416                           ;stkvar	_c @ sp[(-1)+-2]
 22417  01B2A6  0EFD               	movlw	-3
 22418  01B2A8  50E3               	movf	plusw1,w,c
 22419  01B2AA  0FF7               	addlw	247
 22420  01B2AC  6E0B               	movwf	(btemp+10)^0,c
 22421  01B2AE  0EFE               	movlw	-2
 22422  01B2B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22423  01B2B6  0EFF               	movlw	255
 22424  01B2B8  220C               	addwfc	(btemp+11)^0,f,c
 22425  01B2BA  500C               	movf	(btemp+11)^0,w,c
 22426  01B2BC  E104               	bnz	u7390
 22427  01B2BE  0E05               	movlw	5
 22428  01B2C0  5C0B               	subwf	(btemp+10)^0,w,c
 22429  01B2C2  A0D8               	btfss	status,0,c
 22430  01B2C4  D002               	goto	l8647
 22431  01B2C6                     u7390:
 22432                           
 22433                           ;stkvar	_isspace$6109 @ sp[(-1)+0]
 22434  01B2C6  0EFF               	movlw	-1
 22435  01B2C8  6AE3               	clrf	plusw1,c
 22436  01B2CA                     l8647:
 22437                           
 22438                           ;stkvar	_isspace$6109 @ sp[(-1)+0]
 22439  01B2CA  0EFF               	movlw	-1
 22440  01B2CC  50E3               	movf	plusw1,w,c
 22441  01B2CE  6E01               	movwf	btemp^0,c
 22442  01B2D0  6A02               	clrf	(btemp+1)^0,c
 22443                           
 22444                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22445  01B2D2  52E5               	movf	postdec1,f,c
 22446  01B2D4  52E5               	movf	postdec1,f,c
 22447  01B2D6  52E5               	movf	postdec1,f,c
 22448  01B2D8  0012               	return		;funcret
 22449  01B2DA                     __end_of_isspace:
 22450                           	opt callstack 0
 22451                           
 22452 ;; *************** function _isdigit *****************
 22453 ;; Defined at:
 22454 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22455 ;; Parameters:    Size  Location     Type
 22456 ;;  c               2  [STACK] int 
 22457 ;; Auto vars:     Size  Location     Type
 22458 ;;		None
 22459 ;; Return value:  Size  Location     Type
 22460 ;;                  2  [STACK] int 
 22461 ;; Registers used:
 22462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22463 ;; Tracked objects:
 22464 ;;		On entry : 0/0
 22465 ;;		On exit  : 0/0
 22466 ;;		Unchanged: 0/0
 22467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22472 ;;Total ram usage:        0 bytes
 22473 ;; Hardware stack levels used:    1
 22474 ;; Hardware stack levels required when called:   15
 22475 ;; This function calls:
 22476 ;;		Nothing
 22477 ;; This function is called by:
 22478 ;;		_vfpfcnvrt
 22479 ;;		_atoi
 22480 ;; This function uses a reentrant model
 22481 ;;
 22482                           
 22483                           	psect	text79
 22484  01B944                     __ptext79:
 22485                           	opt callstack 0
 22486  01B944                     _isdigit:
 22487                           	opt callstack 0
 22488                           
 22489                           ;stkvar	_c @ sp[(0)+-2]
 22490                           
 22491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22492                           ;incstack = 0
 22493 ;; hardware stack exceeded
 22494  01B944  0EFE               	movlw	-2
 22495  01B946  50E3               	movf	plusw1,w,c
 22496  01B948  0FD0               	addlw	208
 22497  01B94A  6E0B               	movwf	(btemp+10)^0,c
 22498  01B94C  0EFF               	movlw	-1
 22499  01B94E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22500  01B954  0EFF               	movlw	255
 22501  01B956  220C               	addwfc	(btemp+11)^0,f,c
 22502  01B958  500C               	movf	(btemp+11)^0,w,c
 22503  01B95A  E106               	bnz	u6230
 22504  01B95C  0E0A               	movlw	10
 22505  01B95E  5C0B               	subwf	(btemp+10)^0,w,c
 22506  01B960  B0D8               	btfsc	status,0,c
 22507  01B962  D002               	goto	u6230
 22508  01B964  0E01               	movlw	1
 22509  01B966  D001               	goto	u6240
 22510  01B968                     u6230:
 22511  01B968  0E00               	movlw	0
 22512  01B96A                     u6240:
 22513  01B96A  6E01               	movwf	btemp^0,c
 22514  01B96C  6A02               	clrf	(btemp+1)^0,c
 22515                           
 22516                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22517  01B96E  52E5               	movf	postdec1,f,c
 22518  01B970  52E5               	movf	postdec1,f,c
 22519  01B972  0012               	return		;funcret
 22520  01B974                     __end_of_isdigit:
 22521                           	opt callstack 0
 22522                           
 22523 ;; *************** function _set_vterm *****************
 22524 ;; Defined at:
 22525 ;;		line 107 in file "mconfig.c"
 22526 ;; Parameters:    Size  Location     Type
 22527 ;;  vterm           1  [STACK] const unsigned char 
 22528 ;; Auto vars:     Size  Location     Type
 22529 ;;		None
 22530 ;; Return value:  Size  Location     Type
 22531 ;;                  1  [STACK] unsigned char 
 22532 ;; Registers used:
 22533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22534 ;; Tracked objects:
 22535 ;;		On entry : 0/0
 22536 ;;		On exit  : 0/0
 22537 ;;		Unchanged: 0/0
 22538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22543 ;;Total ram usage:        0 bytes
 22544 ;; Hardware stack levels used:    1
 22545 ;; Hardware stack levels required when called:   15
 22546 ;; This function calls:
 22547 ;;		Nothing
 22548 ;; This function is called by:
 22549 ;;		_main
 22550 ;;		_check_help
 22551 ;; This function uses a reentrant model
 22552 ;;
 22553                           
 22554                           	psect	text80
 22555  01BE76                     __ptext80:
 22556                           	opt callstack 0
 22557  01BE76                     _set_vterm:
 22558                           	opt callstack 15
 22559                           
 22560                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22561                           ;stkvar	_vterm @ sp[(0)+-1]
 22562                           
 22563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22564                           ;incstack = 0
 22565  01BE76  0EFF               	movlw	-1
 22566  01BE78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22567  01BE7E  0E03               	movlw	3
 22568  01BE80  160C               	andwf	(btemp+11)^0,f,c
 22569  01BE82  EE22  F20A         	lfsr	2,_D+480
 22570  01BE86  50DF               	movf	223,w,c
 22571  01BE88  180C               	xorwf	(btemp+11)^0,w,c
 22572  01BE8A  0BFE               	andlw	-2
 22573  01BE8C  180C               	xorwf	(btemp+11)^0,w,c
 22574  01BE8E  6EDF               	movwf	223,c
 22575                           
 22576                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22577  01BE90  52E5               	movf	postdec1,f,c
 22578  01BE92  0012               	return		;funcret
 22579  01BE94                     __end_of_set_vterm:
 22580                           	opt callstack 0
 22581                           
 22582 ;; *************** function _set_temp_display_help *****************
 22583 ;; Defined at:
 22584 ;;		line 211 in file "mconfig.c"
 22585 ;; Parameters:    Size  Location     Type
 22586 ;;  new_response    1  [STACK] const enum E16509
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;		None
 22589 ;; Return value:  Size  Location     Type
 22590 ;;                  1  [STACK] enum E16509
 22591 ;; Registers used:
 22592 ;;		wreg, fsr1l, fsr1h
 22593 ;; Tracked objects:
 22594 ;;		On entry : 0/1
 22595 ;;		On exit  : 3F/1
 22596 ;;		Unchanged: 0/0
 22597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22602 ;;Total ram usage:        0 bytes
 22603 ;; Hardware stack levels used:    1
 22604 ;; Hardware stack levels required when called:   15
 22605 ;; This function calls:
 22606 ;;		Nothing
 22607 ;; This function is called by:
 22608 ;;		_check_help
 22609 ;; This function uses a reentrant model
 22610 ;;
 22611                           
 22612                           	psect	text81
 22613  01BFDA                     __ptext81:
 22614                           	opt callstack 0
 22615  01BFDA                     _set_temp_display_help:
 22616                           	opt callstack 14
 22617                           
 22618                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22619                           
 22620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22621                           ;incstack = 0
 22622  01BFDA  0101               	movlb	1	; () banked
 22623  01BFDC  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22627                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22628  01BFDE  0EFF               	movlw	-1
 22629  01BFE0  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22630                           
 22631                           ; BSR set to: 1
 22632                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22633  01BFE6  52E5               	movf	postdec1,f,c
 22634  01BFE8  0012               	return		;funcret
 22635  01BFEA                     __end_of_set_temp_display_help:
 22636                           	opt callstack 0
 22637                           
 22638 ;; *************** function _set_display_info *****************
 22639 ;; Defined at:
 22640 ;;		line 200 in file "mconfig.c"
 22641 ;; Parameters:    Size  Location     Type
 22642 ;;  new_response    1  [STACK] const enum E16509
 22643 ;; Auto vars:     Size  Location     Type
 22644 ;;		None
 22645 ;; Return value:  Size  Location     Type
 22646 ;;                  1  [STACK] enum E16994
 22647 ;; Registers used:
 22648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22649 ;; Tracked objects:
 22650 ;;		On entry : 0/1
 22651 ;;		On exit  : 0/0
 22652 ;;		Unchanged: 0/0
 22653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;Total ram usage:        0 bytes
 22659 ;; Hardware stack levels used:    1
 22660 ;; Hardware stack levels required when called:   16
 22661 ;; This function calls:
 22662 ;;		_TimerDone
 22663 ;; This function is called by:
 22664 ;;		_main
 22665 ;;		_check_help
 22666 ;; This function uses a reentrant model
 22667 ;;
 22668                           
 22669                           	psect	text82
 22670  01BE94                     __ptext82:
 22671                           	opt callstack 0
 22672  01BE94                     _set_display_info:
 22673                           	opt callstack 14
 22674                           
 22675                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22676                           
 22677                           ; BSR set to: 1
 22678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22679                           ;incstack = 0
 22680  01BE94  0E07               	movlw	7
 22681  01BE96  6EE6               	movwf	postinc1,c
 22682  01BE98  EC65  F0DD         	call	_TimerDone	;wreg free
 22683  01BE9C  5001               	movf	btemp^0,w,c
 22684  01BE9E  B4D8               	btfsc	status,2,c
 22685  01BEA0  D006               	goto	l1722
 22686                           
 22687                           ;mconfig.c: 205:   old_info = V.response.info;
 22688  01BEA2  0101               	movlb	1	; () banked
 22689  01BEA4  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 22690                           
 22691                           ; BSR set to: 1
 22692                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22693                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22694  01BEA6  0EFF               	movlw	-1
 22695  01BEA8  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 22696  01BEAE                     l1722:
 22697                           
 22698                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22699  01BEAE  52E5               	movf	postdec1,f,c
 22700  01BEB0  0012               	return		;funcret
 22701  01BEB2                     __end_of_set_display_info:
 22702                           	opt callstack 0
 22703                           
 22704 ;; *************** function _mode_lamp_dim *****************
 22705 ;; Defined at:
 22706 ;;		line 13 in file "mconfig.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;  level           2  [STACK] const unsigned short 
 22709 ;; Auto vars:     Size  Location     Type
 22710 ;;		None
 22711 ;; Return value:  Size  Location     Type
 22712 ;;                  1  [STACK] void 
 22713 ;; Registers used:
 22714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22715 ;; Tracked objects:
 22716 ;;		On entry : 0/1
 22717 ;;		On exit  : 0/0
 22718 ;;		Unchanged: 0/0
 22719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22724 ;;Total ram usage:        0 bytes
 22725 ;; Hardware stack levels used:    1
 22726 ;; Hardware stack levels required when called:   16
 22727 ;; This function calls:
 22728 ;;		_PWM8_LoadDutyValue
 22729 ;; This function is called by:
 22730 ;;		_main
 22731 ;;		_check_help
 22732 ;; This function uses a reentrant model
 22733 ;;
 22734                           
 22735                           	psect	text83
 22736  01BF22                     __ptext83:
 22737                           	opt callstack 0
 22738  01BF22                     _mode_lamp_dim:
 22739                           	opt callstack 14
 22740                           
 22741                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22742                           ;stkvar	_level @ sp[(0)+-2]
 22743                           
 22744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22745                           ;incstack = 0
 22746  01BF22  0EFE               	movlw	-2
 22747  01BF24  006F FF8F FFE6     	movff	plusw1,postinc1
 22748  01BF2A  006F FF8F FFE6     	movff	plusw1,postinc1
 22749  01BF30  ECDA  F0DA         	call	_PWM8_LoadDutyValue	;wreg free
 22750                           
 22751                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22752  01BF34  52E5               	movf	postdec1,f,c
 22753  01BF36  52E5               	movf	postdec1,f,c
 22754  01BF38  0012               	return		;funcret
 22755  01BF3A                     __end_of_mode_lamp_dim:
 22756                           	opt callstack 0
 22757                           
 22758 ;; *************** function _mode_lamp_bright *****************
 22759 ;; Defined at:
 22760 ;;		line 18 in file "mconfig.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;		None
 22763 ;; Auto vars:     Size  Location     Type
 22764 ;;		None
 22765 ;; Return value:  Size  Location     Type
 22766 ;;                  1  [STACK] void 
 22767 ;; Registers used:
 22768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22769 ;; Tracked objects:
 22770 ;;		On entry : 0/0
 22771 ;;		On exit  : 0/0
 22772 ;;		Unchanged: 0/0
 22773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;Total ram usage:        0 bytes
 22779 ;; Hardware stack levels used:    1
 22780 ;; Hardware stack levels required when called:   16
 22781 ;; This function calls:
 22782 ;;		_PWM8_LoadDutyValue
 22783 ;; This function is called by:
 22784 ;;		_check_help
 22785 ;; This function uses a reentrant model
 22786 ;;
 22787                           
 22788                           	psect	text84
 22789  01C016                     __ptext84:
 22790                           	opt callstack 0
 22791  01C016                     _mode_lamp_bright:
 22792                           	opt callstack 13
 22793                           
 22794                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22795                           
 22796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22797                           ;incstack = 0
 22798  01C016  0E2C               	movlw	44
 22799  01C018  6EE6               	movwf	postinc1,c
 22800  01C01A  0E01               	movlw	1
 22801  01C01C  6EE6               	movwf	postinc1,c
 22802  01C01E  ECDA  F0DA         	call	_PWM8_LoadDutyValue	;wreg free
 22803                           
 22804                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22805  01C022  0012               	return		;funcret
 22806  01C024                     __end_of_mode_lamp_bright:
 22807                           	opt callstack 0
 22808                           
 22809 ;; *************** function _PWM8_LoadDutyValue *****************
 22810 ;; Defined at:
 22811 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22812 ;; Parameters:    Size  Location     Type
 22813 ;;  dutyValue       2  [STACK] unsigned short 
 22814 ;; Auto vars:     Size  Location     Type
 22815 ;;		None
 22816 ;; Return value:  Size  Location     Type
 22817 ;;                  1  [STACK] void 
 22818 ;; Registers used:
 22819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22820 ;; Tracked objects:
 22821 ;;		On entry : 0/1
 22822 ;;		On exit  : 0/0
 22823 ;;		Unchanged: 0/0
 22824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22829 ;;Total ram usage:        0 bytes
 22830 ;; Hardware stack levels used:    1
 22831 ;; Hardware stack levels required when called:   15
 22832 ;; This function calls:
 22833 ;;		Nothing
 22834 ;; This function is called by:
 22835 ;;		_mode_lamp_dim
 22836 ;;		_mode_lamp_bright
 22837 ;; This function uses a reentrant model
 22838 ;;
 22839                           
 22840                           	psect	text85
 22841  01B5B4                     __ptext85:
 22842                           	opt callstack 0
 22843  01B5B4                     _PWM8_LoadDutyValue:
 22844                           	opt callstack 14
 22845                           
 22846                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22847                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22848                           
 22849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22850                           ;incstack = 0
 22851  01B5B4  0EFE               	movlw	-2
 22852  01B5B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22853  01B5BC  0EFF               	movlw	-1
 22854  01B5BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22855  01B5C4  90D8               	bcf	status,0,c
 22856  01B5C6  320C               	rrcf	(btemp+11)^0,f,c
 22857  01B5C8  320B               	rrcf	(btemp+10)^0,f,c
 22858  01B5CA  90D8               	bcf	status,0,c
 22859  01B5CC  320C               	rrcf	(btemp+11)^0,f,c
 22860  01B5CE  320B               	rrcf	(btemp+10)^0,f,c
 22861  01B5D0  500B               	movf	(btemp+10)^0,w,c
 22862  01B5D2  6E61               	movwf	97,c	;volatile
 22863                           
 22864                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22865                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22866  01B5D4  0EFE               	movlw	-2
 22867  01B5D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22868  01B5DC  0E03               	movlw	3
 22869  01B5DE  160C               	andwf	(btemp+11)^0,f,c
 22870  01B5E0  0E06               	movlw	6
 22871  01B5E2  6E01               	movwf	btemp^0,c
 22872  01B5E4                     u9375:
 22873  01B5E4  90D8               	bcf	status,0,c
 22874  01B5E6  360C               	rlcf	(btemp+11)^0,f,c
 22875  01B5E8  2E01               	decfsz	btemp^0,f,c
 22876  01B5EA  D7FC               	goto	u9375
 22877  01B5EC  500C               	movf	(btemp+11)^0,w,c
 22878  01B5EE  6E60               	movwf	96,c	;volatile
 22879                           
 22880                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22881  01B5F0  52E5               	movf	postdec1,f,c
 22882  01B5F2  52E5               	movf	postdec1,f,c
 22883  01B5F4  0012               	return		;funcret
 22884  01B5F6                     __end_of_PWM8_LoadDutyValue:
 22885                           	opt callstack 0
 22886                           
 22887 ;; *************** function _help_button *****************
 22888 ;; Defined at:
 22889 ;;		line 26 in file "mconfig.c"
 22890 ;; Parameters:    Size  Location     Type
 22891 ;;		None
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;		None
 22894 ;; Return value:  Size  Location     Type
 22895 ;;                  1  [STACK] _Bool 
 22896 ;; Registers used:
 22897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22898 ;; Tracked objects:
 22899 ;;		On entry : 0/1
 22900 ;;		On exit  : 0/0
 22901 ;;		Unchanged: 0/0
 22902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;Total ram usage:        0 bytes
 22908 ;; Hardware stack levels used:    1
 22909 ;; Hardware stack levels required when called:   16
 22910 ;; This function calls:
 22911 ;;		_StartTimer
 22912 ;;		_TimerDone
 22913 ;; This function is called by:
 22914 ;;		_check_help
 22915 ;; This function uses a reentrant model
 22916 ;;
 22917                           
 22918                           	psect	text86
 22919  01B770                     __ptext86:
 22920                           	opt callstack 0
 22921  01B770                     _help_button:
 22922                           	opt callstack 13
 22923                           
 22924                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22925                           
 22926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22927                           ;incstack = 0
 22928  01B770  B0CB               	btfsc	203,0,c	;volatile
 22929  01B772  D00C               	goto	l1665
 22930                           
 22931                           ;mconfig.c: 29:   V.help = 1;
 22932  01B774  0101               	movlb	1	; () banked
 22933  01B776  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 22934                           
 22935                           ; BSR set to: 1
 22936                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22937  01B778  0E08               	movlw	8
 22938  01B77A  6EE6               	movwf	postinc1,c
 22939  01B77C  EC65  F0DD         	call	_TimerDone	;wreg free
 22940  01B780  5001               	movf	btemp^0,w,c
 22941  01B782  B4D8               	btfsc	status,2,c
 22942  01B784  D003               	goto	l1665
 22943                           
 22944                           ;mconfig.c: 31:    return 1;
 22945  01B786  0E01               	movlw	1
 22946  01B788  6E01               	movwf	btemp^0,c
 22947  01B78A  0012               	return	
 22948  01B78C                     l1665:
 22949                           
 22950                           ;mconfig.c: 34:  if (!V.help)
 22951  01B78C  0101               	movlb	1	; () banked
 22952  01B78E  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22953  01B790  D008               	goto	l10387
 22954                           
 22955                           ; BSR set to: 1
 22956                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22957  01B792  0E2C               	movlw	44
 22958  01B794  6EE6               	movwf	postinc1,c
 22959  01B796  0E01               	movlw	1
 22960  01B798  6EE6               	movwf	postinc1,c
 22961  01B79A  0E08               	movlw	8
 22962  01B79C  6EE6               	movwf	postinc1,c
 22963  01B79E  ECFB  F0DA         	call	_StartTimer	;wreg free
 22964  01B7A2                     l10387:
 22965                           
 22966                           ;mconfig.c: 37:  return 0;
 22967  01B7A2  0E00               	movlw	0
 22968  01B7A4  6E01               	movwf	btemp^0,c
 22969                           
 22970                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22971  01B7A6  0012               	return		;funcret
 22972  01B7A8                     __end_of_help_button:
 22973                           	opt callstack 0
 22974                           
 22975 ;; *************** function _TimerDone *****************
 22976 ;; Defined at:
 22977 ;;		line 20 in file "timers.c"
 22978 ;; Parameters:    Size  Location     Type
 22979 ;;  timer           1  [STACK] const unsigned char 
 22980 ;; Auto vars:     Size  Location     Type
 22981 ;;		None
 22982 ;; Return value:  Size  Location     Type
 22983 ;;                  1  [STACK] _Bool 
 22984 ;; Registers used:
 22985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22986 ;; Tracked objects:
 22987 ;;		On entry : 0/1
 22988 ;;		On exit  : 0/0
 22989 ;;		Unchanged: 0/0
 22990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22995 ;;Total ram usage:        0 bytes
 22996 ;; Hardware stack levels used:    1
 22997 ;; Hardware stack levels required when called:   15
 22998 ;; This function calls:
 22999 ;;		Nothing
 23000 ;; This function is called by:
 23001 ;;		_main
 23002 ;;		_WaitMs
 23003 ;;		_help_button
 23004 ;;		_check_help
 23005 ;;		_set_display_info
 23006 ;;		_update_adc_result
 23007 ;;		_esr_check
 23008 ;; This function uses a reentrant model
 23009 ;;
 23010                           
 23011                           	psect	text87
 23012  01BACA                     __ptext87:
 23013                           	opt callstack 0
 23014  01BACA                     _TimerDone:
 23015                           	opt callstack 14
 23016                           
 23017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23018                           ;incstack = 0
 23019  01BACA  0004               	clrwdt		;# 
 23020                           
 23021                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23022                           ;stkvar	_timer @ sp[(0)+-1]
 23023  01BACC  0EFF               	movlw	-1
 23024  01BACE  50E3               	movf	plusw1,w,c
 23025  01BAD0  0D02               	mullw	2
 23026  01BAD2  0E7D               	movlw	low _tickCount
 23027  01BAD4  24F3               	addwf	243,w,c
 23028  01BAD6  6ED9               	movwf	fsr2l,c
 23029  01BAD8  0E02               	movlw	high _tickCount
 23030  01BADA  20F4               	addwfc	prodh,w,c
 23031  01BADC  6EDA               	movwf	fsr2h,c
 23032  01BADE  50DE               	movf	postinc2,w,c
 23033  01BAE0  10DE               	iorwf	postinc2,w,c
 23034  01BAE2  A4D8               	btfss	status,2,c
 23035  01BAE4  D002               	goto	l9687
 23036                           
 23037                           ;timers.c: 24:   return 1;
 23038  01BAE6  0E01               	movlw	1
 23039  01BAE8  D001               	goto	L27
 23040  01BAEA                     l9687:
 23041                           
 23042                           ;timers.c: 26:  return 0;
 23043  01BAEA  0E00               	movlw	0
 23044  01BAEC                     L27:
 23045  01BAEC  6E01               	movwf	btemp^0,c
 23046                           
 23047                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23048  01BAEE  52E5               	movf	postdec1,f,c
 23049  01BAF0  0012               	return		;funcret
 23050  01BAF2                     __end_of_TimerDone:
 23051                           	opt callstack 0
 23052                           
 23053 ;; *************** function _StartTimer *****************
 23054 ;; Defined at:
 23055 ;;		line 12 in file "timers.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;  timer           1  [STACK] const unsigned char 
 23058 ;;  count           2  [STACK] const unsigned short 
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;		None
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  1  [STACK] void 
 23063 ;; Registers used:
 23064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23074 ;;Total ram usage:        0 bytes
 23075 ;; Hardware stack levels used:    1
 23076 ;; Hardware stack levels required when called:   15
 23077 ;; This function calls:
 23078 ;;		Nothing
 23079 ;; This function is called by:
 23080 ;;		_main
 23081 ;;		_WaitMs
 23082 ;;		_help_button
 23083 ;;		_check_help
 23084 ;;		_update_adc_result
 23085 ;;		_calc_bsoc
 23086 ;;		_esr_check
 23087 ;; This function uses a reentrant model
 23088 ;;
 23089                           
 23090                           	psect	text88
 23091  01B5F6                     __ptext88:
 23092                           	opt callstack 0
 23093  01B5F6                     _StartTimer:
 23094                           	opt callstack 0
 23095                           
 23096                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23097                           ;stkvar	_count @ sp[(0)+-3]
 23098                           
 23099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23100                           ;incstack = 0
 23101 ;; hardware stack exceeded
 23102  01B5F6  0EFD               	movlw	-3
 23103  01B5F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23104  01B5FE  0EFE               	movlw	-2
 23105  01B600  006F FF8C  F00C    	movff	plusw1,btemp+11
 23106  01B606  90D8               	bcf	status,0,c
 23107  01B608  340B               	rlcf	(btemp+10)^0,w,c
 23108  01B60A  6E09               	movwf	(btemp+8)^0,c
 23109  01B60C  340C               	rlcf	(btemp+11)^0,w,c
 23110  01B60E  6E0A               	movwf	(btemp+9)^0,c
 23111                           
 23112                           ;stkvar	_timer @ sp[(0)+-1]
 23113  01B610  0EFF               	movlw	-1
 23114  01B612  50E3               	movf	plusw1,w,c
 23115  01B614  0D02               	mullw	2
 23116  01B616  0E7D               	movlw	low _tickCount
 23117  01B618  24F3               	addwf	243,w,c
 23118  01B61A  6ED9               	movwf	fsr2l,c
 23119  01B61C  0E02               	movlw	high _tickCount
 23120  01B61E  20F4               	addwfc	prodh,w,c
 23121  01B620  6EDA               	movwf	fsr2h,c
 23122  01B622  0060  F027  FFDE   	movff	btemp+8,postinc2
 23123  01B628  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23124                           
 23125                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23126  01B62E  52E5               	movf	postdec1,f,c
 23127  01B630  52E5               	movf	postdec1,f,c
 23128  01B632  52E5               	movf	postdec1,f,c
 23129  01B634  0012               	return		;funcret
 23130  01B636                     __end_of_StartTimer:
 23131                           	opt callstack 0
 23132                           
 23133 ;; *************** function _display_info *****************
 23134 ;; Defined at:
 23135 ;;		line 190 in file "mconfig.c"
 23136 ;; Parameters:    Size  Location     Type
 23137 ;;		None
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;		None
 23140 ;; Return value:  Size  Location     Type
 23141 ;;                  1  [STACK] enum E16509
 23142 ;; Registers used:
 23143 ;;		btemp
 23144 ;; Tracked objects:
 23145 ;;		On entry : 0/1
 23146 ;;		On exit  : 0/0
 23147 ;;		Unchanged: 0/0
 23148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23153 ;;Total ram usage:        0 bytes
 23154 ;; Hardware stack levels used:    1
 23155 ;; Hardware stack levels required when called:   15
 23156 ;; This function calls:
 23157 ;;		Nothing
 23158 ;; This function is called by:
 23159 ;;		_check_help
 23160 ;; This function uses a reentrant model
 23161 ;;
 23162                           
 23163                           	psect	text89
 23164  01C09A                     __ptext89:
 23165                           	opt callstack 0
 23166  01C09A                     _display_info:
 23167                           	opt callstack 14
 23168                           
 23169                           ;mconfig.c: 192:  return V.response.info;
 23170                           
 23171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23172                           ;incstack = 0
 23173  01C09A  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23174                           
 23175                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23176  01C0A0  0012               	return		;funcret
 23177  01C0A2                     __end_of_display_info:
 23178                           	opt callstack 0
 23179                           
 23180 ;; *************** function _display_help *****************
 23181 ;; Defined at:
 23182 ;;		line 195 in file "mconfig.c"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;		None
 23185 ;; Auto vars:     Size  Location     Type
 23186 ;;		None
 23187 ;; Return value:  Size  Location     Type
 23188 ;;                  1  [STACK] enum E16509
 23189 ;; Registers used:
 23190 ;;		btemp
 23191 ;; Tracked objects:
 23192 ;;		On entry : 3F/1
 23193 ;;		On exit  : 0/0
 23194 ;;		Unchanged: 0/0
 23195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;Total ram usage:        0 bytes
 23201 ;; Hardware stack levels used:    1
 23202 ;; Hardware stack levels required when called:   15
 23203 ;; This function calls:
 23204 ;;		Nothing
 23205 ;; This function is called by:
 23206 ;;		_check_help
 23207 ;; This function uses a reentrant model
 23208 ;;
 23209                           
 23210                           	psect	text90
 23211  01C0A2                     __ptext90:
 23212                           	opt callstack 0
 23213  01C0A2                     _display_help:
 23214                           	opt callstack 14
 23215                           
 23216                           ;mconfig.c: 197:  return V.response.help_temp;
 23217                           
 23218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23219                           ;incstack = 0
 23220  01C0A2  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23221                           
 23222                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23223  01C0A8  0012               	return		;funcret
 23224  01C0AA                     __end_of_display_help:
 23225                           	opt callstack 0
 23226                           
 23227 ;; *************** function _check_enter_button *****************
 23228 ;; Defined at:
 23229 ;;		line 42 in file "hid.c"
 23230 ;; Parameters:    Size  Location     Type
 23231 ;;  h               1  [STACK] PTR struct H_data
 23232 ;;		 -> H(7), 
 23233 ;; Auto vars:     Size  Location     Type
 23234 ;;		None
 23235 ;; Return value:  Size  Location     Type
 23236 ;;                  1  [STACK] _Bool 
 23237 ;; Registers used:
 23238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23239 ;; Tracked objects:
 23240 ;;		On entry : 0/0
 23241 ;;		On exit  : 0/0
 23242 ;;		Unchanged: 0/0
 23243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23248 ;;Total ram usage:        0 bytes
 23249 ;; Hardware stack levels used:    1
 23250 ;; Hardware stack levels required when called:   15
 23251 ;; This function calls:
 23252 ;;		Nothing
 23253 ;; This function is called by:
 23254 ;;		_main
 23255 ;; This function uses a reentrant model
 23256 ;;
 23257                           
 23258                           	psect	text91
 23259  01B636                     __ptext91:
 23260                           	opt callstack 0
 23261  01B636                     _check_enter_button:
 23262                           	opt callstack 15
 23263                           
 23264                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23265                           ;stkvar	_h @ sp[(0)+-1]
 23266                           
 23267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23268                           ;incstack = 0
 23269  01B636  0EFF               	movlw	-1
 23270  01B638  50E3               	movf	plusw1,w,c
 23271  01B63A  6ED9               	movwf	fsr2l,c
 23272  01B63C  6ADA               	clrf	fsr2h,c
 23273  01B63E  0E04               	movlw	4
 23274  01B640  26D9               	addwf	fsr2l,f,c
 23275  01B642  50DF               	movf	indf2,w,c
 23276  01B644  A4D8               	btfss	status,2,c
 23277  01B646  D013               	goto	l11013
 23278                           
 23279                           ;stkvar	_h @ sp[(0)+-1]
 23280  01B648  0EFF               	movlw	-1
 23281  01B64A  50E3               	movf	plusw1,w,c
 23282  01B64C  6ED9               	movwf	fsr2l,c
 23283  01B64E  6ADA               	clrf	fsr2h,c
 23284  01B650  0E05               	movlw	5
 23285  01B652  26D9               	addwf	fsr2l,f,c
 23286  01B654  50DF               	movf	indf2,w,c
 23287  01B656  A4D8               	btfss	status,2,c
 23288  01B658  D00A               	goto	l11013
 23289                           
 23290                           ;hid.c: 45:   h->wait_enter = 1;
 23291                           ;stkvar	_h @ sp[(0)+-1]
 23292  01B65A  0EFF               	movlw	-1
 23293  01B65C  50E3               	movf	plusw1,w,c
 23294  01B65E  6ED9               	movwf	fsr2l,c
 23295  01B660  6ADA               	clrf	fsr2h,c
 23296  01B662  0E04               	movlw	4
 23297  01B664  26D9               	addwf	fsr2l,f,c
 23298  01B666  0E01               	movlw	1
 23299  01B668  6EDF               	movwf	indf2,c
 23300                           
 23301                           ;hid.c: 46:   return 1;
 23302  01B66A  0E01               	movlw	1
 23303  01B66C  D001               	goto	L28
 23304  01B66E                     l11013:
 23305                           
 23306                           ;hid.c: 48:  return 0;
 23307  01B66E  0E00               	movlw	0
 23308  01B670                     L28:
 23309  01B670  6E01               	movwf	btemp^0,c
 23310                           
 23311                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23312  01B672  52E5               	movf	postdec1,f,c
 23313  01B674  0012               	return		;funcret
 23314  01B676                     __end_of_check_enter_button:
 23315                           	opt callstack 0
 23316                           
 23317 ;; *************** function _calc_ror_data *****************
 23318 ;; Defined at:
 23319 ;;		line 102 in file "mbmc.c"
 23320 ;; Parameters:    Size  Location     Type
 23321 ;;		None
 23322 ;; Auto vars:     Size  Location     Type
 23323 ;;		None
 23324 ;; Return value:  Size  Location     Type
 23325 ;;                  1  [STACK] void 
 23326 ;; Registers used:
 23327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23328 ;; Tracked objects:
 23329 ;;		On entry : 0/39
 23330 ;;		On exit  : 0/0
 23331 ;;		Unchanged: 0/0
 23332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23337 ;;Total ram usage:        0 bytes
 23338 ;; Hardware stack levels used:    1
 23339 ;; Hardware stack levels required when called:   18
 23340 ;; This function calls:
 23341 ;;		___flge
 23342 ;;		___flsub
 23343 ;;		_conv_raw_result
 23344 ;;		_fabsf
 23345 ;; This function is called by:
 23346 ;;		_main
 23347 ;; This function uses a reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text92
 23351  018B48                     __ptext92:
 23352                           	opt callstack 0
 23353  018B48                     _calc_ror_data:
 23354                           	opt callstack 12
 23355                           
 23356                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23357                           
 23358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23359                           ;incstack = 0
 23360  018B48  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23361  018B4E  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23362  018B54  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23363  018B5A  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23364  018B60  0E00               	movlw	0
 23365  018B62  6EE6               	movwf	postinc1,c
 23366  018B64  0E00               	movlw	0
 23367  018B66  6EE6               	movwf	postinc1,c
 23368  018B68  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23369  018B6C  0060  F007  FFE6   	movff	btemp,postinc1
 23370  018B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23371  018B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23372  018B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23373  018B84  EC95  F0DA         	call	___flsub	;wreg free
 23374  018B88  0060  F007  FFE6   	movff	btemp,postinc1
 23375  018B8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23376  018B94  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23377  018B9A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23378  018BA0  ECEB  F0D2         	call	_fabsf	;wreg free
 23379  018BA4  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23380  018BAA  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23381  018BB0  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23382  018BB6  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23383                           
 23384                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23385  018BBC  0E00               	movlw	0
 23386  018BBE  6EE6               	movwf	postinc1,c
 23387  018BC0  0E00               	movlw	0
 23388  018BC2  6EE6               	movwf	postinc1,c
 23389  018BC4  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23390  018BC8  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23391  018BCE  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23392  018BD4  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23393  018BDA  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23394                           
 23395                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23396  018BE0  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23397  018BE6  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23398  018BEC  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23399  018BF2  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23400  018BF8  0E00               	movlw	0
 23401  018BFA  6EE6               	movwf	postinc1,c
 23402  018BFC  0E04               	movlw	4
 23403  018BFE  6EE6               	movwf	postinc1,c
 23404  018C00  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23405  018C04  0060  F007  FFE6   	movff	btemp,postinc1
 23406  018C0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23407  018C10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23408  018C16  0060  F013  FFE6   	movff	btemp+3,postinc1
 23409  018C1C  EC95  F0DA         	call	___flsub	;wreg free
 23410  018C20  0060  F007  FFE6   	movff	btemp,postinc1
 23411  018C26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23412  018C2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23413  018C32  0060  F013  FFE6   	movff	btemp+3,postinc1
 23414  018C38  ECEB  F0D2         	call	_fabsf	;wreg free
 23415  018C3C  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23416  018C42  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23417  018C48  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23418  018C4E  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23419                           
 23420                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23421  018C54  0EE7               	movlw	231
 23422  018C56  6EE6               	movwf	postinc1,c
 23423  018C58  0E1D               	movlw	29
 23424  018C5A  6EE6               	movwf	postinc1,c
 23425  018C5C  0EA7               	movlw	167
 23426  018C5E  6EE6               	movwf	postinc1,c
 23427  018C60  0E3B               	movlw	59
 23428  018C62  6EE6               	movwf	postinc1,c
 23429  018C64  EE21  F36B         	lfsr	2,_C+108	;volatile
 23430  018C68  006F FF7B FFE6     	movff	postinc2,postinc1
 23431  018C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 23432  018C74  006F FF7B FFE6     	movff	postinc2,postinc1
 23433  018C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 23434  018C80  ECE0  F0C7         	call	___flge	;wreg free
 23435  018C84  B001               	btfsc	btemp& (0+255),0,c
 23436  018C86  D010               	goto	l10803
 23437                           
 23438                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23439  018C88  0EB0               	movlw	176
 23440  018C8A  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23441  018C90  0E03               	movlw	3
 23442  018C92  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23443  018C98  0E67               	movlw	103
 23444  018C9A  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23445  018CA0  0E3C               	movlw	60
 23446  018CA2  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23447  018CA8                     l10803:
 23448                           
 23449                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23450  018CA8  0E00               	movlw	0
 23451  018CAA  6EE6               	movwf	postinc1,c
 23452  018CAC  0E04               	movlw	4
 23453  018CAE  6EE6               	movwf	postinc1,c
 23454  018CB0  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23455  018CB4  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23456  018CBA  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23457  018CC0  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23458  018CC6  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23459                           
 23460                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23461  018CCC  0012               	return		;funcret
 23462  018CCE                     __end_of_calc_ror_data:
 23463                           	opt callstack 0
 23464                           
 23465 ;; *************** function _fabsf *****************
 23466 ;; Defined at:
 23467 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23468 ;; Parameters:    Size  Location     Type
 23469 ;;  x               4  [STACK] float 
 23470 ;; Auto vars:     Size  Location     Type
 23471 ;;  u               4  [STACK] struct .
 23472 ;; Return value:  Size  Location     Type
 23473 ;;                  4  [STACK] float 
 23474 ;; Registers used:
 23475 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23476 ;; Tracked objects:
 23477 ;;		On entry : 0/0
 23478 ;;		On exit  : 0/0
 23479 ;;		Unchanged: 0/0
 23480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;Total ram usage:        0 bytes
 23486 ;; Hardware stack levels used:    1
 23487 ;; Hardware stack levels required when called:   15
 23488 ;; This function calls:
 23489 ;;		Nothing
 23490 ;; This function is called by:
 23491 ;;		_main
 23492 ;;		_calc_ror_data
 23493 ;;		_calc_bsoc
 23494 ;;		_esr_check
 23495 ;; This function uses a reentrant model
 23496 ;;
 23497                           
 23498                           	psect	text93
 23499  01A5D6                     __ptext93:
 23500                           	opt callstack 0
 23501  01A5D6                     _fabsf:
 23502                           	opt callstack 0
 23503                           
 23504                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23505  01A5D6  52E6               	movf	postinc1,f,c
 23506  01A5D8  52E6               	movf	postinc1,f,c
 23507  01A5DA  52E6               	movf	postinc1,f,c
 23508  01A5DC  52E6               	movf	postinc1,f,c
 23509                           
 23510                           ;incstack = 0
 23511 ;; hardware stack exceeded
 23512  01A5DE  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23513  01A5E4  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23514  01A5EA  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23515  01A5F0  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23516                           
 23517                           ;stkvar	_u @ sp[(-4)+0]
 23518  01A5F6  0EFC               	movlw	-4
 23519  01A5F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23520  01A5FE  0EFD               	movlw	-3
 23521  01A600  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23522  01A606  0EFE               	movlw	-2
 23523  01A608  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23524  01A60E  0EFF               	movlw	-1
 23525  01A610  0060  F033  FFE3   	movff	btemp+11,plusw1
 23526                           
 23527                           ;stkvar	_x @ sp[(-4)+-4]
 23528  01A616  0EF8               	movlw	-8
 23529  01A618  006F FF8C  F009    	movff	plusw1,btemp+8
 23530  01A61E  0EF9               	movlw	-7
 23531  01A620  006F FF8C  F00A    	movff	plusw1,btemp+9
 23532  01A626  0EFA               	movlw	-6
 23533  01A628  006F FF8C  F00B    	movff	plusw1,btemp+10
 23534  01A62E  0EFB               	movlw	-5
 23535  01A630  006F FF8C  F00C    	movff	plusw1,btemp+11
 23536                           
 23537                           ;stkvar	_u @ sp[(-4)+0]
 23538  01A636  0EFC               	movlw	-4
 23539  01A638  0060  F027  FFE3   	movff	btemp+8,plusw1
 23540  01A63E  0EFD               	movlw	-3
 23541  01A640  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23542  01A646  0EFE               	movlw	-2
 23543  01A648  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23544  01A64E  0EFF               	movlw	-1
 23545  01A650  0060  F033  FFE3   	movff	btemp+11,plusw1
 23546                           
 23547                           ;stkvar	_u @ sp[(-4)+0]
 23548  01A656  0EFF               	movlw	-1
 23549  01A658  9EE3               	bcf	plusw1,7,c
 23550                           
 23551                           ;stkvar	_u @ sp[(-4)+0]
 23552  01A65A  0EFC               	movlw	-4
 23553  01A65C  006F FF8C  F001    	movff	plusw1,btemp
 23554  01A662  0EFD               	movlw	-3
 23555  01A664  006F FF8C  F002    	movff	plusw1,btemp+1
 23556  01A66A  0EFE               	movlw	-2
 23557  01A66C  006F FF8C  F003    	movff	plusw1,btemp+2
 23558  01A672  0EFF               	movlw	-1
 23559  01A674  006F FF8C  F004    	movff	plusw1,btemp+3
 23560                           
 23561                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23562  01A67A  0EF8               	movlw	248
 23563  01A67C  26E1               	addwf	fsr1l,f,c
 23564  01A67E  0EFF               	movlw	255
 23565  01A680  22E2               	addwfc	fsr1h,f,c
 23566  01A682  0012               	return		;funcret
 23567  01A684                     __end_of_fabsf:
 23568                           	opt callstack 0
 23569                           
 23570 ;; *************** function _conv_raw_result *****************
 23571 ;; Defined at:
 23572 ;;		line 98 in file "daq.c"
 23573 ;; Parameters:    Size  Location     Type
 23574 ;;  chan            1  [STACK] const enum E16582
 23575 ;;  to_what         1  [STACK] const enum E16644
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;		None
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  4  [STACK] float 
 23580 ;; Registers used:
 23581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23582 ;; Tracked objects:
 23583 ;;		On entry : 0/39
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   17
 23594 ;; This function calls:
 23595 ;;		___fladd
 23596 ;;		___fldiv
 23597 ;;		___flmul
 23598 ;;		___flsub
 23599 ;;		___xxtofl
 23600 ;;		_get_raw_result
 23601 ;;		_nanf
 23602 ;; This function is called by:
 23603 ;;		_main
 23604 ;;		_convert_adc_data
 23605 ;;		_calc_ror_data
 23606 ;;		_check_day_time
 23607 ;;		_init_bsoc
 23608 ;;		_esr_check
 23609 ;; This function uses a reentrant model
 23610 ;;
 23611                           
 23612                           	psect	text94
 23613  0152BA                     __ptext94:
 23614                           	opt callstack 0
 23615  0152BA                     _conv_raw_result:
 23616                           	opt callstack 0
 23617                           
 23618                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23619                           
 23620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23621                           ;incstack = 0
 23622 ;; hardware stack exceeded
 23623  0152BA  D276               	goto	l9669
 23624  0152BC                     l9615:
 23625                           
 23626                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23627                           ;stkvar	_chan @ sp[(0)+-1]
 23628  0152BC  0EFF               	movlw	-1
 23629  0152BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23630  0152C4  0E77               	movlw	119
 23631  0152C6  6E09               	movwf	(btemp+8)^0,c
 23632  0152C8  0E3C               	movlw	60
 23633  0152CA  6E0A               	movwf	(btemp+9)^0,c
 23634  0152CC  2A0C               	incf	(btemp+11)^0,f,c
 23635  0152CE  D003               	goto	u9094
 23636  0152D0                     u9095:
 23637  0152D0  340A               	rlcf	(btemp+9)^0,w,c
 23638  0152D2  320A               	rrcf	(btemp+9)^0,f,c
 23639  0152D4  3209               	rrcf	(btemp+8)^0,f,c
 23640  0152D6                     u9094:
 23641  0152D6  2E0C               	decfsz	(btemp+11)^0,f,c
 23642  0152D8  D7FB               	goto	u9095
 23643  0152DA  B009               	btfsc	(btemp+8)^0,0,c
 23644  0152DC  D007               	goto	l9621
 23645                           
 23646                           ;daq.c: 104:    return nanf("");
 23647  0152DE  0EB9               	movlw	low (STR_65+120)
 23648  0152E0  6EE6               	movwf	postinc1,c
 23649  0152E2  0EFC               	movlw	high (STR_65+120)
 23650  0152E4  6EE6               	movwf	postinc1,c
 23651  0152E6  EC33  F0D8         	call	_nanf	;wreg free
 23652  0152EA  D26E               	goto	l1784
 23653  0152EC                     l9621:
 23654                           
 23655                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 23656                           ;stkvar	_chan @ sp[(0)+-1]
 23657  0152EC  0EFF               	movlw	-1
 23658  0152EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23659  0152F4  0E03               	movlw	3
 23660  0152F6  6E09               	movwf	(btemp+8)^0,c
 23661  0152F8  0E00               	movlw	0
 23662  0152FA  6E0A               	movwf	(btemp+9)^0,c
 23663  0152FC  2A0C               	incf	(btemp+11)^0,f,c
 23664  0152FE  D003               	goto	u9114
 23665  015300                     u9115:
 23666  015300  340A               	rlcf	(btemp+9)^0,w,c
 23667  015302  320A               	rrcf	(btemp+9)^0,f,c
 23668  015304  3209               	rrcf	(btemp+8)^0,f,c
 23669  015306                     u9114:
 23670  015306  2E0C               	decfsz	(btemp+11)^0,f,c
 23671  015308  D7FB               	goto	u9115
 23672  01530A  A009               	btfss	(btemp+8)^0,0,c
 23673  01530C  D11F               	goto	l9635
 23674                           
 23675                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 23676                           ;stkvar	_chan @ sp[(0)+-1]
 23677  01530E  0EFF               	movlw	-1
 23678  015310  006F FF8C  F00C    	movff	plusw1,btemp+11
 23679  015316  0E01               	movlw	1
 23680  015318  6E09               	movwf	(btemp+8)^0,c
 23681  01531A  0E00               	movlw	0
 23682  01531C  6E0A               	movwf	(btemp+9)^0,c
 23683  01531E  2A0C               	incf	(btemp+11)^0,f,c
 23684  015320  D003               	goto	u9134
 23685  015322                     u9135:
 23686  015322  340A               	rlcf	(btemp+9)^0,w,c
 23687  015324  320A               	rrcf	(btemp+9)^0,f,c
 23688  015326  3209               	rrcf	(btemp+8)^0,f,c
 23689  015328                     u9134:
 23690  015328  2E0C               	decfsz	(btemp+11)^0,f,c
 23691  01532A  D7FB               	goto	u9135
 23692  01532C  A009               	btfss	(btemp+8)^0,0,c
 23693  01532E  D087               	goto	l9631
 23694                           
 23695                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 23696  015330  0060  F493  FFE6   	movff	_R+36,postinc1
 23697  015336  0060  F497  FFE6   	movff	_R+37,postinc1
 23698  01533C  0060  F49B  FFE6   	movff	_R+38,postinc1
 23699  015342  0060  F49F  FFE6   	movff	_R+39,postinc1
 23700  015348  0E7B               	movlw	123
 23701  01534A  6EE6               	movwf	postinc1,c
 23702  01534C  0E14               	movlw	20
 23703  01534E  6EE6               	movwf	postinc1,c
 23704  015350  0EAE               	movlw	174
 23705  015352  6EE6               	movwf	postinc1,c
 23706  015354  0E3D               	movlw	61
 23707  015356  6EE6               	movwf	postinc1,c
 23708  015358  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 23709  01535E  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 23710  015364  0E00               	movlw	0
 23711  015366  BE0A               	btfsc	(btemp+9)^0,7,c
 23712  015368  0EFF               	movlw	255
 23713  01536A  6E0B               	movwf	(btemp+10)^0,c
 23714  01536C  6E0C               	movwf	(btemp+11)^0,c
 23715  01536E  0060  F027  FFE6   	movff	btemp+8,postinc1
 23716  015374  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23717  01537A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23718  015380  0060  F033  FFE6   	movff	btemp+11,postinc1
 23719  015386  0E01               	movlw	1
 23720  015388  6EE6               	movwf	postinc1,c
 23721  01538A  EC29  F0C2         	call	___xxtofl	;wreg free
 23722  01538E  0060  F007  FFE6   	movff	btemp,postinc1
 23723  015394  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23724  01539A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23725  0153A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23726                           
 23727                           ;stkvar	_chan @ sp[(-12)+-1]
 23728  0153A6  0EF3               	movlw	-13
 23729  0153A8  50E3               	movf	plusw1,w,c
 23730  0153AA  6EE6               	movwf	postinc1,c
 23731  0153AC  ECEA  F0DE         	call	_get_raw_result	;wreg free
 23732  0153B0  0060  F004  F00B   	movff	btemp,btemp+10
 23733  0153B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23734  0153BC  500B               	movf	(btemp+10)^0,w,c
 23735  0153BE  6E05               	movwf	(btemp+4)^0,c
 23736  0153C0  500C               	movf	(btemp+11)^0,w,c
 23737  0153C2  6E06               	movwf	(btemp+5)^0,c
 23738  0153C4  6A07               	clrf	(btemp+6)^0,c
 23739  0153C6  6A08               	clrf	(btemp+7)^0,c
 23740  0153C8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23741  0153CE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23742  0153D4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23743  0153DA  0060  F023  FFE6   	movff	btemp+7,postinc1
 23744  0153E0  0E00               	movlw	0
 23745  0153E2  6EE6               	movwf	postinc1,c
 23746  0153E4  EC29  F0C2         	call	___xxtofl	;wreg free
 23747  0153E8  0060  F007  FFE6   	movff	btemp,postinc1
 23748  0153EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23749  0153F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23750  0153FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23751  015400  EC95  F0DA         	call	___flsub	;wreg free
 23752  015404  0060  F007  FFE6   	movff	btemp,postinc1
 23753  01540A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23754  015410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23755  015416  0060  F013  FFE6   	movff	btemp+3,postinc1
 23756  01541C  ECAD  F09E         	call	___flmul	;wreg free
 23757  015420  0060  F007  FFE6   	movff	btemp,postinc1
 23758  015426  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23759  01542C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23760  015432  0060  F013  FFE6   	movff	btemp+3,postinc1
 23761  015438  ECC2  F0A2         	call	___fladd	;wreg free
 23762  01543C  D1C5               	goto	l1784
 23763  01543E                     l9631:
 23764                           
 23765                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 23766  01543E  0060  F4A3  FFE6   	movff	_R+40,postinc1
 23767  015444  0060  F4A7  FFE6   	movff	_R+41,postinc1
 23768  01544A  0060  F4AB  FFE6   	movff	_R+42,postinc1
 23769  015450  0060  F4AF  FFE6   	movff	_R+43,postinc1
 23770  015456  0E29               	movlw	41
 23771  015458  6EE6               	movwf	postinc1,c
 23772  01545A  0E5C               	movlw	92
 23773  01545C  6EE6               	movwf	postinc1,c
 23774  01545E  0E0F               	movlw	15
 23775  015460  6EE6               	movwf	postinc1,c
 23776  015462  0E3D               	movlw	61
 23777  015464  6EE6               	movwf	postinc1,c
 23778  015466  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 23779  01546C  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 23780  015472  0E00               	movlw	0
 23781  015474  BE0A               	btfsc	(btemp+9)^0,7,c
 23782  015476  0EFF               	movlw	255
 23783  015478  6E0B               	movwf	(btemp+10)^0,c
 23784  01547A  6E0C               	movwf	(btemp+11)^0,c
 23785  01547C  0060  F027  FFE6   	movff	btemp+8,postinc1
 23786  015482  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23787  015488  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23788  01548E  0060  F033  FFE6   	movff	btemp+11,postinc1
 23789  015494  0E01               	movlw	1
 23790  015496  6EE6               	movwf	postinc1,c
 23791  015498  EC29  F0C2         	call	___xxtofl	;wreg free
 23792  01549C  0060  F007  FFE6   	movff	btemp,postinc1
 23793  0154A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23794  0154A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23795  0154AE  0060  F013  FFE6   	movff	btemp+3,postinc1
 23796                           
 23797                           ;stkvar	_chan @ sp[(-12)+-1]
 23798  0154B4  0EF3               	movlw	-13
 23799  0154B6  50E3               	movf	plusw1,w,c
 23800  0154B8  6EE6               	movwf	postinc1,c
 23801  0154BA  ECEA  F0DE         	call	_get_raw_result	;wreg free
 23802  0154BE  0060  F004  F00B   	movff	btemp,btemp+10
 23803  0154C4  0060  F008  F00C   	movff	btemp+1,btemp+11
 23804  0154CA  500B               	movf	(btemp+10)^0,w,c
 23805  0154CC  6E05               	movwf	(btemp+4)^0,c
 23806  0154CE  500C               	movf	(btemp+11)^0,w,c
 23807  0154D0  6E06               	movwf	(btemp+5)^0,c
 23808  0154D2  6A07               	clrf	(btemp+6)^0,c
 23809  0154D4  6A08               	clrf	(btemp+7)^0,c
 23810  0154D6  0060  F017  FFE6   	movff	btemp+4,postinc1
 23811  0154DC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23812  0154E2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23813  0154E8  0060  F023  FFE6   	movff	btemp+7,postinc1
 23814  0154EE  0E00               	movlw	0
 23815  0154F0  6EE6               	movwf	postinc1,c
 23816  0154F2  EC29  F0C2         	call	___xxtofl	;wreg free
 23817  0154F6  0060  F007  FFE6   	movff	btemp,postinc1
 23818  0154FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23819  015502  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23820  015508  0060  F013  FFE6   	movff	btemp+3,postinc1
 23821  01550E  EC95  F0DA         	call	___flsub	;wreg free
 23822  015512  0060  F007  FFE6   	movff	btemp,postinc1
 23823  015518  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23824  01551E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23825  015524  0060  F013  FFE6   	movff	btemp+3,postinc1
 23826  01552A  ECAD  F09E         	call	___flmul	;wreg free
 23827  01552E  0060  F007  FFE6   	movff	btemp,postinc1
 23828  015534  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23829  01553A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23830  015540  0060  F013  FFE6   	movff	btemp+3,postinc1
 23831  015546  ECC2  F0A2         	call	___fladd	;wreg free
 23832  01554A  D13E               	goto	l1784
 23833  01554C                     l9635:
 23834                           
 23835                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 23836                           ;stkvar	_chan @ sp[(0)+-1]
 23837  01554C  0EFF               	movlw	-1
 23838  01554E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23839  015554  0E00               	movlw	0
 23840  015556  6E09               	movwf	(btemp+8)^0,c
 23841  015558  0E08               	movlw	8
 23842  01555A  6E0A               	movwf	(btemp+9)^0,c
 23843  01555C  2A0C               	incf	(btemp+11)^0,f,c
 23844  01555E  D003               	goto	u9154
 23845  015560                     u9155:
 23846  015560  340A               	rlcf	(btemp+9)^0,w,c
 23847  015562  320A               	rrcf	(btemp+9)^0,f,c
 23848  015564  3209               	rrcf	(btemp+8)^0,f,c
 23849  015566                     u9154:
 23850  015566  2E0C               	decfsz	(btemp+11)^0,f,c
 23851  015568  D7FB               	goto	u9155
 23852  01556A  A009               	btfss	(btemp+8)^0,0,c
 23853  01556C  D008               	goto	l9643
 23854                           
 23855                           ;daq.c: 114:     return 25.0;
 23856  01556E  0E00               	movlw	0
 23857  015570  6E01               	movwf	btemp^0,c
 23858  015572  0E00               	movlw	0
 23859  015574  6E02               	movwf	(btemp+1)^0,c
 23860  015576  0EC8               	movlw	200
 23861  015578  6E03               	movwf	(btemp+2)^0,c
 23862  01557A  0E41               	movlw	65
 23863  01557C  D113               	goto	L29
 23864  01557E                     l9643:
 23865                           
 23866                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23867  01557E  0E00               	movlw	0
 23868  015580  6EE6               	movwf	postinc1,c
 23869  015582  0E00               	movlw	0
 23870  015584  6EE6               	movwf	postinc1,c
 23871  015586  0E7A               	movlw	122
 23872  015588  6EE6               	movwf	postinc1,c
 23873  01558A  0E44               	movlw	68
 23874  01558C  6EE6               	movwf	postinc1,c
 23875  01558E  0E61               	movlw	97
 23876  015590  6EE6               	movwf	postinc1,c
 23877  015592  0E03               	movlw	3
 23878  015594  6EE6               	movwf	postinc1,c
 23879  015596  0E84               	movlw	132
 23880  015598  6EE6               	movwf	postinc1,c
 23881  01559A  0E40               	movlw	64
 23882  01559C  6EE6               	movwf	postinc1,c
 23883                           
 23884                           ;stkvar	_chan @ sp[(-8)+-1]
 23885  01559E  0EF7               	movlw	-9
 23886  0155A0  50E3               	movf	plusw1,w,c
 23887  0155A2  6EE6               	movwf	postinc1,c
 23888  0155A4  ECEA  F0DE         	call	_get_raw_result	;wreg free
 23889  0155A8  0060  F004  F00B   	movff	btemp,btemp+10
 23890  0155AE  0060  F008  F00C   	movff	btemp+1,btemp+11
 23891  0155B4  500B               	movf	(btemp+10)^0,w,c
 23892  0155B6  6E05               	movwf	(btemp+4)^0,c
 23893  0155B8  500C               	movf	(btemp+11)^0,w,c
 23894  0155BA  6E06               	movwf	(btemp+5)^0,c
 23895  0155BC  6A07               	clrf	(btemp+6)^0,c
 23896  0155BE  6A08               	clrf	(btemp+7)^0,c
 23897  0155C0  0060  F017  FFE6   	movff	btemp+4,postinc1
 23898  0155C6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23899  0155CC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23900  0155D2  0060  F023  FFE6   	movff	btemp+7,postinc1
 23901  0155D8  0E00               	movlw	0
 23902  0155DA  6EE6               	movwf	postinc1,c
 23903  0155DC  EC29  F0C2         	call	___xxtofl	;wreg free
 23904  0155E0  0060  F007  FFE6   	movff	btemp,postinc1
 23905  0155E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23906  0155EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23907  0155F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23908  0155F8  ECAD  F09E         	call	___flmul	;wreg free
 23909  0155FC  0060  F007  FFE6   	movff	btemp,postinc1
 23910  015602  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23911  015608  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23912  01560E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23913  015614  ECA0  F0A6         	call	___fldiv	;wreg free
 23914  015618  D0D7               	goto	l1784
 23915  01561A                     l9647:
 23916                           
 23917                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23918                           ;stkvar	_chan @ sp[(0)+-1]
 23919  01561A  0EFF               	movlw	-1
 23920  01561C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23921  015622  0E03               	movlw	3
 23922  015624  6E09               	movwf	(btemp+8)^0,c
 23923  015626  0E00               	movlw	0
 23924  015628  6E0A               	movwf	(btemp+9)^0,c
 23925  01562A  2A0C               	incf	(btemp+11)^0,f,c
 23926  01562C  D003               	goto	u9174
 23927  01562E                     u9175:
 23928  01562E  340A               	rlcf	(btemp+9)^0,w,c
 23929  015630  320A               	rrcf	(btemp+9)^0,f,c
 23930  015632  3209               	rrcf	(btemp+8)^0,f,c
 23931  015634                     u9174:
 23932  015634  2E0C               	decfsz	(btemp+11)^0,f,c
 23933  015636  D7FB               	goto	u9175
 23934  015638  B009               	btfsc	(btemp+8)^0,0,c
 23935  01563A  D011               	goto	u9200
 23936                           
 23937                           ;stkvar	_chan @ sp[(0)+-1]
 23938  01563C  0EFF               	movlw	-1
 23939  01563E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23940  015644  0E00               	movlw	0
 23941  015646  6E09               	movwf	(btemp+8)^0,c
 23942  015648  0E08               	movlw	8
 23943  01564A  6E0A               	movwf	(btemp+9)^0,c
 23944  01564C  2A0C               	incf	(btemp+11)^0,f,c
 23945  01564E  D003               	goto	u9194
 23946  015650                     u9195:
 23947  015650  340A               	rlcf	(btemp+9)^0,w,c
 23948  015652  320A               	rrcf	(btemp+9)^0,f,c
 23949  015654  3209               	rrcf	(btemp+8)^0,f,c
 23950  015656                     u9194:
 23951  015656  2E0C               	decfsz	(btemp+11)^0,f,c
 23952  015658  D7FB               	goto	u9195
 23953  01565A  A009               	btfss	(btemp+8)^0,0,c
 23954  01565C  D04E               	goto	l9655
 23955  01565E                     u9200:
 23956                           
 23957                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23958  01565E  0E00               	movlw	0
 23959  015660  6EE6               	movwf	postinc1,c
 23960  015662  0E00               	movlw	0
 23961  015664  6EE6               	movwf	postinc1,c
 23962  015666  0E7A               	movlw	122
 23963  015668  6EE6               	movwf	postinc1,c
 23964  01566A  0E44               	movlw	68
 23965  01566C  6EE6               	movwf	postinc1,c
 23966  01566E  0E00               	movlw	0
 23967  015670  6EE6               	movwf	postinc1,c
 23968  015672  0E00               	movlw	0
 23969  015674  6EE6               	movwf	postinc1,c
 23970  015676  0E20               	movlw	32
 23971  015678  6EE6               	movwf	postinc1,c
 23972  01567A  0E3F               	movlw	63
 23973  01567C  6EE6               	movwf	postinc1,c
 23974                           
 23975                           ;stkvar	_chan @ sp[(-8)+-1]
 23976  01567E  0EF7               	movlw	-9
 23977  015680  50E3               	movf	plusw1,w,c
 23978  015682  6EE6               	movwf	postinc1,c
 23979  015684  ECEA  F0DE         	call	_get_raw_result	;wreg free
 23980  015688  0060  F004  F00B   	movff	btemp,btemp+10
 23981  01568E  0060  F008  F00C   	movff	btemp+1,btemp+11
 23982  015694  500B               	movf	(btemp+10)^0,w,c
 23983  015696  6E05               	movwf	(btemp+4)^0,c
 23984  015698  500C               	movf	(btemp+11)^0,w,c
 23985  01569A  6E06               	movwf	(btemp+5)^0,c
 23986  01569C  6A07               	clrf	(btemp+6)^0,c
 23987  01569E  6A08               	clrf	(btemp+7)^0,c
 23988  0156A0  0060  F017  FFE6   	movff	btemp+4,postinc1
 23989  0156A6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23990  0156AC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23991  0156B2  0060  F023  FFE6   	movff	btemp+7,postinc1
 23992  0156B8  0E00               	movlw	0
 23993  0156BA  6EE6               	movwf	postinc1,c
 23994  0156BC  EC29  F0C2         	call	___xxtofl	;wreg free
 23995  0156C0  0060  F007  FFE6   	movff	btemp,postinc1
 23996  0156C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23997  0156CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23998  0156D2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23999  0156D8  ECAD  F09E         	call	___flmul	;wreg free
 24000  0156DC  0060  F007  FFE6   	movff	btemp,postinc1
 24001  0156E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24002  0156E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24003  0156EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24004  0156F4  ECA0  F0A6         	call	___fldiv	;wreg free
 24005  0156F8  D067               	goto	l1784
 24006  0156FA                     l9655:
 24007                           
 24008                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24009  0156FA  0E00               	movlw	0
 24010  0156FC  6EE6               	movwf	postinc1,c
 24011  0156FE  0E00               	movlw	0
 24012  015700  6EE6               	movwf	postinc1,c
 24013  015702  0E7A               	movlw	122
 24014  015704  6EE6               	movwf	postinc1,c
 24015  015706  0E44               	movlw	68
 24016  015708  6EE6               	movwf	postinc1,c
 24017  01570A  0E61               	movlw	97
 24018  01570C  6EE6               	movwf	postinc1,c
 24019  01570E  0E03               	movlw	3
 24020  015710  6EE6               	movwf	postinc1,c
 24021  015712  0E84               	movlw	132
 24022  015714  6EE6               	movwf	postinc1,c
 24023  015716  0E40               	movlw	64
 24024  015718  6EE6               	movwf	postinc1,c
 24025                           
 24026                           ;stkvar	_chan @ sp[(-8)+-1]
 24027  01571A  0EF7               	movlw	-9
 24028  01571C  50E3               	movf	plusw1,w,c
 24029  01571E  6EE6               	movwf	postinc1,c
 24030  015720  ECEA  F0DE         	call	_get_raw_result	;wreg free
 24031  015724  0060  F004  F00B   	movff	btemp,btemp+10
 24032  01572A  0060  F008  F00C   	movff	btemp+1,btemp+11
 24033  015730  500B               	movf	(btemp+10)^0,w,c
 24034  015732  6E05               	movwf	(btemp+4)^0,c
 24035  015734  500C               	movf	(btemp+11)^0,w,c
 24036  015736  6E06               	movwf	(btemp+5)^0,c
 24037  015738  6A07               	clrf	(btemp+6)^0,c
 24038  01573A  6A08               	clrf	(btemp+7)^0,c
 24039  01573C  0060  F017  FFE6   	movff	btemp+4,postinc1
 24040  015742  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24041  015748  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24042  01574E  0060  F023  FFE6   	movff	btemp+7,postinc1
 24043  015754  0E00               	movlw	0
 24044  015756  6EE6               	movwf	postinc1,c
 24045  015758  EC29  F0C2         	call	___xxtofl	;wreg free
 24046  01575C  0060  F007  FFE6   	movff	btemp,postinc1
 24047  015762  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24048  015768  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24049  01576E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24050  015774  ECAD  F09E         	call	___flmul	;wreg free
 24051  015778  0060  F007  FFE6   	movff	btemp,postinc1
 24052  01577E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24053  015784  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24054  01578A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24055  015790  ECA0  F0A6         	call	___fldiv	;wreg free
 24056  015794  D019               	goto	l1784
 24057  015796                     l9661:
 24058                           
 24059                           ;daq.c: 127:   return 0.0;
 24060  015796  0E00               	movlw	0
 24061  015798  6E01               	movwf	btemp^0,c
 24062  01579A  0E00               	movlw	0
 24063  01579C  6E02               	movwf	(btemp+1)^0,c
 24064  01579E  0E00               	movlw	0
 24065  0157A0  6E03               	movwf	(btemp+2)^0,c
 24066  0157A2  0E00               	movlw	0
 24067  0157A4                     L29:
 24068  0157A4  6E04               	movwf	(btemp+3)^0,c
 24069  0157A6  D010               	goto	l1784
 24070  0157A8                     l9669:
 24071                           
 24072                           ;stkvar	_to_what @ sp[(0)+-2]
 24073  0157A8  0EFE               	movlw	-2
 24074  0157AA  50E3               	movf	plusw1,w,c
 24075  0157AC  6E0B               	movwf	(btemp+10)^0,c
 24076  0157AE  6A0C               	clrf	(btemp+11)^0,c
 24077                           
 24078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24079                           ; Switch size 1, requested type "simple"
 24080                           ; Number of cases is 1, Range of values is 0 to 0
 24081                           ; switch strategies available:
 24082                           ; Name         Instructions Cycles
 24083                           ; simple_byte            4     3 (average)
 24084                           ;	Chosen strategy is simple_byte
 24085  0157B0  500C               	movf	(btemp+11)^0,w,c
 24086  0157B2  0A00               	xorlw	0	; case 0
 24087  0157B4  A4D8               	btfss	status,2,c
 24088  0157B6  D7EF               	goto	l9661
 24089                           
 24090                           ; Switch size 1, requested type "simple"
 24091                           ; Number of cases is 2, Range of values is 0 to 1
 24092                           ; switch strategies available:
 24093                           ; Name         Instructions Cycles
 24094                           ; simple_byte            7     4 (average)
 24095                           ;	Chosen strategy is simple_byte
 24096  0157B8  500B               	movf	(btemp+10)^0,w,c
 24097  0157BA  0A00               	xorlw	0	; case 0
 24098  0157BC  B4D8               	btfsc	status,2,c
 24099  0157BE  D57E               	goto	l9615
 24100  0157C0  0A01               	xorlw	1	; case 1
 24101  0157C2  B4D8               	btfsc	status,2,c
 24102  0157C4  D72A               	goto	l9647
 24103  0157C6  D7E7               	goto	l9661
 24104  0157C8                     l1784:
 24105                           
 24106                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24107  0157C8  52E5               	movf	postdec1,f,c
 24108  0157CA  52E5               	movf	postdec1,f,c
 24109  0157CC  0012               	return		;funcret
 24110  0157CE                     __end_of_conv_raw_result:
 24111                           	opt callstack 0
 24112                           
 24113 ;; *************** function _nanf *****************
 24114 ;; Defined at:
 24115 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24116 ;; Parameters:    Size  Location     Type
 24117 ;;  s               2  [STACK] PTR const unsigned char 
 24118 ;;		 -> STR_102(1), STR_64(1), 
 24119 ;; Auto vars:     Size  Location     Type
 24120 ;;  u               4  [STACK] struct .
 24121 ;; Return value:  Size  Location     Type
 24122 ;;                  4  [STACK] float 
 24123 ;; Registers used:
 24124 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24125 ;; Tracked objects:
 24126 ;;		On entry : 0/39
 24127 ;;		On exit  : 0/0
 24128 ;;		Unchanged: 0/0
 24129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24134 ;;Total ram usage:        0 bytes
 24135 ;; Hardware stack levels used:    1
 24136 ;; Hardware stack levels required when called:   15
 24137 ;; This function calls:
 24138 ;;		Nothing
 24139 ;; This function is called by:
 24140 ;;		_conv_raw_result
 24141 ;; This function uses a reentrant model
 24142 ;;
 24143                           
 24144                           	psect	text95
 24145  01B066                     __ptext95:
 24146                           	opt callstack 0
 24147  01B066                     _nanf:
 24148                           	opt callstack 0
 24149                           
 24150                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24151  01B066  52E6               	movf	postinc1,f,c
 24152  01B068  52E6               	movf	postinc1,f,c
 24153  01B06A  52E6               	movf	postinc1,f,c
 24154  01B06C  52E6               	movf	postinc1,f,c
 24155                           
 24156                           ;incstack = 0
 24157 ;; hardware stack exceeded
 24158  01B06E  0EFF               	movlw	255
 24159  01B070  6E09               	movwf	(btemp+8)^0,c
 24160  01B072  0EFF               	movlw	255
 24161  01B074  6E0A               	movwf	(btemp+9)^0,c
 24162  01B076  0EFF               	movlw	255
 24163  01B078  6E0B               	movwf	(btemp+10)^0,c
 24164  01B07A  0E7F               	movlw	127
 24165  01B07C  6E0C               	movwf	(btemp+11)^0,c
 24166                           
 24167                           ;stkvar	_u @ sp[(-4)+0]
 24168  01B07E  0EFC               	movlw	-4
 24169  01B080  0060  F027  FFE3   	movff	btemp+8,plusw1
 24170  01B086  0EFD               	movlw	-3
 24171  01B088  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24172  01B08E  0EFE               	movlw	-2
 24173  01B090  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24174  01B096  0EFF               	movlw	-1
 24175  01B098  0060  F033  FFE3   	movff	btemp+11,plusw1
 24176                           
 24177                           ;stkvar	_u @ sp[(-4)+0]
 24178  01B09E  0EFC               	movlw	-4
 24179  01B0A0  006F FF8C  F001    	movff	plusw1,btemp
 24180  01B0A6  0EFD               	movlw	-3
 24181  01B0A8  006F FF8C  F002    	movff	plusw1,btemp+1
 24182  01B0AE  0EFE               	movlw	-2
 24183  01B0B0  006F FF8C  F003    	movff	plusw1,btemp+2
 24184  01B0B6  0EFF               	movlw	-1
 24185  01B0B8  006F FF8C  F004    	movff	plusw1,btemp+3
 24186                           
 24187                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24188  01B0BE  0EFA               	movlw	250
 24189  01B0C0  26E1               	addwf	fsr1l,f,c
 24190  01B0C2  0EFF               	movlw	255
 24191  01B0C4  22E2               	addwfc	fsr1h,f,c
 24192  01B0C6  0012               	return		;funcret
 24193  01B0C8                     __end_of_nanf:
 24194                           	opt callstack 0
 24195                           
 24196 ;; *************** function _get_raw_result *****************
 24197 ;; Defined at:
 24198 ;;		line 90 in file "daq.c"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;  index           1  [STACK] const enum E16582
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;		None
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  2  [STACK] unsigned short 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/1
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24216 ;;Total ram usage:        0 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:   15
 24219 ;; This function calls:
 24220 ;;		Nothing
 24221 ;; This function is called by:
 24222 ;;		_main
 24223 ;;		_conv_raw_result
 24224 ;; This function uses a reentrant model
 24225 ;;
 24226                           
 24227                           	psect	text96
 24228  01BDD4                     __ptext96:
 24229                           	opt callstack 0
 24230  01BDD4                     _get_raw_result:
 24231                           	opt callstack 0
 24232                           
 24233                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24234                           ;stkvar	_index @ sp[(0)+-1]
 24235                           
 24236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24237                           ;incstack = 0
 24238 ;; hardware stack exceeded
 24239  01BDD4  0EFF               	movlw	-1
 24240  01BDD6  50E3               	movf	plusw1,w,c
 24241  01BDD8  0D02               	mullw	2
 24242  01BDDA  0E00               	movlw	low _R
 24243  01BDDC  24F3               	addwf	243,w,c
 24244  01BDDE  6ED9               	movwf	fsr2l,c
 24245  01BDE0  0E01               	movlw	high _R
 24246  01BDE2  20F4               	addwfc	prodh,w,c
 24247  01BDE4  6EDA               	movwf	fsr2h,c
 24248  01BDE6  006F FF78  F001    	movff	postinc2,btemp
 24249  01BDEC  006F FF74  F002    	movff	postdec2,btemp+1
 24250                           
 24251                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24252  01BDF2  52E5               	movf	postdec1,f,c
 24253  01BDF4  0012               	return		;funcret
 24254  01BDF6                     __end_of_get_raw_result:
 24255                           	opt callstack 0
 24256                           
 24257 ;; *************** function ___xxtofl *****************
 24258 ;; Defined at:
 24259 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24260 ;; Parameters:    Size  Location     Type
 24261 ;;  sign            1  [STACK] unsigned char 
 24262 ;;  val             4  [STACK] long 
 24263 ;; Auto vars:     Size  Location     Type
 24264 ;;  arg             4  [STACK] unsigned long 
 24265 ;;  exp             1  [STACK] unsigned char 
 24266 ;; Return value:  Size  Location     Type
 24267 ;;                  4  [STACK] unsigned char 
 24268 ;; Registers used:
 24269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24270 ;; Tracked objects:
 24271 ;;		On entry : 0/1
 24272 ;;		On exit  : 0/0
 24273 ;;		Unchanged: 0/0
 24274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24279 ;;Total ram usage:        0 bytes
 24280 ;; Hardware stack levels used:    1
 24281 ;; Hardware stack levels required when called:   15
 24282 ;; This function calls:
 24283 ;;		Nothing
 24284 ;; This function is called by:
 24285 ;;		_conv_raw_result
 24286 ;;		_init_bsoc
 24287 ;;		_Volts_to_SOC
 24288 ;; This function uses a reentrant model
 24289 ;;
 24290                           
 24291                           	psect	text97
 24292  018452                     __ptext97:
 24293                           	opt callstack 0
 24294  018452                     ___xxtofl:
 24295                           	opt callstack 0
 24296                           
 24297                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24298  018452  0E05               	movlw	5
 24299  018454  26E1               	addwf	fsr1l,f,c
 24300  018456  0E00               	movlw	0
 24301  018458  22E2               	addwfc	fsr1h,f,c
 24302                           
 24303                           ;stkvar	_sign @ sp[(-5)+-1]
 24304                           
 24305                           ;incstack = 0
 24306 ;; hardware stack exceeded
 24307  01845A  0EFA               	movlw	-6
 24308  01845C  50E3               	movf	plusw1,w,c
 24309  01845E  B4D8               	btfsc	status,2,c
 24310  018460  D01D               	goto	l9563
 24311                           
 24312                           ;stkvar	_val @ sp[(-5)+-5]
 24313  018462  0EF9               	movlw	-7
 24314  018464  AEE3               	btfss	plusw1,7,c
 24315  018466  D01A               	goto	l9563
 24316                           
 24317                           ;stkvar	_val @ sp[(-5)+-5]
 24318  018468  0EF6               	movlw	-10
 24319  01846A  006F FF8C  F009    	movff	plusw1,btemp+8
 24320  018470  0EF7               	movlw	-9
 24321  018472  006F FF8C  F00A    	movff	plusw1,btemp+9
 24322  018478  0EF8               	movlw	-8
 24323  01847A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24324  018480  0EF9               	movlw	-7
 24325  018482  006F FF8C  F00C    	movff	plusw1,btemp+11
 24326  018488  1E09               	comf	(btemp+8)^0,f,c
 24327  01848A  1E0A               	comf	(btemp+9)^0,f,c
 24328  01848C  1E0B               	comf	(btemp+10)^0,f,c
 24329  01848E  1E0C               	comf	(btemp+11)^0,f,c
 24330  018490  2A09               	incf	(btemp+8)^0,f,c
 24331  018492  0E00               	movlw	0
 24332  018494  220A               	addwfc	(btemp+9)^0,f,c
 24333  018496  220B               	addwfc	(btemp+10)^0,f,c
 24334  018498  220C               	addwfc	(btemp+11)^0,f,c
 24335  01849A  D010               	goto	L30
 24336  01849C                     l9563:
 24337                           
 24338                           ;stkvar	_val @ sp[(-5)+-5]
 24339  01849C  0EF6               	movlw	-10
 24340  01849E  006F FF8C  F009    	movff	plusw1,btemp+8
 24341  0184A4  0EF7               	movlw	-9
 24342  0184A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 24343  0184AC  0EF8               	movlw	-8
 24344  0184AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24345  0184B4  0EF9               	movlw	-7
 24346  0184B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24347  0184BC                     L30:
 24348                           
 24349                           ;stkvar	_arg @ sp[(-5)+0]
 24350  0184BC  0EFB               	movlw	-5
 24351  0184BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24352  0184C4  0EFC               	movlw	-4
 24353  0184C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24354  0184CC  0EFD               	movlw	-3
 24355  0184CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24356  0184D4  0EFE               	movlw	-2
 24357  0184D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24358                           
 24359                           ;stkvar	_val @ sp[(-5)+-5]
 24360  0184DC  0EF6               	movlw	-10
 24361  0184DE  50E3               	movf	plusw1,w,c
 24362  0184E0  E113               	bnz	l9571
 24363  0184E2  0EF7               	movlw	-9
 24364  0184E4  50E3               	movf	plusw1,w,c
 24365  0184E6  E110               	bnz	l9571
 24366  0184E8  0EF8               	movlw	-8
 24367  0184EA  50E3               	movf	plusw1,w,c
 24368  0184EC  E10D               	bnz	l9571
 24369  0184EE  0EF9               	movlw	-7
 24370  0184F0  50E3               	movf	plusw1,w,c
 24371  0184F2  A4D8               	btfss	status,2,c
 24372  0184F4  D009               	goto	l9571
 24373  0184F6  0E00               	movlw	0
 24374  0184F8  6E01               	movwf	btemp^0,c
 24375  0184FA  0E00               	movlw	0
 24376  0184FC  6E02               	movwf	(btemp+1)^0,c
 24377  0184FE  0E00               	movlw	0
 24378  018500  6E03               	movwf	(btemp+2)^0,c
 24379  018502  0E00               	movlw	0
 24380  018504  6E04               	movwf	(btemp+3)^0,c
 24381  018506  D0A2               	goto	l3062
 24382  018508                     l9571:
 24383  018508  0E96               	movlw	150
 24384  01850A  6E0C               	movwf	(btemp+11)^0,c
 24385                           
 24386                           ;stkvar	_exp @ sp[(-5)+4]
 24387  01850C  0EFF               	movlw	-1
 24388  01850E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24389  018514  D00B               	goto	l9575
 24390  018516                     l9573:
 24391                           
 24392                           ;stkvar	_exp @ sp[(-5)+4]
 24393  018516  0EFF               	movlw	-1
 24394  018518  2AE3               	incf	plusw1,f,c
 24395                           
 24396                           ;stkvar	_arg @ sp[(-5)+0]
 24397  01851A  90D8               	bcf	status,0,c
 24398  01851C  0EFE               	movlw	-2
 24399  01851E  32E3               	rrcf	plusw1,f,c
 24400  018520  0EFD               	movlw	-3
 24401  018522  32E3               	rrcf	plusw1,f,c
 24402  018524  0EFC               	movlw	-4
 24403  018526  32E3               	rrcf	plusw1,f,c
 24404  018528  0EFB               	movlw	-5
 24405  01852A  32E3               	rrcf	plusw1,f,c
 24406  01852C                     l9575:
 24407                           
 24408                           ;stkvar	_arg @ sp[(-5)+0]
 24409  01852C  50E1               	movf	fsr1l,w,c
 24410  01852E  0FFB               	addlw	-5
 24411  018530  6ED9               	movwf	fsr2l,c
 24412  018532  50E2               	movf	fsr1h,w,c
 24413  018534  6EDA               	movwf	fsr2h,c
 24414  018536  0EFF               	movlw	255
 24415  018538  22DA               	addwfc	fsr2h,f,c
 24416  01853A  52DE               	movf	postinc2,f,c
 24417  01853C  52DE               	movf	postinc2,f,c
 24418  01853E  52DE               	movf	postinc2,f,c
 24419  018540  0EFE               	movlw	254
 24420  018542  14DD               	andwf	postdec2,w,c
 24421  018544  B4D8               	btfsc	status,2,c
 24422  018546  D018               	goto	l9583
 24423  018548  D7E6               	goto	l9573
 24424  01854A                     l9577:
 24425                           
 24426                           ;stkvar	_exp @ sp[(-5)+4]
 24427  01854A  0EFF               	movlw	-1
 24428  01854C  2AE3               	incf	plusw1,f,c
 24429                           
 24430                           ;stkvar	_arg @ sp[(-5)+0]
 24431  01854E  50E1               	movf	fsr1l,w,c
 24432  018550  0FFB               	addlw	-5
 24433  018552  6ED9               	movwf	fsr2l,c
 24434  018554  50E2               	movf	fsr1h,w,c
 24435  018556  6EDA               	movwf	fsr2h,c
 24436  018558  0EFF               	movlw	255
 24437  01855A  22DA               	addwfc	fsr2h,f,c
 24438  01855C  2ADE               	incf	postinc2,f,c
 24439  01855E  0E00               	movlw	0
 24440  018560  22DE               	addwfc	postinc2,f,c
 24441  018562  22DE               	addwfc	postinc2,f,c
 24442  018564  22DE               	addwfc	postinc2,f,c
 24443                           
 24444                           ;stkvar	_arg @ sp[(-5)+0]
 24445  018566  90D8               	bcf	status,0,c
 24446  018568  0EFE               	movlw	-2
 24447  01856A  32E3               	rrcf	plusw1,f,c
 24448  01856C  0EFD               	movlw	-3
 24449  01856E  32E3               	rrcf	plusw1,f,c
 24450  018570  0EFC               	movlw	-4
 24451  018572  32E3               	rrcf	plusw1,f,c
 24452  018574  0EFB               	movlw	-5
 24453  018576  32E3               	rrcf	plusw1,f,c
 24454  018578                     l9583:
 24455                           
 24456                           ;stkvar	_arg @ sp[(-5)+0]
 24457  018578  50E1               	movf	fsr1l,w,c
 24458  01857A  0FFB               	addlw	-5
 24459  01857C  6ED9               	movwf	fsr2l,c
 24460  01857E  50E2               	movf	fsr1h,w,c
 24461  018580  6EDA               	movwf	fsr2h,c
 24462  018582  0EFF               	movlw	255
 24463  018584  22DA               	addwfc	fsr2h,f,c
 24464  018586  52DE               	movf	postinc2,f,c
 24465  018588  52DE               	movf	postinc2,f,c
 24466  01858A  52DE               	movf	postinc2,f,c
 24467  01858C  0EFF               	movlw	255
 24468  01858E  14DD               	andwf	postdec2,w,c
 24469  018590  B4D8               	btfsc	status,2,c
 24470  018592  D00C               	goto	l9587
 24471  018594  D7DA               	goto	l9577
 24472  018596                     l9585:
 24473                           
 24474                           ;stkvar	_exp @ sp[(-5)+4]
 24475  018596  0EFF               	movlw	-1
 24476  018598  06E3               	decf	plusw1,f,c
 24477                           
 24478                           ;stkvar	_arg @ sp[(-5)+0]
 24479  01859A  90D8               	bcf	status,0,c
 24480  01859C  0EFB               	movlw	-5
 24481  01859E  36E3               	rlcf	plusw1,f,c
 24482  0185A0  0EFC               	movlw	-4
 24483  0185A2  36E3               	rlcf	plusw1,f,c
 24484  0185A4  0EFD               	movlw	-3
 24485  0185A6  36E3               	rlcf	plusw1,f,c
 24486  0185A8  0EFE               	movlw	-2
 24487  0185AA  36E3               	rlcf	plusw1,f,c
 24488  0185AC                     l9587:
 24489                           
 24490                           ;stkvar	_arg @ sp[(-5)+0]
 24491  0185AC  0EFD               	movlw	-3
 24492  0185AE  BEE3               	btfsc	plusw1,7,c
 24493  0185B0  D007               	goto	u9050
 24494                           
 24495                           ;stkvar	_exp @ sp[(-5)+4]
 24496  0185B2  0EFF               	movlw	-1
 24497  0185B4  006F FF8C  F001    	movff	plusw1,btemp
 24498  0185BA  0E02               	movlw	2
 24499  0185BC  6001               	cpfslt	btemp^0,c
 24500  0185BE  D7EB               	goto	l9585
 24501  0185C0                     u9050:
 24502                           
 24503                           ;stkvar	_exp @ sp[(-5)+4]
 24504  0185C0  0EFF               	movlw	-1
 24505  0185C2  B0E3               	btfsc	plusw1,0,c
 24506  0185C4  D002               	goto	l9595
 24507                           
 24508                           ;stkvar	_arg @ sp[(-5)+0]
 24509  0185C6  0EFD               	movlw	-3
 24510  0185C8  9EE3               	bcf	plusw1,7,c
 24511  0185CA                     l9595:
 24512                           
 24513                           ;stkvar	_exp @ sp[(-5)+4]
 24514  0185CA  50E1               	movf	fsr1l,w,c
 24515  0185CC  0FFF               	addlw	-1
 24516  0185CE  6ED9               	movwf	fsr2l,c
 24517  0185D0  50E2               	movf	fsr1h,w,c
 24518  0185D2  6EDA               	movwf	fsr2h,c
 24519  0185D4  0EFF               	movlw	255
 24520  0185D6  22DA               	addwfc	fsr2h,f,c
 24521  0185D8  90D8               	bcf	status,0,c
 24522  0185DA  32DF               	rrcf	indf2,f,c
 24523                           
 24524                           ;stkvar	_exp @ sp[(-5)+4]
 24525  0185DC  0EFF               	movlw	-1
 24526  0185DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24527  0185E4  0060  F030  F005   	movff	btemp+11,btemp+4
 24528  0185EA  6A06               	clrf	(btemp+5)^0,c
 24529  0185EC  6A07               	clrf	(btemp+6)^0,c
 24530  0185EE  6A08               	clrf	(btemp+7)^0,c
 24531  0185F0  0060  F014  F008   	movff	btemp+4,btemp+7
 24532  0185F6  6A07               	clrf	(btemp+6)^0,c
 24533  0185F8  6A06               	clrf	(btemp+5)^0,c
 24534  0185FA  6A05               	clrf	(btemp+4)^0,c
 24535                           
 24536                           ;stkvar	_arg @ sp[(-5)+0]
 24537  0185FC  50E1               	movf	fsr1l,w,c
 24538  0185FE  0FFB               	addlw	-5
 24539  018600  6ED9               	movwf	fsr2l,c
 24540  018602  50E2               	movf	fsr1h,w,c
 24541  018604  6EDA               	movwf	fsr2h,c
 24542  018606  0EFF               	movlw	255
 24543  018608  22DA               	addwfc	fsr2h,f,c
 24544  01860A  5005               	movf	(btemp+4)^0,w,c
 24545  01860C  12DE               	iorwf	postinc2,f,c
 24546  01860E  5006               	movf	(btemp+5)^0,w,c
 24547  018610  12DE               	iorwf	postinc2,f,c
 24548  018612  5007               	movf	(btemp+6)^0,w,c
 24549  018614  12DE               	iorwf	postinc2,f,c
 24550  018616  5008               	movf	(btemp+7)^0,w,c
 24551  018618  12DE               	iorwf	postinc2,f,c
 24552                           
 24553                           ;stkvar	_sign @ sp[(-5)+-1]
 24554  01861A  0EFA               	movlw	-6
 24555  01861C  50E3               	movf	plusw1,w,c
 24556  01861E  B4D8               	btfsc	status,2,c
 24557  018620  D005               	goto	l9605
 24558                           
 24559                           ;stkvar	_val @ sp[(-5)+-5]
 24560  018622  0EF9               	movlw	-7
 24561  018624  AEE3               	btfss	plusw1,7,c
 24562  018626  D002               	goto	l9605
 24563                           
 24564                           ;stkvar	_arg @ sp[(-5)+0]
 24565  018628  0EFE               	movlw	-2
 24566  01862A  8EE3               	bsf	plusw1,7,c
 24567  01862C                     l9605:
 24568                           
 24569                           ;stkvar	_arg @ sp[(-5)+0]
 24570  01862C  0EFB               	movlw	-5
 24571  01862E  006F FF8C  F001    	movff	plusw1,btemp
 24572  018634  0EFC               	movlw	-4
 24573  018636  006F FF8C  F002    	movff	plusw1,btemp+1
 24574  01863C  0EFD               	movlw	-3
 24575  01863E  006F FF8C  F003    	movff	plusw1,btemp+2
 24576  018644  0EFE               	movlw	-2
 24577  018646  006F FF8C  F004    	movff	plusw1,btemp+3
 24578  01864C                     l3062:
 24579                           
 24580                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24581  01864C  0EF6               	movlw	246
 24582  01864E  26E1               	addwf	fsr1l,f,c
 24583  018650  0EFF               	movlw	255
 24584  018652  22E2               	addwfc	fsr1h,f,c
 24585  018654  0012               	return		;funcret
 24586  018656                     __end_of___xxtofl:
 24587                           	opt callstack 0
 24588                           
 24589 ;; *************** function ___fldiv *****************
 24590 ;; Defined at:
 24591 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24592 ;; Parameters:    Size  Location     Type
 24593 ;;  b               4  [STACK] unsigned char 
 24594 ;;  a               4  [STACK] unsigned char 
 24595 ;; Auto vars:     Size  Location     Type
 24596 ;;  grs             4  [STACK] unsigned long 
 24597 ;;  rem             4  [STACK] unsigned long 
 24598 ;;  new_exp         2  [STACK] short 
 24599 ;;  aexp            1  [STACK] unsigned char 
 24600 ;;  bexp            1  [STACK] unsigned char 
 24601 ;;  sign            1  [STACK] unsigned char 
 24602 ;; Return value:  Size  Location     Type
 24603 ;;                  4  [STACK] unsigned char 
 24604 ;; Registers used:
 24605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24606 ;; Tracked objects:
 24607 ;;		On entry : 0/1
 24608 ;;		On exit  : 0/0
 24609 ;;		Unchanged: 0/0
 24610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24615 ;;Total ram usage:        0 bytes
 24616 ;; Hardware stack levels used:    1
 24617 ;; Hardware stack levels required when called:   15
 24618 ;; This function calls:
 24619 ;;		Nothing
 24620 ;; This function is called by:
 24621 ;;		_conv_raw_result
 24622 ;;		_calc_bsoc
 24623 ;;		_init_bsoc
 24624 ;;		_esr_check
 24625 ;;		_efgtoa
 24626 ;; This function uses a reentrant model
 24627 ;;
 24628                           
 24629                           	psect	text98
 24630  014D40                     __ptext98:
 24631                           	opt callstack 0
 24632  014D40                     ___fldiv:
 24633                           	opt callstack 0
 24634                           
 24635                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24636  014D40  0E0D               	movlw	13
 24637  014D42  26E1               	addwf	fsr1l,f,c
 24638  014D44  0E00               	movlw	0
 24639  014D46  22E2               	addwfc	fsr1h,f,c
 24640                           
 24641                           ;stkvar	_b @ sp[(-13)+-4]
 24642                           
 24643                           ;incstack = 0
 24644 ;; hardware stack exceeded
 24645  014D48  0EF2               	movlw	242
 24646  014D4A  24E1               	addwf	fsr1l,w,c
 24647  014D4C  6ED9               	movwf	fsr2l,c
 24648  014D4E  0EFF               	movlw	255
 24649  014D50  20E2               	addwfc	fsr1h,w,c
 24650  014D52  6EDA               	movwf	fsr2h,c
 24651  014D54  50DF               	movf	indf2,w,c
 24652  014D56  6E0C               	movwf	(btemp+11)^0,c
 24653  014D58  0E80               	movlw	128
 24654  014D5A  160C               	andwf	(btemp+11)^0,f,c
 24655                           
 24656                           ;stkvar	_sign @ sp[(-13)+12]
 24657  014D5C  0EFF               	movlw	-1
 24658  014D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24659                           
 24660                           ;stkvar	_b @ sp[(-13)+-4]
 24661  014D64  0EF2               	movlw	242
 24662  014D66  24E1               	addwf	fsr1l,w,c
 24663  014D68  6ED9               	movwf	fsr2l,c
 24664  014D6A  0EFF               	movlw	255
 24665  014D6C  20E2               	addwfc	fsr1h,w,c
 24666  014D6E  6EDA               	movwf	fsr2h,c
 24667  014D70  50DF               	movf	indf2,w,c
 24668  014D72  6E0C               	movwf	(btemp+11)^0,c
 24669  014D74  90D8               	bcf	status,0,c
 24670  014D76  340C               	rlcf	(btemp+11)^0,w,c
 24671  014D78  6E0B               	movwf	(btemp+10)^0,c
 24672                           
 24673                           ;stkvar	_bexp @ sp[(-13)+11]
 24674  014D7A  0EFE               	movlw	-2
 24675  014D7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24676                           
 24677                           ;stkvar	_b @ sp[(-13)+-4]
 24678  014D82  0EF1               	movlw	241
 24679  014D84  24E1               	addwf	fsr1l,w,c
 24680  014D86  6ED9               	movwf	fsr2l,c
 24681  014D88  0EFF               	movlw	255
 24682  014D8A  20E2               	addwfc	fsr1h,w,c
 24683  014D8C  6EDA               	movwf	fsr2h,c
 24684  014D8E  AEDF               	btfss	indf2,7,c
 24685  014D90  D002               	goto	l8109
 24686                           
 24687                           ;stkvar	_bexp @ sp[(-13)+11]
 24688  014D92  0EFE               	movlw	-2
 24689  014D94  80E3               	bsf	plusw1,0,c
 24690  014D96                     l8109:
 24691                           
 24692                           ;stkvar	_bexp @ sp[(-13)+11]
 24693  014D96  0EFE               	movlw	-2
 24694  014D98  50E3               	movf	plusw1,w,c
 24695  014D9A  B4D8               	btfsc	status,2,c
 24696  014D9C  D027               	goto	l8119
 24697                           
 24698                           ;stkvar	_bexp @ sp[(-13)+11]
 24699  014D9E  0EFE               	movlw	-2
 24700  014DA0  28E3               	incf	plusw1,w,c
 24701  014DA2  A4D8               	btfss	status,2,c
 24702  014DA4  D018               	goto	l8115
 24703  014DA6  0E00               	movlw	0
 24704  014DA8  6E09               	movwf	(btemp+8)^0,c
 24705  014DAA  0E00               	movlw	0
 24706  014DAC  6E0A               	movwf	(btemp+9)^0,c
 24707  014DAE  0E00               	movlw	0
 24708  014DB0  6E0B               	movwf	(btemp+10)^0,c
 24709  014DB2  0E00               	movlw	0
 24710  014DB4  6E0C               	movwf	(btemp+11)^0,c
 24711                           
 24712                           ;stkvar	_b @ sp[(-13)+-4]
 24713  014DB6  0EEF               	movlw	-17
 24714  014DB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 24715  014DBE  0EF0               	movlw	-16
 24716  014DC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24717  014DC6  0EF1               	movlw	-15
 24718  014DC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24719  014DCE  0EF2               	movlw	-14
 24720  014DD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24721  014DD6                     l8115:
 24722                           
 24723                           ;stkvar	_b @ sp[(-13)+-4]
 24724  014DD6  0EF1               	movlw	-15
 24725  014DD8  8EE3               	bsf	plusw1,7,c
 24726                           
 24727                           ;stkvar	_b @ sp[(-13)+-4]
 24728  014DDA  0EF2               	movlw	242
 24729  014DDC  24E1               	addwf	fsr1l,w,c
 24730  014DDE  6ED9               	movwf	fsr2l,c
 24731  014DE0  0EFF               	movlw	255
 24732  014DE2  20E2               	addwfc	fsr1h,w,c
 24733  014DE4  6EDA               	movwf	fsr2h,c
 24734  014DE6  0E00               	movlw	0
 24735  014DE8  6EDF               	movwf	indf2,c
 24736  014DEA  D018               	goto	l8121
 24737  014DEC                     l8119:
 24738  014DEC  0E00               	movlw	0
 24739  014DEE  6E09               	movwf	(btemp+8)^0,c
 24740  014DF0  0E00               	movlw	0
 24741  014DF2  6E0A               	movwf	(btemp+9)^0,c
 24742  014DF4  0E00               	movlw	0
 24743  014DF6  6E0B               	movwf	(btemp+10)^0,c
 24744  014DF8  0E00               	movlw	0
 24745  014DFA  6E0C               	movwf	(btemp+11)^0,c
 24746                           
 24747                           ;stkvar	_b @ sp[(-13)+-4]
 24748  014DFC  0EEF               	movlw	-17
 24749  014DFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24750  014E04  0EF0               	movlw	-16
 24751  014E06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24752  014E0C  0EF1               	movlw	-15
 24753  014E0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24754  014E14  0EF2               	movlw	-14
 24755  014E16  0060  F033  FFE3   	movff	btemp+11,plusw1
 24756  014E1C                     l8121:
 24757                           
 24758                           ;stkvar	_a @ sp[(-13)+-8]
 24759  014E1C  0EEE               	movlw	238
 24760  014E1E  24E1               	addwf	fsr1l,w,c
 24761  014E20  6ED9               	movwf	fsr2l,c
 24762  014E22  0EFF               	movlw	255
 24763  014E24  20E2               	addwfc	fsr1h,w,c
 24764  014E26  6EDA               	movwf	fsr2h,c
 24765  014E28  50DF               	movf	indf2,w,c
 24766  014E2A  6E0C               	movwf	(btemp+11)^0,c
 24767  014E2C  0E80               	movlw	128
 24768  014E2E  160C               	andwf	(btemp+11)^0,f,c
 24769                           
 24770                           ;stkvar	_sign @ sp[(-13)+12]
 24771  014E30  50E1               	movf	fsr1l,w,c
 24772  014E32  0FFF               	addlw	-1
 24773  014E34  6ED9               	movwf	fsr2l,c
 24774  014E36  50E2               	movf	fsr1h,w,c
 24775  014E38  6EDA               	movwf	fsr2h,c
 24776  014E3A  0EFF               	movlw	255
 24777  014E3C  22DA               	addwfc	fsr2h,f,c
 24778  014E3E  500C               	movf	(btemp+11)^0,w,c
 24779  014E40  1ADF               	xorwf	indf2,f,c
 24780                           
 24781                           ;stkvar	_a @ sp[(-13)+-8]
 24782  014E42  0EEE               	movlw	238
 24783  014E44  24E1               	addwf	fsr1l,w,c
 24784  014E46  6ED9               	movwf	fsr2l,c
 24785  014E48  0EFF               	movlw	255
 24786  014E4A  20E2               	addwfc	fsr1h,w,c
 24787  014E4C  6EDA               	movwf	fsr2h,c
 24788  014E4E  50DF               	movf	indf2,w,c
 24789  014E50  6E0C               	movwf	(btemp+11)^0,c
 24790  014E52  90D8               	bcf	status,0,c
 24791  014E54  340C               	rlcf	(btemp+11)^0,w,c
 24792  014E56  6E0B               	movwf	(btemp+10)^0,c
 24793                           
 24794                           ;stkvar	_aexp @ sp[(-13)+10]
 24795  014E58  0EFD               	movlw	-3
 24796  014E5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24797                           
 24798                           ;stkvar	_a @ sp[(-13)+-8]
 24799  014E60  0EED               	movlw	237
 24800  014E62  24E1               	addwf	fsr1l,w,c
 24801  014E64  6ED9               	movwf	fsr2l,c
 24802  014E66  0EFF               	movlw	255
 24803  014E68  20E2               	addwfc	fsr1h,w,c
 24804  014E6A  6EDA               	movwf	fsr2h,c
 24805  014E6C  AEDF               	btfss	indf2,7,c
 24806  014E6E  D002               	goto	l8129
 24807                           
 24808                           ;stkvar	_aexp @ sp[(-13)+10]
 24809  014E70  0EFD               	movlw	-3
 24810  014E72  80E3               	bsf	plusw1,0,c
 24811  014E74                     l8129:
 24812                           
 24813                           ;stkvar	_aexp @ sp[(-13)+10]
 24814  014E74  0EFD               	movlw	-3
 24815  014E76  50E3               	movf	plusw1,w,c
 24816  014E78  B4D8               	btfsc	status,2,c
 24817  014E7A  D027               	goto	l8139
 24818                           
 24819                           ;stkvar	_aexp @ sp[(-13)+10]
 24820  014E7C  0EFD               	movlw	-3
 24821  014E7E  28E3               	incf	plusw1,w,c
 24822  014E80  A4D8               	btfss	status,2,c
 24823  014E82  D018               	goto	l8135
 24824  014E84  0E00               	movlw	0
 24825  014E86  6E09               	movwf	(btemp+8)^0,c
 24826  014E88  0E00               	movlw	0
 24827  014E8A  6E0A               	movwf	(btemp+9)^0,c
 24828  014E8C  0E00               	movlw	0
 24829  014E8E  6E0B               	movwf	(btemp+10)^0,c
 24830  014E90  0E00               	movlw	0
 24831  014E92  6E0C               	movwf	(btemp+11)^0,c
 24832                           
 24833                           ;stkvar	_a @ sp[(-13)+-8]
 24834  014E94  0EEB               	movlw	-21
 24835  014E96  0060  F027  FFE3   	movff	btemp+8,plusw1
 24836  014E9C  0EEC               	movlw	-20
 24837  014E9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24838  014EA4  0EED               	movlw	-19
 24839  014EA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24840  014EAC  0EEE               	movlw	-18
 24841  014EAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24842  014EB4                     l8135:
 24843                           
 24844                           ;stkvar	_a @ sp[(-13)+-8]
 24845  014EB4  0EED               	movlw	-19
 24846  014EB6  8EE3               	bsf	plusw1,7,c
 24847                           
 24848                           ;stkvar	_a @ sp[(-13)+-8]
 24849  014EB8  0EEE               	movlw	238
 24850  014EBA  24E1               	addwf	fsr1l,w,c
 24851  014EBC  6ED9               	movwf	fsr2l,c
 24852  014EBE  0EFF               	movlw	255
 24853  014EC0  20E2               	addwfc	fsr1h,w,c
 24854  014EC2  6EDA               	movwf	fsr2h,c
 24855  014EC4  0E00               	movlw	0
 24856  014EC6  6EDF               	movwf	indf2,c
 24857  014EC8  D018               	goto	l8141
 24858  014ECA                     l8139:
 24859  014ECA  0E00               	movlw	0
 24860  014ECC  6E09               	movwf	(btemp+8)^0,c
 24861  014ECE  0E00               	movlw	0
 24862  014ED0  6E0A               	movwf	(btemp+9)^0,c
 24863  014ED2  0E00               	movlw	0
 24864  014ED4  6E0B               	movwf	(btemp+10)^0,c
 24865  014ED6  0E00               	movlw	0
 24866  014ED8  6E0C               	movwf	(btemp+11)^0,c
 24867                           
 24868                           ;stkvar	_a @ sp[(-13)+-8]
 24869  014EDA  0EEB               	movlw	-21
 24870  014EDC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24871  014EE2  0EEC               	movlw	-20
 24872  014EE4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24873  014EEA  0EED               	movlw	-19
 24874  014EEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24875  014EF2  0EEE               	movlw	-18
 24876  014EF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24877  014EFA                     l8141:
 24878                           
 24879                           ;stkvar	_a @ sp[(-13)+-8]
 24880  014EFA  0EEB               	movlw	-21
 24881  014EFC  50E3               	movf	plusw1,w,c
 24882  014EFE  E139               	bnz	l8153
 24883  014F00  0EEC               	movlw	-20
 24884  014F02  50E3               	movf	plusw1,w,c
 24885  014F04  E136               	bnz	l8153
 24886  014F06  0EED               	movlw	-19
 24887  014F08  50E3               	movf	plusw1,w,c
 24888  014F0A  E133               	bnz	l8153
 24889  014F0C  0EEE               	movlw	-18
 24890  014F0E  50E3               	movf	plusw1,w,c
 24891  014F10  A4D8               	btfss	status,2,c
 24892  014F12  D02F               	goto	l8153
 24893                           
 24894                           ;stkvar	_b @ sp[(-13)+-4]
 24895  014F14  0EEF               	movlw	-17
 24896  014F16  6AE3               	clrf	plusw1,c
 24897  014F18  0EF0               	movlw	-16
 24898  014F1A  6AE3               	clrf	plusw1,c
 24899  014F1C  0EF1               	movlw	-15
 24900  014F1E  6AE3               	clrf	plusw1,c
 24901  014F20  0EF2               	movlw	-14
 24902  014F22  6AE3               	clrf	plusw1,c
 24903                           
 24904                           ;stkvar	_b @ sp[(-13)+-4]
 24905  014F24  0EF1               	movlw	241
 24906  014F26  24E1               	addwf	fsr1l,w,c
 24907  014F28  6ED9               	movwf	fsr2l,c
 24908  014F2A  0EFF               	movlw	255
 24909  014F2C  20E2               	addwfc	fsr1h,w,c
 24910  014F2E  6EDA               	movwf	fsr2h,c
 24911  014F30  0E80               	movlw	128
 24912  014F32  12DE               	iorwf	postinc2,f,c
 24913  014F34  0E7F               	movlw	127
 24914  014F36  12DD               	iorwf	postdec2,f,c
 24915  014F38                     l8147:
 24916                           
 24917                           ;stkvar	_sign @ sp[(-13)+12]
 24918  014F38  0EFF               	movlw	-1
 24919  014F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24920                           
 24921                           ;stkvar	_b @ sp[(-13)+-4]
 24922  014F40  0EF2               	movlw	242
 24923  014F42  24E1               	addwf	fsr1l,w,c
 24924  014F44  6ED9               	movwf	fsr2l,c
 24925  014F46  0EFF               	movlw	255
 24926  014F48  20E2               	addwfc	fsr1h,w,c
 24927  014F4A  6EDA               	movwf	fsr2h,c
 24928  014F4C  500C               	movf	(btemp+11)^0,w,c
 24929  014F4E  12DF               	iorwf	indf2,f,c
 24930                           
 24931                           ;stkvar	_b @ sp[(-13)+-4]
 24932  014F50  0EEF               	movlw	-17
 24933  014F52  006F FF8C  F001    	movff	plusw1,btemp
 24934  014F58  0EF0               	movlw	-16
 24935  014F5A  006F FF8C  F002    	movff	plusw1,btemp+1
 24936  014F60  0EF1               	movlw	-15
 24937  014F62  006F FF8C  F003    	movff	plusw1,btemp+2
 24938  014F68  0EF2               	movlw	-14
 24939  014F6A  006F FF8C  F004    	movff	plusw1,btemp+3
 24940  014F70  D19F               	goto	l2986
 24941  014F72                     l8153:
 24942                           
 24943                           ;stkvar	_bexp @ sp[(-13)+11]
 24944  014F72  0EFE               	movlw	-2
 24945  014F74  50E3               	movf	plusw1,w,c
 24946  014F76  A4D8               	btfss	status,2,c
 24947  014F78  D009               	goto	l8161
 24948  014F7A  0E00               	movlw	0
 24949  014F7C  6E01               	movwf	btemp^0,c
 24950  014F7E  0E00               	movlw	0
 24951  014F80  6E02               	movwf	(btemp+1)^0,c
 24952  014F82  0E00               	movlw	0
 24953  014F84  6E03               	movwf	(btemp+2)^0,c
 24954  014F86  0E00               	movlw	0
 24955  014F88  6E04               	movwf	(btemp+3)^0,c
 24956  014F8A  D192               	goto	l2986
 24957  014F8C                     l8161:
 24958                           
 24959                           ;stkvar	_bexp @ sp[(-13)+11]
 24960  014F8C  0EFE               	movlw	-2
 24961  014F8E  50E3               	movf	plusw1,w,c
 24962  014F90  6E0B               	movwf	(btemp+10)^0,c
 24963  014F92  6A0C               	clrf	(btemp+11)^0,c
 24964                           
 24965                           ;stkvar	_aexp @ sp[(-13)+10]
 24966  014F94  0EFD               	movlw	-3
 24967  014F96  50E3               	movf	plusw1,w,c
 24968  014F98  5E0B               	subwf	(btemp+10)^0,f,c
 24969  014F9A  0E00               	movlw	0
 24970  014F9C  5A0C               	subwfb	(btemp+11)^0,f,c
 24971  014F9E  0E7F               	movlw	127
 24972  014FA0  260B               	addwf	(btemp+10)^0,f,c
 24973  014FA2  0E00               	movlw	0
 24974  014FA4  220C               	addwfc	(btemp+11)^0,f,c
 24975                           
 24976                           ;stkvar	_new_exp @ sp[(-13)+8]
 24977  014FA6  0EFB               	movlw	-5
 24978  014FA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24979  014FAE  0EFC               	movlw	-4
 24980  014FB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24981                           
 24982                           ;stkvar	_b @ sp[(-13)+-4]
 24983  014FB6  0EEF               	movlw	-17
 24984  014FB8  006F FF8C  F009    	movff	plusw1,btemp+8
 24985  014FBE  0EF0               	movlw	-16
 24986  014FC0  006F FF8C  F00A    	movff	plusw1,btemp+9
 24987  014FC6  0EF1               	movlw	-15
 24988  014FC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 24989  014FCE  0EF2               	movlw	-14
 24990  014FD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 24991                           
 24992                           ;stkvar	_rem @ sp[(-13)+4]
 24993  014FD6  0EF7               	movlw	-9
 24994  014FD8  0060  F027  FFE3   	movff	btemp+8,plusw1
 24995  014FDE  0EF8               	movlw	-8
 24996  014FE0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24997  014FE6  0EF9               	movlw	-7
 24998  014FE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24999  014FEE  0EFA               	movlw	-6
 25000  014FF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25001                           
 25002                           ;stkvar	_b @ sp[(-13)+-4]
 25003  014FF6  0EEF               	movlw	-17
 25004  014FF8  6AE3               	clrf	plusw1,c
 25005  014FFA  0EF0               	movlw	-16
 25006  014FFC  6AE3               	clrf	plusw1,c
 25007  014FFE  0EF1               	movlw	-15
 25008  015000  6AE3               	clrf	plusw1,c
 25009  015002  0EF2               	movlw	-14
 25010  015004  6AE3               	clrf	plusw1,c
 25011                           
 25012                           ;stkvar	_grs @ sp[(-13)+0]
 25013  015006  0EF3               	movlw	-13
 25014  015008  6AE3               	clrf	plusw1,c
 25015  01500A  0EF4               	movlw	-12
 25016  01500C  6AE3               	clrf	plusw1,c
 25017  01500E  0EF5               	movlw	-11
 25018  015010  6AE3               	clrf	plusw1,c
 25019  015012  0EF6               	movlw	-10
 25020  015014  6AE3               	clrf	plusw1,c
 25021                           
 25022                           ;stkvar	_aexp @ sp[(-13)+10]
 25023  015016  0EFD               	movlw	-3
 25024  015018  6AE3               	clrf	plusw1,c
 25025  01501A  D050               	goto	l8189
 25026  01501C                     l8171:
 25027                           
 25028                           ;stkvar	_aexp @ sp[(-13)+10]
 25029  01501C  0EFD               	movlw	-3
 25030  01501E  50E3               	movf	plusw1,w,c
 25031  015020  B4D8               	btfsc	status,2,c
 25032  015022  D020               	goto	l8181
 25033                           
 25034                           ;stkvar	_rem @ sp[(-13)+4]
 25035  015024  90D8               	bcf	status,0,c
 25036  015026  0EF7               	movlw	-9
 25037  015028  36E3               	rlcf	plusw1,f,c
 25038  01502A  0EF8               	movlw	-8
 25039  01502C  36E3               	rlcf	plusw1,f,c
 25040  01502E  0EF9               	movlw	-7
 25041  015030  36E3               	rlcf	plusw1,f,c
 25042  015032  0EFA               	movlw	-6
 25043  015034  36E3               	rlcf	plusw1,f,c
 25044                           
 25045                           ;stkvar	_b @ sp[(-13)+-4]
 25046  015036  90D8               	bcf	status,0,c
 25047  015038  0EEF               	movlw	-17
 25048  01503A  36E3               	rlcf	plusw1,f,c
 25049  01503C  0EF0               	movlw	-16
 25050  01503E  36E3               	rlcf	plusw1,f,c
 25051  015040  0EF1               	movlw	-15
 25052  015042  36E3               	rlcf	plusw1,f,c
 25053  015044  0EF2               	movlw	-14
 25054  015046  36E3               	rlcf	plusw1,f,c
 25055                           
 25056                           ;stkvar	_grs @ sp[(-13)+0]
 25057  015048  0EF6               	movlw	-10
 25058  01504A  AEE3               	btfss	plusw1,7,c
 25059  01504C  D002               	goto	l8179
 25060                           
 25061                           ;stkvar	_b @ sp[(-13)+-4]
 25062  01504E  0EEF               	movlw	-17
 25063  015050  80E3               	bsf	plusw1,0,c
 25064  015052                     l8179:
 25065                           
 25066                           ;stkvar	_grs @ sp[(-13)+0]
 25067  015052  90D8               	bcf	status,0,c
 25068  015054  0EF3               	movlw	-13
 25069  015056  36E3               	rlcf	plusw1,f,c
 25070  015058  0EF4               	movlw	-12
 25071  01505A  36E3               	rlcf	plusw1,f,c
 25072  01505C  0EF5               	movlw	-11
 25073  01505E  36E3               	rlcf	plusw1,f,c
 25074  015060  0EF6               	movlw	-10
 25075  015062  36E3               	rlcf	plusw1,f,c
 25076  015064                     l8181:
 25077                           
 25078                           ;stkvar	_a @ sp[(-13)+-8]
 25079                           ;stkvar	_rem @ sp[(-13)+4]
 25080  015064  50E1               	movf	fsr1l,w,c
 25081  015066  0FF7               	addlw	-9
 25082  015068  6ED9               	movwf	fsr2l,c
 25083  01506A  50E2               	movf	fsr1h,w,c
 25084  01506C  6EDA               	movwf	fsr2h,c
 25085  01506E  0EFF               	movlw	255
 25086  015070  22DA               	addwfc	fsr2h,f,c
 25087  015072  0EEB               	movlw	-21
 25088  015074  50E3               	movf	plusw1,w,c
 25089  015076  5CDE               	subwf	postinc2,w,c
 25090  015078  0EEC               	movlw	-20
 25091  01507A  50E3               	movf	plusw1,w,c
 25092  01507C  58DE               	subwfb	postinc2,w,c
 25093  01507E  0EED               	movlw	-19
 25094  015080  50E3               	movf	plusw1,w,c
 25095  015082  58DE               	subwfb	postinc2,w,c
 25096  015084  0EEE               	movlw	-18
 25097  015086  50E3               	movf	plusw1,w,c
 25098  015088  58DE               	subwfb	postinc2,w,c
 25099  01508A  A0D8               	btfss	status,0,c
 25100  01508C  D015               	goto	l8187
 25101                           
 25102                           ;stkvar	_grs @ sp[(-13)+0]
 25103  01508E  0EF6               	movlw	-10
 25104  015090  8CE3               	bsf	plusw1,6,c
 25105                           
 25106                           ;stkvar	_a @ sp[(-13)+-8]
 25107                           ;stkvar	_rem @ sp[(-13)+4]
 25108  015092  50E1               	movf	fsr1l,w,c
 25109  015094  0FF7               	addlw	-9
 25110  015096  6ED9               	movwf	fsr2l,c
 25111  015098  50E2               	movf	fsr1h,w,c
 25112  01509A  6EDA               	movwf	fsr2h,c
 25113  01509C  0EFF               	movlw	255
 25114  01509E  22DA               	addwfc	fsr2h,f,c
 25115  0150A0  0EEB               	movlw	-21
 25116  0150A2  50E3               	movf	plusw1,w,c
 25117  0150A4  5EDE               	subwf	postinc2,f,c
 25118  0150A6  0EEC               	movlw	-20
 25119  0150A8  50E3               	movf	plusw1,w,c
 25120  0150AA  5ADE               	subwfb	postinc2,f,c
 25121  0150AC  0EED               	movlw	-19
 25122  0150AE  50E3               	movf	plusw1,w,c
 25123  0150B0  5ADE               	subwfb	postinc2,f,c
 25124  0150B2  0EEE               	movlw	-18
 25125  0150B4  50E3               	movf	plusw1,w,c
 25126  0150B6  5ADE               	subwfb	postinc2,f,c
 25127  0150B8                     l8187:
 25128                           
 25129                           ;stkvar	_aexp @ sp[(-13)+10]
 25130  0150B8  0EFD               	movlw	-3
 25131  0150BA  2AE3               	incf	plusw1,f,c
 25132  0150BC                     l8189:
 25133                           
 25134                           ;stkvar	_aexp @ sp[(-13)+10]
 25135  0150BC  0EFD               	movlw	-3
 25136  0150BE  006F FF8C  F001    	movff	plusw1,btemp
 25137  0150C4  0E19               	movlw	25
 25138  0150C6  6401               	cpfsgt	btemp^0,c
 25139  0150C8  D7A9               	goto	l8171
 25140                           
 25141                           ;stkvar	_rem @ sp[(-13)+4]
 25142  0150CA  0EF7               	movlw	-9
 25143  0150CC  50E3               	movf	plusw1,w,c
 25144  0150CE  E10A               	bnz	u6600
 25145  0150D0  0EF8               	movlw	-8
 25146  0150D2  50E3               	movf	plusw1,w,c
 25147  0150D4  E107               	bnz	u6600
 25148  0150D6  0EF9               	movlw	-7
 25149  0150D8  50E3               	movf	plusw1,w,c
 25150  0150DA  E104               	bnz	u6600
 25151  0150DC  0EFA               	movlw	-6
 25152  0150DE  50E3               	movf	plusw1,w,c
 25153  0150E0  B4D8               	btfsc	status,2,c
 25154  0150E2  D024               	goto	l8205
 25155  0150E4                     u6600:
 25156                           
 25157                           ;stkvar	_grs @ sp[(-13)+0]
 25158  0150E4  0EF3               	movlw	-13
 25159  0150E6  80E3               	bsf	plusw1,0,c
 25160  0150E8  D021               	goto	l8205
 25161  0150EA                     l8195:
 25162                           
 25163                           ;stkvar	_b @ sp[(-13)+-4]
 25164  0150EA  90D8               	bcf	status,0,c
 25165  0150EC  0EEF               	movlw	-17
 25166  0150EE  36E3               	rlcf	plusw1,f,c
 25167  0150F0  0EF0               	movlw	-16
 25168  0150F2  36E3               	rlcf	plusw1,f,c
 25169  0150F4  0EF1               	movlw	-15
 25170  0150F6  36E3               	rlcf	plusw1,f,c
 25171  0150F8  0EF2               	movlw	-14
 25172  0150FA  36E3               	rlcf	plusw1,f,c
 25173                           
 25174                           ;stkvar	_grs @ sp[(-13)+0]
 25175  0150FC  0EF6               	movlw	-10
 25176  0150FE  AEE3               	btfss	plusw1,7,c
 25177  015100  D002               	goto	l8201
 25178                           
 25179                           ;stkvar	_b @ sp[(-13)+-4]
 25180  015102  0EEF               	movlw	-17
 25181  015104  80E3               	bsf	plusw1,0,c
 25182  015106                     l8201:
 25183                           
 25184                           ;stkvar	_grs @ sp[(-13)+0]
 25185  015106  90D8               	bcf	status,0,c
 25186  015108  0EF3               	movlw	-13
 25187  01510A  36E3               	rlcf	plusw1,f,c
 25188  01510C  0EF4               	movlw	-12
 25189  01510E  36E3               	rlcf	plusw1,f,c
 25190  015110  0EF5               	movlw	-11
 25191  015112  36E3               	rlcf	plusw1,f,c
 25192  015114  0EF6               	movlw	-10
 25193  015116  36E3               	rlcf	plusw1,f,c
 25194                           
 25195                           ;stkvar	_new_exp @ sp[(-13)+8]
 25196  015118  50E1               	movf	fsr1l,w,c
 25197  01511A  0FFB               	addlw	-5
 25198  01511C  6ED9               	movwf	fsr2l,c
 25199  01511E  50E2               	movf	fsr1h,w,c
 25200  015120  6EDA               	movwf	fsr2h,c
 25201  015122  0EFF               	movlw	255
 25202  015124  22DA               	addwfc	fsr2h,f,c
 25203  015126  06DE               	decf	postinc2,f,c
 25204  015128  0E00               	movlw	0
 25205  01512A  5ADD               	subwfb	postdec2,f,c
 25206  01512C                     l8205:
 25207                           
 25208                           ;stkvar	_b @ sp[(-13)+-4]
 25209  01512C  0EF1               	movlw	-15
 25210  01512E  AEE3               	btfss	plusw1,7,c
 25211  015130  D7DC               	goto	l8195
 25212                           
 25213                           ;stkvar	_aexp @ sp[(-13)+10]
 25214  015132  0EFD               	movlw	-3
 25215  015134  6AE3               	clrf	plusw1,c
 25216                           
 25217                           ;stkvar	_grs @ sp[(-13)+0]
 25218  015136  0EF6               	movlw	-10
 25219  015138  AEE3               	btfss	plusw1,7,c
 25220  01513A  D020               	goto	l8219
 25221                           
 25222                           ;stkvar	_grs @ sp[(-13)+0]
 25223  01513C  50E1               	movf	fsr1l,w,c
 25224  01513E  0FF3               	addlw	-13
 25225  015140  6ED9               	movwf	fsr2l,c
 25226  015142  50E2               	movf	fsr1h,w,c
 25227  015144  6EDA               	movwf	fsr2h,c
 25228  015146  0EFF               	movlw	255
 25229  015148  22DA               	addwfc	fsr2h,f,c
 25230  01514A  0EFF               	movlw	255
 25231  01514C  14DE               	andwf	postinc2,w,c
 25232  01514E  6E09               	movwf	(btemp+8)^0,c
 25233  015150  0EFF               	movlw	255
 25234  015152  14DE               	andwf	postinc2,w,c
 25235  015154  6E0A               	movwf	(btemp+9)^0,c
 25236  015156  0EFF               	movlw	255
 25237  015158  14DE               	andwf	postinc2,w,c
 25238  01515A  6E0B               	movwf	(btemp+10)^0,c
 25239  01515C  0E7F               	movlw	127
 25240  01515E  14DE               	andwf	postinc2,w,c
 25241  015160  6E0C               	movwf	(btemp+11)^0,c
 25242  015162  5009               	movf	(btemp+8)^0,w,c
 25243  015164  100A               	iorwf	(btemp+9)^0,w,c
 25244  015166  100B               	iorwf	(btemp+10)^0,w,c
 25245  015168  100C               	iorwf	(btemp+11)^0,w,c
 25246  01516A  B4D8               	btfsc	status,2,c
 25247  01516C  D004               	goto	l8215
 25248  01516E                     u6640:
 25249                           
 25250                           ;stkvar	_aexp @ sp[(-13)+10]
 25251  01516E  0EFD               	movlw	-3
 25252  015170  6AE3               	clrf	plusw1,c
 25253  015172  2AE3               	incf	plusw1,f,c
 25254  015174  D003               	goto	l8219
 25255  015176                     l8215:
 25256                           
 25257                           ;stkvar	_b @ sp[(-13)+-4]
 25258  015176  0EEF               	movlw	-17
 25259  015178  B0E3               	btfsc	plusw1,0,c
 25260  01517A  D7F9               	goto	u6640
 25261  01517C                     l8219:
 25262                           
 25263                           ;stkvar	_aexp @ sp[(-13)+10]
 25264  01517C  0EFD               	movlw	-3
 25265  01517E  50E3               	movf	plusw1,w,c
 25266  015180  B4D8               	btfsc	status,2,c
 25267  015182  D036               	goto	l8229
 25268                           
 25269                           ;stkvar	_b @ sp[(-13)+-4]
 25270  015184  50E1               	movf	fsr1l,w,c
 25271  015186  0FEF               	addlw	-17
 25272  015188  6ED9               	movwf	fsr2l,c
 25273  01518A  50E2               	movf	fsr1h,w,c
 25274  01518C  6EDA               	movwf	fsr2h,c
 25275  01518E  0EFF               	movlw	255
 25276  015190  22DA               	addwfc	fsr2h,f,c
 25277  015192  2ADE               	incf	postinc2,f,c
 25278  015194  0E00               	movlw	0
 25279  015196  22DE               	addwfc	postinc2,f,c
 25280  015198  22DE               	addwfc	postinc2,f,c
 25281  01519A  22DE               	addwfc	postinc2,f,c
 25282                           
 25283                           ;stkvar	_b @ sp[(-13)+-4]
 25284  01519C  0EF2               	movlw	-14
 25285  01519E  A0E3               	btfss	plusw1,0,c
 25286  0151A0  D027               	goto	l8229
 25287  0151A2  0E01               	movlw	1
 25288  0151A4  6E0C               	movwf	(btemp+11)^0,c
 25289                           
 25290                           ;stkvar	_b @ sp[(-13)+-4]
 25291  0151A6  50E1               	movf	fsr1l,w,c
 25292  0151A8  0FEF               	addlw	-17
 25293  0151AA  6ED9               	movwf	fsr2l,c
 25294  0151AC  50E2               	movf	fsr1h,w,c
 25295  0151AE  6EDA               	movwf	fsr2h,c
 25296  0151B0  0EFF               	movlw	255
 25297  0151B2  22DA               	addwfc	fsr2h,f,c
 25298  0151B4  280C               	incf	(btemp+11)^0,w,c
 25299  0151B6  52DE               	movf	postinc2,f,c
 25300  0151B8  D008               	goto	u6680
 25301  0151BA                     u6685:
 25302  0151BA  52DE               	movf	postinc2,f,c
 25303  0151BC  90D8               	bcf	status,0,c
 25304  0151BE  BEDC               	btfsc	preinc2,7,c
 25305  0151C0  80D8               	bsf	status,0,c
 25306  0151C2  32DD               	rrcf	postdec2,f,c
 25307  0151C4  32DD               	rrcf	postdec2,f,c
 25308  0151C6  32DD               	rrcf	postdec2,f,c
 25309  0151C8  32DE               	rrcf	postinc2,f,c
 25310  0151CA                     u6680:
 25311  0151CA  2EE8               	decfsz	wreg,f,c
 25312  0151CC  D7F6               	goto	u6685
 25313                           
 25314                           ;stkvar	_new_exp @ sp[(-13)+8]
 25315  0151CE  0EFB               	movlw	-5
 25316  0151D0  50E3               	movf	plusw1,w,c
 25317  0151D2  0F01               	addlw	1
 25318  0151D4  6E01               	movwf	btemp^0,c
 25319  0151D6  0EFB               	movlw	-5
 25320  0151D8  0060  F007  FFE3   	movff	btemp,plusw1
 25321  0151DE  6A01               	clrf	btemp^0,c
 25322  0151E0  0EFC               	movlw	-4
 25323  0151E2  50E3               	movf	plusw1,w,c
 25324  0151E4  2001               	addwfc	btemp^0,w,c
 25325  0151E6  6E01               	movwf	btemp^0,c
 25326  0151E8  0EFC               	movlw	-4
 25327  0151EA  0060  F007  FFE3   	movff	btemp,plusw1
 25328  0151F0                     l8229:
 25329                           
 25330                           ;stkvar	_new_exp @ sp[(-13)+8]
 25331  0151F0  0EFC               	movlw	-4
 25332  0151F2  BEE3               	btfsc	plusw1,7,c
 25333  0151F4  D01B               	goto	l8235
 25334  0151F6  0EFC               	movlw	-4
 25335  0151F8  50E3               	movf	plusw1,w,c
 25336  0151FA  E104               	bnz	u6690
 25337  0151FC  0EFB               	movlw	-5
 25338  0151FE  28E3               	incf	plusw1,w,c
 25339  015200  A0D8               	btfss	status,0,c
 25340  015202  D014               	goto	l8235
 25341  015204                     u6690:
 25342  015204  0EFF               	movlw	255
 25343  015206  6E0B               	movwf	(btemp+10)^0,c
 25344  015208  0E00               	movlw	0
 25345  01520A  6E0C               	movwf	(btemp+11)^0,c
 25346                           
 25347                           ;stkvar	_new_exp @ sp[(-13)+8]
 25348  01520C  0EFB               	movlw	-5
 25349  01520E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25350  015214  0EFC               	movlw	-4
 25351  015216  0060  F033  FFE3   	movff	btemp+11,plusw1
 25352                           
 25353                           ;stkvar	_b @ sp[(-13)+-4]
 25354  01521C  0EEF               	movlw	-17
 25355  01521E  6AE3               	clrf	plusw1,c
 25356  015220  0EF0               	movlw	-16
 25357  015222  6AE3               	clrf	plusw1,c
 25358  015224  0EF1               	movlw	-15
 25359  015226  6AE3               	clrf	plusw1,c
 25360  015228  0EF2               	movlw	-14
 25361  01522A  6AE3               	clrf	plusw1,c
 25362  01522C                     l8235:
 25363                           
 25364                           ;stkvar	_new_exp @ sp[(-13)+8]
 25365  01522C  0EFC               	movlw	-4
 25366  01522E  BEE3               	btfsc	plusw1,7,c
 25367  015230  D007               	goto	u6700
 25368  015232  0EFC               	movlw	-4
 25369  015234  50E3               	movf	plusw1,w,c
 25370  015236  E112               	bnz	l8241
 25371  015238  0EFB               	movlw	-5
 25372  01523A  04E3               	decf	plusw1,w,c
 25373  01523C  B0D8               	btfsc	status,0,c
 25374  01523E  D00E               	goto	l8241
 25375  015240                     u6700:
 25376                           
 25377                           ;stkvar	_new_exp @ sp[(-13)+8]
 25378  015240  0EFB               	movlw	-5
 25379  015242  6AE3               	clrf	plusw1,c
 25380  015244  0EFC               	movlw	-4
 25381  015246  6AE3               	clrf	plusw1,c
 25382                           
 25383                           ;stkvar	_b @ sp[(-13)+-4]
 25384  015248  0EEF               	movlw	-17
 25385  01524A  6AE3               	clrf	plusw1,c
 25386  01524C  0EF0               	movlw	-16
 25387  01524E  6AE3               	clrf	plusw1,c
 25388  015250  0EF1               	movlw	-15
 25389  015252  6AE3               	clrf	plusw1,c
 25390  015254  0EF2               	movlw	-14
 25391  015256  6AE3               	clrf	plusw1,c
 25392                           
 25393                           ;stkvar	_sign @ sp[(-13)+12]
 25394  015258  0EFF               	movlw	-1
 25395  01525A  6AE3               	clrf	plusw1,c
 25396  01525C                     l8241:
 25397                           
 25398                           ;stkvar	_new_exp @ sp[(-13)+8]
 25399                           ;stkvar	_bexp @ sp[(-13)+11]
 25400  01525C  0EFB               	movlw	-5
 25401  01525E  006F FF8C  F001    	movff	plusw1,btemp
 25402  015264  0EFE               	movlw	-2
 25403  015266  0060  F007  FFE3   	movff	btemp,plusw1
 25404                           
 25405                           ;stkvar	_bexp @ sp[(-13)+11]
 25406  01526C  0EFE               	movlw	-2
 25407  01526E  A0E3               	btfss	plusw1,0,c
 25408  015270  D009               	goto	l8247
 25409                           
 25410                           ;stkvar	_b @ sp[(-13)+-4]
 25411  015272  0EF1               	movlw	241
 25412  015274  24E1               	addwf	fsr1l,w,c
 25413  015276  6ED9               	movwf	fsr2l,c
 25414  015278  0EFF               	movlw	255
 25415  01527A  20E2               	addwfc	fsr1h,w,c
 25416  01527C  6EDA               	movwf	fsr2h,c
 25417  01527E  0E00               	movlw	0
 25418  015280  8EDB               	bsf	plusw2,7,c
 25419  015282  D008               	goto	l8249
 25420  015284                     l8247:
 25421                           
 25422                           ;stkvar	_b @ sp[(-13)+-4]
 25423  015284  0EF1               	movlw	241
 25424  015286  24E1               	addwf	fsr1l,w,c
 25425  015288  6ED9               	movwf	fsr2l,c
 25426  01528A  0EFF               	movlw	255
 25427  01528C  20E2               	addwfc	fsr1h,w,c
 25428  01528E  6EDA               	movwf	fsr2h,c
 25429  015290  0E7F               	movlw	127
 25430  015292  16DF               	andwf	indf2,f,c
 25431  015294                     l8249:
 25432                           
 25433                           ;stkvar	_b @ sp[(-13)+-4]
 25434  015294  0EF2               	movlw	242
 25435  015296  24E1               	addwf	fsr1l,w,c
 25436  015298  6ED9               	movwf	fsr2l,c
 25437  01529A  0EFF               	movlw	255
 25438  01529C  20E2               	addwfc	fsr1h,w,c
 25439  01529E  6EDA               	movwf	fsr2h,c
 25440                           
 25441                           ;stkvar	_bexp @ sp[(-13)+11]
 25442  0152A0  0EFE               	movlw	-2
 25443  0152A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25444  0152A8  90D8               	bcf	status,0,c
 25445  0152AA  300C               	rrcf	(btemp+11)^0,w,c
 25446  0152AC  6EDF               	movwf	indf2,c
 25447  0152AE  D644               	goto	l8147
 25448  0152B0                     l2986:
 25449                           
 25450                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25451  0152B0  0EEB               	movlw	235
 25452  0152B2  26E1               	addwf	fsr1l,f,c
 25453  0152B4  0EFF               	movlw	255
 25454  0152B6  22E2               	addwfc	fsr1h,f,c
 25455  0152B8  0012               	return		;funcret
 25456  0152BA                     __end_of___fldiv:
 25457                           	opt callstack 0
 25458                           
 25459 ;; *************** function ___flge *****************
 25460 ;; Defined at:
 25461 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25462 ;; Parameters:    Size  Location     Type
 25463 ;;  ff1             4  [STACK] unsigned char 
 25464 ;;  ff2             4  [STACK] unsigned char 
 25465 ;; Auto vars:     Size  Location     Type
 25466 ;;		None
 25467 ;; Return value:  Size  Location     Type
 25468 ;;		None               void
 25469 ;; Registers used:
 25470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25471 ;; Tracked objects:
 25472 ;;		On entry : 0/1
 25473 ;;		On exit  : 0/0
 25474 ;;		Unchanged: 0/0
 25475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25480 ;;Total ram usage:        0 bytes
 25481 ;; Hardware stack levels used:    1
 25482 ;; Hardware stack levels required when called:   15
 25483 ;; This function calls:
 25484 ;;		Nothing
 25485 ;; This function is called by:
 25486 ;;		_main
 25487 ;;		_calc_ror_data
 25488 ;;		_check_day_time
 25489 ;;		_calc_bsoc
 25490 ;;		_efgtoa
 25491 ;; This function uses a reentrant model
 25492 ;;
 25493                           
 25494                           	psect	text99
 25495  018FC0                     __ptext99:
 25496                           	opt callstack 0
 25497  018FC0                     ___flge:
 25498                           	opt callstack 0
 25499                           
 25500                           ;stkvar	_ff1 @ sp[(0)+-4]
 25501                           
 25502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25503                           ;incstack = 0
 25504 ;; hardware stack exceeded
 25505  018FC0  50E1               	movf	fsr1l,w,c
 25506  018FC2  0FFC               	addlw	-4
 25507  018FC4  6ED9               	movwf	fsr2l,c
 25508  018FC6  50E2               	movf	fsr1h,w,c
 25509  018FC8  6EDA               	movwf	fsr2h,c
 25510  018FCA  0EFF               	movlw	255
 25511  018FCC  22DA               	addwfc	fsr2h,f,c
 25512  018FCE  0E00               	movlw	0
 25513  018FD0  14DE               	andwf	postinc2,w,c
 25514  018FD2  6E09               	movwf	(btemp+8)^0,c
 25515  018FD4  0E00               	movlw	0
 25516  018FD6  14DE               	andwf	postinc2,w,c
 25517  018FD8  6E0A               	movwf	(btemp+9)^0,c
 25518  018FDA  0E80               	movlw	128
 25519  018FDC  14DE               	andwf	postinc2,w,c
 25520  018FDE  6E0B               	movwf	(btemp+10)^0,c
 25521  018FE0  0E7F               	movlw	127
 25522  018FE2  14DE               	andwf	postinc2,w,c
 25523  018FE4  6E0C               	movwf	(btemp+11)^0,c
 25524  018FE6  5009               	movf	(btemp+8)^0,w,c
 25525  018FE8  100A               	iorwf	(btemp+9)^0,w,c
 25526  018FEA  100B               	iorwf	(btemp+10)^0,w,c
 25527  018FEC  100C               	iorwf	(btemp+11)^0,w,c
 25528  018FEE  A4D8               	btfss	status,2,c
 25529  018FF0  D008               	goto	l8523
 25530                           
 25531                           ;stkvar	_ff1 @ sp[(0)+-4]
 25532  018FF2  0EFC               	movlw	-4
 25533  018FF4  6AE3               	clrf	plusw1,c
 25534  018FF6  0EFD               	movlw	-3
 25535  018FF8  6AE3               	clrf	plusw1,c
 25536  018FFA  0EFE               	movlw	-2
 25537  018FFC  6AE3               	clrf	plusw1,c
 25538  018FFE  0EFF               	movlw	-1
 25539  019000  6AE3               	clrf	plusw1,c
 25540  019002                     l8523:
 25541                           
 25542                           ;stkvar	_ff2 @ sp[(0)+-8]
 25543  019002  50E1               	movf	fsr1l,w,c
 25544  019004  0FF8               	addlw	-8
 25545  019006  6ED9               	movwf	fsr2l,c
 25546  019008  50E2               	movf	fsr1h,w,c
 25547  01900A  6EDA               	movwf	fsr2h,c
 25548  01900C  0EFF               	movlw	255
 25549  01900E  22DA               	addwfc	fsr2h,f,c
 25550  019010  0E00               	movlw	0
 25551  019012  14DE               	andwf	postinc2,w,c
 25552  019014  6E09               	movwf	(btemp+8)^0,c
 25553  019016  0E00               	movlw	0
 25554  019018  14DE               	andwf	postinc2,w,c
 25555  01901A  6E0A               	movwf	(btemp+9)^0,c
 25556  01901C  0E80               	movlw	128
 25557  01901E  14DE               	andwf	postinc2,w,c
 25558  019020  6E0B               	movwf	(btemp+10)^0,c
 25559  019022  0E7F               	movlw	127
 25560  019024  14DE               	andwf	postinc2,w,c
 25561  019026  6E0C               	movwf	(btemp+11)^0,c
 25562  019028  5009               	movf	(btemp+8)^0,w,c
 25563  01902A  100A               	iorwf	(btemp+9)^0,w,c
 25564  01902C  100B               	iorwf	(btemp+10)^0,w,c
 25565  01902E  100C               	iorwf	(btemp+11)^0,w,c
 25566  019030  A4D8               	btfss	status,2,c
 25567  019032  D008               	goto	l2667
 25568                           
 25569                           ;stkvar	_ff2 @ sp[(0)+-8]
 25570  019034  0EF8               	movlw	-8
 25571  019036  6AE3               	clrf	plusw1,c
 25572  019038  0EF9               	movlw	-7
 25573  01903A  6AE3               	clrf	plusw1,c
 25574  01903C  0EFA               	movlw	-6
 25575  01903E  6AE3               	clrf	plusw1,c
 25576  019040  0EFB               	movlw	-5
 25577  019042  6AE3               	clrf	plusw1,c
 25578  019044                     l2667:
 25579                           
 25580                           ;stkvar	_ff1 @ sp[(0)+-4]
 25581  019044  0EFF               	movlw	-1
 25582  019046  AEE3               	btfss	plusw1,7,c
 25583  019048  D024               	goto	l8529
 25584                           
 25585                           ;stkvar	_ff1 @ sp[(0)+-4]
 25586  01904A  0E00               	movlw	0
 25587  01904C  6E09               	movwf	(btemp+8)^0,c
 25588  01904E  0E00               	movlw	0
 25589  019050  6E0A               	movwf	(btemp+9)^0,c
 25590  019052  0E00               	movlw	0
 25591  019054  6E0B               	movwf	(btemp+10)^0,c
 25592  019056  0E80               	movlw	128
 25593  019058  6E0C               	movwf	(btemp+11)^0,c
 25594  01905A  0EFC               	movlw	-4
 25595  01905C  50E3               	movf	plusw1,w,c
 25596  01905E  5E09               	subwf	(btemp+8)^0,f,c
 25597  019060  0EFD               	movlw	-3
 25598  019062  50E3               	movf	plusw1,w,c
 25599  019064  5A0A               	subwfb	(btemp+9)^0,f,c
 25600  019066  0EFE               	movlw	-2
 25601  019068  50E3               	movf	plusw1,w,c
 25602  01906A  5A0B               	subwfb	(btemp+10)^0,f,c
 25603  01906C  0EFF               	movlw	-1
 25604  01906E  50E3               	movf	plusw1,w,c
 25605  019070  5A0C               	subwfb	(btemp+11)^0,f,c
 25606                           
 25607                           ;stkvar	_ff1 @ sp[(0)+-4]
 25608  019072  0EFC               	movlw	-4
 25609  019074  0060  F027  FFE3   	movff	btemp+8,plusw1
 25610  01907A  0EFD               	movlw	-3
 25611  01907C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25612  019082  0EFE               	movlw	-2
 25613  019084  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25614  01908A  0EFF               	movlw	-1
 25615  01908C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25616  019092                     l8529:
 25617                           
 25618                           ;stkvar	_ff2 @ sp[(0)+-8]
 25619  019092  0EFB               	movlw	-5
 25620  019094  AEE3               	btfss	plusw1,7,c
 25621  019096  D024               	goto	l8533
 25622                           
 25623                           ;stkvar	_ff2 @ sp[(0)+-8]
 25624  019098  0E00               	movlw	0
 25625  01909A  6E09               	movwf	(btemp+8)^0,c
 25626  01909C  0E00               	movlw	0
 25627  01909E  6E0A               	movwf	(btemp+9)^0,c
 25628  0190A0  0E00               	movlw	0
 25629  0190A2  6E0B               	movwf	(btemp+10)^0,c
 25630  0190A4  0E80               	movlw	128
 25631  0190A6  6E0C               	movwf	(btemp+11)^0,c
 25632  0190A8  0EF8               	movlw	-8
 25633  0190AA  50E3               	movf	plusw1,w,c
 25634  0190AC  5E09               	subwf	(btemp+8)^0,f,c
 25635  0190AE  0EF9               	movlw	-7
 25636  0190B0  50E3               	movf	plusw1,w,c
 25637  0190B2  5A0A               	subwfb	(btemp+9)^0,f,c
 25638  0190B4  0EFA               	movlw	-6
 25639  0190B6  50E3               	movf	plusw1,w,c
 25640  0190B8  5A0B               	subwfb	(btemp+10)^0,f,c
 25641  0190BA  0EFB               	movlw	-5
 25642  0190BC  50E3               	movf	plusw1,w,c
 25643  0190BE  5A0C               	subwfb	(btemp+11)^0,f,c
 25644                           
 25645                           ;stkvar	_ff2 @ sp[(0)+-8]
 25646  0190C0  0EF8               	movlw	-8
 25647  0190C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25648  0190C8  0EF9               	movlw	-7
 25649  0190CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25650  0190D0  0EFA               	movlw	-6
 25651  0190D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25652  0190D8  0EFB               	movlw	-5
 25653  0190DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25654  0190E0                     l8533:
 25655                           
 25656                           ;stkvar	_ff1 @ sp[(0)+-4]
 25657  0190E0  0EFF               	movlw	-1
 25658  0190E2  7EE3               	btg	plusw1,7,c
 25659                           
 25660                           ;stkvar	_ff2 @ sp[(0)+-8]
 25661  0190E4  0EFB               	movlw	-5
 25662  0190E6  7EE3               	btg	plusw1,7,c
 25663                           
 25664                           ;stkvar	_ff2 @ sp[(0)+-8]
 25665                           ;stkvar	_ff1 @ sp[(0)+-4]
 25666  0190E8  50E1               	movf	fsr1l,w,c
 25667  0190EA  0FFC               	addlw	-4
 25668  0190EC  6ED9               	movwf	fsr2l,c
 25669  0190EE  50E2               	movf	fsr1h,w,c
 25670  0190F0  6EDA               	movwf	fsr2h,c
 25671  0190F2  0EFF               	movlw	255
 25672  0190F4  22DA               	addwfc	fsr2h,f,c
 25673  0190F6  0EF8               	movlw	-8
 25674  0190F8  50E3               	movf	plusw1,w,c
 25675  0190FA  5CDE               	subwf	postinc2,w,c
 25676  0190FC  0EF9               	movlw	-7
 25677  0190FE  50E3               	movf	plusw1,w,c
 25678  019100  58DE               	subwfb	postinc2,w,c
 25679  019102  0EFA               	movlw	-6
 25680  019104  50E3               	movf	plusw1,w,c
 25681  019106  58DE               	subwfb	postinc2,w,c
 25682  019108  0EFB               	movlw	-5
 25683  01910A  50E3               	movf	plusw1,w,c
 25684  01910C  58DE               	subwfb	postinc2,w,c
 25685  01910E  B0D8               	btfsc	status,0,c
 25686  019110  D002               	goto	l8541
 25687  019112  9001               	bcf	btemp& (0+255),0,c
 25688  019114  D001               	goto	l2674
 25689  019116                     l8541:
 25690  019116  8001               	bsf	btemp& (0+255),0,c
 25691  019118                     l2674:
 25692                           
 25693                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25694  019118  0EF8               	movlw	248
 25695  01911A  26E1               	addwf	fsr1l,f,c
 25696  01911C  0EFF               	movlw	255
 25697  01911E  22E2               	addwfc	fsr1h,f,c
 25698  019120  0012               	return		;funcret
 25699  019122                     __end_of___flge:
 25700                           	opt callstack 0
 25701                           
 25702 ;; *************** function _calc_model_data *****************
 25703 ;; Defined at:
 25704 ;;		line 67 in file "mbmc.c"
 25705 ;; Parameters:    Size  Location     Type
 25706 ;;		None
 25707 ;; Auto vars:     Size  Location     Type
 25708 ;;		None
 25709 ;; Return value:  Size  Location     Type
 25710 ;;                  1  [STACK] void 
 25711 ;; Registers used:
 25712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25713 ;; Tracked objects:
 25714 ;;		On entry : 0/1
 25715 ;;		On exit  : 3F/39
 25716 ;;		Unchanged: 0/0
 25717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25722 ;;Total ram usage:        0 bytes
 25723 ;; Hardware stack levels used:    1
 25724 ;; Hardware stack levels required when called:   18
 25725 ;; This function calls:
 25726 ;;		___fladd
 25727 ;;		___flmul
 25728 ;;		___flsub
 25729 ;;		_lp_filter
 25730 ;;		_start_bsoc
 25731 ;;		_stop_bsoc
 25732 ;; This function is called by:
 25733 ;;		_main
 25734 ;; This function uses a reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text100
 25738  015C4E                     __ptext100:
 25739                           	opt callstack 0
 25740  015C4E                     _calc_model_data:
 25741                           	opt callstack 12
 25742                           
 25743                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25744                           
 25745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25746                           ;incstack = 0
 25747  015C4E  EC62  F0E0         	call	_stop_bsoc	;wreg free
 25748                           
 25749                           ; BSR set to: 57
 25750                           ;mbmc.c: 72:  if (!V.calib) {
 25751  015C52  0101               	movlb	1	; () banked
 25752  015C54  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 25753  015C56  A4D8               	btfss	status,2,c
 25754  015C58  D219               	goto	l10967
 25755                           
 25756                           ; BSR set to: 1
 25757                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25758  015C5A  EE21  F2FF         	lfsr	2,_C
 25759  015C5E  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25760  015C64  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25761  015C6A  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25762  015C70  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25763                           
 25764                           ; BSR set to: 1
 25765                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25766  015C76  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25767  015C7C  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25768  015C82  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25769  015C88  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25770  015C8E  EE21  F343         	lfsr	2,_C+68	;volatile
 25771  015C92  006F FF7B FFE6     	movff	postinc2,postinc1
 25772  015C98  006F FF7B FFE6     	movff	postinc2,postinc1
 25773  015C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 25774  015CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 25775  015CAA  EC95  F0DA         	call	___flsub	;wreg free
 25776  015CAE  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25777  015CB4  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25778  015CBA  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25779  015CC0  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25780                           
 25781                           ;mbmc.c: 75:   bcror = C.c_bat;
 25782  015CC6  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25783  015CCA  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25784  015CCE  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25785  015CD2  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25786                           
 25787                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25788  015CD6  EE21  F303         	lfsr	2,_C+4	;volatile
 25789  015CDA  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25790  015CE0  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25791  015CE6  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25792  015CEC  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25793                           
 25794                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25795  015CF2  EE21  F30F         	lfsr	2,_C+16	;volatile
 25796  015CF6  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25797  015CFC  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25798  015D02  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25799  015D08  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25800                           
 25801                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25802  015D0E  EE21  F333         	lfsr	2,_C+52	;volatile
 25803  015D12  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25804  015D18  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25805  015D1E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25806  015D24  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25807                           
 25808                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25809  015D2A  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25810  015D30  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25811  015D36  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25812  015D3C  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25813  015D42  EE21  F353         	lfsr	2,_C+84	;volatile
 25814  015D46  006F FF7B FFE6     	movff	postinc2,postinc1
 25815  015D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 25816  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 25817  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 25818  015D5E  EC95  F0DA         	call	___flsub	;wreg free
 25819  015D62  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25820  015D68  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25821  015D6E  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25822  015D74  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25823                           
 25824                           ;mbmc.c: 80:   bvror = C.v_bat;
 25825  015D7A  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25826  015D7E  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25827  015D82  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25828  015D86  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25829                           
 25830                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25831  015D8A  EE21  F313         	lfsr	2,_C+20	;volatile
 25832  015D8E  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25833  015D94  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25834  015D9A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25835  015DA0  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25836                           
 25837                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25838  015DA6  EE21  F307         	lfsr	2,_C+8	;volatile
 25839  015DAA  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25840  015DB0  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25841  015DB6  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25842  015DBC  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25843                           
 25844                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25845  015DC2  EE21  F32F         	lfsr	2,_C+48	;volatile
 25846  015DC6  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25847  015DCC  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25848  015DD2  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25849  015DD8  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25850                           
 25851                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25852  015DDE  0E01               	movlw	1
 25853  015DE0  6EE6               	movwf	postinc1,c
 25854  015DE2  0E10               	movlw	16
 25855  015DE4  6EE6               	movwf	postinc1,c
 25856  015DE6  EE21  F2FF         	lfsr	2,_C
 25857  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 25858  015DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 25859  015DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25860  015DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 25861  015E02  EE21  F303         	lfsr	2,_C+4	;volatile
 25862  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 25863  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 25864  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 25865  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 25866  015E1E  EC95  F0DA         	call	___flsub	;wreg free
 25867  015E22  0060  F007  FFE6   	movff	btemp,postinc1
 25868  015E28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25869  015E2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25870  015E34  0060  F013  FFE6   	movff	btemp+3,postinc1
 25871  015E3A  EC2B  F0C3         	call	_lp_filter	;wreg free
 25872  015E3E  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 25873  015E44  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 25874  015E4A  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 25875  015E50  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 25876                           
 25877                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25878  015E56  0E01               	movlw	1
 25879  015E58  6EE6               	movwf	postinc1,c
 25880  015E5A  0E11               	movlw	17
 25881  015E5C  6EE6               	movwf	postinc1,c
 25882  015E5E  EE21  F353         	lfsr	2,_C+84	;volatile
 25883  015E62  006F FF7B FFE6     	movff	postinc2,postinc1
 25884  015E68  006F FF7B FFE6     	movff	postinc2,postinc1
 25885  015E6E  006F FF7B FFE6     	movff	postinc2,postinc1
 25886  015E74  006F FF7B FFE6     	movff	postinc2,postinc1
 25887  015E7A  EE21  F33F         	lfsr	2,_C+64	;volatile
 25888  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25889  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 25890  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 25891  015E90  006F FF7B FFE6     	movff	postinc2,postinc1
 25892  015E96  ECAD  F09E         	call	___flmul	;wreg free
 25893  015E9A  0060  F007  FFE6   	movff	btemp,postinc1
 25894  015EA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25895  015EA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25896  015EAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25897  015EB2  EC2B  F0C3         	call	_lp_filter	;wreg free
 25898  015EB6  0060  F004  F773   	movff	btemp,_C+116	;volatile
 25899  015EBC  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 25900  015EC2  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 25901  015EC8  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 25902                           
 25903                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25904  015ECE  0E01               	movlw	1
 25905  015ED0  6EE6               	movwf	postinc1,c
 25906  015ED2  0E12               	movlw	18
 25907  015ED4  6EE6               	movwf	postinc1,c
 25908  015ED6  EE21  F34F         	lfsr	2,_C+80	;volatile
 25909  015EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 25910  015EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 25911  015EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 25912  015EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 25913  015EF2  EE21  F347         	lfsr	2,_C+72	;volatile
 25914  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25915  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 25916  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 25917  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 25918  015F0E  ECAD  F09E         	call	___flmul	;wreg free
 25919  015F12  0060  F007  FFE6   	movff	btemp,postinc1
 25920  015F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25921  015F1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25922  015F24  0060  F013  FFE6   	movff	btemp+3,postinc1
 25923  015F2A  EC2B  F0C3         	call	_lp_filter	;wreg free
 25924  015F2E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 25925  015F34  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 25926  015F3A  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 25927  015F40  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 25928                           
 25929                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25930  015F46  0E01               	movlw	1
 25931  015F48  6EE6               	movwf	postinc1,c
 25932  015F4A  0E13               	movlw	19
 25933  015F4C  6EE6               	movwf	postinc1,c
 25934  015F4E  0E00               	movlw	0
 25935  015F50  6EE6               	movwf	postinc1,c
 25936  015F52  0E00               	movlw	0
 25937  015F54  6EE6               	movwf	postinc1,c
 25938  015F56  0E60               	movlw	96
 25939  015F58  6EE6               	movwf	postinc1,c
 25940  015F5A  0EC1               	movlw	193
 25941  015F5C  6EE6               	movwf	postinc1,c
 25942  015F5E  EE21  F363         	lfsr	2,_C+100	;volatile
 25943  015F62  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 25947  015F7A  EE21  F33F         	lfsr	2,_C+64	;volatile
 25948  015F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25949  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 25950  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 25951  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 25952  015F96  ECAD  F09E         	call	___flmul	;wreg free
 25953  015F9A  0060  F007  FFE6   	movff	btemp,postinc1
 25954  015FA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25955  015FA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25956  015FAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25957  015FB2  ECC2  F0A2         	call	___fladd	;wreg free
 25958  015FB6  0060  F007  FFE6   	movff	btemp,postinc1
 25959  015FBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25960  015FC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25961  015FC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 25962  015FCE  EC2B  F0C3         	call	_lp_filter	;wreg free
 25963  015FD2  0060  F004  F777   	movff	btemp,_C+120	;volatile
 25964  015FD8  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 25965  015FDE  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 25966  015FE4  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 25967                           
 25968                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25969  015FEA  0E01               	movlw	1
 25970  015FEC  6EE6               	movwf	postinc1,c
 25971  015FEE  0E14               	movlw	20
 25972  015FF0  6EE6               	movwf	postinc1,c
 25973  015FF2  EE21  F353         	lfsr	2,_C+84	;volatile
 25974  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25975  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 25976  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 25977  016008  006F FF7B FFE6     	movff	postinc2,postinc1
 25978  01600E  EE21  F343         	lfsr	2,_C+68	;volatile
 25979  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 25980  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 25981  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 25982  016024  006F FF7B FFE6     	movff	postinc2,postinc1
 25983  01602A  ECAD  F09E         	call	___flmul	;wreg free
 25984  01602E  0060  F007  FFE6   	movff	btemp,postinc1
 25985  016034  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25986  01603A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25987  016040  0060  F013  FFE6   	movff	btemp+3,postinc1
 25988  016046  EC2B  F0C3         	call	_lp_filter	;wreg free
 25989  01604A  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 25990  016050  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 25991  016056  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 25992  01605C  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 25993                           
 25994                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 25995  016062  EE21  F377         	lfsr	2,_C+120	;volatile
 25996  016066  0E03               	movlw	3
 25997  016068  AEDB               	btfss	plusw2,7,c
 25998  01606A  D010               	goto	l10967
 25999                           
 26000                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26001  01606C  0E17               	movlw	23
 26002  01606E  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26003  016074  0EB7               	movlw	183
 26004  016076  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26005  01607C  0ED1               	movlw	209
 26006  01607E  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26007  016084  0E38               	movlw	56
 26008  016086  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26009  01608C                     l10967:
 26010                           
 26011                           ;mbmc.c: 95:  start_bsoc();
 26012  01608C  ECFB  F0DE         	call	_start_bsoc	;wreg free
 26013                           
 26014                           ; BSR set to: 57
 26015                           ;mbmc.c: 96:  C.update = 1;
 26016  016090  0E01               	movlw	1
 26017  016092  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26018                           
 26019                           ; BSR set to: 57
 26020                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26021  016098  0012               	return		;funcret
 26022  01609A                     __end_of_calc_model_data:
 26023                           	opt callstack 0
 26024                           
 26025 ;; *************** function _stop_bsoc *****************
 26026 ;; Defined at:
 26027 ;;		line 127 in file "bsoc.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;		None
 26030 ;; Auto vars:     Size  Location     Type
 26031 ;;		None
 26032 ;; Return value:  Size  Location     Type
 26033 ;;                  1  [STACK] void 
 26034 ;; Registers used:
 26035 ;;		None
 26036 ;; Tracked objects:
 26037 ;;		On entry : 0/1
 26038 ;;		On exit  : 3F/39
 26039 ;;		Unchanged: 0/0
 26040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26045 ;;Total ram usage:        0 bytes
 26046 ;; Hardware stack levels used:    1
 26047 ;; Hardware stack levels required when called:   15
 26048 ;; This function calls:
 26049 ;;		Nothing
 26050 ;; This function is called by:
 26051 ;;		_calc_model_data
 26052 ;; This function uses a reentrant model
 26053 ;;
 26054                           
 26055                           	psect	text101
 26056  01C0C4                     __ptext101:
 26057                           	opt callstack 0
 26058  01C0C4                     _stop_bsoc:
 26059                           	opt callstack 14
 26060                           
 26061                           ;bsoc.c: 130:  PIE6bits.TMR3IE = 0;
 26062                           
 26063                           ; BSR set to: 57
 26064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26065                           ;incstack = 0
 26066  01C0C4  0139               	movlb	57	; () banked
 26067  01C0C6  9D96               	bcf	150,6,b	;volatile
 26068                           
 26069                           ; BSR set to: 57
 26070                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26071  01C0C8  0012               	return		;funcret
 26072  01C0CA                     __end_of_stop_bsoc:
 26073                           	opt callstack 0
 26074                           
 26075 ;; *************** function _start_bsoc *****************
 26076 ;; Defined at:
 26077 ;;		line 118 in file "bsoc.c"
 26078 ;; Parameters:    Size  Location     Type
 26079 ;;		None
 26080 ;; Auto vars:     Size  Location     Type
 26081 ;;		None
 26082 ;; Return value:  Size  Location     Type
 26083 ;;                  1  [STACK] void 
 26084 ;; Registers used:
 26085 ;;		wreg, status,2, status,0, btemp+11
 26086 ;; Tracked objects:
 26087 ;;		On entry : 0/1
 26088 ;;		On exit  : 3F/39
 26089 ;;		Unchanged: 0/0
 26090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26095 ;;Total ram usage:        0 bytes
 26096 ;; Hardware stack levels used:    1
 26097 ;; Hardware stack levels required when called:   15
 26098 ;; This function calls:
 26099 ;;		Nothing
 26100 ;; This function is called by:
 26101 ;;		_calc_model_data
 26102 ;; This function uses a reentrant model
 26103 ;;
 26104                           
 26105                           	psect	text102
 26106  01BDF6                     __ptext102:
 26107                           	opt callstack 0
 26108  01BDF6                     _start_bsoc:
 26109                           	opt callstack 14
 26110                           
 26111                           ;bsoc.c: 121:  PIE6bits.TMR3IE = 1;
 26112                           
 26113                           ; BSR set to: 57
 26114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26115                           ;incstack = 0
 26116  01BDF6  0139               	movlb	57	; () banked
 26117  01BDF8  8D96               	bsf	150,6,b	;volatile
 26118                           
 26119                           ; BSR set to: 57
 26120  01BDFA  A4BE               	btfss	190,2,c	;volatile
 26121  01BDFC  D002               	goto	u9640
 26122  01BDFE  0E01               	movlw	1
 26123  01BE00  D001               	goto	u9646
 26124  01BE02                     u9640:
 26125  01BE02  0E00               	movlw	0
 26126  01BE04                     u9646:
 26127  01BE04  0AFF               	xorlw	255
 26128  01BE06  6E0C               	movwf	(btemp+11)^0,c
 26129  01BE08  460C               	rlncf	(btemp+11)^0,f,c
 26130  01BE0A  460C               	rlncf	(btemp+11)^0,f,c
 26131  01BE0C  50BE               	movf	190,w,c	;volatile
 26132  01BE0E  180C               	xorwf	(btemp+11)^0,w,c
 26133  01BE10  0BFB               	andlw	-5
 26134  01BE12  180C               	xorwf	(btemp+11)^0,w,c
 26135  01BE14  6EBE               	movwf	190,c	;volatile
 26136                           
 26137                           ; BSR set to: 57
 26138                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26139  01BE16  0012               	return		;funcret
 26140  01BE18                     __end_of_start_bsoc:
 26141                           	opt callstack 0
 26142                           
 26143 ;; *************** function _lp_filter *****************
 26144 ;; Defined at:
 26145 ;;		line 29 in file "mbmc.c"
 26146 ;; Parameters:    Size  Location     Type
 26147 ;;  new             4  [STACK] const float 
 26148 ;;  bn              1  [STACK] const unsigned char 
 26149 ;;  slow            1  [STACK] const char 
 26150 ;; Auto vars:     Size  Location     Type
 26151 ;;  lp_speed        4  [STACK] float 
 26152 ;; Return value:  Size  Location     Type
 26153 ;;                  4  [STACK] float 
 26154 ;; Registers used:
 26155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26156 ;; Tracked objects:
 26157 ;;		On entry : 0/1
 26158 ;;		On exit  : 0/0
 26159 ;;		Unchanged: 0/0
 26160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;Total ram usage:        0 bytes
 26166 ;; Hardware stack levels used:    1
 26167 ;; Hardware stack levels required when called:   17
 26168 ;; This function calls:
 26169 ;;		___fladd
 26170 ;;		___flmul
 26171 ;;		___flsub
 26172 ;; This function is called by:
 26173 ;;		_main
 26174 ;;		_convert_adc_data
 26175 ;;		_calc_model_data
 26176 ;; This function uses a reentrant model
 26177 ;;
 26178                           
 26179                           	psect	text103
 26180  018656                     __ptext103:
 26181                           	opt callstack 0
 26182  018656                     _lp_filter:
 26183                           	opt callstack 0
 26184                           
 26185                           ; BSR set to: 57
 26186                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26187  018656  52E6               	movf	postinc1,f,c
 26188  018658  52E6               	movf	postinc1,f,c
 26189  01865A  52E6               	movf	postinc1,f,c
 26190  01865C  52E6               	movf	postinc1,f,c
 26191                           
 26192                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26193                           ;stkvar	_bn @ sp[(-4)+-5]
 26194                           
 26195                           ;incstack = 0
 26196  01865E  0EF7               	movlw	-9
 26197  018660  006F FF8C  F001    	movff	plusw1,btemp
 26198  018666  0E14               	movlw	20
 26199  018668  6401               	cpfsgt	btemp^0,c
 26200  01866A  D011               	goto	l10341
 26201  01866C                     u9550:
 26202                           
 26203                           ;mbmc.c: 35:   return new;
 26204                           ;stkvar	_new @ sp[(-4)+-4]
 26205  01866C  0EF8               	movlw	-8
 26206  01866E  006F FF8C  F001    	movff	plusw1,btemp
 26207  018674  0EF9               	movlw	-7
 26208  018676  006F FF8C  F002    	movff	plusw1,btemp+1
 26209  01867C  0EFA               	movlw	-6
 26210  01867E  006F FF8C  F003    	movff	plusw1,btemp+2
 26211  018684  0EFB               	movlw	-5
 26212  018686  006F FF8C  F004    	movff	plusw1,btemp+3
 26213  01868C  D0BD               	goto	l1835
 26214  01868E                     l10341:
 26215                           
 26216                           ;mbmc.c: 37:  if (slow == (-1)) {
 26217                           ;stkvar	_slow @ sp[(-4)+-6]
 26218  01868E  0EF6               	movlw	-10
 26219  018690  28E3               	incf	plusw1,w,c
 26220  018692  A4D8               	btfss	status,2,c
 26221  018694  D012               	goto	l10349
 26222                           
 26223                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26224                           ;stkvar	_bn @ sp[(-4)+-5]
 26225  018696  0EF7               	movlw	-9
 26226  018698  50E3               	movf	plusw1,w,c
 26227  01869A  0D04               	mullw	4
 26228  01869C  0E00               	movlw	low lp_filter@smooth
 26229  01869E  24F3               	addwf	243,w,c
 26230  0186A0  6ED9               	movwf	fsr2l,c
 26231  0186A2  0E02               	movlw	high lp_filter@smooth
 26232  0186A4  20F4               	addwfc	prodh,w,c
 26233  0186A6  6EDA               	movwf	fsr2h,c
 26234  0186A8  0E00               	movlw	0
 26235  0186AA  6EDE               	movwf	postinc2,c
 26236  0186AC  0E00               	movlw	0
 26237  0186AE  6EDE               	movwf	postinc2,c
 26238  0186B0  0E00               	movlw	0
 26239  0186B2  6EDE               	movwf	postinc2,c
 26240  0186B4  0E00               	movlw	0
 26241  0186B6  6EDD               	movwf	postdec2,c
 26242  0186B8  D7D9               	goto	u9550
 26243  0186BA                     l10349:
 26244                           
 26245                           ;mbmc.c: 42:  if (slow) {
 26246                           ;stkvar	_slow @ sp[(-4)+-6]
 26247  0186BA  0EF6               	movlw	-10
 26248  0186BC  50E3               	movf	plusw1,w,c
 26249  0186BE  B4D8               	btfsc	status,2,c
 26250  0186C0  D006               	goto	l10353
 26251                           
 26252                           ;mbmc.c: 43:   lp_speed = 0.033;
 26253  0186C2  0E02               	movlw	2
 26254  0186C4  6E09               	movwf	(btemp+8)^0,c
 26255  0186C6  0E2B               	movlw	43
 26256  0186C8  6E0A               	movwf	(btemp+9)^0,c
 26257  0186CA  0E07               	movlw	7
 26258  0186CC  D005               	goto	L31
 26259  0186CE                     l10353:
 26260                           
 26261                           ;mbmc.c: 45:   lp_speed = 0.066;
 26262  0186CE  0E02               	movlw	2
 26263  0186D0  6E09               	movwf	(btemp+8)^0,c
 26264  0186D2  0E2B               	movlw	43
 26265  0186D4  6E0A               	movwf	(btemp+9)^0,c
 26266  0186D6  0E87               	movlw	135
 26267  0186D8                     L31:
 26268  0186D8  6E0B               	movwf	(btemp+10)^0,c
 26269  0186DA  0E3D               	movlw	61
 26270  0186DC  6E0C               	movwf	(btemp+11)^0,c
 26271                           
 26272                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26273  0186DE  0EFC               	movlw	-4
 26274  0186E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26275  0186E6  0EFD               	movlw	-3
 26276  0186E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26277  0186EE  0EFE               	movlw	-2
 26278  0186F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26279  0186F6  0EFF               	movlw	-1
 26280  0186F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26281                           
 26282                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26283                           ;stkvar	_bn @ sp[(-4)+-5]
 26284  0186FE  0EF7               	movlw	-9
 26285  018700  50E3               	movf	plusw1,w,c
 26286  018702  0D04               	mullw	4
 26287  018704  0E00               	movlw	low lp_filter@smooth
 26288  018706  24F3               	addwf	243,w,c
 26289  018708  6ED9               	movwf	fsr2l,c
 26290  01870A  0E02               	movlw	high lp_filter@smooth
 26291  01870C  20F4               	addwfc	prodh,w,c
 26292  01870E  6EDA               	movwf	fsr2h,c
 26293  018710  006F FF7B FFE6     	movff	postinc2,postinc1
 26294  018716  006F FF7B FFE6     	movff	postinc2,postinc1
 26295  01871C  006F FF7B FFE6     	movff	postinc2,postinc1
 26296  018722  006F FF7B FFE6     	movff	postinc2,postinc1
 26297                           
 26298                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26299  018728  0EF8               	movlw	-8
 26300  01872A  006F FF8F FFE6     	movff	plusw1,postinc1
 26301  018730  006F FF8F FFE6     	movff	plusw1,postinc1
 26302  018736  006F FF8F FFE6     	movff	plusw1,postinc1
 26303  01873C  006F FF8F FFE6     	movff	plusw1,postinc1
 26304                           
 26305                           ;stkvar	_bn @ sp[(-12)+-5]
 26306  018742  0EEF               	movlw	-17
 26307  018744  50E3               	movf	plusw1,w,c
 26308  018746  0D04               	mullw	4
 26309  018748  0E00               	movlw	low lp_filter@smooth
 26310  01874A  24F3               	addwf	243,w,c
 26311  01874C  6ED9               	movwf	fsr2l,c
 26312  01874E  0E02               	movlw	high lp_filter@smooth
 26313  018750  20F4               	addwfc	prodh,w,c
 26314  018752  6EDA               	movwf	fsr2h,c
 26315  018754  006F FF7B FFE6     	movff	postinc2,postinc1
 26316  01875A  006F FF7B FFE6     	movff	postinc2,postinc1
 26317  018760  006F FF7B FFE6     	movff	postinc2,postinc1
 26318  018766  006F FF7B FFE6     	movff	postinc2,postinc1
 26319                           
 26320                           ;stkvar	_new @ sp[(-16)+-4]
 26321  01876C  0EEC               	movlw	-20
 26322  01876E  006F FF8F FFE6     	movff	plusw1,postinc1
 26323  018774  006F FF8F FFE6     	movff	plusw1,postinc1
 26324  01877A  006F FF8F FFE6     	movff	plusw1,postinc1
 26325  018780  006F FF8F FFE6     	movff	plusw1,postinc1
 26326  018786  EC95  F0DA         	call	___flsub	;wreg free
 26327  01878A  0060  F007  FFE6   	movff	btemp,postinc1
 26328  018790  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26329  018796  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26330  01879C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26331  0187A2  ECAD  F09E         	call	___flmul	;wreg free
 26332  0187A6  0060  F007  FFE6   	movff	btemp,postinc1
 26333  0187AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26334  0187B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26335  0187B8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26336  0187BE  ECC2  F0A2         	call	___fladd	;wreg free
 26337                           
 26338                           ;stkvar	_bn @ sp[(-4)+-5]
 26339  0187C2  0EF7               	movlw	-9
 26340  0187C4  50E3               	movf	plusw1,w,c
 26341  0187C6  0D04               	mullw	4
 26342  0187C8  0E00               	movlw	low lp_filter@smooth
 26343  0187CA  24F3               	addwf	243,w,c
 26344  0187CC  6ED9               	movwf	fsr2l,c
 26345  0187CE  0E02               	movlw	high lp_filter@smooth
 26346  0187D0  20F4               	addwfc	prodh,w,c
 26347  0187D2  6EDA               	movwf	fsr2h,c
 26348  0187D4  0060  F007  FFDE   	movff	btemp,postinc2
 26349  0187DA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26350  0187E0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26351  0187E6  0060  F013  FFDD   	movff	btemp+3,postdec2
 26352  0187EC  52DD               	movf	postdec2,f,c
 26353  0187EE  52DD               	movf	postdec2,f,c
 26354  0187F0  006F FF78  F001    	movff	postinc2,btemp
 26355  0187F6  006F FF78  F002    	movff	postinc2,btemp+1
 26356  0187FC  006F FF78  F003    	movff	postinc2,btemp+2
 26357  018802  006F FF78  F004    	movff	postinc2,btemp+3
 26358  018808                     l1835:
 26359                           
 26360                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26361  018808  0EF6               	movlw	246
 26362  01880A  26E1               	addwf	fsr1l,f,c
 26363  01880C  0EFF               	movlw	255
 26364  01880E  22E2               	addwfc	fsr1h,f,c
 26365  018810  0012               	return		;funcret
 26366  018812                     __end_of_lp_filter:
 26367                           	opt callstack 0
 26368                           
 26369 ;; *************** function ___flsub *****************
 26370 ;; Defined at:
 26371 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26372 ;; Parameters:    Size  Location     Type
 26373 ;;  b               4  [STACK] float 
 26374 ;;  a               4  [STACK] float 
 26375 ;; Auto vars:     Size  Location     Type
 26376 ;;		None
 26377 ;; Return value:  Size  Location     Type
 26378 ;;                  4  [STACK] float 
 26379 ;; Registers used:
 26380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26381 ;; Tracked objects:
 26382 ;;		On entry : 0/0
 26383 ;;		On exit  : 0/0
 26384 ;;		Unchanged: 0/0
 26385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26390 ;;Total ram usage:        0 bytes
 26391 ;; Hardware stack levels used:    1
 26392 ;; Hardware stack levels required when called:   16
 26393 ;; This function calls:
 26394 ;;		___fladd
 26395 ;; This function is called by:
 26396 ;;		_conv_raw_result
 26397 ;;		_lp_filter
 26398 ;;		_calc_model_data
 26399 ;;		_calc_ror_data
 26400 ;;		_esr_check
 26401 ;;		_efgtoa
 26402 ;; This function uses a reentrant model
 26403 ;;
 26404                           
 26405                           	psect	text104
 26406  01B52A                     __ptext104:
 26407                           	opt callstack 0
 26408  01B52A                     ___flsub:
 26409                           	opt callstack 0
 26410                           
 26411                           ;stkvar	_a @ sp[(0)+-8]
 26412                           
 26413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26414                           ;incstack = 0
 26415 ;; hardware stack exceeded
 26416  01B52A  0EFB               	movlw	-5
 26417  01B52C  7EE3               	btg	plusw1,7,c
 26418                           
 26419                           ;stkvar	_a @ sp[(0)+-8]
 26420  01B52E  0EF8               	movlw	-8
 26421  01B530  006F FF8F FFE6     	movff	plusw1,postinc1
 26422  01B536  006F FF8F FFE6     	movff	plusw1,postinc1
 26423  01B53C  006F FF8F FFE6     	movff	plusw1,postinc1
 26424  01B542  006F FF8F FFE6     	movff	plusw1,postinc1
 26425                           
 26426                           ;stkvar	_b @ sp[(-4)+-4]
 26427  01B548  0EF8               	movlw	-8
 26428  01B54A  006F FF8F FFE6     	movff	plusw1,postinc1
 26429  01B550  006F FF8F FFE6     	movff	plusw1,postinc1
 26430  01B556  006F FF8F FFE6     	movff	plusw1,postinc1
 26431  01B55C  006F FF8F FFE6     	movff	plusw1,postinc1
 26432  01B562  ECC2  F0A2         	call	___fladd	;wreg free
 26433                           
 26434                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26435  01B566  0EF8               	movlw	248
 26436  01B568  26E1               	addwf	fsr1l,f,c
 26437  01B56A  0EFF               	movlw	255
 26438  01B56C  22E2               	addwfc	fsr1h,f,c
 26439  01B56E  0012               	return		;funcret
 26440  01B570                     __end_of___flsub:
 26441                           	opt callstack 0
 26442                           
 26443 ;; *************** function ___fladd *****************
 26444 ;; Defined at:
 26445 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26446 ;; Parameters:    Size  Location     Type
 26447 ;;  b               4  [STACK] float 
 26448 ;;  a               4  [STACK] float 
 26449 ;; Auto vars:     Size  Location     Type
 26450 ;;  grs             1  [STACK] unsigned char 
 26451 ;;  bexp            1  [STACK] unsigned char 
 26452 ;;  aexp            1  [STACK] unsigned char 
 26453 ;;  signs           1  [STACK] unsigned char 
 26454 ;; Return value:  Size  Location     Type
 26455 ;;                  4  [STACK] unsigned char 
 26456 ;; Registers used:
 26457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26458 ;; Tracked objects:
 26459 ;;		On entry : 0/0
 26460 ;;		On exit  : 0/0
 26461 ;;		Unchanged: 0/0
 26462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26467 ;;Total ram usage:        0 bytes
 26468 ;; Hardware stack levels used:    1
 26469 ;; Hardware stack levels required when called:   15
 26470 ;; This function calls:
 26471 ;;		Nothing
 26472 ;; This function is called by:
 26473 ;;		_main
 26474 ;;		_conv_raw_result
 26475 ;;		_lp_filter
 26476 ;;		_calc_model_data
 26477 ;;		_efgtoa
 26478 ;;		___asfladd
 26479 ;;		___flsub
 26480 ;; This function uses a reentrant model
 26481 ;;
 26482                           
 26483                           	psect	text105
 26484  014584                     __ptext105:
 26485                           	opt callstack 0
 26486  014584                     ___fladd:
 26487                           	opt callstack 0
 26488                           
 26489                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26490  014584  52E6               	movf	postinc1,f,c
 26491  014586  52E6               	movf	postinc1,f,c
 26492  014588  52E6               	movf	postinc1,f,c
 26493  01458A  52E6               	movf	postinc1,f,c
 26494                           
 26495                           ;stkvar	_b @ sp[(-4)+-4]
 26496                           
 26497                           ;incstack = 0
 26498 ;; hardware stack exceeded
 26499  01458C  0EFB               	movlw	251
 26500  01458E  24E1               	addwf	fsr1l,w,c
 26501  014590  6ED9               	movwf	fsr2l,c
 26502  014592  0EFF               	movlw	255
 26503  014594  20E2               	addwfc	fsr1h,w,c
 26504  014596  6EDA               	movwf	fsr2h,c
 26505  014598  50DF               	movf	indf2,w,c
 26506  01459A  6E0C               	movwf	(btemp+11)^0,c
 26507  01459C  0E80               	movlw	128
 26508  01459E  160C               	andwf	(btemp+11)^0,f,c
 26509                           
 26510                           ;stkvar	_signs @ sp[(-4)+3]
 26511  0145A0  0EFF               	movlw	-1
 26512  0145A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26513                           
 26514                           ;stkvar	_b @ sp[(-4)+-4]
 26515  0145A8  0EFB               	movlw	251
 26516  0145AA  24E1               	addwf	fsr1l,w,c
 26517  0145AC  6ED9               	movwf	fsr2l,c
 26518  0145AE  0EFF               	movlw	255
 26519  0145B0  20E2               	addwfc	fsr1h,w,c
 26520  0145B2  6EDA               	movwf	fsr2h,c
 26521  0145B4  50DF               	movf	indf2,w,c
 26522  0145B6  6E0C               	movwf	(btemp+11)^0,c
 26523  0145B8  90D8               	bcf	status,0,c
 26524  0145BA  340C               	rlcf	(btemp+11)^0,w,c
 26525  0145BC  6E0B               	movwf	(btemp+10)^0,c
 26526                           
 26527                           ;stkvar	_bexp @ sp[(-4)+1]
 26528  0145BE  0EFD               	movlw	-3
 26529  0145C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26530                           
 26531                           ;stkvar	_b @ sp[(-4)+-4]
 26532  0145C6  0EFA               	movlw	250
 26533  0145C8  24E1               	addwf	fsr1l,w,c
 26534  0145CA  6ED9               	movwf	fsr2l,c
 26535  0145CC  0EFF               	movlw	255
 26536  0145CE  20E2               	addwfc	fsr1h,w,c
 26537  0145D0  6EDA               	movwf	fsr2h,c
 26538  0145D2  AEDF               	btfss	indf2,7,c
 26539  0145D4  D002               	goto	l7673
 26540                           
 26541                           ;stkvar	_bexp @ sp[(-4)+1]
 26542  0145D6  0EFD               	movlw	-3
 26543  0145D8  80E3               	bsf	plusw1,0,c
 26544  0145DA                     l7673:
 26545                           
 26546                           ;stkvar	_bexp @ sp[(-4)+1]
 26547  0145DA  0EFD               	movlw	-3
 26548  0145DC  50E3               	movf	plusw1,w,c
 26549  0145DE  B4D8               	btfsc	status,2,c
 26550  0145E0  D027               	goto	l7683
 26551                           
 26552                           ;stkvar	_bexp @ sp[(-4)+1]
 26553  0145E2  0EFD               	movlw	-3
 26554  0145E4  28E3               	incf	plusw1,w,c
 26555  0145E6  A4D8               	btfss	status,2,c
 26556  0145E8  D018               	goto	l7679
 26557  0145EA  0E00               	movlw	0
 26558  0145EC  6E09               	movwf	(btemp+8)^0,c
 26559  0145EE  0E00               	movlw	0
 26560  0145F0  6E0A               	movwf	(btemp+9)^0,c
 26561  0145F2  0E00               	movlw	0
 26562  0145F4  6E0B               	movwf	(btemp+10)^0,c
 26563  0145F6  0E00               	movlw	0
 26564  0145F8  6E0C               	movwf	(btemp+11)^0,c
 26565                           
 26566                           ;stkvar	_b @ sp[(-4)+-4]
 26567  0145FA  0EF8               	movlw	-8
 26568  0145FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26569  014602  0EF9               	movlw	-7
 26570  014604  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26571  01460A  0EFA               	movlw	-6
 26572  01460C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26573  014612  0EFB               	movlw	-5
 26574  014614  0060  F033  FFE3   	movff	btemp+11,plusw1
 26575  01461A                     l7679:
 26576                           
 26577                           ;stkvar	_b @ sp[(-4)+-4]
 26578  01461A  0EFA               	movlw	-6
 26579  01461C  8EE3               	bsf	plusw1,7,c
 26580                           
 26581                           ;stkvar	_b @ sp[(-4)+-4]
 26582  01461E  0EFB               	movlw	251
 26583  014620  24E1               	addwf	fsr1l,w,c
 26584  014622  6ED9               	movwf	fsr2l,c
 26585  014624  0EFF               	movlw	255
 26586  014626  20E2               	addwfc	fsr1h,w,c
 26587  014628  6EDA               	movwf	fsr2h,c
 26588  01462A  0E00               	movlw	0
 26589  01462C  6EDF               	movwf	indf2,c
 26590  01462E  D018               	goto	l7685
 26591  014630                     l7683:
 26592  014630  0E00               	movlw	0
 26593  014632  6E09               	movwf	(btemp+8)^0,c
 26594  014634  0E00               	movlw	0
 26595  014636  6E0A               	movwf	(btemp+9)^0,c
 26596  014638  0E00               	movlw	0
 26597  01463A  6E0B               	movwf	(btemp+10)^0,c
 26598  01463C  0E00               	movlw	0
 26599  01463E  6E0C               	movwf	(btemp+11)^0,c
 26600                           
 26601                           ;stkvar	_b @ sp[(-4)+-4]
 26602  014640  0EF8               	movlw	-8
 26603  014642  0060  F027  FFE3   	movff	btemp+8,plusw1
 26604  014648  0EF9               	movlw	-7
 26605  01464A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26606  014650  0EFA               	movlw	-6
 26607  014652  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26608  014658  0EFB               	movlw	-5
 26609  01465A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26610  014660                     l7685:
 26611                           
 26612                           ;stkvar	_a @ sp[(-4)+-8]
 26613  014660  0EF7               	movlw	247
 26614  014662  24E1               	addwf	fsr1l,w,c
 26615  014664  6ED9               	movwf	fsr2l,c
 26616  014666  0EFF               	movlw	255
 26617  014668  20E2               	addwfc	fsr1h,w,c
 26618  01466A  6EDA               	movwf	fsr2h,c
 26619  01466C  50DF               	movf	indf2,w,c
 26620  01466E  6E0C               	movwf	(btemp+11)^0,c
 26621  014670  0E80               	movlw	128
 26622  014672  160C               	andwf	(btemp+11)^0,f,c
 26623                           
 26624                           ;stkvar	_aexp @ sp[(-4)+2]
 26625  014674  0EFE               	movlw	-2
 26626  014676  0060  F033  FFE3   	movff	btemp+11,plusw1
 26627                           
 26628                           ;stkvar	_signs @ sp[(-4)+3]
 26629                           ;stkvar	_aexp @ sp[(-4)+2]
 26630  01467C  50E1               	movf	fsr1l,w,c
 26631  01467E  0FFE               	addlw	-2
 26632  014680  6ED9               	movwf	fsr2l,c
 26633  014682  50E2               	movf	fsr1h,w,c
 26634  014684  6EDA               	movwf	fsr2h,c
 26635  014686  0EFF               	movlw	255
 26636  014688  22DA               	addwfc	fsr2h,f,c
 26637  01468A  0EFF               	movlw	-1
 26638  01468C  50E3               	movf	plusw1,w,c
 26639  01468E  18DE               	xorwf	postinc2,w,c
 26640  014690  B4D8               	btfsc	status,2,c
 26641  014692  D002               	goto	l7691
 26642                           
 26643                           ;stkvar	_signs @ sp[(-4)+3]
 26644  014694  0EFF               	movlw	-1
 26645  014696  8CE3               	bsf	plusw1,6,c
 26646  014698                     l7691:
 26647                           
 26648                           ;stkvar	_a @ sp[(-4)+-8]
 26649  014698  0EF7               	movlw	247
 26650  01469A  24E1               	addwf	fsr1l,w,c
 26651  01469C  6ED9               	movwf	fsr2l,c
 26652  01469E  0EFF               	movlw	255
 26653  0146A0  20E2               	addwfc	fsr1h,w,c
 26654  0146A2  6EDA               	movwf	fsr2h,c
 26655  0146A4  50DF               	movf	indf2,w,c
 26656  0146A6  6E0C               	movwf	(btemp+11)^0,c
 26657  0146A8  90D8               	bcf	status,0,c
 26658  0146AA  340C               	rlcf	(btemp+11)^0,w,c
 26659  0146AC  6E0B               	movwf	(btemp+10)^0,c
 26660                           
 26661                           ;stkvar	_aexp @ sp[(-4)+2]
 26662  0146AE  0EFE               	movlw	-2
 26663  0146B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26664                           
 26665                           ;stkvar	_a @ sp[(-4)+-8]
 26666  0146B6  0EF6               	movlw	246
 26667  0146B8  24E1               	addwf	fsr1l,w,c
 26668  0146BA  6ED9               	movwf	fsr2l,c
 26669  0146BC  0EFF               	movlw	255
 26670  0146BE  20E2               	addwfc	fsr1h,w,c
 26671  0146C0  6EDA               	movwf	fsr2h,c
 26672  0146C2  AEDF               	btfss	indf2,7,c
 26673  0146C4  D002               	goto	l7697
 26674                           
 26675                           ;stkvar	_aexp @ sp[(-4)+2]
 26676  0146C6  0EFE               	movlw	-2
 26677  0146C8  80E3               	bsf	plusw1,0,c
 26678  0146CA                     l7697:
 26679                           
 26680                           ;stkvar	_aexp @ sp[(-4)+2]
 26681  0146CA  0EFE               	movlw	-2
 26682  0146CC  50E3               	movf	plusw1,w,c
 26683  0146CE  B4D8               	btfsc	status,2,c
 26684  0146D0  D027               	goto	l7707
 26685                           
 26686                           ;stkvar	_aexp @ sp[(-4)+2]
 26687  0146D2  0EFE               	movlw	-2
 26688  0146D4  28E3               	incf	plusw1,w,c
 26689  0146D6  A4D8               	btfss	status,2,c
 26690  0146D8  D018               	goto	l7703
 26691  0146DA  0E00               	movlw	0
 26692  0146DC  6E09               	movwf	(btemp+8)^0,c
 26693  0146DE  0E00               	movlw	0
 26694  0146E0  6E0A               	movwf	(btemp+9)^0,c
 26695  0146E2  0E00               	movlw	0
 26696  0146E4  6E0B               	movwf	(btemp+10)^0,c
 26697  0146E6  0E00               	movlw	0
 26698  0146E8  6E0C               	movwf	(btemp+11)^0,c
 26699                           
 26700                           ;stkvar	_a @ sp[(-4)+-8]
 26701  0146EA  0EF4               	movlw	-12
 26702  0146EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26703  0146F2  0EF5               	movlw	-11
 26704  0146F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26705  0146FA  0EF6               	movlw	-10
 26706  0146FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26707  014702  0EF7               	movlw	-9
 26708  014704  0060  F033  FFE3   	movff	btemp+11,plusw1
 26709  01470A                     l7703:
 26710                           
 26711                           ;stkvar	_a @ sp[(-4)+-8]
 26712  01470A  0EF6               	movlw	-10
 26713  01470C  8EE3               	bsf	plusw1,7,c
 26714                           
 26715                           ;stkvar	_a @ sp[(-4)+-8]
 26716  01470E  0EF7               	movlw	247
 26717  014710  24E1               	addwf	fsr1l,w,c
 26718  014712  6ED9               	movwf	fsr2l,c
 26719  014714  0EFF               	movlw	255
 26720  014716  20E2               	addwfc	fsr1h,w,c
 26721  014718  6EDA               	movwf	fsr2h,c
 26722  01471A  0E00               	movlw	0
 26723  01471C  6EDF               	movwf	indf2,c
 26724  01471E  D018               	goto	l7709
 26725  014720                     l7707:
 26726  014720  0E00               	movlw	0
 26727  014722  6E09               	movwf	(btemp+8)^0,c
 26728  014724  0E00               	movlw	0
 26729  014726  6E0A               	movwf	(btemp+9)^0,c
 26730  014728  0E00               	movlw	0
 26731  01472A  6E0B               	movwf	(btemp+10)^0,c
 26732  01472C  0E00               	movlw	0
 26733  01472E  6E0C               	movwf	(btemp+11)^0,c
 26734                           
 26735                           ;stkvar	_a @ sp[(-4)+-8]
 26736  014730  0EF4               	movlw	-12
 26737  014732  0060  F027  FFE3   	movff	btemp+8,plusw1
 26738  014738  0EF5               	movlw	-11
 26739  01473A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26740  014740  0EF6               	movlw	-10
 26741  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26742  014748  0EF7               	movlw	-9
 26743  01474A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26744  014750                     l7709:
 26745                           
 26746                           ;stkvar	_bexp @ sp[(-4)+1]
 26747                           ;stkvar	_aexp @ sp[(-4)+2]
 26748  014750  50E1               	movf	fsr1l,w,c
 26749  014752  0FFE               	addlw	-2
 26750  014754  6ED9               	movwf	fsr2l,c
 26751  014756  50E2               	movf	fsr1h,w,c
 26752  014758  6EDA               	movwf	fsr2h,c
 26753  01475A  0EFF               	movlw	255
 26754  01475C  22DA               	addwfc	fsr2h,f,c
 26755  01475E  0EFD               	movlw	-3
 26756  014760  50E3               	movf	plusw1,w,c
 26757  014762  5CDE               	subwf	postinc2,w,c
 26758  014764  B0D8               	btfsc	status,0,c
 26759  014766  D0A4               	goto	l7745
 26760                           
 26761                           ;stkvar	_signs @ sp[(-4)+3]
 26762  014768  0EFF               	movlw	-1
 26763  01476A  ACE3               	btfss	plusw1,6,c
 26764  01476C  D002               	goto	l7715
 26765                           
 26766                           ;stkvar	_signs @ sp[(-4)+3]
 26767  01476E  0EFF               	movlw	-1
 26768  014770  7EE3               	btg	plusw1,7,c
 26769  014772                     l7715:
 26770                           
 26771                           ;stkvar	_bexp @ sp[(-4)+1]
 26772                           ;stkvar	_grs @ sp[(-4)+0]
 26773  014772  0EFD               	movlw	-3
 26774  014774  006F FF8C  F001    	movff	plusw1,btemp
 26775  01477A  0EFC               	movlw	-4
 26776  01477C  0060  F007  FFE3   	movff	btemp,plusw1
 26777                           
 26778                           ;stkvar	_aexp @ sp[(-4)+2]
 26779                           ;stkvar	_bexp @ sp[(-4)+1]
 26780  014782  0EFE               	movlw	-2
 26781  014784  006F FF8C  F001    	movff	plusw1,btemp
 26782  01478A  0EFD               	movlw	-3
 26783  01478C  0060  F007  FFE3   	movff	btemp,plusw1
 26784                           
 26785                           ;stkvar	_grs @ sp[(-4)+0]
 26786                           ;stkvar	_aexp @ sp[(-4)+2]
 26787  014792  0EFC               	movlw	-4
 26788  014794  006F FF8C  F001    	movff	plusw1,btemp
 26789  01479A  0EFE               	movlw	-2
 26790  01479C  0060  F007  FFE3   	movff	btemp,plusw1
 26791                           
 26792                           ;stkvar	_b @ sp[(-4)+-4]
 26793                           ;stkvar	_grs @ sp[(-4)+0]
 26794  0147A2  0EF8               	movlw	-8
 26795  0147A4  006F FF8C  F001    	movff	plusw1,btemp
 26796  0147AA  0EFC               	movlw	-4
 26797  0147AC  0060  F007  FFE3   	movff	btemp,plusw1
 26798                           
 26799                           ;stkvar	_a @ sp[(-4)+-8]
 26800                           ;stkvar	_b @ sp[(-4)+-4]
 26801  0147B2  0EF4               	movlw	-12
 26802  0147B4  006F FF8C  F001    	movff	plusw1,btemp
 26803  0147BA  0EF8               	movlw	-8
 26804  0147BC  0060  F007  FFE3   	movff	btemp,plusw1
 26805                           
 26806                           ;stkvar	_grs @ sp[(-4)+0]
 26807                           ;stkvar	_a @ sp[(-4)+-8]
 26808  0147C2  0EFC               	movlw	-4
 26809  0147C4  006F FF8C  F001    	movff	plusw1,btemp
 26810  0147CA  0EF4               	movlw	-12
 26811  0147CC  0060  F007  FFE3   	movff	btemp,plusw1
 26812                           
 26813                           ;stkvar	_b @ sp[(-4)+-4]
 26814  0147D2  0EF9               	movlw	249
 26815  0147D4  24E1               	addwf	fsr1l,w,c
 26816  0147D6  6ED9               	movwf	fsr2l,c
 26817  0147D8  0EFF               	movlw	255
 26818  0147DA  20E2               	addwfc	fsr1h,w,c
 26819  0147DC  6EDA               	movwf	fsr2h,c
 26820  0147DE  50DF               	movf	indf2,w,c
 26821  0147E0  6E0C               	movwf	(btemp+11)^0,c
 26822                           
 26823                           ;stkvar	_grs @ sp[(-4)+0]
 26824  0147E2  0EFC               	movlw	-4
 26825  0147E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26826                           
 26827                           ;stkvar	_a @ sp[(-4)+-8]
 26828  0147EA  0EF5               	movlw	245
 26829  0147EC  24E1               	addwf	fsr1l,w,c
 26830  0147EE  6ED9               	movwf	fsr2l,c
 26831  0147F0  0EFF               	movlw	255
 26832  0147F2  20E2               	addwfc	fsr1h,w,c
 26833  0147F4  6EDA               	movwf	fsr2h,c
 26834                           
 26835                           ;stkvar	_b @ sp[(-4)+-4]
 26836  0147F6  0EF9               	movlw	249
 26837  0147F8  24E1               	addwf	fsr1l,w,c
 26838  0147FA  6EE9               	movwf	fsr0l,c
 26839  0147FC  0EFF               	movlw	255
 26840  0147FE  20E2               	addwfc	fsr1h,w,c
 26841  014800  6EEA               	movwf	fsr0h,c
 26842  014802  006F FF7F FFEF     	movff	indf2,indf0
 26843                           
 26844                           ;stkvar	_grs @ sp[(-4)+0]
 26845                           ;stkvar	_a @ sp[(-4)+-8]
 26846  014808  0EF5               	movlw	245
 26847  01480A  24E1               	addwf	fsr1l,w,c
 26848  01480C  6ED9               	movwf	fsr2l,c
 26849  01480E  0EFF               	movlw	255
 26850  014810  20E2               	addwfc	fsr1h,w,c
 26851  014812  6EDA               	movwf	fsr2h,c
 26852  014814  0EFC               	movlw	-4
 26853  014816  006F FF8F FFDF     	movff	plusw1,indf2
 26854                           
 26855                           ;stkvar	_b @ sp[(-4)+-4]
 26856  01481C  0EFA               	movlw	250
 26857  01481E  24E1               	addwf	fsr1l,w,c
 26858  014820  6ED9               	movwf	fsr2l,c
 26859  014822  0EFF               	movlw	255
 26860  014824  20E2               	addwfc	fsr1h,w,c
 26861  014826  6EDA               	movwf	fsr2h,c
 26862  014828  50DF               	movf	indf2,w,c
 26863  01482A  6E0C               	movwf	(btemp+11)^0,c
 26864                           
 26865                           ;stkvar	_grs @ sp[(-4)+0]
 26866  01482C  0EFC               	movlw	-4
 26867  01482E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26868                           
 26869                           ;stkvar	_a @ sp[(-4)+-8]
 26870  014834  0EF6               	movlw	246
 26871  014836  24E1               	addwf	fsr1l,w,c
 26872  014838  6ED9               	movwf	fsr2l,c
 26873  01483A  0EFF               	movlw	255
 26874  01483C  20E2               	addwfc	fsr1h,w,c
 26875  01483E  6EDA               	movwf	fsr2h,c
 26876                           
 26877                           ;stkvar	_b @ sp[(-4)+-4]
 26878  014840  0EFA               	movlw	250
 26879  014842  24E1               	addwf	fsr1l,w,c
 26880  014844  6EE9               	movwf	fsr0l,c
 26881  014846  0EFF               	movlw	255
 26882  014848  20E2               	addwfc	fsr1h,w,c
 26883  01484A  6EEA               	movwf	fsr0h,c
 26884  01484C  006F FF7F FFEF     	movff	indf2,indf0
 26885                           
 26886                           ;stkvar	_grs @ sp[(-4)+0]
 26887                           ;stkvar	_a @ sp[(-4)+-8]
 26888  014852  0EF6               	movlw	246
 26889  014854  24E1               	addwf	fsr1l,w,c
 26890  014856  6ED9               	movwf	fsr2l,c
 26891  014858  0EFF               	movlw	255
 26892  01485A  20E2               	addwfc	fsr1h,w,c
 26893  01485C  6EDA               	movwf	fsr2h,c
 26894  01485E  0EFC               	movlw	-4
 26895  014860  006F FF8F FFDF     	movff	plusw1,indf2
 26896                           
 26897                           ;stkvar	_b @ sp[(-4)+-4]
 26898  014866  0EFB               	movlw	251
 26899  014868  24E1               	addwf	fsr1l,w,c
 26900  01486A  6ED9               	movwf	fsr2l,c
 26901  01486C  0EFF               	movlw	255
 26902  01486E  20E2               	addwfc	fsr1h,w,c
 26903  014870  6EDA               	movwf	fsr2h,c
 26904  014872  50DF               	movf	indf2,w,c
 26905  014874  6E0C               	movwf	(btemp+11)^0,c
 26906                           
 26907                           ;stkvar	_grs @ sp[(-4)+0]
 26908  014876  0EFC               	movlw	-4
 26909  014878  0060  F033  FFE3   	movff	btemp+11,plusw1
 26910                           
 26911                           ;stkvar	_a @ sp[(-4)+-8]
 26912  01487E  0EF7               	movlw	247
 26913  014880  24E1               	addwf	fsr1l,w,c
 26914  014882  6ED9               	movwf	fsr2l,c
 26915  014884  0EFF               	movlw	255
 26916  014886  20E2               	addwfc	fsr1h,w,c
 26917  014888  6EDA               	movwf	fsr2h,c
 26918                           
 26919                           ;stkvar	_b @ sp[(-4)+-4]
 26920  01488A  0EFB               	movlw	251
 26921  01488C  24E1               	addwf	fsr1l,w,c
 26922  01488E  6EE9               	movwf	fsr0l,c
 26923  014890  0EFF               	movlw	255
 26924  014892  20E2               	addwfc	fsr1h,w,c
 26925  014894  6EEA               	movwf	fsr0h,c
 26926  014896  006F FF7F FFEF     	movff	indf2,indf0
 26927                           
 26928                           ;stkvar	_grs @ sp[(-4)+0]
 26929                           ;stkvar	_a @ sp[(-4)+-8]
 26930  01489C  0EF7               	movlw	247
 26931  01489E  24E1               	addwf	fsr1l,w,c
 26932  0148A0  6ED9               	movwf	fsr2l,c
 26933  0148A2  0EFF               	movlw	255
 26934  0148A4  20E2               	addwfc	fsr1h,w,c
 26935  0148A6  6EDA               	movwf	fsr2h,c
 26936  0148A8  0EFC               	movlw	-4
 26937  0148AA  006F FF8F FFDF     	movff	plusw1,indf2
 26938  0148B0                     l7745:
 26939                           
 26940                           ;stkvar	_grs @ sp[(-4)+0]
 26941  0148B0  0EFC               	movlw	-4
 26942  0148B2  6AE3               	clrf	plusw1,c
 26943                           
 26944                           ;stkvar	_aexp @ sp[(-4)+2]
 26945  0148B4  0EFE               	movlw	-2
 26946  0148B6  50E3               	movf	plusw1,w,c
 26947  0148B8  6E0B               	movwf	(btemp+10)^0,c
 26948  0148BA  6A0C               	clrf	(btemp+11)^0,c
 26949                           
 26950                           ;stkvar	_bexp @ sp[(-4)+1]
 26951  0148BC  0EFD               	movlw	-3
 26952  0148BE  50E3               	movf	plusw1,w,c
 26953  0148C0  5E0B               	subwf	(btemp+10)^0,f,c
 26954  0148C2  0E00               	movlw	0
 26955  0148C4  5A0C               	subwfb	(btemp+11)^0,f,c
 26956  0148C6  BE0C               	btfsc	(btemp+11)^0,7,c
 26957  0148C8  D062               	goto	l7769
 26958  0148CA  500C               	movf	(btemp+11)^0,w,c
 26959  0148CC  E104               	bnz	u5560
 26960  0148CE  0E1A               	movlw	26
 26961  0148D0  5C0B               	subwf	(btemp+10)^0,w,c
 26962  0148D2  A0D8               	btfss	status,0,c
 26963  0148D4  D05C               	goto	l7769
 26964  0148D6                     u5560:
 26965                           
 26966                           ;stkvar	_b @ sp[(-4)+-4]
 26967  0148D6  0EF8               	movlw	-8
 26968  0148D8  50E3               	movf	plusw1,w,c
 26969  0148DA  E10A               	bnz	u5571
 26970  0148DC  0EF9               	movlw	-7
 26971  0148DE  50E3               	movf	plusw1,w,c
 26972  0148E0  E107               	bnz	u5571
 26973  0148E2  0EFA               	movlw	-6
 26974  0148E4  50E3               	movf	plusw1,w,c
 26975  0148E6  E104               	bnz	u5571
 26976  0148E8  0EFB               	movlw	-5
 26977  0148EA  50E3               	movf	plusw1,w,c
 26978  0148EC  B4D8               	btfsc	status,2,c
 26979  0148EE  D003               	goto	u5570
 26980  0148F0                     u5571:
 26981  0148F0  6A0C               	clrf	(btemp+11)^0,c
 26982  0148F2  2A0C               	incf	(btemp+11)^0,f,c
 26983  0148F4  D001               	goto	u5588
 26984  0148F6                     u5570:
 26985  0148F6  6A0C               	clrf	(btemp+11)^0,c
 26986  0148F8                     u5588:
 26987                           
 26988                           ;stkvar	_grs @ sp[(-4)+0]
 26989  0148F8  0EFC               	movlw	-4
 26990  0148FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26991                           
 26992                           ;stkvar	_b @ sp[(-4)+-4]
 26993  014900  0EF8               	movlw	-8
 26994  014902  6AE3               	clrf	plusw1,c
 26995  014904  0EF9               	movlw	-7
 26996  014906  6AE3               	clrf	plusw1,c
 26997  014908  0EFA               	movlw	-6
 26998  01490A  6AE3               	clrf	plusw1,c
 26999  01490C  0EFB               	movlw	-5
 27000  01490E  6AE3               	clrf	plusw1,c
 27001                           
 27002                           ;stkvar	_aexp @ sp[(-4)+2]
 27003                           ;stkvar	_bexp @ sp[(-4)+1]
 27004  014910  0EFE               	movlw	-2
 27005  014912  006F FF8C  F001    	movff	plusw1,btemp
 27006  014918  0EFD               	movlw	-3
 27007  01491A  0060  F007  FFE3   	movff	btemp,plusw1
 27008  014920  D042               	goto	u5620
 27009  014922                     l7755:
 27010                           
 27011                           ;stkvar	_grs @ sp[(-4)+0]
 27012  014922  0EFC               	movlw	-4
 27013  014924  A0E3               	btfss	plusw1,0,c
 27014  014926  D00D               	goto	l7759
 27015                           
 27016                           ;stkvar	_grs @ sp[(-4)+0]
 27017  014928  0EFC               	movlw	-4
 27018  01492A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27019  014930  90D8               	bcf	status,0,c
 27020  014932  320C               	rrcf	(btemp+11)^0,f,c
 27021  014934  0E01               	movlw	1
 27022  014936  120C               	iorwf	(btemp+11)^0,f,c
 27023                           
 27024                           ;stkvar	_grs @ sp[(-4)+0]
 27025  014938  0EFC               	movlw	-4
 27026  01493A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27027  014940  D009               	goto	l7761
 27028  014942                     l7759:
 27029                           
 27030                           ;stkvar	_grs @ sp[(-4)+0]
 27031  014942  50E1               	movf	fsr1l,w,c
 27032  014944  0FFC               	addlw	-4
 27033  014946  6ED9               	movwf	fsr2l,c
 27034  014948  50E2               	movf	fsr1h,w,c
 27035  01494A  6EDA               	movwf	fsr2h,c
 27036  01494C  0EFF               	movlw	255
 27037  01494E  22DA               	addwfc	fsr2h,f,c
 27038  014950  90D8               	bcf	status,0,c
 27039  014952  32DF               	rrcf	indf2,f,c
 27040  014954                     l7761:
 27041                           
 27042                           ;stkvar	_b @ sp[(-4)+-4]
 27043  014954  0EF8               	movlw	-8
 27044  014956  A0E3               	btfss	plusw1,0,c
 27045  014958  D002               	goto	l7765
 27046                           
 27047                           ;stkvar	_grs @ sp[(-4)+0]
 27048  01495A  0EFC               	movlw	-4
 27049  01495C  8EE3               	bsf	plusw1,7,c
 27050  01495E                     l7765:
 27051  01495E  0E01               	movlw	1
 27052  014960  6E0C               	movwf	(btemp+11)^0,c
 27053                           
 27054                           ;stkvar	_b @ sp[(-4)+-4]
 27055  014962  50E1               	movf	fsr1l,w,c
 27056  014964  0FF8               	addlw	-8
 27057  014966  6ED9               	movwf	fsr2l,c
 27058  014968  50E2               	movf	fsr1h,w,c
 27059  01496A  6EDA               	movwf	fsr2h,c
 27060  01496C  0EFF               	movlw	255
 27061  01496E  22DA               	addwfc	fsr2h,f,c
 27062  014970  280C               	incf	(btemp+11)^0,w,c
 27063  014972  52DE               	movf	postinc2,f,c
 27064  014974  D008               	goto	u5610
 27065  014976                     u5615:
 27066  014976  52DE               	movf	postinc2,f,c
 27067  014978  90D8               	bcf	status,0,c
 27068  01497A  BEDC               	btfsc	preinc2,7,c
 27069  01497C  80D8               	bsf	status,0,c
 27070  01497E  32DD               	rrcf	postdec2,f,c
 27071  014980  32DD               	rrcf	postdec2,f,c
 27072  014982  32DD               	rrcf	postdec2,f,c
 27073  014984  32DE               	rrcf	postinc2,f,c
 27074  014986                     u5610:
 27075  014986  2EE8               	decfsz	wreg,f,c
 27076  014988  D7F6               	goto	u5615
 27077                           
 27078                           ;stkvar	_bexp @ sp[(-4)+1]
 27079  01498A  0EFD               	movlw	-3
 27080  01498C  2AE3               	incf	plusw1,f,c
 27081  01498E                     l7769:
 27082                           
 27083                           ;stkvar	_aexp @ sp[(-4)+2]
 27084                           ;stkvar	_bexp @ sp[(-4)+1]
 27085  01498E  50E1               	movf	fsr1l,w,c
 27086  014990  0FFD               	addlw	-3
 27087  014992  6ED9               	movwf	fsr2l,c
 27088  014994  50E2               	movf	fsr1h,w,c
 27089  014996  6EDA               	movwf	fsr2h,c
 27090  014998  0EFF               	movlw	255
 27091  01499A  22DA               	addwfc	fsr2h,f,c
 27092  01499C  0EFE               	movlw	-2
 27093  01499E  50E3               	movf	plusw1,w,c
 27094  0149A0  5CDE               	subwf	postinc2,w,c
 27095  0149A2  A0D8               	btfss	status,0,c
 27096  0149A4  D7BE               	goto	l7755
 27097  0149A6                     u5620:
 27098                           
 27099                           ;stkvar	_signs @ sp[(-4)+3]
 27100  0149A6  0EFF               	movlw	-1
 27101  0149A8  BCE3               	btfsc	plusw1,6,c
 27102  0149AA  D066               	goto	l7797
 27103                           
 27104                           ;stkvar	_bexp @ sp[(-4)+1]
 27105  0149AC  0EFD               	movlw	-3
 27106  0149AE  50E3               	movf	plusw1,w,c
 27107  0149B0  B4D8               	btfsc	status,2,c
 27108  0149B2  D0F2               	goto	u5720
 27109                           
 27110                           ;stkvar	_a @ sp[(-4)+-8]
 27111                           ;stkvar	_b @ sp[(-4)+-4]
 27112  0149B4  0EF8               	movlw	-8
 27113  0149B6  50E3               	movf	plusw1,w,c
 27114  0149B8  6E01               	movwf	btemp^0,c
 27115  0149BA  0EF4               	movlw	-12
 27116  0149BC  50E3               	movf	plusw1,w,c
 27117  0149BE  2601               	addwf	btemp^0,f,c
 27118  0149C0  0EF8               	movlw	-8
 27119  0149C2  0060  F007  FFE3   	movff	btemp,plusw1
 27120  0149C8  0EF9               	movlw	-7
 27121  0149CA  50E3               	movf	plusw1,w,c
 27122  0149CC  6E01               	movwf	btemp^0,c
 27123  0149CE  0EF5               	movlw	-11
 27124  0149D0  50E3               	movf	plusw1,w,c
 27125  0149D2  2201               	addwfc	btemp^0,f,c
 27126  0149D4  0EF9               	movlw	-7
 27127  0149D6  0060  F007  FFE3   	movff	btemp,plusw1
 27128  0149DC  0EFA               	movlw	-6
 27129  0149DE  50E3               	movf	plusw1,w,c
 27130  0149E0  6E01               	movwf	btemp^0,c
 27131  0149E2  0EF6               	movlw	-10
 27132  0149E4  50E3               	movf	plusw1,w,c
 27133  0149E6  2201               	addwfc	btemp^0,f,c
 27134  0149E8  0EFA               	movlw	-6
 27135  0149EA  0060  F007  FFE3   	movff	btemp,plusw1
 27136  0149F0  0EFB               	movlw	-5
 27137  0149F2  50E3               	movf	plusw1,w,c
 27138  0149F4  6E01               	movwf	btemp^0,c
 27139  0149F6  0EF7               	movlw	-9
 27140  0149F8  50E3               	movf	plusw1,w,c
 27141  0149FA  2201               	addwfc	btemp^0,f,c
 27142  0149FC  0EFB               	movlw	-5
 27143  0149FE  0060  F007  FFE3   	movff	btemp,plusw1
 27144                           
 27145                           ;stkvar	_b @ sp[(-4)+-4]
 27146  014A04  0EFB               	movlw	-5
 27147  014A06  A0E3               	btfss	plusw1,0,c
 27148  014A08  D101               	goto	u5760
 27149                           
 27150                           ;stkvar	_grs @ sp[(-4)+0]
 27151  014A0A  0EFC               	movlw	-4
 27152  014A0C  A0E3               	btfss	plusw1,0,c
 27153  014A0E  D00D               	goto	l7787
 27154                           
 27155                           ;stkvar	_grs @ sp[(-4)+0]
 27156  014A10  0EFC               	movlw	-4
 27157  014A12  006F FF8C  F00C    	movff	plusw1,btemp+11
 27158  014A18  90D8               	bcf	status,0,c
 27159  014A1A  320C               	rrcf	(btemp+11)^0,f,c
 27160  014A1C  0E01               	movlw	1
 27161  014A1E  120C               	iorwf	(btemp+11)^0,f,c
 27162                           
 27163                           ;stkvar	_grs @ sp[(-4)+0]
 27164  014A20  0EFC               	movlw	-4
 27165  014A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 27166  014A28  D009               	goto	l7789
 27167  014A2A                     l7787:
 27168                           
 27169                           ;stkvar	_grs @ sp[(-4)+0]
 27170  014A2A  50E1               	movf	fsr1l,w,c
 27171  014A2C  0FFC               	addlw	-4
 27172  014A2E  6ED9               	movwf	fsr2l,c
 27173  014A30  50E2               	movf	fsr1h,w,c
 27174  014A32  6EDA               	movwf	fsr2h,c
 27175  014A34  0EFF               	movlw	255
 27176  014A36  22DA               	addwfc	fsr2h,f,c
 27177  014A38  90D8               	bcf	status,0,c
 27178  014A3A  32DF               	rrcf	indf2,f,c
 27179  014A3C                     l7789:
 27180                           
 27181                           ;stkvar	_b @ sp[(-4)+-4]
 27182  014A3C  0EF8               	movlw	-8
 27183  014A3E  A0E3               	btfss	plusw1,0,c
 27184  014A40  D002               	goto	l7793
 27185                           
 27186                           ;stkvar	_grs @ sp[(-4)+0]
 27187  014A42  0EFC               	movlw	-4
 27188  014A44  8EE3               	bsf	plusw1,7,c
 27189  014A46                     l7793:
 27190  014A46  0E01               	movlw	1
 27191  014A48  6E0C               	movwf	(btemp+11)^0,c
 27192                           
 27193                           ;stkvar	_b @ sp[(-4)+-4]
 27194  014A4A  50E1               	movf	fsr1l,w,c
 27195  014A4C  0FF8               	addlw	-8
 27196  014A4E  6ED9               	movwf	fsr2l,c
 27197  014A50  50E2               	movf	fsr1h,w,c
 27198  014A52  6EDA               	movwf	fsr2h,c
 27199  014A54  0EFF               	movlw	255
 27200  014A56  22DA               	addwfc	fsr2h,f,c
 27201  014A58  280C               	incf	(btemp+11)^0,w,c
 27202  014A5A  52DE               	movf	postinc2,f,c
 27203  014A5C  D008               	goto	u5680
 27204  014A5E                     u5685:
 27205  014A5E  52DE               	movf	postinc2,f,c
 27206  014A60  90D8               	bcf	status,0,c
 27207  014A62  BEDC               	btfsc	preinc2,7,c
 27208  014A64  80D8               	bsf	status,0,c
 27209  014A66  32DD               	rrcf	postdec2,f,c
 27210  014A68  32DD               	rrcf	postdec2,f,c
 27211  014A6A  32DD               	rrcf	postdec2,f,c
 27212  014A6C  32DE               	rrcf	postinc2,f,c
 27213  014A6E                     u5680:
 27214  014A6E  2EE8               	decfsz	wreg,f,c
 27215  014A70  D7F6               	goto	u5685
 27216                           
 27217                           ;stkvar	_bexp @ sp[(-4)+1]
 27218  014A72  0EFD               	movlw	-3
 27219  014A74  2AE3               	incf	plusw1,f,c
 27220  014A76  D0CA               	goto	u5760
 27221  014A78                     l7797:
 27222                           
 27223                           ;stkvar	_a @ sp[(-4)+-8]
 27224                           ;stkvar	_b @ sp[(-4)+-4]
 27225  014A78  50E1               	movf	fsr1l,w,c
 27226  014A7A  0FF8               	addlw	-8
 27227  014A7C  6ED9               	movwf	fsr2l,c
 27228  014A7E  50E2               	movf	fsr1h,w,c
 27229  014A80  6EDA               	movwf	fsr2h,c
 27230  014A82  0EFF               	movlw	255
 27231  014A84  22DA               	addwfc	fsr2h,f,c
 27232  014A86  0EF4               	movlw	-12
 27233  014A88  50E3               	movf	plusw1,w,c
 27234  014A8A  5CDE               	subwf	postinc2,w,c
 27235  014A8C  0EF5               	movlw	-11
 27236  014A8E  50E3               	movf	plusw1,w,c
 27237  014A90  58DE               	subwfb	postinc2,w,c
 27238  014A92  0EF6               	movlw	-10
 27239  014A94  50E3               	movf	plusw1,w,c
 27240  014A96  58DE               	subwfb	postinc2,w,c
 27241  014A98  50DE               	movf	postinc2,w,c
 27242  014A9A  0A80               	xorlw	128
 27243  014A9C  6E01               	movwf	btemp^0,c
 27244  014A9E  0EF7               	movlw	-9
 27245  014AA0  50E3               	movf	plusw1,w,c
 27246  014AA2  0A80               	xorlw	128
 27247  014AA4  5801               	subwfb	btemp^0,w,c
 27248  014AA6  B0D8               	btfsc	status,0,c
 27249  014AA8  D053               	goto	l7809
 27250                           
 27251                           ;stkvar	_b @ sp[(-4)+-4]
 27252                           ;stkvar	_a @ sp[(-4)+-8]
 27253  014AAA  0EF4               	movlw	-12
 27254  014AAC  006F FF8C  F009    	movff	plusw1,btemp+8
 27255  014AB2  0EF5               	movlw	-11
 27256  014AB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 27257  014ABA  0EF6               	movlw	-10
 27258  014ABC  006F FF8C  F00B    	movff	plusw1,btemp+10
 27259  014AC2  0EF7               	movlw	-9
 27260  014AC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27261  014ACA  0EF8               	movlw	-8
 27262  014ACC  50E3               	movf	plusw1,w,c
 27263  014ACE  5E09               	subwf	(btemp+8)^0,f,c
 27264  014AD0  0EF9               	movlw	-7
 27265  014AD2  50E3               	movf	plusw1,w,c
 27266  014AD4  5A0A               	subwfb	(btemp+9)^0,f,c
 27267  014AD6  0EFA               	movlw	-6
 27268  014AD8  50E3               	movf	plusw1,w,c
 27269  014ADA  5A0B               	subwfb	(btemp+10)^0,f,c
 27270  014ADC  0EFB               	movlw	-5
 27271  014ADE  50E3               	movf	plusw1,w,c
 27272  014AE0  5A0C               	subwfb	(btemp+11)^0,f,c
 27273  014AE2  0EFF               	movlw	255
 27274  014AE4  2409               	addwf	(btemp+8)^0,w,c
 27275  014AE6  6E05               	movwf	(btemp+4)^0,c
 27276  014AE8  0EFF               	movlw	255
 27277  014AEA  200A               	addwfc	(btemp+9)^0,w,c
 27278  014AEC  6E06               	movwf	(btemp+5)^0,c
 27279  014AEE  0EFF               	movlw	255
 27280  014AF0  200B               	addwfc	(btemp+10)^0,w,c
 27281  014AF2  6E07               	movwf	(btemp+6)^0,c
 27282  014AF4  0EFF               	movlw	255
 27283  014AF6  200C               	addwfc	(btemp+11)^0,w,c
 27284  014AF8  6E08               	movwf	(btemp+7)^0,c
 27285                           
 27286                           ;stkvar	_b @ sp[(-4)+-4]
 27287  014AFA  0EF8               	movlw	-8
 27288  014AFC  0060  F017  FFE3   	movff	btemp+4,plusw1
 27289  014B02  0EF9               	movlw	-7
 27290  014B04  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27291  014B0A  0EFA               	movlw	-6
 27292  014B0C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27293  014B12  0EFB               	movlw	-5
 27294  014B14  0060  F023  FFE3   	movff	btemp+7,plusw1
 27295                           
 27296                           ;stkvar	_signs @ sp[(-4)+3]
 27297  014B1A  0EFF               	movlw	-1
 27298  014B1C  7EE3               	btg	plusw1,7,c
 27299                           
 27300                           ;stkvar	_grs @ sp[(-4)+0]
 27301  014B1E  0EFC               	movlw	-4
 27302  014B20  50E3               	movf	plusw1,w,c
 27303  014B22  0800               	sublw	0
 27304  014B24  6E0C               	movwf	(btemp+11)^0,c
 27305                           
 27306                           ;stkvar	_grs @ sp[(-4)+0]
 27307  014B26  0EFC               	movlw	-4
 27308  014B28  0060  F033  FFE3   	movff	btemp+11,plusw1
 27309                           
 27310                           ;stkvar	_grs @ sp[(-4)+0]
 27311  014B2E  0EFC               	movlw	-4
 27312  014B30  50E3               	movf	plusw1,w,c
 27313  014B32  A4D8               	btfss	status,2,c
 27314  014B34  D020               	goto	l7811
 27315                           
 27316                           ;stkvar	_b @ sp[(-4)+-4]
 27317  014B36  50E1               	movf	fsr1l,w,c
 27318  014B38  0FF8               	addlw	-8
 27319  014B3A  6ED9               	movwf	fsr2l,c
 27320  014B3C  50E2               	movf	fsr1h,w,c
 27321  014B3E  6EDA               	movwf	fsr2h,c
 27322  014B40  0EFF               	movlw	255
 27323  014B42  22DA               	addwfc	fsr2h,f,c
 27324  014B44  2ADE               	incf	postinc2,f,c
 27325  014B46  0E00               	movlw	0
 27326  014B48  22DE               	addwfc	postinc2,f,c
 27327  014B4A  22DE               	addwfc	postinc2,f,c
 27328  014B4C  22DE               	addwfc	postinc2,f,c
 27329  014B4E  D013               	goto	l7811
 27330  014B50                     l7809:
 27331                           
 27332                           ;stkvar	_a @ sp[(-4)+-8]
 27333                           ;stkvar	_b @ sp[(-4)+-4]
 27334  014B50  50E1               	movf	fsr1l,w,c
 27335  014B52  0FF8               	addlw	-8
 27336  014B54  6ED9               	movwf	fsr2l,c
 27337  014B56  50E2               	movf	fsr1h,w,c
 27338  014B58  6EDA               	movwf	fsr2h,c
 27339  014B5A  0EFF               	movlw	255
 27340  014B5C  22DA               	addwfc	fsr2h,f,c
 27341  014B5E  0EF4               	movlw	-12
 27342  014B60  50E3               	movf	plusw1,w,c
 27343  014B62  5EDE               	subwf	postinc2,f,c
 27344  014B64  0EF5               	movlw	-11
 27345  014B66  50E3               	movf	plusw1,w,c
 27346  014B68  5ADE               	subwfb	postinc2,f,c
 27347  014B6A  0EF6               	movlw	-10
 27348  014B6C  50E3               	movf	plusw1,w,c
 27349  014B6E  5ADE               	subwfb	postinc2,f,c
 27350  014B70  0EF7               	movlw	-9
 27351  014B72  50E3               	movf	plusw1,w,c
 27352  014B74  5ADE               	subwfb	postinc2,f,c
 27353  014B76                     l7811:
 27354                           
 27355                           ;stkvar	_b @ sp[(-4)+-4]
 27356  014B76  0EF8               	movlw	-8
 27357  014B78  50E3               	movf	plusw1,w,c
 27358  014B7A  E145               	bnz	l7833
 27359  014B7C  0EF9               	movlw	-7
 27360  014B7E  50E3               	movf	plusw1,w,c
 27361  014B80  E142               	bnz	l7833
 27362  014B82  0EFA               	movlw	-6
 27363  014B84  50E3               	movf	plusw1,w,c
 27364  014B86  E13F               	bnz	l7833
 27365  014B88  0EFB               	movlw	-5
 27366  014B8A  50E3               	movf	plusw1,w,c
 27367  014B8C  A4D8               	btfss	status,2,c
 27368  014B8E  D03B               	goto	l7833
 27369                           
 27370                           ;stkvar	_grs @ sp[(-4)+0]
 27371  014B90  0EFC               	movlw	-4
 27372  014B92  50E3               	movf	plusw1,w,c
 27373  014B94  A4D8               	btfss	status,2,c
 27374  014B96  D037               	goto	l7833
 27375  014B98                     u5720:
 27376  014B98  0E00               	movlw	0
 27377  014B9A  6E01               	movwf	btemp^0,c
 27378  014B9C  0E00               	movlw	0
 27379  014B9E  6E02               	movwf	(btemp+1)^0,c
 27380  014BA0  0E00               	movlw	0
 27381  014BA2  6E03               	movwf	(btemp+2)^0,c
 27382  014BA4  0E00               	movlw	0
 27383  014BA6  6E04               	movwf	(btemp+3)^0,c
 27384  014BA8  D0C6               	goto	l2941
 27385  014BAA                     l7819:
 27386                           
 27387                           ;stkvar	_b @ sp[(-4)+-4]
 27388  014BAA  90D8               	bcf	status,0,c
 27389  014BAC  0EF8               	movlw	-8
 27390  014BAE  36E3               	rlcf	plusw1,f,c
 27391  014BB0  0EF9               	movlw	-7
 27392  014BB2  36E3               	rlcf	plusw1,f,c
 27393  014BB4  0EFA               	movlw	-6
 27394  014BB6  36E3               	rlcf	plusw1,f,c
 27395  014BB8  0EFB               	movlw	-5
 27396  014BBA  36E3               	rlcf	plusw1,f,c
 27397                           
 27398                           ;stkvar	_grs @ sp[(-4)+0]
 27399  014BBC  0EFC               	movlw	-4
 27400  014BBE  AEE3               	btfss	plusw1,7,c
 27401  014BC0  D002               	goto	l2953
 27402                           
 27403                           ;stkvar	_b @ sp[(-4)+-4]
 27404  014BC2  0EF8               	movlw	-8
 27405  014BC4  80E3               	bsf	plusw1,0,c
 27406  014BC6                     l2953:
 27407                           
 27408                           ;stkvar	_grs @ sp[(-4)+0]
 27409  014BC6  0EFC               	movlw	-4
 27410  014BC8  A0E3               	btfss	plusw1,0,c
 27411  014BCA  D00E               	goto	l7827
 27412                           
 27413                           ;stkvar	_grs @ sp[(-4)+0]
 27414  014BCC  0EFC               	movlw	-4
 27415  014BCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27416  014BD4  90D8               	bcf	status,0,c
 27417  014BD6  340C               	rlcf	(btemp+11)^0,w,c
 27418  014BD8  6E0B               	movwf	(btemp+10)^0,c
 27419  014BDA  0E01               	movlw	1
 27420  014BDC  120B               	iorwf	(btemp+10)^0,f,c
 27421                           
 27422                           ;stkvar	_grs @ sp[(-4)+0]
 27423  014BDE  0EFC               	movlw	-4
 27424  014BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27425  014BE6  D009               	goto	l7829
 27426  014BE8                     l7827:
 27427                           
 27428                           ;stkvar	_grs @ sp[(-4)+0]
 27429  014BE8  50E1               	movf	fsr1l,w,c
 27430  014BEA  0FFC               	addlw	-4
 27431  014BEC  6ED9               	movwf	fsr2l,c
 27432  014BEE  50E2               	movf	fsr1h,w,c
 27433  014BF0  6EDA               	movwf	fsr2h,c
 27434  014BF2  0EFF               	movlw	255
 27435  014BF4  22DA               	addwfc	fsr2h,f,c
 27436  014BF6  90D8               	bcf	status,0,c
 27437  014BF8  36DF               	rlcf	indf2,f,c
 27438  014BFA                     l7829:
 27439                           
 27440                           ;stkvar	_bexp @ sp[(-4)+1]
 27441  014BFA  0EFD               	movlw	-3
 27442  014BFC  50E3               	movf	plusw1,w,c
 27443  014BFE  B4D8               	btfsc	status,2,c
 27444  014C00  D002               	goto	l7833
 27445                           
 27446                           ;stkvar	_bexp @ sp[(-4)+1]
 27447  014C02  0EFD               	movlw	-3
 27448  014C04  06E3               	decf	plusw1,f,c
 27449  014C06                     l7833:
 27450                           
 27451                           ;stkvar	_b @ sp[(-4)+-4]
 27452  014C06  0EFA               	movlw	-6
 27453  014C08  AEE3               	btfss	plusw1,7,c
 27454  014C0A  D7CF               	goto	l7819
 27455  014C0C                     u5760:
 27456                           
 27457                           ;stkvar	_aexp @ sp[(-4)+2]
 27458  014C0C  0EFE               	movlw	-2
 27459  014C0E  6AE3               	clrf	plusw1,c
 27460                           
 27461                           ;stkvar	_grs @ sp[(-4)+0]
 27462  014C10  0EFC               	movlw	-4
 27463  014C12  AEE3               	btfss	plusw1,7,c
 27464  014C14  D00F               	goto	l7847
 27465                           
 27466                           ;stkvar	_grs @ sp[(-4)+0]
 27467  014C16  0EFC               	movlw	-4
 27468  014C18  006F FF8C  F00C    	movff	plusw1,btemp+11
 27469  014C1E  0E7F               	movlw	127
 27470  014C20  160C               	andwf	(btemp+11)^0,f,c
 27471  014C22  B4D8               	btfsc	status,2,c
 27472  014C24  D004               	goto	l7843
 27473  014C26                     u5780:
 27474                           
 27475                           ;stkvar	_aexp @ sp[(-4)+2]
 27476  014C26  0EFE               	movlw	-2
 27477  014C28  6AE3               	clrf	plusw1,c
 27478  014C2A  2AE3               	incf	plusw1,f,c
 27479  014C2C  D003               	goto	l7847
 27480  014C2E                     l7843:
 27481                           
 27482                           ;stkvar	_b @ sp[(-4)+-4]
 27483  014C2E  0EF8               	movlw	-8
 27484  014C30  B0E3               	btfsc	plusw1,0,c
 27485  014C32  D7F9               	goto	u5780
 27486  014C34                     l7847:
 27487                           
 27488                           ;stkvar	_aexp @ sp[(-4)+2]
 27489  014C34  0EFE               	movlw	-2
 27490  014C36  50E3               	movf	plusw1,w,c
 27491  014C38  B4D8               	btfsc	status,2,c
 27492  014C3A  D02B               	goto	l7859
 27493                           
 27494                           ;stkvar	_b @ sp[(-4)+-4]
 27495  014C3C  50E1               	movf	fsr1l,w,c
 27496  014C3E  0FF8               	addlw	-8
 27497  014C40  6ED9               	movwf	fsr2l,c
 27498  014C42  50E2               	movf	fsr1h,w,c
 27499  014C44  6EDA               	movwf	fsr2h,c
 27500  014C46  0EFF               	movlw	255
 27501  014C48  22DA               	addwfc	fsr2h,f,c
 27502  014C4A  2ADE               	incf	postinc2,f,c
 27503  014C4C  0E00               	movlw	0
 27504  014C4E  22DE               	addwfc	postinc2,f,c
 27505  014C50  22DE               	addwfc	postinc2,f,c
 27506  014C52  22DE               	addwfc	postinc2,f,c
 27507                           
 27508                           ;stkvar	_b @ sp[(-4)+-4]
 27509  014C54  0EFB               	movlw	-5
 27510  014C56  A0E3               	btfss	plusw1,0,c
 27511  014C58  D01C               	goto	l7859
 27512  014C5A  0E01               	movlw	1
 27513  014C5C  6E0C               	movwf	(btemp+11)^0,c
 27514                           
 27515                           ;stkvar	_b @ sp[(-4)+-4]
 27516  014C5E  50E1               	movf	fsr1l,w,c
 27517  014C60  0FF8               	addlw	-8
 27518  014C62  6ED9               	movwf	fsr2l,c
 27519  014C64  50E2               	movf	fsr1h,w,c
 27520  014C66  6EDA               	movwf	fsr2h,c
 27521  014C68  0EFF               	movlw	255
 27522  014C6A  22DA               	addwfc	fsr2h,f,c
 27523  014C6C  280C               	incf	(btemp+11)^0,w,c
 27524  014C6E  52DE               	movf	postinc2,f,c
 27525  014C70  D008               	goto	u5820
 27526  014C72                     u5825:
 27527  014C72  52DE               	movf	postinc2,f,c
 27528  014C74  90D8               	bcf	status,0,c
 27529  014C76  BEDC               	btfsc	preinc2,7,c
 27530  014C78  80D8               	bsf	status,0,c
 27531  014C7A  32DD               	rrcf	postdec2,f,c
 27532  014C7C  32DD               	rrcf	postdec2,f,c
 27533  014C7E  32DD               	rrcf	postdec2,f,c
 27534  014C80  32DE               	rrcf	postinc2,f,c
 27535  014C82                     u5820:
 27536  014C82  2EE8               	decfsz	wreg,f,c
 27537  014C84  D7F6               	goto	u5825
 27538                           
 27539                           ;stkvar	_bexp @ sp[(-4)+1]
 27540  014C86  0EFD               	movlw	-3
 27541  014C88  28E3               	incf	plusw1,w,c
 27542  014C8A  B4D8               	btfsc	status,2,c
 27543  014C8C  D002               	goto	l7859
 27544                           
 27545                           ;stkvar	_bexp @ sp[(-4)+1]
 27546  014C8E  0EFD               	movlw	-3
 27547  014C90  2AE3               	incf	plusw1,f,c
 27548  014C92                     l7859:
 27549                           
 27550                           ;stkvar	_bexp @ sp[(-4)+1]
 27551  014C92  0EFD               	movlw	-3
 27552  014C94  28E3               	incf	plusw1,w,c
 27553  014C96  B4D8               	btfsc	status,2,c
 27554  014C98  D004               	goto	u5850
 27555                           
 27556                           ;stkvar	_bexp @ sp[(-4)+1]
 27557  014C9A  0EFD               	movlw	-3
 27558  014C9C  50E3               	movf	plusw1,w,c
 27559  014C9E  A4D8               	btfss	status,2,c
 27560  014CA0  D00E               	goto	l7869
 27561  014CA2                     u5850:
 27562                           
 27563                           ;stkvar	_b @ sp[(-4)+-4]
 27564  014CA2  0EF8               	movlw	-8
 27565  014CA4  6AE3               	clrf	plusw1,c
 27566  014CA6  0EF9               	movlw	-7
 27567  014CA8  6AE3               	clrf	plusw1,c
 27568  014CAA  0EFA               	movlw	-6
 27569  014CAC  6AE3               	clrf	plusw1,c
 27570  014CAE  0EFB               	movlw	-5
 27571  014CB0  6AE3               	clrf	plusw1,c
 27572                           
 27573                           ;stkvar	_bexp @ sp[(-4)+1]
 27574  014CB2  0EFD               	movlw	-3
 27575  014CB4  50E3               	movf	plusw1,w,c
 27576  014CB6  A4D8               	btfss	status,2,c
 27577  014CB8  D002               	goto	l7869
 27578                           
 27579                           ;stkvar	_signs @ sp[(-4)+3]
 27580  014CBA  0EFF               	movlw	-1
 27581  014CBC  6AE3               	clrf	plusw1,c
 27582  014CBE                     l7869:
 27583                           
 27584                           ;stkvar	_bexp @ sp[(-4)+1]
 27585  014CBE  0EFD               	movlw	-3
 27586  014CC0  A0E3               	btfss	plusw1,0,c
 27587  014CC2  D009               	goto	l7873
 27588                           
 27589                           ;stkvar	_b @ sp[(-4)+-4]
 27590  014CC4  0EFA               	movlw	250
 27591  014CC6  24E1               	addwf	fsr1l,w,c
 27592  014CC8  6ED9               	movwf	fsr2l,c
 27593  014CCA  0EFF               	movlw	255
 27594  014CCC  20E2               	addwfc	fsr1h,w,c
 27595  014CCE  6EDA               	movwf	fsr2h,c
 27596  014CD0  0E00               	movlw	0
 27597  014CD2  8EDB               	bsf	plusw2,7,c
 27598  014CD4  D008               	goto	l7875
 27599  014CD6                     l7873:
 27600                           
 27601                           ;stkvar	_b @ sp[(-4)+-4]
 27602  014CD6  0EFA               	movlw	250
 27603  014CD8  24E1               	addwf	fsr1l,w,c
 27604  014CDA  6ED9               	movwf	fsr2l,c
 27605  014CDC  0EFF               	movlw	255
 27606  014CDE  20E2               	addwfc	fsr1h,w,c
 27607  014CE0  6EDA               	movwf	fsr2h,c
 27608  014CE2  0E7F               	movlw	127
 27609  014CE4  16DF               	andwf	indf2,f,c
 27610  014CE6                     l7875:
 27611                           
 27612                           ;stkvar	_b @ sp[(-4)+-4]
 27613  014CE6  0EFB               	movlw	251
 27614  014CE8  24E1               	addwf	fsr1l,w,c
 27615  014CEA  6ED9               	movwf	fsr2l,c
 27616  014CEC  0EFF               	movlw	255
 27617  014CEE  20E2               	addwfc	fsr1h,w,c
 27618  014CF0  6EDA               	movwf	fsr2h,c
 27619                           
 27620                           ;stkvar	_bexp @ sp[(-4)+1]
 27621  014CF2  0EFD               	movlw	-3
 27622  014CF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27623  014CFA  90D8               	bcf	status,0,c
 27624  014CFC  300C               	rrcf	(btemp+11)^0,w,c
 27625  014CFE  6EDF               	movwf	indf2,c
 27626                           
 27627                           ;stkvar	_signs @ sp[(-4)+3]
 27628  014D00  0EFF               	movlw	-1
 27629  014D02  AEE3               	btfss	plusw1,7,c
 27630  014D04  D008               	goto	l7881
 27631                           
 27632                           ;stkvar	_b @ sp[(-4)+-4]
 27633  014D06  0EFB               	movlw	251
 27634  014D08  24E1               	addwf	fsr1l,w,c
 27635  014D0A  6ED9               	movwf	fsr2l,c
 27636  014D0C  0EFF               	movlw	255
 27637  014D0E  20E2               	addwfc	fsr1h,w,c
 27638  014D10  6EDA               	movwf	fsr2h,c
 27639  014D12  0E00               	movlw	0
 27640  014D14  8EDB               	bsf	plusw2,7,c
 27641  014D16                     l7881:
 27642                           
 27643                           ;stkvar	_b @ sp[(-4)+-4]
 27644  014D16  0EF8               	movlw	-8
 27645  014D18  006F FF8C  F001    	movff	plusw1,btemp
 27646  014D1E  0EF9               	movlw	-7
 27647  014D20  006F FF8C  F002    	movff	plusw1,btemp+1
 27648  014D26  0EFA               	movlw	-6
 27649  014D28  006F FF8C  F003    	movff	plusw1,btemp+2
 27650  014D2E  0EFB               	movlw	-5
 27651  014D30  006F FF8C  F004    	movff	plusw1,btemp+3
 27652  014D36                     l2941:
 27653                           
 27654                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27655  014D36  0EF4               	movlw	244
 27656  014D38  26E1               	addwf	fsr1l,f,c
 27657  014D3A  0EFF               	movlw	255
 27658  014D3C  22E2               	addwfc	fsr1h,f,c
 27659  014D3E  0012               	return		;funcret
 27660  014D40                     __end_of___fladd:
 27661                           	opt callstack 0
 27662                           
 27663 ;; *************** function ___flmul *****************
 27664 ;; Defined at:
 27665 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;  b               4  [STACK] unsigned char 
 27668 ;;  a               4  [STACK] unsigned char 
 27669 ;; Auto vars:     Size  Location     Type
 27670 ;;  prod            4  [STACK] struct .
 27671 ;;  grs             4  [STACK] unsigned long 
 27672 ;;  temp            2  [STACK] struct .
 27673 ;;  bexp            1  [STACK] unsigned char 
 27674 ;;  aexp            1  [STACK] unsigned char 
 27675 ;;  sign            1  [STACK] unsigned char 
 27676 ;; Return value:  Size  Location     Type
 27677 ;;                  4  [STACK] unsigned char 
 27678 ;; Registers used:
 27679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27680 ;; Tracked objects:
 27681 ;;		On entry : 0/1
 27682 ;;		On exit  : 0/0
 27683 ;;		Unchanged: 0/0
 27684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27689 ;;Total ram usage:        0 bytes
 27690 ;; Hardware stack levels used:    1
 27691 ;; Hardware stack levels required when called:   15
 27692 ;; This function calls:
 27693 ;;		Nothing
 27694 ;; This function is called by:
 27695 ;;		_conv_raw_result
 27696 ;;		_lp_filter
 27697 ;;		_calc_model_data
 27698 ;;		_calc_bsoc
 27699 ;;		_init_bsoc
 27700 ;;		_efgtoa
 27701 ;; This function uses a reentrant model
 27702 ;;
 27703                           
 27704                           	psect	text106
 27705  013D5A                     __ptext106:
 27706                           	opt callstack 0
 27707  013D5A                     ___flmul:
 27708                           	opt callstack 0
 27709                           
 27710                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27711  013D5A  0E0D               	movlw	13
 27712  013D5C  26E1               	addwf	fsr1l,f,c
 27713  013D5E  0E00               	movlw	0
 27714  013D60  22E2               	addwfc	fsr1h,f,c
 27715                           
 27716                           ;stkvar	_b @ sp[(-13)+-4]
 27717                           
 27718                           ;incstack = 0
 27719 ;; hardware stack exceeded
 27720  013D62  0EF2               	movlw	242
 27721  013D64  24E1               	addwf	fsr1l,w,c
 27722  013D66  6ED9               	movwf	fsr2l,c
 27723  013D68  0EFF               	movlw	255
 27724  013D6A  20E2               	addwfc	fsr1h,w,c
 27725  013D6C  6EDA               	movwf	fsr2h,c
 27726  013D6E  50DF               	movf	indf2,w,c
 27727  013D70  6E0C               	movwf	(btemp+11)^0,c
 27728  013D72  0E80               	movlw	128
 27729  013D74  160C               	andwf	(btemp+11)^0,f,c
 27730                           
 27731                           ;stkvar	_sign @ sp[(-13)+12]
 27732  013D76  0EFF               	movlw	-1
 27733  013D78  0060  F033  FFE3   	movff	btemp+11,plusw1
 27734                           
 27735                           ;stkvar	_b @ sp[(-13)+-4]
 27736  013D7E  0EF2               	movlw	242
 27737  013D80  24E1               	addwf	fsr1l,w,c
 27738  013D82  6ED9               	movwf	fsr2l,c
 27739  013D84  0EFF               	movlw	255
 27740  013D86  20E2               	addwfc	fsr1h,w,c
 27741  013D88  6EDA               	movwf	fsr2h,c
 27742  013D8A  50DF               	movf	indf2,w,c
 27743  013D8C  6E0C               	movwf	(btemp+11)^0,c
 27744  013D8E  90D8               	bcf	status,0,c
 27745  013D90  340C               	rlcf	(btemp+11)^0,w,c
 27746  013D92  6E0B               	movwf	(btemp+10)^0,c
 27747                           
 27748                           ;stkvar	_bexp @ sp[(-13)+10]
 27749  013D94  0EFD               	movlw	-3
 27750  013D96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27751                           
 27752                           ;stkvar	_b @ sp[(-13)+-4]
 27753  013D9C  0EF1               	movlw	241
 27754  013D9E  24E1               	addwf	fsr1l,w,c
 27755  013DA0  6ED9               	movwf	fsr2l,c
 27756  013DA2  0EFF               	movlw	255
 27757  013DA4  20E2               	addwfc	fsr1h,w,c
 27758  013DA6  6EDA               	movwf	fsr2h,c
 27759  013DA8  AEDF               	btfss	indf2,7,c
 27760  013DAA  D002               	goto	l8265
 27761                           
 27762                           ;stkvar	_bexp @ sp[(-13)+10]
 27763  013DAC  0EFD               	movlw	-3
 27764  013DAE  80E3               	bsf	plusw1,0,c
 27765  013DB0                     l8265:
 27766                           
 27767                           ;stkvar	_bexp @ sp[(-13)+10]
 27768  013DB0  0EFD               	movlw	-3
 27769  013DB2  50E3               	movf	plusw1,w,c
 27770  013DB4  B4D8               	btfsc	status,2,c
 27771  013DB6  D01F               	goto	l8273
 27772                           
 27773                           ;stkvar	_bexp @ sp[(-13)+10]
 27774  013DB8  0EFD               	movlw	-3
 27775  013DBA  28E3               	incf	plusw1,w,c
 27776  013DBC  A4D8               	btfss	status,2,c
 27777  013DBE  D018               	goto	l8271
 27778  013DC0  0E00               	movlw	0
 27779  013DC2  6E09               	movwf	(btemp+8)^0,c
 27780  013DC4  0E00               	movlw	0
 27781  013DC6  6E0A               	movwf	(btemp+9)^0,c
 27782  013DC8  0E00               	movlw	0
 27783  013DCA  6E0B               	movwf	(btemp+10)^0,c
 27784  013DCC  0E00               	movlw	0
 27785  013DCE  6E0C               	movwf	(btemp+11)^0,c
 27786                           
 27787                           ;stkvar	_b @ sp[(-13)+-4]
 27788  013DD0  0EEF               	movlw	-17
 27789  013DD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27790  013DD8  0EF0               	movlw	-16
 27791  013DDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27792  013DE0  0EF1               	movlw	-15
 27793  013DE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27794  013DE8  0EF2               	movlw	-14
 27795  013DEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27796  013DF0                     l8271:
 27797                           
 27798                           ;stkvar	_b @ sp[(-13)+-4]
 27799  013DF0  0EF1               	movlw	-15
 27800  013DF2  8EE3               	bsf	plusw1,7,c
 27801  013DF4  D018               	goto	l8275
 27802  013DF6                     l8273:
 27803  013DF6  0E00               	movlw	0
 27804  013DF8  6E09               	movwf	(btemp+8)^0,c
 27805  013DFA  0E00               	movlw	0
 27806  013DFC  6E0A               	movwf	(btemp+9)^0,c
 27807  013DFE  0E00               	movlw	0
 27808  013E00  6E0B               	movwf	(btemp+10)^0,c
 27809  013E02  0E00               	movlw	0
 27810  013E04  6E0C               	movwf	(btemp+11)^0,c
 27811                           
 27812                           ;stkvar	_b @ sp[(-13)+-4]
 27813  013E06  0EEF               	movlw	-17
 27814  013E08  0060  F027  FFE3   	movff	btemp+8,plusw1
 27815  013E0E  0EF0               	movlw	-16
 27816  013E10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27817  013E16  0EF1               	movlw	-15
 27818  013E18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27819  013E1E  0EF2               	movlw	-14
 27820  013E20  0060  F033  FFE3   	movff	btemp+11,plusw1
 27821  013E26                     l8275:
 27822                           
 27823                           ;stkvar	_a @ sp[(-13)+-8]
 27824  013E26  0EEE               	movlw	238
 27825  013E28  24E1               	addwf	fsr1l,w,c
 27826  013E2A  6ED9               	movwf	fsr2l,c
 27827  013E2C  0EFF               	movlw	255
 27828  013E2E  20E2               	addwfc	fsr1h,w,c
 27829  013E30  6EDA               	movwf	fsr2h,c
 27830  013E32  50DF               	movf	indf2,w,c
 27831  013E34  6E0C               	movwf	(btemp+11)^0,c
 27832  013E36  0E80               	movlw	128
 27833  013E38  160C               	andwf	(btemp+11)^0,f,c
 27834                           
 27835                           ;stkvar	_sign @ sp[(-13)+12]
 27836  013E3A  50E1               	movf	fsr1l,w,c
 27837  013E3C  0FFF               	addlw	-1
 27838  013E3E  6ED9               	movwf	fsr2l,c
 27839  013E40  50E2               	movf	fsr1h,w,c
 27840  013E42  6EDA               	movwf	fsr2h,c
 27841  013E44  0EFF               	movlw	255
 27842  013E46  22DA               	addwfc	fsr2h,f,c
 27843  013E48  500C               	movf	(btemp+11)^0,w,c
 27844  013E4A  1ADF               	xorwf	indf2,f,c
 27845                           
 27846                           ;stkvar	_a @ sp[(-13)+-8]
 27847  013E4C  0EEE               	movlw	238
 27848  013E4E  24E1               	addwf	fsr1l,w,c
 27849  013E50  6ED9               	movwf	fsr2l,c
 27850  013E52  0EFF               	movlw	255
 27851  013E54  20E2               	addwfc	fsr1h,w,c
 27852  013E56  6EDA               	movwf	fsr2h,c
 27853  013E58  50DF               	movf	indf2,w,c
 27854  013E5A  6E0C               	movwf	(btemp+11)^0,c
 27855  013E5C  90D8               	bcf	status,0,c
 27856  013E5E  340C               	rlcf	(btemp+11)^0,w,c
 27857  013E60  6E0B               	movwf	(btemp+10)^0,c
 27858                           
 27859                           ;stkvar	_aexp @ sp[(-13)+11]
 27860  013E62  0EFE               	movlw	-2
 27861  013E64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27862                           
 27863                           ;stkvar	_a @ sp[(-13)+-8]
 27864  013E6A  0EED               	movlw	237
 27865  013E6C  24E1               	addwf	fsr1l,w,c
 27866  013E6E  6ED9               	movwf	fsr2l,c
 27867  013E70  0EFF               	movlw	255
 27868  013E72  20E2               	addwfc	fsr1h,w,c
 27869  013E74  6EDA               	movwf	fsr2h,c
 27870  013E76  AEDF               	btfss	indf2,7,c
 27871  013E78  D002               	goto	l8283
 27872                           
 27873                           ;stkvar	_aexp @ sp[(-13)+11]
 27874  013E7A  0EFE               	movlw	-2
 27875  013E7C  80E3               	bsf	plusw1,0,c
 27876  013E7E                     l8283:
 27877                           
 27878                           ;stkvar	_aexp @ sp[(-13)+11]
 27879  013E7E  0EFE               	movlw	-2
 27880  013E80  50E3               	movf	plusw1,w,c
 27881  013E82  B4D8               	btfsc	status,2,c
 27882  013E84  D01F               	goto	l8291
 27883                           
 27884                           ;stkvar	_aexp @ sp[(-13)+11]
 27885  013E86  0EFE               	movlw	-2
 27886  013E88  28E3               	incf	plusw1,w,c
 27887  013E8A  A4D8               	btfss	status,2,c
 27888  013E8C  D018               	goto	l8289
 27889  013E8E  0E00               	movlw	0
 27890  013E90  6E09               	movwf	(btemp+8)^0,c
 27891  013E92  0E00               	movlw	0
 27892  013E94  6E0A               	movwf	(btemp+9)^0,c
 27893  013E96  0E00               	movlw	0
 27894  013E98  6E0B               	movwf	(btemp+10)^0,c
 27895  013E9A  0E00               	movlw	0
 27896  013E9C  6E0C               	movwf	(btemp+11)^0,c
 27897                           
 27898                           ;stkvar	_a @ sp[(-13)+-8]
 27899  013E9E  0EEB               	movlw	-21
 27900  013EA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 27901  013EA6  0EEC               	movlw	-20
 27902  013EA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27903  013EAE  0EED               	movlw	-19
 27904  013EB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27905  013EB6  0EEE               	movlw	-18
 27906  013EB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27907  013EBE                     l8289:
 27908                           
 27909                           ;stkvar	_a @ sp[(-13)+-8]
 27910  013EBE  0EED               	movlw	-19
 27911  013EC0  8EE3               	bsf	plusw1,7,c
 27912  013EC2  D018               	goto	l8293
 27913  013EC4                     l8291:
 27914  013EC4  0E00               	movlw	0
 27915  013EC6  6E09               	movwf	(btemp+8)^0,c
 27916  013EC8  0E00               	movlw	0
 27917  013ECA  6E0A               	movwf	(btemp+9)^0,c
 27918  013ECC  0E00               	movlw	0
 27919  013ECE  6E0B               	movwf	(btemp+10)^0,c
 27920  013ED0  0E00               	movlw	0
 27921  013ED2  6E0C               	movwf	(btemp+11)^0,c
 27922                           
 27923                           ;stkvar	_a @ sp[(-13)+-8]
 27924  013ED4  0EEB               	movlw	-21
 27925  013ED6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27926  013EDC  0EEC               	movlw	-20
 27927  013EDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27928  013EE4  0EED               	movlw	-19
 27929  013EE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27930  013EEC  0EEE               	movlw	-18
 27931  013EEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27932  013EF4                     l8293:
 27933                           
 27934                           ;stkvar	_aexp @ sp[(-13)+11]
 27935  013EF4  0EFE               	movlw	-2
 27936  013EF6  50E3               	movf	plusw1,w,c
 27937  013EF8  B4D8               	btfsc	status,2,c
 27938  013EFA  D004               	goto	u6790
 27939                           
 27940                           ;stkvar	_bexp @ sp[(-13)+10]
 27941  013EFC  0EFD               	movlw	-3
 27942  013EFE  50E3               	movf	plusw1,w,c
 27943  013F00  A4D8               	btfss	status,2,c
 27944  013F02  D009               	goto	l8301
 27945  013F04                     u6790:
 27946  013F04  0E00               	movlw	0
 27947  013F06  6E01               	movwf	btemp^0,c
 27948  013F08  0E00               	movlw	0
 27949  013F0A  6E02               	movwf	(btemp+1)^0,c
 27950  013F0C  0E00               	movlw	0
 27951  013F0E  6E03               	movwf	(btemp+2)^0,c
 27952  013F10  0E00               	movlw	0
 27953  013F12  6E04               	movwf	(btemp+3)^0,c
 27954  013F14  D332               	goto	l3022
 27955  013F16                     l8301:
 27956                           
 27957                           ;stkvar	_b @ sp[(-13)+-4]
 27958  013F16  0EEF               	movlw	-17
 27959  013F18  006F FF8C  F00C    	movff	plusw1,btemp+11
 27960                           
 27961                           ;stkvar	_a @ sp[(-13)+-8]
 27962  013F1E  0EED               	movlw	237
 27963  013F20  24E1               	addwf	fsr1l,w,c
 27964  013F22  6ED9               	movwf	fsr2l,c
 27965  013F24  0EFF               	movlw	255
 27966  013F26  20E2               	addwfc	fsr1h,w,c
 27967  013F28  6EDA               	movwf	fsr2h,c
 27968  013F2A  50DF               	movf	indf2,w,c
 27969  013F2C  020C               	mulwf	(btemp+11)^0,c
 27970                           
 27971                           ;stkvar	_temp @ sp[(-13)+8]
 27972  013F2E  0EFB               	movlw	-5
 27973  013F30  006F FFCF FFE3     	movff	prodl,plusw1
 27974  013F36  0EFC               	movlw	-4
 27975  013F38  006F FFD3 FFE3     	movff	prodh,plusw1
 27976                           
 27977                           ;stkvar	_temp @ sp[(-13)+8]
 27978  013F3E  0EFB               	movlw	-5
 27979  013F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 27980  013F46  0060  F030  F005   	movff	btemp+11,btemp+4
 27981  013F4C  6A06               	clrf	(btemp+5)^0,c
 27982  013F4E  6A07               	clrf	(btemp+6)^0,c
 27983  013F50  6A08               	clrf	(btemp+7)^0,c
 27984                           
 27985                           ;stkvar	_grs @ sp[(-13)+4]
 27986  013F52  0EF7               	movlw	-9
 27987  013F54  0060  F017  FFE3   	movff	btemp+4,plusw1
 27988  013F5A  0EF8               	movlw	-8
 27989  013F5C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27990  013F62  0EF9               	movlw	-7
 27991  013F64  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27992  013F6A  0EFA               	movlw	-6
 27993  013F6C  0060  F023  FFE3   	movff	btemp+7,plusw1
 27994                           
 27995                           ;stkvar	_temp @ sp[(-13)+8]
 27996  013F72  0EFC               	movlw	252
 27997  013F74  24E1               	addwf	fsr1l,w,c
 27998  013F76  6ED9               	movwf	fsr2l,c
 27999  013F78  0EFF               	movlw	255
 28000  013F7A  20E2               	addwfc	fsr1h,w,c
 28001  013F7C  6EDA               	movwf	fsr2h,c
 28002  013F7E  50DF               	movf	indf2,w,c
 28003  013F80  6E0C               	movwf	(btemp+11)^0,c
 28004  013F82  0060  F030  F005   	movff	btemp+11,btemp+4
 28005  013F88  6A06               	clrf	(btemp+5)^0,c
 28006  013F8A  6A07               	clrf	(btemp+6)^0,c
 28007  013F8C  6A08               	clrf	(btemp+7)^0,c
 28008                           
 28009                           ;stkvar	_prod @ sp[(-13)+0]
 28010  013F8E  0EF3               	movlw	-13
 28011  013F90  0060  F017  FFE3   	movff	btemp+4,plusw1
 28012  013F96  0EF4               	movlw	-12
 28013  013F98  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28014  013F9E  0EF5               	movlw	-11
 28015  013FA0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28016  013FA6  0EF6               	movlw	-10
 28017  013FA8  0060  F023  FFE3   	movff	btemp+7,plusw1
 28018                           
 28019                           ;stkvar	_b @ sp[(-13)+-4]
 28020  013FAE  0EF0               	movlw	240
 28021  013FB0  24E1               	addwf	fsr1l,w,c
 28022  013FB2  6ED9               	movwf	fsr2l,c
 28023  013FB4  0EFF               	movlw	255
 28024  013FB6  20E2               	addwfc	fsr1h,w,c
 28025  013FB8  6EDA               	movwf	fsr2h,c
 28026  013FBA  50DF               	movf	indf2,w,c
 28027  013FBC  6E0C               	movwf	(btemp+11)^0,c
 28028                           
 28029                           ;stkvar	_a @ sp[(-13)+-8]
 28030  013FBE  0EEC               	movlw	236
 28031  013FC0  24E1               	addwf	fsr1l,w,c
 28032  013FC2  6ED9               	movwf	fsr2l,c
 28033  013FC4  0EFF               	movlw	255
 28034  013FC6  20E2               	addwfc	fsr1h,w,c
 28035  013FC8  6EDA               	movwf	fsr2h,c
 28036  013FCA  50DF               	movf	indf2,w,c
 28037  013FCC  020C               	mulwf	(btemp+11)^0,c
 28038                           
 28039                           ;stkvar	_temp @ sp[(-13)+8]
 28040  013FCE  0EFB               	movlw	-5
 28041  013FD0  006F FFCF FFE3     	movff	prodl,plusw1
 28042  013FD6  0EFC               	movlw	-4
 28043  013FD8  006F FFD3 FFE3     	movff	prodh,plusw1
 28044                           
 28045                           ;stkvar	_grs @ sp[(-13)+4]
 28046  013FDE  50E1               	movf	fsr1l,w,c
 28047  013FE0  0FF7               	addlw	-9
 28048  013FE2  6ED9               	movwf	fsr2l,c
 28049  013FE4  50E2               	movf	fsr1h,w,c
 28050  013FE6  6EDA               	movwf	fsr2h,c
 28051  013FE8  0EFF               	movlw	255
 28052  013FEA  22DA               	addwfc	fsr2h,f,c
 28053                           
 28054                           ;stkvar	_temp @ sp[(-13)+8]
 28055  013FEC  0EFB               	movlw	-5
 28056  013FEE  50E3               	movf	plusw1,w,c
 28057  013FF0  26DE               	addwf	postinc2,f,c
 28058  013FF2  0E00               	movlw	0
 28059  013FF4  22DE               	addwfc	postinc2,f,c
 28060  013FF6  22DE               	addwfc	postinc2,f,c
 28061  013FF8  22DE               	addwfc	postinc2,f,c
 28062                           
 28063                           ;stkvar	_prod @ sp[(-13)+0]
 28064  013FFA  50E1               	movf	fsr1l,w,c
 28065  013FFC  0FF3               	addlw	-13
 28066  013FFE  6ED9               	movwf	fsr2l,c
 28067  014000  50E2               	movf	fsr1h,w,c
 28068  014002  6EDA               	movwf	fsr2h,c
 28069  014004  0EFF               	movlw	255
 28070  014006  22DA               	addwfc	fsr2h,f,c
 28071                           
 28072                           ;stkvar	_temp @ sp[(-13)+8]
 28073  014008  0EFC               	movlw	252
 28074  01400A  24E1               	addwf	fsr1l,w,c
 28075  01400C  6EE9               	movwf	fsr0l,c
 28076  01400E  0EFF               	movlw	255
 28077  014010  20E2               	addwfc	fsr1h,w,c
 28078  014012  6EEA               	movwf	fsr0h,c
 28079  014014  50EF               	movf	indf0,w,c
 28080  014016  26DE               	addwf	postinc2,f,c
 28081  014018  0E00               	movlw	0
 28082  01401A  22DE               	addwfc	postinc2,f,c
 28083  01401C  22DE               	addwfc	postinc2,f,c
 28084  01401E  22DE               	addwfc	postinc2,f,c
 28085                           
 28086                           ;stkvar	_b @ sp[(-13)+-4]
 28087  014020  0EF1               	movlw	241
 28088  014022  24E1               	addwf	fsr1l,w,c
 28089  014024  6ED9               	movwf	fsr2l,c
 28090  014026  0EFF               	movlw	255
 28091  014028  20E2               	addwfc	fsr1h,w,c
 28092  01402A  6EDA               	movwf	fsr2h,c
 28093  01402C  50DF               	movf	indf2,w,c
 28094  01402E  6E0C               	movwf	(btemp+11)^0,c
 28095                           
 28096                           ;stkvar	_a @ sp[(-13)+-8]
 28097  014030  0EEB               	movlw	-21
 28098  014032  50E3               	movf	plusw1,w,c
 28099  014034  020C               	mulwf	(btemp+11)^0,c
 28100                           
 28101                           ;stkvar	_temp @ sp[(-13)+8]
 28102  014036  0EFB               	movlw	-5
 28103  014038  006F FFCF FFE3     	movff	prodl,plusw1
 28104  01403E  0EFC               	movlw	-4
 28105  014040  006F FFD3 FFE3     	movff	prodh,plusw1
 28106                           
 28107                           ;stkvar	_grs @ sp[(-13)+4]
 28108  014046  50E1               	movf	fsr1l,w,c
 28109  014048  0FF7               	addlw	-9
 28110  01404A  6ED9               	movwf	fsr2l,c
 28111  01404C  50E2               	movf	fsr1h,w,c
 28112  01404E  6EDA               	movwf	fsr2h,c
 28113  014050  0EFF               	movlw	255
 28114  014052  22DA               	addwfc	fsr2h,f,c
 28115                           
 28116                           ;stkvar	_temp @ sp[(-13)+8]
 28117  014054  0EFB               	movlw	-5
 28118  014056  50E3               	movf	plusw1,w,c
 28119  014058  26DE               	addwf	postinc2,f,c
 28120  01405A  0E00               	movlw	0
 28121  01405C  22DE               	addwfc	postinc2,f,c
 28122  01405E  22DE               	addwfc	postinc2,f,c
 28123  014060  22DE               	addwfc	postinc2,f,c
 28124                           
 28125                           ;stkvar	_prod @ sp[(-13)+0]
 28126  014062  50E1               	movf	fsr1l,w,c
 28127  014064  0FF3               	addlw	-13
 28128  014066  6ED9               	movwf	fsr2l,c
 28129  014068  50E2               	movf	fsr1h,w,c
 28130  01406A  6EDA               	movwf	fsr2h,c
 28131  01406C  0EFF               	movlw	255
 28132  01406E  22DA               	addwfc	fsr2h,f,c
 28133                           
 28134                           ;stkvar	_temp @ sp[(-13)+8]
 28135  014070  0EFC               	movlw	252
 28136  014072  24E1               	addwf	fsr1l,w,c
 28137  014074  6EE9               	movwf	fsr0l,c
 28138  014076  0EFF               	movlw	255
 28139  014078  20E2               	addwfc	fsr1h,w,c
 28140  01407A  6EEA               	movwf	fsr0h,c
 28141  01407C  50EF               	movf	indf0,w,c
 28142  01407E  26DE               	addwf	postinc2,f,c
 28143  014080  0E00               	movlw	0
 28144  014082  22DE               	addwfc	postinc2,f,c
 28145  014084  22DE               	addwfc	postinc2,f,c
 28146  014086  22DE               	addwfc	postinc2,f,c
 28147                           
 28148                           ;stkvar	_grs @ sp[(-13)+4]
 28149  014088  50E1               	movf	fsr1l,w,c
 28150  01408A  0FF7               	addlw	-9
 28151  01408C  6ED9               	movwf	fsr2l,c
 28152  01408E  50E2               	movf	fsr1h,w,c
 28153  014090  6EDA               	movwf	fsr2h,c
 28154  014092  0EFF               	movlw	255
 28155  014094  22DA               	addwfc	fsr2h,f,c
 28156  014096  0E08               	movlw	8
 28157  014098                     u6805:
 28158  014098  90D8               	bcf	status,0,c
 28159  01409A  36DE               	rlcf	postinc2,f,c
 28160  01409C  36DE               	rlcf	postinc2,f,c
 28161  01409E  36DE               	rlcf	postinc2,f,c
 28162  0140A0  36DD               	rlcf	postdec2,f,c
 28163  0140A2  52DD               	movf	postdec2,f,c
 28164  0140A4  52DD               	movf	postdec2,f,c
 28165  0140A6  2EE8               	decfsz	wreg,f,c
 28166  0140A8  D7F7               	goto	u6805
 28167                           
 28168                           ;stkvar	_b @ sp[(-13)+-4]
 28169  0140AA  0EF0               	movlw	240
 28170  0140AC  24E1               	addwf	fsr1l,w,c
 28171  0140AE  6ED9               	movwf	fsr2l,c
 28172  0140B0  0EFF               	movlw	255
 28173  0140B2  20E2               	addwfc	fsr1h,w,c
 28174  0140B4  6EDA               	movwf	fsr2h,c
 28175  0140B6  50DF               	movf	indf2,w,c
 28176  0140B8  6E0C               	movwf	(btemp+11)^0,c
 28177                           
 28178                           ;stkvar	_a @ sp[(-13)+-8]
 28179  0140BA  0EEB               	movlw	-21
 28180  0140BC  50E3               	movf	plusw1,w,c
 28181  0140BE  020C               	mulwf	(btemp+11)^0,c
 28182                           
 28183                           ;stkvar	_temp @ sp[(-13)+8]
 28184  0140C0  0EFB               	movlw	-5
 28185  0140C2  006F FFCF FFE3     	movff	prodl,plusw1
 28186  0140C8  0EFC               	movlw	-4
 28187  0140CA  006F FFD3 FFE3     	movff	prodh,plusw1
 28188                           
 28189                           ;stkvar	_temp @ sp[(-13)+8]
 28190  0140D0  0EFB               	movlw	-5
 28191  0140D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28192  0140D8  0EFC               	movlw	-4
 28193  0140DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28194                           
 28195                           ;stkvar	_grs @ sp[(-13)+4]
 28196  0140E0  50E1               	movf	fsr1l,w,c
 28197  0140E2  0FF7               	addlw	-9
 28198  0140E4  6ED9               	movwf	fsr2l,c
 28199  0140E6  50E2               	movf	fsr1h,w,c
 28200  0140E8  6EDA               	movwf	fsr2h,c
 28201  0140EA  0EFF               	movlw	255
 28202  0140EC  22DA               	addwfc	fsr2h,f,c
 28203  0140EE  500B               	movf	(btemp+10)^0,w,c
 28204  0140F0  26DE               	addwf	postinc2,f,c
 28205  0140F2  500C               	movf	(btemp+11)^0,w,c
 28206  0140F4  22DE               	addwfc	postinc2,f,c
 28207  0140F6  0E00               	movlw	0
 28208  0140F8  22DE               	addwfc	postinc2,f,c
 28209  0140FA  22DE               	addwfc	postinc2,f,c
 28210                           
 28211                           ;stkvar	_b @ sp[(-13)+-4]
 28212  0140FC  0EEF               	movlw	-17
 28213  0140FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28214                           
 28215                           ;stkvar	_a @ sp[(-13)+-8]
 28216  014104  0EEC               	movlw	236
 28217  014106  24E1               	addwf	fsr1l,w,c
 28218  014108  6ED9               	movwf	fsr2l,c
 28219  01410A  0EFF               	movlw	255
 28220  01410C  20E2               	addwfc	fsr1h,w,c
 28221  01410E  6EDA               	movwf	fsr2h,c
 28222  014110  50DF               	movf	indf2,w,c
 28223  014112  020C               	mulwf	(btemp+11)^0,c
 28224                           
 28225                           ;stkvar	_temp @ sp[(-13)+8]
 28226  014114  0EFB               	movlw	-5
 28227  014116  006F FFCF FFE3     	movff	prodl,plusw1
 28228  01411C  0EFC               	movlw	-4
 28229  01411E  006F FFD3 FFE3     	movff	prodh,plusw1
 28230                           
 28231                           ;stkvar	_temp @ sp[(-13)+8]
 28232  014124  0EFB               	movlw	-5
 28233  014126  006F FF8C  F00B    	movff	plusw1,btemp+10
 28234  01412C  0EFC               	movlw	-4
 28235  01412E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28236                           
 28237                           ;stkvar	_grs @ sp[(-13)+4]
 28238  014134  50E1               	movf	fsr1l,w,c
 28239  014136  0FF7               	addlw	-9
 28240  014138  6ED9               	movwf	fsr2l,c
 28241  01413A  50E2               	movf	fsr1h,w,c
 28242  01413C  6EDA               	movwf	fsr2h,c
 28243  01413E  0EFF               	movlw	255
 28244  014140  22DA               	addwfc	fsr2h,f,c
 28245  014142  500B               	movf	(btemp+10)^0,w,c
 28246  014144  26DE               	addwf	postinc2,f,c
 28247  014146  500C               	movf	(btemp+11)^0,w,c
 28248  014148  22DE               	addwfc	postinc2,f,c
 28249  01414A  0E00               	movlw	0
 28250  01414C  22DE               	addwfc	postinc2,f,c
 28251  01414E  22DE               	addwfc	postinc2,f,c
 28252                           
 28253                           ;stkvar	_grs @ sp[(-13)+4]
 28254  014150  50E1               	movf	fsr1l,w,c
 28255  014152  0FF7               	addlw	-9
 28256  014154  6ED9               	movwf	fsr2l,c
 28257  014156  50E2               	movf	fsr1h,w,c
 28258  014158  6EDA               	movwf	fsr2h,c
 28259  01415A  0EFF               	movlw	255
 28260  01415C  22DA               	addwfc	fsr2h,f,c
 28261  01415E  0E08               	movlw	8
 28262  014160                     u6815:
 28263  014160  90D8               	bcf	status,0,c
 28264  014162  36DE               	rlcf	postinc2,f,c
 28265  014164  36DE               	rlcf	postinc2,f,c
 28266  014166  36DE               	rlcf	postinc2,f,c
 28267  014168  36DD               	rlcf	postdec2,f,c
 28268  01416A  52DD               	movf	postdec2,f,c
 28269  01416C  52DD               	movf	postdec2,f,c
 28270  01416E  2EE8               	decfsz	wreg,f,c
 28271  014170  D7F7               	goto	u6815
 28272                           
 28273                           ;stkvar	_b @ sp[(-13)+-4]
 28274  014172  0EEF               	movlw	-17
 28275  014174  006F FF8C  F00C    	movff	plusw1,btemp+11
 28276                           
 28277                           ;stkvar	_a @ sp[(-13)+-8]
 28278  01417A  0EEB               	movlw	-21
 28279  01417C  50E3               	movf	plusw1,w,c
 28280  01417E  020C               	mulwf	(btemp+11)^0,c
 28281                           
 28282                           ;stkvar	_temp @ sp[(-13)+8]
 28283  014180  0EFB               	movlw	-5
 28284  014182  006F FFCF FFE3     	movff	prodl,plusw1
 28285  014188  0EFC               	movlw	-4
 28286  01418A  006F FFD3 FFE3     	movff	prodh,plusw1
 28287                           
 28288                           ;stkvar	_temp @ sp[(-13)+8]
 28289  014190  0EFB               	movlw	-5
 28290  014192  006F FF8C  F00B    	movff	plusw1,btemp+10
 28291  014198  0EFC               	movlw	-4
 28292  01419A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28293                           
 28294                           ;stkvar	_grs @ sp[(-13)+4]
 28295  0141A0  50E1               	movf	fsr1l,w,c
 28296  0141A2  0FF7               	addlw	-9
 28297  0141A4  6ED9               	movwf	fsr2l,c
 28298  0141A6  50E2               	movf	fsr1h,w,c
 28299  0141A8  6EDA               	movwf	fsr2h,c
 28300  0141AA  0EFF               	movlw	255
 28301  0141AC  22DA               	addwfc	fsr2h,f,c
 28302  0141AE  500B               	movf	(btemp+10)^0,w,c
 28303  0141B0  26DE               	addwf	postinc2,f,c
 28304  0141B2  500C               	movf	(btemp+11)^0,w,c
 28305  0141B4  22DE               	addwfc	postinc2,f,c
 28306  0141B6  0E00               	movlw	0
 28307  0141B8  22DE               	addwfc	postinc2,f,c
 28308  0141BA  22DE               	addwfc	postinc2,f,c
 28309                           
 28310                           ;stkvar	_b @ sp[(-13)+-4]
 28311  0141BC  0EF0               	movlw	240
 28312  0141BE  24E1               	addwf	fsr1l,w,c
 28313  0141C0  6ED9               	movwf	fsr2l,c
 28314  0141C2  0EFF               	movlw	255
 28315  0141C4  20E2               	addwfc	fsr1h,w,c
 28316  0141C6  6EDA               	movwf	fsr2h,c
 28317  0141C8  50DF               	movf	indf2,w,c
 28318  0141CA  6E0C               	movwf	(btemp+11)^0,c
 28319                           
 28320                           ;stkvar	_a @ sp[(-13)+-8]
 28321  0141CC  0EED               	movlw	237
 28322  0141CE  24E1               	addwf	fsr1l,w,c
 28323  0141D0  6ED9               	movwf	fsr2l,c
 28324  0141D2  0EFF               	movlw	255
 28325  0141D4  20E2               	addwfc	fsr1h,w,c
 28326  0141D6  6EDA               	movwf	fsr2h,c
 28327  0141D8  50DF               	movf	indf2,w,c
 28328  0141DA  020C               	mulwf	(btemp+11)^0,c
 28329                           
 28330                           ;stkvar	_temp @ sp[(-13)+8]
 28331  0141DC  0EFB               	movlw	-5
 28332  0141DE  006F FFCF FFE3     	movff	prodl,plusw1
 28333  0141E4  0EFC               	movlw	-4
 28334  0141E6  006F FFD3 FFE3     	movff	prodh,plusw1
 28335                           
 28336                           ;stkvar	_temp @ sp[(-13)+8]
 28337  0141EC  0EFB               	movlw	-5
 28338  0141EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28339  0141F4  0EFC               	movlw	-4
 28340  0141F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28341                           
 28342                           ;stkvar	_prod @ sp[(-13)+0]
 28343  0141FC  50E1               	movf	fsr1l,w,c
 28344  0141FE  0FF3               	addlw	-13
 28345  014200  6ED9               	movwf	fsr2l,c
 28346  014202  50E2               	movf	fsr1h,w,c
 28347  014204  6EDA               	movwf	fsr2h,c
 28348  014206  0EFF               	movlw	255
 28349  014208  22DA               	addwfc	fsr2h,f,c
 28350  01420A  500B               	movf	(btemp+10)^0,w,c
 28351  01420C  26DE               	addwf	postinc2,f,c
 28352  01420E  500C               	movf	(btemp+11)^0,w,c
 28353  014210  22DE               	addwfc	postinc2,f,c
 28354  014212  0E00               	movlw	0
 28355  014214  22DE               	addwfc	postinc2,f,c
 28356  014216  22DE               	addwfc	postinc2,f,c
 28357                           
 28358                           ;stkvar	_b @ sp[(-13)+-4]
 28359  014218  0EF1               	movlw	241
 28360  01421A  24E1               	addwf	fsr1l,w,c
 28361  01421C  6ED9               	movwf	fsr2l,c
 28362  01421E  0EFF               	movlw	255
 28363  014220  20E2               	addwfc	fsr1h,w,c
 28364  014222  6EDA               	movwf	fsr2h,c
 28365  014224  50DF               	movf	indf2,w,c
 28366  014226  6E0C               	movwf	(btemp+11)^0,c
 28367                           
 28368                           ;stkvar	_a @ sp[(-13)+-8]
 28369  014228  0EEC               	movlw	236
 28370  01422A  24E1               	addwf	fsr1l,w,c
 28371  01422C  6ED9               	movwf	fsr2l,c
 28372  01422E  0EFF               	movlw	255
 28373  014230  20E2               	addwfc	fsr1h,w,c
 28374  014232  6EDA               	movwf	fsr2h,c
 28375  014234  50DF               	movf	indf2,w,c
 28376  014236  020C               	mulwf	(btemp+11)^0,c
 28377                           
 28378                           ;stkvar	_temp @ sp[(-13)+8]
 28379  014238  0EFB               	movlw	-5
 28380  01423A  006F FFCF FFE3     	movff	prodl,plusw1
 28381  014240  0EFC               	movlw	-4
 28382  014242  006F FFD3 FFE3     	movff	prodh,plusw1
 28383                           
 28384                           ;stkvar	_temp @ sp[(-13)+8]
 28385  014248  0EFB               	movlw	-5
 28386  01424A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28387  014250  0EFC               	movlw	-4
 28388  014252  006F FF8C  F00C    	movff	plusw1,btemp+11
 28389                           
 28390                           ;stkvar	_prod @ sp[(-13)+0]
 28391  014258  50E1               	movf	fsr1l,w,c
 28392  01425A  0FF3               	addlw	-13
 28393  01425C  6ED9               	movwf	fsr2l,c
 28394  01425E  50E2               	movf	fsr1h,w,c
 28395  014260  6EDA               	movwf	fsr2h,c
 28396  014262  0EFF               	movlw	255
 28397  014264  22DA               	addwfc	fsr2h,f,c
 28398  014266  500B               	movf	(btemp+10)^0,w,c
 28399  014268  26DE               	addwf	postinc2,f,c
 28400  01426A  500C               	movf	(btemp+11)^0,w,c
 28401  01426C  22DE               	addwfc	postinc2,f,c
 28402  01426E  0E00               	movlw	0
 28403  014270  22DE               	addwfc	postinc2,f,c
 28404  014272  22DE               	addwfc	postinc2,f,c
 28405                           
 28406                           ;stkvar	_b @ sp[(-13)+-4]
 28407  014274  0EF1               	movlw	241
 28408  014276  24E1               	addwf	fsr1l,w,c
 28409  014278  6ED9               	movwf	fsr2l,c
 28410  01427A  0EFF               	movlw	255
 28411  01427C  20E2               	addwfc	fsr1h,w,c
 28412  01427E  6EDA               	movwf	fsr2h,c
 28413  014280  50DF               	movf	indf2,w,c
 28414  014282  6E0C               	movwf	(btemp+11)^0,c
 28415                           
 28416                           ;stkvar	_a @ sp[(-13)+-8]
 28417  014284  0EED               	movlw	237
 28418  014286  24E1               	addwf	fsr1l,w,c
 28419  014288  6ED9               	movwf	fsr2l,c
 28420  01428A  0EFF               	movlw	255
 28421  01428C  20E2               	addwfc	fsr1h,w,c
 28422  01428E  6EDA               	movwf	fsr2h,c
 28423  014290  50DF               	movf	indf2,w,c
 28424  014292  020C               	mulwf	(btemp+11)^0,c
 28425                           
 28426                           ;stkvar	_temp @ sp[(-13)+8]
 28427  014294  0EFB               	movlw	-5
 28428  014296  006F FFCF FFE3     	movff	prodl,plusw1
 28429  01429C  0EFC               	movlw	-4
 28430  01429E  006F FFD3 FFE3     	movff	prodh,plusw1
 28431                           
 28432                           ;stkvar	_temp @ sp[(-13)+8]
 28433  0142A4  0EFB               	movlw	-5
 28434  0142A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28435  0142AC  0EFC               	movlw	-4
 28436  0142AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28437  0142B4  500B               	movf	(btemp+10)^0,w,c
 28438  0142B6  6E05               	movwf	(btemp+4)^0,c
 28439  0142B8  500C               	movf	(btemp+11)^0,w,c
 28440  0142BA  6E06               	movwf	(btemp+5)^0,c
 28441  0142BC  6A07               	clrf	(btemp+6)^0,c
 28442  0142BE  6A08               	clrf	(btemp+7)^0,c
 28443  0142C0  0060  F01C  F008   	movff	btemp+6,btemp+7
 28444  0142C6  0060  F018  F007   	movff	btemp+5,btemp+6
 28445  0142CC  0060  F014  F006   	movff	btemp+4,btemp+5
 28446  0142D2  6A05               	clrf	(btemp+4)^0,c
 28447                           
 28448                           ;stkvar	_prod @ sp[(-13)+0]
 28449  0142D4  50E1               	movf	fsr1l,w,c
 28450  0142D6  0FF3               	addlw	-13
 28451  0142D8  6ED9               	movwf	fsr2l,c
 28452  0142DA  50E2               	movf	fsr1h,w,c
 28453  0142DC  6EDA               	movwf	fsr2h,c
 28454  0142DE  0EFF               	movlw	255
 28455  0142E0  22DA               	addwfc	fsr2h,f,c
 28456  0142E2  5005               	movf	(btemp+4)^0,w,c
 28457  0142E4  26DE               	addwf	postinc2,f,c
 28458  0142E6  5006               	movf	(btemp+5)^0,w,c
 28459  0142E8  22DE               	addwfc	postinc2,f,c
 28460  0142EA  5007               	movf	(btemp+6)^0,w,c
 28461  0142EC  22DE               	addwfc	postinc2,f,c
 28462  0142EE  5008               	movf	(btemp+7)^0,w,c
 28463  0142F0  22DE               	addwfc	postinc2,f,c
 28464                           
 28465                           ;stkvar	_prod @ sp[(-13)+0]
 28466  0142F2  50E1               	movf	fsr1l,w,c
 28467  0142F4  0FF3               	addlw	-13
 28468  0142F6  6ED9               	movwf	fsr2l,c
 28469  0142F8  50E2               	movf	fsr1h,w,c
 28470  0142FA  6EDA               	movwf	fsr2h,c
 28471  0142FC  0EFF               	movlw	255
 28472  0142FE  22DA               	addwfc	fsr2h,f,c
 28473                           
 28474                           ;stkvar	_grs @ sp[(-13)+4]
 28475  014300  0EFA               	movlw	250
 28476  014302  24E1               	addwf	fsr1l,w,c
 28477  014304  6EE9               	movwf	fsr0l,c
 28478  014306  0EFF               	movlw	255
 28479  014308  20E2               	addwfc	fsr1h,w,c
 28480  01430A  6EEA               	movwf	fsr0h,c
 28481  01430C  50EF               	movf	indf0,w,c
 28482  01430E  26DE               	addwf	postinc2,f,c
 28483  014310  0E00               	movlw	0
 28484  014312  22DE               	addwfc	postinc2,f,c
 28485  014314  22DE               	addwfc	postinc2,f,c
 28486  014316  22DE               	addwfc	postinc2,f,c
 28487                           
 28488                           ;stkvar	_grs @ sp[(-13)+4]
 28489  014318  50E1               	movf	fsr1l,w,c
 28490  01431A  0FF7               	addlw	-9
 28491  01431C  6ED9               	movwf	fsr2l,c
 28492  01431E  50E2               	movf	fsr1h,w,c
 28493  014320  6EDA               	movwf	fsr2h,c
 28494  014322  0EFF               	movlw	255
 28495  014324  22DA               	addwfc	fsr2h,f,c
 28496  014326  0E08               	movlw	8
 28497  014328                     u6825:
 28498  014328  90D8               	bcf	status,0,c
 28499  01432A  36DE               	rlcf	postinc2,f,c
 28500  01432C  36DE               	rlcf	postinc2,f,c
 28501  01432E  36DE               	rlcf	postinc2,f,c
 28502  014330  36DD               	rlcf	postdec2,f,c
 28503  014332  52DD               	movf	postdec2,f,c
 28504  014334  52DD               	movf	postdec2,f,c
 28505  014336  2EE8               	decfsz	wreg,f,c
 28506  014338  D7F7               	goto	u6825
 28507  01433A  0E82               	movlw	130
 28508  01433C  6E0B               	movwf	(btemp+10)^0,c
 28509  01433E  0EFF               	movlw	255
 28510  014340  6E0C               	movwf	(btemp+11)^0,c
 28511                           
 28512                           ;stkvar	_bexp @ sp[(-13)+10]
 28513  014342  0EFD               	movlw	-3
 28514  014344  50E3               	movf	plusw1,w,c
 28515  014346  6E09               	movwf	(btemp+8)^0,c
 28516  014348  6A0A               	clrf	(btemp+9)^0,c
 28517                           
 28518                           ;stkvar	_aexp @ sp[(-13)+11]
 28519  01434A  0EFE               	movlw	-2
 28520  01434C  50E3               	movf	plusw1,w,c
 28521  01434E  2609               	addwf	(btemp+8)^0,f,c
 28522  014350  0E00               	movlw	0
 28523  014352  220A               	addwfc	(btemp+9)^0,f,c
 28524  014354  500B               	movf	(btemp+10)^0,w,c
 28525  014356  2609               	addwf	(btemp+8)^0,f,c
 28526  014358  500C               	movf	(btemp+11)^0,w,c
 28527  01435A  220A               	addwfc	(btemp+9)^0,f,c
 28528                           
 28529                           ;stkvar	_temp @ sp[(-13)+8]
 28530  01435C  0EFB               	movlw	-5
 28531  01435E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28532  014364  0EFC               	movlw	-4
 28533  014366  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28534  01436C  D021               	goto	l8363
 28535  01436E                     l8353:
 28536                           
 28537                           ;stkvar	_prod @ sp[(-13)+0]
 28538  01436E  90D8               	bcf	status,0,c
 28539  014370  0EF3               	movlw	-13
 28540  014372  36E3               	rlcf	plusw1,f,c
 28541  014374  0EF4               	movlw	-12
 28542  014376  36E3               	rlcf	plusw1,f,c
 28543  014378  0EF5               	movlw	-11
 28544  01437A  36E3               	rlcf	plusw1,f,c
 28545  01437C  0EF6               	movlw	-10
 28546  01437E  36E3               	rlcf	plusw1,f,c
 28547                           
 28548                           ;stkvar	_grs @ sp[(-13)+4]
 28549  014380  0EFA               	movlw	-6
 28550  014382  AEE3               	btfss	plusw1,7,c
 28551  014384  D002               	goto	l8359
 28552                           
 28553                           ;stkvar	_prod @ sp[(-13)+0]
 28554  014386  0EF3               	movlw	-13
 28555  014388  80E3               	bsf	plusw1,0,c
 28556  01438A                     l8359:
 28557                           
 28558                           ;stkvar	_grs @ sp[(-13)+4]
 28559  01438A  90D8               	bcf	status,0,c
 28560  01438C  0EF7               	movlw	-9
 28561  01438E  36E3               	rlcf	plusw1,f,c
 28562  014390  0EF8               	movlw	-8
 28563  014392  36E3               	rlcf	plusw1,f,c
 28564  014394  0EF9               	movlw	-7
 28565  014396  36E3               	rlcf	plusw1,f,c
 28566  014398  0EFA               	movlw	-6
 28567  01439A  36E3               	rlcf	plusw1,f,c
 28568                           
 28569                           ;stkvar	_temp @ sp[(-13)+8]
 28570  01439C  50E1               	movf	fsr1l,w,c
 28571  01439E  0FFB               	addlw	-5
 28572  0143A0  6ED9               	movwf	fsr2l,c
 28573  0143A2  50E2               	movf	fsr1h,w,c
 28574  0143A4  6EDA               	movwf	fsr2h,c
 28575  0143A6  0EFF               	movlw	255
 28576  0143A8  22DA               	addwfc	fsr2h,f,c
 28577  0143AA  06DE               	decf	postinc2,f,c
 28578  0143AC  0E00               	movlw	0
 28579  0143AE  5ADD               	subwfb	postdec2,f,c
 28580  0143B0                     l8363:
 28581                           
 28582                           ;stkvar	_prod @ sp[(-13)+0]
 28583  0143B0  0EF5               	movlw	-11
 28584  0143B2  AEE3               	btfss	plusw1,7,c
 28585  0143B4  D7DC               	goto	l8353
 28586                           
 28587                           ;stkvar	_aexp @ sp[(-13)+11]
 28588  0143B6  0EFE               	movlw	-2
 28589  0143B8  6AE3               	clrf	plusw1,c
 28590                           
 28591                           ;stkvar	_grs @ sp[(-13)+4]
 28592  0143BA  0EFA               	movlw	-6
 28593  0143BC  AEE3               	btfss	plusw1,7,c
 28594  0143BE  D020               	goto	l8377
 28595                           
 28596                           ;stkvar	_grs @ sp[(-13)+4]
 28597  0143C0  50E1               	movf	fsr1l,w,c
 28598  0143C2  0FF7               	addlw	-9
 28599  0143C4  6ED9               	movwf	fsr2l,c
 28600  0143C6  50E2               	movf	fsr1h,w,c
 28601  0143C8  6EDA               	movwf	fsr2h,c
 28602  0143CA  0EFF               	movlw	255
 28603  0143CC  22DA               	addwfc	fsr2h,f,c
 28604  0143CE  0EFF               	movlw	255
 28605  0143D0  14DE               	andwf	postinc2,w,c
 28606  0143D2  6E09               	movwf	(btemp+8)^0,c
 28607  0143D4  0EFF               	movlw	255
 28608  0143D6  14DE               	andwf	postinc2,w,c
 28609  0143D8  6E0A               	movwf	(btemp+9)^0,c
 28610  0143DA  0EFF               	movlw	255
 28611  0143DC  14DE               	andwf	postinc2,w,c
 28612  0143DE  6E0B               	movwf	(btemp+10)^0,c
 28613  0143E0  0E7F               	movlw	127
 28614  0143E2  14DE               	andwf	postinc2,w,c
 28615  0143E4  6E0C               	movwf	(btemp+11)^0,c
 28616  0143E6  5009               	movf	(btemp+8)^0,w,c
 28617  0143E8  100A               	iorwf	(btemp+9)^0,w,c
 28618  0143EA  100B               	iorwf	(btemp+10)^0,w,c
 28619  0143EC  100C               	iorwf	(btemp+11)^0,w,c
 28620  0143EE  B4D8               	btfsc	status,2,c
 28621  0143F0  D004               	goto	l8373
 28622  0143F2                     u6860:
 28623                           
 28624                           ;stkvar	_aexp @ sp[(-13)+11]
 28625  0143F2  0EFE               	movlw	-2
 28626  0143F4  6AE3               	clrf	plusw1,c
 28627  0143F6  2AE3               	incf	plusw1,f,c
 28628  0143F8  D003               	goto	l8377
 28629  0143FA                     l8373:
 28630                           
 28631                           ;stkvar	_prod @ sp[(-13)+0]
 28632  0143FA  0EF3               	movlw	-13
 28633  0143FC  B0E3               	btfsc	plusw1,0,c
 28634  0143FE  D7F9               	goto	u6860
 28635  014400                     l8377:
 28636                           
 28637                           ;stkvar	_aexp @ sp[(-13)+11]
 28638  014400  0EFE               	movlw	-2
 28639  014402  50E3               	movf	plusw1,w,c
 28640  014404  B4D8               	btfsc	status,2,c
 28641  014406  D036               	goto	l8387
 28642                           
 28643                           ;stkvar	_prod @ sp[(-13)+0]
 28644  014408  50E1               	movf	fsr1l,w,c
 28645  01440A  0FF3               	addlw	-13
 28646  01440C  6ED9               	movwf	fsr2l,c
 28647  01440E  50E2               	movf	fsr1h,w,c
 28648  014410  6EDA               	movwf	fsr2h,c
 28649  014412  0EFF               	movlw	255
 28650  014414  22DA               	addwfc	fsr2h,f,c
 28651  014416  2ADE               	incf	postinc2,f,c
 28652  014418  0E00               	movlw	0
 28653  01441A  22DE               	addwfc	postinc2,f,c
 28654  01441C  22DE               	addwfc	postinc2,f,c
 28655  01441E  22DE               	addwfc	postinc2,f,c
 28656                           
 28657                           ;stkvar	_prod @ sp[(-13)+0]
 28658  014420  0EF6               	movlw	-10
 28659  014422  A0E3               	btfss	plusw1,0,c
 28660  014424  D027               	goto	l8387
 28661  014426  0E01               	movlw	1
 28662  014428  6E0C               	movwf	(btemp+11)^0,c
 28663                           
 28664                           ;stkvar	_prod @ sp[(-13)+0]
 28665  01442A  50E1               	movf	fsr1l,w,c
 28666  01442C  0FF3               	addlw	-13
 28667  01442E  6ED9               	movwf	fsr2l,c
 28668  014430  50E2               	movf	fsr1h,w,c
 28669  014432  6EDA               	movwf	fsr2h,c
 28670  014434  0EFF               	movlw	255
 28671  014436  22DA               	addwfc	fsr2h,f,c
 28672  014438  280C               	incf	(btemp+11)^0,w,c
 28673  01443A  52DE               	movf	postinc2,f,c
 28674  01443C  D008               	goto	u6900
 28675  01443E                     u6905:
 28676  01443E  52DE               	movf	postinc2,f,c
 28677  014440  90D8               	bcf	status,0,c
 28678  014442  BEDC               	btfsc	preinc2,7,c
 28679  014444  80D8               	bsf	status,0,c
 28680  014446  32DD               	rrcf	postdec2,f,c
 28681  014448  32DD               	rrcf	postdec2,f,c
 28682  01444A  32DD               	rrcf	postdec2,f,c
 28683  01444C  32DE               	rrcf	postinc2,f,c
 28684  01444E                     u6900:
 28685  01444E  2EE8               	decfsz	wreg,f,c
 28686  014450  D7F6               	goto	u6905
 28687                           
 28688                           ;stkvar	_temp @ sp[(-13)+8]
 28689  014452  0EFB               	movlw	-5
 28690  014454  50E3               	movf	plusw1,w,c
 28691  014456  0F01               	addlw	1
 28692  014458  6E01               	movwf	btemp^0,c
 28693  01445A  0EFB               	movlw	-5
 28694  01445C  0060  F007  FFE3   	movff	btemp,plusw1
 28695  014462  6A01               	clrf	btemp^0,c
 28696  014464  0EFC               	movlw	-4
 28697  014466  50E3               	movf	plusw1,w,c
 28698  014468  2001               	addwfc	btemp^0,w,c
 28699  01446A  6E01               	movwf	btemp^0,c
 28700  01446C  0EFC               	movlw	-4
 28701  01446E  0060  F007  FFE3   	movff	btemp,plusw1
 28702  014474                     l8387:
 28703                           
 28704                           ;stkvar	_temp @ sp[(-13)+8]
 28705  014474  0EFC               	movlw	-4
 28706  014476  BEE3               	btfsc	plusw1,7,c
 28707  014478  D020               	goto	l8391
 28708  01447A  0EFC               	movlw	-4
 28709  01447C  50E3               	movf	plusw1,w,c
 28710  01447E  E104               	bnz	u6910
 28711  014480  0EFB               	movlw	-5
 28712  014482  28E3               	incf	plusw1,w,c
 28713  014484  A0D8               	btfss	status,0,c
 28714  014486  D019               	goto	l8391
 28715  014488                     u6910:
 28716  014488  0E00               	movlw	0
 28717  01448A  6E09               	movwf	(btemp+8)^0,c
 28718  01448C  0E00               	movlw	0
 28719  01448E  6E0A               	movwf	(btemp+9)^0,c
 28720  014490  0E80               	movlw	128
 28721  014492  6E0B               	movwf	(btemp+10)^0,c
 28722  014494  0E7F               	movlw	127
 28723  014496  6E0C               	movwf	(btemp+11)^0,c
 28724                           
 28725                           ;stkvar	_prod @ sp[(-13)+0]
 28726  014498  0EF3               	movlw	-13
 28727  01449A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28728  0144A0  0EF4               	movlw	-12
 28729  0144A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28730  0144A8  0EF5               	movlw	-11
 28731  0144AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28732  0144B0  0EF6               	movlw	-10
 28733  0144B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28734  0144B8  D044               	goto	l8407
 28735  0144BA                     l8391:
 28736                           
 28737                           ;stkvar	_temp @ sp[(-13)+8]
 28738  0144BA  0EFC               	movlw	-4
 28739  0144BC  BEE3               	btfsc	plusw1,7,c
 28740  0144BE  D007               	goto	u6920
 28741  0144C0  0EFC               	movlw	-4
 28742  0144C2  50E3               	movf	plusw1,w,c
 28743  0144C4  E10F               	bnz	l8397
 28744  0144C6  0EFB               	movlw	-5
 28745  0144C8  04E3               	decf	plusw1,w,c
 28746  0144CA  B0D8               	btfsc	status,0,c
 28747  0144CC  D00B               	goto	l8397
 28748  0144CE                     u6920:
 28749                           
 28750                           ;stkvar	_prod @ sp[(-13)+0]
 28751  0144CE  0EF3               	movlw	-13
 28752  0144D0  6AE3               	clrf	plusw1,c
 28753  0144D2  0EF4               	movlw	-12
 28754  0144D4  6AE3               	clrf	plusw1,c
 28755  0144D6  0EF5               	movlw	-11
 28756  0144D8  6AE3               	clrf	plusw1,c
 28757  0144DA  0EF6               	movlw	-10
 28758  0144DC  6AE3               	clrf	plusw1,c
 28759                           
 28760                           ;stkvar	_sign @ sp[(-13)+12]
 28761  0144DE  0EFF               	movlw	-1
 28762  0144E0  6AE3               	clrf	plusw1,c
 28763  0144E2  D02F               	goto	l8407
 28764  0144E4                     l8397:
 28765                           
 28766                           ;stkvar	_temp @ sp[(-13)+8]
 28767                           ;stkvar	_bexp @ sp[(-13)+10]
 28768  0144E4  0EFB               	movlw	-5
 28769  0144E6  006F FF8C  F001    	movff	plusw1,btemp
 28770  0144EC  0EFD               	movlw	-3
 28771  0144EE  0060  F007  FFE3   	movff	btemp,plusw1
 28772                           
 28773                           ;stkvar	_prod @ sp[(-13)+0]
 28774  0144F4  50E1               	movf	fsr1l,w,c
 28775  0144F6  0FF3               	addlw	-13
 28776  0144F8  6ED9               	movwf	fsr2l,c
 28777  0144FA  50E2               	movf	fsr1h,w,c
 28778  0144FC  6EDA               	movwf	fsr2h,c
 28779  0144FE  0EFF               	movlw	255
 28780  014500  22DA               	addwfc	fsr2h,f,c
 28781  014502  0EFF               	movlw	255
 28782  014504  16DE               	andwf	postinc2,f,c
 28783  014506  0EFF               	movlw	255
 28784  014508  16DE               	andwf	postinc2,f,c
 28785  01450A  0E7F               	movlw	127
 28786  01450C  16DE               	andwf	postinc2,f,c
 28787  01450E  0E00               	movlw	0
 28788  014510  16DE               	andwf	postinc2,f,c
 28789                           
 28790                           ;stkvar	_bexp @ sp[(-13)+10]
 28791  014512  0EFD               	movlw	-3
 28792  014514  A0E3               	btfss	plusw1,0,c
 28793  014516  D008               	goto	l8405
 28794                           
 28795                           ;stkvar	_prod @ sp[(-13)+0]
 28796  014518  0EF5               	movlw	245
 28797  01451A  24E1               	addwf	fsr1l,w,c
 28798  01451C  6ED9               	movwf	fsr2l,c
 28799  01451E  0EFF               	movlw	255
 28800  014520  20E2               	addwfc	fsr1h,w,c
 28801  014522  6EDA               	movwf	fsr2h,c
 28802  014524  0E00               	movlw	0
 28803  014526  8EDB               	bsf	plusw2,7,c
 28804  014528                     l8405:
 28805                           
 28806                           ;stkvar	_prod @ sp[(-13)+0]
 28807  014528  0EF6               	movlw	246
 28808  01452A  24E1               	addwf	fsr1l,w,c
 28809  01452C  6ED9               	movwf	fsr2l,c
 28810  01452E  0EFF               	movlw	255
 28811  014530  20E2               	addwfc	fsr1h,w,c
 28812  014532  6EDA               	movwf	fsr2h,c
 28813                           
 28814                           ;stkvar	_bexp @ sp[(-13)+10]
 28815  014534  0EFD               	movlw	-3
 28816  014536  006F FF8C  F00C    	movff	plusw1,btemp+11
 28817  01453C  90D8               	bcf	status,0,c
 28818  01453E  300C               	rrcf	(btemp+11)^0,w,c
 28819  014540  6EDF               	movwf	indf2,c
 28820  014542                     l8407:
 28821                           
 28822                           ;stkvar	_sign @ sp[(-13)+12]
 28823  014542  0EFF               	movlw	-1
 28824  014544  006F FF8C  F00C    	movff	plusw1,btemp+11
 28825                           
 28826                           ;stkvar	_prod @ sp[(-13)+0]
 28827  01454A  0EF6               	movlw	246
 28828  01454C  24E1               	addwf	fsr1l,w,c
 28829  01454E  6ED9               	movwf	fsr2l,c
 28830  014550  0EFF               	movlw	255
 28831  014552  20E2               	addwfc	fsr1h,w,c
 28832  014554  6EDA               	movwf	fsr2h,c
 28833  014556  500C               	movf	(btemp+11)^0,w,c
 28834  014558  12DF               	iorwf	indf2,f,c
 28835                           
 28836                           ;stkvar	_prod @ sp[(-13)+0]
 28837  01455A  0EF3               	movlw	-13
 28838  01455C  006F FF8C  F001    	movff	plusw1,btemp
 28839  014562  0EF4               	movlw	-12
 28840  014564  006F FF8C  F002    	movff	plusw1,btemp+1
 28841  01456A  0EF5               	movlw	-11
 28842  01456C  006F FF8C  F003    	movff	plusw1,btemp+2
 28843  014572  0EF6               	movlw	-10
 28844  014574  006F FF8C  F004    	movff	plusw1,btemp+3
 28845  01457A                     l3022:
 28846                           
 28847                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28848  01457A  0EEB               	movlw	235
 28849  01457C  26E1               	addwf	fsr1l,f,c
 28850  01457E  0EFF               	movlw	255
 28851  014580  22E2               	addwfc	fsr1h,f,c
 28852  014582  0012               	return		;funcret
 28853  014584                     __end_of___flmul:
 28854                           	opt callstack 0
 28855                           
 28856 ;; *************** function _SYSTEM_Initialize *****************
 28857 ;; Defined at:
 28858 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28859 ;; Parameters:    Size  Location     Type
 28860 ;;		None
 28861 ;; Auto vars:     Size  Location     Type
 28862 ;;		None
 28863 ;; Return value:  Size  Location     Type
 28864 ;;                  1  [STACK] void 
 28865 ;; Registers used:
 28866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28867 ;; Tracked objects:
 28868 ;;		On entry : 0/0
 28869 ;;		On exit  : 3F/3C
 28870 ;;		Unchanged: 0/0
 28871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28876 ;;Total ram usage:        0 bytes
 28877 ;; Hardware stack levels used:    1
 28878 ;; Hardware stack levels required when called:   17
 28879 ;; This function calls:
 28880 ;;		_ADCC_Initialize
 28881 ;;		_CLKREF_Initialize
 28882 ;;		_DMA1_Initialize
 28883 ;;		_DMA2_Initialize
 28884 ;;		_EXT_INT_Initialize
 28885 ;;		_FVR_Initialize
 28886 ;;		_INTERRUPT_Initialize
 28887 ;;		_OSCILLATOR_Initialize
 28888 ;;		_PIN_MANAGER_Initialize
 28889 ;;		_PMD_Initialize
 28890 ;;		_PWM8_Initialize
 28891 ;;		_SPI1_Initialize
 28892 ;;		_TMR2_Initialize
 28893 ;;		_TMR3_Initialize
 28894 ;;		_TMR5_Initialize
 28895 ;;		_TMR6_Initialize
 28896 ;;		_UART1_Initialize
 28897 ;;		_UART2_Initialize
 28898 ;; This function is called by:
 28899 ;;		_main
 28900 ;; This function uses a reentrant model
 28901 ;;
 28902                           
 28903                           	psect	text107
 28904  01B37A                     __ptext107:
 28905                           	opt callstack 0
 28906  01B37A                     _SYSTEM_Initialize:
 28907                           	opt callstack 13
 28908                           
 28909                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28910                           
 28911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28912                           ;incstack = 0
 28913  01B37A  EC9D  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 28914                           
 28915                           ; BSR set to: 57
 28916                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28917  01B37E  ECCA  F0DF         	call	_PMD_Initialize	;wreg free
 28918                           
 28919                           ; BSR set to: 57
 28920                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28921  01B382  ECDD  F0D4         	call	_PIN_MANAGER_Initialize	;wreg free
 28922                           
 28923                           ; BSR set to: 58
 28924                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28925  01B386  ECBF  F0DF         	call	_OSCILLATOR_Initialize	;wreg free
 28926                           
 28927                           ; BSR set to: 57
 28928                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28929  01B38A  EC55  F0E0         	call	_FVR_Initialize	;wreg free
 28930                           
 28931                           ; BSR set to: 62
 28932                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28933  01B38E  EC32  F0D7         	call	_ADCC_Initialize	;wreg free
 28934                           
 28935                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28936  01B392  EC9D  F0DF         	call	_TMR2_Initialize	;wreg free
 28937                           
 28938                           ; BSR set to: 57
 28939                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28940  01B396  ECB4  F0DF         	call	_PWM8_Initialize	;wreg free
 28941                           
 28942                           ; BSR set to: 63
 28943                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28944  01B39A  EC40  F0DC         	call	_EXT_INT_Initialize	;wreg free
 28945                           
 28946                           ; BSR set to: 57
 28947                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28948  01B39E  EC14  F0DD         	call	_TMR6_Initialize	;wreg free
 28949                           
 28950                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28951  01B3A2  EC4E  F0DA         	call	_TMR3_Initialize	;wreg free
 28952                           
 28953                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28954  01B3A6  EC2A  F0DA         	call	_TMR5_Initialize	;wreg free
 28955                           
 28956                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28957  01B3AA  EC06  F0DA         	call	_UART1_Initialize	;wreg free
 28958                           
 28959                           ; BSR set to: 57
 28960                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28961  01B3AE  EC64  F0D8         	call	_UART2_Initialize	;wreg free
 28962                           
 28963                           ; BSR set to: 57
 28964                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28965  01B3B2  ECA9  F0DF         	call	_SPI1_Initialize	;wreg free
 28966                           
 28967                           ; BSR set to: 61
 28968                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28969  01B3B6  ECEE  F0D8         	call	_DMA2_Initialize	;wreg free
 28970                           
 28971                           ; BSR set to: 59
 28972                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28973  01B3BA  ECFD  F0D6         	call	_DMA1_Initialize	;wreg free
 28974                           
 28975                           ; BSR set to: 59
 28976                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28977  01B3BE  EC29  F0E0         	call	_CLKREF_Initialize	;wreg free
 28978                           
 28979                           ; BSR set to: 60
 28980                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28981  01B3C2  0012               	return		;funcret
 28982  01B3C4                     __end_of_SYSTEM_Initialize:
 28983                           	opt callstack 0
 28984                           
 28985 ;; *************** function _UART2_Initialize *****************
 28986 ;; Defined at:
 28987 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28988 ;; Parameters:    Size  Location     Type
 28989 ;;		None
 28990 ;; Auto vars:     Size  Location     Type
 28991 ;;		None
 28992 ;; Return value:  Size  Location     Type
 28993 ;;                  1  [STACK] void 
 28994 ;; Registers used:
 28995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28996 ;; Tracked objects:
 28997 ;;		On entry : 3F/39
 28998 ;;		On exit  : 3F/39
 28999 ;;		Unchanged: 0/0
 29000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29005 ;;Total ram usage:        0 bytes
 29006 ;; Hardware stack levels used:    1
 29007 ;; Hardware stack levels required when called:   16
 29008 ;; This function calls:
 29009 ;;		_UART2_SetRxInterruptHandler
 29010 ;;		_UART2_SetTxInterruptHandler
 29011 ;; This function is called by:
 29012 ;;		_SYSTEM_Initialize
 29013 ;; This function uses a reentrant model
 29014 ;;
 29015                           
 29016                           	psect	text108
 29017  01B0C8                     __ptext108:
 29018                           	opt callstack 0
 29019  01B0C8                     _UART2_Initialize:
 29020                           	opt callstack 13
 29021                           
 29022                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29023                           
 29024                           ; BSR set to: 60
 29025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29026                           ;incstack = 0
 29027  01B0C8  0139               	movlb	57	; () banked
 29028  01B0CA  9596               	bcf	150,2,b	;volatile
 29029                           
 29030                           ; BSR set to: 57
 29031                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29032  01B0CC  0E38               	movlw	low _UART2_Receive_ISR
 29033  01B0CE  6EE6               	movwf	postinc1,c
 29034  01B0D0  0EBE               	movlw	high _UART2_Receive_ISR
 29035  01B0D2  6EE6               	movwf	postinc1,c
 29036  01B0D4  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29037  01B0D6  6EE6               	movwf	postinc1,c
 29038  01B0D8  EC8D  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29039                           
 29040                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29041  01B0DC  0139               	movlb	57	; () banked
 29042  01B0DE  9796               	bcf	150,3,b	;volatile
 29043                           
 29044                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29045  01B0E0  0EFC               	movlw	low _UART2_Transmit_ISR
 29046  01B0E2  6EE6               	movwf	postinc1,c
 29047  01B0E4  0EB9               	movlw	high _UART2_Transmit_ISR
 29048  01B0E6  6EE6               	movwf	postinc1,c
 29049  01B0E8  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29050  01B0EA  6EE6               	movwf	postinc1,c
 29051  01B0EC  EC79  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29052                           
 29053                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29054  01B0F0  013D               	movlb	61	; () banked
 29055  01B0F2  6BD4               	clrf	212,b	;volatile
 29056                           
 29057                           ; BSR set to: 61
 29058                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29059  01B0F4  6BD6               	clrf	214,b	;volatile
 29060                           
 29061                           ; BSR set to: 61
 29062                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29063  01B0F6  6BD8               	clrf	216,b	;volatile
 29064                           
 29065                           ; BSR set to: 61
 29066                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29067  01B0F8  0EB0               	movlw	176
 29068  01B0FA  6FDA               	movwf	218,b	;volatile
 29069                           
 29070                           ; BSR set to: 61
 29071                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29072  01B0FC  0E80               	movlw	128
 29073  01B0FE  6FDB               	movwf	219,b	;volatile
 29074                           
 29075                           ; BSR set to: 61
 29076                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29077  01B100  6BDC               	clrf	220,b	;volatile
 29078                           
 29079                           ; BSR set to: 61
 29080                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29081  01B102  0E82               	movlw	130
 29082  01B104  6FDD               	movwf	221,b	;volatile
 29083                           
 29084                           ; BSR set to: 61
 29085                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29086  01B106  0E06               	movlw	6
 29087  01B108  6FDE               	movwf	222,b	;volatile
 29088                           
 29089                           ; BSR set to: 61
 29090                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29091  01B10A  6BDF               	clrf	223,b	;volatile
 29092                           
 29093                           ; BSR set to: 61
 29094                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29095  01B10C  6BE0               	clrf	224,b	;volatile
 29096                           
 29097                           ; BSR set to: 61
 29098                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29099  01B10E  6BE1               	clrf	225,b	;volatile
 29100                           
 29101                           ; BSR set to: 61
 29102                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29103  01B110  6BE2               	clrf	226,b	;volatile
 29104                           
 29105                           ; BSR set to: 61
 29106                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29107  01B112  0100               	movlb	0	; () banked
 29108  01B114  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29109                           
 29110                           ; BSR set to: 0
 29111                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29112  01B116  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29113                           
 29114                           ; BSR set to: 0
 29115                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29116  01B118  0E40               	movlw	64
 29117  01B11A  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29118                           
 29119                           ; BSR set to: 0
 29120                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29121  01B11C  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29125  01B11E  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29126                           
 29127                           ; BSR set to: 0
 29128                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29129  01B120  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29130                           
 29131                           ; BSR set to: 0
 29132                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29133  01B122  0139               	movlb	57	; () banked
 29134  01B124  8596               	bsf	150,2,b	;volatile
 29135                           
 29136                           ; BSR set to: 57
 29137                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29138  01B126  0012               	return		;funcret
 29139  01B128                     __end_of_UART2_Initialize:
 29140                           	opt callstack 0
 29141                           
 29142 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29143 ;; Defined at:
 29144 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29145 ;; Parameters:    Size  Location     Type
 29146 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29147 ;;		 -> UART2_Transmit_ISR(1), 
 29148 ;; Auto vars:     Size  Location     Type
 29149 ;;		None
 29150 ;; Return value:  Size  Location     Type
 29151 ;;                  1  [STACK] void 
 29152 ;; Registers used:
 29153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29154 ;; Tracked objects:
 29155 ;;		On entry : 3F/39
 29156 ;;		On exit  : 0/0
 29157 ;;		Unchanged: 0/0
 29158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29163 ;;Total ram usage:        0 bytes
 29164 ;; Hardware stack levels used:    1
 29165 ;; Hardware stack levels required when called:   15
 29166 ;; This function calls:
 29167 ;;		Nothing
 29168 ;; This function is called by:
 29169 ;;		_UART2_Initialize
 29170 ;; This function uses a reentrant model
 29171 ;;
 29172                           
 29173                           	psect	text109
 29174  01BAF2                     __ptext109:
 29175                           	opt callstack 0
 29176  01BAF2                     _UART2_SetTxInterruptHandler:
 29177                           	opt callstack 13
 29178                           
 29179                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29180                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29181                           
 29182                           ; BSR set to: 57
 29183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29184                           ;incstack = 0
 29185  01BAF2  50E1               	movf	fsr1l,w,c
 29186  01BAF4  0FFD               	addlw	-3
 29187  01BAF6  6ED9               	movwf	fsr2l,c
 29188  01BAF8  50E2               	movf	fsr1h,w,c
 29189  01BAFA  6EDA               	movwf	fsr2h,c
 29190  01BAFC  0EFF               	movlw	255
 29191  01BAFE  22DA               	addwfc	fsr2h,f,c
 29192  01BB00  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29193  01BB06  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29194  01BB0C  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29195                           
 29196                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29197  01BB12  52E5               	movf	postdec1,f,c
 29198  01BB14  52E5               	movf	postdec1,f,c
 29199  01BB16  52E5               	movf	postdec1,f,c
 29200  01BB18  0012               	return		;funcret
 29201  01BB1A                     __end_of_UART2_SetTxInterruptHandler:
 29202                           	opt callstack 0
 29203                           
 29204 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29205 ;; Defined at:
 29206 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29207 ;; Parameters:    Size  Location     Type
 29208 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29209 ;;		 -> UART2_Receive_ISR(1), 
 29210 ;; Auto vars:     Size  Location     Type
 29211 ;;		None
 29212 ;; Return value:  Size  Location     Type
 29213 ;;                  1  [STACK] void 
 29214 ;; Registers used:
 29215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29216 ;; Tracked objects:
 29217 ;;		On entry : 3F/39
 29218 ;;		On exit  : 0/0
 29219 ;;		Unchanged: 0/0
 29220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29225 ;;Total ram usage:        0 bytes
 29226 ;; Hardware stack levels used:    1
 29227 ;; Hardware stack levels required when called:   15
 29228 ;; This function calls:
 29229 ;;		Nothing
 29230 ;; This function is called by:
 29231 ;;		_UART2_Initialize
 29232 ;; This function uses a reentrant model
 29233 ;;
 29234                           
 29235                           	psect	text110
 29236  01BB1A                     __ptext110:
 29237                           	opt callstack 0
 29238  01BB1A                     _UART2_SetRxInterruptHandler:
 29239                           	opt callstack 13
 29240                           
 29241                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29242                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29243                           
 29244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29245                           ;incstack = 0
 29246  01BB1A  50E1               	movf	fsr1l,w,c
 29247  01BB1C  0FFD               	addlw	-3
 29248  01BB1E  6ED9               	movwf	fsr2l,c
 29249  01BB20  50E2               	movf	fsr1h,w,c
 29250  01BB22  6EDA               	movwf	fsr2h,c
 29251  01BB24  0EFF               	movlw	255
 29252  01BB26  22DA               	addwfc	fsr2h,f,c
 29253  01BB28  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29254  01BB2E  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29255  01BB34  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29256                           
 29257                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29258  01BB3A  52E5               	movf	postdec1,f,c
 29259  01BB3C  52E5               	movf	postdec1,f,c
 29260  01BB3E  52E5               	movf	postdec1,f,c
 29261  01BB40  0012               	return		;funcret
 29262  01BB42                     __end_of_UART2_SetRxInterruptHandler:
 29263                           	opt callstack 0
 29264                           
 29265 ;; *************** function _UART1_Initialize *****************
 29266 ;; Defined at:
 29267 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29268 ;; Parameters:    Size  Location     Type
 29269 ;;		None
 29270 ;; Auto vars:     Size  Location     Type
 29271 ;;		None
 29272 ;; Return value:  Size  Location     Type
 29273 ;;                  1  [STACK] void 
 29274 ;; Registers used:
 29275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29276 ;; Tracked objects:
 29277 ;;		On entry : 0/39
 29278 ;;		On exit  : 3F/39
 29279 ;;		Unchanged: 0/0
 29280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29285 ;;Total ram usage:        0 bytes
 29286 ;; Hardware stack levels used:    1
 29287 ;; Hardware stack levels required when called:   16
 29288 ;; This function calls:
 29289 ;;		_UART1_SetRxInterruptHandler
 29290 ;; This function is called by:
 29291 ;;		_SYSTEM_Initialize
 29292 ;; This function uses a reentrant model
 29293 ;;
 29294                           
 29295                           	psect	text111
 29296  01B40C                     __ptext111:
 29297                           	opt callstack 0
 29298  01B40C                     _UART1_Initialize:
 29299                           	opt callstack 13
 29300                           
 29301                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29302                           
 29303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29304                           ;incstack = 0
 29305  01B40C  0139               	movlb	57	; () banked
 29306  01B40E  9793               	bcf	147,3,b	;volatile
 29307                           
 29308                           ; BSR set to: 57
 29309                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29310  01B410  0EB2               	movlw	low _UART1_Receive_ISR
 29311  01B412  6EE6               	movwf	postinc1,c
 29312  01B414  0EBE               	movlw	high _UART1_Receive_ISR
 29313  01B416  6EE6               	movwf	postinc1,c
 29314  01B418  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29315  01B41A  6EE6               	movwf	postinc1,c
 29316  01B41C  ECA1  F0DD         	call	_UART1_SetRxInterruptHandler	;wreg free
 29317                           
 29318                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29319  01B420  013D               	movlb	61	; () banked
 29320  01B422  6BEC               	clrf	236,b	;volatile
 29321                           
 29322                           ; BSR set to: 61
 29323                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29324  01B424  6BED               	clrf	237,b	;volatile
 29325                           
 29326                           ; BSR set to: 61
 29327                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29328  01B426  6BEE               	clrf	238,b	;volatile
 29329                           
 29330                           ; BSR set to: 61
 29331                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29332  01B428  6BEF               	clrf	239,b	;volatile
 29333                           
 29334                           ; BSR set to: 61
 29335                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29336  01B42A  6BF0               	clrf	240,b	;volatile
 29337                           
 29338                           ; BSR set to: 61
 29339                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29340  01B42C  6BF1               	clrf	241,b	;volatile
 29341                           
 29342                           ; BSR set to: 61
 29343                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29344  01B42E  0EB0               	movlw	176
 29345  01B430  6FF2               	movwf	242,b	;volatile
 29346                           
 29347                           ; BSR set to: 61
 29348                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29349  01B432  0E80               	movlw	128
 29350  01B434  6FF3               	movwf	243,b	;volatile
 29351                           
 29352                           ; BSR set to: 61
 29353                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29354  01B436  6BF4               	clrf	244,b	;volatile
 29355                           
 29356                           ; BSR set to: 61
 29357                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29358  01B438  0E8A               	movlw	138
 29359  01B43A  6FF5               	movwf	245,b	;volatile
 29360                           
 29361                           ; BSR set to: 61
 29362                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29363  01B43C  6BF6               	clrf	246,b	;volatile
 29364                           
 29365                           ; BSR set to: 61
 29366                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29367  01B43E  6BF7               	clrf	247,b	;volatile
 29368                           
 29369                           ; BSR set to: 61
 29370                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29371  01B440  6BF8               	clrf	248,b	;volatile
 29372                           
 29373                           ; BSR set to: 61
 29374                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29375  01B442  6BF9               	clrf	249,b	;volatile
 29376                           
 29377                           ; BSR set to: 61
 29378                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29379  01B444  6BFA               	clrf	250,b	;volatile
 29380                           
 29381                           ; BSR set to: 61
 29382                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29383  01B446  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29384                           
 29385                           ; BSR set to: 61
 29386                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29387  01B448  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29388                           
 29389                           ; BSR set to: 61
 29390                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29391  01B44A  0100               	movlb	0	; () banked
 29392  01B44C  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29393                           
 29394                           ; BSR set to: 0
 29395                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29396  01B44E  0139               	movlb	57	; () banked
 29397  01B450  8793               	bsf	147,3,b	;volatile
 29398                           
 29399                           ; BSR set to: 57
 29400                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29401  01B452  0012               	return		;funcret
 29402  01B454                     __end_of_UART1_Initialize:
 29403                           	opt callstack 0
 29404                           
 29405 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29406 ;; Defined at:
 29407 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29408 ;; Parameters:    Size  Location     Type
 29409 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29410 ;;		 -> UART1_Receive_ISR(1), 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;		None
 29413 ;; Return value:  Size  Location     Type
 29414 ;;                  1  [STACK] void 
 29415 ;; Registers used:
 29416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29417 ;; Tracked objects:
 29418 ;;		On entry : 3F/39
 29419 ;;		On exit  : 0/0
 29420 ;;		Unchanged: 0/0
 29421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29426 ;;Total ram usage:        0 bytes
 29427 ;; Hardware stack levels used:    1
 29428 ;; Hardware stack levels required when called:   15
 29429 ;; This function calls:
 29430 ;;		Nothing
 29431 ;; This function is called by:
 29432 ;;		_UART1_Initialize
 29433 ;; This function uses a reentrant model
 29434 ;;
 29435                           
 29436                           	psect	text112
 29437  01BB42                     __ptext112:
 29438                           	opt callstack 0
 29439  01BB42                     _UART1_SetRxInterruptHandler:
 29440                           	opt callstack 13
 29441                           
 29442                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29443                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29444                           
 29445                           ; BSR set to: 57
 29446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29447                           ;incstack = 0
 29448  01BB42  50E1               	movf	fsr1l,w,c
 29449  01BB44  0FFD               	addlw	-3
 29450  01BB46  6ED9               	movwf	fsr2l,c
 29451  01BB48  50E2               	movf	fsr1h,w,c
 29452  01BB4A  6EDA               	movwf	fsr2h,c
 29453  01BB4C  0EFF               	movlw	255
 29454  01BB4E  22DA               	addwfc	fsr2h,f,c
 29455  01BB50  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29456  01BB56  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29457  01BB5C  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29458                           
 29459                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29460  01BB62  52E5               	movf	postdec1,f,c
 29461  01BB64  52E5               	movf	postdec1,f,c
 29462  01BB66  52E5               	movf	postdec1,f,c
 29463  01BB68  0012               	return		;funcret
 29464  01BB6A                     __end_of_UART1_SetRxInterruptHandler:
 29465                           	opt callstack 0
 29466                           
 29467 ;; *************** function _TMR6_Initialize *****************
 29468 ;; Defined at:
 29469 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29470 ;; Parameters:    Size  Location     Type
 29471 ;;		None
 29472 ;; Auto vars:     Size  Location     Type
 29473 ;;		None
 29474 ;; Return value:  Size  Location     Type
 29475 ;;                  1  [STACK] void 
 29476 ;; Registers used:
 29477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29478 ;; Tracked objects:
 29479 ;;		On entry : 3F/39
 29480 ;;		On exit  : 0/0
 29481 ;;		Unchanged: 0/0
 29482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29487 ;;Total ram usage:        0 bytes
 29488 ;; Hardware stack levels used:    1
 29489 ;; Hardware stack levels required when called:   16
 29490 ;; This function calls:
 29491 ;;		_TMR6_SetInterruptHandler
 29492 ;; This function is called by:
 29493 ;;		_SYSTEM_Initialize
 29494 ;; This function uses a reentrant model
 29495 ;;
 29496                           
 29497                           	psect	text113
 29498  01BA28                     __ptext113:
 29499                           	opt callstack 0
 29500  01BA28                     _TMR6_Initialize:
 29501                           	opt callstack 13
 29502                           
 29503                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29504                           
 29505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29506                           ;incstack = 0
 29507  01BA28  0E01               	movlw	1
 29508  01BA2A  6E96               	movwf	150,c	;volatile
 29509                           
 29510                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29511  01BA2C  6A95               	clrf	149,c	;volatile
 29512                           
 29513                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29514  01BA2E  6A97               	clrf	151,c	;volatile
 29515                           
 29516                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29517  01BA30  0E7C               	movlw	124
 29518  01BA32  6E93               	movwf	147,c	;volatile
 29519                           
 29520                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29521  01BA34  6A92               	clrf	146,c	;volatile
 29522                           
 29523                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29524  01BA36  0139               	movlb	57	; () banked
 29525  01BA38  91A9               	bcf	169,0,b	;volatile
 29526                           
 29527                           ; BSR set to: 57
 29528                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29529  01BA3A  8199               	bsf	153,0,b	;volatile
 29530                           
 29531                           ; BSR set to: 57
 29532                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29533  01BA3C  0E2C               	movlw	low _TMR6_DefaultInterruptHandler
 29534  01BA3E  6EE6               	movwf	postinc1,c
 29535  01BA40  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29536  01BA42  6EE6               	movwf	postinc1,c
 29537  01BA44  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29538  01BA46  6EE6               	movwf	postinc1,c
 29539  01BA48  ECB5  F0DD         	call	_TMR6_SetInterruptHandler	;wreg free
 29540                           
 29541                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29542  01BA4C  0EE0               	movlw	224
 29543  01BA4E  6E94               	movwf	148,c	;volatile
 29544                           
 29545                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29546  01BA50  0012               	return		;funcret
 29547  01BA52                     __end_of_TMR6_Initialize:
 29548                           	opt callstack 0
 29549                           
 29550 ;; *************** function _TMR6_SetInterruptHandler *****************
 29551 ;; Defined at:
 29552 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29553 ;; Parameters:    Size  Location     Type
 29554 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29555 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;		None
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  1  [STACK] void 
 29560 ;; Registers used:
 29561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29562 ;; Tracked objects:
 29563 ;;		On entry : 3F/39
 29564 ;;		On exit  : 0/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29571 ;;Total ram usage:        0 bytes
 29572 ;; Hardware stack levels used:    1
 29573 ;; Hardware stack levels required when called:   15
 29574 ;; This function calls:
 29575 ;;		Nothing
 29576 ;; This function is called by:
 29577 ;;		_TMR6_Initialize
 29578 ;; This function uses a reentrant model
 29579 ;;
 29580                           
 29581                           	psect	text114
 29582  01BB6A                     __ptext114:
 29583                           	opt callstack 0
 29584  01BB6A                     _TMR6_SetInterruptHandler:
 29585                           	opt callstack 13
 29586                           
 29587                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29588                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29589                           
 29590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29591                           ;incstack = 0
 29592  01BB6A  50E1               	movf	fsr1l,w,c
 29593  01BB6C  0FFD               	addlw	-3
 29594  01BB6E  6ED9               	movwf	fsr2l,c
 29595  01BB70  50E2               	movf	fsr1h,w,c
 29596  01BB72  6EDA               	movwf	fsr2h,c
 29597  01BB74  0EFF               	movlw	255
 29598  01BB76  22DA               	addwfc	fsr2h,f,c
 29599  01BB78  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29600  01BB7E  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29601  01BB84  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29602                           
 29603                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29604  01BB8A  52E5               	movf	postdec1,f,c
 29605  01BB8C  52E5               	movf	postdec1,f,c
 29606  01BB8E  52E5               	movf	postdec1,f,c
 29607  01BB90  0012               	return		;funcret
 29608  01BB92                     __end_of_TMR6_SetInterruptHandler:
 29609                           	opt callstack 0
 29610                           
 29611 ;; *************** function _TMR5_Initialize *****************
 29612 ;; Defined at:
 29613 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29614 ;; Parameters:    Size  Location     Type
 29615 ;;		None
 29616 ;; Auto vars:     Size  Location     Type
 29617 ;;		None
 29618 ;; Return value:  Size  Location     Type
 29619 ;;                  1  [STACK] void 
 29620 ;; Registers used:
 29621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29622 ;; Tracked objects:
 29623 ;;		On entry : 0/39
 29624 ;;		On exit  : 0/0
 29625 ;;		Unchanged: 0/0
 29626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29631 ;;Total ram usage:        0 bytes
 29632 ;; Hardware stack levels used:    1
 29633 ;; Hardware stack levels required when called:   16
 29634 ;; This function calls:
 29635 ;;		_TMR5_SetInterruptHandler
 29636 ;; This function is called by:
 29637 ;;		_SYSTEM_Initialize
 29638 ;; This function uses a reentrant model
 29639 ;;
 29640                           
 29641                           	psect	text115
 29642  01B454                     __ptext115:
 29643                           	opt callstack 0
 29644  01B454                     _TMR5_Initialize:
 29645                           	opt callstack 13
 29646                           
 29647                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29648                           
 29649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29650                           ;incstack = 0
 29651  01B454  6A9B               	clrf	155,c	;volatile
 29652                           
 29653                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29654  01B456  6A9C               	clrf	156,c	;volatile
 29655                           
 29656                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29657  01B458  0E01               	movlw	1
 29658  01B45A  6E9D               	movwf	157,c	;volatile
 29659                           
 29660                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29661  01B45C  0E63               	movlw	99
 29662  01B45E  6E99               	movwf	153,c	;volatile
 29663                           
 29664                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29665  01B460  0EC0               	movlw	192
 29666  01B462  6E98               	movwf	152,c	;volatile
 29667                           
 29668                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29669  01B464  5098               	movf	152,w,c	;volatile
 29670  01B466  006F FE64  F001    	movff	16281,btemp	;volatile
 29671  01B46C  6A02               	clrf	(btemp+1)^0,c
 29672  01B46E  0060  F004  F002   	movff	btemp,btemp+1
 29673  01B474  6A01               	clrf	btemp^0,c
 29674  01B476  1001               	iorwf	btemp^0,w,c
 29675  01B478  0100               	movlb	0	; () banked
 29676  01B47A  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29677  01B47C  5002               	movf	(btemp+1)^0,w,c
 29678  01B47E  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29679                           
 29680                           ; BSR set to: 0
 29681                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29682  01B480  0139               	movlb	57	; () banked
 29683  01B482  9DA8               	bcf	168,6,b	;volatile
 29684                           
 29685                           ; BSR set to: 57
 29686                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29687  01B484  8D98               	bsf	152,6,b	;volatile
 29688                           
 29689                           ; BSR set to: 57
 29690                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29691  01B486  0EA8               	movlw	low _TMR5_DefaultInterruptHandler
 29692  01B488  6EE6               	movwf	postinc1,c
 29693  01B48A  0EB7               	movlw	high _TMR5_DefaultInterruptHandler
 29694  01B48C  6EE6               	movwf	postinc1,c
 29695  01B48E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29696  01B490  6EE6               	movwf	postinc1,c
 29697  01B492  ECC9  F0DD         	call	_TMR5_SetInterruptHandler	;wreg free
 29698                           
 29699                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29700  01B496  0E31               	movlw	49
 29701  01B498  6E9A               	movwf	154,c	;volatile
 29702                           
 29703                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29704  01B49A  0012               	return		;funcret
 29705  01B49C                     __end_of_TMR5_Initialize:
 29706                           	opt callstack 0
 29707                           
 29708 ;; *************** function _TMR5_SetInterruptHandler *****************
 29709 ;; Defined at:
 29710 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29711 ;; Parameters:    Size  Location     Type
 29712 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29713 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29714 ;; Auto vars:     Size  Location     Type
 29715 ;;		None
 29716 ;; Return value:  Size  Location     Type
 29717 ;;                  1  [STACK] void 
 29718 ;; Registers used:
 29719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29720 ;; Tracked objects:
 29721 ;;		On entry : 3F/39
 29722 ;;		On exit  : 0/0
 29723 ;;		Unchanged: 0/0
 29724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29729 ;;Total ram usage:        0 bytes
 29730 ;; Hardware stack levels used:    1
 29731 ;; Hardware stack levels required when called:   15
 29732 ;; This function calls:
 29733 ;;		Nothing
 29734 ;; This function is called by:
 29735 ;;		_TMR5_Initialize
 29736 ;; This function uses a reentrant model
 29737 ;;
 29738                           
 29739                           	psect	text116
 29740  01BB92                     __ptext116:
 29741                           	opt callstack 0
 29742  01BB92                     _TMR5_SetInterruptHandler:
 29743                           	opt callstack 13
 29744                           
 29745                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29746                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29747                           
 29748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29749                           ;incstack = 0
 29750  01BB92  50E1               	movf	fsr1l,w,c
 29751  01BB94  0FFD               	addlw	-3
 29752  01BB96  6ED9               	movwf	fsr2l,c
 29753  01BB98  50E2               	movf	fsr1h,w,c
 29754  01BB9A  6EDA               	movwf	fsr2h,c
 29755  01BB9C  0EFF               	movlw	255
 29756  01BB9E  22DA               	addwfc	fsr2h,f,c
 29757  01BBA0  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29758  01BBA6  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29759  01BBAC  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29760                           
 29761                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29762  01BBB2  52E5               	movf	postdec1,f,c
 29763  01BBB4  52E5               	movf	postdec1,f,c
 29764  01BBB6  52E5               	movf	postdec1,f,c
 29765  01BBB8  0012               	return		;funcret
 29766  01BBBA                     __end_of_TMR5_SetInterruptHandler:
 29767                           	opt callstack 0
 29768                           
 29769 ;; *************** function _TMR3_Initialize *****************
 29770 ;; Defined at:
 29771 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29772 ;; Parameters:    Size  Location     Type
 29773 ;;		None
 29774 ;; Auto vars:     Size  Location     Type
 29775 ;;		None
 29776 ;; Return value:  Size  Location     Type
 29777 ;;                  1  [STACK] void 
 29778 ;; Registers used:
 29779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29780 ;; Tracked objects:
 29781 ;;		On entry : 0/39
 29782 ;;		On exit  : 0/0
 29783 ;;		Unchanged: 0/0
 29784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29789 ;;Total ram usage:        0 bytes
 29790 ;; Hardware stack levels used:    1
 29791 ;; Hardware stack levels required when called:   16
 29792 ;; This function calls:
 29793 ;;		_TMR3_SetInterruptHandler
 29794 ;; This function is called by:
 29795 ;;		_SYSTEM_Initialize
 29796 ;; This function uses a reentrant model
 29797 ;;
 29798                           
 29799                           	psect	text117
 29800  01B49C                     __ptext117:
 29801                           	opt callstack 0
 29802  01B49C                     _TMR3_Initialize:
 29803                           	opt callstack 13
 29804                           
 29805                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29806                           
 29807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29808                           ;incstack = 0
 29809  01B49C  6AA7               	clrf	167,c	;volatile
 29810                           
 29811                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29812  01B49E  6AA8               	clrf	168,c	;volatile
 29813                           
 29814                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29815  01B4A0  0E01               	movlw	1
 29816  01B4A2  6EA9               	movwf	169,c	;volatile
 29817                           
 29818                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29819  01B4A4  0E3C               	movlw	60
 29820  01B4A6  6EA5               	movwf	165,c	;volatile
 29821                           
 29822                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29823  01B4A8  0EB0               	movlw	176
 29824  01B4AA  6EA4               	movwf	164,c	;volatile
 29825                           
 29826                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29827  01B4AC  50A4               	movf	164,w,c	;volatile
 29828  01B4AE  006F FE94  F001    	movff	16293,btemp	;volatile
 29829  01B4B4  6A02               	clrf	(btemp+1)^0,c
 29830  01B4B6  0060  F004  F002   	movff	btemp,btemp+1
 29831  01B4BC  6A01               	clrf	btemp^0,c
 29832  01B4BE  1001               	iorwf	btemp^0,w,c
 29833  01B4C0  0100               	movlb	0	; () banked
 29834  01B4C2  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29835  01B4C4  5002               	movf	(btemp+1)^0,w,c
 29836  01B4C6  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29837                           
 29838                           ; BSR set to: 0
 29839                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29840  01B4C8  0139               	movlb	57	; () banked
 29841  01B4CA  9DA6               	bcf	166,6,b	;volatile
 29842                           
 29843                           ; BSR set to: 57
 29844                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29845  01B4CC  8D96               	bsf	150,6,b	;volatile
 29846                           
 29847                           ; BSR set to: 57
 29848                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29849  01B4CE  0ED4               	movlw	low _TMR3_DefaultInterruptHandler
 29850  01B4D0  6EE6               	movwf	postinc1,c
 29851  01B4D2  0EC0               	movlw	high _TMR3_DefaultInterruptHandler
 29852  01B4D4  6EE6               	movwf	postinc1,c
 29853  01B4D6  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29854  01B4D8  6EE6               	movwf	postinc1,c
 29855  01B4DA  ECDD  F0DD         	call	_TMR3_SetInterruptHandler	;wreg free
 29856                           
 29857                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29858  01B4DE  0E31               	movlw	49
 29859  01B4E0  6EA6               	movwf	166,c	;volatile
 29860                           
 29861                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29862  01B4E2  0012               	return		;funcret
 29863  01B4E4                     __end_of_TMR3_Initialize:
 29864                           	opt callstack 0
 29865                           
 29866 ;; *************** function _TMR3_SetInterruptHandler *****************
 29867 ;; Defined at:
 29868 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29869 ;; Parameters:    Size  Location     Type
 29870 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29871 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29872 ;; Auto vars:     Size  Location     Type
 29873 ;;		None
 29874 ;; Return value:  Size  Location     Type
 29875 ;;                  1  [STACK] void 
 29876 ;; Registers used:
 29877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29878 ;; Tracked objects:
 29879 ;;		On entry : 0/1
 29880 ;;		On exit  : 0/0
 29881 ;;		Unchanged: 0/0
 29882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29887 ;;Total ram usage:        0 bytes
 29888 ;; Hardware stack levels used:    1
 29889 ;; Hardware stack levels required when called:   15
 29890 ;; This function calls:
 29891 ;;		Nothing
 29892 ;; This function is called by:
 29893 ;;		_TMR3_Initialize
 29894 ;;		_init_bsoc
 29895 ;; This function uses a reentrant model
 29896 ;;
 29897                           
 29898                           	psect	text118
 29899  01BBBA                     __ptext118:
 29900                           	opt callstack 0
 29901  01BBBA                     _TMR3_SetInterruptHandler:
 29902                           	opt callstack 14
 29903                           
 29904                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29905                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29906                           
 29907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29908                           ;incstack = 0
 29909  01BBBA  50E1               	movf	fsr1l,w,c
 29910  01BBBC  0FFD               	addlw	-3
 29911  01BBBE  6ED9               	movwf	fsr2l,c
 29912  01BBC0  50E2               	movf	fsr1h,w,c
 29913  01BBC2  6EDA               	movwf	fsr2h,c
 29914  01BBC4  0EFF               	movlw	255
 29915  01BBC6  22DA               	addwfc	fsr2h,f,c
 29916  01BBC8  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29917  01BBCE  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29918  01BBD4  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29919                           
 29920                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29921  01BBDA  52E5               	movf	postdec1,f,c
 29922  01BBDC  52E5               	movf	postdec1,f,c
 29923  01BBDE  52E5               	movf	postdec1,f,c
 29924  01BBE0  0012               	return		;funcret
 29925  01BBE2                     __end_of_TMR3_SetInterruptHandler:
 29926                           	opt callstack 0
 29927                           
 29928 ;; *************** function _TMR2_Initialize *****************
 29929 ;; Defined at:
 29930 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29931 ;; Parameters:    Size  Location     Type
 29932 ;;		None
 29933 ;; Auto vars:     Size  Location     Type
 29934 ;;		None
 29935 ;; Return value:  Size  Location     Type
 29936 ;;                  1  [STACK] void 
 29937 ;; Registers used:
 29938 ;;		wreg, status,2
 29939 ;; Tracked objects:
 29940 ;;		On entry : 0/3E
 29941 ;;		On exit  : 3F/39
 29942 ;;		Unchanged: 0/0
 29943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29948 ;;Total ram usage:        0 bytes
 29949 ;; Hardware stack levels used:    1
 29950 ;; Hardware stack levels required when called:   15
 29951 ;; This function calls:
 29952 ;;		Nothing
 29953 ;; This function is called by:
 29954 ;;		_SYSTEM_Initialize
 29955 ;; This function uses a reentrant model
 29956 ;;
 29957                           
 29958                           	psect	text119
 29959  01BF3A                     __ptext119:
 29960                           	opt callstack 0
 29961  01BF3A                     _TMR2_Initialize:
 29962                           	opt callstack 14
 29963                           
 29964                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29965                           
 29966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29967                           ;incstack = 0
 29968  01BF3A  0E01               	movlw	1
 29969  01BF3C  6EAE               	movwf	174,c	;volatile
 29970                           
 29971                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29972  01BF3E  6AAD               	clrf	173,c	;volatile
 29973                           
 29974                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29975  01BF40  6AAF               	clrf	175,c	;volatile
 29976                           
 29977                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29978  01BF42  0E63               	movlw	99
 29979  01BF44  6EAB               	movwf	171,c	;volatile
 29980                           
 29981                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29982  01BF46  6AAA               	clrf	170,c	;volatile
 29983                           
 29984                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29985  01BF48  0139               	movlb	57	; () banked
 29986  01BF4A  95A4               	bcf	164,2,b	;volatile
 29987                           
 29988                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29989  01BF4C  0EC0               	movlw	192
 29990  01BF4E  6EAC               	movwf	172,c	;volatile
 29991                           
 29992                           ; BSR set to: 57
 29993                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29994  01BF50  0012               	return		;funcret
 29995  01BF52                     __end_of_TMR2_Initialize:
 29996                           	opt callstack 0
 29997                           
 29998 ;; *************** function _SPI1_Initialize *****************
 29999 ;; Defined at:
 30000 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30001 ;; Parameters:    Size  Location     Type
 30002 ;;		None
 30003 ;; Auto vars:     Size  Location     Type
 30004 ;;		None
 30005 ;; Return value:  Size  Location     Type
 30006 ;;                  1  [STACK] void 
 30007 ;; Registers used:
 30008 ;;		wreg, status,2
 30009 ;; Tracked objects:
 30010 ;;		On entry : 3F/39
 30011 ;;		On exit  : 3F/3D
 30012 ;;		Unchanged: 0/0
 30013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30018 ;;Total ram usage:        0 bytes
 30019 ;; Hardware stack levels used:    1
 30020 ;; Hardware stack levels required when called:   15
 30021 ;; This function calls:
 30022 ;;		Nothing
 30023 ;; This function is called by:
 30024 ;;		_SYSTEM_Initialize
 30025 ;; This function uses a reentrant model
 30026 ;;
 30027                           
 30028                           	psect	text120
 30029  01BF52                     __ptext120:
 30030                           	opt callstack 0
 30031  01BF52                     _SPI1_Initialize:
 30032                           	opt callstack 14
 30033                           
 30034                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30035                           
 30036                           ; BSR set to: 57
 30037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30038                           ;incstack = 0
 30039  01BF52  0E40               	movlw	64
 30040  01BF54  013D               	movlb	61	; () banked
 30041  01BF56  6F15               	movwf	21,b	;volatile
 30042                           
 30043                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30044  01BF58  0E03               	movlw	3
 30045  01BF5A  6F16               	movwf	22,b	;volatile
 30046                           
 30047                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30048  01BF5C  0E4F               	movlw	79
 30049  01BF5E  6F19               	movwf	25,b	;volatile
 30050                           
 30051                           ; BSR set to: 61
 30052                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30053  01BF60  6B1C               	clrf	28,b	;volatile
 30054                           
 30055                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30056  01BF62  0E83               	movlw	131
 30057  01BF64  6F14               	movwf	20,b	;volatile
 30058                           
 30059                           ; BSR set to: 61
 30060                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30061  01BF66  0012               	return		;funcret
 30062  01BF68                     __end_of_SPI1_Initialize:
 30063                           	opt callstack 0
 30064                           
 30065 ;; *************** function _PWM8_Initialize *****************
 30066 ;; Defined at:
 30067 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;		None
 30070 ;; Auto vars:     Size  Location     Type
 30071 ;;		None
 30072 ;; Return value:  Size  Location     Type
 30073 ;;                  1  [STACK] void 
 30074 ;; Registers used:
 30075 ;;		wreg, status,2
 30076 ;; Tracked objects:
 30077 ;;		On entry : 3F/39
 30078 ;;		On exit  : 3F/3F
 30079 ;;		Unchanged: 0/0
 30080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30085 ;;Total ram usage:        0 bytes
 30086 ;; Hardware stack levels used:    1
 30087 ;; Hardware stack levels required when called:   15
 30088 ;; This function calls:
 30089 ;;		Nothing
 30090 ;; This function is called by:
 30091 ;;		_SYSTEM_Initialize
 30092 ;; This function uses a reentrant model
 30093 ;;
 30094                           
 30095                           	psect	text121
 30096  01BF68                     __ptext121:
 30097                           	opt callstack 0
 30098  01BF68                     _PWM8_Initialize:
 30099                           	opt callstack 14
 30100                           
 30101                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30102                           
 30103                           ; BSR set to: 61
 30104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30105                           ;incstack = 0
 30106  01BF68  0E80               	movlw	128
 30107  01BF6A  6E62               	movwf	98,c	;volatile
 30108                           
 30109                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30110  01BF6C  6A61               	clrf	97,c	;volatile
 30111                           
 30112                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30113  01BF6E  0E40               	movlw	64
 30114  01BF70  6E60               	movwf	96,c	;volatile
 30115                           
 30116                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30117  01BF72  013F               	movlb	63	; () banked
 30118  01BF74  515F               	movf	95,w,b	;volatile
 30119  01BF76  0B3F               	andlw	-193
 30120  01BF78  0940               	iorlw	64
 30121  01BF7A  6F5F               	movwf	95,b	;volatile
 30122                           
 30123                           ; BSR set to: 63
 30124                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30125  01BF7C  0012               	return		;funcret
 30126  01BF7E                     __end_of_PWM8_Initialize:
 30127                           	opt callstack 0
 30128                           
 30129 ;; *************** function _PMD_Initialize *****************
 30130 ;; Defined at:
 30131 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30132 ;; Parameters:    Size  Location     Type
 30133 ;;		None
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;		None
 30136 ;; Return value:  Size  Location     Type
 30137 ;;                  1  [STACK] void 
 30138 ;; Registers used:
 30139 ;;		None
 30140 ;; Tracked objects:
 30141 ;;		On entry : 3F/39
 30142 ;;		On exit  : 3F/39
 30143 ;;		Unchanged: 0/0
 30144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30149 ;;Total ram usage:        0 bytes
 30150 ;; Hardware stack levels used:    1
 30151 ;; Hardware stack levels required when called:   15
 30152 ;; This function calls:
 30153 ;;		Nothing
 30154 ;; This function is called by:
 30155 ;;		_SYSTEM_Initialize
 30156 ;; This function uses a reentrant model
 30157 ;;
 30158                           
 30159                           	psect	text122
 30160  01BF94                     __ptext122:
 30161                           	opt callstack 0
 30162  01BF94                     _PMD_Initialize:
 30163                           	opt callstack 14
 30164                           
 30165                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30166                           
 30167                           ; BSR set to: 63
 30168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30169                           ;incstack = 0
 30170  01BF94  0139               	movlb	57	; () banked
 30171  01BF96  6BC0               	clrf	192,b	;volatile
 30172                           
 30173                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30174  01BF98  6BC1               	clrf	193,b	;volatile
 30175                           
 30176                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30177  01BF9A  6BC2               	clrf	194,b	;volatile
 30178                           
 30179                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30180  01BF9C  6BC3               	clrf	195,b	;volatile
 30181                           
 30182                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30183  01BF9E  6BC4               	clrf	196,b	;volatile
 30184                           
 30185                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30186  01BFA0  6BC5               	clrf	197,b	;volatile
 30187                           
 30188                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30189  01BFA2  6BC6               	clrf	198,b	;volatile
 30190                           
 30191                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30192  01BFA4  6BC7               	clrf	199,b	;volatile
 30193                           
 30194                           ; BSR set to: 57
 30195                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30196  01BFA6  0012               	return		;funcret
 30197  01BFA8                     __end_of_PMD_Initialize:
 30198                           	opt callstack 0
 30199                           
 30200 ;; *************** function _PIN_MANAGER_Initialize *****************
 30201 ;; Defined at:
 30202 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30203 ;; Parameters:    Size  Location     Type
 30204 ;;		None
 30205 ;; Auto vars:     Size  Location     Type
 30206 ;;		None
 30207 ;; Return value:  Size  Location     Type
 30208 ;;                  1  [STACK] void 
 30209 ;; Registers used:
 30210 ;;		wreg, status,2
 30211 ;; Tracked objects:
 30212 ;;		On entry : 3F/39
 30213 ;;		On exit  : 3F/3A
 30214 ;;		Unchanged: 0/0
 30215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30220 ;;Total ram usage:        0 bytes
 30221 ;; Hardware stack levels used:    1
 30222 ;; Hardware stack levels required when called:   15
 30223 ;; This function calls:
 30224 ;;		Nothing
 30225 ;; This function is called by:
 30226 ;;		_SYSTEM_Initialize
 30227 ;; This function uses a reentrant model
 30228 ;;
 30229                           
 30230                           	psect	text123
 30231  01A9BA                     __ptext123:
 30232                           	opt callstack 0
 30233  01A9BA                     _PIN_MANAGER_Initialize:
 30234                           	opt callstack 14
 30235                           
 30236                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30237                           
 30238                           ; BSR set to: 57
 30239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30240                           ;incstack = 0
 30241  01A9BA  0E07               	movlw	7
 30242  01A9BC  6EBE               	movwf	190,c	;volatile
 30243                           
 30244                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30245  01A9BE  0E80               	movlw	128
 30246  01A9C0  6EBD               	movwf	189,c	;volatile
 30247                           
 30248                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30249  01A9C2  6ABA               	clrf	186,c	;volatile
 30250                           
 30251                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30252  01A9C4  0E20               	movlw	32
 30253  01A9C6  6EBF               	movwf	191,c	;volatile
 30254                           
 30255                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30256  01A9C8  6ABB               	clrf	187,c	;volatile
 30257                           
 30258                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30259  01A9CA  0E07               	movlw	7
 30260  01A9CC  6EBC               	movwf	188,c	;volatile
 30261                           
 30262                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30263  01A9CE  6AC6               	clrf	198,c	;volatile
 30264                           
 30265                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30266  01A9D0  0E0F               	movlw	15
 30267  01A9D2  6EC7               	movwf	199,c	;volatile
 30268                           
 30269                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30270  01A9D4  68C2               	setf	194,c	;volatile
 30271                           
 30272                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30273  01A9D6  0EBF               	movlw	191
 30274  01A9D8  6EC3               	movwf	195,c	;volatile
 30275                           
 30276                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30277  01A9DA  0E90               	movlw	144
 30278  01A9DC  6EC4               	movwf	196,c	;volatile
 30279                           
 30280                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30281  01A9DE  0E0C               	movlw	12
 30282  01A9E0  6EC5               	movwf	197,c	;volatile
 30283                           
 30284                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30285  01A9E2  013A               	movlb	58	; () banked
 30286  01A9E4  6B70               	clrf	112,b	;volatile
 30287                           
 30288                           ; BSR set to: 58
 30289                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30290  01A9E6  6B60               	clrf	96,b	;volatile
 30291                           
 30292                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30293  01A9E8  0E3C               	movlw	60
 30294  01A9EA  6F50               	movwf	80,b	;volatile
 30295                           
 30296                           ; BSR set to: 58
 30297                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30298  01A9EC  6B80               	clrf	128,b	;volatile
 30299                           
 30300                           ; BSR set to: 58
 30301                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30302  01A9EE  6B90               	clrf	144,b	;volatile
 30303                           
 30304                           ; BSR set to: 58
 30305                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30306  01A9F0  6940               	setf	64,b	;volatile
 30307                           
 30308                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30309  01A9F2  0E0C               	movlw	12
 30310  01A9F4  6F71               	movwf	113,b	;volatile
 30311                           
 30312                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30313  01A9F6  0E0F               	movlw	15
 30314  01A9F8  6F91               	movwf	145,b	;volatile
 30315                           
 30316                           ; BSR set to: 58
 30317                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30318  01A9FA  6B81               	clrf	129,b	;volatile
 30319                           
 30320                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30321  01A9FC  0E83               	movlw	131
 30322  01A9FE  6F51               	movwf	81,b	;volatile
 30323                           
 30324                           ; BSR set to: 58
 30325                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30326  01AA00  6B41               	clrf	65,b	;volatile
 30327                           
 30328                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30329  01AA02  0E97               	movlw	151
 30330  01AA04  6F61               	movwf	97,b	;volatile
 30331                           
 30332                           ; BSR set to: 58
 30333                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30334  01AA06  6B82               	clrf	130,b	;volatile
 30335                           
 30336                           ; BSR set to: 58
 30337                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30338  01AA08  6B92               	clrf	146,b	;volatile
 30339                           
 30340                           ; BSR set to: 58
 30341                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30342  01AA0A  6B42               	clrf	66,b	;volatile
 30343                           
 30344                           ; BSR set to: 58
 30345                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30346  01AA0C  6B52               	clrf	82,b	;volatile
 30347                           
 30348                           ; BSR set to: 58
 30349                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30350  01AA0E  6B62               	clrf	98,b	;volatile
 30351                           
 30352                           ; BSR set to: 58
 30353                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30354  01AA10  6B72               	clrf	114,b	;volatile
 30355                           
 30356                           ; BSR set to: 58
 30357                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30358  01AA12  6943               	setf	67,b	;volatile
 30359                           
 30360                           ; BSR set to: 58
 30361                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30362  01AA14  6953               	setf	83,b	;volatile
 30363                           
 30364                           ; BSR set to: 58
 30365                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30366  01AA16  6963               	setf	99,b	;volatile
 30367                           
 30368                           ; BSR set to: 58
 30369                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30370  01AA18  6973               	setf	115,b	;volatile
 30371                           
 30372                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30373  01AA1A  0E07               	movlw	7
 30374  01AA1C  6F83               	movwf	131,b	;volatile
 30375                           
 30376                           ; BSR set to: 58
 30377                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30378  01AA1E  6993               	setf	147,b	;volatile
 30379                           
 30380                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30381  01AA20  0E0F               	movlw	15
 30382  01AA22  6FE8               	movwf	232,b	;volatile
 30383                           
 30384                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30385  01AA24  0E13               	movlw	19
 30386  01AA26  6FDE               	movwf	222,b	;volatile
 30387                           
 30388                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30389  01AA28  0E16               	movlw	22
 30390  01AA2A  6F0E               	movwf	14,b	;volatile
 30391                           
 30392                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30393  01AA2C  0E1E               	movlw	30
 30394  01AA2E  6F13               	movwf	19,b	;volatile
 30395                           
 30396                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30397  01AA30  0E08               	movlw	8
 30398  01AA32  6FC0               	movwf	192,b	;volatile
 30399                           
 30400                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30401  01AA34  0E10               	movlw	16
 30402  01AA36  6F19               	movwf	25,b	;volatile
 30403                           
 30404                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30405  01AA38  0E09               	movlw	9
 30406  01AA3A  6FC1               	movwf	193,b	;volatile
 30407                           
 30408                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30409  01AA3C  0E1F               	movlw	31
 30410  01AA3E  6F15               	movwf	21,b	;volatile
 30411                           
 30412                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30413  01AA40  0E13               	movlw	19
 30414  01AA42  6F16               	movwf	22,b	;volatile
 30415                           
 30416                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30417  01AA44  0E17               	movlw	23
 30418  01AA46  6FE5               	movwf	229,b	;volatile
 30419                           
 30420                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30421  01AA48  0E14               	movlw	20
 30422  01AA4A  6FDF               	movwf	223,b	;volatile
 30423                           
 30424                           ; BSR set to: 58
 30425                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30426  01AA4C  0012               	return		;funcret
 30427  01AA4E                     __end_of_PIN_MANAGER_Initialize:
 30428                           	opt callstack 0
 30429                           
 30430 ;; *************** function _OSCILLATOR_Initialize *****************
 30431 ;; Defined at:
 30432 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30433 ;; Parameters:    Size  Location     Type
 30434 ;;		None
 30435 ;; Auto vars:     Size  Location     Type
 30436 ;;		None
 30437 ;; Return value:  Size  Location     Type
 30438 ;;                  1  [STACK] void 
 30439 ;; Registers used:
 30440 ;;		wreg, status,2
 30441 ;; Tracked objects:
 30442 ;;		On entry : 3F/3A
 30443 ;;		On exit  : 3F/39
 30444 ;;		Unchanged: 0/0
 30445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;Total ram usage:        0 bytes
 30451 ;; Hardware stack levels used:    1
 30452 ;; Hardware stack levels required when called:   15
 30453 ;; This function calls:
 30454 ;;		Nothing
 30455 ;; This function is called by:
 30456 ;;		_SYSTEM_Initialize
 30457 ;; This function uses a reentrant model
 30458 ;;
 30459                           
 30460                           	psect	text124
 30461  01BF7E                     __ptext124:
 30462                           	opt callstack 0
 30463  01BF7E                     _OSCILLATOR_Initialize:
 30464                           	opt callstack 14
 30465                           
 30466                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30467                           
 30468                           ; BSR set to: 58
 30469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30470                           ;incstack = 0
 30471  01BF7E  0E20               	movlw	32
 30472  01BF80  0139               	movlb	57	; () banked
 30473  01BF82  6FD9               	movwf	217,b	;volatile
 30474                           
 30475                           ; BSR set to: 57
 30476                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30477  01BF84  6BDB               	clrf	219,b	;volatile
 30478                           
 30479                           ; BSR set to: 57
 30480                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30481  01BF86  6BDD               	clrf	221,b	;volatile
 30482                           
 30483                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30484  01BF88  0E02               	movlw	2
 30485  01BF8A  6FDF               	movwf	223,b	;volatile
 30486                           
 30487                           ; BSR set to: 57
 30488                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30489  01BF8C  6BDE               	clrf	222,b	;volatile
 30490  01BF8E                     l169:
 30491                           
 30492                           ; BSR set to: 57
 30493                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30494  01BF8E  B1DC               	btfsc	220,0,b	;volatile
 30495  01BF90  0012               	return	
 30496  01BF92  D7FD               	goto	l169
 30497  01BF94                     __end_of_OSCILLATOR_Initialize:
 30498                           	opt callstack 0
 30499                           
 30500 ;; *************** function _INTERRUPT_Initialize *****************
 30501 ;; Defined at:
 30502 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30503 ;; Parameters:    Size  Location     Type
 30504 ;;		None
 30505 ;; Auto vars:     Size  Location     Type
 30506 ;;  state           1  [STACK] _Bool 
 30507 ;; Return value:  Size  Location     Type
 30508 ;;                  1  [STACK] void 
 30509 ;; Registers used:
 30510 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30511 ;; Tracked objects:
 30512 ;;		On entry : 0/0
 30513 ;;		On exit  : 3F/39
 30514 ;;		Unchanged: 0/0
 30515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30520 ;;Total ram usage:        0 bytes
 30521 ;; Hardware stack levels used:    1
 30522 ;; Hardware stack levels required when called:   15
 30523 ;; This function calls:
 30524 ;;		Nothing
 30525 ;; This function is called by:
 30526 ;;		_SYSTEM_Initialize
 30527 ;; This function uses a reentrant model
 30528 ;;
 30529                           
 30530                           	psect	text125
 30531  01AF3A                     __ptext125:
 30532                           	opt callstack 0
 30533  01AF3A                     _INTERRUPT_Initialize:
 30534                           	opt callstack 0
 30535                           
 30536                           ; BSR set to: 57
 30537                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30538  01AF3A  52E6               	movf	postinc1,f,c
 30539                           
 30540                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30541                           
 30542                           ;incstack = 0
 30543  01AF3C  8AD2               	bsf	210,5,c	;volatile
 30544                           
 30545                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30546  01AF3E  AED2               	btfss	16338,7,c	;volatile
 30547  01AF40  D003               	goto	u9430
 30548  01AF42  6A0C               	clrf	(btemp+11)^0,c
 30549  01AF44  2A0C               	incf	(btemp+11)^0,f,c
 30550  01AF46  D001               	goto	u9448
 30551  01AF48                     u9430:
 30552  01AF48  6A0C               	clrf	(btemp+11)^0,c
 30553  01AF4A                     u9448:
 30554                           
 30555                           ;stkvar	_state @ sp[(-1)+0]
 30556  01AF4A  0EFF               	movlw	-1
 30557  01AF4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30558                           
 30559                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30560  01AF52  9ED2               	bcf	16338,7,c	;volatile
 30561                           
 30562                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30563  01AF54  0E55               	movlw	85
 30564  01AF56  6ED4               	movwf	212,c	;volatile
 30565                           
 30566                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30567  01AF58  0EAA               	movlw	170
 30568  01AF5A  6ED4               	movwf	212,c	;volatile
 30569                           
 30570                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30571  01AF5C  90D4               	bcf	212,0,c	;volatile
 30572                           
 30573                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30574  01AF5E  0138               	movlb	56	; () banked
 30575  01AF60  6B9F               	clrf	159,b	;volatile
 30576                           
 30577                           ; BSR set to: 56
 30578                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30579  01AF62  6B9E               	clrf	158,b	;volatile
 30580                           
 30581                           ; BSR set to: 56
 30582                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30583  01AF64  0E08               	movlw	8
 30584  01AF66  6F9D               	movwf	157,b	;volatile
 30585                           
 30586                           ; BSR set to: 56
 30587                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30588  01AF68  0E55               	movlw	85
 30589  01AF6A  6ED4               	movwf	212,c	;volatile
 30590                           
 30591                           ; BSR set to: 56
 30592                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30593  01AF6C  0EAA               	movlw	170
 30594  01AF6E  6ED4               	movwf	212,c	;volatile
 30595                           
 30596                           ; BSR set to: 56
 30597                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30598  01AF70  80D4               	bsf	212,0,c	;volatile
 30599                           
 30600                           ; BSR set to: 56
 30601                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30602                           ;stkvar	_state @ sp[(-1)+0]
 30603  01AF72  0EFF               	movlw	-1
 30604  01AF74  B0E3               	btfsc	plusw1,0,c
 30605  01AF76  D002               	bra	u9455
 30606  01AF78  9ED2               	bcf	16338,7,c	;volatile
 30607  01AF7A  D001               	bra	u9456
 30608  01AF7C                     u9455:
 30609  01AF7C  8ED2               	bsf	16338,7,c	;volatile
 30610  01AF7E                     u9456:
 30611                           
 30612                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30613  01AF7E  0139               	movlb	57	; () banked
 30614  01AF80  8782               	bsf	130,3,b	;volatile
 30615                           
 30616                           ; BSR set to: 57
 30617                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30618  01AF82  8382               	bsf	130,1,b	;volatile
 30619                           
 30620                           ; BSR set to: 57
 30621                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30622  01AF84  8182               	bsf	130,0,b	;volatile
 30623                           
 30624                           ; BSR set to: 57
 30625                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30626  01AF86  8582               	bsf	130,2,b	;volatile
 30627                           
 30628                           ; BSR set to: 57
 30629                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30630  01AF88  8786               	bsf	134,3,b	;volatile
 30631                           
 30632                           ; BSR set to: 57
 30633                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30634  01AF8A  8586               	bsf	134,2,b	;volatile
 30635                           
 30636                           ; BSR set to: 57
 30637                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30638  01AF8C  8783               	bsf	131,3,b	;volatile
 30639                           
 30640                           ; BSR set to: 57
 30641                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30642  01AF8E  8181               	bsf	129,0,b	;volatile
 30643                           
 30644                           ; BSR set to: 57
 30645                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30646  01AF90  9185               	bcf	133,0,b	;volatile
 30647                           
 30648                           ; BSR set to: 57
 30649                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30650  01AF92  8189               	bsf	137,0,b	;volatile
 30651                           
 30652                           ; BSR set to: 57
 30653                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30654  01AF94  9D88               	bcf	136,6,b	;volatile
 30655                           
 30656                           ; BSR set to: 57
 30657                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30658  01AF96  8581               	bsf	129,2,b	;volatile
 30659                           
 30660                           ; BSR set to: 57
 30661                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30662  01AF98  8781               	bsf	129,3,b	;volatile
 30663                           
 30664                           ; BSR set to: 57
 30665                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30666  01AF9A  9D86               	bcf	134,6,b	;volatile
 30667                           
 30668                           ; BSR set to: 57
 30669                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30670  01AF9C  52E5               	movf	postdec1,f,c
 30671  01AF9E  0012               	return		;funcret
 30672  01AFA0                     __end_of_INTERRUPT_Initialize:
 30673                           	opt callstack 0
 30674                           
 30675 ;; *************** function _FVR_Initialize *****************
 30676 ;; Defined at:
 30677 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30678 ;; Parameters:    Size  Location     Type
 30679 ;;		None
 30680 ;; Auto vars:     Size  Location     Type
 30681 ;;		None
 30682 ;; Return value:  Size  Location     Type
 30683 ;;                  1  [STACK] void 
 30684 ;; Registers used:
 30685 ;;		wreg, status,2
 30686 ;; Tracked objects:
 30687 ;;		On entry : 3F/39
 30688 ;;		On exit  : 3F/3E
 30689 ;;		Unchanged: 0/0
 30690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30695 ;;Total ram usage:        0 bytes
 30696 ;; Hardware stack levels used:    1
 30697 ;; Hardware stack levels required when called:   15
 30698 ;; This function calls:
 30699 ;;		Nothing
 30700 ;; This function is called by:
 30701 ;;		_SYSTEM_Initialize
 30702 ;; This function uses a reentrant model
 30703 ;;
 30704                           
 30705                           	psect	text126
 30706  01C0AA                     __ptext126:
 30707                           	opt callstack 0
 30708  01C0AA                     _FVR_Initialize:
 30709                           	opt callstack 14
 30710                           
 30711                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30712                           
 30713                           ; BSR set to: 57
 30714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30715                           ;incstack = 0
 30716  01C0AA  0EAF               	movlw	175
 30717  01C0AC  013E               	movlb	62	; () banked
 30718  01C0AE  6FC1               	movwf	193,b	;volatile
 30719                           
 30720                           ; BSR set to: 62
 30721                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30722  01C0B0  0012               	return		;funcret
 30723  01C0B2                     __end_of_FVR_Initialize:
 30724                           	opt callstack 0
 30725                           
 30726 ;; *************** function _EXT_INT_Initialize *****************
 30727 ;; Defined at:
 30728 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30729 ;; Parameters:    Size  Location     Type
 30730 ;;		None
 30731 ;; Auto vars:     Size  Location     Type
 30732 ;;		None
 30733 ;; Return value:  Size  Location     Type
 30734 ;;                  1  [STACK] void 
 30735 ;; Registers used:
 30736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30737 ;; Tracked objects:
 30738 ;;		On entry : 3F/3F
 30739 ;;		On exit  : 3F/39
 30740 ;;		Unchanged: 0/0
 30741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30746 ;;Total ram usage:        0 bytes
 30747 ;; Hardware stack levels used:    1
 30748 ;; Hardware stack levels required when called:   16
 30749 ;; This function calls:
 30750 ;;		_INT0_SetInterruptHandler
 30751 ;;		_INT1_SetInterruptHandler
 30752 ;; This function is called by:
 30753 ;;		_SYSTEM_Initialize
 30754 ;; This function uses a reentrant model
 30755 ;;
 30756                           
 30757                           	psect	text127
 30758  01B880                     __ptext127:
 30759                           	opt callstack 0
 30760  01B880                     _EXT_INT_Initialize:
 30761                           	opt callstack 13
 30762                           
 30763                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30764                           
 30765                           ; BSR set to: 62
 30766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30767                           ;incstack = 0
 30768  01B880  0139               	movlb	57	; () banked
 30769  01B882  91A1               	bcf	161,0,b	;volatile
 30770                           
 30771                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30772  01B884  90D2               	bcf	210,0,c	;volatile
 30773                           
 30774                           ; BSR set to: 57
 30775                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30776  01B886  0ED6               	movlw	low _INT0_DefaultInterruptHandler
 30777  01B888  6EE6               	movwf	postinc1,c
 30778  01B88A  0EC0               	movlw	high _INT0_DefaultInterruptHandler
 30779  01B88C  6EE6               	movwf	postinc1,c
 30780  01B88E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30781  01B890  6EE6               	movwf	postinc1,c
 30782  01B892  EC05  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 30783                           
 30784                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30785  01B896  0139               	movlb	57	; () banked
 30786  01B898  8191               	bsf	145,0,b	;volatile
 30787                           
 30788                           ; BSR set to: 57
 30789                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30790  01B89A  91A5               	bcf	165,0,b	;volatile
 30791                           
 30792                           ; BSR set to: 57
 30793                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30794  01B89C  92D2               	bcf	210,1,c	;volatile
 30795                           
 30796                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30797  01B89E  0ED2               	movlw	low _INT1_DefaultInterruptHandler
 30798  01B8A0  6EE6               	movwf	postinc1,c
 30799  01B8A2  0EC0               	movlw	high _INT1_DefaultInterruptHandler
 30800  01B8A4  6EE6               	movwf	postinc1,c
 30801  01B8A6  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30802  01B8A8  6EE6               	movwf	postinc1,c
 30803  01B8AA  ECF1  F0DD         	call	_INT1_SetInterruptHandler	;wreg free
 30804                           
 30805                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30806  01B8AE  0139               	movlb	57	; () banked
 30807  01B8B0  8195               	bsf	149,0,b	;volatile
 30808                           
 30809                           ; BSR set to: 57
 30810                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30811  01B8B2  0012               	return		;funcret
 30812  01B8B4                     __end_of_EXT_INT_Initialize:
 30813                           	opt callstack 0
 30814                           
 30815 ;; *************** function _INT1_SetInterruptHandler *****************
 30816 ;; Defined at:
 30817 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30818 ;; Parameters:    Size  Location     Type
 30819 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30820 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30821 ;; Auto vars:     Size  Location     Type
 30822 ;;		None
 30823 ;; Return value:  Size  Location     Type
 30824 ;;                  1  [STACK] void 
 30825 ;; Registers used:
 30826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30827 ;; Tracked objects:
 30828 ;;		On entry : 3F/39
 30829 ;;		On exit  : 0/0
 30830 ;;		Unchanged: 0/0
 30831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30836 ;;Total ram usage:        0 bytes
 30837 ;; Hardware stack levels used:    1
 30838 ;; Hardware stack levels required when called:   15
 30839 ;; This function calls:
 30840 ;;		Nothing
 30841 ;; This function is called by:
 30842 ;;		_EXT_INT_Initialize
 30843 ;;		_start_switch_handler
 30844 ;; This function uses a reentrant model
 30845 ;;
 30846                           
 30847                           	psect	text128
 30848  01BBE2                     __ptext128:
 30849                           	opt callstack 0
 30850  01BBE2                     _INT1_SetInterruptHandler:
 30851                           	opt callstack 14
 30852                           
 30853                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30854                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30855                           
 30856                           ; BSR set to: 57
 30857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30858                           ;incstack = 0
 30859  01BBE2  50E1               	movf	fsr1l,w,c
 30860  01BBE4  0FFD               	addlw	-3
 30861  01BBE6  6ED9               	movwf	fsr2l,c
 30862  01BBE8  50E2               	movf	fsr1h,w,c
 30863  01BBEA  6EDA               	movwf	fsr2h,c
 30864  01BBEC  0EFF               	movlw	255
 30865  01BBEE  22DA               	addwfc	fsr2h,f,c
 30866  01BBF0  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30867  01BBF6  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30868  01BBFC  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30869                           
 30870                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30871  01BC02  52E5               	movf	postdec1,f,c
 30872  01BC04  52E5               	movf	postdec1,f,c
 30873  01BC06  52E5               	movf	postdec1,f,c
 30874  01BC08  0012               	return		;funcret
 30875  01BC0A                     __end_of_INT1_SetInterruptHandler:
 30876                           	opt callstack 0
 30877                           
 30878 ;; *************** function _INT0_SetInterruptHandler *****************
 30879 ;; Defined at:
 30880 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30881 ;; Parameters:    Size  Location     Type
 30882 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30883 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30884 ;; Auto vars:     Size  Location     Type
 30885 ;;		None
 30886 ;; Return value:  Size  Location     Type
 30887 ;;                  1  [STACK] void 
 30888 ;; Registers used:
 30889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30890 ;; Tracked objects:
 30891 ;;		On entry : 3F/39
 30892 ;;		On exit  : 0/0
 30893 ;;		Unchanged: 0/0
 30894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30899 ;;Total ram usage:        0 bytes
 30900 ;; Hardware stack levels used:    1
 30901 ;; Hardware stack levels required when called:   15
 30902 ;; This function calls:
 30903 ;;		Nothing
 30904 ;; This function is called by:
 30905 ;;		_EXT_INT_Initialize
 30906 ;; This function uses a reentrant model
 30907 ;;
 30908                           
 30909                           	psect	text129
 30910  01BC0A                     __ptext129:
 30911                           	opt callstack 0
 30912  01BC0A                     _INT0_SetInterruptHandler:
 30913                           	opt callstack 13
 30914                           
 30915                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30916                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30917                           
 30918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30919                           ;incstack = 0
 30920  01BC0A  50E1               	movf	fsr1l,w,c
 30921  01BC0C  0FFD               	addlw	-3
 30922  01BC0E  6ED9               	movwf	fsr2l,c
 30923  01BC10  50E2               	movf	fsr1h,w,c
 30924  01BC12  6EDA               	movwf	fsr2h,c
 30925  01BC14  0EFF               	movlw	255
 30926  01BC16  22DA               	addwfc	fsr2h,f,c
 30927  01BC18  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30928  01BC1E  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30929  01BC24  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30930                           
 30931                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30932  01BC2A  52E5               	movf	postdec1,f,c
 30933  01BC2C  52E5               	movf	postdec1,f,c
 30934  01BC2E  52E5               	movf	postdec1,f,c
 30935  01BC30  0012               	return		;funcret
 30936  01BC32                     __end_of_INT0_SetInterruptHandler:
 30937                           	opt callstack 0
 30938                           
 30939 ;; *************** function _DMA2_Initialize *****************
 30940 ;; Defined at:
 30941 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30942 ;; Parameters:    Size  Location     Type
 30943 ;;		None
 30944 ;; Auto vars:     Size  Location     Type
 30945 ;;		None
 30946 ;; Return value:  Size  Location     Type
 30947 ;;                  1  [STACK] void 
 30948 ;; Registers used:
 30949 ;;		wreg, status,2
 30950 ;; Tracked objects:
 30951 ;;		On entry : 3F/3D
 30952 ;;		On exit  : 3F/3B
 30953 ;;		Unchanged: 0/0
 30954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30959 ;;Total ram usage:        0 bytes
 30960 ;; Hardware stack levels used:    1
 30961 ;; Hardware stack levels required when called:   15
 30962 ;; This function calls:
 30963 ;;		Nothing
 30964 ;; This function is called by:
 30965 ;;		_SYSTEM_Initialize
 30966 ;; This function uses a reentrant model
 30967 ;;
 30968                           
 30969                           	psect	text130
 30970  01B1DC                     __ptext130:
 30971                           	opt callstack 0
 30972  01B1DC                     _DMA2_Initialize:
 30973                           	opt callstack 14
 30974                           
 30975                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30976                           
 30977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30978                           ;incstack = 0
 30979  01B1DC  0E00               	movlw	0
 30980  01B1DE  013B               	movlb	59	; () banked
 30981  01B1E0  6FD9               	movwf	217,b	;volatile
 30982  01B1E2  0E10               	movlw	16
 30983  01B1E4  6FDA               	movwf	218,b	;volatile
 30984  01B1E6  0E00               	movlw	0
 30985  01B1E8  6FDB               	movwf	219,b	;volatile
 30986                           
 30987                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30988  01B1EA  0E3F               	movlw	63
 30989  01B1EC  6FD1               	movwf	209,b	;volatile
 30990  01B1EE  0EBB               	movlw	187
 30991  01B1F0  6FD0               	movwf	208,b	;volatile
 30992                           
 30993                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30994  01B1F2  0E03               	movlw	3
 30995  01B1F4  6FDD               	movwf	221,b	;volatile
 30996                           
 30997                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30998  01B1F6  0E00               	movlw	0
 30999  01B1F8  6FD8               	movwf	216,b	;volatile
 31000  01B1FA  0E01               	movlw	1
 31001  01B1FC  6FD7               	movwf	215,b	;volatile
 31002                           
 31003                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31004  01B1FE  0E00               	movlw	0
 31005  01B200  6FCF               	movwf	207,b	;volatile
 31006  01B202  0E01               	movlw	1
 31007  01B204  6FCE               	movwf	206,b	;volatile
 31008                           
 31009                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31010  01B206  0E1C               	movlw	28
 31011  01B208  6FDF               	movwf	223,b	;volatile
 31012                           
 31013                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31014  01B20A  0E3D               	movlw	61
 31015  01B20C  6FDE               	movwf	222,b	;volatile
 31016                           
 31017                           ; BSR set to: 59
 31018                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31019  01B20E  0139               	movlb	57	; () banked
 31020  01B210  97A5               	bcf	165,3,b	;volatile
 31021                           
 31022                           ; BSR set to: 57
 31023                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31024  01B212  95A5               	bcf	165,2,b	;volatile
 31025                           
 31026                           ; BSR set to: 57
 31027                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31028  01B214  9BA5               	bcf	165,5,b	;volatile
 31029                           
 31030                           ; BSR set to: 57
 31031                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31032  01B216  99A5               	bcf	165,4,b	;volatile
 31033                           
 31034                           ; BSR set to: 57
 31035                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31036  01B218  9795               	bcf	149,3,b	;volatile
 31037                           
 31038                           ; BSR set to: 57
 31039                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31040  01B21A  9595               	bcf	149,2,b	;volatile
 31041                           
 31042                           ; BSR set to: 57
 31043                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31044  01B21C  9B95               	bcf	149,5,b	;volatile
 31045                           
 31046                           ; BSR set to: 57
 31047                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31048  01B21E  9995               	bcf	149,4,b	;volatile
 31049  01B220  9ED2               	bcf	16338,7,c	;# 
 31050  01B222  0139               	banksel	14831	;# 
 31051  01B224  0E55               	movlw	85	;# 
 31052  01B226  6FEF               	movwf	14831,b	;# 
 31053  01B228  0EAA               	movlw	170	;# 
 31054  01B22A  6FEF               	movwf	14831,b	;# 
 31055  01B22C  81EF               	bsf	14831,0,b	;# 
 31056  01B22E  8ED2               	bsf	16338,7,c	;# 
 31057                           
 31058                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31059  01B230  013B               	movlb	59	; () banked
 31060  01B232  6BDC               	clrf	220,b	;volatile
 31061                           
 31062                           ; BSR set to: 59
 31063                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31064  01B234  0012               	return		;funcret
 31065  01B236                     __end_of_DMA2_Initialize:
 31066                           	opt callstack 0
 31067                           
 31068 ;; *************** function _DMA1_Initialize *****************
 31069 ;; Defined at:
 31070 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31071 ;; Parameters:    Size  Location     Type
 31072 ;;		None
 31073 ;; Auto vars:     Size  Location     Type
 31074 ;;		None
 31075 ;; Return value:  Size  Location     Type
 31076 ;;                  1  [STACK] void 
 31077 ;; Registers used:
 31078 ;;		wreg, status,2
 31079 ;; Tracked objects:
 31080 ;;		On entry : 3F/3B
 31081 ;;		On exit  : 3F/3B
 31082 ;;		Unchanged: 0/0
 31083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31088 ;;Total ram usage:        0 bytes
 31089 ;; Hardware stack levels used:    1
 31090 ;; Hardware stack levels required when called:   15
 31091 ;; This function calls:
 31092 ;;		Nothing
 31093 ;; This function is called by:
 31094 ;;		_SYSTEM_Initialize
 31095 ;; This function uses a reentrant model
 31096 ;;
 31097                           
 31098                           	psect	text131
 31099  01ADFA                     __ptext131:
 31100                           	opt callstack 0
 31101  01ADFA                     _DMA1_Initialize:
 31102                           	opt callstack 14
 31103                           
 31104                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31105                           
 31106                           ; BSR set to: 59
 31107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31108                           ;incstack = 0
 31109  01ADFA  0E00               	movlw	0
 31110  01ADFC  013B               	movlb	59	; () banked
 31111  01ADFE  6FF9               	movwf	249,b	;volatile
 31112  01AE00  0E10               	movlw	16
 31113  01AE02  6FFA               	movwf	250,b	;volatile
 31114  01AE04  0E00               	movlw	0
 31115  01AE06  6FFB               	movwf	251,b	;volatile
 31116                           
 31117                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31118  01AE08  0E3D               	movlw	61
 31119  01AE0A  6FF1               	movwf	241,b	;volatile
 31120  01AE0C  0E11               	movlw	17
 31121  01AE0E  6FF0               	movwf	240,b	;volatile
 31122                           
 31123                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31124  01AE10  0E03               	movlw	3
 31125  01AE12  6FFD               	movwf	253,b	;volatile
 31126                           
 31127                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31128  01AE14  0E00               	movlw	0
 31129  01AE16  6FF8               	movwf	248,b	;volatile
 31130  01AE18  0E01               	movlw	1
 31131  01AE1A  6FF7               	movwf	247,b	;volatile
 31132                           
 31133                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31134  01AE1C  0E00               	movlw	0
 31135  01AE1E  6FEF               	movwf	239,b	;volatile
 31136  01AE20  0E01               	movlw	1
 31137  01AE22  6FEE               	movwf	238,b	;volatile
 31138                           
 31139                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31140  01AE24  0E15               	movlw	21
 31141  01AE26  6FFF               	movwf	255,b	;volatile
 31142                           
 31143                           ; BSR set to: 59
 31144                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31145  01AE28  6BFE               	clrf	254,b	;volatile
 31146                           
 31147                           ; BSR set to: 59
 31148                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31149  01AE2A  0139               	movlb	57	; () banked
 31150  01AE2C  93A2               	bcf	162,1,b	;volatile
 31151                           
 31152                           ; BSR set to: 57
 31153                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31154  01AE2E  91A2               	bcf	162,0,b	;volatile
 31155                           
 31156                           ; BSR set to: 57
 31157                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31158  01AE30  97A2               	bcf	162,3,b	;volatile
 31159                           
 31160                           ; BSR set to: 57
 31161                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31162  01AE32  95A2               	bcf	162,2,b	;volatile
 31163                           
 31164                           ; BSR set to: 57
 31165                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31166  01AE34  8392               	bsf	146,1,b	;volatile
 31167                           
 31168                           ; BSR set to: 57
 31169                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31170  01AE36  8192               	bsf	146,0,b	;volatile
 31171                           
 31172                           ; BSR set to: 57
 31173                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31174  01AE38  8792               	bsf	146,3,b	;volatile
 31175                           
 31176                           ; BSR set to: 57
 31177                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31178  01AE3A  8592               	bsf	146,2,b	;volatile
 31179                           
 31180                           ; BSR set to: 57
 31181                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31182  01AE3C  6BF1               	clrf	241,b	;volatile
 31183                           
 31184                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31185  01AE3E  0E01               	movlw	1
 31186  01AE40  6FF2               	movwf	242,b	;volatile
 31187                           
 31188                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31189  01AE42  0E04               	movlw	4
 31190  01AE44  6FF3               	movwf	243,b	;volatile
 31191                           
 31192                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31193  01AE46  0E02               	movlw	2
 31194  01AE48  6FF4               	movwf	244,b	;volatile
 31195                           
 31196                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31197  01AE4A  0E03               	movlw	3
 31198  01AE4C  6FF7               	movwf	247,b	;volatile
 31199  01AE4E  9ED2               	bcf	16338,7,c	;# 
 31200  01AE50  0139               	banksel	14831	;# 
 31201  01AE52  0E55               	movlw	85	;# 
 31202  01AE54  6FEF               	movwf	14831,b	;# 
 31203  01AE56  0EAA               	movlw	170	;# 
 31204  01AE58  6FEF               	movwf	14831,b	;# 
 31205  01AE5A  81EF               	bsf	14831,0,b	;# 
 31206  01AE5C  8ED2               	bsf	16338,7,c	;# 
 31207                           
 31208                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31209  01AE5E  013B               	movlb	59	; () banked
 31210  01AE60  6BFC               	clrf	252,b	;volatile
 31211                           
 31212                           ; BSR set to: 59
 31213                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31214  01AE62  0012               	return		;funcret
 31215  01AE64                     __end_of_DMA1_Initialize:
 31216                           	opt callstack 0
 31217                           
 31218 ;; *************** function _CLKREF_Initialize *****************
 31219 ;; Defined at:
 31220 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31221 ;; Parameters:    Size  Location     Type
 31222 ;;		None
 31223 ;; Auto vars:     Size  Location     Type
 31224 ;;		None
 31225 ;; Return value:  Size  Location     Type
 31226 ;;                  1  [STACK] void 
 31227 ;; Registers used:
 31228 ;;		wreg, status,2
 31229 ;; Tracked objects:
 31230 ;;		On entry : 3F/3B
 31231 ;;		On exit  : 3F/3C
 31232 ;;		Unchanged: 0/0
 31233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31238 ;;Total ram usage:        0 bytes
 31239 ;; Hardware stack levels used:    1
 31240 ;; Hardware stack levels required when called:   15
 31241 ;; This function calls:
 31242 ;;		Nothing
 31243 ;; This function is called by:
 31244 ;;		_SYSTEM_Initialize
 31245 ;; This function uses a reentrant model
 31246 ;;
 31247                           
 31248                           	psect	text132
 31249  01C052                     __ptext132:
 31250                           	opt callstack 0
 31251  01C052                     _CLKREF_Initialize:
 31252                           	opt callstack 14
 31253                           
 31254                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31255                           
 31256                           ; BSR set to: 59
 31257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31258                           ;incstack = 0
 31259  01C052  013C               	movlb	60	; () banked
 31260  01C054  6BE6               	clrf	230,b	;volatile
 31261                           
 31262                           ; BSR set to: 60
 31263                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31264  01C056  0E94               	movlw	148
 31265  01C058  6FE5               	movwf	229,b	;volatile
 31266                           
 31267                           ; BSR set to: 60
 31268                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31269  01C05A  0012               	return		;funcret
 31270  01C05C                     __end_of_CLKREF_Initialize:
 31271                           	opt callstack 0
 31272                           
 31273 ;; *************** function _ADCC_Initialize *****************
 31274 ;; Defined at:
 31275 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31276 ;; Parameters:    Size  Location     Type
 31277 ;;		None
 31278 ;; Auto vars:     Size  Location     Type
 31279 ;;		None
 31280 ;; Return value:  Size  Location     Type
 31281 ;;                  1  [STACK] void 
 31282 ;; Registers used:
 31283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31284 ;; Tracked objects:
 31285 ;;		On entry : 3F/3E
 31286 ;;		On exit  : 0/0
 31287 ;;		Unchanged: 0/0
 31288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31293 ;;Total ram usage:        0 bytes
 31294 ;; Hardware stack levels used:    1
 31295 ;; Hardware stack levels required when called:   16
 31296 ;; This function calls:
 31297 ;;		_ADCC_SetADIInterruptHandler
 31298 ;;		_ADCC_SetADTIInterruptHandler
 31299 ;; This function is called by:
 31300 ;;		_SYSTEM_Initialize
 31301 ;; This function uses a reentrant model
 31302 ;;
 31303                           
 31304                           	psect	text133
 31305  01AE64                     __ptext133:
 31306                           	opt callstack 0
 31307  01AE64                     _ADCC_Initialize:
 31308                           	opt callstack 13
 31309                           
 31310                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31311                           
 31312                           ; BSR set to: 60
 31313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31314                           ;incstack = 0
 31315  01AE64  013E               	movlb	62	; () banked
 31316  01AE66  6BDE               	clrf	222,b	;volatile
 31317                           
 31318                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31319  01AE68  6BDF               	clrf	223,b	;volatile
 31320                           
 31321                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31322  01AE6A  6BE0               	clrf	224,b	;volatile
 31323                           
 31324                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31325  01AE6C  6BE1               	clrf	225,b	;volatile
 31326                           
 31327                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31328  01AE6E  6BE4               	clrf	228,b	;volatile
 31329                           
 31330                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31331  01AE70  6BE5               	clrf	229,b	;volatile
 31332                           
 31333                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31334  01AE72  6BEA               	clrf	234,b	;volatile
 31335                           
 31336                           ; BSR set to: 62
 31337                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31338  01AE74  0E40               	movlw	64
 31339  01AE76  6FEC               	movwf	236,b	;volatile
 31340                           
 31341                           ; BSR set to: 62
 31342                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31343  01AE78  6BF1               	clrf	241,b	;volatile
 31344                           
 31345                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31346  01AE7A  0E20               	movlw	32
 31347  01AE7C  6FF3               	movwf	243,b	;volatile
 31348                           
 31349                           ; BSR set to: 62
 31350                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31351  01AE7E  6BF4               	clrf	244,b	;volatile
 31352                           
 31353                           ; BSR set to: 62
 31354                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31355  01AE80  6BF5               	clrf	245,b	;volatile
 31356                           
 31357                           ; BSR set to: 62
 31358                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31359  01AE82  6BF6               	clrf	246,b	;volatile
 31360                           
 31361                           ; BSR set to: 62
 31362                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31363  01AE84  6BF7               	clrf	247,b	;volatile
 31364                           
 31365                           ; BSR set to: 62
 31366                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31367  01AE86  6BF9               	clrf	249,b	;volatile
 31368                           
 31369                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31370  01AE88  0E5B               	movlw	91
 31371  01AE8A  6FFA               	movwf	250,b	;volatile
 31372                           
 31373                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31374  01AE8C  0E27               	movlw	39
 31375  01AE8E  6FFB               	movwf	251,b	;volatile
 31376                           
 31377                           ; BSR set to: 62
 31378                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31379  01AE90  6BFC               	clrf	252,b	;volatile
 31380                           
 31381                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31382  01AE92  0E02               	movlw	2
 31383  01AE94  6FFD               	movwf	253,b	;volatile
 31384                           
 31385                           ; BSR set to: 62
 31386                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31387  01AE96  6BFE               	clrf	254,b	;volatile
 31388                           
 31389                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31390  01AE98  0E07               	movlw	7
 31391  01AE9A  6FFF               	movwf	255,b	;volatile
 31392                           
 31393                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31394  01AE9C  0E84               	movlw	132
 31395  01AE9E  6FF8               	movwf	248,b	;volatile
 31396                           
 31397                           ; BSR set to: 62
 31398                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31399  01AEA0  0139               	movlb	57	; () banked
 31400  01AEA2  95A1               	bcf	161,2,b	;volatile
 31401                           
 31402                           ; BSR set to: 57
 31403                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31404  01AEA4  8591               	bsf	145,2,b	;volatile
 31405                           
 31406                           ; BSR set to: 57
 31407                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31408  01AEA6  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 31409  01AEA8  6EE6               	movwf	postinc1,c
 31410  01AEAA  0EC0               	movlw	high _ADCC_DefaultInterruptHandler
 31411  01AEAC  6EE6               	movwf	postinc1,c
 31412  01AEAE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31413  01AEB0  6EE6               	movwf	postinc1,c
 31414  01AEB2  EC2D  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31415                           
 31416                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31417  01AEB6  0139               	movlb	57	; () banked
 31418  01AEB8  97A1               	bcf	161,3,b	;volatile
 31419                           
 31420                           ; BSR set to: 57
 31421                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31422  01AEBA  8791               	bsf	145,3,b	;volatile
 31423                           
 31424                           ; BSR set to: 57
 31425                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31426  01AEBC  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 31427  01AEBE  6EE6               	movwf	postinc1,c
 31428  01AEC0  0EC0               	movlw	high _ADCC_DefaultInterruptHandler
 31429  01AEC2  6EE6               	movwf	postinc1,c
 31430  01AEC4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31431  01AEC6  6EE6               	movwf	postinc1,c
 31432  01AEC8  EC19  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31433                           
 31434                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31435  01AECC  0012               	return		;funcret
 31436  01AECE                     __end_of_ADCC_Initialize:
 31437                           	opt callstack 0
 31438                           
 31439 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31440 ;; Defined at:
 31441 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31442 ;; Parameters:    Size  Location     Type
 31443 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31444 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31445 ;; Auto vars:     Size  Location     Type
 31446 ;;		None
 31447 ;; Return value:  Size  Location     Type
 31448 ;;                  1  [STACK] void 
 31449 ;; Registers used:
 31450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31451 ;; Tracked objects:
 31452 ;;		On entry : 0/1
 31453 ;;		On exit  : 0/0
 31454 ;;		Unchanged: 0/0
 31455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31460 ;;Total ram usage:        0 bytes
 31461 ;; Hardware stack levels used:    1
 31462 ;; Hardware stack levels required when called:   15
 31463 ;; This function calls:
 31464 ;;		Nothing
 31465 ;; This function is called by:
 31466 ;;		_ADCC_Initialize
 31467 ;;		_start_adc_scan
 31468 ;; This function uses a reentrant model
 31469 ;;
 31470                           
 31471                           	psect	text134
 31472  01BC32                     __ptext134:
 31473                           	opt callstack 0
 31474  01BC32                     _ADCC_SetADTIInterruptHandler:
 31475                           	opt callstack 14
 31476                           
 31477                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31478                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31479                           
 31480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31481                           ;incstack = 0
 31482  01BC32  50E1               	movf	fsr1l,w,c
 31483  01BC34  0FFD               	addlw	-3
 31484  01BC36  6ED9               	movwf	fsr2l,c
 31485  01BC38  50E2               	movf	fsr1h,w,c
 31486  01BC3A  6EDA               	movwf	fsr2h,c
 31487  01BC3C  0EFF               	movlw	255
 31488  01BC3E  22DA               	addwfc	fsr2h,f,c
 31489  01BC40  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31490  01BC46  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31491  01BC4C  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31492                           
 31493                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31494  01BC52  52E5               	movf	postdec1,f,c
 31495  01BC54  52E5               	movf	postdec1,f,c
 31496  01BC56  52E5               	movf	postdec1,f,c
 31497  01BC58  0012               	return		;funcret
 31498  01BC5A                     __end_of_ADCC_SetADTIInterruptHandler:
 31499                           	opt callstack 0
 31500                           
 31501 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31502 ;; Defined at:
 31503 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31504 ;; Parameters:    Size  Location     Type
 31505 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31506 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31507 ;; Auto vars:     Size  Location     Type
 31508 ;;		None
 31509 ;; Return value:  Size  Location     Type
 31510 ;;                  1  [STACK] void 
 31511 ;; Registers used:
 31512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31513 ;; Tracked objects:
 31514 ;;		On entry : 7/1
 31515 ;;		On exit  : 0/0
 31516 ;;		Unchanged: 0/0
 31517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31522 ;;Total ram usage:        0 bytes
 31523 ;; Hardware stack levels used:    1
 31524 ;; Hardware stack levels required when called:   15
 31525 ;; This function calls:
 31526 ;;		Nothing
 31527 ;; This function is called by:
 31528 ;;		_ADCC_Initialize
 31529 ;;		_start_adc_scan
 31530 ;; This function uses a reentrant model
 31531 ;;
 31532                           
 31533                           	psect	text135
 31534  01BC5A                     __ptext135:
 31535                           	opt callstack 0
 31536  01BC5A                     _ADCC_SetADIInterruptHandler:
 31537                           	opt callstack 14
 31538                           
 31539                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31540                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31541                           
 31542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31543                           ;incstack = 0
 31544  01BC5A  50E1               	movf	fsr1l,w,c
 31545  01BC5C  0FFD               	addlw	-3
 31546  01BC5E  6ED9               	movwf	fsr2l,c
 31547  01BC60  50E2               	movf	fsr1h,w,c
 31548  01BC62  6EDA               	movwf	fsr2h,c
 31549  01BC64  0EFF               	movlw	255
 31550  01BC66  22DA               	addwfc	fsr2h,f,c
 31551  01BC68  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31552  01BC6E  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31553  01BC74  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31554                           
 31555                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31556  01BC7A  52E5               	movf	postdec1,f,c
 31557  01BC7C  52E5               	movf	postdec1,f,c
 31558  01BC7E  52E5               	movf	postdec1,f,c
 31559  01BC80  0012               	return		;funcret
 31560  01BC82                     __end_of_ADCC_SetADIInterruptHandler:
 31561                           	opt callstack 0
 31562                           
 31563 ;; *************** function _INT1_ISR *****************
 31564 ;; Defined at:
 31565 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;		None
 31568 ;; Auto vars:     Size  Location     Type
 31569 ;;		None
 31570 ;; Return value:  Size  Location     Type
 31571 ;;                  1    wreg      void 
 31572 ;; Registers used:
 31573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31574 ;; Tracked objects:
 31575 ;;		On entry : 0/0
 31576 ;;		On exit  : 0/0
 31577 ;;		Unchanged: 0/0
 31578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31581 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31583 ;;Total ram usage:        4 bytes
 31584 ;; Hardware stack levels used:    1
 31585 ;; Hardware stack levels required when called:    5
 31586 ;; This function calls:
 31587 ;;		_INT1_CallBack
 31588 ;; This function is called by:
 31589 ;;		Interrupt level 1
 31590 ;; This function uses a non-reentrant model
 31591 ;;
 31592                           
 31593                           	psect	text136
 31594  01B6F8                     __ptext136:
 31595                           	opt callstack 0
 31596  01B6F8                     _INT1_ISR:
 31597                           	opt callstack 12
 31598                           
 31599                           ;incstack = 0
 31600  01B6F8  006F FF60  F027    	movff	status,??_INT1_ISR
 31601  01B6FE  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31602  01B704  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31603  01B70A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31604  01B710  EE16  F0AF         	lfsr	1,___intlo_sp
 31605                           
 31606                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31607  01B714  0139               	movlb	57	; () banked
 31608  01B716  91A5               	bcf	165,0,b	;volatile
 31609                           
 31610                           ; BSR set to: 57
 31611                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31612  01B718  EC90  F0DE         	call	_INT1_CallBack	;wreg free
 31613  01B71C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31614  01B722  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31615  01B728  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31616  01B72E  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31617  01B734  0011               	retfie		f
 31618  01B736                     __end_of_INT1_ISR:
 31619                           	opt callstack 0
 31620                           
 31621 ;; *************** function _INT1_CallBack *****************
 31622 ;; Defined at:
 31623 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31624 ;; Parameters:    Size  Location     Type
 31625 ;;		None
 31626 ;; Auto vars:     Size  Location     Type
 31627 ;;		None
 31628 ;; Return value:  Size  Location     Type
 31629 ;;                  1  [STACK] void 
 31630 ;; Registers used:
 31631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31632 ;; Tracked objects:
 31633 ;;		On entry : 3F/39
 31634 ;;		On exit  : 0/0
 31635 ;;		Unchanged: 0/0
 31636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31641 ;;Total ram usage:        0 bytes
 31642 ;; Hardware stack levels used:    1
 31643 ;; Hardware stack levels required when called:    4
 31644 ;; This function calls:
 31645 ;;		Absolute function
 31646 ;;		_INT1_DefaultInterruptHandler
 31647 ;;		_switch_handler
 31648 ;; This function is called by:
 31649 ;;		_INT1_ISR
 31650 ;; This function uses a reentrant model
 31651 ;;
 31652                           
 31653                           	psect	text137
 31654  01BD20                     __ptext137:
 31655                           	opt callstack 0
 31656  01BD20                     _INT1_CallBack:
 31657                           	opt callstack 12
 31658                           
 31659                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31660                           
 31661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31662                           ;incstack = 0
 31663  01BD20  0100               	movlb	0	; () banked
 31664  01BD22  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31665  01BD24  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31666  01BD26  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31667  01BD28  B4D8               	btfsc	status,2,c
 31668  01BD2A  0012               	return	
 31669                           
 31670                           ; BSR set to: 0
 31671                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31672  01BD2C  D801               	call	u999_28
 31673  01BD2E  0012               	return	
 31674  01BD30                     u999_28:
 31675  01BD30  0005               	push	
 31676  01BD32  6EFA               	movwf	pclath,c
 31677  01BD34  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31678  01BD36  6EFD               	movwf	tosl,c
 31679  01BD38  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31680  01BD3A  6EFE               	movwf	tosh,c
 31681  01BD3C  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31682  01BD3E  6EFF               	movwf	tosu,c
 31683  01BD40  50FA               	movf	pclath,w,c
 31684  01BD42  0012               	return		;indir
 31685  01BD44                     __end_of_INT1_CallBack:
 31686                           	opt callstack 0
 31687                           
 31688 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31689 ;; Defined at:
 31690 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31691 ;; Parameters:    Size  Location     Type
 31692 ;;		None
 31693 ;; Auto vars:     Size  Location     Type
 31694 ;;		None
 31695 ;; Return value:  Size  Location     Type
 31696 ;;                  1  [STACK] void 
 31697 ;; Registers used:
 31698 ;;		None
 31699 ;; Tracked objects:
 31700 ;;		On entry : 3F/0
 31701 ;;		On exit  : 0/0
 31702 ;;		Unchanged: 0/0
 31703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31708 ;;Total ram usage:        0 bytes
 31709 ;; Hardware stack levels used:    1
 31710 ;; Hardware stack levels required when called:    3
 31711 ;; This function calls:
 31712 ;;		Nothing
 31713 ;; This function is called by:
 31714 ;;		_EXT_INT_Initialize
 31715 ;;		_INT1_CallBack
 31716 ;; This function uses a reentrant model
 31717 ;;
 31718                           
 31719                           	psect	text138
 31720  01C0D2                     __ptext138:
 31721                           	opt callstack 0
 31722  01C0D2                     _INT1_DefaultInterruptHandler:
 31723                           	opt callstack 12
 31724                           
 31725                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31726                           
 31727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31728                           ;incstack = 0
 31729  01C0D2  0012               	return		;funcret
 31730  01C0D4                     __end_of_INT1_DefaultInterruptHandler:
 31731                           	opt callstack 0
 31732                           
 31733 ;; *************** function _switch_handler *****************
 31734 ;; Defined at:
 31735 ;;		line 58 in file "dio.c"
 31736 ;; Parameters:    Size  Location     Type
 31737 ;;		None
 31738 ;; Auto vars:     Size  Location     Type
 31739 ;;  i               1  [STACK] unsigned char 
 31740 ;;  sw_value        1  [STACK] unsigned char 
 31741 ;; Return value:  Size  Location     Type
 31742 ;;                  1  [STACK] void 
 31743 ;; Registers used:
 31744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31745 ;; Tracked objects:
 31746 ;;		On entry : 3F/0
 31747 ;;		On exit  : 0/0
 31748 ;;		Unchanged: 0/0
 31749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31754 ;;Total ram usage:        0 bytes
 31755 ;; Hardware stack levels used:    1
 31756 ;; Hardware stack levels required when called:    3
 31757 ;; This function calls:
 31758 ;;		Nothing
 31759 ;; This function is called by:
 31760 ;;		_start_switch_handler
 31761 ;;		_INT1_CallBack
 31762 ;; This function uses a reentrant model
 31763 ;;
 31764                           
 31765                           	psect	text139
 31766  0193D4                     __ptext139:
 31767                           	opt callstack 0
 31768  0193D4                     _switch_handler:
 31769                           	opt callstack 0
 31770                           
 31771                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31772  0193D4  52E6               	movf	postinc1,f,c
 31773  0193D6  52E6               	movf	postinc1,f,c
 31774                           
 31775                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31776                           ;stkvar	_i @ sp[(-2)+0]
 31777                           
 31778                           ;incstack = 0
 31779  0193D8  0EFE               	movlw	-2
 31780  0193DA  6AE3               	clrf	plusw1,c
 31781  0193DC  9EBD               	bcf	189,7,c	;volatile
 31782  0193DE  9ABF               	bcf	191,5,c	;volatile
 31783                           
 31784                           ;dio.c: 73:  __nop();
 31785  0193E0  F000               	nop	
 31786                           
 31787                           ;dio.c: 74:  __nop();
 31788  0193E2  F000               	nop	
 31789                           
 31790                           ;dio.c: 75:  __nop();
 31791  0193E4  F000               	nop	
 31792                           
 31793                           ;dio.c: 76:  __nop();
 31794  0193E6  F000               	nop	
 31795                           
 31796                           ;dio.c: 77:  __nop();
 31797  0193E8  F000               	nop	
 31798                           
 31799                           ;dio.c: 78:  __nop();
 31800  0193EA  F000               	nop	
 31801  0193EC  D019               	goto	l10471
 31802  0193EE                     l10459:
 31803                           
 31804                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 31805  0193EE  A6CF               	btfss	207,3,c	;volatile
 31806  0193F0  D011               	goto	u968_20
 31807  0193F2  D00D               	goto	u968_21
 31808  0193F4                     u965_28:
 31809                           
 31810                           ;stkvar	_sw_value @ sp[(-2)+1]
 31811  0193F4  0EFF               	movlw	-1
 31812  0193F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 31813                           
 31814                           ;dio.c: 84:    break;
 31815  0193FC  D027               	goto	l10473
 31816  0193FE                     l10461:
 31817                           
 31818                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 31819  0193FE  A4CF               	btfss	207,2,c	;volatile
 31820  019400  D009               	goto	u968_20
 31821  019402  D005               	goto	u968_21
 31822  019404                     l10463:
 31823                           
 31824                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 31825  019404  A2CF               	btfss	207,1,c	;volatile
 31826  019406  D006               	goto	u968_20
 31827  019408  D002               	goto	u968_21
 31828  01940A                     l10465:
 31829                           
 31830                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 31831  01940A  A0CF               	btfss	207,0,c	;volatile
 31832  01940C  D003               	goto	u968_20
 31833  01940E                     u968_21:
 31834  01940E  6A0C               	clrf	(btemp+11)^0,c
 31835  019410  2A0C               	incf	(btemp+11)^0,f,c
 31836  019412  D7F0               	goto	u965_28
 31837  019414                     u968_20:
 31838  019414  6A0C               	clrf	(btemp+11)^0,c
 31839  019416  D7EE               	goto	u965_28
 31840  019418                     l10467:
 31841                           
 31842                           ;dio.c: 95:    sw_value = 1;
 31843                           ;stkvar	_sw_value @ sp[(-2)+1]
 31844  019418  0EFF               	movlw	-1
 31845  01941A  6AE3               	clrf	plusw1,c
 31846  01941C  2AE3               	incf	plusw1,f,c
 31847                           
 31848                           ;dio.c: 96:    break;
 31849  01941E  D016               	goto	l10473
 31850  019420                     l10471:
 31851                           
 31852                           ;stkvar	_i @ sp[(-2)+0]
 31853  019420  0EFE               	movlw	-2
 31854  019422  50E3               	movf	plusw1,w,c
 31855  019424  6E0B               	movwf	(btemp+10)^0,c
 31856  019426  6A0C               	clrf	(btemp+11)^0,c
 31857                           
 31858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31859                           ; Switch size 1, requested type "simple"
 31860                           ; Number of cases is 1, Range of values is 0 to 0
 31861                           ; switch strategies available:
 31862                           ; Name         Instructions Cycles
 31863                           ; simple_byte            4     3 (average)
 31864                           ;	Chosen strategy is simple_byte
 31865  019428  500C               	movf	(btemp+11)^0,w,c
 31866  01942A  0A00               	xorlw	0	; case 0
 31867  01942C  A4D8               	btfss	status,2,c
 31868  01942E  D7F4               	goto	l10467
 31869                           
 31870                           ; Switch size 1, requested type "simple"
 31871                           ; Number of cases is 4, Range of values is 0 to 3
 31872                           ; switch strategies available:
 31873                           ; Name         Instructions Cycles
 31874                           ; simple_byte           13     7 (average)
 31875                           ;	Chosen strategy is simple_byte
 31876  019430  500B               	movf	(btemp+10)^0,w,c
 31877  019432  0A00               	xorlw	0	; case 0
 31878  019434  B4D8               	btfsc	status,2,c
 31879  019436  D7E9               	goto	l10465
 31880  019438  0A01               	xorlw	1	; case 1
 31881  01943A  B4D8               	btfsc	status,2,c
 31882  01943C  D7E3               	goto	l10463
 31883  01943E  0A03               	xorlw	3	; case 2
 31884  019440  B4D8               	btfsc	status,2,c
 31885  019442  D7DD               	goto	l10461
 31886  019444  0A01               	xorlw	1	; case 3
 31887  019446  B4D8               	btfsc	status,2,c
 31888  019448  D7D2               	goto	l10459
 31889  01944A  D7E6               	goto	l10467
 31890  01944C                     l10473:
 31891                           
 31892                           ;dio.c: 100:   if (sw_value) {
 31893                           ;stkvar	_sw_value @ sp[(-2)+1]
 31894  01944C  0EFF               	movlw	-1
 31895  01944E  50E3               	movf	plusw1,w,c
 31896  019450  B4D8               	btfsc	status,2,c
 31897  019452  D018               	goto	l10479
 31898                           
 31899                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 31900                           ;stkvar	_i @ sp[(-2)+0]
 31901  019454  0EFE               	movlw	-2
 31902  019456  50E3               	movf	plusw1,w,c
 31903  019458  0D05               	mullw	5
 31904  01945A  0E54               	movlw	low _S
 31905  01945C  24F3               	addwf	243,w,c
 31906  01945E  6ED9               	movwf	fsr2l,c
 31907  019460  0E02               	movlw	high _S
 31908  019462  20F4               	addwfc	prodh,w,c
 31909  019464  6EDA               	movwf	fsr2h,c
 31910  019466  04DE               	decf	postinc2,w,c
 31911  019468  A4D8               	btfss	status,2,c
 31912  01946A  D049               	goto	l10487
 31913                           
 31914                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 31915                           ;stkvar	_i @ sp[(-2)+0]
 31916  01946C  0EFE               	movlw	-2
 31917  01946E  50E3               	movf	plusw1,w,c
 31918  019470  0D05               	mullw	5
 31919  019472  0E54               	movlw	low _S
 31920  019474  24F3               	addwf	243,w,c
 31921  019476  6ED9               	movwf	fsr2l,c
 31922  019478  0E02               	movlw	high _S
 31923  01947A  20F4               	addwfc	prodh,w,c
 31924  01947C  6EDA               	movwf	fsr2h,c
 31925  01947E  0E00               	movlw	0
 31926  019480  6EDF               	movwf	indf2,c
 31927  019482  D03D               	goto	l10487
 31928  019484                     l10479:
 31929                           
 31930                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 31931                           ;stkvar	_i @ sp[(-2)+0]
 31932  019484  0EFE               	movlw	-2
 31933  019486  50E3               	movf	plusw1,w,c
 31934  019488  0D05               	mullw	5
 31935  01948A  0E54               	movlw	low _S
 31936  01948C  24F3               	addwf	243,w,c
 31937  01948E  6ED9               	movwf	fsr2l,c
 31938  019490  0E02               	movlw	high _S
 31939  019492  20F4               	addwfc	prodh,w,c
 31940  019494  6EDA               	movwf	fsr2h,c
 31941  019496  50DF               	movf	indf2,w,c
 31942  019498  A4D8               	btfss	status,2,c
 31943  01949A  D031               	goto	l10487
 31944                           
 31945                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 31946                           ;stkvar	_i @ sp[(-2)+0]
 31947  01949C  0EFE               	movlw	-2
 31948  01949E  50E3               	movf	plusw1,w,c
 31949  0194A0  0D05               	mullw	5
 31950  0194A2  0E54               	movlw	low _S
 31951  0194A4  24F3               	addwf	243,w,c
 31952  0194A6  6ED9               	movwf	fsr2l,c
 31953  0194A8  0E02               	movlw	high _S
 31954  0194AA  20F4               	addwfc	prodh,w,c
 31955  0194AC  6EDA               	movwf	fsr2h,c
 31956  0194AE  0E01               	movlw	1
 31957  0194B0  6EDF               	movwf	indf2,c
 31958                           
 31959                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 31960  0194B2  EE20  F1EB         	lfsr	2,_V+187	;volatile
 31961                           
 31962                           ;stkvar	_i @ sp[(-2)+0]
 31963  0194B6  0EFE               	movlw	-2
 31964  0194B8  50E3               	movf	plusw1,w,c
 31965  0194BA  0D05               	mullw	5
 31966  0194BC  0E55               	movlw	low (_S+1)
 31967  0194BE  24F3               	addwf	243,w,c
 31968  0194C0  6EE9               	movwf	fsr0l,c
 31969  0194C2  0E02               	movlw	high (_S+1)
 31970  0194C4  20F4               	addwfc	prodh,w,c
 31971  0194C6  6EEA               	movwf	fsr0h,c
 31972  0194C8  006F FF7B FFEE     	movff	postinc2,postinc0
 31973  0194CE  006F FF7B FFEE     	movff	postinc2,postinc0
 31974  0194D4  006F FF7B FFEE     	movff	postinc2,postinc0
 31975  0194DA  006F FF7B FFEE     	movff	postinc2,postinc0
 31976                           
 31977                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 31978                           ;stkvar	_i @ sp[(-2)+0]
 31979  0194E0  0EFE               	movlw	-2
 31980  0194E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31981  0194E8  0E01               	movlw	1
 31982  0194EA  6E0B               	movwf	(btemp+10)^0,c
 31983  0194EC  2A0C               	incf	(btemp+11)^0,f,c
 31984  0194EE  D002               	goto	u972_24
 31985  0194F0                     u972_25:
 31986  0194F0  90D8               	bcf	status,0,c
 31987  0194F2  360B               	rlcf	(btemp+10)^0,f,c
 31988  0194F4                     u972_24:
 31989  0194F4  2E0C               	decfsz	(btemp+11)^0,f,c
 31990  0194F6  D7FC               	goto	u972_25
 31991  0194F8  500B               	movf	(btemp+10)^0,w,c
 31992  0194FA  0102               	movlb	2	; () banked
 31993  0194FC  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31994  0194FE                     l10487:
 31995                           
 31996                           ;dio.c: 111:  } while (++i < 4);
 31997                           ;stkvar	_i @ sp[(-2)+0]
 31998  0194FE  0EFE               	movlw	-2
 31999  019500  2AE3               	incf	plusw1,f,c
 32000  019502  0EFE               	movlw	-2
 32001  019504  006F FF8C  F001    	movff	plusw1,btemp
 32002  01950A  0E03               	movlw	3
 32003  01950C  6401               	cpfsgt	btemp^0,c
 32004  01950E  D788               	goto	l10471
 32005                           
 32006                           ;dio.c: 120:  do { LATDbits.LATD7 = 1; } while(0);
 32007  019510  8EBD               	bsf	189,7,c	;volatile
 32008                           
 32009                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 32010  019512  8ABF               	bsf	191,5,c	;volatile
 32011                           
 32012                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32013  019514  52E5               	movf	postdec1,f,c
 32014  019516  52E5               	movf	postdec1,f,c
 32015  019518  0012               	return		;funcret
 32016  01951A                     __end_of_switch_handler:
 32017                           	opt callstack 0
 32018                           
 32019 ;; *************** function _TMR5_ISR *****************
 32020 ;; Defined at:
 32021 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32022 ;; Parameters:    Size  Location     Type
 32023 ;;		None
 32024 ;; Auto vars:     Size  Location     Type
 32025 ;;		None
 32026 ;; Return value:  Size  Location     Type
 32027 ;;                  1    wreg      void 
 32028 ;; Registers used:
 32029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32030 ;; Tracked objects:
 32031 ;;		On entry : 0/0
 32032 ;;		On exit  : 3F/0
 32033 ;;		Unchanged: 0/0
 32034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32037 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32038 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;Total ram usage:       15 bytes
 32040 ;; Hardware stack levels used:    1
 32041 ;; Hardware stack levels required when called:    9
 32042 ;; This function calls:
 32043 ;;		_TMR5_CallBack
 32044 ;;		_TMR5_WriteTimer
 32045 ;; This function is called by:
 32046 ;;		Interrupt level 1
 32047 ;; This function uses a non-reentrant model
 32048 ;;
 32049                           
 32050                           	psect	text140
 32051  01A1D0                     __ptext140:
 32052                           	opt callstack 0
 32053  01A1D0                     _TMR5_ISR:
 32054                           	opt callstack 8
 32055                           
 32056                           ;incstack = 0
 32057  01A1D0  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32058  01A1D6  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32059  01A1DC  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32060  01A1E2  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32061  01A1E8  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32062  01A1EE  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32063  01A1F4  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32064  01A1FA  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32065  01A200  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32066  01A206  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32067  01A20C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32068  01A212  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32069  01A218  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32070  01A21E  EE16  F0AF         	lfsr	1,___intlo_sp
 32071                           
 32072                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32073  01A222  0139               	movlb	57	; () banked
 32074  01A224  9DA8               	bcf	168,6,b	;volatile
 32075                           
 32076                           ; BSR set to: 57
 32077                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32078  01A226  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32079  01A22C  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32080  01A232  EC3B  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32081                           
 32082                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32083  01A236  0101               	movlb	1	; () banked
 32084  01A238  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32085  01A23A  6E2B               	movwf	??_TMR5_ISR^0,c
 32086  01A23C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32087  01A23E  0E05               	movlw	5
 32088  01A240  262B               	addwf	??_TMR5_ISR^0,f,c
 32089  01A242  0E00               	movlw	0
 32090  01A244  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32091  01A246  0100               	movlb	0	; () banked
 32092  01A248  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32093  01A24A  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32094  01A24C  502B               	movf	??_TMR5_ISR^0,w,c
 32095  01A24E  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32096  01A250  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32097  01A252  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32098  01A254  A0D8               	btfss	status,0,c
 32099  01A256  D005               	goto	i1l1019
 32100                           
 32101                           ; BSR set to: 0
 32102                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32103  01A258  ECA2  F0DE         	call	_TMR5_CallBack	;wreg free
 32104                           
 32105                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32106  01A25C  0100               	movlb	0	; () banked
 32107  01A25E  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32108  01A260  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32109  01A262                     i1l1019:
 32110                           
 32111                           ; BSR set to: 0
 32112  01A262  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32113  01A268  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32114  01A26E  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32115  01A274  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32116  01A27A  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32117  01A280  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32118  01A286  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32119  01A28C  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32120  01A292  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32121  01A298  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32122  01A29E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32123  01A2A4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32124  01A2AA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32125  01A2B0  0011               	retfie		f
 32126  01A2B2                     __end_of_TMR5_ISR:
 32127                           	opt callstack 0
 32128                           
 32129 ;; *************** function _TMR5_WriteTimer *****************
 32130 ;; Defined at:
 32131 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32132 ;; Parameters:    Size  Location     Type
 32133 ;;  timerVal        2  [STACK] unsigned short 
 32134 ;; Auto vars:     Size  Location     Type
 32135 ;;		None
 32136 ;; Return value:  Size  Location     Type
 32137 ;;                  1  [STACK] void 
 32138 ;; Registers used:
 32139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32140 ;; Tracked objects:
 32141 ;;		On entry : 3F/39
 32142 ;;		On exit  : 0/0
 32143 ;;		Unchanged: 0/0
 32144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;Total ram usage:        0 bytes
 32150 ;; Hardware stack levels used:    1
 32151 ;; Hardware stack levels required when called:    3
 32152 ;; This function calls:
 32153 ;;		Nothing
 32154 ;; This function is called by:
 32155 ;;		_TMR5_ISR
 32156 ;; This function uses a reentrant model
 32157 ;;
 32158                           
 32159                           	psect	text141
 32160  01B676                     __ptext141:
 32161                           	opt callstack 0
 32162  01B676                     _TMR5_WriteTimer:
 32163                           	opt callstack 13
 32164                           
 32165                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32166                           
 32167                           ; BSR set to: 0
 32168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32169                           ;incstack = 0
 32170  01B676  A49A               	btfss	154,2,c	;volatile
 32171  01B678  D00F               	goto	l10689
 32172                           
 32173                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32174  01B67A  909A               	bcf	154,0,c	;volatile
 32175                           
 32176                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32177                           ;stkvar	_timerVal @ sp[(0)+-2]
 32178  01B67C  0EFF               	movlw	255
 32179  01B67E  24E1               	addwf	fsr1l,w,c
 32180  01B680  6ED9               	movwf	fsr2l,c
 32181  01B682  0EFF               	movlw	255
 32182  01B684  20E2               	addwfc	fsr1h,w,c
 32183  01B686  6EDA               	movwf	fsr2h,c
 32184  01B688  50DF               	movf	indf2,w,c
 32185  01B68A  6E99               	movwf	153,c	;volatile
 32186                           
 32187                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32188                           ;stkvar	_timerVal @ sp[(0)+-2]
 32189  01B68C  0EFE               	movlw	-2
 32190  01B68E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32191                           
 32192                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32193  01B694  809A               	bsf	154,0,c	;volatile
 32194                           
 32195                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32196  01B696  D00C               	goto	l1002
 32197  01B698                     l10689:
 32198                           
 32199                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32200                           ;stkvar	_timerVal @ sp[(0)+-2]
 32201  01B698  0EFF               	movlw	255
 32202  01B69A  24E1               	addwf	fsr1l,w,c
 32203  01B69C  6ED9               	movwf	fsr2l,c
 32204  01B69E  0EFF               	movlw	255
 32205  01B6A0  20E2               	addwfc	fsr1h,w,c
 32206  01B6A2  6EDA               	movwf	fsr2h,c
 32207  01B6A4  50DF               	movf	indf2,w,c
 32208  01B6A6  6E99               	movwf	153,c	;volatile
 32209                           
 32210                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32211                           ;stkvar	_timerVal @ sp[(0)+-2]
 32212  01B6A8  0EFE               	movlw	-2
 32213  01B6AA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32214  01B6B0                     l1002:
 32215                           
 32216                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32217  01B6B0  52E5               	movf	postdec1,f,c
 32218  01B6B2  52E5               	movf	postdec1,f,c
 32219  01B6B4  0012               	return		;funcret
 32220  01B6B6                     __end_of_TMR5_WriteTimer:
 32221                           	opt callstack 0
 32222                           
 32223 ;; *************** function _TMR5_CallBack *****************
 32224 ;; Defined at:
 32225 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32226 ;; Parameters:    Size  Location     Type
 32227 ;;		None
 32228 ;; Auto vars:     Size  Location     Type
 32229 ;;		None
 32230 ;; Return value:  Size  Location     Type
 32231 ;;                  1  [STACK] void 
 32232 ;; Registers used:
 32233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32234 ;; Tracked objects:
 32235 ;;		On entry : 3F/0
 32236 ;;		On exit  : 0/0
 32237 ;;		Unchanged: 0/0
 32238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32243 ;;Total ram usage:        0 bytes
 32244 ;; Hardware stack levels used:    1
 32245 ;; Hardware stack levels required when called:    8
 32246 ;; This function calls:
 32247 ;;		Absolute function
 32248 ;;		_TMR5_DefaultInterruptHandler
 32249 ;; This function is called by:
 32250 ;;		_TMR5_ISR
 32251 ;; This function uses a reentrant model
 32252 ;;
 32253                           
 32254                           	psect	text142
 32255  01BD44                     __ptext142:
 32256                           	opt callstack 0
 32257  01BD44                     _TMR5_CallBack:
 32258                           	opt callstack 8
 32259                           
 32260                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32261                           
 32262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32263                           ;incstack = 0
 32264  01BD44  0100               	movlb	0	; () banked
 32265  01BD46  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32266  01BD48  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32267  01BD4A  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32268  01BD4C  B4D8               	btfsc	status,2,c
 32269  01BD4E  0012               	return	
 32270                           
 32271                           ; BSR set to: 0
 32272                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32273  01BD50  D801               	call	u1008_28
 32274  01BD52  0012               	return	
 32275  01BD54                     u1008_28:
 32276  01BD54  0005               	push	
 32277  01BD56  6EFA               	movwf	pclath,c
 32278  01BD58  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32279  01BD5A  6EFD               	movwf	tosl,c
 32280  01BD5C  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32281  01BD5E  6EFE               	movwf	tosh,c
 32282  01BD60  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32283  01BD62  6EFF               	movwf	tosu,c
 32284  01BD64  50FA               	movf	pclath,w,c
 32285  01BD66  0012               	return		;indir
 32286  01BD68                     __end_of_TMR5_CallBack:
 32287                           	opt callstack 0
 32288                           
 32289 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32290 ;; Defined at:
 32291 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32292 ;; Parameters:    Size  Location     Type
 32293 ;;		None
 32294 ;; Auto vars:     Size  Location     Type
 32295 ;;		None
 32296 ;; Return value:  Size  Location     Type
 32297 ;;                  1  [STACK] void 
 32298 ;; Registers used:
 32299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32300 ;; Tracked objects:
 32301 ;;		On entry : 3F/0
 32302 ;;		On exit  : 0/0
 32303 ;;		Unchanged: 0/0
 32304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32309 ;;Total ram usage:        0 bytes
 32310 ;; Hardware stack levels used:    1
 32311 ;; Hardware stack levels required when called:    7
 32312 ;; This function calls:
 32313 ;;		_check_day_time
 32314 ;; This function is called by:
 32315 ;;		_TMR5_Initialize
 32316 ;;		_TMR5_CallBack
 32317 ;; This function uses a reentrant model
 32318 ;;
 32319                           
 32320                           	psect	text143
 32321  01B7A8                     __ptext143:
 32322                           	opt callstack 0
 32323  01B7A8                     _TMR5_DefaultInterruptHandler:
 32324                           	opt callstack 8
 32325                           
 32326                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32327                           
 32328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32329                           ;incstack = 0
 32330  01B7A8  A0BE               	btfss	190,0,c	;volatile
 32331  01B7AA  D002               	goto	u949_20
 32332  01B7AC  0E01               	movlw	1
 32333  01B7AE  D001               	goto	u949_26
 32334  01B7B0                     u949_20:
 32335  01B7B0  0E00               	movlw	0
 32336  01B7B2                     u949_26:
 32337  01B7B2  0AFF               	xorlw	255
 32338  01B7B4  6E0C               	movwf	(btemp+11)^0,c
 32339  01B7B6  50BE               	movf	190,w,c	;volatile
 32340  01B7B8  180C               	xorwf	(btemp+11)^0,w,c
 32341  01B7BA  0BFE               	andlw	-2
 32342  01B7BC  180C               	xorwf	(btemp+11)^0,w,c
 32343  01B7BE  6EBE               	movwf	190,c	;volatile
 32344                           
 32345                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32346  01B7C0  0E01               	movlw	1
 32347  01B7C2  0101               	movlb	1	; () banked
 32348  01B7C4  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32349  01B7C6  0E00               	movlw	0
 32350  01B7C8  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32351  01B7CA  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32352  01B7CC  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32353                           
 32354                           ; BSR set to: 1
 32355                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32356  01B7CE  0E01               	movlw	1
 32357  01B7D0  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32358  01B7D2  0E00               	movlw	0
 32359  01B7D4  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32360  01B7D6  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32361  01B7D8  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32362                           
 32363                           ; BSR set to: 1
 32364                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32365  01B7DA  EC09  F0C4         	call	_check_day_time	;wreg free
 32366                           
 32367                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32368  01B7DE  0012               	return		;funcret
 32369  01B7E0                     __end_of_TMR5_DefaultInterruptHandler:
 32370                           	opt callstack 0
 32371                           
 32372 ;; *************** function _check_day_time *****************
 32373 ;; Defined at:
 32374 ;;		line 165 in file "mbmc.c"
 32375 ;; Parameters:    Size  Location     Type
 32376 ;;		None
 32377 ;; Auto vars:     Size  Location     Type
 32378 ;;  light           4  [STACK] float 
 32379 ;; Return value:  Size  Location     Type
 32380 ;;                  1  [STACK] _Bool 
 32381 ;; Registers used:
 32382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32383 ;; Tracked objects:
 32384 ;;		On entry : 3F/1
 32385 ;;		On exit  : 0/0
 32386 ;;		Unchanged: 0/0
 32387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32392 ;;Total ram usage:        0 bytes
 32393 ;; Hardware stack levels used:    1
 32394 ;; Hardware stack levels required when called:    6
 32395 ;; This function calls:
 32396 ;;		___flge
 32397 ;;		_conv_raw_result
 32398 ;;		_get_ac_charger_relay
 32399 ;;		_set_ac_charger_relay
 32400 ;; This function is called by:
 32401 ;;		_TMR5_DefaultInterruptHandler
 32402 ;; This function uses a reentrant model
 32403 ;;
 32404                           
 32405                           	psect	text144
 32406  018812                     __ptext144:
 32407                           	opt callstack 0
 32408  018812                     _check_day_time:
 32409                           	opt callstack 0
 32410                           
 32411                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32412  018812  52E6               	movf	postinc1,f,c
 32413  018814  52E6               	movf	postinc1,f,c
 32414  018816  52E6               	movf	postinc1,f,c
 32415  018818  52E6               	movf	postinc1,f,c
 32416                           
 32417                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32418                           
 32419                           ;incstack = 0
 32420  01881A  0E00               	movlw	0
 32421  01881C  6EE6               	movwf	postinc1,c
 32422  01881E  0E0D               	movlw	13
 32423  018820  6EE6               	movwf	postinc1,c
 32424  018822  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 32425                           
 32426                           ;stkvar	_light @ sp[(-4)+0]
 32427  018826  0EFC               	movlw	-4
 32428  018828  0060  F007  FFE3   	movff	btemp,plusw1
 32429  01882E  0EFD               	movlw	-3
 32430  018830  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32431  018836  0EFE               	movlw	-2
 32432  018838  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32433  01883E  0EFF               	movlw	-1
 32434  018840  0060  F013  FFE3   	movff	btemp+3,plusw1
 32435                           
 32436                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32437  018846  2A42               	incf	check_day_time@day_delay^0,f,c
 32438  018848  0442               	decf	check_day_time@day_delay^0,w,c
 32439  01884A  A4D8               	btfss	status,2,c
 32440  01884C  D0A9               	goto	l1899
 32441  01884E  0101               	movlb	1	; () banked
 32442  018850  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32443  018852  B4D8               	btfsc	status,2,c
 32444  018854  D0A5               	goto	l1899
 32445                           
 32446                           ; BSR set to: 1
 32447                           ;mbmc.c: 173:   if (C.soc > 15) {
 32448  018856  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32449  01885A  0E01               	movlw	1
 32450  01885C  50DB               	movf	plusw2,w,c
 32451  01885E  E104               	bnz	u928_20
 32452  018860  0E10               	movlw	16
 32453  018862  5CDE               	subwf	postinc2,w,c
 32454  018864  A0D8               	btfss	status,0,c
 32455  018866  D073               	goto	l9803
 32456  018868                     u928_20:
 32457                           
 32458                           ; BSR set to: 1
 32459                           ;mbmc.c: 174:    if (!C.day) {
 32460  018868  EE22  F021         	lfsr	2,_C+290	;volatile
 32461  01886C  50DF               	movf	indf2,w,c
 32462  01886E  A4D8               	btfss	status,2,c
 32463  018870  D035               	goto	l9791
 32464                           
 32465                           ; BSR set to: 1
 32466                           ;mbmc.c: 175:     if (light > 22.0) {
 32467                           ;stkvar	_light @ sp[(-4)+0]
 32468  018872  0EFC               	movlw	-4
 32469  018874  006F FF8F FFE6     	movff	plusw1,postinc1
 32470  01887A  006F FF8F FFE6     	movff	plusw1,postinc1
 32471  018880  006F FF8F FFE6     	movff	plusw1,postinc1
 32472  018886  006F FF8F FFE6     	movff	plusw1,postinc1
 32473  01888C  0E00               	movlw	0
 32474  01888E  6EE6               	movwf	postinc1,c
 32475  018890  0E00               	movlw	0
 32476  018892  6EE6               	movwf	postinc1,c
 32477  018894  0EB0               	movlw	176
 32478  018896  6EE6               	movwf	postinc1,c
 32479  018898  0E41               	movlw	65
 32480  01889A  6EE6               	movwf	postinc1,c
 32481  01889C  ECE0  F0C7         	call	___flge	;wreg free
 32482  0188A0  B001               	btfsc	btemp& (0+255),0,c
 32483  0188A2  D07E               	goto	l1899
 32484                           
 32485                           ;mbmc.c: 176:      C.day = 1;
 32486  0188A4  0E01               	movlw	1
 32487  0188A6  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32488                           
 32489                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32490  0188AC  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32491  0188B0  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32492  0188B6  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32493  0188BC  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32494  0188C2  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32495                           
 32496                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32497  0188C8  EC12  F0E0         	call	_get_ac_charger_relay	;wreg free
 32498  0188CC  5001               	movf	btemp^0,w,c
 32499  0188CE  B4D8               	btfsc	status,2,c
 32500  0188D0  D06B               	goto	l1895
 32501                           
 32502                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32503  0188D2  0E00               	movlw	0
 32504  0188D4  6EE6               	movwf	postinc1,c
 32505  0188D6  ECF5  F0DF         	call	_set_ac_charger_relay	;wreg free
 32506  0188DA  D066               	goto	l1895
 32507  0188DC                     l9791:
 32508                           
 32509                           ; BSR set to: 1
 32510                           ;mbmc.c: 184:     if (light < 12.0) {
 32511  0188DC  0E00               	movlw	0
 32512  0188DE  6EE6               	movwf	postinc1,c
 32513  0188E0  0E00               	movlw	0
 32514  0188E2  6EE6               	movwf	postinc1,c
 32515  0188E4  0E40               	movlw	64
 32516  0188E6  6EE6               	movwf	postinc1,c
 32517  0188E8  0E41               	movlw	65
 32518  0188EA  6EE6               	movwf	postinc1,c
 32519                           
 32520                           ;stkvar	_light @ sp[(-8)+0]
 32521  0188EC  0EF8               	movlw	-8
 32522  0188EE  006F FF8F FFE6     	movff	plusw1,postinc1
 32523  0188F4  006F FF8F FFE6     	movff	plusw1,postinc1
 32524  0188FA  006F FF8F FFE6     	movff	plusw1,postinc1
 32525  018900  006F FF8F FFE6     	movff	plusw1,postinc1
 32526  018906  ECE0  F0C7         	call	___flge	;wreg free
 32527  01890A  B001               	btfsc	btemp& (0+255),0,c
 32528  01890C  D049               	goto	l1899
 32529                           
 32530                           ;mbmc.c: 185:      C.day = 0;
 32531  01890E  0E00               	movlw	0
 32532  018910  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32533                           
 32534                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32535  018916  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32536  01891A  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32537  018920  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32538  018926  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32539  01892C  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32540                           
 32541                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32542  018932  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32543  018936  0E01               	movlw	1
 32544  018938  50DB               	movf	plusw2,w,c
 32545  01893A  E136               	bnz	l1895
 32546  01893C  0E28               	movlw	40
 32547  01893E  5CDE               	subwf	postinc2,w,c
 32548  018940  B0D8               	btfsc	status,0,c
 32549  018942  D032               	goto	l1895
 32550                           
 32551                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32552  018944  0E01               	movlw	1
 32553  018946  6EE6               	movwf	postinc1,c
 32554  018948  ECF5  F0DF         	call	_set_ac_charger_relay	;wreg free
 32555  01894C  D02D               	goto	l1895
 32556  01894E                     l9803:
 32557                           
 32558                           ; BSR set to: 1
 32559                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32560  01894E  EE21  F377         	lfsr	2,_C+120	;volatile
 32561  018952  006F FF7B FFE6     	movff	postinc2,postinc1
 32562  018958  006F FF7B FFE6     	movff	postinc2,postinc1
 32563  01895E  006F FF7B FFE6     	movff	postinc2,postinc1
 32564  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 32565  01896A  EE21  F37B         	lfsr	2,_C+124	;volatile
 32566  01896E  006F FF7B FFE6     	movff	postinc2,postinc1
 32567  018974  006F FF7B FFE6     	movff	postinc2,postinc1
 32568  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
 32569  018980  006F FF7B FFE6     	movff	postinc2,postinc1
 32570  018986  ECE0  F0C7         	call	___flge	;wreg free
 32571  01898A  B001               	btfsc	btemp& (0+255),0,c
 32572  01898C  D009               	goto	l1899
 32573                           
 32574                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32575  01898E  EC12  F0E0         	call	_get_ac_charger_relay	;wreg free
 32576  018992  5001               	movf	btemp^0,w,c
 32577  018994  A4D8               	btfss	status,2,c
 32578  018996  D004               	goto	l1899
 32579                           
 32580                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32581  018998  0E01               	movlw	1
 32582  01899A  6EE6               	movwf	postinc1,c
 32583  01899C  ECF5  F0DF         	call	_set_ac_charger_relay	;wreg free
 32584  0189A0                     l1899:
 32585                           
 32586                           ;mbmc.c: 204:  if (day_delay >= 240)
 32587  0189A0  0EEF               	movlw	239
 32588  0189A2  6442               	cpfsgt	check_day_time@day_delay^0,c
 32589  0189A4  D001               	goto	l1895
 32590                           
 32591                           ;mbmc.c: 205:   day_delay = 0;
 32592  0189A6  6A42               	clrf	check_day_time@day_delay^0,c
 32593  0189A8                     l1895:
 32594                           
 32595                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32596  0189A8  52E5               	movf	postdec1,f,c
 32597  0189AA  52E5               	movf	postdec1,f,c
 32598  0189AC  52E5               	movf	postdec1,f,c
 32599  0189AE  52E5               	movf	postdec1,f,c
 32600  0189B0  0012               	return		;funcret
 32601  0189B2                     __end_of_check_day_time:
 32602                           	opt callstack 0
 32603                           
 32604 ;; *************** function _set_ac_charger_relay *****************
 32605 ;; Defined at:
 32606 ;;		line 135 in file "mbmc.c"
 32607 ;; Parameters:    Size  Location     Type
 32608 ;;  mode            1  [STACK] _Bool 
 32609 ;; Auto vars:     Size  Location     Type
 32610 ;;		None
 32611 ;; Return value:  Size  Location     Type
 32612 ;;                  1  [STACK] void 
 32613 ;; Registers used:
 32614 ;;		wreg, fsr1l, fsr1h
 32615 ;; Tracked objects:
 32616 ;;		On entry : 0/1
 32617 ;;		On exit  : 0/0
 32618 ;;		Unchanged: 0/0
 32619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32624 ;;Total ram usage:        0 bytes
 32625 ;; Hardware stack levels used:    1
 32626 ;; Hardware stack levels required when called:    3
 32627 ;; This function calls:
 32628 ;;		Nothing
 32629 ;; This function is called by:
 32630 ;;		_check_day_time
 32631 ;; This function uses a reentrant model
 32632 ;;
 32633                           
 32634                           	psect	text145
 32635  01BFEA                     __ptext145:
 32636                           	opt callstack 0
 32637  01BFEA                     _set_ac_charger_relay:
 32638                           	opt callstack 10
 32639                           
 32640                           ;mbmc.c: 135: void set_ac_charger_relay(_Bool mode);mbmc.c: 136: {;mbmc.c: 137:  LATDbit
      +                          s.LATD6 = mode;
 32641                           ;stkvar	_mode @ sp[(0)+-1]
 32642                           
 32643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32644                           ;incstack = 0
 32645  01BFEA  0EFF               	movlw	-1
 32646  01BFEC  B0E3               	btfsc	plusw1,0,c
 32647  01BFEE  D002               	bra	u923_25
 32648  01BFF0  9CBD               	bcf	189,6,c	;volatile
 32649  01BFF2  D001               	bra	u923_26
 32650  01BFF4                     u923_25:
 32651  01BFF4  8CBD               	bsf	189,6,c	;volatile
 32652  01BFF6                     u923_26:
 32653                           
 32654                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32655  01BFF6  52E5               	movf	postdec1,f,c
 32656  01BFF8  0012               	return		;funcret
 32657  01BFFA                     __end_of_set_ac_charger_relay:
 32658                           	opt callstack 0
 32659                           
 32660 ;; *************** function _get_ac_charger_relay *****************
 32661 ;; Defined at:
 32662 ;;		line 140 in file "mbmc.c"
 32663 ;; Parameters:    Size  Location     Type
 32664 ;;		None
 32665 ;; Auto vars:     Size  Location     Type
 32666 ;;		None
 32667 ;; Return value:  Size  Location     Type
 32668 ;;                  1  [STACK] _Bool 
 32669 ;; Registers used:
 32670 ;;		btemp
 32671 ;; Tracked objects:
 32672 ;;		On entry : 0/1
 32673 ;;		On exit  : 0/0
 32674 ;;		Unchanged: 0/0
 32675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;Total ram usage:        0 bytes
 32681 ;; Hardware stack levels used:    1
 32682 ;; Hardware stack levels required when called:    3
 32683 ;; This function calls:
 32684 ;;		Nothing
 32685 ;; This function is called by:
 32686 ;;		_check_day_time
 32687 ;;		_calc_bsoc
 32688 ;; This function uses a reentrant model
 32689 ;;
 32690                           
 32691                           	psect	text146
 32692  01C024                     __ptext146:
 32693                           	opt callstack 0
 32694  01C024                     _get_ac_charger_relay:
 32695                           	opt callstack 11
 32696                           
 32697                           ;mbmc.c: 142:  return LATDbits.LATD6;
 32698                           
 32699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32700                           ;incstack = 0
 32701  01C024  ACBD               	btfss	189,6,c	;volatile
 32702  01C026  D003               	goto	u942_20
 32703  01C028  6A01               	clrf	btemp^0,c
 32704  01C02A  2A01               	incf	btemp^0,f,c
 32705  01C02C  0012               	return	
 32706  01C02E                     u942_20:
 32707  01C02E  6A01               	clrf	btemp^0,c
 32708                           
 32709                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32710  01C030  0012               	return		;funcret
 32711  01C032                     __end_of_get_ac_charger_relay:
 32712                           	opt callstack 0
 32713                           
 32714 ;; *************** function _TMR3_ISR *****************
 32715 ;; Defined at:
 32716 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32717 ;; Parameters:    Size  Location     Type
 32718 ;;		None
 32719 ;; Auto vars:     Size  Location     Type
 32720 ;;		None
 32721 ;; Return value:  Size  Location     Type
 32722 ;;                  1    wreg      void 
 32723 ;; Registers used:
 32724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32725 ;; Tracked objects:
 32726 ;;		On entry : 0/0
 32727 ;;		On exit  : 3F/0
 32728 ;;		Unchanged: 0/0
 32729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32732 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32733 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32734 ;;Total ram usage:       25 bytes
 32735 ;; Hardware stack levels used:    1
 32736 ;; Hardware stack levels required when called:   14
 32737 ;; This function calls:
 32738 ;;		_TMR3_CallBack
 32739 ;;		_TMR3_WriteTimer
 32740 ;; This function is called by:
 32741 ;;		Interrupt level 1
 32742 ;; This function uses a non-reentrant model
 32743 ;;
 32744                           
 32745                           	psect	text147
 32746  019124                     __ptext147:
 32747                           	opt callstack 0
 32748  019124                     _TMR3_ISR:
 32749                           	opt callstack 3
 32750                           
 32751                           ;incstack = 0
 32752  019124  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 32753  01912A  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 32754  019130  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 32755  019136  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 32756  01913C  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 32757  019142  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 32758  019148  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 32759  01914E  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 32760  019154  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 32761  01915A  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 32762  019160  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 32763  019166  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 32764  01916C  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 32765  019172  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 32766  019178  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 32767  01917E  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 32768  019184  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 32769  01918A  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 32770  019190  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 32771  019196  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 32772  01919C  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 32773  0191A2  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 32774  0191A8  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 32775  0191AE  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 32776  0191B4  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 32777  0191BA  EE16  F0AF         	lfsr	1,___intlo_sp
 32778                           
 32779                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32780  0191BE  0139               	movlb	57	; () banked
 32781  0191C0  9DA6               	bcf	166,6,b	;volatile
 32782                           
 32783                           ; BSR set to: 57
 32784                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32785  0191C2  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 32786  0191C8  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32787  0191CE  EC5B  F0DB         	call	_TMR3_WriteTimer	;wreg free
 32788                           
 32789                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32790  0191D2  0100               	movlb	0	; () banked
 32791  0191D4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32792  0191D6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32793  0191D8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32794  0191DA  E104               	bnz	i1u1256_20
 32795  0191DC  0E28               	movlw	40
 32796  0191DE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32797  0191E0  A0D8               	btfss	status,0,c
 32798  0191E2  D005               	goto	i1l1207
 32799  0191E4                     i1u1256_20:
 32800                           
 32801                           ; BSR set to: 0
 32802                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32803  0191E4  ECB4  F0DE         	call	_TMR3_CallBack	;wreg free
 32804                           
 32805                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32806  0191E8  0100               	movlb	0	; () banked
 32807  0191EA  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32808  0191EC  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32809  0191EE                     i1l1207:
 32810                           
 32811                           ; BSR set to: 0
 32812  0191EE  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 32813  0191F4  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 32814  0191FA  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 32815  019200  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 32816  019206  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 32817  01920C  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 32818  019212  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 32819  019218  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 32820  01921E  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32821  019224  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32822  01922A  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32823  019230  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 32824  019236  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 32825  01923C  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 32826  019242  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 32827  019248  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 32828  01924E  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 32829  019254  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 32830  01925A  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 32831  019260  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 32832  019266  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32833  01926C  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32834  019272  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32835  019278  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32836  01927E  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 32837  019284  0011               	retfie		f
 32838  019286                     __end_of_TMR3_ISR:
 32839                           	opt callstack 0
 32840                           
 32841 ;; *************** function _TMR3_WriteTimer *****************
 32842 ;; Defined at:
 32843 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32844 ;; Parameters:    Size  Location     Type
 32845 ;;  timerVal        2  [STACK] unsigned short 
 32846 ;; Auto vars:     Size  Location     Type
 32847 ;;		None
 32848 ;; Return value:  Size  Location     Type
 32849 ;;                  1  [STACK] void 
 32850 ;; Registers used:
 32851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32852 ;; Tracked objects:
 32853 ;;		On entry : 3F/39
 32854 ;;		On exit  : 0/0
 32855 ;;		Unchanged: 0/0
 32856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32861 ;;Total ram usage:        0 bytes
 32862 ;; Hardware stack levels used:    1
 32863 ;; Hardware stack levels required when called:    3
 32864 ;; This function calls:
 32865 ;;		Nothing
 32866 ;; This function is called by:
 32867 ;;		_TMR3_ISR
 32868 ;; This function uses a reentrant model
 32869 ;;
 32870                           
 32871                           	psect	text148
 32872  01B6B6                     __ptext148:
 32873                           	opt callstack 0
 32874  01B6B6                     _TMR3_WriteTimer:
 32875                           	opt callstack 13
 32876                           
 32877                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32878                           
 32879                           ; BSR set to: 0
 32880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32881                           ;incstack = 0
 32882  01B6B6  A4A6               	btfss	166,2,c	;volatile
 32883  01B6B8  D00F               	goto	l10707
 32884                           
 32885                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32886  01B6BA  90A6               	bcf	166,0,c	;volatile
 32887                           
 32888                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32889                           ;stkvar	_timerVal @ sp[(0)+-2]
 32890  01B6BC  0EFF               	movlw	255
 32891  01B6BE  24E1               	addwf	fsr1l,w,c
 32892  01B6C0  6ED9               	movwf	fsr2l,c
 32893  01B6C2  0EFF               	movlw	255
 32894  01B6C4  20E2               	addwfc	fsr1h,w,c
 32895  01B6C6  6EDA               	movwf	fsr2h,c
 32896  01B6C8  50DF               	movf	indf2,w,c
 32897  01B6CA  6EA5               	movwf	165,c	;volatile
 32898                           
 32899                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32900                           ;stkvar	_timerVal @ sp[(0)+-2]
 32901  01B6CC  0EFE               	movlw	-2
 32902  01B6CE  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32903                           
 32904                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32905  01B6D4  80A6               	bsf	166,0,c	;volatile
 32906                           
 32907                           ;mcc_generated_files/tmr3.c: 141:     }
 32908  01B6D6  D00C               	goto	l1190
 32909  01B6D8                     l10707:
 32910                           
 32911                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32912                           ;stkvar	_timerVal @ sp[(0)+-2]
 32913  01B6D8  0EFF               	movlw	255
 32914  01B6DA  24E1               	addwf	fsr1l,w,c
 32915  01B6DC  6ED9               	movwf	fsr2l,c
 32916  01B6DE  0EFF               	movlw	255
 32917  01B6E0  20E2               	addwfc	fsr1h,w,c
 32918  01B6E2  6EDA               	movwf	fsr2h,c
 32919  01B6E4  50DF               	movf	indf2,w,c
 32920  01B6E6  6EA5               	movwf	165,c	;volatile
 32921                           
 32922                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32923                           ;stkvar	_timerVal @ sp[(0)+-2]
 32924  01B6E8  0EFE               	movlw	-2
 32925  01B6EA  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32926  01B6F0                     l1190:
 32927                           
 32928                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32929  01B6F0  52E5               	movf	postdec1,f,c
 32930  01B6F2  52E5               	movf	postdec1,f,c
 32931  01B6F4  0012               	return		;funcret
 32932  01B6F6                     __end_of_TMR3_WriteTimer:
 32933                           	opt callstack 0
 32934                           
 32935 ;; *************** function _TMR3_CallBack *****************
 32936 ;; Defined at:
 32937 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32938 ;; Parameters:    Size  Location     Type
 32939 ;;		None
 32940 ;; Auto vars:     Size  Location     Type
 32941 ;;		None
 32942 ;; Return value:  Size  Location     Type
 32943 ;;                  1  [STACK] void 
 32944 ;; Registers used:
 32945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32946 ;; Tracked objects:
 32947 ;;		On entry : 3F/0
 32948 ;;		On exit  : 0/0
 32949 ;;		Unchanged: 0/0
 32950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32955 ;;Total ram usage:        0 bytes
 32956 ;; Hardware stack levels used:    1
 32957 ;; Hardware stack levels required when called:   13
 32958 ;; This function calls:
 32959 ;;		Absolute function
 32960 ;;		_TMR3_DefaultInterruptHandler
 32961 ;;		_calc_bsoc
 32962 ;; This function is called by:
 32963 ;;		_TMR3_ISR
 32964 ;; This function uses a reentrant model
 32965 ;;
 32966                           
 32967                           	psect	text149
 32968  01BD68                     __ptext149:
 32969                           	opt callstack 0
 32970  01BD68                     _TMR3_CallBack:
 32971                           	opt callstack 3
 32972                           
 32973                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32974                           
 32975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32976                           ;incstack = 0
 32977  01BD68  0100               	movlb	0	; () banked
 32978  01BD6A  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32979  01BD6C  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32980  01BD6E  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32981  01BD70  B4D8               	btfsc	status,2,c
 32982  01BD72  0012               	return	
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32986  01BD74  D801               	call	u1247_28
 32987  01BD76  0012               	return	
 32988  01BD78                     u1247_28:
 32989  01BD78  0005               	push	
 32990  01BD7A  6EFA               	movwf	pclath,c
 32991  01BD7C  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32992  01BD7E  6EFD               	movwf	tosl,c
 32993  01BD80  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32994  01BD82  6EFE               	movwf	tosh,c
 32995  01BD84  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32996  01BD86  6EFF               	movwf	tosu,c
 32997  01BD88  50FA               	movf	pclath,w,c
 32998  01BD8A  0012               	return		;indir
 32999  01BD8C                     __end_of_TMR3_CallBack:
 33000                           	opt callstack 0
 33001                           
 33002 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33003 ;; Defined at:
 33004 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33005 ;; Parameters:    Size  Location     Type
 33006 ;;		None
 33007 ;; Auto vars:     Size  Location     Type
 33008 ;;		None
 33009 ;; Return value:  Size  Location     Type
 33010 ;;                  1  [STACK] void 
 33011 ;; Registers used:
 33012 ;;		None
 33013 ;; Tracked objects:
 33014 ;;		On entry : 3F/0
 33015 ;;		On exit  : 0/0
 33016 ;;		Unchanged: 0/0
 33017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33022 ;;Total ram usage:        0 bytes
 33023 ;; Hardware stack levels used:    1
 33024 ;; Hardware stack levels required when called:    3
 33025 ;; This function calls:
 33026 ;;		Nothing
 33027 ;; This function is called by:
 33028 ;;		_TMR3_Initialize
 33029 ;;		_TMR3_CallBack
 33030 ;; This function uses a reentrant model
 33031 ;;
 33032                           
 33033                           	psect	text150
 33034  01C0D4                     __ptext150:
 33035                           	opt callstack 0
 33036  01C0D4                     _TMR3_DefaultInterruptHandler:
 33037                           	opt callstack 12
 33038                           
 33039                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33040                           
 33041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33042                           ;incstack = 0
 33043  01C0D4  0012               	return		;funcret
 33044  01C0D6                     __end_of_TMR3_DefaultInterruptHandler:
 33045                           	opt callstack 0
 33046                           
 33047 ;; *************** function _calc_bsoc *****************
 33048 ;; Defined at:
 33049 ;;		line 39 in file "bsoc.c"
 33050 ;; Parameters:    Size  Location     Type
 33051 ;;		None
 33052 ;; Auto vars:     Size  Location     Type
 33053 ;;  adj             4  [STACK] float 
 33054 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33055 ;;		 -> port_data(512), 
 33056 ;; Return value:  Size  Location     Type
 33057 ;;                  1  [STACK] void 
 33058 ;; Registers used:
 33059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33060 ;; Tracked objects:
 33061 ;;		On entry : 3F/0
 33062 ;;		On exit  : 5/1
 33063 ;;		Unchanged: 0/0
 33064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33069 ;;Total ram usage:        0 bytes
 33070 ;; Hardware stack levels used:    1
 33071 ;; Hardware stack levels required when called:   12
 33072 ;; This function calls:
 33073 ;;		_StartTimer
 33074 ;;		___asfladd
 33075 ;;		___fldiv
 33076 ;;		___flge
 33077 ;;		___flmul
 33078 ;;		___flneg
 33079 ;;		___fltol
 33080 ;;		_fabsf
 33081 ;;		_get_ac_charger_relay
 33082 ;;		_port_data_dma_ptr
 33083 ;;		_send_port_data_dma
 33084 ;;		_sprintf
 33085 ;;		_strlen
 33086 ;; This function is called by:
 33087 ;;		_init_bsoc
 33088 ;;		_TMR3_CallBack
 33089 ;; This function uses a reentrant model
 33090 ;;
 33091                           
 33092                           	psect	text151
 33093  013340                     __ptext151:
 33094                           	opt callstack 0
 33095  013340                     _calc_bsoc:
 33096                           	opt callstack 0
 33097                           
 33098                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33099  013340  0E06               	movlw	6
 33100  013342  26E1               	addwf	fsr1l,f,c
 33101  013344  0E00               	movlw	0
 33102  013346  22E2               	addwfc	fsr1h,f,c
 33103                           
 33104                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33105                           
 33106                           ;incstack = 0
 33107  013348  0E00               	movlw	0
 33108  01334A  6E09               	movwf	(btemp+8)^0,c
 33109  01334C  0E00               	movlw	0
 33110  01334E  6E0A               	movwf	(btemp+9)^0,c
 33111  013350  0E80               	movlw	128
 33112  013352  6E0B               	movwf	(btemp+10)^0,c
 33113  013354  0E3F               	movlw	63
 33114  013356  6E0C               	movwf	(btemp+11)^0,c
 33115                           
 33116                           ;stkvar	_adj @ sp[(-6)+0]
 33117  013358  0EFA               	movlw	-6
 33118  01335A  0060  F027  FFE3   	movff	btemp+8,plusw1
 33119  013360  0EFB               	movlw	-5
 33120  013362  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33121  013368  0EFC               	movlw	-4
 33122  01336A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33123  013370  0EFD               	movlw	-3
 33124  013372  0060  F033  FFE3   	movff	btemp+11,plusw1
 33125  013378  82BE               	bsf	190,1,c	;volatile
 33126                           
 33127                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33128  01337A  0E00               	movlw	0
 33129  01337C  6EE6               	movwf	postinc1,c
 33130  01337E  0E00               	movlw	0
 33131  013380  6EE6               	movwf	postinc1,c
 33132  013382  0E61               	movlw	97
 33133  013384  6EE6               	movwf	postinc1,c
 33134  013386  0E45               	movlw	69
 33135  013388  6EE6               	movwf	postinc1,c
 33136  01338A  EE21  F343         	lfsr	2,_C+68	;volatile
 33137  01338E  006F FF7B FFE6     	movff	postinc2,postinc1
 33138  013394  006F FF7B FFE6     	movff	postinc2,postinc1
 33139  01339A  006F FF7B FFE6     	movff	postinc2,postinc1
 33140  0133A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33141  0133A6  ECA0  F0A6         	call	___fldiv	;wreg free
 33142  0133AA  0060  F007  FFE6   	movff	btemp,postinc1
 33143  0133B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33144  0133B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33145  0133BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33146  0133C2  0E8F               	movlw	low (_C+144)
 33147  0133C4  6EE6               	movwf	postinc1,c
 33148  0133C6  0E07               	movlw	high (_C+144)
 33149  0133C8  6EE6               	movwf	postinc1,c
 33150  0133CA  ECC1  F0D6         	call	___asfladd	;wreg free
 33151                           
 33152                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33153  0133CE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33154  0133D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33155  0133D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33156  0133DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33157  0133E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33158  0133EA  EE21  F38B         	lfsr	2,_C+140	;volatile
 33159  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33160  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33161  0133FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33162  013400  006F FF7B FFE6     	movff	postinc2,postinc1
 33163  013406  ECE0  F0C7         	call	___flge	;wreg free
 33164  01340A  B001               	btfsc	btemp& (0+255),0,c
 33165  01340C  D00E               	goto	l12673
 33166                           
 33167                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33168  01340E  EE21  F38B         	lfsr	2,_C+140	;volatile
 33169  013412  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33170  013418  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33171  01341E  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33172  013424  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33173  01342A                     l12673:
 33174                           
 33175                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33176  01342A  0ECD               	movlw	205
 33177  01342C  6EE6               	movwf	postinc1,c
 33178  01342E  0ECC               	movlw	204
 33179  013430  6EE6               	movwf	postinc1,c
 33180  013432  0ECC               	movlw	204
 33181  013434  6EE6               	movwf	postinc1,c
 33182  013436  0E3D               	movlw	61
 33183  013438  6EE6               	movwf	postinc1,c
 33184  01343A  EE21  F38F         	lfsr	2,_C+144	;volatile
 33185  01343E  006F FF7B FFE6     	movff	postinc2,postinc1
 33186  013444  006F FF7B FFE6     	movff	postinc2,postinc1
 33187  01344A  006F FF7B FFE6     	movff	postinc2,postinc1
 33188  013450  006F FF7B FFE6     	movff	postinc2,postinc1
 33189  013456  ECE0  F0C7         	call	___flge	;wreg free
 33190  01345A  B001               	btfsc	btemp& (0+255),0,c
 33191  01345C  D010               	goto	l12677
 33192                           
 33193                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33194  01345E  0ECD               	movlw	205
 33195  013460  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33196  013466  0ECC               	movlw	204
 33197  013468  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33198  01346E  0ECC               	movlw	204
 33199  013470  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33200  013476  0E3D               	movlw	61
 33201  013478  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33202  01347E                     l12677:
 33203                           
 33204                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33205  01347E  EE21  F343         	lfsr	2,_C+68	;volatile
 33206  013482  006F FF7B FFE6     	movff	postinc2,postinc1
 33207  013488  006F FF7B FFE6     	movff	postinc2,postinc1
 33208  01348E  006F FF7B FFE6     	movff	postinc2,postinc1
 33209  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 33210  01349A  0E0A               	movlw	10
 33211  01349C  6EE6               	movwf	postinc1,c
 33212  01349E  0ED7               	movlw	215
 33213  0134A0  6EE6               	movwf	postinc1,c
 33214  0134A2  0E23               	movlw	35
 33215  0134A4  6EE6               	movwf	postinc1,c
 33216  0134A6  0E3C               	movlw	60
 33217  0134A8  6EE6               	movwf	postinc1,c
 33218  0134AA  ECE0  F0C7         	call	___flge	;wreg free
 33219  0134AE  B001               	btfsc	btemp& (0+255),0,c
 33220  0134B0  D01C               	goto	l12681
 33221                           
 33222                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33223  0134B2  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33224  0134B8  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33225  0134BE  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33226  0134C4  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33227                           
 33228                           ;stkvar	_adj @ sp[(-6)+0]
 33229  0134CA  0EFA               	movlw	-6
 33230  0134CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 33231  0134D2  0EFB               	movlw	-5
 33232  0134D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33233  0134DA  0EFC               	movlw	-4
 33234  0134DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33235  0134E2  0EFD               	movlw	-3
 33236  0134E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 33237  0134EA                     l12681:
 33238                           
 33239                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33240  0134EA  0E0A               	movlw	10
 33241  0134EC  6EE6               	movwf	postinc1,c
 33242  0134EE  0ED7               	movlw	215
 33243  0134F0  6EE6               	movwf	postinc1,c
 33244  0134F2  0E23               	movlw	35
 33245  0134F4  6EE6               	movwf	postinc1,c
 33246  0134F6  0E3C               	movlw	60
 33247  0134F8  6EE6               	movwf	postinc1,c
 33248  0134FA  EE21  F343         	lfsr	2,_C+68	;volatile
 33249  0134FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33250  013504  006F FF7B FFE6     	movff	postinc2,postinc1
 33251  01350A  006F FF7B FFE6     	movff	postinc2,postinc1
 33252  013510  006F FF7B FFE6     	movff	postinc2,postinc1
 33253  013516  ECE0  F0C7         	call	___flge	;wreg free
 33254  01351A  B001               	btfsc	btemp& (0+255),0,c
 33255  01351C  D01C               	goto	l12685
 33256                           
 33257                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33258  01351E  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33259  013524  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33260  01352A  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33261  013530  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33262                           
 33263                           ;stkvar	_adj @ sp[(-6)+0]
 33264  013536  0EFA               	movlw	-6
 33265  013538  0060  F027  FFE3   	movff	btemp+8,plusw1
 33266  01353E  0EFB               	movlw	-5
 33267  013540  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33268  013546  0EFC               	movlw	-4
 33269  013548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33270  01354E  0EFD               	movlw	-3
 33271  013550  0060  F033  FFE3   	movff	btemp+11,plusw1
 33272  013556                     l12685:
 33273                           
 33274                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33275  013556  0E00               	movlw	0
 33276  013558  6EE6               	movwf	postinc1,c
 33277  01355A  0E00               	movlw	0
 33278  01355C  6EE6               	movwf	postinc1,c
 33279  01355E  0E61               	movlw	97
 33280  013560  6EE6               	movwf	postinc1,c
 33281  013562  0E45               	movlw	69
 33282  013564  6EE6               	movwf	postinc1,c
 33283                           
 33284                           ;stkvar	_adj @ sp[(-10)+0]
 33285  013566  0EF6               	movlw	-10
 33286  013568  006F FF8F FFE6     	movff	plusw1,postinc1
 33287  01356E  006F FF8F FFE6     	movff	plusw1,postinc1
 33288  013574  006F FF8F FFE6     	movff	plusw1,postinc1
 33289  01357A  006F FF8F FFE6     	movff	plusw1,postinc1
 33290  013580  EE21  F343         	lfsr	2,_C+68	;volatile
 33291  013584  006F FF7B FFE6     	movff	postinc2,postinc1
 33292  01358A  006F FF7B FFE6     	movff	postinc2,postinc1
 33293  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 33294  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 33295  01359C  ECAD  F09E         	call	___flmul	;wreg free
 33296  0135A0  0060  F007  FFE6   	movff	btemp,postinc1
 33297  0135A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33298  0135AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33299  0135B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33300  0135B8  ECA0  F0A6         	call	___fldiv	;wreg free
 33301  0135BC  0060  F007  FFE6   	movff	btemp,postinc1
 33302  0135C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33303  0135C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33304  0135CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33305  0135D4  0E8F               	movlw	low (_C+144)
 33306  0135D6  6EE6               	movwf	postinc1,c
 33307  0135D8  0E07               	movlw	high (_C+144)
 33308  0135DA  6EE6               	movwf	postinc1,c
 33309  0135DC  ECC1  F0D6         	call	___asfladd	;wreg free
 33310                           
 33311                           ;bsoc.c: 58:  if (C.dynamic_ah_adj > (C.bank_ah))
 33312  0135E0  EE21  F39B         	lfsr	2,_C+156	;volatile
 33313  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33314  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33315  0135F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33316  0135F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33317  0135FC  EE21  F38B         	lfsr	2,_C+140	;volatile
 33318  013600  006F FF7B FFE6     	movff	postinc2,postinc1
 33319  013606  006F FF7B FFE6     	movff	postinc2,postinc1
 33320  01360C  006F FF7B FFE6     	movff	postinc2,postinc1
 33321  013612  006F FF7B FFE6     	movff	postinc2,postinc1
 33322  013618  ECE0  F0C7         	call	___flge	;wreg free
 33323  01361C  B001               	btfsc	btemp& (0+255),0,c
 33324  01361E  D00E               	goto	l12691
 33325                           
 33326                           ;bsoc.c: 59:   C.dynamic_ah_adj = C.bank_ah;
 33327  013620  EE21  F38B         	lfsr	2,_C+140	;volatile
 33328  013624  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33329  01362A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33330  013630  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33331  013636  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33332  01363C                     l12691:
 33333                           
 33334                           ;bsoc.c: 60:  if (C.dynamic_ah_adj < 0.1)
 33335  01363C  0ECD               	movlw	205
 33336  01363E  6EE6               	movwf	postinc1,c
 33337  013640  0ECC               	movlw	204
 33338  013642  6EE6               	movwf	postinc1,c
 33339  013644  0ECC               	movlw	204
 33340  013646  6EE6               	movwf	postinc1,c
 33341  013648  0E3D               	movlw	61
 33342  01364A  6EE6               	movwf	postinc1,c
 33343  01364C  EE21  F39B         	lfsr	2,_C+156	;volatile
 33344  013650  006F FF7B FFE6     	movff	postinc2,postinc1
 33345  013656  006F FF7B FFE6     	movff	postinc2,postinc1
 33346  01365C  006F FF7B FFE6     	movff	postinc2,postinc1
 33347  013662  006F FF7B FFE6     	movff	postinc2,postinc1
 33348  013668  ECE0  F0C7         	call	___flge	;wreg free
 33349  01366C  B001               	btfsc	btemp& (0+255),0,c
 33350  01366E  D010               	goto	l12695
 33351                           
 33352                           ;bsoc.c: 61:   C.dynamic_ah_adj = 0.1;
 33353  013670  0ECD               	movlw	205
 33354  013672  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33355  013678  0ECC               	movlw	204
 33356  01367A  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33357  013680  0ECC               	movlw	204
 33358  013682  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33359  013688  0E3D               	movlw	61
 33360  01368A  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33361  013690                     l12695:
 33362                           
 33363                           ;bsoc.c: 64:  C.pv_ah += (C.c_pv / 3600.0);
 33364  013690  0E00               	movlw	0
 33365  013692  6EE6               	movwf	postinc1,c
 33366  013694  0E00               	movlw	0
 33367  013696  6EE6               	movwf	postinc1,c
 33368  013698  0E61               	movlw	97
 33369  01369A  6EE6               	movwf	postinc1,c
 33370  01369C  0E45               	movlw	69
 33371  01369E  6EE6               	movwf	postinc1,c
 33372  0136A0  EE21  F347         	lfsr	2,_C+72	;volatile
 33373  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33374  0136AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33375  0136B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33376  0136B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33377  0136BC  ECA0  F0A6         	call	___fldiv	;wreg free
 33378  0136C0  0060  F007  FFE6   	movff	btemp,postinc1
 33379  0136C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33380  0136CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33381  0136D2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33382  0136D8  0E93               	movlw	low (_C+148)
 33383  0136DA  6EE6               	movwf	postinc1,c
 33384  0136DC  0E07               	movlw	high (_C+148)
 33385  0136DE  6EE6               	movwf	postinc1,c
 33386  0136E0  ECC1  F0D6         	call	___asfladd	;wreg free
 33387                           
 33388                           ;bsoc.c: 65:  C.pvkw += (C.p_pv / 3600.0);
 33389  0136E4  0E00               	movlw	0
 33390  0136E6  6EE6               	movwf	postinc1,c
 33391  0136E8  0E00               	movlw	0
 33392  0136EA  6EE6               	movwf	postinc1,c
 33393  0136EC  0E61               	movlw	97
 33394  0136EE  6EE6               	movwf	postinc1,c
 33395  0136F0  0E45               	movlw	69
 33396  0136F2  6EE6               	movwf	postinc1,c
 33397  0136F4  EE21  F37B         	lfsr	2,_C+124	;volatile
 33398  0136F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33399  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33400  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 33401  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 33402  013710  ECA0  F0A6         	call	___fldiv	;wreg free
 33403  013714  0060  F007  FFE6   	movff	btemp,postinc1
 33404  01371A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33405  013720  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33406  013726  0060  F013  FFE6   	movff	btemp+3,postinc1
 33407  01372C  0EA7               	movlw	low (_C+168)
 33408  01372E  6EE6               	movwf	postinc1,c
 33409  013730  0E07               	movlw	high (_C+168)
 33410  013732  6EE6               	movwf	postinc1,c
 33411  013734  ECC1  F0D6         	call	___asfladd	;wreg free
 33412                           
 33413                           ;bsoc.c: 66:  C.invkw += (C.p_inverter / 3600.0);
 33414  013738  0E00               	movlw	0
 33415  01373A  6EE6               	movwf	postinc1,c
 33416  01373C  0E00               	movlw	0
 33417  01373E  6EE6               	movwf	postinc1,c
 33418  013740  0E61               	movlw	97
 33419  013742  6EE6               	movwf	postinc1,c
 33420  013744  0E45               	movlw	69
 33421  013746  6EE6               	movwf	postinc1,c
 33422  013748  EE21  F377         	lfsr	2,_C+120	;volatile
 33423  01374C  006F FF7B FFE6     	movff	postinc2,postinc1
 33424  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 33425  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 33426  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 33427  013764  ECA0  F0A6         	call	___fldiv	;wreg free
 33428  013768  0060  F007  FFE6   	movff	btemp,postinc1
 33429  01376E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33430  013774  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33431  01377A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33432  013780  0EAB               	movlw	low (_C+172)
 33433  013782  6EE6               	movwf	postinc1,c
 33434  013784  0E07               	movlw	high (_C+172)
 33435  013786  6EE6               	movwf	postinc1,c
 33436  013788  ECC1  F0D6         	call	___asfladd	;wreg free
 33437                           
 33438                           ;bsoc.c: 67:  C.loadkw += (C.p_load / 3600.0);
 33439  01378C  0E00               	movlw	0
 33440  01378E  6EE6               	movwf	postinc1,c
 33441  013790  0E00               	movlw	0
 33442  013792  6EE6               	movwf	postinc1,c
 33443  013794  0E61               	movlw	97
 33444  013796  6EE6               	movwf	postinc1,c
 33445  013798  0E45               	movlw	69
 33446  01379A  6EE6               	movwf	postinc1,c
 33447  01379C  EE21  F373         	lfsr	2,_C+116	;volatile
 33448  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33449  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33450  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33451  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33452  0137B8  ECA0  F0A6         	call	___fldiv	;wreg free
 33453  0137BC  0060  F007  FFE6   	movff	btemp,postinc1
 33454  0137C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33455  0137C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33456  0137CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33457  0137D4  0EAF               	movlw	low (_C+176)
 33458  0137D6  6EE6               	movwf	postinc1,c
 33459  0137D8  0E07               	movlw	high (_C+176)
 33460  0137DA  6EE6               	movwf	postinc1,c
 33461  0137DC  ECC1  F0D6         	call	___asfladd	;wreg free
 33462                           
 33463                           ;bsoc.c: 68:  if (C.p_bat > 0.0)
 33464  0137E0  EE21  F37F         	lfsr	2,_C+128	;volatile
 33465  0137E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33466  0137EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33467  0137F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33468  0137F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33469  0137FC  0E00               	movlw	0
 33470  0137FE  6EE6               	movwf	postinc1,c
 33471  013800  0E00               	movlw	0
 33472  013802  6EE6               	movwf	postinc1,c
 33473  013804  0E00               	movlw	0
 33474  013806  6EE6               	movwf	postinc1,c
 33475  013808  0E00               	movlw	0
 33476  01380A  6EE6               	movwf	postinc1,c
 33477  01380C  ECE0  F0C7         	call	___flge	;wreg free
 33478  013810  B001               	btfsc	btemp& (0+255),0,c
 33479  013812  D02A               	goto	l12701
 33480                           
 33481                           ;bsoc.c: 69:   C.bkwi += (C.p_bat / 3600.0);
 33482  013814  0E00               	movlw	0
 33483  013816  6EE6               	movwf	postinc1,c
 33484  013818  0E00               	movlw	0
 33485  01381A  6EE6               	movwf	postinc1,c
 33486  01381C  0E61               	movlw	97
 33487  01381E  6EE6               	movwf	postinc1,c
 33488  013820  0E45               	movlw	69
 33489  013822  6EE6               	movwf	postinc1,c
 33490  013824  EE21  F37F         	lfsr	2,_C+128	;volatile
 33491  013828  006F FF7B FFE6     	movff	postinc2,postinc1
 33492  01382E  006F FF7B FFE6     	movff	postinc2,postinc1
 33493  013834  006F FF7B FFE6     	movff	postinc2,postinc1
 33494  01383A  006F FF7B FFE6     	movff	postinc2,postinc1
 33495  013840  ECA0  F0A6         	call	___fldiv	;wreg free
 33496  013844  0060  F007  FFE6   	movff	btemp,postinc1
 33497  01384A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33498  013850  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33499  013856  0060  F013  FFE6   	movff	btemp+3,postinc1
 33500  01385C  0E9F               	movlw	low (_C+160)
 33501  01385E  6EE6               	movwf	postinc1,c
 33502  013860  0E07               	movlw	high (_C+160)
 33503  013862  6EE6               	movwf	postinc1,c
 33504  013864  ECC1  F0D6         	call	___asfladd	;wreg free
 33505  013868                     l12701:
 33506                           
 33507                           ;bsoc.c: 70:  if (C.p_bat < 0.0)
 33508  013868  EE21  F37F         	lfsr	2,_C+128	;volatile
 33509  01386C  0E03               	movlw	3
 33510  01386E  AEDB               	btfss	plusw2,7,c
 33511  013870  D038               	goto	l12705
 33512                           
 33513                           ;bsoc.c: 71:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33514  013872  0E00               	movlw	0
 33515  013874  6EE6               	movwf	postinc1,c
 33516  013876  0E00               	movlw	0
 33517  013878  6EE6               	movwf	postinc1,c
 33518  01387A  0E61               	movlw	97
 33519  01387C  6EE6               	movwf	postinc1,c
 33520  01387E  0E45               	movlw	69
 33521  013880  6EE6               	movwf	postinc1,c
 33522  013882  EE21  F37F         	lfsr	2,_C+128	;volatile
 33523  013886  006F FF7B FFE6     	movff	postinc2,postinc1
 33524  01388C  006F FF7B FFE6     	movff	postinc2,postinc1
 33525  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 33526  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 33527  01389E  ECA0  F0A6         	call	___fldiv	;wreg free
 33528  0138A2  0060  F007  FFE6   	movff	btemp,postinc1
 33529  0138A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33530  0138AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33531  0138B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33532  0138BA  ECEB  F0D2         	call	_fabsf	;wreg free
 33533  0138BE  0060  F007  FFE6   	movff	btemp,postinc1
 33534  0138C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33535  0138CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33536  0138D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33537  0138D6  0EA3               	movlw	low (_C+164)
 33538  0138D8  6EE6               	movwf	postinc1,c
 33539  0138DA  0E07               	movlw	high (_C+164)
 33540  0138DC  6EE6               	movwf	postinc1,c
 33541  0138DE  ECC1  F0D6         	call	___asfladd	;wreg free
 33542  0138E2                     l12705:
 33543                           
 33544                           ;bsoc.c: 73:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33545  0138E2  0E00               	movlw	0
 33546  0138E4  6EE6               	movwf	postinc1,c
 33547  0138E6  0E00               	movlw	0
 33548  0138E8  6EE6               	movwf	postinc1,c
 33549  0138EA  0EC8               	movlw	200
 33550  0138EC  6EE6               	movwf	postinc1,c
 33551  0138EE  0E42               	movlw	66
 33552  0138F0  6EE6               	movwf	postinc1,c
 33553  0138F2  EE21  F38B         	lfsr	2,_C+140	;volatile
 33554  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33556  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 33557  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 33558  01390E  EE21  F39B         	lfsr	2,_C+156	;volatile
 33559  013912  006F FF7B FFE6     	movff	postinc2,postinc1
 33560  013918  006F FF7B FFE6     	movff	postinc2,postinc1
 33561  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 33562  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 33563  01392A  ECA0  F0A6         	call	___fldiv	;wreg free
 33564  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 33565  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33566  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33567  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 33568  013946  ECAD  F09E         	call	___flmul	;wreg free
 33569  01394A  0060  F007  FFE6   	movff	btemp,postinc1
 33570  013950  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33571  013956  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33572  01395C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33573  013962  EC27  F0C7         	call	___fltol	;wreg free
 33574  013966  0060  F004  F00B   	movff	btemp,btemp+10
 33575  01396C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33576  013972  0E01               	movlw	1
 33577  013974  260B               	addwf	(btemp+10)^0,f,c
 33578  013976  0E00               	movlw	0
 33579  013978  220C               	addwfc	(btemp+11)^0,f,c
 33580  01397A  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33581  013980  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33582                           
 33583                           ;bsoc.c: 74:  if (C.soc > 100)
 33584  013986  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33585  01398A  0E01               	movlw	1
 33586  01398C  50DB               	movf	plusw2,w,c
 33587  01398E  E104               	bnz	u1240_20
 33588  013990  0E65               	movlw	101
 33589  013992  5CDE               	subwf	postinc2,w,c
 33590  013994  A0D8               	btfss	status,0,c
 33591  013996  D008               	goto	l12711
 33592  013998                     u1240_20:
 33593                           
 33594                           ;bsoc.c: 75:   C.soc = 100;
 33595  013998  0E64               	movlw	100
 33596  01399A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33597  0139A0  0E00               	movlw	0
 33598  0139A2  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33599  0139A8                     l12711:
 33600                           
 33601                           ;bsoc.c: 77:  if (C.c_bat < 0.0) {
 33602  0139A8  EE21  F343         	lfsr	2,_C+68	;volatile
 33603  0139AC  0E03               	movlw	3
 33604  0139AE  AEDB               	btfss	plusw2,7,c
 33605  0139B0  D047               	goto	l2042
 33606                           
 33607                           ;bsoc.c: 78:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33608  0139B2  EE21  F343         	lfsr	2,_C+68	;volatile
 33609  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33610  0139BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33611  0139C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33612  0139C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33613  0139CE  EE21  F39B         	lfsr	2,_C+156	;volatile
 33614  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33615  0139D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33616  0139DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33617  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33618  0139EA  ECA0  F0A6         	call	___fldiv	;wreg free
 33619  0139EE  0060  F007  FFE6   	movff	btemp,postinc1
 33620  0139F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33621  0139FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33622  013A00  0060  F013  FFE6   	movff	btemp+3,postinc1
 33623  013A06  ECE2  F0D9         	call	___flneg	;wreg free
 33624  013A0A  0060  F007  FFE6   	movff	btemp,postinc1
 33625  013A10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33626  013A16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33627  013A1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33628  013A22  EC27  F0C7         	call	___fltol	;wreg free
 33629  013A26  0060  F004  F00B   	movff	btemp,btemp+10
 33630  013A2C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33631  013A32  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 33632  013A38  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 33633                           
 33634                           ;bsoc.c: 79:  } else {
 33635  013A3E  D008               	goto	l12715
 33636  013A40                     l2042:
 33637                           
 33638                           ;bsoc.c: 80:   C.runtime = 120;
 33639  013A40  0E78               	movlw	120
 33640  013A42  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33641  013A48  0E00               	movlw	0
 33642  013A4A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 33643  013A50                     l12715:
 33644                           
 33645                           ;bsoc.c: 82:  if (C.runtime > 120)
 33646  013A50  EE21  F3B3         	lfsr	2,_C+180	;volatile
 33647  013A54  0E01               	movlw	1
 33648  013A56  50DB               	movf	plusw2,w,c
 33649  013A58  E104               	bnz	u1242_20
 33650  013A5A  0E79               	movlw	121
 33651  013A5C  5CDE               	subwf	postinc2,w,c
 33652  013A5E  A0D8               	btfss	status,0,c
 33653  013A60  D008               	goto	l12719
 33654  013A62                     u1242_20:
 33655                           
 33656                           ;bsoc.c: 83:   C.runtime = 120;
 33657  013A62  0E78               	movlw	120
 33658  013A64  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33659  013A6A  0E00               	movlw	0
 33660  013A6C  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 33661  013A72                     l12719:
 33662                           
 33663                           ;bsoc.c: 85:  V.lowint_count++;
 33664  013A72  0E01               	movlw	1
 33665  013A74  0101               	movlb	1	; () banked
 33666  013A76  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33667  013A78  0E00               	movlw	0
 33668  013A7A  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33669  013A7C  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33670  013A7E  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33671                           
 33672                           ;bsoc.c: 87:  if (!log_update_wait++ && V.system_stable) {
 33673  013A80  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33674  013A82  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33675  013A84  A4D8               	btfss	status,2,c
 33676  013A86  D15B               	goto	l12731
 33677                           
 33678                           ; BSR set to: 1
 33679  013A88  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 33680  013A8A  B4D8               	btfsc	status,2,c
 33681  013A8C  D158               	goto	l12731
 33682                           
 33683                           ; BSR set to: 1
 33684                           ;bsoc.c: 88:   log_ptr = port_data_dma_ptr();
 33685  013A8E  EC2E  F0E0         	call	_port_data_dma_ptr	;wreg free
 33686                           
 33687                           ;stkvar	_log_ptr @ sp[(-6)+4]
 33688  013A92  0EFF               	movlw	-1
 33689  013A94  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33690  013A9A  0EFE               	movlw	-2
 33691  013A9C  0060  F007  FFE3   	movff	btemp,plusw1
 33692                           
 33693                           ;bsoc.c: 89:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 33694  013AA2  EE21  F3B9         	lfsr	2,_C+186	;volatile
 33695  013AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33696  013AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33697  013AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33698  013AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33699  013ABE  EE21  F3BD         	lfsr	2,_C+190	;volatile
 33700  013AC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33701  013AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33702  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 33703  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 33704  013ADA  EE21  F39B         	lfsr	2,_C+156	;volatile
 33705  013ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 33706  013AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 33707  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 33708  013AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 33709  013AF6  EE22  F026         	lfsr	2,_C+295	;volatile
 33710  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 33711  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 33712  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 33713  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33714  013B12  EE22  F022         	lfsr	2,_C+291	;volatile
 33715  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 33716  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 33717  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 33718  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 33719  013B2E  EE22  F021         	lfsr	2,_C+290	;volatile
 33720  013B32  50DF               	movf	indf2,w,c
 33721  013B34  6EE6               	movwf	postinc1,c
 33722  013B36  0E00               	movlw	0
 33723  013B38  6EE6               	movwf	postinc1,c
 33724  013B3A  EC12  F0E0         	call	_get_ac_charger_relay	;wreg free
 33725  013B3E  5001               	movf	btemp^0,w,c
 33726  013B40  6EE6               	movwf	postinc1,c
 33727  013B42  0E00               	movlw	0
 33728  013B44  6EE6               	movwf	postinc1,c
 33729  013B46  EE21  F367         	lfsr	2,_C+104	;volatile
 33730  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 33731  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 33732  013B56  006F FF7B FFE6     	movff	postinc2,postinc1
 33733  013B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 33734  013B62  EE21  F387         	lfsr	2,_C+136	;volatile
 33735  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 33736  013B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 33737  013B72  006F FF7B FFE6     	movff	postinc2,postinc1
 33738  013B78  006F FF7B FFE6     	movff	postinc2,postinc1
 33739  013B7E  EE21  F3B3         	lfsr	2,_C+180	;volatile
 33740  013B82  006F FF78  F00B    	movff	postinc2,btemp+10
 33741  013B88  006F FF74  F00C    	movff	postdec2,btemp+11
 33742  013B8E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33743  013B94  0060  F033  FFE6   	movff	btemp+11,postinc1
 33744  013B9A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33745  013B9E  006F FF78  F00B    	movff	postinc2,btemp+10
 33746  013BA4  006F FF74  F00C    	movff	postdec2,btemp+11
 33747  013BAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33748  013BB0  0060  F033  FFE6   	movff	btemp+11,postinc1
 33749  013BB6  EE21  F393         	lfsr	2,_C+148	;volatile
 33750  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 33751  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 33752  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 33753  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 33754  013BD2  EE21  F38F         	lfsr	2,_C+144	;volatile
 33755  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 33756  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 33757  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 33758  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 33759  013BEE  EE21  F377         	lfsr	2,_C+120	;volatile
 33760  013BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 33761  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 33762  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 33763  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 33764  013C0A  EE21  F373         	lfsr	2,_C+116	;volatile
 33765  013C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 33766  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 33767  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 33768  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 33769  013C26  EE21  F37B         	lfsr	2,_C+124	;volatile
 33770  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 33771  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 33772  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 33773  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 33774  013C42  EE21  F37F         	lfsr	2,_C+128	;volatile
 33775  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 33776  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 33777  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 33778  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 33779  013C5E  EE21  F363         	lfsr	2,_C+100	;volatile
 33780  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 33781  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 33782  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 33783  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 33784  013C7A  EE21  F34B         	lfsr	2,_C+76	;volatile
 33785  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 33786  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 33787  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 33788  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 33789  013C96  EE21  F34F         	lfsr	2,_C+80	;volatile
 33790  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 33791  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 33792  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33793  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33794  013CB2  EE21  F353         	lfsr	2,_C+84	;volatile
 33795  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 33796  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 33797  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33798  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33799  013CCE  0060  F6C7  FFE6   	movff	_V+129,postinc1
 33800  013CD4  0060  F6CB  FFE6   	movff	_V+130,postinc1
 33801  013CDA  0060  F6CF  FFE6   	movff	_V+131,postinc1
 33802  013CE0  0060  F6D3  FFE6   	movff	_V+132,postinc1
 33803  013CE6  0E31               	movlw	49
 33804  013CE8  6EE6               	movwf	postinc1,c
 33805  013CEA  0E00               	movlw	0
 33806  013CEC  6EE6               	movwf	postinc1,c
 33807  013CEE  0E41               	movlw	low STR_65
 33808  013CF0  6EE6               	movwf	postinc1,c
 33809  013CF2  0EFC               	movlw	high STR_65
 33810  013CF4  6EE6               	movwf	postinc1,c
 33811                           
 33812                           ;stkvar	_log_ptr @ sp[(-90)+4]
 33813  013CF6  0EAA               	movlw	-86
 33814  013CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 33815  013CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 33816  013D04  0E56               	movlw	86
 33817  013D06  6EE6               	movwf	postinc1,c
 33818  013D08  EC81  F0CE         	call	_sprintf	;wreg free
 33819                           
 33820                           ; BSR set to: 0
 33821                           ;bsoc.c: 95:   StartTimer(TMR_DISPLAY, 125);
 33822  013D0C  0E7D               	movlw	125
 33823  013D0E  6EE6               	movwf	postinc1,c
 33824  013D10  0E00               	movlw	0
 33825  013D12  6EE6               	movwf	postinc1,c
 33826  013D14  0E0A               	movlw	10
 33827  013D16  6EE6               	movwf	postinc1,c
 33828  013D18  ECFB  F0DA         	call	_StartTimer	;wreg free
 33829                           
 33830                           ;bsoc.c: 96:   send_port_data_dma(strlen((char*) log_ptr));
 33831                           ;stkvar	_log_ptr @ sp[(-6)+4]
 33832  013D1C  0EFE               	movlw	-2
 33833  013D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 33834  013D24  006F FF8F FFE6     	movff	plusw1,postinc1
 33835  013D2A  EC40  F0D4         	call	_strlen	;wreg free
 33836  013D2E  0060  F007  FFE6   	movff	btemp,postinc1
 33837  013D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33838  013D3A  EC6D  F0D9         	call	_send_port_data_dma	;wreg free
 33839  013D3E                     l12731:
 33840                           
 33841                           ;bsoc.c: 98:  if (log_update_wait >= 10)
 33842  013D3E  0E09               	movlw	9
 33843  013D40  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33844  013D42  D001               	goto	l2046
 33845                           
 33846                           ;bsoc.c: 99:   log_update_wait = 0;
 33847  013D44  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 33848  013D46                     l2046:
 33849                           
 33850                           ;bsoc.c: 101:  C.update = 0;
 33851  013D46  0E00               	movlw	0
 33852  013D48  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 33853                           
 33854                           ;bsoc.c: 103:  do { LATEbits.LATE1 = 0; } while(0);
 33855  013D4E  92BE               	bcf	190,1,c	;volatile
 33856                           
 33857                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33858  013D50  0EFA               	movlw	250
 33859  013D52  26E1               	addwf	fsr1l,f,c
 33860  013D54  0EFF               	movlw	255
 33861  013D56  22E2               	addwfc	fsr1h,f,c
 33862  013D58  0012               	return		;funcret
 33863  013D5A                     __end_of_calc_bsoc:
 33864                           	opt callstack 0
 33865                           
 33866 ;; *************** function _send_port_data_dma *****************
 33867 ;; Defined at:
 33868 ;;		line 258 in file "eadog.c"
 33869 ;; Parameters:    Size  Location     Type
 33870 ;;  dsize           2  [STACK] unsigned short 
 33871 ;; Auto vars:     Size  Location     Type
 33872 ;;		None
 33873 ;; Return value:  Size  Location     Type
 33874 ;;                  1  [STACK] void 
 33875 ;; Registers used:
 33876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33877 ;; Tracked objects:
 33878 ;;		On entry : 0/0
 33879 ;;		On exit  : 3F/3B
 33880 ;;		Unchanged: 0/0
 33881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33886 ;;Total ram usage:        0 bytes
 33887 ;; Hardware stack levels used:    1
 33888 ;; Hardware stack levels required when called:    3
 33889 ;; This function calls:
 33890 ;;		Nothing
 33891 ;; This function is called by:
 33892 ;;		_calc_bsoc
 33893 ;; This function uses a reentrant model
 33894 ;;
 33895                           
 33896                           	psect	text152
 33897  01B2DA                     __ptext152:
 33898                           	opt callstack 0
 33899  01B2DA                     _send_port_data_dma:
 33900                           	opt callstack 11
 33901                           
 33902                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33903                           ;stkvar	_dsize @ sp[(0)+-2]
 33904                           
 33905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33906                           ;incstack = 0
 33907  01B2DA  0EFE               	movlw	-2
 33908  01B2DC  04E3               	decf	plusw1,w,c
 33909  01B2DE  0EFF               	movlw	-1
 33910  01B2E0  006F FF8C  F001    	movff	plusw1,btemp
 33911  01B2E6  0E02               	movlw	2
 33912  01B2E8  5A01               	subwfb	btemp^0,f,c
 33913  01B2EA  A0D8               	btfss	status,0,c
 33914  01B2EC  D00C               	goto	l9887
 33915                           
 33916                           ;eadog.c: 261:   dsize = 512;
 33917  01B2EE  0E00               	movlw	0
 33918  01B2F0  6E0B               	movwf	(btemp+10)^0,c
 33919  01B2F2  0E02               	movlw	2
 33920  01B2F4  6E0C               	movwf	(btemp+11)^0,c
 33921                           
 33922                           ;stkvar	_dsize @ sp[(0)+-2]
 33923  01B2F6  0EFE               	movlw	-2
 33924  01B2F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33925  01B2FE  0EFF               	movlw	-1
 33926  01B300  0060  F033  FFE3   	movff	btemp+11,plusw1
 33927  01B306                     l9887:
 33928                           
 33929                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33930  01B306  013B               	movlb	59	; () banked
 33931  01B308  9FDC               	bcf	220,7,b	;volatile
 33932                           
 33933                           ; BSR set to: 59
 33934                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33935                           ;stkvar	_dsize @ sp[(0)+-2]
 33936  01B30A  0EFE               	movlw	-2
 33937  01B30C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33938  01B312  0EFF               	movlw	-1
 33939  01B314  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33940                           
 33941                           ; BSR set to: 59
 33942                           ;eadog.c: 265:  DMA2DSZ = 1;
 33943  01B31A  0E00               	movlw	0
 33944  01B31C  6FCF               	movwf	207,b	;volatile
 33945  01B31E  0E01               	movlw	1
 33946  01B320  6FCE               	movwf	206,b	;volatile
 33947                           
 33948                           ; BSR set to: 59
 33949                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33950  01B322  8FDC               	bsf	220,7,b	;volatile
 33951                           
 33952                           ; BSR set to: 59
 33953                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33954  01B324  8DDC               	bsf	220,6,b	;volatile
 33955                           
 33956                           ; BSR set to: 59
 33957                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33958  01B326  52E5               	movf	postdec1,f,c
 33959  01B328  52E5               	movf	postdec1,f,c
 33960  01B32A  0012               	return		;funcret
 33961  01B32C                     __end_of_send_port_data_dma:
 33962                           	opt callstack 0
 33963                           
 33964 ;; *************** function _port_data_dma_ptr *****************
 33965 ;; Defined at:
 33966 ;;		line 273 in file "eadog.c"
 33967 ;; Parameters:    Size  Location     Type
 33968 ;;		None
 33969 ;; Auto vars:     Size  Location     Type
 33970 ;;		None
 33971 ;; Return value:  Size  Location     Type
 33972 ;;                  2  [STACK] PTR unsigned char 
 33973 ;; Registers used:
 33974 ;;		wreg, status,2, status,0, btemp, btemp+1
 33975 ;; Tracked objects:
 33976 ;;		On entry : 3F/1
 33977 ;;		On exit  : 0/0
 33978 ;;		Unchanged: 0/0
 33979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33984 ;;Total ram usage:        0 bytes
 33985 ;; Hardware stack levels used:    1
 33986 ;; Hardware stack levels required when called:    3
 33987 ;; This function calls:
 33988 ;;		Nothing
 33989 ;; This function is called by:
 33990 ;;		_calc_bsoc
 33991 ;; This function uses a reentrant model
 33992 ;;
 33993                           
 33994                           	psect	text153
 33995  01C05C                     __ptext153:
 33996                           	opt callstack 0
 33997  01C05C                     _port_data_dma_ptr:
 33998                           	opt callstack 11
 33999                           
 34000                           ;eadog.c: 275:  return port_data;
 34001                           
 34002                           ; BSR set to: 59
 34003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34004                           ;incstack = 0
 34005  01C05C  0EFF               	movlw	low _port_data
 34006  01C05E  6E01               	movwf	btemp^0,c
 34007  01C060  0E04               	movlw	high _port_data
 34008  01C062  6E02               	movwf	(btemp+1)^0,c
 34009                           
 34010                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34011  01C064  0012               	return		;funcret
 34012  01C066                     __end_of_port_data_dma_ptr:
 34013                           	opt callstack 0
 34014                           
 34015 ;; *************** function ___asfladd *****************
 34016 ;; Defined at:
 34017 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34018 ;; Parameters:    Size  Location     Type
 34019 ;;  f1p             2  [STACK] PTR 
 34020 ;;		 -> C(299), 
 34021 ;;  f2              4  [STACK] PTR 
 34022 ;; Auto vars:     Size  Location     Type
 34023 ;;		None
 34024 ;; Return value:  Size  Location     Type
 34025 ;;                  4  [STACK] PTR 
 34026 ;; Registers used:
 34027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34028 ;; Tracked objects:
 34029 ;;		On entry : 0/0
 34030 ;;		On exit  : 0/0
 34031 ;;		Unchanged: 0/0
 34032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34037 ;;Total ram usage:        0 bytes
 34038 ;; Hardware stack levels used:    1
 34039 ;; Hardware stack levels required when called:    4
 34040 ;; This function calls:
 34041 ;;		___fladd
 34042 ;; This function is called by:
 34043 ;;		_calc_bsoc
 34044 ;; This function uses a reentrant model
 34045 ;;
 34046                           
 34047                           	psect	text154
 34048  01AD82                     __ptext154:
 34049                           	opt callstack 0
 34050  01AD82                     ___asfladd:
 34051                           	opt callstack 10
 34052                           
 34053                           ;	Return value of ___asfladd is never used
 34054                           ;stkvar	_f2 @ sp[(0)+-6]
 34055                           
 34056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34057                           ;incstack = 0
 34058  01AD82  0EFA               	movlw	-6
 34059  01AD84  006F FF8F FFE6     	movff	plusw1,postinc1
 34060  01AD8A  006F FF8F FFE6     	movff	plusw1,postinc1
 34061  01AD90  006F FF8F FFE6     	movff	plusw1,postinc1
 34062  01AD96  006F FF8F FFE6     	movff	plusw1,postinc1
 34063                           
 34064                           ;stkvar	_f1p @ sp[(-4)+-2]
 34065  01AD9C  0EFA               	movlw	-6
 34066  01AD9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 34067  01ADA4  0EFB               	movlw	-5
 34068  01ADA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 34069  01ADAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34070  01ADB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34071  01ADB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34072  01ADBE  006F FF7B FFE6     	movff	postinc2,postinc1
 34073  01ADC4  ECC2  F0A2         	call	___fladd	;wreg free
 34074                           
 34075                           ;stkvar	_f1p @ sp[(0)+-2]
 34076  01ADC8  0EFE               	movlw	-2
 34077  01ADCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 34078  01ADD0  0EFF               	movlw	-1
 34079  01ADD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 34080  01ADD8  0060  F007  FFDE   	movff	btemp,postinc2
 34081  01ADDE  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34082  01ADE4  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34083  01ADEA  0060  F013  FFDE   	movff	btemp+3,postinc2
 34084                           
 34085                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34086  01ADF0  0EFA               	movlw	250
 34087  01ADF2  26E1               	addwf	fsr1l,f,c
 34088  01ADF4  0EFF               	movlw	255
 34089  01ADF6  22E2               	addwfc	fsr1h,f,c
 34090  01ADF8  0012               	return		;funcret
 34091  01ADFA                     __end_of___asfladd:
 34092                           	opt callstack 0
 34093                           
 34094 ;; *************** function _INT0_ISR *****************
 34095 ;; Defined at:
 34096 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34097 ;; Parameters:    Size  Location     Type
 34098 ;;		None
 34099 ;; Auto vars:     Size  Location     Type
 34100 ;;		None
 34101 ;; Return value:  Size  Location     Type
 34102 ;;                  1    wreg      void 
 34103 ;; Registers used:
 34104 ;;		wreg, status,2, status,0, pclath, tosl
 34105 ;; Tracked objects:
 34106 ;;		On entry : 0/0
 34107 ;;		On exit  : 0/0
 34108 ;;		Unchanged: 0/0
 34109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34114 ;;Total ram usage:        0 bytes
 34115 ;; Hardware stack levels used:    1
 34116 ;; Hardware stack levels required when called:    2
 34117 ;; This function calls:
 34118 ;;		_INT0_CallBack
 34119 ;; This function is called by:
 34120 ;;		Interrupt level 2
 34121 ;; This function uses a non-reentrant model
 34122 ;;
 34123                           
 34124                           	psect	text155
 34125  01C034                     __ptext155:
 34126                           	opt callstack 0
 34127  01C034                     _INT0_ISR:
 34128                           	opt callstack 3
 34129                           
 34130                           ;incstack = 0
 34131  01C034  EE14  F15E         	lfsr	1,___inthi_sp
 34132                           
 34133                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34134  01C038  0139               	movlb	57	; () banked
 34135  01C03A  91A1               	bcf	161,0,b	;volatile
 34136                           
 34137                           ; BSR set to: 57
 34138                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34139  01C03C  ECC6  F0DE         	call	_INT0_CallBack	;wreg free
 34140  01C040  0011               	retfie		f
 34141  01C042                     __end_of_INT0_ISR:
 34142                           	opt callstack 0
 34143                           
 34144 ;; *************** function _INT0_CallBack *****************
 34145 ;; Defined at:
 34146 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34147 ;; Parameters:    Size  Location     Type
 34148 ;;		None
 34149 ;; Auto vars:     Size  Location     Type
 34150 ;;		None
 34151 ;; Return value:  Size  Location     Type
 34152 ;;                  1  [STACK] void 
 34153 ;; Registers used:
 34154 ;;		wreg, status,2, status,0, pclath, tosl
 34155 ;; Tracked objects:
 34156 ;;		On entry : 3F/39
 34157 ;;		On exit  : 0/0
 34158 ;;		Unchanged: 0/0
 34159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34164 ;;Total ram usage:        0 bytes
 34165 ;; Hardware stack levels used:    1
 34166 ;; Hardware stack levels required when called:    1
 34167 ;; This function calls:
 34168 ;;		Absolute function
 34169 ;;		_INT0_DefaultInterruptHandler
 34170 ;; This function is called by:
 34171 ;;		_INT0_ISR
 34172 ;; This function uses a reentrant model
 34173 ;;
 34174                           
 34175                           	psect	text156
 34176  01BD8C                     __ptext156:
 34177                           	opt callstack 0
 34178  01BD8C                     _INT0_CallBack:
 34179                           	opt callstack 3
 34180                           
 34181                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34182                           
 34183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34184                           ;incstack = 0
 34185  01BD8C  0100               	movlb	0	; () banked
 34186  01BD8E  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34187  01BD90  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34188  01BD92  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34189  01BD94  B4D8               	btfsc	status,2,c
 34190  01BD96  0012               	return	
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34194  01BD98  D801               	call	u997_48
 34195  01BD9A  0012               	return	
 34196  01BD9C                     u997_48:
 34197  01BD9C  0005               	push	
 34198  01BD9E  6EFA               	movwf	pclath,c
 34199  01BDA0  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34200  01BDA2  6EFD               	movwf	tosl,c
 34201  01BDA4  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34202  01BDA6  6EFE               	movwf	tosh,c
 34203  01BDA8  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34204  01BDAA  6EFF               	movwf	tosu,c
 34205  01BDAC  50FA               	movf	pclath,w,c
 34206  01BDAE  0012               	return		;indir
 34207  01BDB0                     __end_of_INT0_CallBack:
 34208                           	opt callstack 0
 34209                           
 34210 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34211 ;; Defined at:
 34212 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34213 ;; Parameters:    Size  Location     Type
 34214 ;;		None
 34215 ;; Auto vars:     Size  Location     Type
 34216 ;;		None
 34217 ;; Return value:  Size  Location     Type
 34218 ;;                  1  [STACK] void 
 34219 ;; Registers used:
 34220 ;;		None
 34221 ;; Tracked objects:
 34222 ;;		On entry : 3F/0
 34223 ;;		On exit  : 0/0
 34224 ;;		Unchanged: 0/0
 34225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34230 ;;Total ram usage:        0 bytes
 34231 ;; Hardware stack levels used:    1
 34232 ;; This function calls:
 34233 ;;		Nothing
 34234 ;; This function is called by:
 34235 ;;		_EXT_INT_Initialize
 34236 ;;		_INT0_CallBack
 34237 ;; This function uses a reentrant model
 34238 ;;
 34239                           
 34240                           	psect	text157
 34241  01C0D6                     __ptext157:
 34242                           	opt callstack 0
 34243  01C0D6                     _INT0_DefaultInterruptHandler:
 34244                           	opt callstack 3
 34245                           
 34246                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34247                           
 34248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34249                           ;incstack = 0
 34250  01C0D6  0012               	return		;funcret
 34251  01C0D8                     __end_of_INT0_DefaultInterruptHandler:
 34252                           	opt callstack 0
 34253                           
 34254 ;; *************** function _Default_ISR *****************
 34255 ;; Defined at:
 34256 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34257 ;; Parameters:    Size  Location     Type
 34258 ;;		None
 34259 ;; Auto vars:     Size  Location     Type
 34260 ;;		None
 34261 ;; Return value:  Size  Location     Type
 34262 ;;                  1    wreg      void 
 34263 ;; Registers used:
 34264 ;;		None
 34265 ;; Tracked objects:
 34266 ;;		On entry : 0/0
 34267 ;;		On exit  : 0/0
 34268 ;;		Unchanged: 0/0
 34269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34274 ;;Total ram usage:        0 bytes
 34275 ;; Hardware stack levels used:    1
 34276 ;; This function calls:
 34277 ;;		Nothing
 34278 ;; This function is called by:
 34279 ;;		Interrupt level 2
 34280 ;; This function uses a non-reentrant model
 34281 ;;
 34282                           
 34283                           	psect	text158
 34284  01C0CC                     __ptext158:
 34285                           	opt callstack 0
 34286  01C0CC                     _Default_ISR:
 34287                           	opt callstack 5
 34288                           
 34289                           ;incstack = 0
 34290  01C0CC  EE14  F15E         	lfsr	1,___inthi_sp
 34291  01C0D0  0011               	retfie		f
 34292  01C0D2                     __end_of_Default_ISR:
 34293                           	opt callstack 0
 34294                           
 34295 ;; *************** function _ADCC_ISR *****************
 34296 ;; Defined at:
 34297 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34298 ;; Parameters:    Size  Location     Type
 34299 ;;		None
 34300 ;; Auto vars:     Size  Location     Type
 34301 ;;		None
 34302 ;; Return value:  Size  Location     Type
 34303 ;;                  1    wreg      void 
 34304 ;; Registers used:
 34305 ;;		wreg, status,2, status,0, pclath, tosl
 34306 ;; Tracked objects:
 34307 ;;		On entry : 0/0
 34308 ;;		On exit  : 0/0
 34309 ;;		Unchanged: 0/0
 34310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34315 ;;Total ram usage:        0 bytes
 34316 ;; Hardware stack levels used:    1
 34317 ;; Hardware stack levels required when called:    1
 34318 ;; This function calls:
 34319 ;;		Absolute function
 34320 ;;		_ADCC_DefaultInterruptHandler
 34321 ;;		_adc_int_handler
 34322 ;; This function is called by:
 34323 ;;		Interrupt level 2
 34324 ;; This function uses a non-reentrant model
 34325 ;;
 34326                           
 34327                           	psect	text159
 34328  01B9D0                     __ptext159:
 34329                           	opt callstack 0
 34330  01B9D0                     _ADCC_ISR:
 34331                           	opt callstack 4
 34332                           
 34333                           ;incstack = 0
 34334  01B9D0  EE14  F15E         	lfsr	1,___inthi_sp
 34335                           
 34336                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34337  01B9D4  0139               	movlb	57	; () banked
 34338  01B9D6  95A1               	bcf	161,2,b	;volatile
 34339                           
 34340                           ; BSR set to: 57
 34341                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34342  01B9D8  0100               	movlb	0	; () banked
 34343  01B9DA  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34344  01B9DC  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34345  01B9DE  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34346  01B9E0  B4D8               	btfsc	status,2,c
 34347  01B9E2  0011               	retfie		f
 34348                           
 34349                           ; BSR set to: 0
 34350                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34351  01B9E4  D801               	call	i2u1040_48
 34352  01B9E6  0011               	retfie		f
 34353  01B9E8                     i2u1040_48:
 34354  01B9E8  0005               	push	
 34355  01B9EA  6EFA               	movwf	pclath,c
 34356  01B9EC  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34357  01B9EE  6EFD               	movwf	tosl,c
 34358  01B9F0  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34359  01B9F2  6EFE               	movwf	tosh,c
 34360  01B9F4  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34361  01B9F6  6EFF               	movwf	tosu,c
 34362  01B9F8  50FA               	movf	pclath,w,c
 34363  01B9FA  0012               	return		;indir
 34364  01B9FC                     __end_of_ADCC_ISR:
 34365                           	opt callstack 0
 34366                           
 34367 ;; *************** function _adc_int_t_handler *****************
 34368 ;; Defined at:
 34369 ;;		line 146 in file "daq.c"
 34370 ;; Parameters:    Size  Location     Type
 34371 ;;		None
 34372 ;; Auto vars:     Size  Location     Type
 34373 ;;		None
 34374 ;; Return value:  Size  Location     Type
 34375 ;;                  1  [STACK] void 
 34376 ;; Registers used:
 34377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34378 ;; Tracked objects:
 34379 ;;		On entry : 3F/0
 34380 ;;		On exit  : 0/0
 34381 ;;		Unchanged: 0/0
 34382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34387 ;;Total ram usage:        0 bytes
 34388 ;; Hardware stack levels used:    1
 34389 ;; Hardware stack levels required when called:    1
 34390 ;; This function calls:
 34391 ;;		_ADCC_DischargeSampleCapacitor
 34392 ;;		_ADCC_StartConversion
 34393 ;; This function is called by:
 34394 ;;		_start_adc_scan
 34395 ;;		_ADCC_ThresholdISR
 34396 ;; This function uses a reentrant model
 34397 ;;
 34398                           
 34399                           	psect	text160
 34400  01AD00                     __ptext160:
 34401                           	opt callstack 0
 34402  01AD00                     _adc_int_t_handler:
 34403                           	opt callstack 3
 34404                           
 34405                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34406                           
 34407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34408                           ;incstack = 0
 34409  01AD00  013E               	movlb	62	; () banked
 34410  01AD02  51E6               	movf	230,w,b	;volatile
 34411  01AD04  006F FB9C  F001    	movff	16103,btemp	;volatile
 34412  01AD0A  6A02               	clrf	(btemp+1)^0,c
 34413  01AD0C  0060  F004  F002   	movff	btemp,btemp+1
 34414  01AD12  6A01               	clrf	btemp^0,c
 34415  01AD14  2601               	addwf	btemp^0,f,c
 34416  01AD16  0E00               	movlw	0
 34417  01AD18  2202               	addwfc	(btemp+1)^0,f,c
 34418  01AD1A  0101               	movlb	1	; () banked
 34419  01AD1C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34420  01AD1E  0D02               	mullw	2
 34421  01AD20  0E00               	movlw	low _R
 34422  01AD22  24F3               	addwf	243,w,c
 34423  01AD24  6ED9               	movwf	fsr2l,c
 34424  01AD26  0E01               	movlw	high _R
 34425  01AD28  20F4               	addwfc	prodh,w,c
 34426  01AD2A  6EDA               	movwf	fsr2h,c
 34427  01AD2C  0060  F007  FFDE   	movff	btemp,postinc2
 34428  01AD32  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34429  01AD38                     l11073:
 34430                           
 34431                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34432  01AD38  0101               	movlb	1	; () banked
 34433  01AD3A  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34434  01AD3C  0E0D               	movlw	13
 34435  01AD3E  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34436  01AD40  D003               	goto	l11079
 34437                           
 34438                           ; BSR set to: 1
 34439                           ;daq.c: 154:    R.done = 1;
 34440  01AD42  0E01               	movlw	1
 34441  01AD44  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34442  01AD46  0012               	return	
 34443  01AD48                     l11079:
 34444                           
 34445                           ; BSR set to: 1
 34446                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34447  01AD48  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34448  01AD4E  EE20  F12D         	lfsr	2,_R+45	;volatile
 34449  01AD52  006F FF78  F009    	movff	postinc2,btemp+8
 34450  01AD58  006F FF74  F00A    	movff	postdec2,btemp+9
 34451  01AD5E  2A0C               	incf	(btemp+11)^0,f,c
 34452  01AD60  D003               	goto	u1037_44
 34453  01AD62                     u1037_45:
 34454  01AD62  90D8               	bcf	status,0,c
 34455  01AD64  320A               	rrcf	(btemp+9)^0,f,c
 34456  01AD66  3209               	rrcf	(btemp+8)^0,f,c
 34457  01AD68                     u1037_44:
 34458  01AD68  2E0C               	decfsz	(btemp+11)^0,f,c
 34459  01AD6A  D7FB               	goto	u1037_45
 34460  01AD6C  A009               	btfss	(btemp+8)^0,0,c
 34461  01AD6E  D7E4               	goto	l11073
 34462                           
 34463                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34464  01AD70  EC45  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34465                           
 34466                           ; BSR set to: 62
 34467                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34468  01AD74  0101               	movlb	1	; () banked
 34469  01AD76  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34470  01AD78  0B0F               	andlw	15
 34471  01AD7A  6EE6               	movwf	postinc1,c
 34472  01AD7C  ECD4  F0DF         	call	_ADCC_StartConversion	;wreg free
 34473                           
 34474                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34475  01AD80  0012               	return		;funcret
 34476  01AD82                     __end_of_adc_int_t_handler:
 34477                           	opt callstack 0
 34478                           
 34479 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34480 ;; Defined at:
 34481 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34482 ;; Parameters:    Size  Location     Type
 34483 ;;		None
 34484 ;; Auto vars:     Size  Location     Type
 34485 ;;		None
 34486 ;; Return value:  Size  Location     Type
 34487 ;;                  1  [STACK] void 
 34488 ;; Registers used:
 34489 ;;		None
 34490 ;; Tracked objects:
 34491 ;;		On entry : 3F/0
 34492 ;;		On exit  : 0/0
 34493 ;;		Unchanged: 0/0
 34494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34499 ;;Total ram usage:        0 bytes
 34500 ;; Hardware stack levels used:    1
 34501 ;; This function calls:
 34502 ;;		Nothing
 34503 ;; This function is called by:
 34504 ;;		_ADCC_Initialize
 34505 ;;		_ADCC_ISR
 34506 ;;		_ADCC_ThresholdISR
 34507 ;; This function uses a reentrant model
 34508 ;;
 34509                           
 34510                           	psect	text161
 34511  01C0D8                     __ptext161:
 34512                           	opt callstack 0
 34513  01C0D8                     _ADCC_DefaultInterruptHandler:
 34514                           	opt callstack 4
 34515                           
 34516                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34517                           
 34518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34519                           ;incstack = 0
 34520  01C0D8  0012               	return		;funcret
 34521  01C0DA                     __end_of_ADCC_DefaultInterruptHandler:
 34522                           	opt callstack 0
 34523                           
 34524 ;; *************** function _adc_int_handler *****************
 34525 ;; Defined at:
 34526 ;;		line 136 in file "daq.c"
 34527 ;; Parameters:    Size  Location     Type
 34528 ;;		None
 34529 ;; Auto vars:     Size  Location     Type
 34530 ;;		None
 34531 ;; Return value:  Size  Location     Type
 34532 ;;                  1  [STACK] void 
 34533 ;; Registers used:
 34534 ;;		None
 34535 ;; Tracked objects:
 34536 ;;		On entry : 3F/0
 34537 ;;		On exit  : 0/0
 34538 ;;		Unchanged: 0/0
 34539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34544 ;;Total ram usage:        0 bytes
 34545 ;; Hardware stack levels used:    1
 34546 ;; This function calls:
 34547 ;;		Nothing
 34548 ;; This function is called by:
 34549 ;;		_start_adc_scan
 34550 ;;		_ADCC_ISR
 34551 ;; This function uses a reentrant model
 34552 ;;
 34553                           
 34554                           	psect	text162
 34555  01C0DA                     __ptext162:
 34556                           	opt callstack 0
 34557  01C0DA                     _adc_int_handler:
 34558                           	opt callstack 4
 34559                           
 34560                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34561                           
 34562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34563                           ;incstack = 0
 34564  01C0DA  0012               	return		;funcret
 34565  01C0DC                     __end_of_adc_int_handler:
 34566                           	opt callstack 0
 34567                           
 34568 ;; *************** function _ADCC_ThresholdISR *****************
 34569 ;; Defined at:
 34570 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34571 ;; Parameters:    Size  Location     Type
 34572 ;;		None
 34573 ;; Auto vars:     Size  Location     Type
 34574 ;;		None
 34575 ;; Return value:  Size  Location     Type
 34576 ;;                  1    wreg      void 
 34577 ;; Registers used:
 34578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34579 ;; Tracked objects:
 34580 ;;		On entry : 0/0
 34581 ;;		On exit  : 0/0
 34582 ;;		Unchanged: 0/0
 34583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34586 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34588 ;;Total ram usage:        5 bytes
 34589 ;; Hardware stack levels used:    1
 34590 ;; Hardware stack levels required when called:    2
 34591 ;; This function calls:
 34592 ;;		Absolute function
 34593 ;;		_ADCC_DefaultInterruptHandler
 34594 ;;		_adc_int_t_handler
 34595 ;; This function is called by:
 34596 ;;		Interrupt level 2
 34597 ;; This function uses a non-reentrant model
 34598 ;;
 34599                           
 34600                           	psect	text163
 34601  01AED0                     __ptext163:
 34602                           	opt callstack 0
 34603  01AED0                     _ADCC_ThresholdISR:
 34604                           	opt callstack 3
 34605                           
 34606                           ;incstack = 0
 34607  01AED0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34608  01AED6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34609  01AEDC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34610  01AEE2  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34611  01AEE8  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34612  01AEEE  EE14  F15E         	lfsr	1,___inthi_sp
 34613                           
 34614                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34615  01AEF2  0139               	movlb	57	; () banked
 34616  01AEF4  97A1               	bcf	161,3,b	;volatile
 34617                           
 34618                           ; BSR set to: 57
 34619                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34620  01AEF6  0100               	movlb	0	; () banked
 34621  01AEF8  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34622  01AEFA  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34623  01AEFC  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34624  01AEFE  B4D8               	btfsc	status,2,c
 34625  01AF00  D00C               	goto	i2u1042_49
 34626                           
 34627                           ; BSR set to: 0
 34628                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34629  01AF02  D801               	call	i2u1042_48
 34630  01AF04  D00A               	goto	i2u1042_49
 34631  01AF06                     i2u1042_48:
 34632  01AF06  0005               	push	
 34633  01AF08  6EFA               	movwf	pclath,c
 34634  01AF0A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34635  01AF0C  6EFD               	movwf	tosl,c
 34636  01AF0E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34637  01AF10  6EFE               	movwf	tosh,c
 34638  01AF12  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34639  01AF14  6EFF               	movwf	tosu,c
 34640  01AF16  50FA               	movf	pclath,w,c
 34641  01AF18  0012               	return		;indir
 34642  01AF1A                     i2u1042_49:
 34643  01AF1A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34644  01AF20  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34645  01AF26  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34646  01AF2C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34647  01AF32  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34648  01AF38  0011               	retfie		f
 34649  01AF3A                     __end_of_ADCC_ThresholdISR:
 34650                           	opt callstack 0
 34651                           
 34652 ;; *************** function _UART1_rx_vect_isr *****************
 34653 ;; Defined at:
 34654 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34655 ;; Parameters:    Size  Location     Type
 34656 ;;		None
 34657 ;; Auto vars:     Size  Location     Type
 34658 ;;		None
 34659 ;; Return value:  Size  Location     Type
 34660 ;;                  1    wreg      void 
 34661 ;; Registers used:
 34662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34663 ;; Tracked objects:
 34664 ;;		On entry : 0/0
 34665 ;;		On exit  : 0/0
 34666 ;;		Unchanged: 0/0
 34667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34672 ;;Total ram usage:        0 bytes
 34673 ;; Hardware stack levels used:    1
 34674 ;; Hardware stack levels required when called:    1
 34675 ;; This function calls:
 34676 ;;		Absolute function
 34677 ;;		_UART1_Receive_ISR
 34678 ;; This function is called by:
 34679 ;;		Interrupt level 2
 34680 ;; This function uses a non-reentrant model
 34681 ;;
 34682                           
 34683                           	psect	text164
 34684  01BC84                     __ptext164:
 34685                           	opt callstack 0
 34686  01BC84                     _UART1_rx_vect_isr:
 34687                           	opt callstack 4
 34688                           
 34689                           ;incstack = 0
 34690  01BC84  EE14  F15E         	lfsr	1,___inthi_sp
 34691                           
 34692                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34693  01BC88  0100               	movlb	0	; () banked
 34694  01BC8A  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34695  01BC8C  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34696  01BC8E  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34697  01BC90  B4D8               	btfsc	status,2,c
 34698  01BC92  0011               	retfie		f
 34699                           
 34700                           ; BSR set to: 0
 34701                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34702  01BC94  D801               	call	i2u1044_48
 34703  01BC96  0011               	retfie		f
 34704  01BC98                     i2u1044_48:
 34705  01BC98  0005               	push	
 34706  01BC9A  6EFA               	movwf	pclath,c
 34707  01BC9C  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34708  01BC9E  6EFD               	movwf	tosl,c
 34709  01BCA0  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34710  01BCA2  6EFE               	movwf	tosh,c
 34711  01BCA4  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34712  01BCA6  6EFF               	movwf	tosu,c
 34713  01BCA8  50FA               	movf	pclath,w,c
 34714  01BCAA  0012               	return		;indir
 34715  01BCAC                     __end_of_UART1_rx_vect_isr:
 34716                           	opt callstack 0
 34717                           
 34718 ;; *************** function _UART1_Receive_ISR *****************
 34719 ;; Defined at:
 34720 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34721 ;; Parameters:    Size  Location     Type
 34722 ;;		None
 34723 ;; Auto vars:     Size  Location     Type
 34724 ;;		None
 34725 ;; Return value:  Size  Location     Type
 34726 ;;                  1  [STACK] void 
 34727 ;; Registers used:
 34728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34729 ;; Tracked objects:
 34730 ;;		On entry : 3F/0
 34731 ;;		On exit  : 3F/0
 34732 ;;		Unchanged: 0/0
 34733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34738 ;;Total ram usage:        0 bytes
 34739 ;; Hardware stack levels used:    1
 34740 ;; This function calls:
 34741 ;;		Nothing
 34742 ;; This function is called by:
 34743 ;;		_UART1_Initialize
 34744 ;;		_UART1_rx_vect_isr
 34745 ;; This function uses a reentrant model
 34746 ;;
 34747                           
 34748                           	psect	text165
 34749  01BEB2                     __ptext165:
 34750                           	opt callstack 0
 34751  01BEB2                     _UART1_Receive_ISR:
 34752                           	opt callstack 4
 34753                           
 34754                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34755                           
 34756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34757                           ;incstack = 0
 34758  01BEB2  5047               	movf	_uart1RxHead^0,w,c
 34759  01BEB4  0F6C               	addlw	low _uart1RxBuffer
 34760  01BEB6  6ED9               	movwf	fsr2l,c
 34761  01BEB8  6ADA               	clrf	fsr2h,c
 34762  01BEBA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34763  01BEC0  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 34764                           
 34765                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34766  01BEC2  0E07               	movlw	7
 34767  01BEC4  6447               	cpfsgt	_uart1RxHead^0,c
 34768  01BEC6  D001               	goto	l10651
 34769                           
 34770                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34771  01BEC8  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34772  01BECA                     l10651:
 34773                           
 34774                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34775  01BECA  0100               	movlb	0	; () banked
 34776  01BECC  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 34777                           
 34778                           ; BSR set to: 0
 34779                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34780  01BECE  0012               	return		;funcret
 34781  01BED0                     __end_of_UART1_Receive_ISR:
 34782                           	opt callstack 0
 34783                           
 34784 ;; *************** function _UART2_tx_vect_isr *****************
 34785 ;; Defined at:
 34786 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34787 ;; Parameters:    Size  Location     Type
 34788 ;;		None
 34789 ;; Auto vars:     Size  Location     Type
 34790 ;;		None
 34791 ;; Return value:  Size  Location     Type
 34792 ;;                  1    wreg      void 
 34793 ;; Registers used:
 34794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34795 ;; Tracked objects:
 34796 ;;		On entry : 0/0
 34797 ;;		On exit  : 0/0
 34798 ;;		Unchanged: 0/0
 34799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34804 ;;Total ram usage:        0 bytes
 34805 ;; Hardware stack levels used:    1
 34806 ;; Hardware stack levels required when called:    1
 34807 ;; This function calls:
 34808 ;;		Absolute function
 34809 ;;		_UART2_Transmit_ISR
 34810 ;; This function is called by:
 34811 ;;		Interrupt level 2
 34812 ;; This function uses a non-reentrant model
 34813 ;;
 34814                           
 34815                           	psect	text166
 34816  01BCAC                     __ptext166:
 34817                           	opt callstack 0
 34818  01BCAC                     _UART2_tx_vect_isr:
 34819                           	opt callstack 4
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;incstack = 0
 34823  01BCAC  EE14  F15E         	lfsr	1,___inthi_sp
 34824                           
 34825                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34826  01BCB0  0100               	movlb	0	; () banked
 34827  01BCB2  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34828  01BCB4  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34829  01BCB6  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34830  01BCB8  B4D8               	btfsc	status,2,c
 34831  01BCBA  0011               	retfie		f
 34832                           
 34833                           ; BSR set to: 0
 34834                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34835  01BCBC  D801               	call	i2u1046_48
 34836  01BCBE  0011               	retfie		f
 34837  01BCC0                     i2u1046_48:
 34838  01BCC0  0005               	push	
 34839  01BCC2  6EFA               	movwf	pclath,c
 34840  01BCC4  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34841  01BCC6  6EFD               	movwf	tosl,c
 34842  01BCC8  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34843  01BCCA  6EFE               	movwf	tosh,c
 34844  01BCCC  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34845  01BCCE  6EFF               	movwf	tosu,c
 34846  01BCD0  50FA               	movf	pclath,w,c
 34847  01BCD2  0012               	return		;indir
 34848  01BCD4                     __end_of_UART2_tx_vect_isr:
 34849                           	opt callstack 0
 34850                           
 34851 ;; *************** function _UART2_Transmit_ISR *****************
 34852 ;; Defined at:
 34853 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34854 ;; Parameters:    Size  Location     Type
 34855 ;;		None
 34856 ;; Auto vars:     Size  Location     Type
 34857 ;;		None
 34858 ;; Return value:  Size  Location     Type
 34859 ;;                  1  [STACK] void 
 34860 ;; Registers used:
 34861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34862 ;; Tracked objects:
 34863 ;;		On entry : 3F/0
 34864 ;;		On exit  : 3B/39
 34865 ;;		Unchanged: 0/0
 34866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34871 ;;Total ram usage:        0 bytes
 34872 ;; Hardware stack levels used:    1
 34873 ;; This function calls:
 34874 ;;		Nothing
 34875 ;; This function is called by:
 34876 ;;		_UART2_Initialize
 34877 ;;		_UART2_tx_vect_isr
 34878 ;; This function uses a reentrant model
 34879 ;;
 34880                           
 34881                           	psect	text167
 34882  01B9FC                     __ptext167:
 34883                           	opt callstack 0
 34884  01B9FC                     _UART2_Transmit_ISR:
 34885                           	opt callstack 4
 34886                           
 34887                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34888                           
 34889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34890                           ;incstack = 0
 34891  01B9FC  0E40               	movlw	64
 34892  01B9FE  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 34893  01BA00  D010               	goto	l673
 34894                           
 34895                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34896  01BA02  0E00               	movlw	low _uart2TxBuffer
 34897  01BA04  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 34898  01BA06  6ED9               	movwf	fsr2l,c
 34899  01BA08  6ADA               	clrf	fsr2h,c
 34900  01BA0A  0E03               	movlw	high _uart2TxBuffer
 34901  01BA0C  22DA               	addwfc	fsr2h,f,c
 34902  01BA0E  50DF               	movf	indf2,w,c
 34903  01BA10  013D               	movlb	61	; () banked
 34904  01BA12  6FD2               	movwf	210,b	;volatile
 34905                           
 34906                           ; BSR set to: 61
 34907  01BA14  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 34908                           
 34909                           ; BSR set to: 61
 34910                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34911  01BA16  0E3F               	movlw	63
 34912  01BA18  6445               	cpfsgt	_uart2TxTail^0,c
 34913  01BA1A  D001               	goto	l10663
 34914                           
 34915                           ; BSR set to: 61
 34916                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34917  01BA1C  6A45               	clrf	_uart2TxTail^0,c	;volatile
 34918  01BA1E                     l10663:
 34919                           
 34920                           ; BSR set to: 61
 34921                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34922  01BA1E  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34923                           
 34924                           ;mcc_generated_files/uart2.c: 224:     }
 34925  01BA20  0012               	return	
 34926  01BA22                     l673:
 34927                           
 34928                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34929  01BA22  0139               	movlb	57	; () banked
 34930  01BA24  9796               	bcf	150,3,b	;volatile
 34931                           
 34932                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34933  01BA26  0012               	return		;funcret
 34934  01BA28                     __end_of_UART2_Transmit_ISR:
 34935                           	opt callstack 0
 34936                           
 34937 ;; *************** function _UART2_rx_vect_isr *****************
 34938 ;; Defined at:
 34939 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34940 ;; Parameters:    Size  Location     Type
 34941 ;;		None
 34942 ;; Auto vars:     Size  Location     Type
 34943 ;;		None
 34944 ;; Return value:  Size  Location     Type
 34945 ;;                  1    wreg      void 
 34946 ;; Registers used:
 34947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34948 ;; Tracked objects:
 34949 ;;		On entry : 0/0
 34950 ;;		On exit  : 0/0
 34951 ;;		Unchanged: 0/0
 34952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34957 ;;Total ram usage:        0 bytes
 34958 ;; Hardware stack levels used:    1
 34959 ;; Hardware stack levels required when called:    1
 34960 ;; This function calls:
 34961 ;;		Absolute function
 34962 ;;		_UART2_Receive_ISR
 34963 ;; This function is called by:
 34964 ;;		Interrupt level 2
 34965 ;; This function uses a non-reentrant model
 34966 ;;
 34967                           
 34968                           	psect	text168
 34969  01BCD4                     __ptext168:
 34970                           	opt callstack 0
 34971  01BCD4                     _UART2_rx_vect_isr:
 34972                           	opt callstack 4
 34973                           
 34974                           ;incstack = 0
 34975  01BCD4  EE14  F15E         	lfsr	1,___inthi_sp
 34976                           
 34977                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34978  01BCD8  0100               	movlb	0	; () banked
 34979  01BCDA  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34980  01BCDC  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34981  01BCDE  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34982  01BCE0  B4D8               	btfsc	status,2,c
 34983  01BCE2  0011               	retfie		f
 34984                           
 34985                           ; BSR set to: 0
 34986                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34987  01BCE4  D801               	call	i2u1048_48
 34988  01BCE6  0011               	retfie		f
 34989  01BCE8                     i2u1048_48:
 34990  01BCE8  0005               	push	
 34991  01BCEA  6EFA               	movwf	pclath,c
 34992  01BCEC  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34993  01BCEE  6EFD               	movwf	tosl,c
 34994  01BCF0  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34995  01BCF2  6EFE               	movwf	tosh,c
 34996  01BCF4  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34997  01BCF6  6EFF               	movwf	tosu,c
 34998  01BCF8  50FA               	movf	pclath,w,c
 34999  01BCFA  0012               	return		;indir
 35000  01BCFC                     __end_of_UART2_rx_vect_isr:
 35001                           	opt callstack 0
 35002                           
 35003 ;; *************** function _UART2_Receive_ISR *****************
 35004 ;; Defined at:
 35005 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35006 ;; Parameters:    Size  Location     Type
 35007 ;;		None
 35008 ;; Auto vars:     Size  Location     Type
 35009 ;;		None
 35010 ;; Return value:  Size  Location     Type
 35011 ;;                  1  [STACK] void 
 35012 ;; Registers used:
 35013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35014 ;; Tracked objects:
 35015 ;;		On entry : 3F/0
 35016 ;;		On exit  : 3F/0
 35017 ;;		Unchanged: 0/0
 35018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35023 ;;Total ram usage:        0 bytes
 35024 ;; Hardware stack levels used:    1
 35025 ;; This function calls:
 35026 ;;		Nothing
 35027 ;; This function is called by:
 35028 ;;		_UART2_Initialize
 35029 ;;		_UART2_rx_vect_isr
 35030 ;; This function uses a reentrant model
 35031 ;;
 35032                           
 35033                           	psect	text169
 35034  01BE38                     __ptext169:
 35035                           	opt callstack 0
 35036  01BE38                     _UART2_Receive_ISR:
 35037                           	opt callstack 4
 35038                           
 35039                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35040                           
 35041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35042                           ;incstack = 0
 35043  01BE38  0E00               	movlw	low _uart2RxBuffer
 35044  01BE3A  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35045  01BE3C  6ED9               	movwf	fsr2l,c
 35046  01BE3E  6ADA               	clrf	fsr2h,c
 35047  01BE40  0E04               	movlw	high _uart2RxBuffer
 35048  01BE42  22DA               	addwfc	fsr2h,f,c
 35049  01BE44  006F F743 FFDF     	movff	15824,indf2	;volatile
 35050  01BE4A  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35051                           
 35052                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35053  01BE4C  2843               	incf	_uart2RxHead^0,w,c
 35054  01BE4E  B4D8               	btfsc	status,2,c
 35055                           
 35056                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35057  01BE50  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35058                           
 35059                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35060  01BE52  0100               	movlb	0	; () banked
 35061  01BE54  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35062                           
 35063                           ; BSR set to: 0
 35064                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35065  01BE56  0012               	return		;funcret
 35066  01BE58                     __end_of_UART2_Receive_ISR:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function _TMR6_ISR *****************
 35070 ;; Defined at:
 35071 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;		None
 35074 ;; Auto vars:     Size  Location     Type
 35075 ;;		None
 35076 ;; Return value:  Size  Location     Type
 35077 ;;                  1    wreg      void 
 35078 ;; Registers used:
 35079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35080 ;; Tracked objects:
 35081 ;;		On entry : 0/0
 35082 ;;		On exit  : 0/0
 35083 ;;		Unchanged: 0/0
 35084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35089 ;;Total ram usage:        1 bytes
 35090 ;; Hardware stack levels used:    1
 35091 ;; Hardware stack levels required when called:    2
 35092 ;; This function calls:
 35093 ;;		_TMR6_CallBack
 35094 ;; This function is called by:
 35095 ;;		Interrupt level 2
 35096 ;; This function uses a non-reentrant model
 35097 ;;
 35098                           
 35099                           	psect	text170
 35100  01BF08                     __ptext170:
 35101                           	opt callstack 0
 35102  01BF08                     _TMR6_ISR:
 35103                           	opt callstack 3
 35104                           
 35105                           ; BSR set to: 0
 35106                           ;incstack = 0
 35107  01BF08  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35108  01BF0E  EE14  F15E         	lfsr	1,___inthi_sp
 35109                           
 35110                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35111  01BF12  0139               	movlb	57	; () banked
 35112  01BF14  91A9               	bcf	169,0,b	;volatile
 35113                           
 35114                           ; BSR set to: 57
 35115                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35116  01BF16  ECD8  F0DE         	call	_TMR6_CallBack	;wreg free
 35117  01BF1A  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35118  01BF20  0011               	retfie		f
 35119  01BF22                     __end_of_TMR6_ISR:
 35120                           	opt callstack 0
 35121                           
 35122 ;; *************** function _TMR6_CallBack *****************
 35123 ;; Defined at:
 35124 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35125 ;; Parameters:    Size  Location     Type
 35126 ;;		None
 35127 ;; Auto vars:     Size  Location     Type
 35128 ;;		None
 35129 ;; Return value:  Size  Location     Type
 35130 ;;                  1  [STACK] void 
 35131 ;; Registers used:
 35132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35133 ;; Tracked objects:
 35134 ;;		On entry : 3F/39
 35135 ;;		On exit  : 0/0
 35136 ;;		Unchanged: 0/0
 35137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35142 ;;Total ram usage:        0 bytes
 35143 ;; Hardware stack levels used:    1
 35144 ;; Hardware stack levels required when called:    1
 35145 ;; This function calls:
 35146 ;;		Absolute function
 35147 ;;		_TMR6_DefaultInterruptHandler
 35148 ;; This function is called by:
 35149 ;;		_TMR6_ISR
 35150 ;; This function uses a reentrant model
 35151 ;;
 35152                           
 35153                           	psect	text171
 35154  01BDB0                     __ptext171:
 35155                           	opt callstack 0
 35156  01BDB0                     _TMR6_CallBack:
 35157                           	opt callstack 3
 35158                           
 35159                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35160                           
 35161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35162                           ;incstack = 0
 35163  01BDB0  0100               	movlb	0	; () banked
 35164  01BDB2  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35165  01BDB4  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35166  01BDB6  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35167  01BDB8  B4D8               	btfsc	status,2,c
 35168  01BDBA  0012               	return	
 35169                           
 35170                           ; BSR set to: 0
 35171                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35172  01BDBC  D801               	call	u1005_48
 35173  01BDBE  0012               	return	
 35174  01BDC0                     u1005_48:
 35175  01BDC0  0005               	push	
 35176  01BDC2  6EFA               	movwf	pclath,c
 35177  01BDC4  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35178  01BDC6  6EFD               	movwf	tosl,c
 35179  01BDC8  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35180  01BDCA  6EFE               	movwf	tosh,c
 35181  01BDCC  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35182  01BDCE  6EFF               	movwf	tosu,c
 35183  01BDD0  50FA               	movf	pclath,w,c
 35184  01BDD2  0012               	return		;indir
 35185  01BDD4                     __end_of_TMR6_CallBack:
 35186                           	opt callstack 0
 35187                           
 35188 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35189 ;; Defined at:
 35190 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35191 ;; Parameters:    Size  Location     Type
 35192 ;;		None
 35193 ;; Auto vars:     Size  Location     Type
 35194 ;;  i               1  [STACK] unsigned char 
 35195 ;; Return value:  Size  Location     Type
 35196 ;;                  1  [STACK] void 
 35197 ;; Registers used:
 35198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35199 ;; Tracked objects:
 35200 ;;		On entry : 3F/0
 35201 ;;		On exit  : 0/0
 35202 ;;		Unchanged: 0/0
 35203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35208 ;;Total ram usage:        0 bytes
 35209 ;; Hardware stack levels used:    1
 35210 ;; This function calls:
 35211 ;;		Nothing
 35212 ;; This function is called by:
 35213 ;;		_TMR6_Initialize
 35214 ;;		_TMR6_CallBack
 35215 ;; This function uses a reentrant model
 35216 ;;
 35217                           
 35218                           	psect	text172
 35219  01B32C                     __ptext172:
 35220                           	opt callstack 0
 35221  01B32C                     _TMR6_DefaultInterruptHandler:
 35222                           	opt callstack 0
 35223                           
 35224                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35225  01B32C  52E6               	movf	postinc1,f,c
 35226                           
 35227                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35228                           ;stkvar	_i @ sp[(-1)+0]
 35229                           
 35230                           ;incstack = 0
 35231  01B32E  0EFF               	movlw	-1
 35232  01B330  6AE3               	clrf	plusw1,c
 35233  01B332                     l10277:
 35234                           
 35235                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35236                           ;stkvar	_i @ sp[(-1)+0]
 35237  01B332  0EFF               	movlw	-1
 35238  01B334  50E3               	movf	plusw1,w,c
 35239  01B336  0D02               	mullw	2
 35240  01B338  0E7D               	movlw	low _tickCount
 35241  01B33A  24F3               	addwf	243,w,c
 35242  01B33C  6ED9               	movwf	fsr2l,c
 35243  01B33E  0E02               	movlw	high _tickCount
 35244  01B340  20F4               	addwfc	prodh,w,c
 35245  01B342  6EDA               	movwf	fsr2h,c
 35246  01B344  50DE               	movf	postinc2,w,c
 35247  01B346  10DE               	iorwf	postinc2,w,c
 35248  01B348  B4D8               	btfsc	status,2,c
 35249  01B34A  D00C               	goto	l10281
 35250                           
 35251                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35252                           ;stkvar	_i @ sp[(-1)+0]
 35253  01B34C  0EFF               	movlw	-1
 35254  01B34E  50E3               	movf	plusw1,w,c
 35255  01B350  0D02               	mullw	2
 35256  01B352  0E7D               	movlw	low _tickCount
 35257  01B354  24F3               	addwf	243,w,c
 35258  01B356  6ED9               	movwf	fsr2l,c
 35259  01B358  0E02               	movlw	high _tickCount
 35260  01B35A  20F4               	addwfc	prodh,w,c
 35261  01B35C  6EDA               	movwf	fsr2h,c
 35262  01B35E  06DE               	decf	postinc2,f,c
 35263  01B360  0E00               	movlw	0
 35264  01B362  5ADD               	subwfb	postdec2,f,c
 35265  01B364                     l10281:
 35266                           
 35267                           ;mcc_generated_files/tmr6.c: 207:  }
 35268                           ;stkvar	_i @ sp[(-1)+0]
 35269  01B364  0EFF               	movlw	-1
 35270  01B366  2AE3               	incf	plusw1,f,c
 35271                           
 35272                           ;stkvar	_i @ sp[(-1)+0]
 35273  01B368  0EFF               	movlw	-1
 35274  01B36A  006F FF8C  F001    	movff	plusw1,btemp
 35275  01B370  0E0C               	movlw	12
 35276  01B372  6401               	cpfsgt	btemp^0,c
 35277  01B374  D7DE               	goto	l10277
 35278                           
 35279                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35280  01B376  52E5               	movf	postdec1,f,c
 35281  01B378  0012               	return		;funcret
 35282  01B37A                     __end_of_TMR6_DefaultInterruptHandler:
 35283                           	opt callstack 0
 35284                           
 35285 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35286 ;; Defined at:
 35287 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35288 ;; Parameters:    Size  Location     Type
 35289 ;;		None
 35290 ;; Auto vars:     Size  Location     Type
 35291 ;;		None
 35292 ;; Return value:  Size  Location     Type
 35293 ;;                  1    wreg      void 
 35294 ;; Registers used:
 35295 ;;		None
 35296 ;; Tracked objects:
 35297 ;;		On entry : 0/0
 35298 ;;		On exit  : 3F/0
 35299 ;;		Unchanged: 0/0
 35300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35305 ;;Total ram usage:        0 bytes
 35306 ;; Hardware stack levels used:    1
 35307 ;; This function calls:
 35308 ;;		Nothing
 35309 ;; This function is called by:
 35310 ;;		Interrupt level 2
 35311 ;; This function uses a non-reentrant model
 35312 ;;
 35313                           
 35314                           	psect	text173
 35315  01C044                     __ptext173:
 35316                           	opt callstack 0
 35317  01C044                     _DMA1_DMASCNT_ISR:
 35318                           	opt callstack 5
 35319                           
 35320                           ;incstack = 0
 35321  01C044  EE14  F15E         	lfsr	1,___inthi_sp
 35322                           
 35323                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35324  01C048  0139               	movlb	57	; () banked
 35325  01C04A  91A2               	bcf	162,0,b	;volatile
 35326                           
 35327                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35328  01C04C  0100               	movlb	0	; () banked
 35329  01C04E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35330                           
 35331                           ; BSR set to: 0
 35332  01C050  0011               	retfie		f
 35333  01C052                     __end_of_DMA1_DMASCNT_ISR:
 35334                           	opt callstack 0
 35335                           
 35336 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35337 ;; Defined at:
 35338 ;;		line 134 in file "mcc_generated_files/dma1.c"
 35339 ;; Parameters:    Size  Location     Type
 35340 ;;		None
 35341 ;; Auto vars:     Size  Location     Type
 35342 ;;		None
 35343 ;; Return value:  Size  Location     Type
 35344 ;;                  1    wreg      void 
 35345 ;; Registers used:
 35346 ;;		None
 35347 ;; Tracked objects:
 35348 ;;		On entry : 0/0
 35349 ;;		On exit  : 3F/39
 35350 ;;		Unchanged: 0/0
 35351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35356 ;;Total ram usage:        0 bytes
 35357 ;; Hardware stack levels used:    1
 35358 ;; This function calls:
 35359 ;;		Nothing
 35360 ;; This function is called by:
 35361 ;;		Interrupt level 2
 35362 ;; This function uses a non-reentrant model
 35363 ;;
 35364                           
 35365                           	psect	text174
 35366  01C068                     __ptext174:
 35367                           	opt callstack 0
 35368  01C068                     _DMA1_DMADCNT_ISR:
 35369                           	opt callstack 5
 35370                           
 35371                           ; BSR set to: 0
 35372                           ;incstack = 0
 35373  01C068  EE14  F15E         	lfsr	1,___inthi_sp
 35374                           
 35375                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 35376  01C06C  0139               	movlb	57	; () banked
 35377  01C06E  93A2               	bcf	162,1,b	;volatile
 35378                           
 35379                           ; BSR set to: 57
 35380  01C070  0011               	retfie		f
 35381  01C072                     __end_of_DMA1_DMADCNT_ISR:
 35382                           	opt callstack 0
 35383                           
 35384 ;; *************** function _DMA1_DMAA_ISR *****************
 35385 ;; Defined at:
 35386 ;;		line 144 in file "mcc_generated_files/dma1.c"
 35387 ;; Parameters:    Size  Location     Type
 35388 ;;		None
 35389 ;; Auto vars:     Size  Location     Type
 35390 ;;		None
 35391 ;; Return value:  Size  Location     Type
 35392 ;;                  1    wreg      void 
 35393 ;; Registers used:
 35394 ;;		None
 35395 ;; Tracked objects:
 35396 ;;		On entry : 0/0
 35397 ;;		On exit  : 3F/39
 35398 ;;		Unchanged: 0/0
 35399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35404 ;;Total ram usage:        0 bytes
 35405 ;; Hardware stack levels used:    1
 35406 ;; This function calls:
 35407 ;;		Nothing
 35408 ;; This function is called by:
 35409 ;;		Interrupt level 2
 35410 ;; This function uses a non-reentrant model
 35411 ;;
 35412                           
 35413                           	psect	text175
 35414  01C074                     __ptext175:
 35415                           	opt callstack 0
 35416  01C074                     _DMA1_DMAA_ISR:
 35417                           	opt callstack 5
 35418                           
 35419                           ; BSR set to: 57
 35420                           ;incstack = 0
 35421  01C074  EE14  F15E         	lfsr	1,___inthi_sp
 35422                           
 35423                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 35424  01C078  0139               	movlb	57	; () banked
 35425  01C07A  97A2               	bcf	162,3,b	;volatile
 35426                           
 35427                           ; BSR set to: 57
 35428  01C07C  0011               	retfie		f
 35429  01C07E                     __end_of_DMA1_DMAA_ISR:
 35430                           	opt callstack 0
 35431                           
 35432 ;; *************** function _DMA1_DMAOR_ISR *****************
 35433 ;; Defined at:
 35434 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35435 ;; Parameters:    Size  Location     Type
 35436 ;;		None
 35437 ;; Auto vars:     Size  Location     Type
 35438 ;;		None
 35439 ;; Return value:  Size  Location     Type
 35440 ;;                  1    wreg      void 
 35441 ;; Registers used:
 35442 ;;		None
 35443 ;; Tracked objects:
 35444 ;;		On entry : 0/0
 35445 ;;		On exit  : 3F/39
 35446 ;;		Unchanged: 0/0
 35447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35452 ;;Total ram usage:        0 bytes
 35453 ;; Hardware stack levels used:    1
 35454 ;; This function calls:
 35455 ;;		Nothing
 35456 ;; This function is called by:
 35457 ;;		Interrupt level 2
 35458 ;; This function uses a non-reentrant model
 35459 ;;
 35460                           
 35461                           	psect	text176
 35462  01C080                     __ptext176:
 35463                           	opt callstack 0
 35464  01C080                     _DMA1_DMAOR_ISR:
 35465                           	opt callstack 5
 35466                           
 35467                           ; BSR set to: 57
 35468                           ;incstack = 0
 35469  01C080  EE14  F15E         	lfsr	1,___inthi_sp
 35470                           
 35471                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35472  01C084  0139               	movlb	57	; () banked
 35473  01C086  95A2               	bcf	162,2,b	;volatile
 35474                           
 35475                           ; BSR set to: 57
 35476  01C088  0011               	retfie		f
 35477  01C08A                     __end_of_DMA1_DMAOR_ISR:
 35478                           	opt callstack 0
 35479                           
 35480                           ;
 35481                           ; Interrupt Vector Table @ 0x8
 35482                           ;
 35483                           
 35484                           	psect	ivt0x8
 35485  000008                     __pivt0x8:
 35486                           	opt callstack 0
 35487  000008                     ivt0x8_base:
 35488                           	opt callstack 0
 35489                           
 35490                           ; Vector 0 : SWINT
 35491  000008  7033               	dw	_Default_ISR shr (0+2)
 35492                           
 35493                           ; Vector 1 : HLVD
 35494  00000A  7033               	dw	_Default_ISR shr (0+2)
 35495                           
 35496                           ; Vector 2 : OSF
 35497  00000C  7033               	dw	_Default_ISR shr (0+2)
 35498                           
 35499                           ; Vector 3 : CSW
 35500  00000E  7033               	dw	_Default_ISR shr (0+2)
 35501                           
 35502                           ; Vector 4 : NVM
 35503  000010  7033               	dw	_Default_ISR shr (0+2)
 35504                           
 35505                           ; Vector 5 : SCAN
 35506  000012  7033               	dw	_Default_ISR shr (0+2)
 35507                           
 35508                           ; Vector 6 : CRC
 35509  000014  7033               	dw	_Default_ISR shr (0+2)
 35510                           
 35511                           ; Vector 7 : IOC
 35512  000016  7033               	dw	_Default_ISR shr (0+2)
 35513                           
 35514                           ; Vector 8 : INT0
 35515  000018  700D               	dw	_INT0_ISR shr (0+2)
 35516                           
 35517                           ; Vector 9 : ZCD
 35518  00001A  7033               	dw	_Default_ISR shr (0+2)
 35519                           
 35520                           ; Vector 10 : AD
 35521  00001C  6E74               	dw	_ADCC_ISR shr (0+2)
 35522                           
 35523                           ; Vector 11 : ADT
 35524  00001E  6BB4               	dw	_ADCC_ThresholdISR shr (0+2)
 35525                           
 35526                           ; Vector 12 : CMP1
 35527  000020  7033               	dw	_Default_ISR shr (0+2)
 35528                           
 35529                           ; Vector 13 : SMT1
 35530  000022  7033               	dw	_Default_ISR shr (0+2)
 35531                           
 35532                           ; Vector 14 : SMT1PRA
 35533  000024  7033               	dw	_Default_ISR shr (0+2)
 35534                           
 35535                           ; Vector 15 : SMT1PRW
 35536  000026  7033               	dw	_Default_ISR shr (0+2)
 35537                           
 35538                           ; Vector 16 : DMA1SCNT
 35539  000028  7011               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35540                           
 35541                           ; Vector 17 : DMA1DCNT
 35542  00002A  701A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35543                           
 35544                           ; Vector 18 : DMA1OR
 35545  00002C  7020               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35546                           
 35547                           ; Vector 19 : DMA1A
 35548  00002E  701D               	dw	_DMA1_DMAA_ISR shr (0+2)
 35549                           
 35550                           ; Vector 20 : SPI1RX
 35551  000030  7033               	dw	_Default_ISR shr (0+2)
 35552                           
 35553                           ; Vector 21 : SPI1TX
 35554  000032  7033               	dw	_Default_ISR shr (0+2)
 35555                           
 35556                           ; Vector 22 : SPI1
 35557  000034  7033               	dw	_Default_ISR shr (0+2)
 35558                           
 35559                           ; Vector 23 : I2C1RX
 35560  000036  7033               	dw	_Default_ISR shr (0+2)
 35561                           
 35562                           ; Vector 24 : I2C1TX
 35563  000038  7033               	dw	_Default_ISR shr (0+2)
 35564                           
 35565                           ; Vector 25 : I2C1
 35566  00003A  7033               	dw	_Default_ISR shr (0+2)
 35567                           
 35568                           ; Vector 26 : I2C1E
 35569  00003C  7033               	dw	_Default_ISR shr (0+2)
 35570                           
 35571                           ; Vector 27 : U1RX
 35572  00003E  6F21               	dw	_UART1_rx_vect_isr shr (0+2)
 35573                           
 35574                           ; Vector 28 : U1TX
 35575  000040  7033               	dw	_Default_ISR shr (0+2)
 35576                           
 35577                           ; Vector 29 : U1E
 35578  000042  7033               	dw	_Default_ISR shr (0+2)
 35579                           
 35580                           ; Vector 30 : U1
 35581  000044  7033               	dw	_Default_ISR shr (0+2)
 35582                           
 35583                           ; Vector 31 : TMR0
 35584  000046  7033               	dw	_Default_ISR shr (0+2)
 35585                           
 35586                           ; Vector 32 : TMR1
 35587  000048  7033               	dw	_Default_ISR shr (0+2)
 35588                           
 35589                           ; Vector 33 : TMR1G
 35590  00004A  7033               	dw	_Default_ISR shr (0+2)
 35591                           
 35592                           ; Vector 34 : TMR2
 35593  00004C  7033               	dw	_Default_ISR shr (0+2)
 35594                           
 35595                           ; Vector 35 : CCP1
 35596  00004E  7033               	dw	_Default_ISR shr (0+2)
 35597                           
 35598                           ; Vector 36 : Undefined
 35599  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35600                           
 35601                           ; Vector 37 : NCO1
 35602  000052  7033               	dw	_Default_ISR shr (0+2)
 35603                           
 35604                           ; Vector 38 : CWG1
 35605  000054  7033               	dw	_Default_ISR shr (0+2)
 35606                           
 35607                           ; Vector 39 : CLC1
 35608  000056  7033               	dw	_Default_ISR shr (0+2)
 35609                           
 35610                           ; Vector 40 : INT1
 35611  000058  6DBE               	dw	_INT1_ISR shr (0+2)
 35612                           
 35613                           ; Vector 41 : CMP2
 35614  00005A  7033               	dw	_Default_ISR shr (0+2)
 35615                           
 35616                           ; Vector 42 : DMA2SCNT
 35617  00005C  7033               	dw	_Default_ISR shr (0+2)
 35618                           
 35619                           ; Vector 43 : DMA2DCNT
 35620  00005E  7033               	dw	_Default_ISR shr (0+2)
 35621                           
 35622                           ; Vector 44 : DMA2OR
 35623  000060  7033               	dw	_Default_ISR shr (0+2)
 35624                           
 35625                           ; Vector 45 : DMA2A
 35626  000062  7033               	dw	_Default_ISR shr (0+2)
 35627                           
 35628                           ; Vector 46 : I2C2RX
 35629  000064  7033               	dw	_Default_ISR shr (0+2)
 35630                           
 35631                           ; Vector 47 : I2C2TX
 35632  000066  7033               	dw	_Default_ISR shr (0+2)
 35633                           
 35634                           ; Vector 48 : I2C2
 35635  000068  7033               	dw	_Default_ISR shr (0+2)
 35636                           
 35637                           ; Vector 49 : I2C2E
 35638  00006A  7033               	dw	_Default_ISR shr (0+2)
 35639                           
 35640                           ; Vector 50 : U2RX
 35641  00006C  6F35               	dw	_UART2_rx_vect_isr shr (0+2)
 35642                           
 35643                           ; Vector 51 : U2TX
 35644  00006E  6F2B               	dw	_UART2_tx_vect_isr shr (0+2)
 35645                           
 35646                           ; Vector 52 : U2E
 35647  000070  7033               	dw	_Default_ISR shr (0+2)
 35648                           
 35649                           ; Vector 53 : U2
 35650  000072  7033               	dw	_Default_ISR shr (0+2)
 35651                           
 35652                           ; Vector 54 : TMR3
 35653  000074  6449               	dw	_TMR3_ISR shr (0+2)
 35654                           
 35655                           ; Vector 55 : TMR3G
 35656  000076  7033               	dw	_Default_ISR shr (0+2)
 35657                           
 35658                           ; Vector 56 : TMR4
 35659  000078  7033               	dw	_Default_ISR shr (0+2)
 35660                           
 35661                           ; Vector 57 : CCP2
 35662  00007A  7033               	dw	_Default_ISR shr (0+2)
 35663                           
 35664                           ; Vector 58 : Undefined
 35665  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35666                           
 35667                           ; Vector 59 : CWG2
 35668  00007E  7033               	dw	_Default_ISR shr (0+2)
 35669                           
 35670                           ; Vector 60 : CLC2
 35671  000080  7033               	dw	_Default_ISR shr (0+2)
 35672                           
 35673                           ; Vector 61 : INT2
 35674  000082  7033               	dw	_Default_ISR shr (0+2)
 35675                           
 35676                           ; Vector 62 : Undefined
 35677  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35678                           
 35679                           ; Vector 63 : Undefined
 35680  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35681                           
 35682                           ; Vector 64 : Undefined
 35683  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35684                           
 35685                           ; Vector 65 : Undefined
 35686  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35687                           
 35688                           ; Vector 66 : Undefined
 35689  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35690                           
 35691                           ; Vector 67 : Undefined
 35692  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35693                           
 35694                           ; Vector 68 : Undefined
 35695  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35696                           
 35697                           ; Vector 69 : Undefined
 35698  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35699                           
 35700                           ; Vector 70 : TMR5
 35701  000094  6874               	dw	_TMR5_ISR shr (0+2)
 35702                           
 35703                           ; Vector 71 : TMR5G
 35704  000096  7033               	dw	_Default_ISR shr (0+2)
 35705                           
 35706                           ; Vector 72 : TMR6
 35707  000098  6FC2               	dw	_TMR6_ISR shr (0+2)
 35708                           
 35709                           ; Vector 73 : CCP3
 35710  00009A  7033               	dw	_Default_ISR shr (0+2)
 35711                           
 35712                           ; Vector 74 : CWG3
 35713  00009C  7033               	dw	_Default_ISR shr (0+2)
 35714                           
 35715                           ; Vector 75 : CLC3
 35716  00009E  7033               	dw	_Default_ISR shr (0+2)
 35717                           
 35718                           ; Vector 76 : Undefined
 35719  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35720                           
 35721                           ; Vector 77 : Undefined
 35722  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35723                           
 35724                           ; Vector 78 : Undefined
 35725  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35726                           
 35727                           ; Vector 79 : Undefined
 35728  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35729                           
 35730                           ; Vector 80 : CCP4
 35731  0000A8  7033               	dw	_Default_ISR shr (0+2)
 35732                           
 35733                           ; Vector 81 : CLC4
 35734  0000AA  7033               	dw	_Default_ISR shr (0+2)
 35735  0000AC                     ivt0x8_undefint:
 35736                           	opt callstack 0
 35737  0000AC  00FF               	reset	
 35738                           
 35739                           	psect	text177
 35740  000000                     __ptext177:
 35741                           	opt callstack 0
 35742                           
 35743                           	psect	rparam
 35744  0000                     
 35745                           	psect	temp
 35746  000001                     btemp:
 35747                           	opt callstack 0
 35748  000001                     	ds	32
 35749  0000                     wtemp0	set	btemp
 35750  0000                     wtemp1	set	btemp+2
 35751  0000                     wtemp2	set	btemp+4
 35752  0000                     wtemp3	set	btemp+6
 35753  0000                     wtemp4	set	btemp+8
 35754  0000                     wtemp5	set	btemp+10
 35755  0000                     wtemp8	set	btemp+1
 35756  0000                     ttemp0	set	btemp
 35757  0000                     ttemp1	set	btemp+3
 35758  0000                     ttemp2	set	btemp+6
 35759  0000                     ttemp3	set	btemp+9
 35760  0000                     ttemp5	set	btemp+1
 35761  0000                     ttemp6	set	btemp+4
 35762  0000                     ttemp7	set	btemp+8
 35763  0000                     ltemp0	set	btemp
 35764  0000                     ltemp1	set	btemp+4
 35765  0000                     ltemp2	set	btemp+8
 35766  0000                     lltemp0	set	btemp
 35767  0000                     lltemp1	set	btemp+8
 35768  0000                     lltemp2	set	btemp+16
 35769  0000                     lltemp3	set	btemp+24
 35770                           tosu	equ	0x3FFF
 35771                           tosh	equ	0x3FFE
 35772                           tosl	equ	0x3FFD
 35773                           stkptr	equ	0x3FFC
 35774                           pclatu	equ	0x3FFB
 35775                           pclath	equ	0x3FFA
 35776                           pcl	equ	0x3FF9
 35777                           tblptru	equ	0x3FF8
 35778                           tblptrh	equ	0x3FF7
 35779                           tblptrl	equ	0x3FF6
 35780                           tablat	equ	0x3FF5
 35781                           prodh	equ	0x3FF4
 35782                           prodl	equ	0x3FF3
 35783                           indf0	equ	0x3FEF
 35784                           postinc0	equ	0x3FEE
 35785                           postdec0	equ	0x3FED
 35786                           preinc0	equ	0x3FEC
 35787                           plusw0	equ	0x3FEB
 35788                           fsr0h	equ	0x3FEA
 35789                           fsr0l	equ	0x3FE9
 35790                           wreg	equ	0x3FE8
 35791                           indf1	equ	0x3FE7
 35792                           postinc1	equ	0x3FE6
 35793                           postdec1	equ	0x3FE5
 35794                           preinc1	equ	0x3FE4
 35795                           plusw1	equ	0x3FE3
 35796                           fsr1h	equ	0x3FE2
 35797                           fsr1l	equ	0x3FE1
 35798                           bsr	equ	0x3FE0
 35799                           indf2	equ	0x3FDF
 35800                           postinc2	equ	0x3FDE
 35801                           postdec2	equ	0x3FDD
 35802                           preinc2	equ	0x3FDC
 35803                           plusw2	equ	0x3FDB
 35804                           fsr2h	equ	0x3FDA
 35805                           fsr2l	equ	0x3FD9
 35806                           status	equ	0x3FD8


Data Sizes:
    Strings     958
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6137_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_65(CODE[121]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[7]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4552tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  384403
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan  2 01:35:37 2020

                     _SPI1_Exchange8bit BE58                __end_of_set_display_info BEB2  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FB25                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BBBA            __end_of_start_switch_handler BE38  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC2D                  __end_of_FVR_Initialize C0B2  
                        _check_day_time 8812                             __CFG_LVP$ON 000000  
                                   l169 BF8E                                     l807 BE66  
                                   l673 BA22                                     _GIE 01FE97  
                                   _abs B4E4                                     _pad 9ADE  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BF3A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BD8C  
                     _update_adc_result B736                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BD20  
                          __CFG_ZCD$OFF 000000                                    l1002 B6B0  
                                  l2042 3A40                                    l2203 123A  
                                  l1340 190A                                    l1324 12A2  
                                  l2046 3D46                                    l1190 B6F0  
                                  l3022 457A                                    l1350 19AC  
                                  l1342 1910                                    l2232 066A  
                                  l1360 1BB2                                    l2321 60DE  
                                  l1361 1DDC                                    l2306 6804  
                                  l2147 9B3A                         _timer3ReloadVal 00C4  
                                  l3124 7B90                                    l3062 864C  
                                  l1606 B7F8                                    l1366 2354  
                                  l2167 58AC                                    l2247 0B1A  
                                  l1447 B18C                                    l2088 73E4  
                                  l1722 BEAE                                    l2371 3336  
                                  l3093 B524                                    l2701 8FB6  
                                  l3085 8B3E                                    l2285 74D2  
                                  l1591 AAD8                                    l1665 B78C  
                                  l3193 98A2                                    l1682 9CFE  
                                  l1674 82F2                                    l1835 8808  
                                  l1587 A7D2                                    l1675 844E  
                                  l3460 8236                    _ADCC_StartConversion BFA8  
                                  l2663 A514                                    l1784 57C8  
                                  l2674 9118                                    l1882 A0FC  
                                  l2667 9044                                    l3475 ACF6  
                                  l2941 4D36                                    l1895 89A8  
                                  l1967 AB6C                                    l3488 AC72  
                                  l1976 9F0A                                    l2953 4BC6  
                                  l1899 89A0                                    l8013 AC62  
                                  l8201 5106                                    l8121 4E1C  
                                  l8041 77A2                                    l2986 52B0  
                                  l8115 4DD6                                    l8035 775C  
                                  l8301 3F16                                    l8205 512C  
                                  l8141 4EFA                                    l8109 4D96  
                                  l8053 7874                                    l8029 7708  
                                  l8215 5176                                    l8135 4EB4  
                                  l8119 4DEC                                    l8241 525C  
                                  l8161 4F8C                                    l8153 4F72  
                                  l8129 4E74                                    l8081 7EC6  
                                  l8073 7E3E                                    l8235 522C  
                                  l8219 517C                                    l8171 501C  
                                  l8147 4F38                                    l8139 4ECA  
                                  l8405 4528                                    l8229 51F0  
                                  l8181 5064                                    l8407 4542  
                                  l8271 3DF0                                    l7703 470A  
                                  l8247 5284                                    l8511 A4DE  
                                  l8353 436E                                    l8273 3DF6  
                                  l8265 3DB0                                    l8249 5294  
                                  l8089 7F72                                    l8433 92C0  
                                  l9305 80A8                                    l8363 43B0  
                                  l8291 3EC4                                    l8283 3E7E  
                                  l8275 3E26                                    l7811 4B76  
                                  l7715 4772                                    l7707 4720  
                                  l8523 9002                                    l8195 50EA  
                                  l8187 50B8                                    l8179 5052  
                                  l8427 92AA                                    l8515 A512  
                                  l8507 A49C                                    l9307 8114  
                                  l8611 8DEE                                    l8373 43FA  
                                  l8293 3EF4                                    l7709 4750  
                                  l8541 9116                                    l8533 90E0  
                                  l8189 50BC                                    l9253 7940  
                                  l7645 A8A6                                    l8461 93BA  
                                  l8453 9386                                    l8391 44BA  
                                  l8359 438A                                    l9271 7A1A  
                                  l9263 79D6                                    l9255 7962  
                                  l7647 A8C8                                    l8439 92E0  
                                  l8631 9600                                    l8623 9554  
                                  l8377 4400                                    l8289 3EBE  
                                  l7833 4C06                                    l7809 4B50  
                                  l7761 4954                                    l7745 48B0  
                                  l7673 45DA                                    l8529 9092  
                                  l9273 7A3E                                    l8481 9A10  
                                  l8473 99E6                                    l8387 4474  
                                  l7843 4C2E                                    l7827 4BE8  
                                  l7819 4BAA                                    l7755 4922  
                                  l7691 4698                                    l7683 4630  
                                  l9275 7A7C                                    l7915 B514  
                                  l8491 9A90                                    l8397 44E4  
                                  l7829 4BFA                                    l7765 495E  
                                  l7685 4660                                    l9605 862C  
                                  l9621 52EC                                    l9269 7A02  
                                  l8477 99F8                                    l8549 B3E2  
                                  l7933 8AE0                                    l7847 4C34  
                                  l7759 4942                                    l7679 461A  
                                  l9631 543E                                    l9615 52BC  
                                  l8647 B2CA                                    l9279 7AE4  
                                  l8583 8F4E                                    l8575 8F22  
                                  l8559 8EA0                                    l7881 4D16  
                                  l7873 4CD6                                    l7793 4A46  
                                  l7769 498E                                    l7697 46CA  
                                  l9289 7B80                                    l8585 8F64  
                                  l8577 8F3E                                    l7929 8ADC  
                                  l9803 894E                                    l7875 4CE6  
                                  l7859 4C92                                    l7787 4A2A  
                                  l9571 8508                                    l9563 849C  
                                  l9643 557E                                    l9635 554C  
                                  l8499 9AC4                                    l7939 8B36  
                                  l7971 6572                                    l7869 4CBE  
                                  l7789 4A3C                                    l7797 4A78  
                                  l9573 8516                                    l9661 5796  
                                  l7957 ACE6                                    l9821 B802  
                                  l9583 8578                                    l9575 852C  
                                  l9655 56FA                                    l9647 561A  
                                  l7991 6728                                    l8599 8D1C  
                                  l9585 8596                                    l9577 854A  
                                  l7985 6690                                    l9595 85CA  
                                  l9587 85AC                                    l7995 6796  
                                  l7987 66E0                                    l9669 57A8  
                                  l9791 88DC                                    l9687 BAEA  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FE16                                    STR_6 FE16  
                                  STR_7 FE16                                    STR_8 FF0B  
                                  l9887 B306                                    l9879 B9B4  
                                  STR_9 FD06                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 8B2E                                    u6020 8B30  
                                  u6005 8B10                                    u6200 AC20  
                                  u6130 6636                                    u6050 ACA4  
                                  u6210 AC22                                    _T6PR 003F93  
                                  u6115 6590                                    u5420 A8F6  
                                  u6300 779C                                    u7100 A50E  
                                  u6116 6596                                    u6060 ACA6  
                                  _PMD0 0039C0                                    u6117 65A4  
                                  _PMD1 0039C1                                    u6230 B968  
                                  u6310 77CE                                    u6150 670E  
                                  _PMD2 0039C2                                    u6135 662C  
                                  _PMD3 0039C3                                    u6240 B96A  
                                  u6400 7E8E                                    u7040 9A3C  
                                  u6080 650A                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5610 4986  
                                  u6330 78AC                                    u6410 7EC0  
                                  u6090 6556                                    u5450 B938  
                                  _PMD6 0039C6                                    u5427 A8E8  
                                  u6155 6704                                    _PMD7 0039C7  
                                  u5620 49A6                                    u6260 7702  
                                  u6420 7EF2                                    u7060 9AB0  
                                  u5460 B93A                                    u6180 B5A8  
                                  u6085 6500                                    u6350 78FE  
                                  u7310 8E26                                    u6190 B5AA  
                                  u5615 4976                                    u5720 4B98  
                                  u5560 48D6                                    u6600 50E4  
                                  u6280 7758                                    u6440 7FAA  
                                  u7160 B3DE                                    u7240 8F6C  
                                  u5570 48F6                                    u7170 8E80  
                                  u7330 954E                                    u5571 48F0  
                                  u6291 7762                                    u5820 4C82  
                                  u6700 5240                                    u6460 7FFC  
                                  u6380 7E38                                    u7260 8F96  
                                  u7180 8E94                                    u7340 9580  
                                  u5900 B90A                                    u7190 8ECE  
                                  u7175 8E76                                    u7271 8CDC  
                                  u5760 4C0C                                    u5680 4A6E  
                                  u6640 516E                                    u9200 565E  
                                  u7280 8D16                                    u7360 9638  
                                  u5825 4C72                                    u5850 4CA2  
                                  u9050 85C0                                    u9114 5306  
                                  u7290 8D48                                    u9115 5300  
                                  u7195 8EC4                                    u6900 444E  
                                  u5780 4C26                                    u5588 48F8  
                                  u7380 B2A6                                    u6805 4098  
                                  u5685 4A5E                                    u6910 4488  
                                  u9134 5328                                    u7390 B2C6  
                                  u5950 B4F8                                    u6815 4160  
                                  u9135 5322                                    u6920 44CE  
                                  u6680 51CA                                    u5960 8A60  
                                  u8600 8142                                    u6905 443E  
                                  u6825 4328                                    u6690 5204  
                                  u9154 5566                                    u8530 79D2  
                                  u5890 B908                                    u9155 5560  
                                  u6860 43F2                                    u6685 51BA  
                                  u5965 8A56                                    u9430 AF48  
                                  u6790 3F04                                    u9174 5634  
                                  u9094 52D6                                    u8550 7B2A  
                                  u9175 562E                                    u9095 52D0  
                                  u8607 8134                                    u8560 7B2C  
                                  u8640 81DC                                    u9505 BFD4  
                                  u9194 5656                                    u6970 930C  
                                  u8650 820A                                    u9506 BFD6  
                                  u9195 5650                                    u9515 BFC4  
                                  u9516 BFC6                                    u8645 81D6  
                                  u9550 866C                                    u6990 93A6  
                                  u9455 AF7C                                    u9375 B5E4  
                                  u8647 81C8                                    u9456 AF7E  
                                  u9448 AF4A                                    u9640 BE02  
                                  u8657 81FC                                    _PLLR 01CEE0  
                                  u9646 BE04                                    u9750 AB12  
                                  u9780 AB58                                    u9768 AB14  
                                  u9798 AB5A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B9FC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FC3D                                    _cp_l FC39  
                                  _atoi 7926                                    _ctoa AB70  
                                  _main 1244                                    _dtoa 57CE  
                                  _nanf B066                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FBB5                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 73E8                                    btemp 0001  
                                  _utoa 67C0                                    _xtoa 609A  
                __end_of_check_adc_scan C09A                           ___fpclassifyf 89B2  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BE76               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B49C             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BC84                            ___param_bank 000000  
                __end_of_check_day_time 89B2                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C042                        __end_of_INT1_ISR B736  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A7DA  
         __end_of_OSCILLATOR_Initialize BF94                                   l11013 B66E  
                                 l12001 06F0                                   l10341 868E  
                                 l12103 0F3A                                   l12031 0A48  
                                 l12007 077A                                   l10281 B364  
                                 l11073 AD38                                   l10353 86CE  
                                 l12041 0B34                                   l12017 0926  
                                 l10277 B332                                   l10461 93FE  
                                 l10349 86BA                                   l12117 0FD6  
                                 l12213 7666                                   l12205 75FE  
                                 l10429 B756                                   l13021 1942  
                                 l11079 AD48                                   l10463 9404  
                                 l10471 9420                                   l12119 0FF0  
                                 l12055 0C32                                   l12039 0B12  
                                 l12303 629A                                   l12311 6320  
                                 l10465 940A                                   l10473 944C  
                                 l12129 1092                                   l12209 762A  
                                 l13105 225A                                   l13041 199C  
                                 l13033 1976                                   l13009 17BC  
                                 l10651 BECA                                   l10707 B6D8  
                                 l10467 9418                                   l10459 93EE  
                                 l10803 8CA8                                   l10387 B7A2  
                                 l12155 119A                                   l12139 10E2  
                                 l12067 0CBA                                   l12075 0D24  
                                 l12083 0D90                                   l12091 0EA2  
                                 l12235 6850                                   l12227 67F4  
                                 l12403 27AC                                   l10811 A118  
                                 l13051 19BE                                   l13019 1914  
                                 l12245 6A46                                   l12421 2930  
                                 l12413 2844                                   l13133 2304  
                                 l13125 22CE                                   l13109 227E  
                                 l10663 BA1E                                   l10487 94FE  
                                 l10479 9484                                   l12191 7508  
                                 l12175 7454                                   l12327 640A  
                                 l10591 998C                                   l13127 22E6  
                                 l13119 22BC                                   l13063 1ABE  
                                 l11713 A970                                   l12273 6108  
                                 l12513 312C                                   l12425 2984  
                                 l12361 2476                                   l10841 7142  
                                 l10817 A1BE                                   l13137 232A  
                                 l11723 9B32                                   l12195 7544  
                                 l12267 60CE                                   l12363 24B0  
                                 l10923 A562                                   l10843 7146  
                                 l10907 73AC                                   l10499 AB26  
                                 l10587 98E8                                   l13147 2380  
                                 l13075 1FFE                                   l13091 2208  
                                 l12701 3868                                   l11709 A932  
                                 l11733 9BCA                                   l11725 9B44  
                                 l11821 58E6                                   l11813 589C  
                                 l12533 32BE                                   l12445 2B96  
                                 l12437 2ADE                                   l12365 24C6  
                                 l10853 7182                                   l10909 73D4  
                                 PRLOCK 0039EF                                   l12711 39A8  
                                 l11719 9B0A                                   l11903 01EA  
                                 l11911 0258                                   l12199 7574  
                                 l12287 61A4                                   l12279 6144  
                                 l12527 3264                                   l12383 25F8  
                                 l12543 32E2                                   l10919 A524  
                                 l10839 7132                                   l13079 2060  
                                 l12705 38E2                                   l10689 B698  
                                 l11729 9B80                                   l11825 5904  
                                 l11921 02FC                                   l11905 0216  
                                 l12537 32C2                                   l12449 2BCA  
                                 l12385 2632                                   l11761 6F82  
                                 l10865 71D4                                   l10849 7176  
                                 l13089 21DC                                   l12731 3D3E  
                                 l12715 3A50                                   l11835 5B16  
                                 l11739 A3CE                                   l11907 022C  
                                 l12387 2648                                   l11755 6EC4  
                                 l10859 71AC                                   l11941 0406  
                                 l12469 2D2A                                   l12629 9C16  
                                 l10885 7254                                   l10877 722E  
                                 l10869 71E0                                   l10973 9E18  
                                 l12719 3A72                                   l10967 608C  
                                 l11855 5BC8                                   l11943 0470  
                                 l12479 2DD8                                   l11775 709A  
                                 l11767 6FEC                                   l12583 A832  
                                 l12681 34EA                                   l12673 342A  
                                 l11697 97B8                                   l11937 0396  
                                 l11929 032A                                   l11873 00AC  
                                 l12489 2EFA                                   l10985 9E74  
                                 l12691 363C                                   l11787 AB8E  
                                 l11859 5C04                                   l11971 0594  
                                 l11963 057C                                   l11947 04D2  
                                 l12499 2FB0                                   l12843 83EA  
                                 l10995 9EE4                                   l12685 3556  
                                 l12677 347E                                   l11789 ABBA  
                                 l11981 0602                                   l11965 058E  
                                 l11885 00F0                                   l11893 0146  
                                 l12597 A6B0                                   l12829 82C2  
                                 l12695 3690                                   l11959 0554  
                                 l12599 A6F2                                   l11979 05F6  
                                 l12891 1284                                   l11997 06B8  
                                 l12949 146E                                   l12893 128C  
                                 l12897 12AA                                   l12899 12BC  
                                 l12997 16E2                         __end_of___aodiv 7926  
                          _Volts_to_SOC 98AC                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D40  
                                 _ADCLK 003EFF                         __end_of___aomod 8020  
                                 _ADPCH 003EF1                         __end_of___fldiv 52BA  
                                 _ADREF 003EFD                         __end_of___awdiv 93D4  
                       __end_of___flneg B40C                                   STR_10 FD33  
                                 STR_11 FD49                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FDEC                                   STR_23 FEBF  
                                 STR_31 FE4D                                   STR_15 FD5F  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE60                                   STR_16 FD1D  
                                 STR_41 FF83                                   STR_33 FE73  
                                 STR_25 FD9C                                   STR_17 FCBA  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE99  
                                 STR_34 FDB0                                   STR_18 FCD4  
                                 STR_51 FFBD                                   STR_43 FFFC  
                                 STR_19 FF83                                   STR_27 FE86  
                                 STR_35 FE00                                   STR_44 FFF9  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD88                         __end_of___awmod 9ADE  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD74                                   STR_54 FF93  
                                 STR_70 FFDB                                   STR_46 FFB1  
                                 STR_38 FDC4                                   STR_71 FFE3  
                                 STR_47 FFC7                                   STR_39 FDD8  
                                 STR_55 FCEE                                   STR_64 FCB9  
                                 STR_80 FFF0                                   STR_48 FE27  
                                 _ADRPT 003EEC                                   STR_49 FE27  
                                 STR_57 FE3A                                   STR_65 FC41  
                                 STR_90 FFF3                                   STR_74 FFEA  
                                 STR_66 FFD7                                   STR_58 FE14  
                                 STR_83 FFED                                   STR_67 FFDF  
                                 STR_76 FFEA                                   STR_85 FFED  
                                 STR_93 FFF6                                   STR_78 FFF0  
                                 STR_95 FFF6                                   STR_88 FFF3  
                       __end_of___flmul 4584                                   STR_97 FFE7  
                                 STR_99 FFE7                         __end_of___flsub B570  
                       __end_of___fltol 8FC0                                   u11000 5B2A  
                                 u11011 5B5A                                   u11020 5B70  
                                 u11100 00DA                                   u11021 5B6E  
                                 u11030 5B84                                   u11040 5B88  
                                 u12000 250E                                   u11130 0194  
                                 u12010 2510                                   u11060 5B9E  
                                 u11220 050E                                   u11140 0196  
                                 u12020 2536                                   u11320 0648  
                                 u12120 2898                                   u11250 0562  
                                 u11170 02A6                                   u12050 2690  
                       __end_of___lodiv 8E4E                                   u11180 02A8  
                                 u12140 2A0C                                   u12060 2692  
                                 u12070 26B8                                   u11280 05C6  
                                 u12240 3004                                   u12170 2C84  
                                 _U1P1H 003DED                                   u12260 31B4  
                                 u12180 2C86                                   _U1P2H 003DEF  
                                 u10750 97AC                                   u10830 A448  
                                 u11550 10B8                                   u11390 0A18  
                                 u11710 67DA                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10920 57FE                                   u12280 A812  
                                 u12600 1594                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10770 9828  
                                 u10930 5800                                   u11570 116E  
                                 u11490 0EE4                                   u11650 756A  
                                 _U1P3L 003DF0                                   u11580 1170  
                                 u11660 75B0                                   u11900 633C  
                                 u11820 619C                                   u12540 843A  
                                 u12620 17EA                                   u10837 A43A  
                                 u11741 6A88                                   u10950 5870  
                                 u11750 6A9E                                   u11830 61F0  
                                 u12550 843C                                   _U2P1L 003DD4  
                                 u11751 6A9C                                   u11911 636C  
                                 u11760 6AB2                                   u11920 6382  
                                 u11840 61F2                                   u12720 224A  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11921 6380                                   u10970 5882  
                                 u11690 768C                                   u11770 6AB6  
                                 u11930 6396                                   u10890 710E  
                                 u12730 2264                                   _U2P3L 003DD8  
                                 u11667 75A2                                   u11940 639A  
                                 u11860 6250                                   u12740 2276  
                                 u10990 58D2                                   u11870 6252  
                                 u11790 60B4                                   u12726 224C  
                                 _T5CLK 003F9D                                   u12736 2266  
                       __end_of___lomod 965A                                   u11890 631C  
                                 u12746 2278                                   _T2HLT 003FAD  
                                 u11895 62FE                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result B770                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C0CC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 9286                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A2B2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR BF22  
                          _DMA1CON1bits 003BFD                                   _fabsf A5D6  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C032                                   _fputc 9788  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha B5B4  
                                 _fputs A922                         __end_of_isdigit B974  
                       __end_of_ivln2_h FC39                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B84C                                   _width 003A  
                                 _putch BEEC            __end_of_set_ac_charger_relay BFFA  
                       __end_of_islower B914                         __end_of_isspace B2DA  
              _INT1_SetInterruptHandler BBE2                         __end_of_isupper B944  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BB6A             _UART1_SetRxInterruptHandler BB42  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9E0C  
                       __end_of_tolower AD00                         __end_of_strncmp 8240  
                       __end_of_toupper AC7C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BCAC                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B454                   __end_of_ringBufS_init BACA  
                       __initialization A2B2                       _UART2_rx_vect_isr BCD4  
                          __end_of_cp_h FC41                            __end_of_cp_l FC3D  
                          __end_of_atoi 7B9A                            __end_of_ctoa ABF8  
                          __end_of_main 2394                            __end_of_dtoa 5C4E  
                          __end_of_nanf B0C8                            __end_of_spin FC2D  
                          __end_of_stoa 76A6                            __end_of_utoa 6B00  
                          __end_of_xtoa 6454                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize BF52  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B676  
              _TMR5_SetInterruptHandler BB92                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr C05C                      esr_check@esr_state 0040  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize BA28                         _PWM8_Initialize BF68  
                      _UART1_Initialize B40C                       _UART2_tx_vect_isr BCAC  
                    _UART2_Transmit_ISR B9FC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan AFA0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue B5B4                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 A262  
                                _RB6PPS 003A0E                                  i1l1207 91EE  
                  _start_switch_handler BE18                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B4E4  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright C016                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u923_25 BFF4  
                                u923_26 BFF6                                  u942_20 C02E  
                                u928_20 8868                    __size_of_hid_display 0102  
                                u972_24 94F4                                  u972_25 94F0  
                                u949_20 B7B0                                  u949_26 B7B2  
                                u965_28 93F4                                  u968_20 9414  
                                u968_21 940E                                  u997_48 BD9C  
                                u999_28 BD30                        __end_of___xxtofl 8656  
 __end_of_ADCC_DischargeSampleCapacitor C092  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor C08A                __end_of_send_lcd_cmd_dma B288  
                       _TMR3_WriteTimer B6B6                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr BCFC              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize C052                        _UART2_Initialize B0C8  
                                _WaitMs B7E0                         _conv_raw_result 52BA  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8FC0                                  ___fleq A45A  
                     _ADCC_ThresholdISR AED0                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush AA4E                                  _efgtoa 0000  
                                _floorf 6454                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E2C                    __size_of_help_button 0038  
                                clear_0 A324                                  clear_1 A338  
                                clear_2 A34A                                  clear_3 A356  
                                clear_4 A362                                  clear_5 A36E  
             __end_of_port_data_dma_ptr C066                                  _printf B004  
                    _eaDogM_WriteString A7DA                                  _strcpy A386  
                             ?_ADCC_ISR 0021                                  _strlen A880  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize AE64                          _PMD_Initialize BF94  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr BCD4  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B004  
                          __mediumconst FA54                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay B1DC                        __end_of_spinners A1CE  
                      __end_of_vfprintf A730                              _StartTimer B5F6  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize B49C                       _SYSTEM_Initialize B37A  
                            __accesstop 0060                 __end_of__initialization A380  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help C0AA                    __end_of_display_info C0A2  
             __end_of_CLKREF_Initialize C05C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer B676  
                 _set_temp_display_help BFDA                        _clear_hid_pflags BCFC  
                 __end_of_TMR3_CallBack BD8C               __end_of_ADCC_ThresholdISR AF3A  
                    __size_of_calc_bsoc 0A1A                  __end_of_ringBufS_flush AAE0  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 BFFA  
                          __pidataBANK1 9F0E             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf A684                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 98AC  
                         __end_of_fputs A9BA                    _get_ac_charger_relay C024  
                         __end_of_srand B880                   __end_of_TMR5_CallBack BD68  
                         __end_of_putch BF06                    _set_ac_charger_relay BFEA  
               __end_of_PWM8_Initialize BF7E                 __end_of_TMR6_Initialize BA52  
                     _adc_int_t_handler AD00                  __end_of_PMD_Initialize BFA8  
                            __end_of_bp FC35                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack BDD4             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0041                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR C074                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan C0B2                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize B3C4                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer B6F6  
                            __pbssBANK0 0060                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 8240                 __end_of_conv_raw_result 57CE  
                    __size_of_esr_check 02D0                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BAF2                        _DMA1_DMADCNT_ISR C068  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B8B4                   __end_of_wait_lcd_done BEEC  
      __end_of_TMR3_SetInterruptHandler BBE2                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler BB92                              ??_TMR3_ISR 00D7  
               __end_of_ADCC_Initialize AECE                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler AD82                              ??_TMR6_ISR 0026  
                     __end_of___asfladd ADFA                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler BC5A  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler BC32  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR BEB2  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C0B8                                 u1005_48 BDC0  
                               u1008_28 BD54                                 u1037_44 AD68  
                               u1037_45 AD62                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR C044                                 u1240_20 3998  
                               _U1ERRIE 003DFA                                 u1242_20 3A62  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1247_28 BD78                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3D5A                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch B9A2                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer B6B6                 __size_of_switch_handler 0146  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one BFDA  
            __end_of_set_load_relay_two BFCA       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8B48  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim BF22  
                               __Lparam 0000                __end_of_UART1_Initialize B454  
                     __end_of_hid_input AB70                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 76A6                                 ___fladd 4584  
                               ___aomod 7DE0                                 ___fldiv 4D40  
                               ___awdiv 9286                                 ___flneg B3C4  
                               ___awmod 99C6                                 ___flmul 3D5A  
                               ___flsub B52A                                 ___fltol 8E4E  
                               ___lodiv 8CCE                                 ___lomod 951A  
             __end_of_UART1_Receive_ISR BED0                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A0E8  
                               __pcinit A2B2                __end_of_mode_lamp_bright C024  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C008                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B128  
                               __ptext2 BE18                                 __ptext3 B84C  
                               __ptext4 A0E8                                 __ptext5 B8B4  
                               __ptext6 9FFE                                 __ptext7 BA52  
                               __ptext8 BA7A                                 __ptext9 BE58  
                     __end_of_esr_check 73E8                       _UART2_Receive_ISR BE38  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize BF7E                            __size_of_abs 0046  
                               us636999 7910                                 us732999 8E38  
                          __size_of_pad 0114                       __end_of_init_bsoc 7DE0  
                               _isalpha B570                                 us647999 800E  
                               _isdigit B944                                 us737999 964A  
                               _ivln2_h FC35                               _T3CONbits 003FA6  
                               _mode_sw 00CA                       __end_of_lp_filter 8812  
                               _islower B8E4                                 _isspace B288  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize B128                                 _isupper B914  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9D02  
                               _tolower AC7C                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 8020                                 _toupper ABF8  
                  end_of_initialization A380               __size_of_convert_adc_data 00B8  
                    _check_enter_button B636                               i1u1256_20 91E4  
   __end_of_UART2_SetRxInterruptHandler BB42             _UART2_SetRxInterruptHandler BB1A  
                             i2u1040_48 B9E8                               i2u1042_48 AF06  
                             i2u1042_49 AF1A                               i2u1044_48 BC98  
                             i2u1046_48 BCC0                               i2u1048_48 BCE8  
               check_day_time@day_delay 0042                       __end_of_set_vterm BE94  
                     __end_of_vfpfcnvrt 3340                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 0082                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C0C4               __end_of_UART2_Receive_ISR BE58  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc C0CA  
              _TMR3_SetInterruptHandler BBBA                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler BB6A                            _display_help C0A2  
                 _TMR5_InterruptHandler 00A5                            _display_info C09A  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags BD20  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler BC82  
           _ADCC_SetADIInterruptHandler BC5A                              _update_lcd 9BF2  
                       _calc_model_data 5C4E                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B128  
                       _DMA1_Initialize ADFA                              _start_bsoc BDF6  
                       _SPI1_Initialize BF52                   __end_of_get_vterm_ptr B9A2  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B816            __end_of_INTERRUPT_Initialize AFA0  
                            _vterm_dump 965A                          __end_of___flge 9122  
                        __end_of___fleq A51E    __end_of_INT0_DefaultInterruptHandler C0D8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C0D6  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B1DC  
                         __pidataBIGRAM 6B00                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67C0             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7118  
                        __end_of_printf B066                __end_of_DMA1_DMADCNT_ISR C072  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BDB0  
                        __end_of_strcpy A45A                          __end_of_strlen A922  
                   start_initialization A2B2    __end_of_TMR5_DefaultInterruptHandler B7E0  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B7A8  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs B52A  
                 __end_of_INT1_CallBack BD44               __size_of_set_display_info 001E  
                           __end_of_pad 9BF2                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BAA2                          _switch_handler 93D4  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B48  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C052  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C080  
                   __end_of_hid_display 9F0E              __end_of_send_port_data_dma B32C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BACA  
                         _ringBufS_init BAA2                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B8B4  
               __end_of_calc_model_data 609A                     __end_of_help_button B7A8  
       __end_of_eaDogM_WriteStringAtPos B84C                     __end_of_BVSOC_TABLE FB25  
                             ___asfladd AD82                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 082A                 __end_of_DMA1_Initialize AE64  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler BC32                           __pcstackBANK0 00D7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 951A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BF68                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FBB5  
                      _convert_adc_data A51E                               _calc_bsoc 3340  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9FFE  
                __end_of_DMA1_DMAOR_ISR C08A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize B236  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize A9BA  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set C0BE  
                         __pmediumconst FA54                               __ptext100 5C4E  
                             __ptext101 C0C4                               __ptext110 BB1A  
                             __ptext102 BDF6                               __ptext111 B40C  
                             __ptext103 8656                               __ptext120 BF52  
                             __ptext112 BB42                               __ptext104 B52A  
                             __ptext121 BF68                               __ptext113 BA28  
                             __ptext105 4584                               __ptext130 B1DC  
                             __ptext122 BF94                               __ptext114 BB6A  
                             __ptext106 3D5A                               __ptext131 ADFA  
                             __ptext123 A9BA                               __ptext115 B454  
                             __ptext107 B37A                               __ptext140 A1D0  
                             __ptext132 C052                               __ptext124 BF7E  
                             __ptext116 BB92                               __ptext108 B0C8  
                             __ptext141 B676                               __ptext133 AE64  
                             __ptext125 AF3A                               __ptext117 B49C  
                             __ptext109 BAF2                               __ptext150 C0D4  
                             __ptext142 BD44                               __ptext134 BC32  
                             __ptext126 C0AA                               __ptext118 BBBA  
                             __ptext151 3340                               __ptext143 B7A8  
                             __ptext135 BC5A                               __ptext127 B880  
                             __ptext119 BF3A                               __ptext160 AD00  
                             __ptext152 B2DA                               __ptext144 8812  
                             __ptext136 B6F8                               __ptext128 BBE2  
                             __ptext161 C0D8                               __ptext153 C05C  
                             __ptext145 BFEA                               __ptext137 BD20  
                             __ptext129 BC0A                               __ptext170 BF08  
                             __ptext162 C0DA                               __ptext154 AD82  
                             __ptext146 C024                               __ptext138 C0D2  
                             __ptext171 BDB0                               __ptext163 AED0  
                             __ptext155 C034                               __ptext147 9124  
                             __ptext139 93D4                               __ptext172 B32C  
                             __ptext164 BC84                               __ptext156 BD8C  
                             __ptext148 B6B6                               __ptext173 C044  
                             __ptext165 BEB2                               __ptext157 C0D6  
                             __ptext149 BD68                               __ptext174 C068  
                             __ptext166 BCAC                               __ptext158 C0CC  
                             __ptext175 C074                               __ptext167 B9FC  
                             __ptext159 B9D0                               __ptext176 C080  
                             __ptext168 BCD4                               __ptext177 0000  
                             __ptext169 BE38                               _hid_input AAE0  
                    __end_of_StartTimer B636                      _set_load_relay_one BFCA  
                    _set_load_relay_two BFBA                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B9D0                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7118  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 7B9A                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8656  
                           _hid_display 9E0C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize AF3A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C034  
                              _INT1_ISR B6F8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BD68  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BE76  
                   __size_of_update_lcd 0110                             _help_button B770  
                              _TMR3_ISR 9124                             _BVSOC_TABLE FA55  
                              _TMR5_ISR A1D0                                _TMR6_ISR BF08  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2394                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BD44  
                            _ADCON0bits 003EF8                      __end_of_check_help 8452  
                             _start_lcd C0BE                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack BDB0  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C0C4                        _set_display_info BE94  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A2C6  
                             copy_data1 A2EC                               copy_data2 A30E  
              _INT0_SetInterruptHandler BC0A                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BB1A             _UART2_SetTxInterruptHandler BAF2  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BED0                            _send_lcd_cmd BA7A  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C0DA                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch B9CE  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C07E  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8452  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C016  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BAA2                                __ptext11 7B9A  
                              __ptext20 C08A                                __ptext12 98AC  
                              __ptext21 C0B2                                __ptext13 9E0C  
                              __ptext30 9D02                                __ptext22 C092  
                              __ptext14 AAE0                                __ptext31 B974  
                              __ptext23 BFBA                                __ptext15 B9A2  
                              __ptext40 C0BE                                __ptext32 B7E0  
                              __ptext24 BFCA                                __ptext16 7118  
                              __ptext41 AA4E                                __ptext33 9BF2  
                              __ptext25 C008                                __ptext17 B736  
                              __ptext50 67C0                                __ptext42 6E2C  
                              __ptext34 B816                                __ptext26 A51E  
                              __ptext18 AFA0                                __ptext51 951A  
                              __ptext43 B004                                __ptext35 B236  
                              __ptext27 BCFC                                __ptext19 BFA8  
                              __ptext60 89B2                                __ptext52 8CCE  
                              __ptext44 A684                                __ptext36 BED0  
                              __ptext28 8240                                __ptext61 8E4E  
                              __ptext53 8020                                __ptext45 2394  
                              __ptext37 B182                                __ptext29 965A  
                              __ptext70 AB70                                __ptext62 B3C4  
                              __ptext54 73E8                                __ptext46 609A  
                              __ptext38 A7DA                                __ptext71 9ADE  
                              __ptext63 A45A                                __ptext55 0000  
                              __ptext47 ABF8                                __ptext39 C0B8  
                              __ptext80 BE76                                __ptext72 A880  
                              __ptext64 99C6                                __ptext56 AC7C  
                              __ptext48 B8E4                                __ptext81 BFDA  
                              __ptext73 A922                                __ptext65 9286  
                              __ptext57 B914                                __ptext49 B570  
                              __ptext90 C0A2                                __ptext82 BE94  
                              __ptext74 9788                                __ptext66 57CE  
                              __ptext58 A386                                __ptext91 B636  
                              __ptext83 BF22                                __ptext75 BEEC  
                              __ptext67 B4E4                                __ptext59 6454  
                              __ptext92 8B48                                __ptext84 C016  
                              __ptext76 A730                                __ptext68 7DE0  
                              __ptext93 A5D6                                __ptext85 B5B4  
                              __ptext77 7926                                __ptext69 76A6  
                              __ptext94 52BA                                __ptext86 B770  
                              __ptext78 B288                                __ptext95 B066  
                              __ptext87 BACA                                __ptext79 B944  
                              __ptext96 BDD4                                __ptext88 B5F6  
                              __ptext97 8452                                __ptext89 C09A  
                              __ptext98 4D40                                __ptext99 8FC0  
                      __size_of_isupper 0030                                us1160999 73FA  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1091999 57E8                                us1172999 6826  
                              us1181999 611A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A730  
                  __end_of_Volts_to_SOC 99C6                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1150  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B8E4                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion BFBA                                _spi_link 0060  
                              _wdtdelay B182              __end_of_UART2_Transmit_ISR BA28  
                              _spinners A0E8                                _vfprintf A684  
              __end_of_convert_adc_data A5D6              __end_of_PWM8_LoadDutyValue B5F6  
  __end_of_TMR3_DefaultInterruptHandler C0D6   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C0D4    __end_of_INT1_DefaultInterruptHandler C0D4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C0D2  
                    _send_port_data_dma B2DA                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BDD4                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C0B8  
                    _EXT_INT_Initialize B880    __end_of_TMR6_DefaultInterruptHandler B37A  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B32C  
  __end_of_ADCC_DefaultInterruptHandler C0DA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C0D8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BA52  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help BFEA  
                 __end_of_calc_ror_data 8CCE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A880                   __end_of_mode_lamp_dim BF3A  
               __end_of_adc_int_handler C0DC                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9D02  
                _uart2TxBufferRemaining 0044                      __end_of_static_soc B182  
                    __end_of_start_bsoc BE18                          _FVR_Initialize C0AA  
                __end_of_get_raw_result BDF6                        _send_lcd_cmd_dma B236  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler BC0A               __size_of_UART1_Initialize 0048  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BA7A  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C0D2  
        __end_of_PIN_MANAGER_Initialize AA4E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9788                 _eaDogM_WriteStringAtPos B816  
                         _get_vterm_ptr B974                          _check_adc_scan C092  
             __size_of_UART2_Initialize 0060  
