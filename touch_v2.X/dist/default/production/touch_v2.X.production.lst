

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 21 23:22:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=4,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=4,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text155,global,reloc=4,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=4,class=CODE,delta=1
   181                           	psect	text159,global,reloc=4,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=4,class=CODE,delta=1
   186                           	psect	text164,global,reloc=4,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   200                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   201                           	psect	text177,global,reloc=4,class=CODE,delta=1
   202                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   203                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   204  0000                     
   205                           ; Version 2.10
   206                           ; Generated 31/07/2019 GMT
   207                           ; 
   208                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   209                           ; All rights reserved.
   210                           ; 
   211                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   212                           ; 
   213                           ; Redistribution and use in source and binary forms, with or without modification, are
   214                           ; permitted provided that the following conditions are met:
   215                           ; 
   216                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   217                           ;        conditions and the following disclaimer.
   218                           ; 
   219                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   220                           ;        of conditions and the following disclaimer in the documentation and/or other
   221                           ;        materials provided with the distribution.
   222                           ; 
   223                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   224                           ;        software without specific prior written permission.
   225                           ; 
   226                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   227                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   228                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   229                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   230                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   231                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   232                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   233                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   234                           ; 
   235                           ; 
   236                           ; Code-generator required, PIC18F57K42 Definitions
   237                           ; 
   238                           ; SFR Addresses
   239  0000                     
   240 ;;_main$3754	offset	0
   241 ;;_main$3750	offset	2
   242 ;;_esr_temp	offset	4
   243 ;;_i_esr	offset	8
   244 ;;_shape	offset	10
   245 ;;_k	offset	11
   246 ;;_j	offset	12
   247 ;;_i	offset	13
   248 ;;_inp_index	offset	14
   249 ;;_mode	offset	15
   250 ;;_i_ror	offset	16
   251 ;;_s	offset=-2 (param)
   252 ;;_c	offset	0
   253 ;;_shape	offset=-1 (param)
   254 ;;_reset	offset=-2 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_cmd	offset=-1 (param)
   257 ;;_data	offset=-1 (param)
   258 ;;__this	offset=-2 (param)
   259 ;;_cvoltage	offset=-4 (param)
   260 ;;_h	offset=-1 (param)
   261 ;;_h	offset=-1 (param)
   262 ;;_i	offset=-1 (param)
   263 ;;_fsm	offset=-1 (param)
   264 ;;_channel	offset=-1 (param)
   265 ;;_mode	offset=-1 (param)
   266 ;;_mode	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_i	offset	0
   269 ;;_h	offset=-1 (param)
   270 ;;_flipper	offset=-1 (param)
   271 ;;_f	offset	0
   272 ;;_ap	offset	6
   273 ;;_s	offset=-3 (param)
   274 ;;_fmt	offset=-5 (param)
   275 ;;_line	offset=-1 (param)
   276 ;;_vterm	offset=-2 (param)
   277 ;;_numMilliseconds	offset=-2 (param)
   278 ;;_vterm	offset=-1 (param)
   279 ;;_r	offset=-1 (param)
   280 ;;_c	offset=-2 (param)
   281 ;;_strPtr	offset=-4 (param)
   282 ;;_strPtr	offset=-1 (param)
   283 ;;_delay	offset=-4 (param)
   284 ;;_strPtr	offset=-2 (param)
   285 ;;__this	offset=-2 (param)
   286 ;;_clearBuffer	offset=-3 (param)
   287 ;;_s	offset	0
   288 ;;_k	offset	2
   289 ;;_dest	offset=-2 (param)
   290 ;;_c	offset=-4 (param)
   291 ;;_n	offset=-6 (param)
   292 ;;_ap	offset	0
   293 ;;_fmt	offset=-3 (param)
   294 ;;_cfmt	offset	0
   295 ;;_fp	offset=-2 (param)
   296 ;;_fmt	offset=-4 (param)
   297 ;;_ap	offset=-6 (param)
   298 ;;_vfpfcnvrt$5543	offset	0
   299 ;;_vfpfcnvrt$5554	offset	2
   300 ;;_vfpfcnvrt$5542	offset	4
   301 ;;_llu	offset	6
   302 ;;_ll	offset	14
   303 ;;_f	offset	22
   304 ;;_ct	offset	26
   305 ;;_cp	offset	29
   306 ;;_c	offset	31
   307 ;;_fp	offset=-2 (param)
   308 ;;_fmt	offset=-4 (param)
   309 ;;_ap	offset=-6 (param)
   310 ;;_xtoa$5528	offset	0
   311 ;;_xtoa$5527	offset	2
   312 ;;_n	offset	4
   313 ;;_c	offset	12
   314 ;;_i	offset	14
   315 ;;_w	offset	16
   316 ;;_p	offset	18
   317 ;;_fp	offset=-2 (param)
   318 ;;_d	offset=-10 (param)
   319 ;;_x	offset=-11 (param)
   320 ;;_toupper$6334	offset	0
   321 ;;_c	offset=-2 (param)
   322 ;;_c	offset=-2 (param)
   323 ;;_c	offset=-2 (param)
   324 ;;_n	offset	0
   325 ;;_i	offset	8
   326 ;;_w	offset	10
   327 ;;_p	offset	12
   328 ;;_fp	offset=-2 (param)
   329 ;;_d	offset=-10 (param)
   330 ;;_counter	offset	0
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_quotient	offset	0
   334 ;;_counter	offset	8
   335 ;;_dividend	offset=-8 (param)
   336 ;;_divisor	offset=-16 (param)
   337 ;;_r	offset	0
   338 ;;_l	offset	2
   339 ;;__l	offset=-2 (param)
   340 ;;__r	offset=-4 (param)
   341 ;;_n	offset=-6 (param)
   342 ;;_nuls	offset	0
   343 ;;_l	offset	7
   344 ;;_p	offset	9
   345 ;;_cp	offset	11
   346 ;;_w	offset	13
   347 ;;_i	offset	15
   348 ;;_fp	offset=-2 (param)
   349 ;;_s	offset=-4 (param)
   350 ;;_efgtoa$5500	offset	0
   351 ;;_efgtoa$5499	offset	2
   352 ;;_efgtoa$5498	offset	4
   353 ;;_efgtoa$5494	offset	6
   354 ;;_efgtoa$5490	offset	8
   355 ;;_efgtoa$5489	offset	10
   356 ;;_u	offset	12
   357 ;;_g	offset	16
   358 ;;_l	offset	20
   359 ;;_h	offset	24
   360 ;;_ou	offset	28
   361 ;;_n	offset	32
   362 ;;_e	offset	34
   363 ;;_i	offset	36
   364 ;;_w	offset	38
   365 ;;_p	offset	40
   366 ;;_sign	offset	42
   367 ;;_d	offset	44
   368 ;;_ne	offset	46
   369 ;;_m	offset	48
   370 ;;_pp	offset	50
   371 ;;_t	offset	52
   372 ;;_mode	offset	54
   373 ;;_nmode	offset	55
   374 ;;_fp	offset=-2 (param)
   375 ;;_f	offset=-6 (param)
   376 ;;_c	offset=-7 (param)
   377 ;;_tolower$6319	offset	0
   378 ;;_c	offset=-2 (param)
   379 ;;_c	offset=-2 (param)
   380 ;;_d	offset	0
   381 ;;_s	offset	2
   382 ;;_dest	offset=-2 (param)
   383 ;;_src	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_m	offset	4
   386 ;;_e	offset	8
   387 ;;_x	offset=-4 (param)
   388 ;;_u	offset	0
   389 ;;_e	offset	4
   390 ;;_x	offset=-4 (param)
   391 ;;_exp1	offset	0
   392 ;;_sign1	offset	1
   393 ;;_f1	offset=-4 (param)
   394 ;;_f1	offset=-4 (param)
   395 ;;_ff1	offset=-4 (param)
   396 ;;_ff2	offset=-8 (param)
   397 ;;_sign	offset	0
   398 ;;_counter	offset	1
   399 ;;_dividend	offset=-2 (param)
   400 ;;_divisor	offset=-4 (param)
   401 ;;_quotient	offset	0
   402 ;;_sign	offset	2
   403 ;;_counter	offset	3
   404 ;;_dividend	offset=-2 (param)
   405 ;;_divisor	offset=-4 (param)
   406 ;;_dtoa$5466	offset	0
   407 ;;_n	offset	2
   408 ;;_i	offset	10
   409 ;;_s	offset	12
   410 ;;_w	offset	14
   411 ;;_p	offset	16
   412 ;;_fp	offset=-2 (param)
   413 ;;_d	offset=-10 (param)
   414 ;;_a	offset=-2 (param)
   415 ;;_sign	offset	0
   416 ;;_counter	offset	1
   417 ;;_dividend	offset=-8 (param)
   418 ;;_divisor	offset=-16 (param)
   419 ;;_quotient	offset	0
   420 ;;_sign	offset	8
   421 ;;_counter	offset	9
   422 ;;_dividend	offset=-8 (param)
   423 ;;_divisor	offset=-16 (param)
   424 ;;_w	offset	0
   425 ;;_fp	offset=-2 (param)
   426 ;;_c	offset=-3 (param)
   427 ;;_w	offset	0
   428 ;;_i	offset	2
   429 ;;_fp	offset=-2 (param)
   430 ;;_buf	offset=-4 (param)
   431 ;;_p	offset=-6 (param)
   432 ;;_a	offset	0
   433 ;;_s	offset=-2 (param)
   434 ;;_i	offset	0
   435 ;;_c	offset	2
   436 ;;_s	offset=-2 (param)
   437 ;;_fp	offset=-4 (param)
   438 ;;_c	offset=-2 (param)
   439 ;;_fp	offset=-4 (param)
   440 ;;_c	offset=-1 (param)
   441 ;;__this	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_atoi$6050	offset	0
   444 ;;_atoi$6048	offset	2
   445 ;;_atoi$6049	offset	4
   446 ;;_n	offset	5
   447 ;;_neg	offset	7
   448 ;;_s	offset=-2 (param)
   449 ;;_isspace$6099	offset	0
   450 ;;_c	offset=-2 (param)
   451 ;;_c	offset=-2 (param)
   452 ;;_vterm	offset=-1 (param)
   453 ;;_new_response_info	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_level	offset=-2 (param)
   456 ;;_dutyValue	offset=-2 (param)
   457 ;;_timer	offset=-1 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_count	offset=-3 (param)
   460 ;;_h	offset=-1 (param)
   461 ;;_u	offset	0
   462 ;;_x	offset=-4 (param)
   463 ;;_chan	offset=-1 (param)
   464 ;;_to_what	offset=-2 (param)
   465 ;;_u	offset	0
   466 ;;_s	offset=-2 (param)
   467 ;;_index	offset=-1 (param)
   468 ;;_arg	offset	0
   469 ;;_exp	offset	4
   470 ;;_sign	offset=-1 (param)
   471 ;;_val	offset=-5 (param)
   472 ;;_grs	offset	0
   473 ;;_rem	offset	4
   474 ;;_new_exp	offset	8
   475 ;;_aexp	offset	10
   476 ;;_bexp	offset	11
   477 ;;_sign	offset	12
   478 ;;_b	offset=-4 (param)
   479 ;;_a	offset=-8 (param)
   480 ;;_ff1	offset=-4 (param)
   481 ;;_ff2	offset=-8 (param)
   482 ;;_lp_speed	offset	0
   483 ;;_new	offset=-4 (param)
   484 ;;_bn	offset=-5 (param)
   485 ;;_slow	offset=-6 (param)
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_grs	offset	0
   489 ;;_bexp	offset	1
   490 ;;_aexp	offset	2
   491 ;;_signs	offset	3
   492 ;;_b	offset=-4 (param)
   493 ;;_a	offset=-8 (param)
   494 ;;_prod	offset	0
   495 ;;_grs	offset	4
   496 ;;_temp	offset	8
   497 ;;_bexp	offset	10
   498 ;;_aexp	offset	11
   499 ;;_sign	offset	12
   500 ;;_b	offset=-4 (param)
   501 ;;_a	offset=-8 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_state	offset	0
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_i	offset	0
   514 ;;_sw_value	offset	1
   515 ;;_timerVal	offset=-2 (param)
   516 ;;_mode	offset=-1 (param)
   517 ;;_chan	offset=-1 (param)
   518 ;;_to_what	offset=-2 (param)
   519 ;;_u	offset	0
   520 ;;_s	offset=-2 (param)
   521 ;;_index	offset=-1 (param)
   522 ;;_arg	offset	0
   523 ;;_exp	offset	4
   524 ;;_sign	offset=-1 (param)
   525 ;;_val	offset=-5 (param)
   526 ;;_b	offset=-4 (param)
   527 ;;_a	offset=-8 (param)
   528 ;;_grs	offset	0
   529 ;;_bexp	offset	1
   530 ;;_aexp	offset	2
   531 ;;_signs	offset	3
   532 ;;_b	offset=-4 (param)
   533 ;;_a	offset=-8 (param)
   534 ;;_prod	offset	0
   535 ;;_grs	offset	4
   536 ;;_temp	offset	8
   537 ;;_bexp	offset	10
   538 ;;_aexp	offset	11
   539 ;;_sign	offset	12
   540 ;;_b	offset=-4 (param)
   541 ;;_a	offset=-8 (param)
   542 ;;_grs	offset	0
   543 ;;_rem	offset	4
   544 ;;_new_exp	offset	8
   545 ;;_aexp	offset	10
   546 ;;_bexp	offset	11
   547 ;;_sign	offset	12
   548 ;;_b	offset=-4 (param)
   549 ;;_a	offset=-8 (param)
   550 ;;_ff1	offset=-4 (param)
   551 ;;_ff2	offset=-8 (param)
   552 ;;_timerVal	offset=-2 (param)
   553 ;;_log_ptr	offset	0
   554 ;;_f	offset	0
   555 ;;_ap	offset	6
   556 ;;_s	offset=-3 (param)
   557 ;;_fmt	offset=-5 (param)
   558 ;;_cfmt	offset	0
   559 ;;_fp	offset=-2 (param)
   560 ;;_fmt	offset=-4 (param)
   561 ;;_ap	offset=-6 (param)
   562 ;;_vfpfcnvrt$5543	offset	0
   563 ;;_vfpfcnvrt$5554	offset	2
   564 ;;_vfpfcnvrt$5542	offset	4
   565 ;;_llu	offset	6
   566 ;;_ll	offset	14
   567 ;;_f	offset	22
   568 ;;_ct	offset	26
   569 ;;_cp	offset	29
   570 ;;_c	offset	31
   571 ;;_fp	offset=-2 (param)
   572 ;;_fmt	offset=-4 (param)
   573 ;;_ap	offset=-6 (param)
   574 ;;_xtoa$5528	offset	0
   575 ;;_xtoa$5527	offset	2
   576 ;;_n	offset	4
   577 ;;_c	offset	12
   578 ;;_i	offset	14
   579 ;;_w	offset	16
   580 ;;_p	offset	18
   581 ;;_fp	offset=-2 (param)
   582 ;;_d	offset=-10 (param)
   583 ;;_x	offset=-11 (param)
   584 ;;_toupper$6334	offset	0
   585 ;;_c	offset=-2 (param)
   586 ;;_c	offset=-2 (param)
   587 ;;_c	offset=-2 (param)
   588 ;;_n	offset	0
   589 ;;_i	offset	8
   590 ;;_w	offset	10
   591 ;;_p	offset	12
   592 ;;_fp	offset=-2 (param)
   593 ;;_d	offset=-10 (param)
   594 ;;_counter	offset	0
   595 ;;_dividend	offset=-8 (param)
   596 ;;_divisor	offset=-16 (param)
   597 ;;_quotient	offset	0
   598 ;;_counter	offset	8
   599 ;;_dividend	offset=-8 (param)
   600 ;;_divisor	offset=-16 (param)
   601 ;;_r	offset	0
   602 ;;_l	offset	2
   603 ;;__l	offset=-2 (param)
   604 ;;__r	offset=-4 (param)
   605 ;;_n	offset=-6 (param)
   606 ;;_nuls	offset	0
   607 ;;_l	offset	7
   608 ;;_p	offset	9
   609 ;;_cp	offset	11
   610 ;;_w	offset	13
   611 ;;_i	offset	15
   612 ;;_fp	offset=-2 (param)
   613 ;;_s	offset=-4 (param)
   614 ;;_efgtoa$5500	offset	0
   615 ;;_efgtoa$5499	offset	2
   616 ;;_efgtoa$5498	offset	4
   617 ;;_efgtoa$5494	offset	6
   618 ;;_efgtoa$5490	offset	8
   619 ;;_efgtoa$5489	offset	10
   620 ;;_u	offset	12
   621 ;;_g	offset	16
   622 ;;_l	offset	20
   623 ;;_h	offset	24
   624 ;;_ou	offset	28
   625 ;;_n	offset	32
   626 ;;_e	offset	34
   627 ;;_i	offset	36
   628 ;;_w	offset	38
   629 ;;_p	offset	40
   630 ;;_sign	offset	42
   631 ;;_d	offset	44
   632 ;;_ne	offset	46
   633 ;;_m	offset	48
   634 ;;_pp	offset	50
   635 ;;_t	offset	52
   636 ;;_mode	offset	54
   637 ;;_nmode	offset	55
   638 ;;_fp	offset=-2 (param)
   639 ;;_f	offset=-6 (param)
   640 ;;_c	offset=-7 (param)
   641 ;;_tolower$6319	offset	0
   642 ;;_c	offset=-2 (param)
   643 ;;_c	offset=-2 (param)
   644 ;;_d	offset	0
   645 ;;_s	offset	2
   646 ;;_dest	offset=-2 (param)
   647 ;;_src	offset=-4 (param)
   648 ;;_u	offset	0
   649 ;;_m	offset	4
   650 ;;_e	offset	8
   651 ;;_x	offset=-4 (param)
   652 ;;_u	offset	0
   653 ;;_e	offset	4
   654 ;;_x	offset=-4 (param)
   655 ;;_exp1	offset	0
   656 ;;_sign1	offset	1
   657 ;;_f1	offset=-4 (param)
   658 ;;_f1	offset=-4 (param)
   659 ;;_ff1	offset=-4 (param)
   660 ;;_ff2	offset=-8 (param)
   661 ;;_sign	offset	0
   662 ;;_counter	offset	1
   663 ;;_dividend	offset=-2 (param)
   664 ;;_divisor	offset=-4 (param)
   665 ;;_quotient	offset	0
   666 ;;_sign	offset	2
   667 ;;_counter	offset	3
   668 ;;_dividend	offset=-2 (param)
   669 ;;_divisor	offset=-4 (param)
   670 ;;_dtoa$5466	offset	0
   671 ;;_n	offset	2
   672 ;;_i	offset	10
   673 ;;_s	offset	12
   674 ;;_w	offset	14
   675 ;;_p	offset	16
   676 ;;_fp	offset=-2 (param)
   677 ;;_d	offset=-10 (param)
   678 ;;_a	offset=-2 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-8 (param)
   682 ;;_divisor	offset=-16 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	8
   685 ;;_counter	offset	9
   686 ;;_dividend	offset=-8 (param)
   687 ;;_divisor	offset=-16 (param)
   688 ;;_w	offset	0
   689 ;;_fp	offset=-2 (param)
   690 ;;_c	offset=-3 (param)
   691 ;;_w	offset	0
   692 ;;_i	offset	2
   693 ;;_fp	offset=-2 (param)
   694 ;;_buf	offset=-4 (param)
   695 ;;_p	offset=-6 (param)
   696 ;;_a	offset	0
   697 ;;_s	offset=-2 (param)
   698 ;;_i	offset	0
   699 ;;_c	offset	2
   700 ;;_s	offset=-2 (param)
   701 ;;_fp	offset=-4 (param)
   702 ;;_c	offset=-2 (param)
   703 ;;_fp	offset=-4 (param)
   704 ;;_c	offset=-1 (param)
   705 ;;__this	offset=-2 (param)
   706 ;;_c	offset=-3 (param)
   707 ;;_atoi$6050	offset	0
   708 ;;_atoi$6048	offset	2
   709 ;;_atoi$6049	offset	4
   710 ;;_n	offset	5
   711 ;;_neg	offset	7
   712 ;;_s	offset=-2 (param)
   713 ;;_isspace$6099	offset	0
   714 ;;_c	offset=-2 (param)
   715 ;;_c	offset=-2 (param)
   716 ;;_dsize	offset=-2 (param)
   717 ;;_u	offset	0
   718 ;;_x	offset=-4 (param)
   719 ;;_f1p	offset=-2 (param)
   720 ;;_f2	offset=-6 (param)
   721 ;;_timer	offset=-1 (param)
   722 ;;_count	offset=-3 (param)
   723 ;;_channel	offset=-1 (param)
   724 ;;_i	offset	0
   725                           
   726                           	psect	idataBIGRAM
   727  0167EE                     __pidataBIGRAM:
   728                           	opt callstack 0
   729                           
   730                           ;initializer for _port_data
   731  0167EE  FF                 	db	255
   732  0167EF  00                 	db	0
   733  0167F0  FF                 	db	255
   734  0167F1  00                 	db	0
   735  0167F2  FF                 	db	255
   736  0167F3  00                 	db	0
   737  0167F4  FF                 	db	255
   738  0167F5  00                 	db	0
   739  0167F6  FF                 	db	255
   740  0167F7  00                 	db	0
   741  0167F8  FF                 	db	255
   742  0167F9  00                 	db	0
   743  0167FA  FF                 	db	255
   744  0167FB  00                 	db	0
   745  0167FC  FF                 	db	255
   746  0167FD  00                 	db	0
   747  0167FE  00                 	db	0
   748  0167FF  00                 	db	0
   749  016800  00                 	db	0
   750  016801  00                 	db	0
   751  016802  00                 	db	0
   752  016803  00                 	db	0
   753  016804  00                 	db	0
   754  016805  00                 	db	0
   755  016806  00                 	db	0
   756  016807  00                 	db	0
   757  016808  00                 	db	0
   758  016809  00                 	db	0
   759  01680A  00                 	db	0
   760  01680B  00                 	db	0
   761  01680C  00                 	db	0
   762  01680D  00                 	db	0
   763  01680E  00                 	db	0
   764  01680F  00                 	db	0
   765  016810  00                 	db	0
   766  016811  00                 	db	0
   767  016812  00                 	db	0
   768  016813  00                 	db	0
   769  016814  00                 	db	0
   770  016815  00                 	db	0
   771  016816  00                 	db	0
   772  016817  00                 	db	0
   773  016818  00                 	db	0
   774  016819  00                 	db	0
   775  01681A  00                 	db	0
   776  01681B  00                 	db	0
   777  01681C  00                 	db	0
   778  01681D  00                 	db	0
   779  01681E  00                 	db	0
   780  01681F  00                 	db	0
   781  016820  00                 	db	0
   782  016821  00                 	db	0
   783  016822  00                 	db	0
   784  016823  00                 	db	0
   785  016824  00                 	db	0
   786  016825  00                 	db	0
   787  016826  00                 	db	0
   788  016827  00                 	db	0
   789  016828  00                 	db	0
   790  016829  00                 	db	0
   791  01682A  00                 	db	0
   792  01682B  00                 	db	0
   793  01682C  00                 	db	0
   794  01682D  00                 	db	0
   795  01682E  00                 	db	0
   796  01682F  00                 	db	0
   797  016830  00                 	db	0
   798  016831  00                 	db	0
   799  016832  00                 	db	0
   800  016833  00                 	db	0
   801  016834  00                 	db	0
   802  016835  00                 	db	0
   803  016836  00                 	db	0
   804  016837  00                 	db	0
   805  016838  00                 	db	0
   806  016839  00                 	db	0
   807  01683A  00                 	db	0
   808  01683B  00                 	db	0
   809  01683C  00                 	db	0
   810  01683D  00                 	db	0
   811  01683E  00                 	db	0
   812  01683F  00                 	db	0
   813  016840  00                 	db	0
   814  016841  00                 	db	0
   815  016842  00                 	db	0
   816  016843  00                 	db	0
   817  016844  00                 	db	0
   818  016845  00                 	db	0
   819  016846  00                 	db	0
   820  016847  00                 	db	0
   821  016848  00                 	db	0
   822  016849  00                 	db	0
   823  01684A  00                 	db	0
   824  01684B  00                 	db	0
   825  01684C  00                 	db	0
   826  01684D  00                 	db	0
   827  01684E  00                 	db	0
   828  01684F  00                 	db	0
   829  016850  00                 	db	0
   830  016851  00                 	db	0
   831  016852  00                 	db	0
   832  016853  00                 	db	0
   833  016854  00                 	db	0
   834  016855  00                 	db	0
   835  016856  00                 	db	0
   836  016857  00                 	db	0
   837  016858  00                 	db	0
   838  016859  00                 	db	0
   839  01685A  00                 	db	0
   840  01685B  00                 	db	0
   841  01685C  00                 	db	0
   842  01685D  00                 	db	0
   843  01685E  00                 	db	0
   844  01685F  00                 	db	0
   845  016860  00                 	db	0
   846  016861  00                 	db	0
   847  016862  00                 	db	0
   848  016863  00                 	db	0
   849  016864  00                 	db	0
   850  016865  00                 	db	0
   851  016866  00                 	db	0
   852  016867  00                 	db	0
   853  016868  00                 	db	0
   854  016869  00                 	db	0
   855  01686A  00                 	db	0
   856  01686B  00                 	db	0
   857  01686C  00                 	db	0
   858  01686D  00                 	db	0
   859  01686E  00                 	db	0
   860  01686F  00                 	db	0
   861  016870  00                 	db	0
   862  016871  00                 	db	0
   863  016872  00                 	db	0
   864  016873  00                 	db	0
   865  016874  00                 	db	0
   866  016875  00                 	db	0
   867  016876  00                 	db	0
   868  016877  00                 	db	0
   869  016878  00                 	db	0
   870  016879  00                 	db	0
   871  01687A  00                 	db	0
   872  01687B  00                 	db	0
   873  01687C  00                 	db	0
   874  01687D  00                 	db	0
   875  01687E  00                 	db	0
   876  01687F  00                 	db	0
   877  016880  00                 	db	0
   878  016881  00                 	db	0
   879  016882  00                 	db	0
   880  016883  00                 	db	0
   881  016884  00                 	db	0
   882  016885  00                 	db	0
   883  016886  00                 	db	0
   884  016887  00                 	db	0
   885  016888  00                 	db	0
   886  016889  00                 	db	0
   887  01688A  00                 	db	0
   888  01688B  00                 	db	0
   889  01688C  00                 	db	0
   890  01688D  00                 	db	0
   891  01688E  00                 	db	0
   892  01688F  00                 	db	0
   893  016890  00                 	db	0
   894  016891  00                 	db	0
   895  016892  00                 	db	0
   896  016893  00                 	db	0
   897  016894  00                 	db	0
   898  016895  00                 	db	0
   899  016896  00                 	db	0
   900  016897  00                 	db	0
   901  016898  00                 	db	0
   902  016899  00                 	db	0
   903  01689A  00                 	db	0
   904  01689B  00                 	db	0
   905  01689C  00                 	db	0
   906  01689D  00                 	db	0
   907  01689E  00                 	db	0
   908  01689F  00                 	db	0
   909  0168A0  00                 	db	0
   910  0168A1  00                 	db	0
   911  0168A2  00                 	db	0
   912  0168A3  00                 	db	0
   913  0168A4  00                 	db	0
   914  0168A5  00                 	db	0
   915  0168A6  00                 	db	0
   916  0168A7  00                 	db	0
   917  0168A8  00                 	db	0
   918  0168A9  00                 	db	0
   919  0168AA  00                 	db	0
   920  0168AB  00                 	db	0
   921  0168AC  00                 	db	0
   922  0168AD  00                 	db	0
   923  0168AE  00                 	db	0
   924  0168AF  00                 	db	0
   925  0168B0  00                 	db	0
   926  0168B1  00                 	db	0
   927  0168B2  00                 	db	0
   928  0168B3  00                 	db	0
   929  0168B4  00                 	db	0
   930  0168B5  00                 	db	0
   931  0168B6  00                 	db	0
   932  0168B7  00                 	db	0
   933  0168B8  00                 	db	0
   934  0168B9  00                 	db	0
   935  0168BA  00                 	db	0
   936  0168BB  00                 	db	0
   937  0168BC  00                 	db	0
   938  0168BD  00                 	db	0
   939  0168BE  00                 	db	0
   940  0168BF  00                 	db	0
   941  0168C0  00                 	db	0
   942  0168C1  00                 	db	0
   943  0168C2  00                 	db	0
   944  0168C3  00                 	db	0
   945  0168C4  00                 	db	0
   946  0168C5  00                 	db	0
   947  0168C6  00                 	db	0
   948  0168C7  00                 	db	0
   949  0168C8  00                 	db	0
   950  0168C9  00                 	db	0
   951  0168CA  00                 	db	0
   952  0168CB  00                 	db	0
   953  0168CC  00                 	db	0
   954  0168CD  00                 	db	0
   955  0168CE  00                 	db	0
   956  0168CF  00                 	db	0
   957  0168D0  00                 	db	0
   958  0168D1  00                 	db	0
   959  0168D2  00                 	db	0
   960  0168D3  00                 	db	0
   961  0168D4  00                 	db	0
   962  0168D5  00                 	db	0
   963  0168D6  00                 	db	0
   964  0168D7  00                 	db	0
   965  0168D8  00                 	db	0
   966  0168D9  00                 	db	0
   967  0168DA  00                 	db	0
   968  0168DB  00                 	db	0
   969  0168DC  00                 	db	0
   970  0168DD  00                 	db	0
   971  0168DE  00                 	db	0
   972  0168DF  00                 	db	0
   973  0168E0  00                 	db	0
   974  0168E1  00                 	db	0
   975  0168E2  00                 	db	0
   976  0168E3  00                 	db	0
   977  0168E4  00                 	db	0
   978  0168E5  00                 	db	0
   979  0168E6  00                 	db	0
   980  0168E7  00                 	db	0
   981  0168E8  00                 	db	0
   982  0168E9  00                 	db	0
   983  0168EA  00                 	db	0
   984  0168EB  00                 	db	0
   985  0168EC  00                 	db	0
   986  0168ED  00                 	db	0
   987  0168EE  00                 	db	0
   988  0168EF  00                 	db	0
   989  0168F0  00                 	db	0
   990  0168F1  00                 	db	0
   991  0168F2  00                 	db	0
   992  0168F3  00                 	db	0
   993  0168F4  00                 	db	0
   994  0168F5  00                 	db	0
   995  0168F6  00                 	db	0
   996  0168F7  00                 	db	0
   997  0168F8  00                 	db	0
   998  0168F9  00                 	db	0
   999  0168FA  00                 	db	0
  1000  0168FB  00                 	db	0
  1001  0168FC  00                 	db	0
  1002  0168FD  00                 	db	0
  1003  0168FE  00                 	db	0
  1004  0168FF  00                 	db	0
  1005  016900  00                 	db	0
  1006  016901  00                 	db	0
  1007  016902  00                 	db	0
  1008  016903  00                 	db	0
  1009  016904  00                 	db	0
  1010  016905  00                 	db	0
  1011  016906  00                 	db	0
  1012  016907  00                 	db	0
  1013  016908  00                 	db	0
  1014  016909  00                 	db	0
  1015  01690A  00                 	db	0
  1016  01690B  00                 	db	0
  1017  01690C  00                 	db	0
  1018  01690D  00                 	db	0
  1019  01690E  00                 	db	0
  1020  01690F  00                 	db	0
  1021  016910  00                 	db	0
  1022  016911  00                 	db	0
  1023  016912  00                 	db	0
  1024  016913  00                 	db	0
  1025  016914  00                 	db	0
  1026  016915  00                 	db	0
  1027  016916  00                 	db	0
  1028  016917  00                 	db	0
  1029  016918  00                 	db	0
  1030  016919  00                 	db	0
  1031  01691A  00                 	db	0
  1032  01691B  00                 	db	0
  1033  01691C  00                 	db	0
  1034  01691D  00                 	db	0
  1035  01691E  00                 	db	0
  1036  01691F  00                 	db	0
  1037  016920  00                 	db	0
  1038  016921  00                 	db	0
  1039  016922  00                 	db	0
  1040  016923  00                 	db	0
  1041  016924  00                 	db	0
  1042  016925  00                 	db	0
  1043  016926  00                 	db	0
  1044  016927  00                 	db	0
  1045  016928  00                 	db	0
  1046  016929  00                 	db	0
  1047  01692A  00                 	db	0
  1048  01692B  00                 	db	0
  1049  01692C  00                 	db	0
  1050  01692D  00                 	db	0
  1051  01692E  00                 	db	0
  1052  01692F  00                 	db	0
  1053  016930  00                 	db	0
  1054  016931  00                 	db	0
  1055  016932  00                 	db	0
  1056  016933  00                 	db	0
  1057  016934  00                 	db	0
  1058  016935  00                 	db	0
  1059  016936  00                 	db	0
  1060  016937  00                 	db	0
  1061  016938  00                 	db	0
  1062  016939  00                 	db	0
  1063  01693A  00                 	db	0
  1064  01693B  00                 	db	0
  1065  01693C  00                 	db	0
  1066  01693D  00                 	db	0
  1067  01693E  00                 	db	0
  1068  01693F  00                 	db	0
  1069  016940  00                 	db	0
  1070  016941  00                 	db	0
  1071  016942  00                 	db	0
  1072  016943  00                 	db	0
  1073  016944  00                 	db	0
  1074  016945  00                 	db	0
  1075  016946  00                 	db	0
  1076  016947  00                 	db	0
  1077  016948  00                 	db	0
  1078  016949  00                 	db	0
  1079  01694A  00                 	db	0
  1080  01694B  00                 	db	0
  1081  01694C  00                 	db	0
  1082  01694D  00                 	db	0
  1083  01694E  00                 	db	0
  1084  01694F  00                 	db	0
  1085  016950  00                 	db	0
  1086  016951  00                 	db	0
  1087  016952  00                 	db	0
  1088  016953  00                 	db	0
  1089  016954  00                 	db	0
  1090  016955  00                 	db	0
  1091  016956  00                 	db	0
  1092  016957  00                 	db	0
  1093  016958  00                 	db	0
  1094  016959  00                 	db	0
  1095  01695A  00                 	db	0
  1096  01695B  00                 	db	0
  1097  01695C  00                 	db	0
  1098  01695D  00                 	db	0
  1099  01695E  00                 	db	0
  1100  01695F  00                 	db	0
  1101  016960  00                 	db	0
  1102  016961  00                 	db	0
  1103  016962  00                 	db	0
  1104  016963  00                 	db	0
  1105  016964  00                 	db	0
  1106  016965  00                 	db	0
  1107  016966  00                 	db	0
  1108  016967  00                 	db	0
  1109  016968  00                 	db	0
  1110  016969  00                 	db	0
  1111  01696A  00                 	db	0
  1112  01696B  00                 	db	0
  1113  01696C  00                 	db	0
  1114  01696D  00                 	db	0
  1115  01696E  00                 	db	0
  1116  01696F  00                 	db	0
  1117  016970  00                 	db	0
  1118  016971  00                 	db	0
  1119  016972  00                 	db	0
  1120  016973  00                 	db	0
  1121  016974  00                 	db	0
  1122  016975  00                 	db	0
  1123  016976  00                 	db	0
  1124  016977  00                 	db	0
  1125  016978  00                 	db	0
  1126  016979  00                 	db	0
  1127  01697A  00                 	db	0
  1128  01697B  00                 	db	0
  1129  01697C  00                 	db	0
  1130  01697D  00                 	db	0
  1131  01697E  00                 	db	0
  1132  01697F  00                 	db	0
  1133  016980  00                 	db	0
  1134  016981  00                 	db	0
  1135  016982  00                 	db	0
  1136  016983  00                 	db	0
  1137  016984  00                 	db	0
  1138  016985  00                 	db	0
  1139  016986  00                 	db	0
  1140  016987  00                 	db	0
  1141  016988  00                 	db	0
  1142  016989  00                 	db	0
  1143  01698A  00                 	db	0
  1144  01698B  00                 	db	0
  1145  01698C  00                 	db	0
  1146  01698D  00                 	db	0
  1147  01698E  00                 	db	0
  1148  01698F  00                 	db	0
  1149  016990  00                 	db	0
  1150  016991  00                 	db	0
  1151  016992  00                 	db	0
  1152  016993  00                 	db	0
  1153  016994  00                 	db	0
  1154  016995  00                 	db	0
  1155  016996  00                 	db	0
  1156  016997  00                 	db	0
  1157  016998  00                 	db	0
  1158  016999  00                 	db	0
  1159  01699A  00                 	db	0
  1160  01699B  00                 	db	0
  1161  01699C  00                 	db	0
  1162  01699D  00                 	db	0
  1163  01699E  00                 	db	0
  1164  01699F  00                 	db	0
  1165  0169A0  00                 	db	0
  1166  0169A1  00                 	db	0
  1167  0169A2  00                 	db	0
  1168  0169A3  00                 	db	0
  1169  0169A4  00                 	db	0
  1170  0169A5  00                 	db	0
  1171  0169A6  00                 	db	0
  1172  0169A7  00                 	db	0
  1173  0169A8  00                 	db	0
  1174  0169A9  00                 	db	0
  1175  0169AA  00                 	db	0
  1176  0169AB  00                 	db	0
  1177  0169AC  00                 	db	0
  1178  0169AD  00                 	db	0
  1179  0169AE  00                 	db	0
  1180  0169AF  00                 	db	0
  1181  0169B0  00                 	db	0
  1182  0169B1  00                 	db	0
  1183  0169B2  00                 	db	0
  1184  0169B3  00                 	db	0
  1185  0169B4  00                 	db	0
  1186  0169B5  00                 	db	0
  1187  0169B6  00                 	db	0
  1188  0169B7  00                 	db	0
  1189  0169B8  00                 	db	0
  1190  0169B9  00                 	db	0
  1191  0169BA  00                 	db	0
  1192  0169BB  00                 	db	0
  1193  0169BC  00                 	db	0
  1194  0169BD  00                 	db	0
  1195  0169BE  00                 	db	0
  1196  0169BF  00                 	db	0
  1197  0169C0  00                 	db	0
  1198  0169C1  00                 	db	0
  1199  0169C2  00                 	db	0
  1200  0169C3  00                 	db	0
  1201  0169C4  00                 	db	0
  1202  0169C5  00                 	db	0
  1203  0169C6  00                 	db	0
  1204  0169C7  00                 	db	0
  1205  0169C8  00                 	db	0
  1206  0169C9  00                 	db	0
  1207  0169CA  00                 	db	0
  1208  0169CB  00                 	db	0
  1209  0169CC  00                 	db	0
  1210  0169CD  00                 	db	0
  1211  0169CE  00                 	db	0
  1212  0169CF  00                 	db	0
  1213  0169D0  00                 	db	0
  1214  0169D1  00                 	db	0
  1215  0169D2  00                 	db	0
  1216  0169D3  00                 	db	0
  1217  0169D4  00                 	db	0
  1218  0169D5  00                 	db	0
  1219  0169D6  00                 	db	0
  1220  0169D7  00                 	db	0
  1221  0169D8  00                 	db	0
  1222  0169D9  00                 	db	0
  1223  0169DA  00                 	db	0
  1224  0169DB  00                 	db	0
  1225  0169DC  00                 	db	0
  1226  0169DD  00                 	db	0
  1227  0169DE  00                 	db	0
  1228  0169DF  00                 	db	0
  1229  0169E0  00                 	db	0
  1230  0169E1  00                 	db	0
  1231  0169E2  00                 	db	0
  1232  0169E3  00                 	db	0
  1233  0169E4  00                 	db	0
  1234  0169E5  00                 	db	0
  1235  0169E6  00                 	db	0
  1236  0169E7  00                 	db	0
  1237  0169E8  00                 	db	0
  1238  0169E9  00                 	db	0
  1239  0169EA  00                 	db	0
  1240  0169EB  00                 	db	0
  1241  0169EC  00                 	db	0
  1242  0169ED  00                 	db	0
  1243                           
  1244                           ;initializer for _C
  1245  0169EE  0000               	dw	0
  1246  0169F0  0000               	dw	0
  1247  0169F2  0000               	dw	0
  1248  0169F4  0000               	dw	0
  1249  0169F6  0000               	dw	0
  1250  0169F8  0000               	dw	0
  1251  0169FA  0000               	dw	0
  1252  0169FC  0000               	dw	0
  1253  0169FE  0000               	dw	0
  1254  016A00  0000               	dw	0
  1255  016A02  0000               	dw	0
  1256  016A04  0000               	dw	0
  1257  016A06  0000               	dw	0
  1258  016A08  0000               	dw	0
  1259  016A0A  0000               	dw	0
  1260  016A0C  0000               	dw	0
  1261  016A0E  0000               	dw	0
  1262  016A10  0000               	dw	0
  1263  016A12  0000               	dw	0
  1264  016A14  0000               	dw	0
  1265  016A16  0000               	dw	0
  1266  016A18  0000               	dw	0
  1267  016A1A  0000               	dw	0
  1268  016A1C  0000               	dw	0
  1269  016A1E  0000               	dw	0
  1270  016A20  0000               	dw	0
  1271  016A22  0000               	dw	0
  1272  016A24  0000               	dw	0
  1273  016A26  0000               	dw	0
  1274  016A28  0000               	dw	0
  1275  016A2A  0000               	dw	0
  1276  016A2C  0000               	dw	0
  1277  016A2E  0000               	dw	0
  1278  016A30  0000               	dw	0
  1279  016A32  0000               	dw	0
  1280  016A34  0000               	dw	0
  1281  016A36  0000               	dw	0
  1282  016A38  0000               	dw	0
  1283  016A3A  0000               	dw	0
  1284  016A3C  0000               	dw	0
  1285  016A3E  0000               	dw	0
  1286  016A40  0000               	dw	0
  1287  016A42  0000               	dw	0
  1288  016A44  0000               	dw	0
  1289  016A46  0000               	dw	0
  1290  016A48  0000               	dw	0
  1291  016A4A  0000               	dw	0
  1292  016A4C  0000               	dw	0
  1293  016A4E  0000               	dw	0
  1294  016A50  0000               	dw	0
  1295  016A52  0000               	dw	0
  1296  016A54  0000               	dw	0
  1297  016A56  0000               	dw	0
  1298  016A58  0000               	dw	0
  1299  016A5A  0000               	dw	0
  1300  016A5C  0000               	dw	0
  1301  016A5E  0000               	dw	0
  1302  016A60  0000               	dw	0
  1303  016A62  0000               	dw	0
  1304  016A64  0000               	dw	0
  1305  016A66  0000               	dw	0
  1306  016A68  0000               	dw	0
  1307  016A6A  0000               	dw	0
  1308  016A6C  0000               	dw	0
  1309  016A6E  0000               	dw	0
  1310  016A70  0000               	dw	0
  1311  016A72  0000               	dw	0
  1312  016A74  0000               	dw	0
  1313  016A76  0000               	dw	0
  1314  016A78  0000               	dw	0
  1315  016A7A  0000               	dw	0
  1316  016A7C  42FA               	dw	17146
  1317  016A7E  0000               	dw	0
  1318  016A80  0000               	dw	0
  1319  016A82  0000               	dw	0
  1320  016A84  0000               	dw	0
  1321  016A86  0000               	dw	0
  1322  016A88  0000               	dw	0
  1323  016A8A  0000               	dw	0
  1324  016A8C  0000               	dw	0
  1325  016A8E  0000               	dw	0
  1326  016A90  0000               	dw	0
  1327  016A92  0000               	dw	0
  1328  016A94  0000               	dw	0
  1329  016A96  0000               	dw	0
  1330  016A98  0000               	dw	0
  1331  016A9A  0000               	dw	0
  1332  016A9C  0000               	dw	0
  1333  016A9E  0000               	dw	0
  1334  016AA0  0000               	dw	0
  1335  016AA2  00                 	db	0
  1336  016AA3  01                 	db	1
  1337  016AA4  00                 	db	0
  1338  016AA5  00                 	db	0
  1339  016AA6  00                 	db	0
  1340  016AA7  00                 	db	0
  1341  016AA8  00                 	db	0
  1342  016AA9  00                 	db	0
  1343  016AAA  00                 	db	0
  1344  016AAB  00                 	db	0
  1345  016AAC  00                 	db	0
  1346  016AAD  00                 	db	0
  1347  016AAE  00                 	db	0
  1348  016AAF  00                 	db	0
  1349  016AB0  00                 	db	0
  1350  016AB1  00                 	db	0
  1351  016AB2  00                 	db	0
  1352  016AB3  00                 	db	0
  1353  016AB4  00                 	db	0
  1354  016AB5  00                 	db	0
  1355  016AB6  00                 	db	0
  1356  016AB7  00                 	db	0
  1357  016AB8  00                 	db	0
  1358  016AB9  00                 	db	0
  1359  016ABA  00                 	db	0
  1360  016ABB  00                 	db	0
  1361  016ABC  00                 	db	0
  1362  016ABD  00                 	db	0
  1363  016ABE  00                 	db	0
  1364  016ABF  00                 	db	0
  1365  016AC0  00                 	db	0
  1366  016AC1  00                 	db	0
  1367  016AC2  00                 	db	0
  1368  016AC3  00                 	db	0
  1369  016AC4  00                 	db	0
  1370  016AC5  00                 	db	0
  1371  016AC6  00                 	db	0
  1372  016AC7  00                 	db	0
  1373  016AC8  00                 	db	0
  1374  016AC9  00                 	db	0
  1375  016ACA  00                 	db	0
  1376  016ACB  00                 	db	0
  1377  016ACC  00                 	db	0
  1378  016ACD  00                 	db	0
  1379  016ACE  00                 	db	0
  1380  016ACF  00                 	db	0
  1381  016AD0  00                 	db	0
  1382  016AD1  00                 	db	0
  1383  016AD2  00                 	db	0
  1384  016AD3  00                 	db	0
  1385  016AD4  00                 	db	0
  1386  016AD5  00                 	db	0
  1387  016AD6  00                 	db	0
  1388  016AD7  00                 	db	0
  1389  016AD8  00                 	db	0
  1390  016AD9  00                 	db	0
  1391  016ADA  00                 	db	0
  1392  016ADB  00                 	db	0
  1393  016ADC  00                 	db	0
  1394  016ADD  00                 	db	0
  1395  016ADE  00                 	db	0
  1396  016ADF  00                 	db	0
  1397  016AE0  00                 	db	0
  1398  016AE1  00                 	db	0
  1399  016AE2  00                 	db	0
  1400  016AE3  00                 	db	0
  1401  016AE4  00                 	db	0
  1402  016AE5  00                 	db	0
  1403  016AE6  00                 	db	0
  1404  016AE7  00                 	db	0
  1405  016AE8  00                 	db	0
  1406  016AE9  00                 	db	0
  1407  016AEA  00                 	db	0
  1408  016AEB  00                 	db	0
  1409  016AEC  00                 	db	0
  1410  016AED  00                 	db	0
  1411  016AEE  00                 	db	0
  1412  016AEF  00                 	db	0
  1413  016AF0  00                 	db	0
  1414  016AF1  00                 	db	0
  1415  016AF2  00                 	db	0
  1416  016AF3  00                 	db	0
  1417  016AF4  00                 	db	0
  1418  016AF5  00                 	db	0
  1419  016AF6  00                 	db	0
  1420  016AF7  00                 	db	0
  1421  016AF8  0000               	dw	0
  1422  016AFA  0000               	dw	0
  1423  016AFC  0000               	dw	0
  1424  016AFE  0000               	dw	0
  1425  016B00  0000               	dw	0
  1426  016B02  0000               	dw	0
  1427  016B04  0000               	dw	0
  1428  016B06  0000               	dw	0
  1429  016B08  0000               	dw	0
  1430  016B0A  0000               	dw	0
  1431  016B0C  00                 	db	0
  1432  016B0D  00                 	db	0
  1433  016B0E  00                 	db	0
  1434  016B0F  00                 	db	0
  1435  016B10  00                 	db	0
  1436  016B11  00                 	db	0
  1437  016B12  00                 	db	0
  1438  016B13  00                 	db	0
  1439  016B14  00                 	db	0
  1440                           
  1441                           	psect	idataBANK0
  1442  01B444                     __pidataBANK0:
  1443                           	opt callstack 0
  1444                           
  1445                           ;initializer for _R
  1446  01B444  0000               	dw	0
  1447  01B446  0000               	dw	0
  1448  01B448  0000               	dw	0
  1449  01B44A  0000               	dw	0
  1450  01B44C  0000               	dw	0
  1451  01B44E  0000               	dw	0
  1452  01B450  0000               	dw	0
  1453  01B452  0000               	dw	0
  1454  01B454  0000               	dw	0
  1455  01B456  0000               	dw	0
  1456  01B458  0000               	dw	0
  1457  01B45A  0000               	dw	0
  1458  01B45C  0000               	dw	0
  1459  01B45E  0000               	dw	0
  1460  01B460  0000               	dw	0
  1461  01B462  0000               	dw	0
  1462  01B464  0F67               	dw	3943
  1463  01B466  0F8F               	dw	3983
  1464  01B468  00                 	db	0
  1465  01B469  0000               	dw	0
  1466  01B46B  00                 	db	0
  1467                           
  1468                           ;initializer for _H
  1469  01B46C  00                 	db	0
  1470  01B46D  00                 	db	0
  1471  01B46E  01                 	db	1
  1472  01B46F  00                 	db	0
  1473  01B470  01                 	db	1
  1474  01B471  00                 	db	0
  1475  01B472  00                 	db	0
  1476                           
  1477                           	psect	idataBANK1
  1478  019DE6                     __pidataBANK1:
  1479                           	opt callstack 0
  1480                           
  1481                           ;initializer for stoa@F1166
  1482  019DE6  28                 	db	40
  1483  019DE7  6E                 	db	110
  1484  019DE8  75                 	db	117
  1485  019DE9  6C                 	db	108
  1486  019DEA  6C                 	db	108
  1487  019DEB  29                 	db	41
  1488  019DEC  00                 	db	0
  1489                           
  1490                           ;initializer for _V
  1491  019DED  00                 	db	0
  1492  019DEE  00                 	db	0
  1493  019DEF  00                 	db	0
  1494  019DF0  00                 	db	0
  1495  019DF1  00                 	db	0
  1496  019DF2  00                 	db	0
  1497  019DF3  00                 	db	0
  1498  019DF4  00                 	db	0
  1499  019DF5  00                 	db	0
  1500  019DF6  00                 	db	0
  1501  019DF7  00                 	db	0
  1502  019DF8  00                 	db	0
  1503  019DF9  00                 	db	0
  1504  019DFA  00                 	db	0
  1505  019DFB  00                 	db	0
  1506  019DFC  00                 	db	0
  1507  019DFD  00                 	db	0
  1508  019DFE  00                 	db	0
  1509  019DFF  00                 	db	0
  1510  019E00  00                 	db	0
  1511  019E01  00                 	db	0
  1512  019E02  00                 	db	0
  1513  019E03  00                 	db	0
  1514  019E04  00                 	db	0
  1515  019E05  00                 	db	0
  1516  019E06  00                 	db	0
  1517  019E07  00                 	db	0
  1518  019E08  00                 	db	0
  1519  019E09  00                 	db	0
  1520  019E0A  00                 	db	0
  1521  019E0B  00                 	db	0
  1522  019E0C  00                 	db	0
  1523  019E0D  00                 	db	0
  1524  019E0E  00                 	db	0
  1525  019E0F  00                 	db	0
  1526  019E10  00                 	db	0
  1527  019E11  00                 	db	0
  1528  019E12  00                 	db	0
  1529  019E13  00                 	db	0
  1530  019E14  00                 	db	0
  1531  019E15  00                 	db	0
  1532  019E16  00                 	db	0
  1533  019E17  00                 	db	0
  1534  019E18  00                 	db	0
  1535  019E19  00                 	db	0
  1536  019E1A  00                 	db	0
  1537  019E1B  00                 	db	0
  1538  019E1C  00                 	db	0
  1539  019E1D  00                 	db	0
  1540  019E1E  00                 	db	0
  1541  019E1F  00                 	db	0
  1542  019E20  00                 	db	0
  1543  019E21  00                 	db	0
  1544  019E22  00                 	db	0
  1545  019E23  00                 	db	0
  1546  019E24  00                 	db	0
  1547  019E25  00                 	db	0
  1548  019E26  00                 	db	0
  1549  019E27  00                 	db	0
  1550  019E28  00                 	db	0
  1551  019E29  00                 	db	0
  1552  019E2A  00                 	db	0
  1553  019E2B  00                 	db	0
  1554  019E2C  00                 	db	0
  1555  019E2D  00                 	db	0
  1556  019E2E  00                 	db	0
  1557  019E2F  00                 	db	0
  1558  019E30  00                 	db	0
  1559  019E31  00                 	db	0
  1560  019E32  00                 	db	0
  1561  019E33  00                 	db	0
  1562  019E34  00                 	db	0
  1563  019E35  00                 	db	0
  1564  019E36  00                 	db	0
  1565  019E37  00                 	db	0
  1566  019E38  00                 	db	0
  1567  019E39  00                 	db	0
  1568  019E3A  00                 	db	0
  1569  019E3B  00                 	db	0
  1570  019E3C  00                 	db	0
  1571  019E3D  00                 	db	0
  1572  019E3E  00                 	db	0
  1573  019E3F  00                 	db	0
  1574  019E40  00                 	db	0
  1575  019E41  00                 	db	0
  1576  019E42  00                 	db	0
  1577  019E43  00                 	db	0
  1578  019E44  00                 	db	0
  1579  019E45  00                 	db	0
  1580  019E46  00                 	db	0
  1581  019E47  00                 	db	0
  1582  019E48  00                 	db	0
  1583  019E49  00                 	db	0
  1584  019E4A  00                 	db	0
  1585  019E4B  00                 	db	0
  1586  019E4C  00                 	db	0
  1587  019E4D  00                 	db	0
  1588  019E4E  00                 	db	0
  1589  019E4F  00                 	db	0
  1590  019E50  00                 	db	0
  1591  019E51  00                 	db	0
  1592  019E52  00                 	db	0
  1593  019E53  00                 	db	0
  1594  019E54  00                 	db	0
  1595  019E55  00                 	db	0
  1596  019E56  00                 	db	0
  1597  019E57  00                 	db	0
  1598  019E58  00                 	db	0
  1599  019E59  00                 	db	0
  1600  019E5A  00                 	db	0
  1601  019E5B  00                 	db	0
  1602  019E5C  00                 	db	0
  1603  019E5D  00                 	db	0
  1604  019E5E  00                 	db	0
  1605  019E5F  00                 	db	0
  1606  019E60  00                 	db	0
  1607  019E61  00                 	db	0
  1608  019E62  00                 	db	0
  1609  019E63  00                 	db	0
  1610  019E64  00                 	db	0
  1611  019E65  00                 	db	0
  1612  019E66  00                 	db	0
  1613  019E67  00                 	db	0
  1614  019E68  00                 	db	0
  1615  019E69  00                 	db	0
  1616  019E6A  00                 	db	0
  1617  019E6B  00                 	db	0
  1618  019E6C  00                 	db	0
  1619  019E6D  00                 	db	0
  1620  019E6E  0000               	dw	0
  1621  019E70  0000               	dw	0
  1622  019E72  0000               	dw	0
  1623  019E74  0000               	dw	0
  1624  019E76  00                 	db	0
  1625  019E77  00                 	db	0
  1626  019E78  00                 	db	0
  1627  019E79  00                 	db	0
  1628  019E7A  00                 	db	0
  1629  019E7B  00                 	db	0
  1630  019E7C  0000               	dw	0
  1631  019E7E  0000               	dw	0
  1632  019E80  0000               	dw	0
  1633  019E82  0000               	dw	0
  1634  019E84  0000               	dw	0
  1635  019E86  0000               	dw	0
  1636  019E88  00                 	db	0
  1637  019E89  00                 	db	0
  1638  019E8A  00                 	db	0
  1639  019E8B  00                 	db	0
  1640  019E8C  00                 	db	0
  1641  019E8D  00                 	db	0
  1642  019E8E  00                 	db	0
  1643  019E8F  00                 	db	0
  1644  019E90  00                 	db	0
  1645  019E91  00                 	db	0
  1646  019E92  00                 	db	0
  1647  019E93  0000               	dw	0
  1648  019E95  0000               	dw	0
  1649  019E97  2D                 	db	45
  1650  019E98  00                 	db	0
  1651  019E99  00                 	db	0
  1652  019E9A  00                 	db	0
  1653  019E9B  00                 	db	0
  1654  019E9C  0000               	dw	0
  1655  019E9E  0000               	dw	0
  1656  019EA0  0000               	dw	0
  1657  019EA2  0000               	dw	0
  1658  019EA4  0000               	dw	0
  1659  019EA6  0000               	dw	0
  1660  019EA8  0000               	dw	0
  1661  019EAA  0000               	dw	0
  1662                           
  1663                           	psect	mediumconst
  1664  00FA62                     __pmediumconst:
  1665                           	opt callstack 0
  1666  00FA62  00                 	db	0
  1667  00FA63                     _BVSOC_TABLE:
  1668                           	opt callstack 0
  1669  00FA63  59D8               	dw	23000
  1670  00FA65  0000               	dw	0
  1671  00FA67  0005               	dw	5
  1672  00FA69  0000               	dw	0
  1673  00FA6B  5B68               	dw	23400
  1674  00FA6D  0000               	dw	0
  1675  00FA6F  000A               	dw	10
  1676  00FA71  0000               	dw	0
  1677  00FA73  5C30               	dw	23600
  1678  00FA75  0000               	dw	0
  1679  00FA77  0014               	dw	20
  1680  00FA79  0000               	dw	0
  1681  00FA7B  5E38               	dw	24120
  1682  00FA7D  0000               	dw	0
  1683  00FA7F  0019               	dw	25
  1684  00FA81  0000               	dw	0
  1685  00FA83  5E88               	dw	24200
  1686  00FA85  0000               	dw	0
  1687  00FA87  001E               	dw	30
  1688  00FA89  0000               	dw	0
  1689  00FA8B  5F78               	dw	24440
  1690  00FA8D  0000               	dw	0
  1691  00FA8F  0028               	dw	40
  1692  00FA91  0000               	dw	0
  1693  00FA93  5FDC               	dw	24540
  1694  00FA95  0000               	dw	0
  1695  00FA97  002D               	dw	45
  1696  00FA99  0000               	dw	0
  1697  00FA9B  6018               	dw	24600
  1698  00FA9D  0000               	dw	0
  1699  00FA9F  0032               	dw	50
  1700  00FAA1  0000               	dw	0
  1701  00FAA3  6046               	dw	24646
  1702  00FAA5  0000               	dw	0
  1703  00FAA7  0035               	dw	53
  1704  00FAA9  0000               	dw	0
  1705  00FAAB  607C               	dw	24700
  1706  00FAAD  0000               	dw	0
  1707  00FAAF  0037               	dw	55
  1708  00FAB1  0000               	dw	0
  1709  00FAB3  60AE               	dw	24750
  1710  00FAB5  0000               	dw	0
  1711  00FAB7  0039               	dw	57
  1712  00FAB9  0000               	dw	0
  1713  00FABB  60E0               	dw	24800
  1714  00FABD  0000               	dw	0
  1715  00FABF  003C               	dw	60
  1716  00FAC1  0000               	dw	0
  1717  00FAC3  6112               	dw	24850
  1718  00FAC5  0000               	dw	0
  1719  00FAC7  003F               	dw	63
  1720  00FAC9  0000               	dw	0
  1721  00FACB  615D               	dw	24925
  1722  00FACD  0000               	dw	0
  1723  00FACF  0043               	dw	67
  1724  00FAD1  0000               	dw	0
  1725  00FAD3  61A8               	dw	25000
  1726  00FAD5  0000               	dw	0
  1727  00FAD7  0046               	dw	70
  1728  00FAD9  0000               	dw	0
  1729  00FADB  61BC               	dw	25020
  1730  00FADD  0000               	dw	0
  1731  00FADF  0048               	dw	72
  1732  00FAE1  0000               	dw	0
  1733  00FAE3  61D0               	dw	25040
  1734  00FAE5  0000               	dw	0
  1735  00FAE7  004B               	dw	75
  1736  00FAE9  0000               	dw	0
  1737  00FAEB  61DA               	dw	25050
  1738  00FAED  0000               	dw	0
  1739  00FAEF  0050               	dw	80
  1740  00FAF1  0000               	dw	0
  1741  00FAF3  61E4               	dw	25060
  1742  00FAF5  0000               	dw	0
  1743  00FAF7  0055               	dw	85
  1744  00FAF9  0000               	dw	0
  1745  00FAFB  61F8               	dw	25080
  1746  00FAFD  0000               	dw	0
  1747  00FAFF  005A               	dw	90
  1748  00FB01  0000               	dw	0
  1749  00FB03  6208               	dw	25096
  1750  00FB05  0000               	dw	0
  1751  00FB07  005C               	dw	92
  1752  00FB09  0000               	dw	0
  1753  00FB0B  6222               	dw	25122
  1754  00FB0D  0000               	dw	0
  1755  00FB0F  005D               	dw	93
  1756  00FB11  0000               	dw	0
  1757  00FB13  6234               	dw	25140
  1758  00FB15  0000               	dw	0
  1759  00FB17  005F               	dw	95
  1760  00FB19  0000               	dw	0
  1761  00FB1B  6248               	dw	25160
  1762  00FB1D  0000               	dw	0
  1763  00FB1F  0061               	dw	97
  1764  00FB21  0000               	dw	0
  1765  00FB23  625C               	dw	25180
  1766  00FB25  0000               	dw	0
  1767  00FB27  0064               	dw	100
  1768  00FB29  0000               	dw	0
  1769  00FB2B  6784               	dw	26500
  1770  00FB2D  0000               	dw	0
  1771  00FB2F  0062               	dw	98
  1772  00FB31  0000               	dw	0
  1773  00FB33                     __end_of_BVSOC_TABLE:
  1774                           	opt callstack 0
  1775  00FB33                     _T:
  1776                           	opt callstack 0
  1777  00FB33  63                 	db	99
  1778  00FB34  6F                 	db	111
  1779  00FB35  6D                 	db	109
  1780  00FB36  6D                 	db	109
  1781  00FB37  61                 	db	97
  1782  00FB38  6E                 	db	110
  1783  00FB39  64                 	db	100
  1784  00FB3A  73                 	db	115
  1785  00FB3B  20                 	db	32
  1786  00FB3C  31                 	db	49
  1787  00FB3D  00                 	db	0
  1788  00FB3E  00                 	db	0
  1789  00FB3F  00                 	db	0
  1790  00FB40  00                 	db	0
  1791  00FB41  00                 	db	0
  1792  00FB42  00                 	db	0
  1793  00FB43  00                 	db	0
  1794  00FB44  00                 	db	0
  1795  00FB45  64                 	db	100
  1796  00FB46  69                 	db	105
  1797  00FB47  73                 	db	115
  1798  00FB48  70                 	db	112
  1799  00FB49  6C                 	db	108
  1800  00FB4A  61                 	db	97
  1801  00FB4B  79                 	db	121
  1802  00FB4C  73                 	db	115
  1803  00FB4D  20                 	db	32
  1804  00FB4E  31                 	db	49
  1805  00FB4F  00                 	db	0
  1806  00FB50  00                 	db	0
  1807  00FB51  00                 	db	0
  1808  00FB52  00                 	db	0
  1809  00FB53  00                 	db	0
  1810  00FB54  00                 	db	0
  1811  00FB55  00                 	db	0
  1812  00FB56  00                 	db	0
  1813  00FB57  63                 	db	99
  1814  00FB58  6F                 	db	111
  1815  00FB59  6D                 	db	109
  1816  00FB5A  6D                 	db	109
  1817  00FB5B  61                 	db	97
  1818  00FB5C  6E                 	db	110
  1819  00FB5D  64                 	db	100
  1820  00FB5E  73                 	db	115
  1821  00FB5F  20                 	db	32
  1822  00FB60  32                 	db	50
  1823  00FB61  00                 	db	0
  1824  00FB62  00                 	db	0
  1825  00FB63  00                 	db	0
  1826  00FB64  00                 	db	0
  1827  00FB65  00                 	db	0
  1828  00FB66  00                 	db	0
  1829  00FB67  00                 	db	0
  1830  00FB68  00                 	db	0
  1831  00FB69  64                 	db	100
  1832  00FB6A  69                 	db	105
  1833  00FB6B  73                 	db	115
  1834  00FB6C  70                 	db	112
  1835  00FB6D  6C                 	db	108
  1836  00FB6E  61                 	db	97
  1837  00FB6F  79                 	db	121
  1838  00FB70  73                 	db	115
  1839  00FB71  20                 	db	32
  1840  00FB72  32                 	db	50
  1841  00FB73  00                 	db	0
  1842  00FB74  00                 	db	0
  1843  00FB75  00                 	db	0
  1844  00FB76  00                 	db	0
  1845  00FB77  00                 	db	0
  1846  00FB78  00                 	db	0
  1847  00FB79  00                 	db	0
  1848  00FB7A  00                 	db	0
  1849  00FB7B  63                 	db	99
  1850  00FB7C  6F                 	db	111
  1851  00FB7D  6D                 	db	109
  1852  00FB7E  6D                 	db	109
  1853  00FB7F  61                 	db	97
  1854  00FB80  6E                 	db	110
  1855  00FB81  64                 	db	100
  1856  00FB82  73                 	db	115
  1857  00FB83  20                 	db	32
  1858  00FB84  33                 	db	51
  1859  00FB85  00                 	db	0
  1860  00FB86  00                 	db	0
  1861  00FB87  00                 	db	0
  1862  00FB88  00                 	db	0
  1863  00FB89  00                 	db	0
  1864  00FB8A  00                 	db	0
  1865  00FB8B  00                 	db	0
  1866  00FB8C  00                 	db	0
  1867  00FB8D  64                 	db	100
  1868  00FB8E  69                 	db	105
  1869  00FB8F  73                 	db	115
  1870  00FB90  70                 	db	112
  1871  00FB91  6C                 	db	108
  1872  00FB92  61                 	db	97
  1873  00FB93  79                 	db	121
  1874  00FB94  73                 	db	115
  1875  00FB95  20                 	db	32
  1876  00FB96  33                 	db	51
  1877  00FB97  00                 	db	0
  1878  00FB98  00                 	db	0
  1879  00FB99  00                 	db	0
  1880  00FB9A  00                 	db	0
  1881  00FB9B  00                 	db	0
  1882  00FB9C  00                 	db	0
  1883  00FB9D  00                 	db	0
  1884  00FB9E  00                 	db	0
  1885  00FB9F  63                 	db	99
  1886  00FBA0  6F                 	db	111
  1887  00FBA1  6D                 	db	109
  1888  00FBA2  6D                 	db	109
  1889  00FBA3  61                 	db	97
  1890  00FBA4  6E                 	db	110
  1891  00FBA5  64                 	db	100
  1892  00FBA6  73                 	db	115
  1893  00FBA7  20                 	db	32
  1894  00FBA8  34                 	db	52
  1895  00FBA9  00                 	db	0
  1896  00FBAA  00                 	db	0
  1897  00FBAB  00                 	db	0
  1898  00FBAC  00                 	db	0
  1899  00FBAD  00                 	db	0
  1900  00FBAE  00                 	db	0
  1901  00FBAF  00                 	db	0
  1902  00FBB0  00                 	db	0
  1903  00FBB1  64                 	db	100
  1904  00FBB2  69                 	db	105
  1905  00FBB3  73                 	db	115
  1906  00FBB4  70                 	db	112
  1907  00FBB5  6C                 	db	108
  1908  00FBB6  61                 	db	97
  1909  00FBB7  79                 	db	121
  1910  00FBB8  73                 	db	115
  1911  00FBB9  20                 	db	32
  1912  00FBBA  34                 	db	52
  1913  00FBBB  00                 	db	0
  1914  00FBBC  00                 	db	0
  1915  00FBBD  00                 	db	0
  1916  00FBBE  00                 	db	0
  1917  00FBBF  00                 	db	0
  1918  00FBC0  00                 	db	0
  1919  00FBC1  00                 	db	0
  1920  00FBC2  00                 	db	0
  1921  00FBC3                     __end_of_T:
  1922                           	opt callstack 0
  1923  00FBC3                     _spin:
  1924                           	opt callstack 0
  1925  00FBC3  7C                 	db	124
  1926  00FBC4  7C                 	db	124
  1927  00FBC5  2F                 	db	47
  1928  00FBC6  2F                 	db	47
  1929  00FBC7  2D                 	db	45
  1930  00FBC8  2D                 	db	45
  1931  00FBC9  00                 	db	0
  1932  00FBCA  00                 	db	0
  1933  00FBCB  00                 	db	0
  1934  00FBCC  00                 	db	0
  1935  00FBCD  00                 	db	0
  1936  00FBCE  00                 	db	0
  1937  00FBCF  00                 	db	0
  1938  00FBD0  00                 	db	0
  1939  00FBD1  00                 	db	0
  1940  00FBD2  00                 	db	0
  1941  00FBD3  00                 	db	0
  1942  00FBD4  00                 	db	0
  1943  00FBD5  00                 	db	0
  1944  00FBD6  00                 	db	0
  1945  00FBD7  7C                 	db	124
  1946  00FBD8  7C                 	db	124
  1947  00FBD9  2F                 	db	47
  1948  00FBDA  2F                 	db	47
  1949  00FBDB  2D                 	db	45
  1950  00FBDC  2D                 	db	45
  1951  00FBDD  5C                 	db	92
  1952  00FBDE  5C                 	db	92
  1953  00FBDF  00                 	db	0
  1954  00FBE0  00                 	db	0
  1955  00FBE1  00                 	db	0
  1956  00FBE2  00                 	db	0
  1957  00FBE3  00                 	db	0
  1958  00FBE4  00                 	db	0
  1959  00FBE5  00                 	db	0
  1960  00FBE6  00                 	db	0
  1961  00FBE7  00                 	db	0
  1962  00FBE8  00                 	db	0
  1963  00FBE9  00                 	db	0
  1964  00FBEA  00                 	db	0
  1965  00FBEB  4F                 	db	79
  1966  00FBEC  4F                 	db	79
  1967  00FBED  4F                 	db	79
  1968  00FBEE  4F                 	db	79
  1969  00FBEF  4F                 	db	79
  1970  00FBF0  4F                 	db	79
  1971  00FBF1  2D                 	db	45
  1972  00FBF2  2D                 	db	45
  1973  00FBF3  5F                 	db	95
  1974  00FBF4  5F                 	db	95
  1975  00FBF5  2D                 	db	45
  1976  00FBF6  00                 	db	0
  1977  00FBF7  00                 	db	0
  1978  00FBF8  00                 	db	0
  1979  00FBF9  00                 	db	0
  1980  00FBFA  00                 	db	0
  1981  00FBFB  00                 	db	0
  1982  00FBFC  00                 	db	0
  1983  00FBFD  00                 	db	0
  1984  00FBFE  00                 	db	0
  1985  00FBFF  76                 	db	118
  1986  00FC00  76                 	db	118
  1987  00FC01  3C                 	db	60
  1988  00FC02  3C                 	db	60
  1989  00FC03  5E                 	db	94
  1990  00FC04  5E                 	db	94
  1991  00FC05  3E                 	db	62
  1992  00FC06  3E                 	db	62
  1993  00FC07  00                 	db	0
  1994  00FC08  00                 	db	0
  1995  00FC09  00                 	db	0
  1996  00FC0A  00                 	db	0
  1997  00FC0B  00                 	db	0
  1998  00FC0C  00                 	db	0
  1999  00FC0D  00                 	db	0
  2000  00FC0E  00                 	db	0
  2001  00FC0F  00                 	db	0
  2002  00FC10  00                 	db	0
  2003  00FC11  00                 	db	0
  2004  00FC12  00                 	db	0
  2005  00FC13  2E                 	db	46
  2006  00FC14  2E                 	db	46
  2007  00FC15  2A                 	db	42
  2008  00FC16  2A                 	db	42
  2009  00FC17  78                 	db	120
  2010  00FC18  23                 	db	35
  2011  00FC19  78                 	db	120
  2012  00FC1A  23                 	db	35
  2013  00FC1B  58                 	db	88
  2014  00FC1C  58                 	db	88
  2015  00FC1D  7C                 	db	124
  2016  00FC1E  7C                 	db	124
  2017  00FC1F  2D                 	db	45
  2018  00FC20  2D                 	db	45
  2019  00FC21  00                 	db	0
  2020  00FC22  00                 	db	0
  2021  00FC23  00                 	db	0
  2022  00FC24  00                 	db	0
  2023  00FC25  00                 	db	0
  2024  00FC26  00                 	db	0
  2025  00FC27  2E                 	db	46
  2026  00FC28  2E                 	db	46
  2027  00FC29  6F                 	db	111
  2028  00FC2A  6F                 	db	111
  2029  00FC2B  4F                 	db	79
  2030  00FC2C  4F                 	db	79
  2031  00FC2D  6F                 	db	111
  2032  00FC2E  6F                 	db	111
  2033  00FC2F  00                 	db	0
  2034  00FC30  00                 	db	0
  2035  00FC31  00                 	db	0
  2036  00FC32  00                 	db	0
  2037  00FC33  00                 	db	0
  2038  00FC34  00                 	db	0
  2039  00FC35  00                 	db	0
  2040  00FC36  00                 	db	0
  2041  00FC37  00                 	db	0
  2042  00FC38  00                 	db	0
  2043  00FC39  00                 	db	0
  2044  00FC3A  00                 	db	0
  2045  00FC3B                     __end_of_spin:
  2046                           	opt callstack 0
  2047  00FC3B  0000               	dw	0
  2048  00FC3D  3F80               	dw	16256
  2049  00FC3F  0000               	dw	0
  2050  00FC41  3FC0               	dw	16320
  2051  00FC43                     __end_of_bp:
  2052                           	opt callstack 0
  2053  00FC43  AA00               	dw	43520
  2054  00FC45  3FB8               	dw	16312
  2055  00FC47                     __end_of_ivln2_h:
  2056                           	opt callstack 0
  2057  00FC47  23C6               	dw	9158
  2058  00FC49  B8F6               	dw	47350
  2059  00FC4B                     __end_of_cp_l:
  2060                           	opt callstack 0
  2061  00FC4B  4000               	dw	16384
  2062  00FC4D  3F76               	dw	16246
  2063  00FC4F                     __end_of_cp_h:
  2064                           	opt callstack 0
  2065  0000                     _IVTADL	set	14493
  2066  0000                     _IVTADH	set	14494
  2067  0000                     _IVTADU	set	14495
  2068  0000                     _PIR6bits	set	14758
  2069  0000                     _PIR4bits	set	14756
  2070  0000                     _PIE8bits	set	14744
  2071  0000                     _PIR8bits	set	14760
  2072  0000                     _SCANPR	set	14839
  2073  0000                     _DMA2PR	set	14836
  2074  0000                     _DMA1PR	set	14835
  2075  0000                     _MAINPR	set	14834
  2076  0000                     _ISRPR	set	14833
  2077  0000                     _PIE2bits	set	14738
  2078  0000                     _PIR2bits	set	14754
  2079  0000                     _PIE9bits	set	14745
  2080  0000                     _PIR9bits	set	14761
  2081  0000                     _PIE6bits	set	14742
  2082  0000                     _PIE3bits	set	14739
  2083  0000                     _PMD7	set	14791
  2084  0000                     _PMD6	set	14790
  2085  0000                     _PMD5	set	14789
  2086  0000                     _PMD4	set	14788
  2087  0000                     _PMD3	set	14787
  2088  0000                     _PMD2	set	14786
  2089  0000                     _PMD1	set	14785
  2090  0000                     _PMD0	set	14784
  2091  0000                     _OSCTUNE	set	14814
  2092  0000                     _OSCFRQ	set	14815
  2093  0000                     _OSCEN	set	14813
  2094  0000                     _OSCCON3	set	14811
  2095  0000                     _OSCCON1	set	14809
  2096  0000                     _IPR8bits	set	14728
  2097  0000                     _IPR9bits	set	14729
  2098  0000                     _IPR5bits	set	14725
  2099  0000                     _IPR1bits	set	14721
  2100  0000                     _IPR3bits	set	14723
  2101  0000                     _IPR6bits	set	14726
  2102  0000                     _IPR2bits	set	14722
  2103  0000                     _PIE5bits	set	14741
  2104  0000                     _PIE1bits	set	14737
  2105  0000                     _PIR5bits	set	14757
  2106  0000                     _PIR1bits	set	14753
  2107  0000                     _PLLR	set	118496
  2108  0000                     _SPI1SDIPPS	set	15071
  2109  0000                     _U1RXPPS	set	15077
  2110  0000                     _RC6PPS	set	14870
  2111  0000                     _RC5PPS	set	14869
  2112  0000                     _INT1PPS	set	15041
  2113  0000                     _RD1PPS	set	14873
  2114  0000                     _INT0PPS	set	15040
  2115  0000                     _RC3PPS	set	14867
  2116  0000                     _RB6PPS	set	14862
  2117  0000                     _SPI1SCKPPS	set	15070
  2118  0000                     _U2RXPPS	set	15080
  2119  0000                     _SLRCONF	set	14995
  2120  0000                     _SLRCONE	set	14979
  2121  0000                     _SLRCOND	set	14963
  2122  0000                     _SLRCONC	set	14947
  2123  0000                     _SLRCONB	set	14931
  2124  0000                     _SLRCONA	set	14915
  2125  0000                     _ODCOND	set	14962
  2126  0000                     _ODCONC	set	14946
  2127  0000                     _ODCONB	set	14930
  2128  0000                     _ODCONA	set	14914
  2129  0000                     _ODCONF	set	14994
  2130  0000                     _ODCONE	set	14978
  2131  0000                     _WPUC	set	14945
  2132  0000                     _WPUA	set	14913
  2133  0000                     _WPUB	set	14929
  2134  0000                     _WPUE	set	14977
  2135  0000                     _WPUF	set	14993
  2136  0000                     _WPUD	set	14961
  2137  0000                     _ANSELA	set	14912
  2138  0000                     _ANSELF	set	14992
  2139  0000                     _ANSELE	set	14976
  2140  0000                     _ANSELB	set	14928
  2141  0000                     _ANSELC	set	14944
  2142  0000                     _ANSELD	set	14960
  2143  0000                     _DMA2SSA	set	15321
  2144  0000                     _DMA1SSA	set	15353
  2145  0000                     _DMA2DSZ	set	15310
  2146  0000                     _DMA2SSZ	set	15319
  2147  0000                     _DMA2DSA	set	15312
  2148  0000                     _DMA1DSZ	set	15342
  2149  0000                     _DMA1SSZ	set	15351
  2150  0000                     _DMA1DSA	set	15344
  2151  0000                     _DMA2CON0bits	set	15324
  2152  0000                     _DMA2CON1bits	set	15325
  2153  0000                     _DMA1CON0bits	set	15356
  2154  0000                     _DMA1CON1bits	set	15357
  2155  0000                     _DMA2CON0	set	15324
  2156  0000                     _DMA2AIRQ	set	15326
  2157  0000                     _DMA2SIRQ	set	15327
  2158  0000                     _DMA2CON1	set	15325
  2159  0000                     _DMA1CON0	set	15356
  2160  0000                     _DMA1AIRQ	set	15358
  2161  0000                     _DMA1SIRQ	set	15359
  2162  0000                     _DMA1CON1	set	15357
  2163  0000                     _CLKRCON	set	15589
  2164  0000                     _CLKRCLK	set	15590
  2165  0000                     _SPI1INTFbits	set	15642
  2166  0000                     _SPI1RXB	set	15632
  2167  0000                     _SPI1TXB	set	15633
  2168  0000                     _SPI1TCNTL	set	15634
  2169  0000                     _SPI1CON0	set	15636
  2170  0000                     _SPI1CLK	set	15644
  2171  0000                     _SPI1BAUD	set	15641
  2172  0000                     _SPI1CON2	set	15638
  2173  0000                     _SPI1CON1	set	15637
  2174  0000                     _U2RXB	set	15824
  2175  0000                     _U2TXB	set	15826
  2176  0000                     _U2ERRIE	set	15842
  2177  0000                     _U2ERRIR	set	15841
  2178  0000                     _U2UIR	set	15840
  2179  0000                     _U2FIFO	set	15839
  2180  0000                     _U2BRGH	set	15838
  2181  0000                     _U2BRGL	set	15837
  2182  0000                     _U2CON2	set	15836
  2183  0000                     _U2CON1	set	15835
  2184  0000                     _U2CON0	set	15834
  2185  0000                     _U2P3L	set	15832
  2186  0000                     _U2P2L	set	15830
  2187  0000                     _U2P1L	set	15828
  2188  0000                     _U1RXB	set	15848
  2189  0000                     _U1ERRIE	set	15866
  2190  0000                     _U1ERRIR	set	15865
  2191  0000                     _U1UIR	set	15864
  2192  0000                     _U1FIFO	set	15863
  2193  0000                     _U1BRGH	set	15862
  2194  0000                     _U1BRGL	set	15861
  2195  0000                     _U1CON2	set	15860
  2196  0000                     _U1CON1	set	15859
  2197  0000                     _U1CON0	set	15858
  2198  0000                     _U1P3H	set	15857
  2199  0000                     _U1P3L	set	15856
  2200  0000                     _U1P2H	set	15855
  2201  0000                     _U1P2L	set	15854
  2202  0000                     _U1P1H	set	15853
  2203  0000                     _U1P1L	set	15852
  2204  0000                     _FVRCON	set	16065
  2205  0000                     _ADFLTRL	set	16102
  2206  0000                     _ADFLTRH	set	16103
  2207  0000                     _ADCON0bits	set	16120
  2208  0000                     _ADCON0	set	16120
  2209  0000                     _ADCLK	set	16127
  2210  0000                     _ADACT	set	16126
  2211  0000                     _ADREF	set	16125
  2212  0000                     _ADSTAT	set	16124
  2213  0000                     _ADCON3	set	16123
  2214  0000                     _ADCON2	set	16122
  2215  0000                     _ADCON1	set	16121
  2216  0000                     _ADPREH	set	16119
  2217  0000                     _ADPREL	set	16118
  2218  0000                     _ADCAP	set	16117
  2219  0000                     _ADACQH	set	16116
  2220  0000                     _ADACQL	set	16115
  2221  0000                     _ADPCH	set	16113
  2222  0000                     _ADRPT	set	16108
  2223  0000                     _ADACCU	set	16106
  2224  0000                     _ADSTPTH	set	16101
  2225  0000                     _ADSTPTL	set	16100
  2226  0000                     _ADUTHH	set	16097
  2227  0000                     _ADUTHL	set	16096
  2228  0000                     _ADLTHH	set	16095
  2229  0000                     _ADLTHL	set	16094
  2230  0000                     _CCPTMRS1bits	set	16223
  2231  0000                     _PORTFbits	set	16335
  2232  0000                     _LATFbits	set	16319
  2233  0000                     _LATCbits	set	16316
  2234  0000                     _LATDbits	set	16317
  2235  0000                     _PORTBbits	set	16331
  2236  0000                     _T3CONbits	set	16294
  2237  0000                     _T3CON	set	16294
  2238  0000                     _TMR3L	set	16292
  2239  0000                     _TMR3H	set	16293
  2240  0000                     _T3CLK	set	16297
  2241  0000                     _T3GATE	set	16296
  2242  0000                     _T3GCON	set	16295
  2243  0000                     _T2CON	set	16300
  2244  0000                     _T2TMR	set	16298
  2245  0000                     _T2PR	set	16299
  2246  0000                     _T2RST	set	16303
  2247  0000                     _T2HLT	set	16301
  2248  0000                     _T2CLKCON	set	16302
  2249  0000                     _PWM8DCL	set	16224
  2250  0000                     _PWM8DCH	set	16225
  2251  0000                     _PWM8CON	set	16226
  2252  0000                     _LATEbits	set	16318
  2253  0000                     _T5CONbits	set	16282
  2254  0000                     _T5CON	set	16282
  2255  0000                     _TMR5L	set	16280
  2256  0000                     _TMR5H	set	16281
  2257  0000                     _T5CLK	set	16285
  2258  0000                     _T5GATE	set	16284
  2259  0000                     _T5GCON	set	16283
  2260  0000                     _T6CON	set	16276
  2261  0000                     _T6TMR	set	16274
  2262  0000                     _T6PR	set	16275
  2263  0000                     _T6RST	set	16279
  2264  0000                     _T6HLT	set	16277
  2265  0000                     _T6CLKCON	set	16278
  2266  0000                     _TRISD	set	16325
  2267  0000                     _TRISC	set	16324
  2268  0000                     _TRISB	set	16323
  2269  0000                     _TRISA	set	16322
  2270  0000                     _TRISF	set	16327
  2271  0000                     _TRISE	set	16326
  2272  0000                     _LATC	set	16316
  2273  0000                     _LATB	set	16315
  2274  0000                     _LATF	set	16319
  2275  0000                     _LATA	set	16314
  2276  0000                     _LATD	set	16317
  2277  0000                     _LATE	set	16318
  2278  0000                     _IVTLOCKbits	set	16340
  2279  0000                     _IVTLOCK	set	16340
  2280  0000                     _INTCON0bits	set	16338
  2281  0000                     _GIE	set	130711
  2282  00FC4F                     STR_65:
  2283                           
  2284                           ; BSR set to: 57
  2285  00FC4F  20                 	db	32
  2286  00FC50  25                 	db	37
  2287  00FC51  63                 	db	99	;'c'
  2288  00FC52  20                 	db	32
  2289  00FC53  2C                 	db	44
  2290  00FC54  25                 	db	37
  2291  00FC55  6C                 	db	108	;'l'
  2292  00FC56  75                 	db	117	;'u'
  2293  00FC57  2C                 	db	44
  2294  00FC58  25                 	db	37
  2295  00FC59  34                 	db	52	;'4'
  2296  00FC5A  2E                 	db	46
  2297  00FC5B  34                 	db	52	;'4'
  2298  00FC5C  66                 	db	102	;'f'
  2299  00FC5D  2C                 	db	44
  2300  00FC5E  25                 	db	37
  2301  00FC5F  34                 	db	52	;'4'
  2302  00FC60  2E                 	db	46
  2303  00FC61  34                 	db	52	;'4'
  2304  00FC62  66                 	db	102	;'f'
  2305  00FC63  2C                 	db	44
  2306  00FC64  25                 	db	37
  2307  00FC65  34                 	db	52	;'4'
  2308  00FC66  2E                 	db	46
  2309  00FC67  34                 	db	52	;'4'
  2310  00FC68  66                 	db	102	;'f'
  2311  00FC69  2C                 	db	44
  2312  00FC6A  25                 	db	37
  2313  00FC6B  34                 	db	52	;'4'
  2314  00FC6C  2E                 	db	46
  2315  00FC6D  34                 	db	52	;'4'
  2316  00FC6E  66                 	db	102	;'f'
  2317  00FC6F  2C                 	db	44
  2318  00FC70  25                 	db	37
  2319  00FC71  34                 	db	52	;'4'
  2320  00FC72  2E                 	db	46
  2321  00FC73  33                 	db	51	;'3'
  2322  00FC74  66                 	db	102	;'f'
  2323  00FC75  2C                 	db	44
  2324  00FC76  25                 	db	37
  2325  00FC77  34                 	db	52	;'4'
  2326  00FC78  2E                 	db	46
  2327  00FC79  33                 	db	51	;'3'
  2328  00FC7A  66                 	db	102	;'f'
  2329  00FC7B  2C                 	db	44
  2330  00FC7C  25                 	db	37
  2331  00FC7D  34                 	db	52	;'4'
  2332  00FC7E  2E                 	db	46
  2333  00FC7F  33                 	db	51	;'3'
  2334  00FC80  66                 	db	102	;'f'
  2335  00FC81  2C                 	db	44
  2336  00FC82  25                 	db	37
  2337  00FC83  34                 	db	52	;'4'
  2338  00FC84  2E                 	db	46
  2339  00FC85  33                 	db	51	;'3'
  2340  00FC86  66                 	db	102	;'f'
  2341  00FC87  2C                 	db	44
  2342  00FC88  25                 	db	37
  2343  00FC89  34                 	db	52	;'4'
  2344  00FC8A  2E                 	db	46
  2345  00FC8B  33                 	db	51	;'3'
  2346  00FC8C  66                 	db	102	;'f'
  2347  00FC8D  2C                 	db	44
  2348  00FC8E  25                 	db	37
  2349  00FC8F  34                 	db	52	;'4'
  2350  00FC90  2E                 	db	46
  2351  00FC91  33                 	db	51	;'3'
  2352  00FC92  66                 	db	102	;'f'
  2353  00FC93  2C                 	db	44
  2354  00FC94  25                 	db	37
  2355  00FC95  34                 	db	52	;'4'
  2356  00FC96  2E                 	db	46
  2357  00FC97  33                 	db	51	;'3'
  2358  00FC98  64                 	db	100	;'d'
  2359  00FC99  2C                 	db	44
  2360  00FC9A  25                 	db	37
  2361  00FC9B  34                 	db	52	;'4'
  2362  00FC9C  2E                 	db	46
  2363  00FC9D  33                 	db	51	;'3'
  2364  00FC9E  64                 	db	100	;'d'
  2365  00FC9F  2C                 	db	44
  2366  00FCA0  25                 	db	37
  2367  00FCA1  32                 	db	50	;'2'
  2368  00FCA2  2E                 	db	46
  2369  00FCA3  36                 	db	54	;'6'
  2370  00FCA4  66                 	db	102	;'f'
  2371  00FCA5  2C                 	db	44
  2372  00FCA6  25                 	db	37
  2373  00FCA7  34                 	db	52	;'4'
  2374  00FCA8  2E                 	db	46
  2375  00FCA9  33                 	db	51	;'3'
  2376  00FCAA  66                 	db	102	;'f'
  2377  00FCAB  2C                 	db	44
  2378  00FCAC  25                 	db	37
  2379  00FCAD  64                 	db	100	;'d'
  2380  00FCAE  2C                 	db	44
  2381  00FCAF  25                 	db	37
  2382  00FCB0  6C                 	db	108	;'l'
  2383  00FCB1  75                 	db	117	;'u'
  2384  00FCB2  2C                 	db	44
  2385  00FCB3  25                 	db	37
  2386  00FCB4  6C                 	db	108	;'l'
  2387  00FCB5  75                 	db	117	;'u'
  2388  00FCB6  0D                 	db	13
  2389  00FCB7  0A                 	db	10
  2390  00FCB8  00                 	db	0
  2391  00FCB9                     STR_17:
  2392                           
  2393                           ; BSR set to: 57
  2394  00FCB9  52                 	db	82	;'R'
  2395  00FCBA  31                 	db	49	;'1'
  2396  00FCBB  20                 	db	32
  2397  00FCBC  25                 	db	37
  2398  00FCBD  32                 	db	50	;'2'
  2399  00FCBE  2E                 	db	46
  2400  00FCBF  33                 	db	51	;'3'
  2401  00FCC0  66                 	db	102	;'f'
  2402  00FCC1  20                 	db	32
  2403  00FCC2  25                 	db	37
  2404  00FCC3  33                 	db	51	;'3'
  2405  00FCC4  2E                 	db	46
  2406  00FCC5  34                 	db	52	;'4'
  2407  00FCC6  66                 	db	102	;'f'
  2408  00FCC7  20                 	db	32
  2409  00FCC8  20                 	db	32
  2410  00FCC9  20                 	db	32
  2411  00FCCA  20                 	db	32
  2412  00FCCB  20                 	db	32
  2413  00FCCC  20                 	db	32
  2414  00FCCD  20                 	db	32
  2415  00FCCE  20                 	db	32
  2416  00FCCF  20                 	db	32
  2417  00FCD0  20                 	db	32
  2418  00FCD1  20                 	db	32
  2419  00FCD2  00                 	db	0
  2420  00FCD3                     STR_18:
  2421                           
  2422                           ; BSR set to: 57
  2423  00FCD3  52                 	db	82	;'R'
  2424  00FCD4  32                 	db	50	;'2'
  2425  00FCD5  20                 	db	32
  2426  00FCD6  25                 	db	37
  2427  00FCD7  32                 	db	50	;'2'
  2428  00FCD8  2E                 	db	46
  2429  00FCD9  33                 	db	51	;'3'
  2430  00FCDA  66                 	db	102	;'f'
  2431  00FCDB  20                 	db	32
  2432  00FCDC  25                 	db	37
  2433  00FCDD  33                 	db	51	;'3'
  2434  00FCDE  2E                 	db	46
  2435  00FCDF  34                 	db	52	;'4'
  2436  00FCE0  66                 	db	102	;'f'
  2437  00FCE1  20                 	db	32
  2438  00FCE2  20                 	db	32
  2439  00FCE3  20                 	db	32
  2440  00FCE4  20                 	db	32
  2441  00FCE5  20                 	db	32
  2442  00FCE6  20                 	db	32
  2443  00FCE7  20                 	db	32
  2444  00FCE8  20                 	db	32
  2445  00FCE9  20                 	db	32
  2446  00FCEA  20                 	db	32
  2447  00FCEB  20                 	db	32
  2448  00FCEC  00                 	db	0
  2449  00FCED                     
  2450                           ; BSR set to: 57
  2451  00FCED  20                 	db	32
  2452  00FCEE  4D                 	db	77	;'M'
  2453  00FCEF  65                 	db	101	;'e'
  2454  00FCF0  73                 	db	115	;'s'
  2455  00FCF1  67                 	db	103	;'g'
  2456  00FCF2  20                 	db	32
  2457  00FCF3  25                 	db	37
  2458  00FCF4  64                 	db	100	;'d'
  2459  00FCF5  20                 	db	32
  2460  00FCF6  53                 	db	83	;'S'
  2461  00FCF7  74                 	db	116	;'t'
  2462  00FCF8  61                 	db	97	;'a'
  2463  00FCF9  63                 	db	99	;'c'
  2464  00FCFA  6B                 	db	107	;'k'
  2465  00FCFB  20                 	db	32
  2466  00FCFC  25                 	db	37
  2467  00FCFD  64                 	db	100	;'d'
  2468  00FCFE  20                 	db	32
  2469  00FCFF  20                 	db	32
  2470  00FD00  20                 	db	32
  2471  00FD01  20                 	db	32
  2472  00FD02  20                 	db	32
  2473  00FD03  20                 	db	32
  2474  00FD04  00                 	db	0
  2475  00FD05                     STR_9:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FD05  53                 	db	83	;'S'
  2479  00FD06  20                 	db	32
  2480  00FD07  53                 	db	83	;'S'
  2481  00FD08  25                 	db	37
  2482  00FD09  63                 	db	99	;'c'
  2483  00FD0A  43                 	db	67	;'C'
  2484  00FD0B  20                 	db	32
  2485  00FD0C  25                 	db	37
  2486  00FD0D  64                 	db	100	;'d'
  2487  00FD0E  20                 	db	32
  2488  00FD0F  25                 	db	37
  2489  00FD10  32                 	db	50	;'2'
  2490  00FD11  2E                 	db	46
  2491  00FD12  34                 	db	52	;'4'
  2492  00FD13  66                 	db	102	;'f'
  2493  00FD14  20                 	db	32
  2494  00FD15  20                 	db	32
  2495  00FD16  20                 	db	32
  2496  00FD17  20                 	db	32
  2497  00FD18  20                 	db	32
  2498  00FD19  20                 	db	32
  2499  00FD1A  20                 	db	32
  2500  00FD1B  00                 	db	0
  2501  00FD1C                     STR_16:
  2502                           
  2503                           ; BSR set to: 57
  2504  00FD1C  45                 	db	69	;'E'
  2505  00FD1D  53                 	db	83	;'S'
  2506  00FD1E  52                 	db	82	;'R'
  2507  00FD1F  20                 	db	32
  2508  00FD20  20                 	db	32
  2509  00FD21  25                 	db	37
  2510  00FD22  32                 	db	50	;'2'
  2511  00FD23  2E                 	db	46
  2512  00FD24  36                 	db	54	;'6'
  2513  00FD25  66                 	db	102	;'f'
  2514  00FD26  20                 	db	32
  2515  00FD27  20                 	db	32
  2516  00FD28  20                 	db	32
  2517  00FD29  20                 	db	32
  2518  00FD2A  20                 	db	32
  2519  00FD2B  20                 	db	32
  2520  00FD2C  20                 	db	32
  2521  00FD2D  20                 	db	32
  2522  00FD2E  20                 	db	32
  2523  00FD2F  20                 	db	32
  2524  00FD30  20                 	db	32
  2525  00FD31  00                 	db	0
  2526  00FD32                     STR_10:
  2527                           
  2528                           ; BSR set to: 57
  2529  00FD32  53                 	db	83	;'S'
  2530  00FD33  74                 	db	116	;'t'
  2531  00FD34  61                 	db	97	;'a'
  2532  00FD35  74                 	db	116	;'t'
  2533  00FD36  69                 	db	105	;'i'
  2534  00FD37  63                 	db	99	;'c'
  2535  00FD38  20                 	db	32
  2536  00FD39  53                 	db	83	;'S'
  2537  00FD3A  4F                 	db	79	;'O'
  2538  00FD3B  43                 	db	67	;'C'
  2539  00FD3C  20                 	db	32
  2540  00FD3D  25                 	db	37
  2541  00FD3E  64                 	db	100	;'d'
  2542  00FD3F  20                 	db	32
  2543  00FD40  20                 	db	32
  2544  00FD41  20                 	db	32
  2545  00FD42  20                 	db	32
  2546  00FD43  20                 	db	32
  2547  00FD44  20                 	db	32
  2548  00FD45  20                 	db	32
  2549  00FD46  20                 	db	32
  2550  00FD47  00                 	db	0
  2551  00FD48                     STR_11:
  2552                           
  2553                           ; BSR set to: 57
  2554  00FD48  42                 	db	66	;'B'
  2555  00FD49  61                 	db	97	;'a'
  2556  00FD4A  74                 	db	116	;'t'
  2557  00FD4B  74                 	db	116	;'t'
  2558  00FD4C  65                 	db	101	;'e'
  2559  00FD4D  72                 	db	114	;'r'
  2560  00FD4E  79                 	db	121	;'y'
  2561  00FD4F  20                 	db	32
  2562  00FD50  41                 	db	65	;'A'
  2563  00FD51  68                 	db	104	;'h'
  2564  00FD52  20                 	db	32
  2565  00FD53  25                 	db	37
  2566  00FD54  33                 	db	51	;'3'
  2567  00FD55  2E                 	db	46
  2568  00FD56  32                 	db	50	;'2'
  2569  00FD57  66                 	db	102	;'f'
  2570  00FD58  20                 	db	32
  2571  00FD59  20                 	db	32
  2572  00FD5A  20                 	db	32
  2573  00FD5B  20                 	db	32
  2574  00FD5C  20                 	db	32
  2575  00FD5D  00                 	db	0
  2576  00FD5E                     STR_15:
  2577                           
  2578                           ; BSR set to: 57
  2579  00FD5E  43                 	db	67	;'C'
  2580  00FD5F  68                 	db	104	;'h'
  2581  00FD60  65                 	db	101	;'e'
  2582  00FD61  63                 	db	99	;'c'
  2583  00FD62  6B                 	db	107	;'k'
  2584  00FD63  69                 	db	105	;'i'
  2585  00FD64  6E                 	db	110	;'n'
  2586  00FD65  67                 	db	103	;'g'
  2587  00FD66  20                 	db	32
  2588  00FD67  25                 	db	37
  2589  00FD68  63                 	db	99	;'c'
  2590  00FD69  20                 	db	32
  2591  00FD6A  25                 	db	37
  2592  00FD6B  63                 	db	99	;'c'
  2593  00FD6C  20                 	db	32
  2594  00FD6D  20                 	db	32
  2595  00FD6E  20                 	db	32
  2596  00FD6F  20                 	db	32
  2597  00FD70  20                 	db	32
  2598  00FD71  20                 	db	32
  2599  00FD72  00                 	db	0
  2600  00FD73                     STR_37:
  2601                           
  2602                           ; BSR set to: 57
  2603  00FD73  45                 	db	69	;'E'
  2604  00FD74  53                 	db	83	;'S'
  2605  00FD75  52                 	db	82	;'R'
  2606  00FD76  20                 	db	32
  2607  00FD77  20                 	db	32
  2608  00FD78  25                 	db	37
  2609  00FD79  32                 	db	50	;'2'
  2610  00FD7A  2E                 	db	46
  2611  00FD7B  36                 	db	54	;'6'
  2612  00FD7C  66                 	db	102	;'f'
  2613  00FD7D  20                 	db	32
  2614  00FD7E  20                 	db	32
  2615  00FD7F  20                 	db	32
  2616  00FD80  20                 	db	32
  2617  00FD81  20                 	db	32
  2618  00FD82  20                 	db	32
  2619  00FD83  20                 	db	32
  2620  00FD84  20                 	db	32
  2621  00FD85  20                 	db	32
  2622  00FD86  00                 	db	0
  2623  00FD87                     STR_36:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FD87  53                 	db	83	;'S'
  2627  00FD88  25                 	db	37
  2628  00FD89  63                 	db	99	;'c'
  2629  00FD8A  43                 	db	67	;'C'
  2630  00FD8B  20                 	db	32
  2631  00FD8C  25                 	db	37
  2632  00FD8D  64                 	db	100	;'d'
  2633  00FD8E  20                 	db	32
  2634  00FD8F  52                 	db	82	;'R'
  2635  00FD90  55                 	db	85	;'U'
  2636  00FD91  4E                 	db	78	;'N'
  2637  00FD92  20                 	db	32
  2638  00FD93  25                 	db	37
  2639  00FD94  64                 	db	100	;'d'
  2640  00FD95  20                 	db	32
  2641  00FD96  20                 	db	32
  2642  00FD97  20                 	db	32
  2643  00FD98  20                 	db	32
  2644  00FD99  20                 	db	32
  2645  00FD9A  00                 	db	0
  2646  00FD9B                     STR_25:
  2647                           
  2648                           ; BSR set to: 57
  2649  00FD9B  50                 	db	80	;'P'
  2650  00FD9C  56                 	db	86	;'V'
  2651  00FD9D  20                 	db	32
  2652  00FD9E  25                 	db	37
  2653  00FD9F  63                 	db	99	;'c'
  2654  00FDA0  20                 	db	32
  2655  00FDA1  57                 	db	87	;'W'
  2656  00FDA2  48                 	db	72	;'H'
  2657  00FDA3  20                 	db	32
  2658  00FDA4  25                 	db	37
  2659  00FDA5  33                 	db	51	;'3'
  2660  00FDA6  2E                 	db	46
  2661  00FDA7  32                 	db	50	;'2'
  2662  00FDA8  66                 	db	102	;'f'
  2663  00FDA9  20                 	db	32
  2664  00FDAA  20                 	db	32
  2665  00FDAB  20                 	db	32
  2666  00FDAC  20                 	db	32
  2667  00FDAD  20                 	db	32
  2668  00FDAE  00                 	db	0
  2669  00FDAF                     STR_34:
  2670                           
  2671                           ; BSR set to: 57
  2672  00FDAF  42                 	db	66	;'B'
  2673  00FDB0  41                 	db	65	;'A'
  2674  00FDB1  54                 	db	84	;'T'
  2675  00FDB2  54                 	db	84	;'T'
  2676  00FDB3  20                 	db	32
  2677  00FDB4  50                 	db	80	;'P'
  2678  00FDB5  57                 	db	87	;'W'
  2679  00FDB6  52                 	db	82	;'R'
  2680  00FDB7  20                 	db	32
  2681  00FDB8  25                 	db	37
  2682  00FDB9  33                 	db	51	;'3'
  2683  00FDBA  2E                 	db	46
  2684  00FDBB  32                 	db	50	;'2'
  2685  00FDBC  66                 	db	102	;'f'
  2686  00FDBD  20                 	db	32
  2687  00FDBE  20                 	db	32
  2688  00FDBF  20                 	db	32
  2689  00FDC0  20                 	db	32
  2690  00FDC1  20                 	db	32
  2691  00FDC2  00                 	db	0
  2692  00FDC3                     STR_38:
  2693                           
  2694                           ; BSR set to: 57
  2695  00FDC3  52                 	db	82	;'R'
  2696  00FDC4  31                 	db	49	;'1'
  2697  00FDC5  20                 	db	32
  2698  00FDC6  25                 	db	37
  2699  00FDC7  32                 	db	50	;'2'
  2700  00FDC8  2E                 	db	46
  2701  00FDC9  33                 	db	51	;'3'
  2702  00FDCA  66                 	db	102	;'f'
  2703  00FDCB  20                 	db	32
  2704  00FDCC  25                 	db	37
  2705  00FDCD  33                 	db	51	;'3'
  2706  00FDCE  2E                 	db	46
  2707  00FDCF  34                 	db	52	;'4'
  2708  00FDD0  66                 	db	102	;'f'
  2709  00FDD1  20                 	db	32
  2710  00FDD2  20                 	db	32
  2711  00FDD3  20                 	db	32
  2712  00FDD4  20                 	db	32
  2713  00FDD5  20                 	db	32
  2714  00FDD6  00                 	db	0
  2715  00FDD7                     STR_39:
  2716                           
  2717                           ; BSR set to: 57
  2718  00FDD7  52                 	db	82	;'R'
  2719  00FDD8  32                 	db	50	;'2'
  2720  00FDD9  20                 	db	32
  2721  00FDDA  25                 	db	37
  2722  00FDDB  32                 	db	50	;'2'
  2723  00FDDC  2E                 	db	46
  2724  00FDDD  33                 	db	51	;'3'
  2725  00FDDE  66                 	db	102	;'f'
  2726  00FDDF  20                 	db	32
  2727  00FDE0  25                 	db	37
  2728  00FDE1  33                 	db	51	;'3'
  2729  00FDE2  2E                 	db	46
  2730  00FDE3  34                 	db	52	;'4'
  2731  00FDE4  66                 	db	102	;'f'
  2732  00FDE5  20                 	db	32
  2733  00FDE6  20                 	db	32
  2734  00FDE7  20                 	db	32
  2735  00FDE8  20                 	db	32
  2736  00FDE9  20                 	db	32
  2737  00FDEA  00                 	db	0
  2738  00FDEB                     STR_22:
  2739                           
  2740                           ; BSR set to: 57
  2741  00FDEB  50                 	db	80	;'P'
  2742  00FDEC  56                 	db	86	;'V'
  2743  00FDED  20                 	db	32
  2744  00FDEE  25                 	db	37
  2745  00FDEF  63                 	db	99	;'c'
  2746  00FDF0  20                 	db	32
  2747  00FDF1  50                 	db	80	;'P'
  2748  00FDF2  57                 	db	87	;'W'
  2749  00FDF3  52                 	db	82	;'R'
  2750  00FDF4  20                 	db	32
  2751  00FDF5  25                 	db	37
  2752  00FDF6  33                 	db	51	;'3'
  2753  00FDF7  2E                 	db	46
  2754  00FDF8  32                 	db	50	;'2'
  2755  00FDF9  66                 	db	102	;'f'
  2756  00FDFA  20                 	db	32
  2757  00FDFB  20                 	db	32
  2758  00FDFC  20                 	db	32
  2759  00FDFD  20                 	db	32
  2760  00FDFE  00                 	db	0
  2761  00FDFF                     STR_35:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FDFF  42                 	db	66	;'B'
  2765  00FE00  41                 	db	65	;'A'
  2766  00FE01  48                 	db	72	;'H'
  2767  00FE02  20                 	db	32
  2768  00FE03  25                 	db	37
  2769  00FE04  33                 	db	51	;'3'
  2770  00FE05  2E                 	db	46
  2771  00FE06  32                 	db	50	;'2'
  2772  00FE07  66                 	db	102	;'f'
  2773  00FE08  20                 	db	32
  2774  00FE09  50                 	db	80	;'P'
  2775  00FE0A  25                 	db	37
  2776  00FE0B  33                 	db	51	;'3'
  2777  00FE0C  2E                 	db	46
  2778  00FE0D  32                 	db	50	;'2'
  2779  00FE0E  66                 	db	102	;'f'
  2780  00FE0F  20                 	db	32
  2781  00FE10  20                 	db	32
  2782  00FE11  20                 	db	32
  2783  00FE12  00                 	db	0
  2784  00FE13                     STR_58:
  2785                           
  2786                           ; BSR set to: 57
  2787  00FE13  20                 	db	32
  2788  00FE14  20                 	db	32
  2789  00FE15  20                 	db	32
  2790  00FE16  20                 	db	32
  2791  00FE17  20                 	db	32
  2792  00FE18  20                 	db	32
  2793  00FE19  20                 	db	32
  2794  00FE1A  20                 	db	32
  2795  00FE1B  20                 	db	32
  2796  00FE1C  20                 	db	32
  2797  00FE1D  20                 	db	32
  2798  00FE1E  20                 	db	32
  2799  00FE1F  20                 	db	32
  2800  00FE20  20                 	db	32
  2801  00FE21  20                 	db	32
  2802  00FE22  20                 	db	32
  2803  00FE23  20                 	db	32
  2804  00FE24  20                 	db	32
  2805  00FE25  00                 	db	0
  2806  00FE26                     STR_48:
  2807                           
  2808                           ; BSR set to: 57
  2809  00FE26  48                 	db	72	;'H'
  2810  00FE27  45                 	db	69	;'E'
  2811  00FE28  4C                 	db	76	;'L'
  2812  00FE29  50                 	db	80	;'P'
  2813  00FE2A  20                 	db	32
  2814  00FE2B  25                 	db	37
  2815  00FE2C  73                 	db	115	;'s'
  2816  00FE2D  20                 	db	32
  2817  00FE2E  20                 	db	32
  2818  00FE2F  20                 	db	32
  2819  00FE30  20                 	db	32
  2820  00FE31  20                 	db	32
  2821  00FE32  20                 	db	32
  2822  00FE33  20                 	db	32
  2823  00FE34  20                 	db	32
  2824  00FE35  20                 	db	32
  2825  00FE36  20                 	db	32
  2826  00FE37  20                 	db	32
  2827  00FE38  00                 	db	0
  2828  00FE39                     
  2829                           ; BSR set to: 57
  2830  00FE39  44                 	db	68	;'D'
  2831  00FE3A  49                 	db	73	;'I'
  2832  00FE3B  53                 	db	83	;'S'
  2833  00FE3C  50                 	db	80	;'P'
  2834  00FE3D  4C                 	db	76	;'L'
  2835  00FE3E  41                 	db	65	;'A'
  2836  00FE3F  59                 	db	89	;'Y'
  2837  00FE40  20                 	db	32
  2838  00FE41  25                 	db	37
  2839  00FE42  73                 	db	115	;'s'
  2840  00FE43  20                 	db	32
  2841  00FE44  20                 	db	32
  2842  00FE45  20                 	db	32
  2843  00FE46  20                 	db	32
  2844  00FE47  20                 	db	32
  2845  00FE48  20                 	db	32
  2846  00FE49  20                 	db	32
  2847  00FE4A  20                 	db	32
  2848  00FE4B  00                 	db	0
  2849  00FE4C                     STR_31:
  2850                           
  2851                           ; BSR set to: 57
  2852  00FE4C  42                 	db	66	;'B'
  2853  00FE4D  41                 	db	65	;'A'
  2854  00FE4E  54                 	db	84	;'T'
  2855  00FE4F  20                 	db	32
  2856  00FE50  49                 	db	73	;'I'
  2857  00FE51  57                 	db	87	;'W'
  2858  00FE52  48                 	db	72	;'H'
  2859  00FE53  20                 	db	32
  2860  00FE54  25                 	db	37
  2861  00FE55  34                 	db	52	;'4'
  2862  00FE56  2E                 	db	46
  2863  00FE57  31                 	db	49	;'1'
  2864  00FE58  66                 	db	102	;'f'
  2865  00FE59  20                 	db	32
  2866  00FE5A  20                 	db	32
  2867  00FE5B  20                 	db	32
  2868  00FE5C  20                 	db	32
  2869  00FE5D  20                 	db	32
  2870  00FE5E  00                 	db	0
  2871  00FE5F                     STR_32:
  2872                           
  2873                           ; BSR set to: 57
  2874  00FE5F  42                 	db	66	;'B'
  2875  00FE60  41                 	db	65	;'A'
  2876  00FE61  54                 	db	84	;'T'
  2877  00FE62  20                 	db	32
  2878  00FE63  4F                 	db	79	;'O'
  2879  00FE64  57                 	db	87	;'W'
  2880  00FE65  48                 	db	72	;'H'
  2881  00FE66  20                 	db	32
  2882  00FE67  25                 	db	37
  2883  00FE68  34                 	db	52	;'4'
  2884  00FE69  2E                 	db	46
  2885  00FE6A  31                 	db	49	;'1'
  2886  00FE6B  66                 	db	102	;'f'
  2887  00FE6C  20                 	db	32
  2888  00FE6D  20                 	db	32
  2889  00FE6E  20                 	db	32
  2890  00FE6F  20                 	db	32
  2891  00FE70  20                 	db	32
  2892  00FE71  00                 	db	0
  2893  00FE72                     STR_33:
  2894                           
  2895                           ; BSR set to: 57
  2896  00FE72  42                 	db	66	;'B'
  2897  00FE73  41                 	db	65	;'A'
  2898  00FE74  54                 	db	84	;'T'
  2899  00FE75  20                 	db	32
  2900  00FE76  54                 	db	84	;'T'
  2901  00FE77  57                 	db	87	;'W'
  2902  00FE78  48                 	db	72	;'H'
  2903  00FE79  20                 	db	32
  2904  00FE7A  25                 	db	37
  2905  00FE7B  34                 	db	52	;'4'
  2906  00FE7C  2E                 	db	46
  2907  00FE7D  31                 	db	49	;'1'
  2908  00FE7E  66                 	db	102	;'f'
  2909  00FE7F  20                 	db	32
  2910  00FE80  20                 	db	32
  2911  00FE81  20                 	db	32
  2912  00FE82  20                 	db	32
  2913  00FE83  20                 	db	32
  2914  00FE84  00                 	db	0
  2915  00FE85                     STR_27:
  2916                           
  2917                           ; BSR set to: 57
  2918  00FE85  49                 	db	73	;'I'
  2919  00FE86  4E                 	db	78	;'N'
  2920  00FE87  56                 	db	86	;'V'
  2921  00FE88  20                 	db	32
  2922  00FE89  20                 	db	32
  2923  00FE8A  57                 	db	87	;'W'
  2924  00FE8B  48                 	db	72	;'H'
  2925  00FE8C  20                 	db	32
  2926  00FE8D  25                 	db	37
  2927  00FE8E  33                 	db	51	;'3'
  2928  00FE8F  2E                 	db	46
  2929  00FE90  32                 	db	50	;'2'
  2930  00FE91  66                 	db	102	;'f'
  2931  00FE92  20                 	db	32
  2932  00FE93  20                 	db	32
  2933  00FE94  20                 	db	32
  2934  00FE95  20                 	db	32
  2935  00FE96  20                 	db	32
  2936  00FE97  00                 	db	0
  2937  00FE98                     STR_26:
  2938                           
  2939                           ; BSR set to: 57
  2940  00FE98  4C                 	db	76	;'L'
  2941  00FE99  4F                 	db	79	;'O'
  2942  00FE9A  41                 	db	65	;'A'
  2943  00FE9B  44                 	db	68	;'D'
  2944  00FE9C  20                 	db	32
  2945  00FE9D  57                 	db	87	;'W'
  2946  00FE9E  48                 	db	72	;'H'
  2947  00FE9F  20                 	db	32
  2948  00FEA0  25                 	db	37
  2949  00FEA1  33                 	db	51	;'3'
  2950  00FEA2  2E                 	db	46
  2951  00FEA3  32                 	db	50	;'2'
  2952  00FEA4  66                 	db	102	;'f'
  2953  00FEA5  20                 	db	32
  2954  00FEA6  20                 	db	32
  2955  00FEA7  20                 	db	32
  2956  00FEA8  20                 	db	32
  2957  00FEA9  20                 	db	32
  2958  00FEAA  00                 	db	0
  2959  00FEAB                     STR_24:
  2960                           
  2961                           ; BSR set to: 57
  2962  00FEAB  49                 	db	73	;'I'
  2963  00FEAC  4E                 	db	78	;'N'
  2964  00FEAD  56                 	db	86	;'V'
  2965  00FEAE  20                 	db	32
  2966  00FEAF  20                 	db	32
  2967  00FEB0  50                 	db	80	;'P'
  2968  00FEB1  57                 	db	87	;'W'
  2969  00FEB2  52                 	db	82	;'R'
  2970  00FEB3  20                 	db	32
  2971  00FEB4  25                 	db	37
  2972  00FEB5  33                 	db	51	;'3'
  2973  00FEB6  2E                 	db	46
  2974  00FEB7  32                 	db	50	;'2'
  2975  00FEB8  66                 	db	102	;'f'
  2976  00FEB9  20                 	db	32
  2977  00FEBA  20                 	db	32
  2978  00FEBB  20                 	db	32
  2979  00FEBC  20                 	db	32
  2980  00FEBD  00                 	db	0
  2981  00FEBE                     STR_23:
  2982                           
  2983                           ; BSR set to: 57
  2984  00FEBE  4C                 	db	76	;'L'
  2985  00FEBF  4F                 	db	79	;'O'
  2986  00FEC0  41                 	db	65	;'A'
  2987  00FEC1  44                 	db	68	;'D'
  2988  00FEC2  20                 	db	32
  2989  00FEC3  50                 	db	80	;'P'
  2990  00FEC4  57                 	db	87	;'W'
  2991  00FEC5  52                 	db	82	;'R'
  2992  00FEC6  20                 	db	32
  2993  00FEC7  25                 	db	37
  2994  00FEC8  33                 	db	51	;'3'
  2995  00FEC9  2E                 	db	46
  2996  00FECA  32                 	db	50	;'2'
  2997  00FECB  66                 	db	102	;'f'
  2998  00FECC  20                 	db	32
  2999  00FECD  20                 	db	32
  3000  00FECE  20                 	db	32
  3001  00FECF  20                 	db	32
  3002  00FED0  00                 	db	0
  3003  00FED1                     STR_29:
  3004                           
  3005                           ; BSR set to: 57
  3006  00FED1  42                 	db	66	;'B'
  3007  00FED2  56                 	db	86	;'V'
  3008  00FED3  20                 	db	32
  3009  00FED4  25                 	db	37
  3010  00FED5  32                 	db	50	;'2'
  3011  00FED6  2E                 	db	46
  3012  00FED7  32                 	db	50	;'2'
  3013  00FED8  66                 	db	102	;'f'
  3014  00FED9  20                 	db	32
  3015  00FEDA  42                 	db	66	;'B'
  3016  00FEDB  41                 	db	65	;'A'
  3017  00FEDC  20                 	db	32
  3018  00FEDD  25                 	db	37
  3019  00FEDE  32                 	db	50	;'2'
  3020  00FEDF  2E                 	db	46
  3021  00FEE0  32                 	db	50	;'2'
  3022  00FEE1  66                 	db	102	;'f'
  3023  00FEE2  20                 	db	32
  3024  00FEE3  00                 	db	0
  3025  00FEE4                     STR_30:
  3026                           
  3027                           ; BSR set to: 57
  3028  00FEE4  43                 	db	67	;'C'
  3029  00FEE5  56                 	db	86	;'V'
  3030  00FEE6  20                 	db	32
  3031  00FEE7  25                 	db	37
  3032  00FEE8  32                 	db	50	;'2'
  3033  00FEE9  2E                 	db	46
  3034  00FEEA  32                 	db	50	;'2'
  3035  00FEEB  66                 	db	102	;'f'
  3036  00FEEC  20                 	db	32
  3037  00FEED  4C                 	db	76	;'L'
  3038  00FEEE  41                 	db	65	;'A'
  3039  00FEEF  20                 	db	32
  3040  00FEF0  25                 	db	37
  3041  00FEF1  32                 	db	50	;'2'
  3042  00FEF2  2E                 	db	46
  3043  00FEF3  32                 	db	50	;'2'
  3044  00FEF4  66                 	db	102	;'f'
  3045  00FEF5  20                 	db	32
  3046  00FEF6  00                 	db	0
  3047  00FEF7                     STR_28:
  3048                           
  3049                           ; BSR set to: 57
  3050  00FEF7  50                 	db	80	;'P'
  3051  00FEF8  56                 	db	86	;'V'
  3052  00FEF9  20                 	db	32
  3053  00FEFA  25                 	db	37
  3054  00FEFB  32                 	db	50	;'2'
  3055  00FEFC  2E                 	db	46
  3056  00FEFD  32                 	db	50	;'2'
  3057  00FEFE  66                 	db	102	;'f'
  3058  00FEFF  20                 	db	32
  3059  00FF00  50                 	db	80	;'P'
  3060  00FF01  41                 	db	65	;'A'
  3061  00FF02  20                 	db	32
  3062  00FF03  25                 	db	37
  3063  00FF04  32                 	db	50	;'2'
  3064  00FF05  2E                 	db	46
  3065  00FF06  32                 	db	50	;'2'
  3066  00FF07  66                 	db	102	;'f'
  3067  00FF08  20                 	db	32
  3068  00FF09  00                 	db	0
  3069  00FF0A                     STR_8:
  3070                           
  3071                           ; BSR set to: 57
  3072  00FF0A  42                 	db	66	;'B'
  3073  00FF0B  56                 	db	86	;'V'
  3074  00FF0C  20                 	db	32
  3075  00FF0D  25                 	db	37
  3076  00FF0E  32                 	db	50	;'2'
  3077  00FF0F  2E                 	db	46
  3078  00FF10  34                 	db	52	;'4'
  3079  00FF11  66                 	db	102	;'f'
  3080  00FF12  20                 	db	32
  3081  00FF13  20                 	db	32
  3082  00FF14  20                 	db	32
  3083  00FF15  20                 	db	32
  3084  00FF16  20                 	db	32
  3085  00FF17  20                 	db	32
  3086  00FF18  20                 	db	32
  3087  00FF19  20                 	db	32
  3088  00FF1A  20                 	db	32
  3089  00FF1B  00                 	db	0
  3090  00FF1C                     STR_4:
  3091                           
  3092                           ; BSR set to: 57
  3093  00FF1C  20                 	db	32
  3094  00FF1D  4E                 	db	78	;'N'
  3095  00FF1E  53                 	db	83	;'S'
  3096  00FF1F  41                 	db	65	;'A'
  3097  00FF20  53                 	db	83	;'S'
  3098  00FF21  50                 	db	80	;'P'
  3099  00FF22  4F                 	db	79	;'O'
  3100  00FF23  4F                 	db	79	;'O'
  3101  00FF24  4B                 	db	75	;'K'
  3102  00FF25  20                 	db	32
  3103  00FF26  20                 	db	32
  3104  00FF27  20                 	db	32
  3105  00FF28  20                 	db	32
  3106  00FF29  20                 	db	32
  3107  00FF2A  20                 	db	32
  3108  00FF2B  20                 	db	32
  3109  00FF2C  00                 	db	0
  3110  00FF2D                     STR_12:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FF2D  42                 	db	66	;'B'
  3114  00FF2E  61                 	db	97	;'a'
  3115  00FF2F  74                 	db	116	;'t'
  3116  00FF30  74                 	db	116	;'t'
  3117  00FF31  65                 	db	101	;'e'
  3118  00FF32  72                 	db	114	;'r'
  3119  00FF33  79                 	db	121	;'y'
  3120  00FF34  20                 	db	32
  3121  00FF35  45                 	db	69	;'E'
  3122  00FF36  53                 	db	83	;'S'
  3123  00FF37  52                 	db	82	;'R'
  3124  00FF38  20                 	db	32
  3125  00FF39  20                 	db	32
  3126  00FF3A  20                 	db	32
  3127  00FF3B  20                 	db	32
  3128  00FF3C  20                 	db	32
  3129  00FF3D  00                 	db	0
  3130  00FF3E                     STR_13:
  3131                           
  3132                           ; BSR set to: 57
  3133  00FF3E  43                 	db	67	;'C'
  3134  00FF3F  61                 	db	97	;'a'
  3135  00FF40  6C                 	db	108	;'l'
  3136  00FF41  63                 	db	99	;'c'
  3137  00FF42  75                 	db	117	;'u'
  3138  00FF43  6C                 	db	108	;'l'
  3139  00FF44  61                 	db	97	;'a'
  3140  00FF45  74                 	db	116	;'t'
  3141  00FF46  69                 	db	105	;'i'
  3142  00FF47  6F                 	db	111	;'o'
  3143  00FF48  6E                 	db	110	;'n'
  3144  00FF49  20                 	db	32
  3145  00FF4A  20                 	db	32
  3146  00FF4B  20                 	db	32
  3147  00FF4C  20                 	db	32
  3148  00FF4D  20                 	db	32
  3149  00FF4E  00                 	db	0
  3150  00FF4F                     STR_1:
  3151                           
  3152                           ; BSR set to: 57
  3153  00FF4F  20                 	db	32
  3154  00FF50  4D                 	db	77	;'M'
  3155  00FF51  42                 	db	66	;'B'
  3156  00FF52  4D                 	db	77	;'M'
  3157  00FF53  43                 	db	67	;'C'
  3158  00FF54  20                 	db	32
  3159  00FF55  53                 	db	83	;'S'
  3160  00FF56  4F                 	db	79	;'O'
  3161  00FF57  4C                 	db	76	;'L'
  3162  00FF58  41                 	db	65	;'A'
  3163  00FF59  52                 	db	82	;'R'
  3164  00FF5A  4D                 	db	77	;'M'
  3165  00FF5B  4F                 	db	79	;'O'
  3166  00FF5C  4E                 	db	78	;'N'
  3167  00FF5D  20                 	db	32
  3168  00FF5E  20                 	db	32
  3169  00FF5F  00                 	db	0
  3170  00FF60                     STR_21:
  3171                           
  3172                           ; BSR set to: 57
  3173  00FF60  25                 	db	37
  3174  00FF61  64                 	db	100	;'d'
  3175  00FF62  20                 	db	32
  3176  00FF63  25                 	db	37
  3177  00FF64  32                 	db	50	;'2'
  3178  00FF65  2E                 	db	46
  3179  00FF66  34                 	db	52	;'4'
  3180  00FF67  66                 	db	102	;'f'
  3181  00FF68  2C                 	db	44
  3182  00FF69  20                 	db	32
  3183  00FF6A  25                 	db	37
  3184  00FF6B  64                 	db	100	;'d'
  3185  00FF6C  20                 	db	32
  3186  00FF6D  20                 	db	32
  3187  00FF6E  20                 	db	32
  3188  00FF6F  23                 	db	35
  3189  00FF70  00                 	db	0
  3190  00FF71                     STR_14:
  3191                           
  3192                           ; BSR set to: 57
  3193  00FF71  43                 	db	67	;'C'
  3194  00FF72  68                 	db	104	;'h'
  3195  00FF73  65                 	db	101	;'e'
  3196  00FF74  63                 	db	99	;'c'
  3197  00FF75  6B                 	db	107	;'k'
  3198  00FF76  20                 	db	32
  3199  00FF77  33                 	db	51	;'3'
  3200  00FF78  30                 	db	48	;'0'
  3201  00FF79  20                 	db	32
  3202  00FF7A  73                 	db	115	;'s'
  3203  00FF7B  65                 	db	101	;'e'
  3204  00FF7C  63                 	db	99	;'c'
  3205  00FF7D  6F                 	db	111	;'o'
  3206  00FF7E  6E                 	db	110	;'n'
  3207  00FF7F  64                 	db	100	;'d'
  3208  00FF80  73                 	db	115	;'s'
  3209  00FF81  00                 	db	0
  3210  00FF82                     STR_19:
  3211                           
  3212                           ; BSR set to: 57
  3213  00FF82  25                 	db	37
  3214  00FF83  64                 	db	100	;'d'
  3215  00FF84  20                 	db	32
  3216  00FF85  25                 	db	37
  3217  00FF86  32                 	db	50	;'2'
  3218  00FF87  2E                 	db	46
  3219  00FF88  34                 	db	52	;'4'
  3220  00FF89  66                 	db	102	;'f'
  3221  00FF8A  20                 	db	32
  3222  00FF8B  20                 	db	32
  3223  00FF8C  20                 	db	32
  3224  00FF8D  25                 	db	37
  3225  00FF8E  64                 	db	100	;'d'
  3226  00FF8F  20                 	db	32
  3227  00FF90  20                 	db	32
  3228  00FF91  00                 	db	0
  3229  00FF92                     STR_52:
  3230                           
  3231                           ; BSR set to: 57
  3232  00FF92  76                 	db	118	;'v'
  3233  00FF93  74                 	db	116	;'t'
  3234  00FF94  65                 	db	101	;'e'
  3235  00FF95  72                 	db	114	;'r'
  3236  00FF96  6D                 	db	109	;'m'
  3237  00FF97  20                 	db	32
  3238  00FF98  25                 	db	37
  3239  00FF99  78                 	db	120	;'x'
  3240  00FF9A  3A                 	db	58	;':'
  3241  00FF9B  25                 	db	37
  3242  00FF9C  78                 	db	120	;'x'
  3243  00FF9D  20                 	db	32
  3244  00FF9E  20                 	db	32
  3245  00FF9F  20                 	db	32
  3246  00FFA0  00                 	db	0
  3247  00FFA1                     STR_2:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FFA1  20                 	db	32
  3251  00FFA2  56                 	db	86	;'V'
  3252  00FFA3  65                 	db	101	;'e'
  3253  00FFA4  72                 	db	114	;'r'
  3254  00FFA5  73                 	db	115	;'s'
  3255  00FFA6  69                 	db	105	;'i'
  3256  00FFA7  6F                 	db	111	;'o'
  3257  00FFA8  6E                 	db	110	;'n'
  3258  00FFA9  20                 	db	32
  3259  00FFAA  25                 	db	37
  3260  00FFAB  73                 	db	115	;'s'
  3261  00FFAC  20                 	db	32
  3262  00FFAD  20                 	db	32
  3263  00FFAE  20                 	db	32
  3264  00FFAF  00                 	db	0
  3265  00FFB0                     STR_46:
  3266                           
  3267                           ; BSR set to: 57
  3268  00FFB0  44                 	db	68	;'D'
  3269  00FFB1  65                 	db	101	;'e'
  3270  00FFB2  63                 	db	99	;'c'
  3271  00FFB3  20                 	db	32
  3272  00FFB4  32                 	db	50	;'2'
  3273  00FFB5  31                 	db	49	;'1'
  3274  00FFB6  20                 	db	32
  3275  00FFB7  32                 	db	50	;'2'
  3276  00FFB8  30                 	db	48	;'0'
  3277  00FFB9  31                 	db	49	;'1'
  3278  00FFBA  39                 	db	57	;'9'
  3279  00FFBB  00                 	db	0
  3280  00FFBC                     STR_50:
  3281                           
  3282                           ; BSR set to: 57
  3283  00FFBC  25                 	db	37
  3284  00FFBD  73                 	db	115	;'s'
  3285  00FFBE  20                 	db	32
  3286  00FFBF  20                 	db	32
  3287  00FFC0  20                 	db	32
  3288  00FFC1  20                 	db	32
  3289  00FFC2  20                 	db	32
  3290  00FFC3  20                 	db	32
  3291  00FFC4  20                 	db	32
  3292  00FFC5  00                 	db	0
  3293  00FFC6                     STR_47:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FFC6  31                 	db	49	;'1'
  3297  00FFC7  35                 	db	53	;'5'
  3298  00FFC8  3A                 	db	58	;':'
  3299  00FFC9  32                 	db	50	;'2'
  3300  00FFCA  32                 	db	50	;'2'
  3301  00FFCB  3A                 	db	58	;':'
  3302  00FFCC  31                 	db	49	;'1'
  3303  00FFCD  33                 	db	51	;'3'
  3304  00FFCE  00                 	db	0
  3305  00FFCF                     STR_3:
  3306                           
  3307                           ; BSR set to: 57
  3308  00FFCF  31                 	db	49	;'1'
  3309  00FFD0  2E                 	db	46
  3310  00FFD1  30                 	db	48	;'0'
  3311  00FFD2  30                 	db	48	;'0'
  3312  00FFD3  37                 	db	55	;'7'
  3313  00FFD4  30                 	db	48	;'0'
  3314  00FFD5  00                 	db	0
  3315  00FFD6                     STR_66:
  3316                           
  3317                           ; BSR set to: 57
  3318  00FFD6  49                 	db	73	;'I'
  3319  00FFD7  4E                 	db	78	;'N'
  3320  00FFD8  46                 	db	70	;'F'
  3321  00FFD9  00                 	db	0
  3322  00FFDA                     STR_70:
  3323                           
  3324                           ; BSR set to: 57
  3325  00FFDA  4E                 	db	78	;'N'
  3326  00FFDB  41                 	db	65	;'A'
  3327  00FFDC  4E                 	db	78	;'N'
  3328  00FFDD  00                 	db	0
  3329  00FFDE                     STR_67:
  3330                           
  3331                           ; BSR set to: 57
  3332  00FFDE  69                 	db	105	;'i'
  3333  00FFDF  6E                 	db	110	;'n'
  3334  00FFE0  66                 	db	102	;'f'
  3335  00FFE1  00                 	db	0
  3336  00FFE2                     STR_71:
  3337                           
  3338                           ; BSR set to: 57
  3339  00FFE2  6E                 	db	110	;'n'
  3340  00FFE3  61                 	db	97	;'a'
  3341  00FFE4  6E                 	db	110	;'n'
  3342  00FFE5  00                 	db	0
  3343  00FFE6                     STR_97:
  3344                           
  3345                           ; BSR set to: 57
  3346  00FFE6  6C                 	db	108	;'l'
  3347  00FFE7  58                 	db	88	;'X'
  3348  00FFE8  00                 	db	0
  3349  00FFE9                     STR_74:
  3350                           
  3351                           ; BSR set to: 57
  3352  00FFE9  6C                 	db	108	;'l'
  3353  00FFEA  64                 	db	100	;'d'
  3354  00FFEB  00                 	db	0
  3355  00FFEC                     STR_83:
  3356                           
  3357                           ; BSR set to: 57
  3358  00FFEC  6C                 	db	108	;'l'
  3359  00FFED  66                 	db	102	;'f'
  3360  00FFEE  00                 	db	0
  3361  00FFEF                     STR_78:
  3362                           
  3363                           ; BSR set to: 57
  3364  00FFEF  6C                 	db	108	;'l'
  3365  00FFF0  69                 	db	105	;'i'
  3366  00FFF1  00                 	db	0
  3367  00FFF2                     STR_88:
  3368                           
  3369                           ; BSR set to: 57
  3370  00FFF2  6C                 	db	108	;'l'
  3371  00FFF3  75                 	db	117	;'u'
  3372  00FFF4  00                 	db	0
  3373  00FFF5                     STR_93:
  3374                           
  3375                           ; BSR set to: 57
  3376  00FFF5  6C                 	db	108	;'l'
  3377  00FFF6  78                 	db	120	;'x'
  3378  00FFF7  00                 	db	0
  3379  00FFF8                     STR_44:
  3380                           
  3381                           ; BSR set to: 57
  3382  00FFF8  25                 	db	37
  3383  00FFF9  63                 	db	99	;'c'
  3384  00FFFA  00                 	db	0
  3385  00FFFB                     STR_43:
  3386                           
  3387                           ; BSR set to: 57
  3388  00FFFB  25                 	db	37
  3389  00FFFC  73                 	db	115	;'s'
  3390  00FFFD  00                 	db	0
  3391  0000                     
  3392                           ; #config settings
  3393  00FFFE  00                 	db	0	; dummy byte at the end
  3394  0000                     
  3395                           	psect	cinit
  3396  019B54                     __pcinit:
  3397                           	opt callstack 0
  3398  019B54                     start_initialization:
  3399                           	opt callstack 0
  3400  019B54                     __initialization:
  3401                           	opt callstack 0
  3402                           
  3403                           ; Initialize objects allocated to BIGRAM (807 bytes)
  3404                           ; load TBLPTR registers with __pidataBIGRAM
  3405  019B54  0EEE               	movlw	low __pidataBIGRAM
  3406  019B56  6EF6               	movwf	tblptrl,c
  3407  019B58  0E67               	movlw	high __pidataBIGRAM
  3408  019B5A  6EF7               	movwf	tblptrh,c
  3409  019B5C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3410  019B5E  6EF8               	movwf	tblptru,c
  3411  019B60  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3412  019B64  EE20 F327          	lfsr	2,807
  3413  019B68                     copy_data0:
  3414  019B68  0009               	tblrd		*+
  3415  019B6A  006F FFD7 FFEE     	movff	tablat,postinc0
  3416  019B70  50DD               	movf	postdec2,w,c
  3417  019B72  50D9               	movf	fsr2l,w,c
  3418  019B74  E1F9               	bnz	copy_data0
  3419  019B76  50DA               	movf	fsr2h,w,c
  3420  019B78  E1F7               	bnz	copy_data0
  3421                           
  3422                           ; Initialize objects allocated to BANK1 (198 bytes)
  3423                           ; load TBLPTR registers with __pidataBANK1
  3424  019B7A  0EE6               	movlw	low __pidataBANK1
  3425  019B7C  6EF6               	movwf	tblptrl,c
  3426  019B7E  0E9D               	movlw	high __pidataBANK1
  3427  019B80  6EF7               	movwf	tblptrh,c
  3428  019B82  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3429  019B84  6EF8               	movwf	tblptru,c
  3430  019B86  EE00  F100         	lfsr	0,__pdataBANK1
  3431  019B8A  EE20 F0C6          	lfsr	2,198
  3432  019B8E                     copy_data1:
  3433  019B8E  0009               	tblrd		*+
  3434  019B90  006F FFD7 FFEE     	movff	tablat,postinc0
  3435  019B96  50DD               	movf	postdec2,w,c
  3436  019B98  50D9               	movf	fsr2l,w,c
  3437  019B9A  E1F9               	bnz	copy_data1
  3438                           
  3439                           ; Initialize objects allocated to BANK0 (47 bytes)
  3440                           ; load TBLPTR registers with __pidataBANK0
  3441  019B9C  0E44               	movlw	low __pidataBANK0
  3442  019B9E  6EF6               	movwf	tblptrl,c
  3443  019BA0  0EB4               	movlw	high __pidataBANK0
  3444  019BA2  6EF7               	movwf	tblptrh,c
  3445  019BA4  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3446  019BA6  6EF8               	movwf	tblptru,c
  3447  019BA8  EE00  F0B1         	lfsr	0,__pdataBANK0
  3448  019BAC  EE20 F02F          	lfsr	2,47
  3449  019BB0                     copy_data2:
  3450  019BB0  0009               	tblrd		*+
  3451  019BB2  006F FFD7 FFEE     	movff	tablat,postinc0
  3452  019BB8  50DD               	movf	postdec2,w,c
  3453  019BBA  50D9               	movf	fsr2l,w,c
  3454  019BBC  E1F9               	bnz	copy_data2
  3455                           
  3456                           ; Clear objects allocated to BIGRAM (482 bytes)
  3457  019BBE  EE02  F026         	lfsr	0,__pbssBIGRAM
  3458  019BC2  EE20 F1E2          	lfsr	2,482
  3459  019BC6                     clear_0:
  3460  019BC6  6AEE               	clrf	postinc0,c
  3461  019BC8  50DD               	movf	postdec2,w,c
  3462  019BCA  50D9               	movf	fsr2l,w,c
  3463  019BCC  E1FC               	bnz	clear_0
  3464  019BCE  50DA               	movf	fsr2h,w,c
  3465  019BD0  E1FA               	bnz	clear_0
  3466                           
  3467                           ; Clear objects allocated to BANK4 (255 bytes)
  3468  019BD2  EE01  F000         	lfsr	0,__pbssBANK4
  3469  019BD6  EE20 F0FF          	lfsr	2,255
  3470  019BDA                     clear_1:
  3471  019BDA  6AEE               	clrf	postinc0,c
  3472  019BDC  50DD               	movf	postdec2,w,c
  3473  019BDE  50D9               	movf	fsr2l,w,c
  3474  019BE0  E1FC               	bnz	clear_1
  3475  019BE2  50DA               	movf	fsr2h,w,c
  3476  019BE4  E1FA               	bnz	clear_1
  3477                           
  3478                           ; Clear objects allocated to BANK3 (134 bytes)
  3479  019BE6  EE00  F300         	lfsr	0,__pbssBANK3
  3480  019BEA  0E86               	movlw	134
  3481  019BEC                     clear_2:
  3482  019BEC  6AEE               	clrf	postinc0,c
  3483  019BEE  06E8               	decf	wreg,f,c
  3484  019BF0  E1FD               	bnz	clear_2
  3485                           
  3486                           ; Clear objects allocated to BANK2 (254 bytes)
  3487  019BF2  EE00  F200         	lfsr	0,__pbssBANK2
  3488  019BF6  0EFE               	movlw	254
  3489  019BF8                     clear_3:
  3490  019BF8  6AEE               	clrf	postinc0,c
  3491  019BFA  06E8               	decf	wreg,f,c
  3492  019BFC  E1FD               	bnz	clear_3
  3493                           
  3494                           ; Clear objects allocated to BANK1 (57 bytes)
  3495  019BFE  EE00  F1C6         	lfsr	0,__pbssBANK1
  3496  019C02  0E39               	movlw	57
  3497  019C04                     clear_4:
  3498  019C04  6AEE               	clrf	postinc0,c
  3499  019C06  06E8               	decf	wreg,f,c
  3500  019C08  E1FD               	bnz	clear_4
  3501                           
  3502                           ; Clear objects allocated to BANK0 (81 bytes)
  3503  019C0A  EE00  F060         	lfsr	0,__pbssBANK0
  3504  019C0E  0E51               	movlw	81
  3505  019C10                     clear_5:
  3506  019C10  6AEE               	clrf	postinc0,c
  3507  019C12  06E8               	decf	wreg,f,c
  3508  019C14  E1FD               	bnz	clear_5
  3509                           
  3510                           ; Clear objects allocated to COMRAM (37 bytes)
  3511  019C16  EE00  F001         	lfsr	0,__pbssCOMRAM
  3512  019C1A  0E25               	movlw	37
  3513  019C1C                     clear_6:
  3514  019C1C  6AEE               	clrf	postinc0,c
  3515  019C1E  06E8               	decf	wreg,f,c
  3516  019C20  E1FD               	bnz	clear_6
  3517                           
  3518                           ;
  3519                           ; Setup IVTBASE
  3520                           ;
  3521  019C22  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3522  019C24  6ED5               	movwf	213,c
  3523  019C26  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3524  019C28  6ED6               	movwf	214,c
  3525  019C2A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3526  019C2C  6ED7               	movwf	215,c
  3527  019C2E                     end_of_initialization:
  3528                           	opt callstack 0
  3529  019C2E                     __end_of__initialization:
  3530                           	opt callstack 0
  3531  019C2E  0100               	movlb	0
  3532  019C30  EF22  F089         	goto	_main	;jump to C main() function
  3533                           
  3534                           	psect	bssCOMRAM
  3535  000001                     __pbssCOMRAM:
  3536                           	opt callstack 0
  3537  000001                     _UART2_RxInterruptHandler:
  3538                           	opt callstack 0
  3539  000001                     	ds	3
  3540  000004                     _INT1_InterruptHandler:
  3541                           	opt callstack 0
  3542  000004                     	ds	3
  3543  000007                     _INT0_InterruptHandler:
  3544                           	opt callstack 0
  3545  000007                     	ds	3
  3546  00000A                     _width:
  3547                           	opt callstack 0
  3548  00000A                     	ds	2
  3549  00000C                     _prec:
  3550                           	opt callstack 0
  3551  00000C                     	ds	2
  3552  00000E                     _flags:
  3553                           	opt callstack 0
  3554  00000E                     	ds	2
  3555  000010                     TMR3_ISR@CountCallBack:
  3556                           	opt callstack 0
  3557  000010                     	ds	2
  3558  000012                     _timer3ReloadVal:
  3559                           	opt callstack 0
  3560  000012                     	ds	2
  3561  000014                     TMR5_ISR@CountCallBack:
  3562                           	opt callstack 0
  3563  000014                     	ds	2
  3564  000016                     _timer5ReloadVal:
  3565                           	opt callstack 0
  3566  000016                     	ds	2
  3567  000018                     esr_check@esr_state:
  3568                           	opt callstack 0
  3569  000018                     	ds	1
  3570  000019                     Volts_to_SOC@slot:
  3571                           	opt callstack 0
  3572  000019                     	ds	1
  3573  00001A                     calc_bsoc@log_update_wait:
  3574                           	opt callstack 0
  3575  00001A                     	ds	1
  3576  00001B                     check_day_time@day_delay:
  3577                           	opt callstack 0
  3578  00001B                     	ds	1
  3579  00001C                     _mode_sw:
  3580                           	opt callstack 0
  3581  00001C                     	ds	1
  3582  00001D                     _uart2RxCount:
  3583                           	opt callstack 0
  3584  00001D                     	ds	1
  3585  00001E                     _uart2RxTail:
  3586                           	opt callstack 0
  3587  00001E                     	ds	1
  3588  00001F                     _uart2RxHead:
  3589                           	opt callstack 0
  3590  00001F                     	ds	1
  3591  000020                     _uart2TxBufferRemaining:
  3592                           	opt callstack 0
  3593  000020                     	ds	1
  3594  000021                     _uart2TxTail:
  3595                           	opt callstack 0
  3596  000021                     	ds	1
  3597  000022                     _uart2TxHead:
  3598                           	opt callstack 0
  3599  000022                     	ds	1
  3600  000023                     _uart1RxCount:
  3601                           	opt callstack 0
  3602  000023                     	ds	1
  3603  000024                     _uart1RxTail:
  3604                           	opt callstack 0
  3605  000024                     	ds	1
  3606  000025                     _uart1RxHead:
  3607                           	opt callstack 0
  3608  000025                     	ds	1
  3609                           
  3610                           	psect	bssBANK0
  3611  000060                     __pbssBANK0:
  3612                           	opt callstack 0
  3613  000060                     _spi_link:
  3614                           	opt callstack 0
  3615  000060                     	ds	12
  3616  00006C                     spinners@s:
  3617                           	opt callstack 0
  3618  00006C                     	ds	6
  3619  000072                     floorf@F524:
  3620                           	opt callstack 0
  3621  000072                     	ds	4
  3622  000076                     fabsf@F463:
  3623                           	opt callstack 0
  3624  000076                     	ds	4
  3625  00007A                     ___fpclassifyf@F463:
  3626                           	opt callstack 0
  3627  00007A                     	ds	4
  3628  00007E                     calc_ror_data@bcror:
  3629                           	opt callstack 0
  3630  00007E                     	ds	4
  3631  000082                     calc_ror_data@bvror:
  3632                           	opt callstack 0
  3633  000082                     	ds	4
  3634  000086                     calc_model_data@bcror:
  3635                           	opt callstack 0
  3636  000086                     	ds	4
  3637  00008A                     calc_model_data@bvror:
  3638                           	opt callstack 0
  3639  00008A                     	ds	4
  3640  00008E                     _utctime:
  3641                           	opt callstack 0
  3642  00008E                     	ds	4
  3643  000092                     wdtdelay@dcount:
  3644                           	opt callstack 0
  3645  000092                     	ds	4
  3646  000096                     _P:
  3647                           	opt callstack 0
  3648  000096                     	ds	4
  3649  00009A                     _TMR3_InterruptHandler:
  3650                           	opt callstack 0
  3651  00009A                     	ds	3
  3652  00009D                     _TMR5_InterruptHandler:
  3653                           	opt callstack 0
  3654  00009D                     	ds	3
  3655  0000A0                     _TMR6_InterruptHandler:
  3656                           	opt callstack 0
  3657  0000A0                     	ds	3
  3658  0000A3                     _ADCC_ADTI_InterruptHandler:
  3659                           	opt callstack 0
  3660  0000A3                     	ds	3
  3661  0000A6                     _ADCC_ADI_InterruptHandler:
  3662                           	opt callstack 0
  3663  0000A6                     	ds	3
  3664  0000A9                     _UART1_RxInterruptHandler:
  3665                           	opt callstack 0
  3666  0000A9                     	ds	3
  3667  0000AC                     _UART2_TxInterruptHandler:
  3668                           	opt callstack 0
  3669  0000AC                     	ds	3
  3670  0000AF                     _nout:
  3671                           	opt callstack 0
  3672  0000AF                     	ds	2
  3673                           
  3674                           	psect	dataBANK0
  3675  0000B1                     __pdataBANK0:
  3676                           	opt callstack 0
  3677  0000B1                     _R:
  3678                           	opt callstack 0
  3679  0000B1                     	ds	40
  3680  0000D9                     _H:
  3681                           	opt callstack 0
  3682  0000D9                     	ds	7
  3683                           
  3684                           	psect	bssBANK1
  3685  0001C6                     __pbssBANK1:
  3686                           	opt callstack 0
  3687  0001C6                     _S:
  3688                           	opt callstack 0
  3689  0001C6                     	ds	41
  3690  0001EF                     _uart1RxBuffer:
  3691                           	opt callstack 0
  3692  0001EF                     	ds	8
  3693  0001F7                     _seed:
  3694                           	opt callstack 0
  3695  0001F7                     	ds	8
  3696                           
  3697                           	psect	dataBANK1
  3698  000100                     __pdataBANK1:
  3699                           	opt callstack 0
  3700  000100                     stoa@F1166:
  3701                           	opt callstack 0
  3702  000100                     	ds	7
  3703  000107                     _V:
  3704                           	opt callstack 0
  3705  000107                     	ds	191
  3706                           
  3707                           	psect	bssBANK2
  3708  000200                     __pbssBANK2:
  3709                           	opt callstack 0
  3710  000200                     lp_filter@smooth:
  3711                           	opt callstack 0
  3712  000200                     	ds	84
  3713  000254                     _uart2TxBuffer:
  3714                           	opt callstack 0
  3715  000254                     	ds	64
  3716  000294                     _tickCount:
  3717                           	opt callstack 0
  3718  000294                     	ds	26
  3719  0002AE                     _dbuf:
  3720                           	opt callstack 0
  3721  0002AE                     	ds	80
  3722                           
  3723                           	psect	bssBANK3
  3724  000300                     __pbssBANK3:
  3725                           	opt callstack 0
  3726  000300                     _ring_buf2:
  3727                           	opt callstack 0
  3728  000300                     	ds	67
  3729  000343                     _ring_buf1:
  3730                           	opt callstack 0
  3731  000343                     	ds	67
  3732                           
  3733                           	psect	bssBANK4
  3734  000400                     __pbssBANK4:
  3735                           	opt callstack 0
  3736  000400                     _uart2RxBuffer:
  3737                           	opt callstack 0
  3738  000400                     	ds	255
  3739                           
  3740                           	psect	bssBIGRAM
  3741  000826                     __pbssBIGRAM:
  3742                           	opt callstack 0
  3743  000826                     _D:
  3744                           	opt callstack 0
  3745  000826                     	ds	482
  3746                           
  3747                           	psect	dataBIGRAM
  3748  0004FF                     __pdataBIGRAM:
  3749                           	opt callstack 0
  3750  0004FF                     _port_data:
  3751                           	opt callstack 0
  3752  0004FF                     	ds	512
  3753  0006FF                     _C:
  3754                           	opt callstack 0
  3755  0006FF                     	ds	295
  3756                           
  3757                           	psect	cstackBANK0
  3758  0000E0                     __pcstackBANK0:
  3759                           	opt callstack 0
  3760  0000E0                     ??_TMR3_ISR:
  3761                           
  3762                           ; 1 bytes @ 0x0
  3763  0000E0                     	ds	25
  3764                           
  3765                           	psect	cstackCOMRAM
  3766  000046                     __pcstackCOMRAM:
  3767                           	opt callstack 0
  3768  000046                     ??_ADCC_ThresholdISR:
  3769  000046                     
  3770                           ; 1 bytes @ 0x0
  3771  000046                     	ds	5
  3772  00004B                     ??_TMR6_ISR:
  3773                           
  3774                           ; 1 bytes @ 0x5
  3775  00004B                     	ds	1
  3776  00004C                     ??_INT1_ISR:
  3777  00004C                     
  3778                           ; 1 bytes @ 0x6
  3779  00004C                     	ds	4
  3780  000050                     ??_TMR5_ISR:
  3781                           
  3782                           ; 1 bytes @ 0xA
  3783  000050                     	ds	15
  3784                           
  3785 ;;
  3786 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3787 ;;
  3788 ;; *************** function _main *****************
  3789 ;; Defined at:
  3790 ;;		line 185 in file "main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  esr_temp        4  [STACK] float 
  3795 ;;  i_esr           2  [STACK] unsigned short 
  3796 ;;  shape           1  [STACK] unsigned char 
  3797 ;;  k               1  [STACK] unsigned char 
  3798 ;;  j               1  [STACK] unsigned char 
  3799 ;;  i               1  [STACK] unsigned char 
  3800 ;;  inp_index       1  [STACK] unsigned char 
  3801 ;;  mode            1  [STACK] enum E17013
  3802 ;;  i_ror           1  [STACK] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1  [STACK] void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels required when called:   28
  3818 ;; This function calls:
  3819 ;;		_SYSTEM_Initialize
  3820 ;;		_StartTimer
  3821 ;;		_TimerDone
  3822 ;;		_WaitMs
  3823 ;;		___fladd
  3824 ;;		___flge
  3825 ;;		___fltol
  3826 ;;		_calc_model_data
  3827 ;;		_calc_ror_data
  3828 ;;		_check_adc_scan
  3829 ;;		_check_enter_button
  3830 ;;		_check_help
  3831 ;;		_clear_adc_scan
  3832 ;;		_clear_hid_pflags
  3833 ;;		_conv_raw_result
  3834 ;;		_convert_adc_data
  3835 ;;		_eaDogM_WriteCommand
  3836 ;;		_esr_check
  3837 ;;		_fabsf
  3838 ;;		_get_raw_result
  3839 ;;		_get_switch
  3840 ;;		_get_vterm_ptr
  3841 ;;		_hid_display
  3842 ;;		_init_bsoc
  3843 ;;		_init_display
  3844 ;;		_init_port_dma
  3845 ;;		_lp_filter
  3846 ;;		_mode_lamp_dim
  3847 ;;		_set_display_info
  3848 ;;		_set_load_relay_one
  3849 ;;		_set_load_relay_two
  3850 ;;		_set_vterm
  3851 ;;		_spinners
  3852 ;;		_sprintf
  3853 ;;		_srand
  3854 ;;		_start_adc_scan
  3855 ;;		_start_switch_handler
  3856 ;;		_static_soc
  3857 ;;		_update_lcd
  3858 ;; This function is called by:
  3859 ;;		Startup code after reset
  3860 ;; This function uses a reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text0
  3864  011244                     __ptext0:
  3865                           	opt callstack 0
  3866  011244                     _main:
  3867                           	opt callstack 0
  3868                           
  3869                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3870  011244  0E11               	movlw	17
  3871  011246  26E1               	addwf	fsr1l,f,c
  3872  011248  0E00               	movlw	0
  3873  01124A  22E2               	addwfc	fsr1h,f,c
  3874                           
  3875                           ;main.c: 187:  UI_STATES mode;;main.c: 188:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3876                           ;stkvar	_inp_index @ sp[(-17)+14]
  3877                           
  3878                           ;incstack = 0
  3879  01124C  0EFD               	movlw	-3
  3880  01124E  6AE3               	clrf	plusw1,c
  3881                           
  3882                           ;stkvar	_i @ sp[(-17)+13]
  3883  011250  0EFC               	movlw	-4
  3884  011252  6AE3               	clrf	plusw1,c
  3885                           
  3886                           ;stkvar	_j @ sp[(-17)+12]
  3887  011254  0EFB               	movlw	-5
  3888  011256  6AE3               	clrf	plusw1,c
  3889  011258  2AE3               	incf	plusw1,f,c
  3890                           
  3891                           ;stkvar	_k @ sp[(-17)+11]
  3892  01125A  0EFA               	movlw	-6
  3893  01125C  6AE3               	clrf	plusw1,c
  3894  01125E  82E3               	bsf	plusw1,1,c
  3895                           
  3896                           ;main.c: 191:  SYSTEM_Initialize();
  3897  011260  EC09  F0D7         	call	_SYSTEM_Initialize	;wreg free
  3898                           
  3899                           ; BSR set to: 60
  3900                           ;main.c: 194:  (INTCON0bits.GIEH = 1);
  3901  011264  8ED2               	bsf	210,7,c	;volatile
  3902                           
  3903                           ; BSR set to: 60
  3904                           ;main.c: 197:  (INTCON0bits.GIEL = 1);
  3905  011266  8CD2               	bsf	210,6,c	;volatile
  3906                           
  3907                           ; BSR set to: 60
  3908                           ;main.c: 199:  V.ui_state = UI_STATE_INIT;
  3909  011268  0101               	movlb	1	; () banked
  3910  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;main.c: 204:  WaitMs(300);
  3914  01126C  0E2C               	movlw	44
  3915  01126E  6EE6               	movwf	postinc1,c
  3916  011270  0E01               	movlw	1
  3917  011272  6EE6               	movwf	postinc1,c
  3918  011274  EC58  F0D9         	call	_WaitMs	;wreg free
  3919                           
  3920                           ;main.c: 205:  if (PORTBbits.RB0) {
  3921  011278  A0CB               	btfss	203,0,c	;volatile
  3922  01127A  D004               	goto	l12849
  3923                           
  3924                           ;main.c: 206:   mode = UI_STATE_HOST;
  3925                           ;stkvar	_mode @ sp[(-17)+15]
  3926  01127C  0EFE               	movlw	-2
  3927  01127E  6AE3               	clrf	plusw1,c
  3928  011280  2AE3               	incf	plusw1,f,c
  3929                           
  3930                           ;main.c: 207:  } else {
  3931  011282  D004               	goto	l12851
  3932  011284                     l12849:
  3933                           
  3934                           ;main.c: 208:   mode = UI_STATE_LOG;
  3935                           ;stkvar	_mode @ sp[(-17)+15]
  3936  011284  0EFE               	movlw	-2
  3937  011286  6AE3               	clrf	plusw1,c
  3938  011288  80E3               	bsf	plusw1,0,c
  3939  01128A  82E3               	bsf	plusw1,1,c	;indir
  3940  01128C                     l12851:
  3941                           
  3942                           ;main.c: 211:  if (mode == UI_STATE_HOST) {
  3943                           ;stkvar	_mode @ sp[(-17)+15]
  3944  01128C  0EFE               	movlw	-2
  3945  01128E  04E3               	decf	plusw1,w,c
  3946  011290  A4D8               	btfss	status,2,c
  3947  011292  D007               	goto	l1324
  3948                           
  3949                           ;main.c: 212:   do { LATDbits.LATD0 = 1; } while(0);
  3950  011294  80BD               	bsf	189,0,c	;volatile
  3951                           
  3952                           ;main.c: 213:   V.mode_pwm = 70;
  3953  011296  0E00               	movlw	0
  3954  011298  0101               	movlb	1	; () banked
  3955  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  3956  01129C  0E46               	movlw	70
  3957  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  3958                           
  3959                           ;main.c: 214:  } else {
  3960  0112A0  D004               	goto	l12855
  3961  0112A2                     l1324:
  3962  0112A2  90BD               	bcf	189,0,c	;volatile
  3963                           
  3964                           ;main.c: 216:   V.mode_pwm = 0;
  3965  0112A4  0101               	movlb	1	; () banked
  3966  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  3967  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  3968  0112AA                     l12855:
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;main.c: 218:  mode_lamp_dim(V.mode_pwm);
  3972  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  3973  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  3974  0112B6  EC0B  F0DD         	call	_mode_lamp_dim	;wreg free
  3975  0112BA  D32C               	goto	l12977
  3976  0112BC                     l12857:
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;main.c: 226:    init_port_dma();
  3980  0112BC  ECC2  F0D9         	call	_init_port_dma	;wreg free
  3981                           
  3982                           ; BSR set to: 59
  3983                           ;main.c: 228:    init_display();
  3984  0112C0  ECC2  F0CC         	call	_init_display	;wreg free
  3985                           
  3986                           ; BSR set to: 61
  3987                           ;main.c: 229:    eaDogM_WriteCommand(0b00001100);
  3988  0112C4  0E0C               	movlw	12
  3989  0112C6  6EE6               	movwf	postinc1,c
  3990  0112C8  EC77  F0DD         	call	_eaDogM_WriteCommand	;wreg free
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;main.c: 233:    set_load_relay_one(1);
  3994  0112CC  0E01               	movlw	1
  3995  0112CE  6EE6               	movwf	postinc1,c
  3996  0112D0  EC5F  F0DD         	call	_set_load_relay_one	;wreg free
  3997                           
  3998                           ;main.c: 234:    set_load_relay_two(1);
  3999  0112D4  0E01               	movlw	1
  4000  0112D6  6EE6               	movwf	postinc1,c
  4001  0112D8  EC57  F0DD         	call	_set_load_relay_two	;wreg free
  4002                           
  4003                           ;main.c: 236:    V.ui_state = mode;
  4004                           ;stkvar	_mode @ sp[(-17)+15]
  4005  0112DC  0EFE               	movlw	-2
  4006  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4007                           
  4008                           ;main.c: 237:    srand(1957);
  4009  0112E4  0EA5               	movlw	165
  4010  0112E6  6EE6               	movwf	postinc1,c
  4011  0112E8  0E07               	movlw	7
  4012  0112EA  6EE6               	movwf	postinc1,c
  4013  0112EC  EC8E  F0D9         	call	_srand	;wreg free
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;main.c: 238:    set_vterm(0);
  4017  0112F0  0E00               	movlw	0
  4018  0112F2  6EE6               	movwf	postinc1,c
  4019  0112F4  ECA7  F0DC         	call	_set_vterm	;wreg free
  4020                           
  4021                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4022  0112F8  0E4F               	movlw	low STR_1
  4023  0112FA  6EE6               	movwf	postinc1,c
  4024  0112FC  0EFF               	movlw	high STR_1
  4025  0112FE  6EE6               	movwf	postinc1,c
  4026  011300  0E00               	movlw	0
  4027  011302  6EE6               	movwf	postinc1,c
  4028  011304  0E00               	movlw	0
  4029  011306  6EE6               	movwf	postinc1,c
  4030  011308  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4031  01130C  0060  F09B  FFE6   	movff	btemp,postinc1
  4032  011312  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4033  011318  0E04               	movlw	4
  4034  01131A  6EE6               	movwf	postinc1,c
  4035  01131C  ECBC  F0CB         	call	_sprintf	;wreg free
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0070");
  4039  011320  0ECF               	movlw	low STR_3
  4040  011322  6EE6               	movwf	postinc1,c
  4041  011324  0EFF               	movlw	high STR_3
  4042  011326  6EE6               	movwf	postinc1,c
  4043  011328  0EA1               	movlw	low STR_2
  4044  01132A  6EE6               	movwf	postinc1,c
  4045  01132C  0EFF               	movlw	high STR_2
  4046  01132E  6EE6               	movwf	postinc1,c
  4047  011330  0E00               	movlw	0
  4048  011332  6EE6               	movwf	postinc1,c
  4049  011334  0E01               	movlw	1
  4050  011336  6EE6               	movwf	postinc1,c
  4051  011338  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4052  01133C  0060  F09B  FFE6   	movff	btemp,postinc1
  4053  011342  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4054  011348  0E06               	movlw	6
  4055  01134A  6EE6               	movwf	postinc1,c
  4056  01134C  ECBC  F0CB         	call	_sprintf	;wreg free
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4060  011350  0E1C               	movlw	low STR_4
  4061  011352  6EE6               	movwf	postinc1,c
  4062  011354  0EFF               	movlw	high STR_4
  4063  011356  6EE6               	movwf	postinc1,c
  4064  011358  0E00               	movlw	0
  4065  01135A  6EE6               	movwf	postinc1,c
  4066  01135C  0E02               	movlw	2
  4067  01135E  6EE6               	movwf	postinc1,c
  4068  011360  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4069  011364  0060  F09B  FFE6   	movff	btemp,postinc1
  4070  01136A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4071  011370  0E04               	movlw	4
  4072  011372  6EE6               	movwf	postinc1,c
  4073  011374  ECBC  F0CB         	call	_sprintf	;wreg free
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;main.c: 242:    sprintf(get_vterm_ptr(0, 2), "                ");
  4077  011378  0E15               	movlw	low (STR_58+2)
  4078  01137A  6EE6               	movwf	postinc1,c
  4079  01137C  0EFE               	movlw	high (STR_58+2)
  4080  01137E  6EE6               	movwf	postinc1,c
  4081  011380  0E02               	movlw	2
  4082  011382  6EE6               	movwf	postinc1,c
  4083  011384  0E00               	movlw	0
  4084  011386  6EE6               	movwf	postinc1,c
  4085  011388  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4086  01138C  0060  F09B  FFE6   	movff	btemp,postinc1
  4087  011392  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4088  011398  0E04               	movlw	4
  4089  01139A  6EE6               	movwf	postinc1,c
  4090  01139C  ECBC  F0CB         	call	_sprintf	;wreg free
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 2), "                ");
  4094  0113A0  0E15               	movlw	low (STR_58+2)
  4095  0113A2  6EE6               	movwf	postinc1,c
  4096  0113A4  0EFE               	movlw	high (STR_58+2)
  4097  0113A6  6EE6               	movwf	postinc1,c
  4098  0113A8  0E02               	movlw	2
  4099  0113AA  6EE6               	movwf	postinc1,c
  4100  0113AC  0E01               	movlw	1
  4101  0113AE  6EE6               	movwf	postinc1,c
  4102  0113B0  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4103  0113B4  0060  F09B  FFE6   	movff	btemp,postinc1
  4104  0113BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4105  0113C0  0E04               	movlw	4
  4106  0113C2  6EE6               	movwf	postinc1,c
  4107  0113C4  ECBC  F0CB         	call	_sprintf	;wreg free
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 2), "                ");
  4111  0113C8  0E15               	movlw	low (STR_58+2)
  4112  0113CA  6EE6               	movwf	postinc1,c
  4113  0113CC  0EFE               	movlw	high (STR_58+2)
  4114  0113CE  6EE6               	movwf	postinc1,c
  4115  0113D0  0E02               	movlw	2
  4116  0113D2  6EE6               	movwf	postinc1,c
  4117  0113D4  0E02               	movlw	2
  4118  0113D6  6EE6               	movwf	postinc1,c
  4119  0113D8  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4120  0113DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4121  0113E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4122  0113E8  0E04               	movlw	4
  4123  0113EA  6EE6               	movwf	postinc1,c
  4124  0113EC  ECBC  F0CB         	call	_sprintf	;wreg free
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;main.c: 245:    update_lcd(0);
  4128  0113F0  0E00               	movlw	0
  4129  0113F2  6EE6               	movwf	postinc1,c
  4130  0113F4  EC34  F0CB         	call	_update_lcd	;wreg free
  4131                           
  4132                           ;main.c: 246:    WaitMs(1000);
  4133  0113F8  0EE8               	movlw	232
  4134  0113FA  6EE6               	movwf	postinc1,c
  4135  0113FC  0E03               	movlw	3
  4136  0113FE  6EE6               	movwf	postinc1,c
  4137  011400  EC58  F0D9         	call	_WaitMs	;wreg free
  4138                           
  4139                           ;main.c: 247:    StartTimer(TMR_DISPLAY, 250);
  4140  011404  0EFA               	movlw	250
  4141  011406  6EE6               	movwf	postinc1,c
  4142  011408  0E00               	movlw	0
  4143  01140A  6EE6               	movwf	postinc1,c
  4144  01140C  0E0A               	movlw	10
  4145  01140E  6EE6               	movwf	postinc1,c
  4146  011410  EC44  F0D8         	call	_StartTimer	;wreg free
  4147                           
  4148                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  4149  011414  0EC8               	movlw	200
  4150  011416  6EE6               	movwf	postinc1,c
  4151  011418  0E00               	movlw	0
  4152  01141A  6EE6               	movwf	postinc1,c
  4153  01141C  0E01               	movlw	1
  4154  01141E  6EE6               	movwf	postinc1,c
  4155  011420  EC44  F0D8         	call	_StartTimer	;wreg free
  4156                           
  4157                           ;main.c: 249:    StartTimer(TMR_INFO, 3000);
  4158  011424  0EB8               	movlw	184
  4159  011426  6EE6               	movwf	postinc1,c
  4160  011428  0E0B               	movlw	11
  4161  01142A  6EE6               	movwf	postinc1,c
  4162  01142C  0E07               	movlw	7
  4163  01142E  6EE6               	movwf	postinc1,c
  4164  011430  EC44  F0D8         	call	_StartTimer	;wreg free
  4165                           
  4166                           ;main.c: 250:    StartTimer(TMR_FLIPPER, 1500);
  4167  011434  0EDC               	movlw	220
  4168  011436  6EE6               	movwf	postinc1,c
  4169  011438  0E05               	movlw	5
  4170  01143A  6EE6               	movwf	postinc1,c
  4171  01143C  0E0B               	movlw	11
  4172  01143E  6EE6               	movwf	postinc1,c
  4173  011440  EC44  F0D8         	call	_StartTimer	;wreg free
  4174                           
  4175                           ;main.c: 251:    StartTimer(TMR_HELPDIS, 3000);
  4176  011444  0EB8               	movlw	184
  4177  011446  6EE6               	movwf	postinc1,c
  4178  011448  0E0B               	movlw	11
  4179  01144A  6EE6               	movwf	postinc1,c
  4180  01144C  0E09               	movlw	9
  4181  01144E  6EE6               	movwf	postinc1,c
  4182  011450  EC44  F0D8         	call	_StartTimer	;wreg free
  4183                           
  4184                           ;main.c: 253:    start_adc_scan();
  4185  011454  EC4A  F0D5         	call	_start_adc_scan	;wreg free
  4186                           
  4187                           ;main.c: 254:    start_switch_handler();
  4188  011458  EC78  F0DC         	call	_start_switch_handler	;wreg free
  4189                           
  4190                           ; BSR set to: 57
  4191                           ;main.c: 255:    WaitMs(1000);
  4192  01145C  0EE8               	movlw	232
  4193  01145E  6EE6               	movwf	postinc1,c
  4194  011460  0E03               	movlw	3
  4195  011462  6EE6               	movwf	postinc1,c
  4196  011464  EC58  F0D9         	call	_WaitMs	;wreg free
  4197                           
  4198                           ;main.c: 260:    i_ror = 1;
  4199                           ;stkvar	_i_ror @ sp[(-17)+16]
  4200  011468  0EFF               	movlw	-1
  4201  01146A  6AE3               	clrf	plusw1,c
  4202  01146C  2AE3               	incf	plusw1,f,c
  4203  01146E                     l12907:
  4204                           
  4205                           ;main.c: 262:     calc_ror_data();
  4206  01146E  EC26  F0C2         	call	_calc_ror_data	;wreg free
  4207                           
  4208                           ;main.c: 263:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4209  011472  0E00               	movlw	0
  4210  011474  6EE6               	movwf	postinc1,c
  4211  011476  0E04               	movlw	4
  4212  011478  6EE6               	movwf	postinc1,c
  4213  01147A  EC08  F0A8         	call	_conv_raw_result	;wreg free
  4214  01147E  0060  F09B  FFE6   	movff	btemp,postinc1
  4215  011484  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4216  01148A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4217  011490  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4218  011496  0E0A               	movlw	low STR_8
  4219  011498  6EE6               	movwf	postinc1,c
  4220  01149A  0EFF               	movlw	high STR_8
  4221  01149C  6EE6               	movwf	postinc1,c
  4222  01149E  0E00               	movlw	0
  4223  0114A0  6EE6               	movwf	postinc1,c
  4224  0114A2  0E01               	movlw	1
  4225  0114A4  6EE6               	movwf	postinc1,c
  4226  0114A6  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4227  0114AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4228  0114B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4229  0114B6  0E08               	movlw	8
  4230  0114B8  6EE6               	movwf	postinc1,c
  4231  0114BA  ECBC  F0CB         	call	_sprintf	;wreg free
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;main.c: 264:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4235  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4236  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4237  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4238  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4239  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4240                           
  4241                           ;stkvar	_i_ror @ sp[(-21)+16]
  4242  0114DA  0EFB               	movlw	-5
  4243  0114DC  50E3               	movf	plusw1,w,c
  4244  0114DE  6EE6               	movwf	postinc1,c
  4245  0114E0  0E00               	movlw	0
  4246  0114E2  6EE6               	movwf	postinc1,c
  4247  0114E4  0E00               	movlw	0
  4248  0114E6  6EE6               	movwf	postinc1,c
  4249  0114E8  0E05               	movlw	5
  4250  0114EA  6EE6               	movwf	postinc1,c
  4251  0114EC  EC37  F0CD         	call	_spinners	;wreg free
  4252  0114F0  5026               	movf	btemp^0,w,c
  4253  0114F2  6EE6               	movwf	postinc1,c
  4254  0114F4  0E00               	movlw	0
  4255  0114F6  6EE6               	movwf	postinc1,c
  4256  0114F8  0E05               	movlw	low STR_9
  4257  0114FA  6EE6               	movwf	postinc1,c
  4258  0114FC  0EFD               	movlw	high STR_9
  4259  0114FE  6EE6               	movwf	postinc1,c
  4260  011500  0E00               	movlw	0
  4261  011502  6EE6               	movwf	postinc1,c
  4262  011504  0E02               	movlw	2
  4263  011506  6EE6               	movwf	postinc1,c
  4264  011508  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4265  01150C  0060  F09B  FFE6   	movff	btemp,postinc1
  4266  011512  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4267  011518  0E0C               	movlw	12
  4268  01151A  6EE6               	movwf	postinc1,c
  4269  01151C  ECBC  F0CB         	call	_sprintf	;wreg free
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;main.c: 265:     update_lcd(0);
  4273  011520  0E00               	movlw	0
  4274  011522  6EE6               	movwf	postinc1,c
  4275  011524  EC34  F0CB         	call	_update_lcd	;wreg free
  4276                           
  4277                           ;main.c: 266:     WaitMs(2000);
  4278  011528  0ED0               	movlw	208
  4279  01152A  6EE6               	movwf	postinc1,c
  4280  01152C  0E07               	movlw	7
  4281  01152E  6EE6               	movwf	postinc1,c
  4282  011530  EC58  F0D9         	call	_WaitMs	;wreg free
  4283                           
  4284                           ;main.c: 267:     clear_adc_scan();
  4285  011534  ECCB  F0DD         	call	_clear_adc_scan	;wreg free
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;main.c: 268:     start_adc_scan();
  4289  011538  EC4A  F0D5         	call	_start_adc_scan	;wreg free
  4290                           
  4291                           ;main.c: 269:     WaitMs(500);
  4292  01153C  0EF4               	movlw	244
  4293  01153E  6EE6               	movwf	postinc1,c
  4294  011540  0E01               	movlw	1
  4295  011542  6EE6               	movwf	postinc1,c
  4296  011544  EC58  F0D9         	call	_WaitMs	;wreg free
  4297                           
  4298                           ;main.c: 270:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4299                           ;stkvar	_i_ror @ sp[(-17)+16]
  4300  011548  0EFF               	movlw	-1
  4301  01154A  006F FF8C  F031    	movff	plusw1,btemp+11
  4302  011550  2A31               	incf	(btemp+11)^0,f,c
  4303  011552  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4304  011558  0631               	decf	(btemp+11)^0,f,c
  4305  01155A  0E1E               	movlw	30
  4306  01155C  6031               	cpfslt	(btemp+11)^0,c
  4307  01155E  D01A               	goto	u12460
  4308  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4309  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4310  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4311  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4312  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4313  01157C  0E42               	movlw	66
  4314  01157E  6EE6               	movwf	postinc1,c
  4315  011580  0E60               	movlw	96
  4316  011582  6EE6               	movwf	postinc1,c
  4317  011584  0E65               	movlw	101
  4318  011586  6EE6               	movwf	postinc1,c
  4319  011588  0E3C               	movlw	60
  4320  01158A  6EE6               	movwf	postinc1,c
  4321  01158C  EC1B  F0C5         	call	___flge	;wreg free
  4322  011590  A026               	btfss	btemp& (0+255),0,c
  4323  011592  D76D               	goto	l12907
  4324  011594                     u12460:
  4325                           
  4326                           ;main.c: 272:    static_soc();
  4327  011594  ECC4  F0D8         	call	_static_soc	;wreg free
  4328                           
  4329                           ;main.c: 273:    init_bsoc();
  4330  011598  ECA9  F0C3         	call	_init_bsoc	;wreg free
  4331                           
  4332                           ;main.c: 274:    set_load_relay_one(0);
  4333  01159C  0E00               	movlw	0
  4334  01159E  6EE6               	movwf	postinc1,c
  4335  0115A0  EC5F  F0DD         	call	_set_load_relay_one	;wreg free
  4336                           
  4337                           ;main.c: 275:    set_load_relay_two(0);
  4338  0115A4  0E00               	movlw	0
  4339  0115A6  6EE6               	movwf	postinc1,c
  4340  0115A8  EC57  F0DD         	call	_set_load_relay_two	;wreg free
  4341                           
  4342                           ;main.c: 276:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4343  0115AC  EE21  F3B1         	lfsr	2,_C+178	;volatile
  4344  0115B0  006F FF78  F030    	movff	postinc2,btemp+10
  4345  0115B6  006F FF74  F031    	movff	postdec2,btemp+11
  4346  0115BC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  4347  0115C2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  4348  0115C8  0E32               	movlw	low STR_10
  4349  0115CA  6EE6               	movwf	postinc1,c
  4350  0115CC  0EFD               	movlw	high STR_10
  4351  0115CE  6EE6               	movwf	postinc1,c
  4352  0115D0  0E00               	movlw	0
  4353  0115D2  6EE6               	movwf	postinc1,c
  4354  0115D4  0E00               	movlw	0
  4355  0115D6  6EE6               	movwf	postinc1,c
  4356  0115D8  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4357  0115DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4358  0115E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4359  0115E8  0E06               	movlw	6
  4360  0115EA  6EE6               	movwf	postinc1,c
  4361  0115EC  ECBC  F0CB         	call	_sprintf	;wreg free
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;main.c: 277:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4365  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4366  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4367  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4368  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4369  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4370  01160C  0E48               	movlw	low STR_11
  4371  01160E  6EE6               	movwf	postinc1,c
  4372  011610  0EFD               	movlw	high STR_11
  4373  011612  6EE6               	movwf	postinc1,c
  4374  011614  0E00               	movlw	0
  4375  011616  6EE6               	movwf	postinc1,c
  4376  011618  0E01               	movlw	1
  4377  01161A  6EE6               	movwf	postinc1,c
  4378  01161C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4379  011620  0060  F09B  FFE6   	movff	btemp,postinc1
  4380  011626  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4381  01162C  0E08               	movlw	8
  4382  01162E  6EE6               	movwf	postinc1,c
  4383  011630  ECBC  F0CB         	call	_sprintf	;wreg free
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;main.c: 278:    update_lcd(0);
  4387  011634  0E00               	movlw	0
  4388  011636  6EE6               	movwf	postinc1,c
  4389  011638  EC34  F0CB         	call	_update_lcd	;wreg free
  4390                           
  4391                           ;main.c: 279:    WaitMs(2000);
  4392  01163C  0ED0               	movlw	208
  4393  01163E  6EE6               	movwf	postinc1,c
  4394  011640  0E07               	movlw	7
  4395  011642  6EE6               	movwf	postinc1,c
  4396  011644  EC58  F0D9         	call	_WaitMs	;wreg free
  4397                           
  4398                           ;main.c: 280:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4399  011648  0E2D               	movlw	low STR_12
  4400  01164A  6EE6               	movwf	postinc1,c
  4401  01164C  0EFF               	movlw	high STR_12
  4402  01164E  6EE6               	movwf	postinc1,c
  4403  011650  0E00               	movlw	0
  4404  011652  6EE6               	movwf	postinc1,c
  4405  011654  0E00               	movlw	0
  4406  011656  6EE6               	movwf	postinc1,c
  4407  011658  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4408  01165C  0060  F09B  FFE6   	movff	btemp,postinc1
  4409  011662  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4410  011668  0E04               	movlw	4
  4411  01166A  6EE6               	movwf	postinc1,c
  4412  01166C  ECBC  F0CB         	call	_sprintf	;wreg free
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;main.c: 281:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4416  011670  0E3E               	movlw	low STR_13
  4417  011672  6EE6               	movwf	postinc1,c
  4418  011674  0EFF               	movlw	high STR_13
  4419  011676  6EE6               	movwf	postinc1,c
  4420  011678  0E00               	movlw	0
  4421  01167A  6EE6               	movwf	postinc1,c
  4422  01167C  0E01               	movlw	1
  4423  01167E  6EE6               	movwf	postinc1,c
  4424  011680  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4425  011684  0060  F09B  FFE6   	movff	btemp,postinc1
  4426  01168A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4427  011690  0E04               	movlw	4
  4428  011692  6EE6               	movwf	postinc1,c
  4429  011694  ECBC  F0CB         	call	_sprintf	;wreg free
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;main.c: 282:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4433  011698  0E71               	movlw	low STR_14
  4434  01169A  6EE6               	movwf	postinc1,c
  4435  01169C  0EFF               	movlw	high STR_14
  4436  01169E  6EE6               	movwf	postinc1,c
  4437  0116A0  0E00               	movlw	0
  4438  0116A2  6EE6               	movwf	postinc1,c
  4439  0116A4  0E02               	movlw	2
  4440  0116A6  6EE6               	movwf	postinc1,c
  4441  0116A8  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4442  0116AC  0060  F09B  FFE6   	movff	btemp,postinc1
  4443  0116B2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4444  0116B8  0E04               	movlw	4
  4445  0116BA  6EE6               	movwf	postinc1,c
  4446  0116BC  ECBC  F0CB         	call	_sprintf	;wreg free
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;main.c: 283:    update_lcd(0);
  4450  0116C0  0E00               	movlw	0
  4451  0116C2  6EE6               	movwf	postinc1,c
  4452  0116C4  EC34  F0CB         	call	_update_lcd	;wreg free
  4453                           
  4454                           ;main.c: 284:    uint16_t i_esr = 1;
  4455  0116C8  0E01               	movlw	1
  4456  0116CA  6E30               	movwf	(btemp+10)^0,c
  4457  0116CC  0E00               	movlw	0
  4458  0116CE  6E31               	movwf	(btemp+11)^0,c
  4459                           
  4460                           ;stkvar	_i_esr @ sp[(-17)+8]
  4461  0116D0  0EF7               	movlw	-9
  4462  0116D2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4463  0116D8  0EF8               	movlw	-8
  4464  0116DA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4465                           
  4466                           ;main.c: 286:    float esr_temp;;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4467  0116E0  D06D               	goto	l12967
  4468  0116E2                     l12955:
  4469                           
  4470                           ;main.c: 288:     WaitMs(110);
  4471  0116E2  0E6E               	movlw	110
  4472  0116E4  6EE6               	movwf	postinc1,c
  4473  0116E6  0E00               	movlw	0
  4474  0116E8  6EE6               	movwf	postinc1,c
  4475  0116EA  EC58  F0D9         	call	_WaitMs	;wreg free
  4476                           
  4477                           ;main.c: 289:     shape = (uint8_t) fabsf(esr_temp);
  4478                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4479  0116EE  0EF3               	movlw	-13
  4480  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4481  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4482  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4483  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4484  011708  EC14  F0D0         	call	_fabsf	;wreg free
  4485  01170C  0060  F09B  FFE6   	movff	btemp,postinc1
  4486  011712  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4487  011718  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4488  01171E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4489  011724  EC62  F0C4         	call	___fltol	;wreg free
  4490  011728  0060  F098  F031   	movff	btemp,btemp+11
  4491                           
  4492                           ;stkvar	_shape @ sp[(-17)+10]
  4493  01172E  0EF9               	movlw	-7
  4494  011730  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4495                           
  4496                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4497  011736  0E00               	movlw	0
  4498  011738  6EE6               	movwf	postinc1,c
  4499                           
  4500                           ;stkvar	_shape @ sp[(-18)+10]
  4501  01173A  0EF8               	movlw	-8
  4502  01173C  50E3               	movf	plusw1,w,c
  4503  01173E  6EE6               	movwf	postinc1,c
  4504  011740  EC37  F0CD         	call	_spinners	;wreg free
  4505  011744  5026               	movf	btemp^0,w,c
  4506  011746  6EE6               	movwf	postinc1,c
  4507  011748  0E00               	movlw	0
  4508  01174A  6EE6               	movwf	postinc1,c
  4509  01174C  0E00               	movlw	0
  4510  01174E  6EE6               	movwf	postinc1,c
  4511  011750  0E00               	movlw	0
  4512  011752  6EE6               	movwf	postinc1,c
  4513  011754  EC37  F0CD         	call	_spinners	;wreg free
  4514  011758  5026               	movf	btemp^0,w,c
  4515  01175A  6EE6               	movwf	postinc1,c
  4516  01175C  0E00               	movlw	0
  4517  01175E  6EE6               	movwf	postinc1,c
  4518  011760  0E5E               	movlw	low STR_15
  4519  011762  6EE6               	movwf	postinc1,c
  4520  011764  0EFD               	movlw	high STR_15
  4521  011766  6EE6               	movwf	postinc1,c
  4522  011768  0E00               	movlw	0
  4523  01176A  6EE6               	movwf	postinc1,c
  4524  01176C  0E02               	movlw	2
  4525  01176E  6EE6               	movwf	postinc1,c
  4526  011770  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4527  011774  0060  F09B  FFE6   	movff	btemp,postinc1
  4528  01177A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4529  011780  0E08               	movlw	8
  4530  011782  6EE6               	movwf	postinc1,c
  4531  011784  ECBC  F0CB         	call	_sprintf	;wreg free
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;main.c: 291:     update_lcd(0);
  4535  011788  0E00               	movlw	0
  4536  01178A  6EE6               	movwf	postinc1,c
  4537  01178C  EC34  F0CB         	call	_update_lcd	;wreg free
  4538                           
  4539                           ;main.c: 293:     if (i_esr++ > 512)
  4540                           ;stkvar	_i_esr @ sp[(-17)+8]
  4541  011790  50E1               	movf	fsr1l,w,c
  4542  011792  0FF7               	addlw	-9
  4543  011794  6ED9               	movwf	fsr2l,c
  4544  011796  50E2               	movf	fsr1h,w,c
  4545  011798  6EDA               	movwf	fsr2h,c
  4546  01179A  0EFF               	movlw	255
  4547  01179C  22DA               	addwfc	fsr2h,f,c
  4548  01179E  006F FF7C  F030    	movff	indf2,btemp+10
  4549  0117A4  0E01               	movlw	1
  4550  0117A6  26DE               	addwf	postinc2,f,c
  4551  0117A8  006F FF7C  F031    	movff	indf2,btemp+11
  4552  0117AE  0E00               	movlw	0
  4553  0117B0  22DD               	addwfc	postdec2,f,c
  4554  0117B2  0430               	decf	(btemp+10)^0,w,c
  4555  0117B4  0E02               	movlw	2
  4556  0117B6  5831               	subwfb	(btemp+11)^0,w,c
  4557  0117B8  B0D8               	btfsc	status,0,c
  4558  0117BA  D017               	goto	u12480
  4559  0117BC                     l12967:
  4560                           
  4561                           ;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0) {
  4562  0117BC  0E00               	movlw	0
  4563  0117BE  6EE6               	movwf	postinc1,c
  4564  0117C0  EC01  F0B7         	call	_esr_check	;wreg free
  4565                           
  4566                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4567  0117C4  0EF3               	movlw	-13
  4568  0117C6  0060  F09B  FFE3   	movff	btemp,plusw1
  4569  0117CC  0EF4               	movlw	-12
  4570  0117CE  0060  F09F  FFE3   	movff	btemp+1,plusw1
  4571  0117D4  0EF5               	movlw	-11
  4572  0117D6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
  4573  0117DC  0EF6               	movlw	-10
  4574  0117DE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
  4575  0117E4  0EF6               	movlw	-10
  4576  0117E6  BEE3               	btfsc	plusw1,7,c
  4577  0117E8  D77C               	goto	l12955
  4578  0117EA                     u12480:
  4579                           
  4580                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4581  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4582  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4583  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4584  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4585  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4586  011806  0E1C               	movlw	low STR_16
  4587  011808  6EE6               	movwf	postinc1,c
  4588  01180A  0EFD               	movlw	high STR_16
  4589  01180C  6EE6               	movwf	postinc1,c
  4590  01180E  0E00               	movlw	0
  4591  011810  6EE6               	movwf	postinc1,c
  4592  011812  0E00               	movlw	0
  4593  011814  6EE6               	movwf	postinc1,c
  4594  011816  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4595  01181A  0060  F09B  FFE6   	movff	btemp,postinc1
  4596  011820  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4597  011826  0E08               	movlw	8
  4598  011828  6EE6               	movwf	postinc1,c
  4599  01182A  ECBC  F0CB         	call	_sprintf	;wreg free
  4600                           
  4601                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4602  01182E  EE22  F009         	lfsr	2,_C+266	;volatile
  4603  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4604  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4605  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4606  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4607  01184A  EE22  F015         	lfsr	2,_C+278	;volatile
  4608  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4609  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4610  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4611  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4612  011866  0EB9               	movlw	low STR_17
  4613  011868  6EE6               	movwf	postinc1,c
  4614  01186A  0EFC               	movlw	high STR_17
  4615  01186C  6EE6               	movwf	postinc1,c
  4616  01186E  0E00               	movlw	0
  4617  011870  6EE6               	movwf	postinc1,c
  4618  011872  0E01               	movlw	1
  4619  011874  6EE6               	movwf	postinc1,c
  4620  011876  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4621  01187A  0060  F09B  FFE6   	movff	btemp,postinc1
  4622  011880  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4623  011886  0E0C               	movlw	12
  4624  011888  6EE6               	movwf	postinc1,c
  4625  01188A  ECBC  F0CB         	call	_sprintf	;wreg free
  4626                           
  4627                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4628  01188E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4629  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4630  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4631  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4632  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4633  0118AA  EE22  F019         	lfsr	2,_C+282	;volatile
  4634  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4635  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4636  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4637  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4638  0118C6  0ED3               	movlw	low STR_18
  4639  0118C8  6EE6               	movwf	postinc1,c
  4640  0118CA  0EFC               	movlw	high STR_18
  4641  0118CC  6EE6               	movwf	postinc1,c
  4642  0118CE  0E00               	movlw	0
  4643  0118D0  6EE6               	movwf	postinc1,c
  4644  0118D2  0E02               	movlw	2
  4645  0118D4  6EE6               	movwf	postinc1,c
  4646  0118D6  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4647  0118DA  0060  F09B  FFE6   	movff	btemp,postinc1
  4648  0118E0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4649  0118E6  0E0C               	movlw	12
  4650  0118E8  6EE6               	movwf	postinc1,c
  4651  0118EA  ECBC  F0CB         	call	_sprintf	;wreg free
  4652                           
  4653                           ;main.c: 299:    update_lcd(0);
  4654  0118EE  0E00               	movlw	0
  4655  0118F0  6EE6               	movwf	postinc1,c
  4656  0118F2  EC34  F0CB         	call	_update_lcd	;wreg free
  4657                           
  4658                           ;main.c: 300:    WaitMs(5000);
  4659  0118F6  0E88               	movlw	136
  4660  0118F8  6EE6               	movwf	postinc1,c
  4661  0118FA  0E13               	movlw	19
  4662  0118FC  6EE6               	movwf	postinc1,c
  4663  0118FE  EC58  F0D9         	call	_WaitMs	;wreg free
  4664                           
  4665                           ;main.c: 301:    V.system_stable = 1;
  4666  011902  0E01               	movlw	1
  4667  011904  0101               	movlb	1	; () banked
  4668  011906  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4669                           
  4670                           ;main.c: 302:    break;
  4671  011908  D01C               	goto	l12979
  4672  01190A                     l1340:
  4673                           
  4674                           ; BSR set to: 1
  4675                           ;main.c: 308:    P.SYSTEM_STABLE = 1;
  4676  01190A  0100               	movlb	0	; () banked
  4677  01190C  8197               	bsf	(_P+1)& (0+255),0,b	;volatile
  4678                           
  4679                           ;main.c: 309:    break;
  4680  01190E  D019               	goto	l12979
  4681  011910                     l1342:
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;main.c: 312:    V.ui_state = UI_STATE_INIT;
  4685  011910  6B07               	clrf	_V& (0+255),b	;volatile
  4686                           
  4687                           ;main.c: 313:    break;
  4688  011912  D017               	goto	l12979
  4689  011914                     l12977:
  4690  011914  0101               	movlb	1	; () banked
  4691  011916  5107               	movf	_V& (0+255),w,b	;volatile
  4692  011918  6E30               	movwf	(btemp+10)^0,c
  4693  01191A  6A31               	clrf	(btemp+11)^0,c
  4694                           
  4695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 1, Range of values is 0 to 0
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte            4     3 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  01191C  5031               	movf	(btemp+11)^0,w,c
  4703  01191E  0A00               	xorlw	0	; case 0
  4704  011920  A4D8               	btfss	status,2,c
  4705  011922  D7F6               	goto	l1342
  4706                           
  4707                           ; BSR set to: 1
  4708                           ; Switch size 1, requested type "simple"
  4709                           ; Number of cases is 5, Range of values is 0 to 5
  4710                           ; switch strategies available:
  4711                           ; Name         Instructions Cycles
  4712                           ; simple_byte           16     9 (average)
  4713                           ;	Chosen strategy is simple_byte
  4714  011924  5030               	movf	(btemp+10)^0,w,c
  4715  011926  0A00               	xorlw	0	; case 0
  4716  011928  B4D8               	btfsc	status,2,c
  4717  01192A  D4C8               	goto	l12857
  4718  01192C  0A01               	xorlw	1	; case 1
  4719  01192E  B4D8               	btfsc	status,2,c
  4720  011930  D008               	goto	l12979
  4721  011932  0A02               	xorlw	2	; case 3
  4722  011934  B4D8               	btfsc	status,2,c
  4723  011936  D005               	goto	l12979
  4724  011938  0A07               	xorlw	7	; case 4
  4725  01193A  B4D8               	btfsc	status,2,c
  4726  01193C  D7E6               	goto	l1340
  4727  01193E  0A01               	xorlw	1	; case 5
  4728  011940  D7E7               	goto	l1342
  4729  011942                     l12979:
  4730                           
  4731                           ;main.c: 316:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4732  011942  0E01               	movlw	1
  4733  011944  6EE6               	movwf	postinc1,c
  4734  011946  ECE5  F0DA         	call	_TimerDone	;wreg free
  4735  01194A  5026               	movf	btemp^0,w,c
  4736  01194C  B4D8               	btfsc	status,2,c
  4737  01194E  D013               	goto	l12991
  4738  011950  ECBB  F0DD         	call	_check_adc_scan	;wreg free
  4739  011954  5026               	movf	btemp^0,w,c
  4740  011956  B4D8               	btfsc	status,2,c
  4741  011958  D00E               	goto	l12991
  4742                           
  4743                           ;main.c: 320:    convert_adc_data();
  4744  01195A  ECB8  F0CF         	call	_convert_adc_data	;wreg free
  4745                           
  4746                           ;main.c: 324:    clear_adc_scan();
  4747  01195E  ECCB  F0DD         	call	_clear_adc_scan	;wreg free
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;main.c: 325:    start_adc_scan();
  4751  011962  EC4A  F0D5         	call	_start_adc_scan	;wreg free
  4752                           
  4753                           ;main.c: 326:    StartTimer(TMR_ADC, 200);
  4754  011966  0EC8               	movlw	200
  4755  011968  6EE6               	movwf	postinc1,c
  4756  01196A  0E00               	movlw	0
  4757  01196C  6EE6               	movwf	postinc1,c
  4758  01196E  0E01               	movlw	1
  4759  011970  6EE6               	movwf	postinc1,c
  4760  011972  EC44  F0D8         	call	_StartTimer	;wreg free
  4761  011976                     l12991:
  4762                           
  4763                           ;main.c: 333:   if (TimerDone(TMR_DISPLAY)) {
  4764                           
  4765                           ;main.c: 329:   if (V.ticks) {
  4766  011976  0E0A               	movlw	10
  4767  011978  6EE6               	movwf	postinc1,c
  4768  01197A  ECE5  F0DA         	call	_TimerDone	;wreg free
  4769  01197E  5026               	movf	btemp^0,w,c
  4770  011980  B4D8               	btfsc	status,2,c
  4771  011982  EF3F  F091         	goto	l13067
  4772                           
  4773                           ;main.c: 334:    if (TimerDone(TMR_HELPDIS)) {
  4774  011986  0E09               	movlw	9
  4775  011988  6EE6               	movwf	postinc1,c
  4776  01198A  ECE5  F0DA         	call	_TimerDone	;wreg free
  4777  01198E  5026               	movf	btemp^0,w,c
  4778  011990  B4D8               	btfsc	status,2,c
  4779  011992  D004               	goto	l12999
  4780                           
  4781                           ;main.c: 335:     set_display_info(DIS_STR);
  4782  011994  0E00               	movlw	0
  4783  011996  6EE6               	movwf	postinc1,c
  4784  011998  ECB6  F0DC         	call	_set_display_info	;wreg free
  4785  01199C                     l12999:
  4786                           
  4787                           ;main.c: 337:    calc_model_data();
  4788  01199C  EC9E  F0AC         	call	_calc_model_data	;wreg free
  4789                           
  4790                           ; BSR set to: 57
  4791                           ;main.c: 344:     hid_display(&H);
  4792                           
  4793                           ;main.c: 339:    if (0) {
  4794  0119A0  0ED9               	movlw	_H& (0+255)
  4795  0119A2  6EE6               	movwf	postinc1,c
  4796  0119A4  EC41  F0CC         	call	_hid_display	;wreg free
  4797                           
  4798                           ;main.c: 345:     switch (H.hid_display) {
  4799  0119A8  EFEE  F090         	goto	l13047
  4800  0119AC                     l1350:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;main.c: 347:      V.calib = 0;
  4804  0119AC  0101               	movlb	1	; () banked
  4805  0119AE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4806                           
  4807                           ; BSR set to: 1
  4808                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4809  0119B0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4810  0119B4  50DF               	movf	indf2,w,c
  4811  0119B6  A4D8               	btfss	status,2,c
  4812  0119B8  D002               	goto	l13009
  4813                           
  4814                           ; BSR set to: 1
  4815  0119BA  0E20               	movlw	32
  4816  0119BC  D001               	goto	L1
  4817  0119BE                     l13009:
  4818                           
  4819                           ; BSR set to: 1
  4820  0119BE  0E44               	movlw	68
  4821  0119C0                     L1:
  4822  0119C0  6E30               	movwf	(btemp+10)^0,c
  4823  0119C2  0E00               	movlw	0
  4824  0119C4  6E31               	movwf	(btemp+11)^0,c
  4825                           
  4826                           ;stkvar	_main$3750 @ sp[(-17)+2]
  4827  0119C6  0EF1               	movlw	-15
  4828  0119C8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4829  0119CE  0EF2               	movlw	-14
  4830  0119D0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4831                           
  4832                           ; BSR set to: 1
  4833  0119D6  EE21  F37B         	lfsr	2,_C+124	;volatile
  4834  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4835  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4836  0119E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4837  0119EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4838                           
  4839                           ;stkvar	_main$3750 @ sp[(-21)+2]
  4840  0119F2  0EED               	movlw	-19
  4841  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4842  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4843  011A00  0EEB               	movlw	low STR_22
  4844  011A02  6EE6               	movwf	postinc1,c
  4845  011A04  0EFD               	movlw	high STR_22
  4846  011A06  6EE6               	movwf	postinc1,c
  4847  011A08  0E00               	movlw	0
  4848  011A0A  6EE6               	movwf	postinc1,c
  4849  011A0C  0E00               	movlw	0
  4850  011A0E  6EE6               	movwf	postinc1,c
  4851  011A10  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4852  011A14  0060  F09B  FFE6   	movff	btemp,postinc1
  4853  011A1A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4854  011A20  0E0A               	movlw	10
  4855  011A22  6EE6               	movwf	postinc1,c
  4856  011A24  ECBC  F0CB         	call	_sprintf	;wreg free
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4860  011A28  EE21  F373         	lfsr	2,_C+116	;volatile
  4861  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4862  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4863  011A38  006F FF7B FFE6     	movff	postinc2,postinc1
  4864  011A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4865  011A44  0EBE               	movlw	low STR_23
  4866  011A46  6EE6               	movwf	postinc1,c
  4867  011A48  0EFE               	movlw	high STR_23
  4868  011A4A  6EE6               	movwf	postinc1,c
  4869  011A4C  0E00               	movlw	0
  4870  011A4E  6EE6               	movwf	postinc1,c
  4871  011A50  0E01               	movlw	1
  4872  011A52  6EE6               	movwf	postinc1,c
  4873  011A54  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4874  011A58  0060  F09B  FFE6   	movff	btemp,postinc1
  4875  011A5E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4876  011A64  0E08               	movlw	8
  4877  011A66  6EE6               	movwf	postinc1,c
  4878  011A68  ECBC  F0CB         	call	_sprintf	;wreg free
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4882  011A6C  EE21  F377         	lfsr	2,_C+120	;volatile
  4883  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4884  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4885  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4886  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  4887  011A88  0EAB               	movlw	low STR_24
  4888  011A8A  6EE6               	movwf	postinc1,c
  4889  011A8C  0EFE               	movlw	high STR_24
  4890  011A8E  6EE6               	movwf	postinc1,c
  4891  011A90  0E00               	movlw	0
  4892  011A92  6EE6               	movwf	postinc1,c
  4893  011A94  0E02               	movlw	2
  4894  011A96  6EE6               	movwf	postinc1,c
  4895  011A98  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4896  011A9C  0060  F09B  FFE6   	movff	btemp,postinc1
  4897  011AA2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4898  011AA8  0E08               	movlw	8
  4899  011AAA  6EE6               	movwf	postinc1,c
  4900  011AAC  ECBC  F0CB         	call	_sprintf	;wreg free
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4904  011AB0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4905  011AB4  50DF               	movf	indf2,w,c
  4906  011AB6  A4D8               	btfss	status,2,c
  4907  011AB8  D002               	goto	l13021
  4908                           
  4909                           ; BSR set to: 0
  4910  011ABA  0E20               	movlw	32
  4911  011ABC  D001               	goto	L2
  4912  011ABE                     l13021:
  4913                           
  4914                           ; BSR set to: 0
  4915  011ABE  0E44               	movlw	68
  4916  011AC0                     L2:
  4917  011AC0  6E30               	movwf	(btemp+10)^0,c
  4918  011AC2  0E00               	movlw	0
  4919  011AC4  6E31               	movwf	(btemp+11)^0,c
  4920                           
  4921                           ;stkvar	_main$3754 @ sp[(-17)+0]
  4922  011AC6  0EEF               	movlw	-17
  4923  011AC8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4924  011ACE  0EF0               	movlw	-16
  4925  011AD0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4926                           
  4927                           ; BSR set to: 0
  4928  011AD6  EE21  F3A3         	lfsr	2,_C+164	;volatile
  4929  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4930  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4931  011AE6  006F FF7B FFE6     	movff	postinc2,postinc1
  4932  011AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  4933                           
  4934                           ;stkvar	_main$3754 @ sp[(-21)+0]
  4935  011AF2  0EEB               	movlw	-21
  4936  011AF4  006F FF8F FFE6     	movff	plusw1,postinc1
  4937  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
  4938  011B00  0E9B               	movlw	low STR_25
  4939  011B02  6EE6               	movwf	postinc1,c
  4940  011B04  0EFD               	movlw	high STR_25
  4941  011B06  6EE6               	movwf	postinc1,c
  4942  011B08  0E01               	movlw	1
  4943  011B0A  6EE6               	movwf	postinc1,c
  4944  011B0C  0E00               	movlw	0
  4945  011B0E  6EE6               	movwf	postinc1,c
  4946  011B10  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4947  011B14  0060  F09B  FFE6   	movff	btemp,postinc1
  4948  011B1A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4949  011B20  0E0A               	movlw	10
  4950  011B22  6EE6               	movwf	postinc1,c
  4951  011B24  ECBC  F0CB         	call	_sprintf	;wreg free
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4955  011B28  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4956  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4957  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  4958  011B38  006F FF7B FFE6     	movff	postinc2,postinc1
  4959  011B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4960  011B44  0E98               	movlw	low STR_26
  4961  011B46  6EE6               	movwf	postinc1,c
  4962  011B48  0EFE               	movlw	high STR_26
  4963  011B4A  6EE6               	movwf	postinc1,c
  4964  011B4C  0E01               	movlw	1
  4965  011B4E  6EE6               	movwf	postinc1,c
  4966  011B50  0E01               	movlw	1
  4967  011B52  6EE6               	movwf	postinc1,c
  4968  011B54  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4969  011B58  0060  F09B  FFE6   	movff	btemp,postinc1
  4970  011B5E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4971  011B64  0E08               	movlw	8
  4972  011B66  6EE6               	movwf	postinc1,c
  4973  011B68  ECBC  F0CB         	call	_sprintf	;wreg free
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4977  011B6C  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4978  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  4979  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  4980  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4981  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  4982  011B88  0E85               	movlw	low STR_27
  4983  011B8A  6EE6               	movwf	postinc1,c
  4984  011B8C  0EFE               	movlw	high STR_27
  4985  011B8E  6EE6               	movwf	postinc1,c
  4986  011B90  0E01               	movlw	1
  4987  011B92  6EE6               	movwf	postinc1,c
  4988  011B94  0E02               	movlw	2
  4989  011B96  6EE6               	movwf	postinc1,c
  4990  011B98  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  4991  011B9C  0060  F09B  FFE6   	movff	btemp,postinc1
  4992  011BA2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4993  011BA8  0E08               	movlw	8
  4994  011BAA  6EE6               	movwf	postinc1,c
  4995  011BAC  ECBC  F0CB         	call	_sprintf	;wreg free
  4996                           
  4997                           ;main.c: 355:      break;
  4998  011BB0  D32B               	goto	l13049
  4999  011BB2                     l1360:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;main.c: 357:      V.calib = 0;
  5003  011BB2  0101               	movlb	1	; () banked
  5004  011BB4  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5005                           
  5006                           ; BSR set to: 1
  5007                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5008  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  5009  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5010  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5011  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5012  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5013  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5014  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5018  011BEE  0EF7               	movlw	low STR_28
  5019  011BF0  6EE6               	movwf	postinc1,c
  5020  011BF2  0EFE               	movlw	high STR_28
  5021  011BF4  6EE6               	movwf	postinc1,c
  5022  011BF6  0E00               	movlw	0
  5023  011BF8  6EE6               	movwf	postinc1,c
  5024  011BFA  0E00               	movlw	0
  5025  011BFC  6EE6               	movwf	postinc1,c
  5026  011BFE  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5027  011C02  0060  F09B  FFE6   	movff	btemp,postinc1
  5028  011C08  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5029  011C0E  0E0C               	movlw	12
  5030  011C10  6EE6               	movwf	postinc1,c
  5031  011C12  ECBC  F0CB         	call	_sprintf	;wreg free
  5032                           
  5033                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5034  011C16  EE21  F2FF         	lfsr	2,_C
  5035  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5038  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5040  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5041  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011C4E  0ED1               	movlw	low STR_29
  5045  011C50  6EE6               	movwf	postinc1,c
  5046  011C52  0EFE               	movlw	high STR_29
  5047  011C54  6EE6               	movwf	postinc1,c
  5048  011C56  0E00               	movlw	0
  5049  011C58  6EE6               	movwf	postinc1,c
  5050  011C5A  0E01               	movlw	1
  5051  011C5C  6EE6               	movwf	postinc1,c
  5052  011C5E  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5053  011C62  0060  F09B  FFE6   	movff	btemp,postinc1
  5054  011C68  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5055  011C6E  0E0C               	movlw	12
  5056  011C70  6EE6               	movwf	postinc1,c
  5057  011C72  ECBC  F0CB         	call	_sprintf	;wreg free
  5058                           
  5059                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5060  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5061  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5063  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5064  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5066  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5068  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5069  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5070  011CAE  0EE4               	movlw	low STR_30
  5071  011CB0  6EE6               	movwf	postinc1,c
  5072  011CB2  0EFE               	movlw	high STR_30
  5073  011CB4  6EE6               	movwf	postinc1,c
  5074  011CB6  0E00               	movlw	0
  5075  011CB8  6EE6               	movwf	postinc1,c
  5076  011CBA  0E02               	movlw	2
  5077  011CBC  6EE6               	movwf	postinc1,c
  5078  011CBE  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5079  011CC2  0060  F09B  FFE6   	movff	btemp,postinc1
  5080  011CC8  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5081  011CCE  0E0C               	movlw	12
  5082  011CD0  6EE6               	movwf	postinc1,c
  5083  011CD2  ECBC  F0CB         	call	_sprintf	;wreg free
  5084                           
  5085                           ;main.c: 362:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5086  011CD6  EE21  F39B         	lfsr	2,_C+156	;volatile
  5087  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5088  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5089  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5090  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011CF2  0E4C               	movlw	low STR_31
  5092  011CF4  6EE6               	movwf	postinc1,c
  5093  011CF6  0EFE               	movlw	high STR_31
  5094  011CF8  6EE6               	movwf	postinc1,c
  5095  011CFA  0E01               	movlw	1
  5096  011CFC  6EE6               	movwf	postinc1,c
  5097  011CFE  0E00               	movlw	0
  5098  011D00  6EE6               	movwf	postinc1,c
  5099  011D02  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5100  011D06  0060  F09B  FFE6   	movff	btemp,postinc1
  5101  011D0C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5102  011D12  0E08               	movlw	8
  5103  011D14  6EE6               	movwf	postinc1,c
  5104  011D16  ECBC  F0CB         	call	_sprintf	;wreg free
  5105                           
  5106                           ;main.c: 363:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5107  011D1A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5108  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5109  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5110  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011D36  0E5F               	movlw	low STR_32
  5113  011D38  6EE6               	movwf	postinc1,c
  5114  011D3A  0EFE               	movlw	high STR_32
  5115  011D3C  6EE6               	movwf	postinc1,c
  5116  011D3E  0E01               	movlw	1
  5117  011D40  6EE6               	movwf	postinc1,c
  5118  011D42  0E01               	movlw	1
  5119  011D44  6EE6               	movwf	postinc1,c
  5120  011D46  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5121  011D4A  0060  F09B  FFE6   	movff	btemp,postinc1
  5122  011D50  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5123  011D56  0E08               	movlw	8
  5124  011D58  6EE6               	movwf	postinc1,c
  5125  011D5A  ECBC  F0CB         	call	_sprintf	;wreg free
  5126                           
  5127                           ;main.c: 364:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5128  011D5E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5129  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5130  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5131  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011D7A  EE21  F39B         	lfsr	2,_C+156	;volatile
  5134  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5135  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5136  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5137  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5138  011D96  ECB5  F09D         	call	___fladd	;wreg free
  5139  011D9A  0060  F09B  FFE6   	movff	btemp,postinc1
  5140  011DA0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5141  011DA6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  5142  011DAC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  5143  011DB2  0E72               	movlw	low STR_33
  5144  011DB4  6EE6               	movwf	postinc1,c
  5145  011DB6  0EFE               	movlw	high STR_33
  5146  011DB8  6EE6               	movwf	postinc1,c
  5147  011DBA  0E01               	movlw	1
  5148  011DBC  6EE6               	movwf	postinc1,c
  5149  011DBE  0E02               	movlw	2
  5150  011DC0  6EE6               	movwf	postinc1,c
  5151  011DC2  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5152  011DC6  0060  F09B  FFE6   	movff	btemp,postinc1
  5153  011DCC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5154  011DD2  0E08               	movlw	8
  5155  011DD4  6EE6               	movwf	postinc1,c
  5156  011DD6  ECBC  F0CB         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 365:      break;
  5159  011DDA  D216               	goto	l13049
  5160  011DDC                     l1361:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;main.c: 367:      V.calib = 0;
  5164  011DDC  0101               	movlb	1	; () banked
  5165  011DDE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5166                           
  5167                           ; BSR set to: 1
  5168                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5169  011DE0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5170  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  011DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5173  011DF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011DFC  0EAF               	movlw	low STR_34
  5175  011DFE  6EE6               	movwf	postinc1,c
  5176  011E00  0EFD               	movlw	high STR_34
  5177  011E02  6EE6               	movwf	postinc1,c
  5178  011E04  0E00               	movlw	0
  5179  011E06  6EE6               	movwf	postinc1,c
  5180  011E08  0E00               	movlw	0
  5181  011E0A  6EE6               	movwf	postinc1,c
  5182  011E0C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5183  011E10  0060  F09B  FFE6   	movff	btemp,postinc1
  5184  011E16  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5185  011E1C  0E08               	movlw	8
  5186  011E1E  6EE6               	movwf	postinc1,c
  5187  011E20  ECBC  F0CB         	call	_sprintf	;wreg free
  5188                           
  5189                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5190  011E24  EE21  F393         	lfsr	2,_C+148	;volatile
  5191  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5192  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011E40  EE21  F38F         	lfsr	2,_C+144	;volatile
  5196  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5197  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5198  011E50  006F FF7B FFE6     	movff	postinc2,postinc1
  5199  011E56  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011E5C  0EFF               	movlw	low STR_35
  5201  011E5E  6EE6               	movwf	postinc1,c
  5202  011E60  0EFD               	movlw	high STR_35
  5203  011E62  6EE6               	movwf	postinc1,c
  5204  011E64  0E00               	movlw	0
  5205  011E66  6EE6               	movwf	postinc1,c
  5206  011E68  0E01               	movlw	1
  5207  011E6A  6EE6               	movwf	postinc1,c
  5208  011E6C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5209  011E70  0060  F09B  FFE6   	movff	btemp,postinc1
  5210  011E76  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5211  011E7C  0E0C               	movlw	12
  5212  011E7E  6EE6               	movwf	postinc1,c
  5213  011E80  ECBC  F0CB         	call	_sprintf	;wreg free
  5214                           
  5215                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5216  011E84  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5217  011E88  006F FF78  F030    	movff	postinc2,btemp+10
  5218  011E8E  006F FF74  F031    	movff	postdec2,btemp+11
  5219  011E94  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5220  011E9A  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5221  011EA0  EE21  F3B1         	lfsr	2,_C+178	;volatile
  5222  011EA4  006F FF78  F030    	movff	postinc2,btemp+10
  5223  011EAA  006F FF74  F031    	movff	postdec2,btemp+11
  5224  011EB0  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5225  011EB6  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5226  011EBC  0E00               	movlw	0
  5227  011EBE  6EE6               	movwf	postinc1,c
  5228  011EC0  0E05               	movlw	5
  5229  011EC2  6EE6               	movwf	postinc1,c
  5230  011EC4  EC37  F0CD         	call	_spinners	;wreg free
  5231  011EC8  5026               	movf	btemp^0,w,c
  5232  011ECA  6EE6               	movwf	postinc1,c
  5233  011ECC  0E00               	movlw	0
  5234  011ECE  6EE6               	movwf	postinc1,c
  5235  011ED0  0E87               	movlw	low STR_36
  5236  011ED2  6EE6               	movwf	postinc1,c
  5237  011ED4  0EFD               	movlw	high STR_36
  5238  011ED6  6EE6               	movwf	postinc1,c
  5239  011ED8  0E00               	movlw	0
  5240  011EDA  6EE6               	movwf	postinc1,c
  5241  011EDC  0E02               	movlw	2
  5242  011EDE  6EE6               	movwf	postinc1,c
  5243  011EE0  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5244  011EE4  0060  F09B  FFE6   	movff	btemp,postinc1
  5245  011EEA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5246  011EF0  0E0A               	movlw	10
  5247  011EF2  6EE6               	movwf	postinc1,c
  5248  011EF4  ECBC  F0CB         	call	_sprintf	;wreg free
  5249                           
  5250                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5251  011EF8  EE21  F387         	lfsr	2,_C+136	;volatile
  5252  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5253  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5254  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5255  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5256  011F14  0E73               	movlw	low STR_37
  5257  011F16  6EE6               	movwf	postinc1,c
  5258  011F18  0EFD               	movlw	high STR_37
  5259  011F1A  6EE6               	movwf	postinc1,c
  5260  011F1C  0E01               	movlw	1
  5261  011F1E  6EE6               	movwf	postinc1,c
  5262  011F20  0E00               	movlw	0
  5263  011F22  6EE6               	movwf	postinc1,c
  5264  011F24  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5265  011F28  0060  F09B  FFE6   	movff	btemp,postinc1
  5266  011F2E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5267  011F34  0E08               	movlw	8
  5268  011F36  6EE6               	movwf	postinc1,c
  5269  011F38  ECBC  F0CB         	call	_sprintf	;wreg free
  5270                           
  5271                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5272  011F3C  EE22  F009         	lfsr	2,_C+266	;volatile
  5273  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011F58  EE22  F015         	lfsr	2,_C+278	;volatile
  5278  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5280  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5281  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5282  011F74  0EC3               	movlw	low STR_38
  5283  011F76  6EE6               	movwf	postinc1,c
  5284  011F78  0EFD               	movlw	high STR_38
  5285  011F7A  6EE6               	movwf	postinc1,c
  5286  011F7C  0E01               	movlw	1
  5287  011F7E  6EE6               	movwf	postinc1,c
  5288  011F80  0E01               	movlw	1
  5289  011F82  6EE6               	movwf	postinc1,c
  5290  011F84  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5291  011F88  0060  F09B  FFE6   	movff	btemp,postinc1
  5292  011F8E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5293  011F94  0E0C               	movlw	12
  5294  011F96  6EE6               	movwf	postinc1,c
  5295  011F98  ECBC  F0CB         	call	_sprintf	;wreg free
  5296                           
  5297                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5298  011F9C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5299  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5301  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011FB8  EE22  F019         	lfsr	2,_C+282	;volatile
  5304  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5307  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5308  011FD4  0ED7               	movlw	low STR_39
  5309  011FD6  6EE6               	movwf	postinc1,c
  5310  011FD8  0EFD               	movlw	high STR_39
  5311  011FDA  6EE6               	movwf	postinc1,c
  5312  011FDC  0E01               	movlw	1
  5313  011FDE  6EE6               	movwf	postinc1,c
  5314  011FE0  0E02               	movlw	2
  5315  011FE2  6EE6               	movwf	postinc1,c
  5316  011FE4  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5317  011FE8  0060  F09B  FFE6   	movff	btemp,postinc1
  5318  011FEE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5319  011FF4  0E0C               	movlw	12
  5320  011FF6  6EE6               	movwf	postinc1,c
  5321  011FF8  ECBC  F0CB         	call	_sprintf	;wreg free
  5322                           
  5323                           ;main.c: 375:      break;
  5324  011FFC  D105               	goto	l13049
  5325  011FFE                     l13033:
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;main.c: 377:      if (!V.calib) {
  5329  011FFE  0101               	movlb	1	; () banked
  5330  012000  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5331  012002  A4D8               	btfss	status,2,c
  5332  012004  D02D               	goto	l13037
  5333                           
  5334                           ; BSR set to: 1
  5335                           ;main.c: 378:       lp_filter(0.0, i, -1);
  5336  012006  0EFF               	movlw	255
  5337  012008  6EE6               	movwf	postinc1,c
  5338                           
  5339                           ;stkvar	_i @ sp[(-18)+13]
  5340  01200A  0EFB               	movlw	-5
  5341  01200C  50E3               	movf	plusw1,w,c
  5342  01200E  6EE6               	movwf	postinc1,c
  5343  012010  0E00               	movlw	0
  5344  012012  6EE6               	movwf	postinc1,c
  5345  012014  0E00               	movlw	0
  5346  012016  6EE6               	movwf	postinc1,c
  5347  012018  0E00               	movlw	0
  5348  01201A  6EE6               	movwf	postinc1,c
  5349  01201C  0E00               	movlw	0
  5350  01201E  6EE6               	movwf	postinc1,c
  5351  012020  EC7D  F0C0         	call	_lp_filter	;wreg free
  5352                           
  5353                           ;main.c: 379:       lp_filter(0.0, j, -1);
  5354  012024  0EFF               	movlw	255
  5355  012026  6EE6               	movwf	postinc1,c
  5356                           
  5357                           ;stkvar	_j @ sp[(-18)+12]
  5358  012028  0EFA               	movlw	-6
  5359  01202A  50E3               	movf	plusw1,w,c
  5360  01202C  6EE6               	movwf	postinc1,c
  5361  01202E  0E00               	movlw	0
  5362  012030  6EE6               	movwf	postinc1,c
  5363  012032  0E00               	movlw	0
  5364  012034  6EE6               	movwf	postinc1,c
  5365  012036  0E00               	movlw	0
  5366  012038  6EE6               	movwf	postinc1,c
  5367  01203A  0E00               	movlw	0
  5368  01203C  6EE6               	movwf	postinc1,c
  5369  01203E  EC7D  F0C0         	call	_lp_filter	;wreg free
  5370                           
  5371                           ;main.c: 380:       lp_filter(0.0, k, -1);
  5372  012042  0EFF               	movlw	255
  5373  012044  6EE6               	movwf	postinc1,c
  5374                           
  5375                           ;stkvar	_k @ sp[(-18)+11]
  5376  012046  0EF9               	movlw	-7
  5377  012048  50E3               	movf	plusw1,w,c
  5378  01204A  6EE6               	movwf	postinc1,c
  5379  01204C  0E00               	movlw	0
  5380  01204E  6EE6               	movwf	postinc1,c
  5381  012050  0E00               	movlw	0
  5382  012052  6EE6               	movwf	postinc1,c
  5383  012054  0E00               	movlw	0
  5384  012056  6EE6               	movwf	postinc1,c
  5385  012058  0E00               	movlw	0
  5386  01205A  6EE6               	movwf	postinc1,c
  5387  01205C  EC7D  F0C0         	call	_lp_filter	;wreg free
  5388  012060                     l13037:
  5389                           
  5390                           ;main.c: 382:      V.calib = 1;
  5391  012060  0E01               	movlw	1
  5392  012062  0101               	movlb	1	; () banked
  5393  012064  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5394                           
  5395                           ; BSR set to: 1
  5396                           ;main.c: 383:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5397  012066  0E02               	movlw	2
  5398  012068  6EE6               	movwf	postinc1,c
  5399  01206A  EC51  F0DA         	call	_get_switch	;wreg free
  5400  01206E  5026               	movf	btemp^0,w,c
  5401  012070  6EE6               	movwf	postinc1,c
  5402  012072  0E00               	movlw	0
  5403  012074  6EE6               	movwf	postinc1,c
  5404                           
  5405                           ;stkvar	_i @ sp[(-19)+13]
  5406  012076  0EFA               	movlw	-6
  5407  012078  50E3               	movf	plusw1,w,c
  5408  01207A  0D04               	mullw	4
  5409  01207C  0EFF               	movlw	low _C
  5410  01207E  24F3               	addwf	243,w,c
  5411  012080  6ED9               	movwf	fsr2l,c
  5412  012082  0E06               	movlw	high _C
  5413  012084  20F4               	addwfc	prodh,w,c
  5414  012086  6EDA               	movwf	fsr2h,c
  5415  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5416  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5419                           
  5420                           ;stkvar	_i @ sp[(-23)+13]
  5421  0120A0  0EF6               	movlw	-10
  5422  0120A2  50E3               	movf	plusw1,w,c
  5423  0120A4  6EE6               	movwf	postinc1,c
  5424  0120A6  ECC5  F0DC         	call	_get_raw_result	;wreg free
  5425  0120AA  0060  F09B  FFE6   	movff	btemp,postinc1
  5426  0120B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5427  0120B6  0E82               	movlw	low STR_19
  5428  0120B8  6EE6               	movwf	postinc1,c
  5429  0120BA  0EFF               	movlw	high STR_19
  5430  0120BC  6EE6               	movwf	postinc1,c
  5431  0120BE  0E00               	movlw	0
  5432  0120C0  6EE6               	movwf	postinc1,c
  5433  0120C2  0E00               	movlw	0
  5434  0120C4  6EE6               	movwf	postinc1,c
  5435  0120C6  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5436  0120CA  0060  F09B  FFE6   	movff	btemp,postinc1
  5437  0120D0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5438  0120D6  0E0C               	movlw	12
  5439  0120D8  6EE6               	movwf	postinc1,c
  5440  0120DA  ECBC  F0CB         	call	_sprintf	;wreg free
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;main.c: 384:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5444  0120DE  0E03               	movlw	3
  5445  0120E0  6EE6               	movwf	postinc1,c
  5446  0120E2  EC51  F0DA         	call	_get_switch	;wreg free
  5447  0120E6  5026               	movf	btemp^0,w,c
  5448  0120E8  6EE6               	movwf	postinc1,c
  5449  0120EA  0E00               	movlw	0
  5450  0120EC  6EE6               	movwf	postinc1,c
  5451                           
  5452                           ;stkvar	_j @ sp[(-19)+12]
  5453  0120EE  0EF9               	movlw	-7
  5454  0120F0  50E3               	movf	plusw1,w,c
  5455  0120F2  0D04               	mullw	4
  5456  0120F4  0EFF               	movlw	low _C
  5457  0120F6  24F3               	addwf	243,w,c
  5458  0120F8  6ED9               	movwf	fsr2l,c
  5459  0120FA  0E06               	movlw	high _C
  5460  0120FC  20F4               	addwfc	prodh,w,c
  5461  0120FE  6EDA               	movwf	fsr2h,c
  5462  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5466                           
  5467                           ;stkvar	_j @ sp[(-23)+12]
  5468  012118  0EF5               	movlw	-11
  5469  01211A  50E3               	movf	plusw1,w,c
  5470  01211C  6EE6               	movwf	postinc1,c
  5471  01211E  ECC5  F0DC         	call	_get_raw_result	;wreg free
  5472  012122  0060  F09B  FFE6   	movff	btemp,postinc1
  5473  012128  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5474  01212E  0E82               	movlw	low STR_19
  5475  012130  6EE6               	movwf	postinc1,c
  5476  012132  0EFF               	movlw	high STR_19
  5477  012134  6EE6               	movwf	postinc1,c
  5478  012136  0E00               	movlw	0
  5479  012138  6EE6               	movwf	postinc1,c
  5480  01213A  0E01               	movlw	1
  5481  01213C  6EE6               	movwf	postinc1,c
  5482  01213E  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5483  012142  0060  F09B  FFE6   	movff	btemp,postinc1
  5484  012148  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5485  01214E  0E0C               	movlw	12
  5486  012150  6EE6               	movwf	postinc1,c
  5487  012152  ECBC  F0CB         	call	_sprintf	;wreg free
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;main.c: 385:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5491                           ;stkvar	_inp_index @ sp[(-17)+14]
  5492  012156  0EFD               	movlw	-3
  5493  012158  50E3               	movf	plusw1,w,c
  5494  01215A  6E30               	movwf	(btemp+10)^0,c
  5495  01215C  6A31               	clrf	(btemp+11)^0,c
  5496  01215E  0E01               	movlw	1
  5497  012160  2630               	addwf	(btemp+10)^0,f,c
  5498  012162  0E00               	movlw	0
  5499  012164  2231               	addwfc	(btemp+11)^0,f,c
  5500  012166  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5501  01216C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5502                           
  5503                           ;stkvar	_k @ sp[(-19)+11]
  5504  012172  0EF8               	movlw	-8
  5505  012174  50E3               	movf	plusw1,w,c
  5506  012176  0D04               	mullw	4
  5507  012178  0EFF               	movlw	low _C
  5508  01217A  24F3               	addwf	243,w,c
  5509  01217C  6ED9               	movwf	fsr2l,c
  5510  01217E  0E06               	movlw	high _C
  5511  012180  20F4               	addwfc	prodh,w,c
  5512  012182  6EDA               	movwf	fsr2h,c
  5513  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5514  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5515  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5516  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5517                           
  5518                           ;stkvar	_k @ sp[(-23)+11]
  5519  01219C  0EF4               	movlw	-12
  5520  01219E  50E3               	movf	plusw1,w,c
  5521  0121A0  6EE6               	movwf	postinc1,c
  5522  0121A2  ECC5  F0DC         	call	_get_raw_result	;wreg free
  5523  0121A6  0060  F09B  FFE6   	movff	btemp,postinc1
  5524  0121AC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5525  0121B2  0E60               	movlw	low STR_21
  5526  0121B4  6EE6               	movwf	postinc1,c
  5527  0121B6  0EFF               	movlw	high STR_21
  5528  0121B8  6EE6               	movwf	postinc1,c
  5529  0121BA  0E00               	movlw	0
  5530  0121BC  6EE6               	movwf	postinc1,c
  5531  0121BE  0E02               	movlw	2
  5532  0121C0  6EE6               	movwf	postinc1,c
  5533  0121C2  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  5534  0121C6  0060  F09B  FFE6   	movff	btemp,postinc1
  5535  0121CC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5536  0121D2  0E0C               	movlw	12
  5537  0121D4  6EE6               	movwf	postinc1,c
  5538  0121D6  ECBC  F0CB         	call	_sprintf	;wreg free
  5539                           
  5540                           ;main.c: 386:      break;
  5541  0121DA  D016               	goto	l13049
  5542  0121DC                     l13047:
  5543  0121DC  0100               	movlb	0	; () banked
  5544  0121DE  51D9               	movf	_H& (0+255),w,b
  5545  0121E0  6E30               	movwf	(btemp+10)^0,c
  5546  0121E2  6A31               	clrf	(btemp+11)^0,c
  5547                           
  5548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5549                           ; Switch size 1, requested type "simple"
  5550                           ; Number of cases is 1, Range of values is 0 to 0
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            4     3 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  0121E4  5031               	movf	(btemp+11)^0,w,c
  5556  0121E6  0A00               	xorlw	0	; case 0
  5557  0121E8  A4D8               	btfss	status,2,c
  5558  0121EA  D00E               	goto	l13049
  5559                           
  5560                           ; BSR set to: 0
  5561                           ; Switch size 1, requested type "simple"
  5562                           ; Number of cases is 4, Range of values is 0 to 3
  5563                           ; switch strategies available:
  5564                           ; Name         Instructions Cycles
  5565                           ; simple_byte           13     7 (average)
  5566                           ;	Chosen strategy is simple_byte
  5567  0121EC  5030               	movf	(btemp+10)^0,w,c
  5568  0121EE  0A00               	xorlw	0	; case 0
  5569  0121F0  B4D8               	btfsc	status,2,c
  5570  0121F2  D4DF               	goto	l1360
  5571  0121F4  0A01               	xorlw	1	; case 1
  5572  0121F6  B4D8               	btfsc	status,2,c
  5573  0121F8  EFD6  F08C         	goto	l1350
  5574  0121FC  0A03               	xorlw	3	; case 2
  5575  0121FE  B4D8               	btfsc	status,2,c
  5576  012200  D5ED               	goto	l1361
  5577  012202  0A01               	xorlw	1	; case 3
  5578  012204  B4D8               	btfsc	status,2,c
  5579  012206  D6FB               	goto	l13033
  5580  012208                     l13049:
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;main.c: 390:     clear_hid_pflags(&H);
  5584  012208  0ED9               	movlw	_H& (0+255)
  5585  01220A  6EE6               	movwf	postinc1,c
  5586  01220C  ECFD  F0DB         	call	_clear_hid_pflags	;wreg free
  5587                           
  5588                           ;main.c: 392:    StartTimer(TMR_DISPLAY, 250);
  5589  012210  0EFA               	movlw	250
  5590  012212  6EE6               	movwf	postinc1,c
  5591  012214  0E00               	movlw	0
  5592  012216  6EE6               	movwf	postinc1,c
  5593  012218  0E0A               	movlw	10
  5594  01221A  6EE6               	movwf	postinc1,c
  5595  01221C  EC44  F0D8         	call	_StartTimer	;wreg free
  5596                           
  5597                           ;main.c: 393:    V.enter = check_enter_button(&H);
  5598  012220  0ED9               	movlw	_H& (0+255)
  5599  012222  6EE6               	movwf	postinc1,c
  5600  012224  EC64  F0D8         	call	_check_enter_button	;wreg free
  5601  012228  5026               	movf	btemp^0,w,c
  5602  01222A  0101               	movlb	1	; () banked
  5603  01222C  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5604                           
  5605                           ; BSR set to: 1
  5606                           ;main.c: 394:    if (V.enter && (H.hid_display != HID_AUX)) {
  5607  01222E  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5608  012230  B4D8               	btfsc	status,2,c
  5609  012232  D013               	goto	l13063
  5610                           
  5611                           ; BSR set to: 1
  5612  012234  0E03               	movlw	3
  5613  012236  0100               	movlb	0	; () banked
  5614  012238  19D9               	xorwf	_H& (0+255),w,b
  5615  01223A  B4D8               	btfsc	status,2,c
  5616  01223C  D00E               	goto	l13063
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;main.c: 395:     V.enter = 0;
  5620  01223E  0101               	movlb	1	; () banked
  5621  012240  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;main.c: 396:     V.screen = ~V.screen;
  5625  012242  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5626  012244  D002               	goto	u12580
  5627  012246  0E01               	movlw	1
  5628  012248  D001               	goto	u12586
  5629  01224A                     u12580:
  5630  01224A  0E00               	movlw	0
  5631  01224C                     u12586:
  5632  01224C  0AFF               	xorlw	255
  5633  01224E  6E31               	movwf	(btemp+11)^0,c
  5634  012250  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5635  012252  1831               	xorwf	(btemp+11)^0,w,c
  5636  012254  0BFE               	andlw	-2
  5637  012256  1831               	xorwf	(btemp+11)^0,w,c
  5638  012258  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5639  01225A                     l13063:
  5640                           
  5641                           ;main.c: 398:    set_vterm(V.screen);
  5642  01225A  0101               	movlb	1	; () banked
  5643  01225C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5644  01225E  D002               	goto	u12590
  5645  012260  0E01               	movlw	1
  5646  012262  D001               	goto	u12596
  5647  012264                     u12590:
  5648  012264  0E00               	movlw	0
  5649  012266                     u12596:
  5650  012266  6EE6               	movwf	postinc1,c
  5651  012268  ECA7  F0DC         	call	_set_vterm	;wreg free
  5652                           
  5653                           ;main.c: 399:    update_lcd(V.screen);
  5654  01226C  0101               	movlb	1	; () banked
  5655  01226E  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5656  012270  D002               	goto	u12600
  5657  012272  0E01               	movlw	1
  5658  012274  D001               	goto	u12606
  5659  012276                     u12600:
  5660  012276  0E00               	movlw	0
  5661  012278                     u12606:
  5662  012278  6EE6               	movwf	postinc1,c
  5663  01227A  EC34  F0CB         	call	_update_lcd	;wreg free
  5664  01227E                     l13067:
  5665                           
  5666                           ;main.c: 405:   check_help(V.flipper);
  5667  01227E  0101               	movlb	1	; () banked
  5668  012280  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5669  012282  6EE6               	movwf	postinc1,c
  5670  012284  EC72  F0BE         	call	_check_help	;wreg free
  5671                           
  5672                           ;main.c: 407:   if (V.enter) {
  5673  012288  0101               	movlb	1	; () banked
  5674  01228A  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5675  01228C  B4D8               	btfsc	status,2,c
  5676  01228E  D062               	goto	l1366
  5677                           
  5678                           ; BSR set to: 1
  5679                           ;main.c: 408:    V.enter = 0;
  5680  012290  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5681                           
  5682                           ;main.c: 409:    V.calib = 0;
  5683  012292  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5684                           
  5685                           ; BSR set to: 1
  5686                           ;main.c: 410:    inp_index += 3;
  5687                           ;stkvar	_inp_index @ sp[(-17)+14]
  5688  012294  0EFD               	movlw	-3
  5689  012296  006F FF8C  F026    	movff	plusw1,btemp
  5690  01229C  0E03               	movlw	3
  5691  01229E  2626               	addwf	btemp^0,f,c
  5692  0122A0  0EFD               	movlw	-3
  5693  0122A2  0060  F09B  FFE3   	movff	btemp,plusw1
  5694                           
  5695                           ;main.c: 411:    if (inp_index > 9)
  5696                           ;stkvar	_inp_index @ sp[(-17)+14]
  5697  0122A8  0EFD               	movlw	-3
  5698  0122AA  006F FF8C  F026    	movff	plusw1,btemp
  5699  0122B0  0E09               	movlw	9
  5700  0122B2  6426               	cpfsgt	btemp^0,c
  5701  0122B4  D03A               	goto	l13095
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;main.c: 412:     inp_index = 0;
  5705                           ;stkvar	_inp_index @ sp[(-17)+14]
  5706  0122B6  0EFD               	movlw	-3
  5707  0122B8  6AE3               	clrf	plusw1,c
  5708  0122BA  D037               	goto	l13095
  5709  0122BC                     l13077:
  5710                           
  5711                           ; BSR set to: 1
  5712                           ;main.c: 415:     i = C_BATT;
  5713                           ;stkvar	_i @ sp[(-17)+13]
  5714  0122BC  0EFC               	movlw	-4
  5715  0122BE  6AE3               	clrf	plusw1,c
  5716                           
  5717                           ; BSR set to: 1
  5718                           ;main.c: 416:     j = C_PV;
  5719                           ;stkvar	_j @ sp[(-17)+12]
  5720  0122C0  0EFB               	movlw	-5
  5721  0122C2  6AE3               	clrf	plusw1,c
  5722  0122C4  2AE3               	incf	plusw1,f,c
  5723                           
  5724                           ; BSR set to: 1
  5725                           ;main.c: 417:     k = V_CC;
  5726                           ;stkvar	_k @ sp[(-17)+11]
  5727  0122C6  0EFA               	movlw	-6
  5728  0122C8  6AE3               	clrf	plusw1,c
  5729  0122CA  82E3               	bsf	plusw1,1,c
  5730                           
  5731                           ;main.c: 418:     break;
  5732  0122CC  D043               	goto	l1366
  5733  0122CE                     l13083:
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;main.c: 420:     i = V_BAT;
  5737                           ;stkvar	_i @ sp[(-17)+13]
  5738  0122CE  0EFC               	movlw	-4
  5739  0122D0  6AE3               	clrf	plusw1,c
  5740  0122D2  84E3               	bsf	plusw1,2,c
  5741                           
  5742                           ;main.c: 421:     j = V_PV;
  5743                           ;stkvar	_j @ sp[(-17)+12]
  5744  0122D4  0EFB               	movlw	-5
  5745  0122D6  6AE3               	clrf	plusw1,c
  5746  0122D8  80E3               	bsf	plusw1,0,c
  5747  0122DA  84E3               	bsf	plusw1,2,c	;indir
  5748                           
  5749                           ;main.c: 422:     k = V_CBUS;
  5750                           ;stkvar	_k @ sp[(-17)+11]
  5751  0122DC  0EFA               	movlw	-6
  5752  0122DE  6AE3               	clrf	plusw1,c
  5753  0122E0  82E3               	bsf	plusw1,1,c
  5754  0122E2  84E3               	bsf	plusw1,2,c	;indir
  5755                           
  5756                           ;main.c: 423:     break;
  5757  0122E4  D037               	goto	l1366
  5758  0122E6                     l13085:
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;main.c: 425:     i = V_BBAT;
  5762                           ;stkvar	_i @ sp[(-17)+13]
  5763  0122E6  0EFC               	movlw	-4
  5764  0122E8  6AE3               	clrf	plusw1,c
  5765  0122EA  82E3               	bsf	plusw1,1,c
  5766  0122EC  86E3               	bsf	plusw1,3,c	;indir
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;main.c: 426:     j = V_TEMP;
  5770  0122EE  0E0B               	movlw	11
  5771  0122F0  6E31               	movwf	(btemp+11)^0,c
  5772                           
  5773                           ;stkvar	_j @ sp[(-17)+12]
  5774  0122F2  0EFB               	movlw	-5
  5775  0122F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;main.c: 427:     k = V_INVERTER;
  5779                           ;stkvar	_k @ sp[(-17)+11]
  5780  0122FA  0EFA               	movlw	-6
  5781  0122FC  6AE3               	clrf	plusw1,c
  5782  0122FE  84E3               	bsf	plusw1,2,c
  5783  012300  86E3               	bsf	plusw1,3,c	;indir
  5784                           
  5785                           ;main.c: 428:     break;
  5786  012302  D028               	goto	l1366
  5787  012304                     l13091:
  5788                           
  5789                           ; BSR set to: 1
  5790                           ;main.c: 430:     i = V_LIGHT_SENSOR;
  5791  012304  0E0D               	movlw	13
  5792  012306  6E31               	movwf	(btemp+11)^0,c
  5793                           
  5794                           ;stkvar	_i @ sp[(-17)+13]
  5795  012308  0EFC               	movlw	-4
  5796  01230A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5797                           
  5798                           ;main.c: 431:     j = V_LIGHT_SENSOR;
  5799  012310  0E0D               	movlw	13
  5800  012312  6E31               	movwf	(btemp+11)^0,c
  5801                           
  5802                           ;stkvar	_j @ sp[(-17)+12]
  5803  012314  0EFB               	movlw	-5
  5804  012316  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5805                           
  5806                           ;main.c: 432:     k = V_LIGHT_SENSOR;
  5807  01231C  0E0D               	movlw	13
  5808  01231E  6E31               	movwf	(btemp+11)^0,c
  5809                           
  5810                           ;stkvar	_k @ sp[(-17)+11]
  5811  012320  0EFA               	movlw	-6
  5812  012322  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5813                           
  5814                           ;main.c: 433:     break;
  5815  012328  D015               	goto	l1366
  5816  01232A                     l13095:
  5817                           
  5818                           ; BSR set to: 1
  5819                           ;stkvar	_inp_index @ sp[(-17)+14]
  5820  01232A  0EFD               	movlw	-3
  5821  01232C  50E3               	movf	plusw1,w,c
  5822  01232E  6E30               	movwf	(btemp+10)^0,c
  5823  012330  6A31               	clrf	(btemp+11)^0,c
  5824                           
  5825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5826                           ; Switch size 1, requested type "simple"
  5827                           ; Number of cases is 1, Range of values is 0 to 0
  5828                           ; switch strategies available:
  5829                           ; Name         Instructions Cycles
  5830                           ; simple_byte            4     3 (average)
  5831                           ;	Chosen strategy is simple_byte
  5832  012332  5031               	movf	(btemp+11)^0,w,c
  5833  012334  0A00               	xorlw	0	; case 0
  5834  012336  A4D8               	btfss	status,2,c
  5835  012338  D00D               	goto	l1366
  5836                           
  5837                           ; BSR set to: 1
  5838                           ; Switch size 1, requested type "simple"
  5839                           ; Number of cases is 4, Range of values is 0 to 9
  5840                           ; switch strategies available:
  5841                           ; Name         Instructions Cycles
  5842                           ; simple_byte           13     7 (average)
  5843                           ;	Chosen strategy is simple_byte
  5844  01233A  5030               	movf	(btemp+10)^0,w,c
  5845  01233C  0A00               	xorlw	0	; case 0
  5846  01233E  B4D8               	btfsc	status,2,c
  5847  012340  D7BD               	goto	l13077
  5848  012342  0A03               	xorlw	3	; case 3
  5849  012344  B4D8               	btfsc	status,2,c
  5850  012346  D7C3               	goto	l13083
  5851  012348  0A05               	xorlw	5	; case 6
  5852  01234A  B4D8               	btfsc	status,2,c
  5853  01234C  D7CC               	goto	l13085
  5854  01234E  0A0F               	xorlw	15	; case 9
  5855  012350  B4D8               	btfsc	status,2,c
  5856  012352  D7D8               	goto	l13091
  5857  012354                     l1366:
  5858                           
  5859                           ; BSR set to: 1
  5860                           ;main.c: 442:   if (V.set_sequ) {
  5861  012354  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  5862  012356  EF8A  F08C         	goto	l12977
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;main.c: 443:    if (TimerDone(TMR_INFO)) {
  5866  01235A  0E07               	movlw	7
  5867  01235C  6EE6               	movwf	postinc1,c
  5868  01235E  ECE5  F0DA         	call	_TimerDone	;wreg free
  5869  012362  5026               	movf	btemp^0,w,c
  5870  012364  B4D8               	btfsc	status,2,c
  5871  012366  D00C               	goto	l13105
  5872                           
  5873                           ;main.c: 444:     V.set_sequ = 0;
  5874  012368  0101               	movlb	1	; () banked
  5875  01236A  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  5876                           
  5877                           ; BSR set to: 1
  5878                           ;main.c: 445:     set_vterm(0);
  5879  01236C  0E00               	movlw	0
  5880  01236E  6EE6               	movwf	postinc1,c
  5881  012370  ECA7  F0DC         	call	_set_vterm	;wreg free
  5882                           
  5883                           ;main.c: 446:     update_lcd(0);
  5884  012374  0E00               	movlw	0
  5885  012376  6EE6               	movwf	postinc1,c
  5886  012378  EC34  F0CB         	call	_update_lcd	;wreg free
  5887                           
  5888                           ;main.c: 447:    } else {
  5889  01237C  EF8A  F08C         	goto	l12977
  5890  012380                     l13105:
  5891                           
  5892                           ;main.c: 448:     set_vterm(2);
  5893  012380  0E02               	movlw	2
  5894  012382  6EE6               	movwf	postinc1,c
  5895  012384  ECA7  F0DC         	call	_set_vterm	;wreg free
  5896                           
  5897                           ;main.c: 449:     update_lcd(2);
  5898  012388  0E02               	movlw	2
  5899  01238A  6EE6               	movwf	postinc1,c
  5900  01238C  EC34  F0CB         	call	_update_lcd	;wreg free
  5901  012390  EF8A  F08C         	goto	l12977
  5902  012394                     __end_of_main:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function _static_soc *****************
  5906 ;; Defined at:
  5907 ;;		line 117 in file "mbmc.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1  [STACK] void 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr2l, fsr2h
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;Total ram usage:        0 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   15
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_main
  5932 ;; This function uses a reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text1
  5936  01B188                     __ptext1:
  5937                           	opt callstack 0
  5938  01B188                     _static_soc:
  5939                           	opt callstack 15
  5940                           
  5941                           ;mbmc.c: 119:  C.runtime = 120;
  5942                           
  5943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5944                           ;incstack = 0
  5945  01B188  0E78               	movlw	120
  5946  01B18A  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
  5947  01B190  0E00               	movlw	0
  5948  01B192  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
  5949                           
  5950                           ;mbmc.c: 120:  C.soc = 100;
  5951  01B198  0E64               	movlw	100
  5952  01B19A  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  5953  01B1A0  0E00               	movlw	0
  5954  01B1A2  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  5955                           
  5956                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5957  01B1A8  EE21  F38B         	lfsr	2,_C+140	;volatile
  5958  01B1AC  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5959  01B1B2  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5960  01B1B8  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5961  01B1BE  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5962                           
  5963                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5964  01B1C4  0012               	return		;funcret
  5965  01B1C6                     __end_of_static_soc:
  5966                           	opt callstack 0
  5967                           
  5968 ;; *************** function _start_switch_handler *****************
  5969 ;; Defined at:
  5970 ;;		line 121 in file "dio.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1  [STACK] void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5979 ;; Tracked objects:
  5980 ;;		On entry : 1/0
  5981 ;;		On exit  : 3F/39
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:   16
  5991 ;; This function calls:
  5992 ;;		_INT1_SetInterruptHandler
  5993 ;; This function is called by:
  5994 ;;		_main
  5995 ;; This function uses a reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text2
  5999  01B8F0                     __ptext2:
  6000                           	opt callstack 0
  6001  01B8F0                     _start_switch_handler:
  6002                           	opt callstack 14
  6003                           
  6004                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  6005                           
  6006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6007                           ;incstack = 0
  6008  01B8F0  0139               	movlb	57	; () banked
  6009  01B8F2  9195               	bcf	149,0,b	;volatile
  6010                           
  6011                           ; BSR set to: 57
  6012                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  6013  01B8F4  0E84               	movlw	low _switch_handler
  6014  01B8F6  6EE6               	movwf	postinc1,c
  6015  01B8F8  0E8F               	movlw	high _switch_handler
  6016  01B8FA  6EE6               	movwf	postinc1,c
  6017  01B8FC  0E01               	movlw	low (_switch_handler shr (0+16))
  6018  01B8FE  6EE6               	movwf	postinc1,c
  6019  01B900  EC71  F0DB         	call	_INT1_SetInterruptHandler	;wreg free
  6020                           
  6021                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  6022  01B904  0E02               	movlw	2
  6023  01B906  0101               	movlb	1	; () banked
  6024  01B908  6FE9               	movwf	(_S+35)& (0+255),b	;volatile
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  6028  01B90A  0139               	movlb	57	; () banked
  6029  01B90C  8195               	bsf	149,0,b	;volatile
  6030                           
  6031                           ; BSR set to: 57
  6032                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6033  01B90E  0012               	return		;funcret
  6034  01B910                     __end_of_start_switch_handler:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function _srand *****************
  6038 ;; Defined at:
  6039 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  s               2  [STACK] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1  [STACK] void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 3F/1
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:   15
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_main
  6064 ;; This function uses a reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text3
  6068  01B31C                     __ptext3:
  6069                           	opt callstack 0
  6070  01B31C                     _srand:
  6071                           	opt callstack 15
  6072                           
  6073                           ;stkvar	_s @ sp[(0)+-2]
  6074                           
  6075                           ; BSR set to: 57
  6076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6077                           ;incstack = 0
  6078  01B31C  0EFE               	movlw	-2
  6079  01B31E  50E3               	movf	plusw1,w,c
  6080  01B320  0FFF               	addlw	255
  6081  01B322  6E30               	movwf	(btemp+10)^0,c
  6082  01B324  0EFF               	movlw	-1
  6083  01B326  006F FF8C  F031    	movff	plusw1,btemp+11
  6084  01B32C  0EFF               	movlw	255
  6085  01B32E  2231               	addwfc	(btemp+11)^0,f,c
  6086  01B330  0060  F0C0  F1F7   	movff	btemp+10,_seed
  6087  01B336  0060  F0C4  F1F8   	movff	btemp+11,_seed+1
  6088  01B33C  0101               	movlb	1	; () banked
  6089  01B33E  6BF9               	clrf	(_seed+2)& (0+255),b
  6090  01B340  6BFA               	clrf	(_seed+3)& (0+255),b
  6091  01B342  6BFB               	clrf	(_seed+4)& (0+255),b
  6092  01B344  6BFC               	clrf	(_seed+5)& (0+255),b
  6093  01B346  6BFD               	clrf	(_seed+6)& (0+255),b
  6094  01B348  6BFE               	clrf	(_seed+7)& (0+255),b
  6095                           
  6096                           ; BSR set to: 1
  6097                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6098  01B34A  52E5               	movf	postdec1,f,c
  6099  01B34C  52E5               	movf	postdec1,f,c
  6100  01B34E  0012               	return		;funcret
  6101  01B350                     __end_of_srand:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _spinners *****************
  6105 ;; Defined at:
  6106 ;;		line 145 in file "mbmc.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  shape           1  [STACK] unsigned char 
  6109 ;;  reset           1  [STACK] unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  c               1  [STACK] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1  [STACK] unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:   16
  6128 ;; This function calls:
  6129 ;;		_strlen
  6130 ;; This function is called by:
  6131 ;;		_main
  6132 ;; This function uses a reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text4
  6136  019A6E                     __ptext4:
  6137                           	opt callstack 0
  6138  019A6E                     _spinners:
  6139                           	opt callstack 0
  6140                           
  6141                           ; BSR set to: 1
  6142                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6143  019A6E  52E6               	movf	postinc1,f,c
  6144                           
  6145                           ;mbmc.c: 145: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 146: {;mbmc.c: 147:  s
      +                          tatic uint8_t s[6];;mbmc.c: 148:  char c;;mbmc.c: 150:  if (shape > (6 - 1))
  6146                           ;stkvar	_shape @ sp[(-1)+-1]
  6147                           
  6148                           ;incstack = 0
  6149  019A70  0EFE               	movlw	-2
  6150  019A72  006F FF8C  F026    	movff	plusw1,btemp
  6151  019A78  0E05               	movlw	5
  6152  019A7A  6426               	cpfsgt	btemp^0,c
  6153  019A7C  D002               	goto	l1882
  6154                           
  6155                           ;mbmc.c: 151:   shape = 0;
  6156                           ;stkvar	_shape @ sp[(-1)+-1]
  6157  019A7E  0EFE               	movlw	-2
  6158  019A80  6AE3               	clrf	plusw1,c
  6159  019A82                     l1882:
  6160                           
  6161                           ;mbmc.c: 152:  if (reset)
  6162                           ;stkvar	_reset @ sp[(-1)+-2]
  6163  019A82  0EFD               	movlw	-3
  6164  019A84  50E3               	movf	plusw1,w,c
  6165  019A86  B4D8               	btfsc	status,2,c
  6166  019A88  D00A               	goto	l10713
  6167                           
  6168                           ;mbmc.c: 153:   s[shape] = 0;
  6169                           ;stkvar	_shape @ sp[(-1)+-1]
  6170  019A8A  0EFE               	movlw	-2
  6171  019A8C  006F FF8C  F031    	movff	plusw1,btemp+11
  6172  019A92  5031               	movf	(btemp+11)^0,w,c
  6173  019A94  0F6C               	addlw	low spinners@s
  6174  019A96  6ED9               	movwf	fsr2l,c
  6175  019A98  6ADA               	clrf	fsr2h,c
  6176  019A9A  0E00               	movlw	0
  6177  019A9C  6EDF               	movwf	indf2,c
  6178  019A9E                     l10713:
  6179                           
  6180                           ;mbmc.c: 154:  c = spin[shape][s[shape]];
  6181                           ;stkvar	_shape @ sp[(-1)+-1]
  6182  019A9E  0EFE               	movlw	-2
  6183  019AA0  50E3               	movf	plusw1,w,c
  6184  019AA2  0D14               	mullw	20
  6185  019AA4  0EC3               	movlw	low _spin
  6186  019AA6  6E30               	movwf	(btemp+10)^0,c
  6187  019AA8  0EFB               	movlw	high _spin
  6188  019AAA  6E31               	movwf	(btemp+11)^0,c
  6189  019AAC  50F3               	movf	243,w,c
  6190  019AAE  2630               	addwf	(btemp+10)^0,f,c
  6191  019AB0  50F4               	movf	244,w,c
  6192  019AB2  2231               	addwfc	(btemp+11)^0,f,c
  6193                           
  6194                           ;stkvar	_shape @ sp[(-1)+-1]
  6195  019AB4  0EFE               	movlw	-2
  6196  019AB6  006F FF8C  F02F    	movff	plusw1,btemp+9
  6197  019ABC  502F               	movf	(btemp+9)^0,w,c
  6198  019ABE  0F6C               	addlw	low spinners@s
  6199  019AC0  6ED9               	movwf	fsr2l,c
  6200  019AC2  6ADA               	clrf	fsr2h,c
  6201  019AC4  50DF               	movf	indf2,w,c
  6202  019AC6  2630               	addwf	(btemp+10)^0,f,c
  6203  019AC8  0E00               	movlw	0
  6204  019ACA  2231               	addwfc	(btemp+11)^0,f,c
  6205  019ACC  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
  6206  019AD2  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
  6207  019AD8                     	if	0	;tblptru may be non-zero
  6208  019AD8                     	endif
  6209  019AD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6210  019AD8  0E00               	movlw	low (__mediumconst shr (0+16))
  6211  019ADA  6EF8               	movwf	tblptru,c
  6212  019ADC                     	endif
  6213                           
  6214                           ;stkvar	_c @ sp[(-1)+0]
  6215  019ADC  0008               	tblrd		*
  6216  019ADE  0EFF               	movlw	-1
  6217  019AE0  006F FFD7 FFE3     	movff	tablat,plusw1
  6218                           
  6219                           ;mbmc.c: 155:  if (++s[shape] >= strlen(spin[shape]))
  6220                           ;stkvar	_shape @ sp[(-1)+-1]
  6221  019AE6  0EFE               	movlw	-2
  6222  019AE8  50E3               	movf	plusw1,w,c
  6223  019AEA  0D14               	mullw	20
  6224  019AEC  0EC3               	movlw	low _spin
  6225  019AEE  6E30               	movwf	(btemp+10)^0,c
  6226  019AF0  0EFB               	movlw	high _spin
  6227  019AF2  6E31               	movwf	(btemp+11)^0,c
  6228  019AF4  50F3               	movf	243,w,c
  6229  019AF6  2630               	addwf	(btemp+10)^0,f,c
  6230  019AF8  50F4               	movf	244,w,c
  6231  019AFA  2231               	addwfc	(btemp+11)^0,f,c
  6232  019AFC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6233  019B02  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6234  019B08  ECBD  F0D1         	call	_strlen	;wreg free
  6235                           
  6236                           ;stkvar	_shape @ sp[(-1)+-1]
  6237  019B0C  0EFE               	movlw	-2
  6238  019B0E  006F FF8C  F031    	movff	plusw1,btemp+11
  6239  019B14  5031               	movf	(btemp+11)^0,w,c
  6240  019B16  0F6C               	addlw	low spinners@s
  6241  019B18  6ED9               	movwf	fsr2l,c
  6242  019B1A  6ADA               	clrf	fsr2h,c
  6243  019B1C  2ADF               	incf	indf2,f,c
  6244  019B1E  50DF               	movf	indf2,w,c
  6245  019B20  6E30               	movwf	(btemp+10)^0,c
  6246  019B22  6A31               	clrf	(btemp+11)^0,c
  6247  019B24  5026               	movf	btemp^0,w,c
  6248  019B26  5C30               	subwf	(btemp+10)^0,w,c
  6249  019B28  5027               	movf	(btemp+1)^0,w,c
  6250  019B2A  5831               	subwfb	(btemp+11)^0,w,c
  6251  019B2C  A0D8               	btfss	status,0,c
  6252  019B2E  D00A               	goto	l10719
  6253                           
  6254                           ;mbmc.c: 156:   s[shape] = 0;
  6255                           ;stkvar	_shape @ sp[(-1)+-1]
  6256  019B30  0EFE               	movlw	-2
  6257  019B32  006F FF8C  F031    	movff	plusw1,btemp+11
  6258  019B38  5031               	movf	(btemp+11)^0,w,c
  6259  019B3A  0F6C               	addlw	low spinners@s
  6260  019B3C  6ED9               	movwf	fsr2l,c
  6261  019B3E  6ADA               	clrf	fsr2h,c
  6262  019B40  0E00               	movlw	0
  6263  019B42  6EDF               	movwf	indf2,c
  6264  019B44                     l10719:
  6265                           
  6266                           ;mbmc.c: 157:  return c;
  6267                           ;stkvar	_c @ sp[(-1)+0]
  6268  019B44  0EFF               	movlw	-1
  6269  019B46  006F FF8C  F026    	movff	plusw1,btemp
  6270                           
  6271                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6272  019B4C  52E5               	movf	postdec1,f,c
  6273  019B4E  52E5               	movf	postdec1,f,c
  6274  019B50  52E5               	movf	postdec1,f,c
  6275  019B52  0012               	return		;funcret
  6276  019B54                     __end_of_spinners:
  6277                           	opt callstack 0
  6278                           
  6279 ;; *************** function _init_port_dma *****************
  6280 ;; Defined at:
  6281 ;;		line 90 in file "eadog.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1  [STACK] void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/1
  6292 ;;		On exit  : 3F/3B
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6299 ;;Total ram usage:        0 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:   15
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_main
  6306 ;; This function uses a reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text5
  6310  01B384                     __ptext5:
  6311                           	opt callstack 0
  6312  01B384                     _init_port_dma:
  6313                           	opt callstack 15
  6314                           
  6315                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6316                           
  6317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6318                           ;incstack = 0
  6319  01B384  0E3F               	movlw	-193
  6320  01B386  013B               	movlb	59	; () banked
  6321  01B388  17DD               	andwf	221,f,b	;volatile
  6322                           
  6323                           ; BSR set to: 59
  6324                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6325  01B38A  9BDD               	bcf	221,5,b	;volatile
  6326                           
  6327                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6328  01B38C  51DD               	movf	221,w,b	;volatile
  6329  01B38E  0BF9               	andlw	-7
  6330  01B390  0902               	iorlw	2
  6331  01B392  6FDD               	movwf	221,b	;volatile
  6332                           
  6333                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6334  01B394  0EE7               	movlw	-25
  6335  01B396  17DD               	andwf	221,f,b	;volatile
  6336                           
  6337                           ; BSR set to: 59
  6338                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6339  01B398  81DD               	bsf	221,0,b	;volatile
  6340                           
  6341                           ; BSR set to: 59
  6342                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6343  01B39A  9DDC               	bcf	220,6,b	;volatile
  6344                           
  6345                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6346  01B39C  0E3D               	movlw	61
  6347  01B39E  6FD1               	movwf	209,b	;volatile
  6348  01B3A0  0EEA               	movlw	234
  6349  01B3A2  6FD0               	movwf	208,b	;volatile
  6350                           
  6351                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6352  01B3A4  0EFF               	movlw	low _port_data
  6353  01B3A6  6FD9               	movwf	217,b	;volatile
  6354  01B3A8  0E04               	movlw	high _port_data
  6355  01B3AA  6FDA               	movwf	218,b	;volatile
  6356  01B3AC  0E00               	movlw	low (_port_data shr (0+16))
  6357  01B3AE  6FDB               	movwf	219,b	;volatile
  6358                           
  6359                           ; BSR set to: 59
  6360                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6361  01B3B0  9BDC               	bcf	220,5,b	;volatile
  6362                           
  6363                           ; BSR set to: 59
  6364                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6365  01B3B2  0012               	return		;funcret
  6366  01B3B4                     __end_of_init_port_dma:
  6367                           	opt callstack 0
  6368                           
  6369 ;; *************** function _init_display *****************
  6370 ;; Defined at:
  6371 ;;		line 38 in file "eadog.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1  [STACK] void 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6380 ;; Tracked objects:
  6381 ;;		On entry : 3F/3B
  6382 ;;		On exit  : 3F/3D
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:   17
  6392 ;; This function calls:
  6393 ;;		_ringBufS_init
  6394 ;;		_send_lcd_cmd
  6395 ;;		_send_lcd_cmd_long
  6396 ;;		_wdtdelay
  6397 ;; This function is called by:
  6398 ;;		_main
  6399 ;; This function uses a reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text6
  6403  019984                     __ptext6:
  6404                           	opt callstack 0
  6405  019984                     _init_display:
  6406                           	opt callstack 13
  6407                           
  6408                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6409                           
  6410                           ; BSR set to: 59
  6411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6412                           ;incstack = 0
  6413  019984  0E43               	movlw	low _ring_buf1
  6414  019986  0100               	movlb	0	; () banked
  6415  019988  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6416  01998A  0E03               	movlw	high _ring_buf1
  6417  01998C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6418                           
  6419                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6420  01998E  0E00               	movlw	low _ring_buf2
  6421  019990  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6422  019992  0E03               	movlw	high _ring_buf2
  6423  019994  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6427  019996  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6428  01999C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6429  0199A2  ECD1  F0DA         	call	_ringBufS_init	;wreg free
  6430                           
  6431                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6432  0199A6  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6433  0199AC  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6434  0199B2  ECD1  F0DA         	call	_ringBufS_init	;wreg free
  6435                           
  6436                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6437  0199B6  84BE               	bsf	190,2,c	;volatile
  6438  0199B8  84BC               	bsf	188,2,c	;volatile
  6439                           
  6440                           ;eadog.c: 59:  wdtdelay(350000);
  6441  0199BA  0E30               	movlw	48
  6442  0199BC  6EE6               	movwf	postinc1,c
  6443  0199BE  0E57               	movlw	87
  6444  0199C0  6EE6               	movwf	postinc1,c
  6445  0199C2  0E05               	movlw	5
  6446  0199C4  6EE6               	movwf	postinc1,c
  6447  0199C6  0E00               	movlw	0
  6448  0199C8  6EE6               	movwf	postinc1,c
  6449  0199CA  EC0D  F0D6         	call	_wdtdelay	;wreg free
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6453  0199CE  0E39               	movlw	57
  6454  0199D0  6EE6               	movwf	postinc1,c
  6455  0199D2  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6459  0199D6  0E1D               	movlw	29
  6460  0199D8  6EE6               	movwf	postinc1,c
  6461  0199DA  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6465  0199DE  0E50               	movlw	80
  6466  0199E0  6EE6               	movwf	postinc1,c
  6467  0199E2  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6471  0199E6  0E6C               	movlw	108
  6472  0199E8  6EE6               	movwf	postinc1,c
  6473  0199EA  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6477  0199EE  0E76               	movlw	118
  6478  0199F0  6EE6               	movwf	postinc1,c
  6479  0199F2  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6483  0199F6  0E38               	movlw	56
  6484  0199F8  6EE6               	movwf	postinc1,c
  6485  0199FA  ECA9  F0DA         	call	_send_lcd_cmd_long	;wreg free
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6489  0199FE  0E0F               	movlw	15
  6490  019A00  6EE6               	movwf	postinc1,c
  6491  019A02  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6495  019A06  0E01               	movlw	1
  6496  019A08  6EE6               	movwf	postinc1,c
  6497  019A0A  ECA9  F0DA         	call	_send_lcd_cmd_long	;wreg free
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6501  019A0E  0E02               	movlw	2
  6502  019A10  6EE6               	movwf	postinc1,c
  6503  019A12  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6507  019A16  0E06               	movlw	6
  6508  019A18  6EE6               	movwf	postinc1,c
  6509  019A1A  ECBD  F0DA         	call	_send_lcd_cmd	;wreg free
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;eadog.c: 70:  wdtdelay(30);
  6513  019A1E  0E1E               	movlw	30
  6514  019A20  6EE6               	movwf	postinc1,c
  6515  019A22  0E00               	movlw	0
  6516  019A24  6EE6               	movwf	postinc1,c
  6517  019A26  0E00               	movlw	0
  6518  019A28  6EE6               	movwf	postinc1,c
  6519  019A2A  0E00               	movlw	0
  6520  019A2C  6EE6               	movwf	postinc1,c
  6521  019A2E  EC0D  F0D6         	call	_wdtdelay	;wreg free
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6525  019A32  0E02               	movlw	2
  6526  019A34  013D               	movlb	61	; () banked
  6527  019A36  6F16               	movwf	22,b	;volatile
  6528                           
  6529                           ; BSR set to: 61
  6530                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6531  019A38  0E40               	movlw	64
  6532  019A3A  6F15               	movwf	21,b	;volatile
  6533                           
  6534                           ; BSR set to: 61
  6535                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6536  019A3C  0E83               	movlw	131
  6537  019A3E  6F14               	movwf	20,b	;volatile
  6538                           
  6539                           ; BSR set to: 61
  6540                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6541  019A40  931A               	bcf	26,1,b	;volatile
  6542                           
  6543                           ; BSR set to: 61
  6544                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6545  019A42  0E3F               	movlw	-193
  6546  019A44  013B               	movlb	59	; () banked
  6547  019A46  17FD               	andwf	253,f,b	;volatile
  6548                           
  6549                           ; BSR set to: 59
  6550                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6551  019A48  9BFD               	bcf	253,5,b	;volatile
  6552                           
  6553                           ; BSR set to: 59
  6554                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6555  019A4A  51FD               	movf	253,w,b	;volatile
  6556  019A4C  0BF9               	andlw	-7
  6557  019A4E  0902               	iorlw	2
  6558  019A50  6FFD               	movwf	253,b	;volatile
  6559                           
  6560                           ; BSR set to: 59
  6561                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6562  019A52  0EE7               	movlw	-25
  6563  019A54  17FD               	andwf	253,f,b	;volatile
  6564                           
  6565                           ; BSR set to: 59
  6566                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6567  019A56  81FD               	bsf	253,0,b	;volatile
  6568                           
  6569                           ; BSR set to: 59
  6570                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6571  019A58  0E43               	movlw	low _ring_buf1
  6572  019A5A  6FF9               	movwf	249,b	;volatile
  6573  019A5C  0E03               	movlw	high _ring_buf1
  6574  019A5E  6FFA               	movwf	250,b	;volatile
  6575  019A60  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6576  019A62  6FFB               	movwf	251,b	;volatile
  6577                           
  6578                           ; BSR set to: 59
  6579                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6580  019A64  9BFC               	bcf	252,5,b	;volatile
  6581                           
  6582                           ; BSR set to: 59
  6583                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6584  019A66  013D               	movlb	61	; () banked
  6585  019A68  831A               	bsf	26,1,b	;volatile
  6586                           
  6587                           ; BSR set to: 61
  6588                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6589  019A6A  94BE               	bcf	190,2,c	;volatile
  6590                           
  6591                           ; BSR set to: 61
  6592                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6593  019A6C  0012               	return		;funcret
  6594  019A6E                     __end_of_init_display:
  6595                           	opt callstack 0
  6596                           
  6597 ;; *************** function _send_lcd_cmd_long *****************
  6598 ;; Defined at:
  6599 ;;		line 129 in file "eadog.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  cmd             1  [STACK] const unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1  [STACK] void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6608 ;; Tracked objects:
  6609 ;;		On entry : 3F/0
  6610 ;;		On exit  : 3F/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   16
  6620 ;; This function calls:
  6621 ;;		_SPI1_Exchange8bit
  6622 ;;		_wdtdelay
  6623 ;; This function is called by:
  6624 ;;		_init_display
  6625 ;; This function uses a reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text7
  6629  01B552                     __ptext7:
  6630                           	opt callstack 0
  6631  01B552                     _send_lcd_cmd_long:
  6632                           	opt callstack 13
  6633                           
  6634                           ; BSR set to: 61
  6635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6636                           ;incstack = 0
  6637                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6638  01B552  92BC               	bcf	188,1,c	;volatile
  6639                           
  6640                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6641  01B554  94BC               	bcf	188,2,c	;volatile
  6642                           
  6643                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6644                           ;stkvar	_cmd @ sp[(0)+-1]
  6645  01B556  0EFF               	movlw	-1
  6646  01B558  50E3               	movf	plusw1,w,c
  6647  01B55A  6EE6               	movwf	postinc1,c
  6648  01B55C  EC98  F0DC         	call	_SPI1_Exchange8bit	;wreg free
  6649                           
  6650                           ; BSR set to: 57
  6651                           ;eadog.c: 134:  wdtdelay(800);
  6652  01B560  0E20               	movlw	32
  6653  01B562  6EE6               	movwf	postinc1,c
  6654  01B564  0E03               	movlw	3
  6655  01B566  6EE6               	movwf	postinc1,c
  6656  01B568  0E00               	movlw	0
  6657  01B56A  6EE6               	movwf	postinc1,c
  6658  01B56C  0E00               	movlw	0
  6659  01B56E  6EE6               	movwf	postinc1,c
  6660  01B570  EC0D  F0D6         	call	_wdtdelay	;wreg free
  6661                           
  6662                           ; BSR set to: 0
  6663  01B574  82BC               	bsf	188,1,c	;volatile
  6664                           
  6665                           ; BSR set to: 0
  6666                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6667  01B576  52E5               	movf	postdec1,f,c
  6668  01B578  0012               	return		;funcret
  6669  01B57A                     __end_of_send_lcd_cmd_long:
  6670                           	opt callstack 0
  6671                           
  6672 ;; *************** function _send_lcd_cmd *****************
  6673 ;; Defined at:
  6674 ;;		line 117 in file "eadog.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  cmd             1  [STACK] const unsigned char 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1  [STACK] void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6683 ;; Tracked objects:
  6684 ;;		On entry : 3F/0
  6685 ;;		On exit  : 3F/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:   16
  6695 ;; This function calls:
  6696 ;;		_SPI1_Exchange8bit
  6697 ;;		_wdtdelay
  6698 ;; This function is called by:
  6699 ;;		_init_display
  6700 ;; This function uses a reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text8
  6704  01B57A                     __ptext8:
  6705                           	opt callstack 0
  6706  01B57A                     _send_lcd_cmd:
  6707                           	opt callstack 13
  6708                           
  6709                           ; BSR set to: 0
  6710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6711                           ;incstack = 0
  6712                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6713  01B57A  92BC               	bcf	188,1,c	;volatile
  6714                           
  6715                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6716  01B57C  94BC               	bcf	188,2,c	;volatile
  6717                           
  6718                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6719                           ;stkvar	_cmd @ sp[(0)+-1]
  6720  01B57E  0EFF               	movlw	-1
  6721  01B580  50E3               	movf	plusw1,w,c
  6722  01B582  6EE6               	movwf	postinc1,c
  6723  01B584  EC98  F0DC         	call	_SPI1_Exchange8bit	;wreg free
  6724                           
  6725                           ; BSR set to: 57
  6726                           ;eadog.c: 122:  wdtdelay(30);
  6727  01B588  0E1E               	movlw	30
  6728  01B58A  6EE6               	movwf	postinc1,c
  6729  01B58C  0E00               	movlw	0
  6730  01B58E  6EE6               	movwf	postinc1,c
  6731  01B590  0E00               	movlw	0
  6732  01B592  6EE6               	movwf	postinc1,c
  6733  01B594  0E00               	movlw	0
  6734  01B596  6EE6               	movwf	postinc1,c
  6735  01B598  EC0D  F0D6         	call	_wdtdelay	;wreg free
  6736                           
  6737                           ; BSR set to: 0
  6738  01B59C  82BC               	bsf	188,1,c	;volatile
  6739                           
  6740                           ; BSR set to: 0
  6741                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6742  01B59E  52E5               	movf	postdec1,f,c
  6743  01B5A0  0012               	return		;funcret
  6744  01B5A2                     __end_of_send_lcd_cmd:
  6745                           	opt callstack 0
  6746                           
  6747 ;; *************** function _SPI1_Exchange8bit *****************
  6748 ;; Defined at:
  6749 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  data            1  [STACK] unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1  [STACK] unsigned char 
  6756 ;; Registers used:
  6757 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 3F/39
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6767 ;;Total ram usage:        0 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:   15
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_send_lcd_cmd
  6774 ;;		_send_lcd_cmd_long
  6775 ;; This function uses a reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text9
  6779  01B930                     __ptext9:
  6780                           	opt callstack 0
  6781  01B930                     _SPI1_Exchange8bit:
  6782                           	opt callstack 13
  6783                           
  6784                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6785                           
  6786                           ; BSR set to: 0
  6787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6788                           ;incstack = 0
  6789  01B930  0E01               	movlw	1
  6790  01B932  013D               	movlb	61	; () banked
  6791  01B934  6F12               	movwf	18,b	;volatile
  6792                           
  6793                           ; BSR set to: 61
  6794                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6795                           ;stkvar	_data @ sp[(0)+-1]
  6796  01B936  0EFF               	movlw	-1
  6797  01B938  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6798  01B93E                     l807:
  6799                           
  6800                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6801  01B93E  0139               	movlb	57	; () banked
  6802  01B940  A9A2               	btfss	162,4,b	;volatile
  6803  01B942  D7FD               	goto	l807
  6804                           
  6805                           ; BSR set to: 57
  6806                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6807  01B944  006F F440  F026    	movff	15632,btemp	;volatile
  6808                           
  6809                           ; BSR set to: 57
  6810                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6811  01B94A  52E5               	movf	postdec1,f,c
  6812  01B94C  0012               	return		;funcret
  6813  01B94E                     __end_of_SPI1_Exchange8bit:
  6814                           	opt callstack 0
  6815                           
  6816 ;; *************** function _ringBufS_init *****************
  6817 ;; Defined at:
  6818 ;;		line 22 in file "ringbufs.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  _this           2  [STACK] PTR volatile struct ring
  6821 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1  [STACK] void 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6837 ;;Total ram usage:        0 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:   16
  6840 ;; This function calls:
  6841 ;;		_memset
  6842 ;; This function is called by:
  6843 ;;		_init_display
  6844 ;; This function uses a reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text10
  6848  01B5A2                     __ptext10:
  6849                           	opt callstack 0
  6850  01B5A2                     _ringBufS_init:
  6851                           	opt callstack 13
  6852                           
  6853                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6854                           
  6855                           ; BSR set to: 57
  6856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6857                           ;incstack = 0
  6858  01B5A2  0E43               	movlw	67
  6859  01B5A4  6EE6               	movwf	postinc1,c
  6860  01B5A6  0E00               	movlw	0
  6861  01B5A8  6EE6               	movwf	postinc1,c
  6862  01B5AA  0E00               	movlw	0
  6863  01B5AC  6EE6               	movwf	postinc1,c
  6864  01B5AE  0E00               	movlw	0
  6865  01B5B0  6EE6               	movwf	postinc1,c
  6866                           
  6867                           ;stkvar	__this @ sp[(-4)+-2]
  6868  01B5B2  0EFA               	movlw	-6
  6869  01B5B4  006F FF8F FFE6     	movff	plusw1,postinc1
  6870  01B5BA  006F FF8F FFE6     	movff	plusw1,postinc1
  6871  01B5C0  EC8B  F0B5         	call	_memset	;wreg free
  6872                           
  6873                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6874  01B5C4  52E5               	movf	postdec1,f,c
  6875  01B5C6  52E5               	movf	postdec1,f,c
  6876  01B5C8  0012               	return		;funcret
  6877  01B5CA                     __end_of_ringBufS_init:
  6878                           	opt callstack 0
  6879                           
  6880 ;; *************** function _init_bsoc *****************
  6881 ;; Defined at:
  6882 ;;		line 95 in file "bsoc.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1  [STACK] void 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;Total ram usage:        0 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:   18
  6903 ;; This function calls:
  6904 ;;		_TMR3_SetInterruptHandler
  6905 ;;		_Volts_to_SOC
  6906 ;;		___fldiv
  6907 ;;		___flmul
  6908 ;;		___fltol
  6909 ;;		___xxtofl
  6910 ;;		_conv_raw_result
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;; This function uses a reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text11
  6917  018752                     __ptext11:
  6918                           	opt callstack 0
  6919  018752                     _init_bsoc:
  6920                           	opt callstack 12
  6921                           
  6922                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6923                           
  6924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6925                           ;incstack = 0
  6926  018752  0E00               	movlw	0
  6927  018754  6EE6               	movwf	postinc1,c
  6928  018756  0E00               	movlw	0
  6929  018758  6EE6               	movwf	postinc1,c
  6930  01875A  0E7A               	movlw	122
  6931  01875C  6EE6               	movwf	postinc1,c
  6932  01875E  0E44               	movlw	68
  6933  018760  6EE6               	movwf	postinc1,c
  6934  018762  0E00               	movlw	0
  6935  018764  6EE6               	movwf	postinc1,c
  6936  018766  0E04               	movlw	4
  6937  018768  6EE6               	movwf	postinc1,c
  6938  01876A  EC08  F0A8         	call	_conv_raw_result	;wreg free
  6939  01876E  0060  F09B  FFE6   	movff	btemp,postinc1
  6940  018774  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6941  01877A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6942  018780  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6943  018786  EC62  F0C4         	call	___fltol	;wreg free
  6944  01878A  0060  F09B  FFE6   	movff	btemp,postinc1
  6945  018790  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6946  018796  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6947  01879C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6948  0187A2  0E00               	movlw	0
  6949  0187A4  6EE6               	movwf	postinc1,c
  6950  0187A6  EC7B  F0BF         	call	___xxtofl	;wreg free
  6951  0187AA  0060  F09B  FFE6   	movff	btemp,postinc1
  6952  0187B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6953  0187B6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6954  0187BC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6955  0187C2  ECA0  F099         	call	___flmul	;wreg free
  6956  0187C6  0060  F09B  FFE6   	movff	btemp,postinc1
  6957  0187CC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6958  0187D2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6959  0187D8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6960  0187DE  EC62  F0C4         	call	___fltol	;wreg free
  6961  0187E2  0060  F09B  FFE6   	movff	btemp,postinc1
  6962  0187E8  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6963  0187EE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6964  0187F4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6965  0187FA  EC16  F0D1         	call	_Volts_to_SOC	;wreg free
  6966  0187FE  0060  F098  F7B1   	movff	btemp,_C+178	;volatile
  6967  018804  0060  F09C  F7B2   	movff	btemp+1,_C+179	;volatile
  6968                           
  6969                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6970  01880A  EE21  F38B         	lfsr	2,_C+140	;volatile
  6971  01880E  006F FF7B FFE6     	movff	postinc2,postinc1
  6972  018814  006F FF7B FFE6     	movff	postinc2,postinc1
  6973  01881A  006F FF7B FFE6     	movff	postinc2,postinc1
  6974  018820  006F FF7B FFE6     	movff	postinc2,postinc1
  6975  018826  0E00               	movlw	0
  6976  018828  6EE6               	movwf	postinc1,c
  6977  01882A  0E00               	movlw	0
  6978  01882C  6EE6               	movwf	postinc1,c
  6979  01882E  0EC8               	movlw	200
  6980  018830  6EE6               	movwf	postinc1,c
  6981  018832  0E42               	movlw	66
  6982  018834  6EE6               	movwf	postinc1,c
  6983  018836  51B1               	movf	(_C+178)& (0+255),w,b	;volatile
  6984  018838  6E2E               	movwf	(btemp+8)^0,c
  6985  01883A  51B2               	movf	(_C+179)& (0+255),w,b	;volatile
  6986  01883C  6E2F               	movwf	(btemp+9)^0,c
  6987  01883E  6A30               	clrf	(btemp+10)^0,c
  6988  018840  6A31               	clrf	(btemp+11)^0,c
  6989  018842  0060  F0BB  FFE6   	movff	btemp+8,postinc1
  6990  018848  0060  F0BF  FFE6   	movff	btemp+9,postinc1
  6991  01884E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6992  018854  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6993  01885A  0E00               	movlw	0
  6994  01885C  6EE6               	movwf	postinc1,c
  6995  01885E  EC7B  F0BF         	call	___xxtofl	;wreg free
  6996  018862  0060  F09B  FFE6   	movff	btemp,postinc1
  6997  018868  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6998  01886E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6999  018874  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7000  01887A  EC4B  F0A5         	call	___fldiv	;wreg free
  7001  01887E  0060  F09B  FFE6   	movff	btemp,postinc1
  7002  018884  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7003  01888A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7004  018890  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7005  018896  ECA0  F099         	call	___flmul	;wreg free
  7006  01889A  0060  F098  F78F   	movff	btemp,_C+144	;volatile
  7007  0188A0  0060  F09C  F790   	movff	btemp+1,_C+145	;volatile
  7008  0188A6  0060  F0A0  F791   	movff	btemp+2,_C+146	;volatile
  7009  0188AC  0060  F0A4  F792   	movff	btemp+3,_C+147	;volatile
  7010                           
  7011                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  7012  0188B2  0E26               	movlw	low _calc_bsoc
  7013  0188B4  6EE6               	movwf	postinc1,c
  7014  0188B6  0E43               	movlw	high _calc_bsoc
  7015  0188B8  6EE6               	movwf	postinc1,c
  7016  0188BA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7017  0188BC  6EE6               	movwf	postinc1,c
  7018  0188BE  EC5D  F0DB         	call	_TMR3_SetInterruptHandler	;wreg free
  7019                           
  7020                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7021  0188C2  0012               	return		;funcret
  7022  0188C4                     __end_of_init_bsoc:
  7023                           	opt callstack 0
  7024                           
  7025 ;; *************** function _Volts_to_SOC *****************
  7026 ;; Defined at:
  7027 ;;		line 159 in file "bsoc.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;  cvoltage        4  [STACK] unsigned long 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  2  [STACK] unsigned short 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl, prodh
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;Total ram usage:        0 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; Hardware stack levels required when called:   15
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_init_bsoc
  7052 ;; This function uses a reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text12
  7056  01A22C                     __ptext12:
  7057                           	opt callstack 0
  7058  01A22C                     _Volts_to_SOC:
  7059                           	opt callstack 14
  7060                           
  7061                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  stat
      +                          ic uint8_t slot;;bsoc.c: 163:  C.soc = 0;
  7062                           
  7063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7064                           ;incstack = 0
  7065  01A22C  0E00               	movlw	0
  7066  01A22E  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  7067  01A234  0E00               	movlw	0
  7068  01A236  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  7069                           
  7070                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  7071  01A23C  6A19               	clrf	Volts_to_SOC@slot^0,c
  7072  01A23E                     l10507:
  7073                           
  7074                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7075                           ;stkvar	_cvoltage @ sp[(0)+-4]
  7076  01A23E  5019               	movf	Volts_to_SOC@slot^0,w,c
  7077  01A240  0D08               	mullw	8
  7078  01A242  0E63               	movlw	low _BVSOC_TABLE
  7079  01A244  24F3               	addwf	243,w,c
  7080  01A246  6EF6               	movwf	tblptrl,c
  7081  01A248  0EFA               	movlw	high _BVSOC_TABLE
  7082  01A24A  20F4               	addwfc	244,w,c
  7083  01A24C  6EF7               	movwf	tblptrh,c
  7084  01A24E                     	if	1	;There are 3 active tblptr bytes
  7085  01A24E  6AF8               	clrf	tblptru,c
  7086  01A250  0E00               	movlw	low (__mediumconst shr (0+16))
  7087  01A252  22F8               	addwfc	tblptru,f,c
  7088  01A254                     	endif
  7089  01A254  0EFC               	movlw	-4
  7090  01A256  50E3               	movf	plusw1,w,c
  7091  01A258  0009               	tblrd		*+
  7092  01A25A  5CF5               	subwf	tablat,w,c
  7093  01A25C  0EFD               	movlw	-3
  7094  01A25E  50E3               	movf	plusw1,w,c
  7095  01A260  0009               	tblrd		*+
  7096  01A262  58F5               	subwfb	tablat,w,c
  7097  01A264  0EFE               	movlw	-2
  7098  01A266  50E3               	movf	plusw1,w,c
  7099  01A268  0009               	tblrd		*+
  7100  01A26A  58F5               	subwfb	tablat,w,c
  7101  01A26C  0EFF               	movlw	-1
  7102  01A26E  50E3               	movf	plusw1,w,c
  7103  01A270  0009               	tblrd		*+
  7104  01A272  58F5               	subwfb	tablat,w,c
  7105  01A274  B0D8               	btfsc	status,0,c
  7106  01A276  D01D               	goto	l10511
  7107                           
  7108                           ;bsoc.c: 166:    C.soc = BVSOC_TABLE[slot][1];
  7109  01A278  5019               	movf	Volts_to_SOC@slot^0,w,c
  7110  01A27A  0D08               	mullw	8
  7111  01A27C  0E04               	movlw	4
  7112  01A27E  26F3               	addwf	243,f,c
  7113  01A280  0E00               	movlw	0
  7114  01A282  22F4               	addwfc	244,f,c
  7115  01A284  0E63               	movlw	low _BVSOC_TABLE
  7116  01A286  24F3               	addwf	243,w,c
  7117  01A288  6EF6               	movwf	tblptrl,c
  7118  01A28A  0EFA               	movlw	high _BVSOC_TABLE
  7119  01A28C  20F4               	addwfc	244,w,c
  7120  01A28E  6EF7               	movwf	tblptrh,c
  7121  01A290                     	if	1	;There are 3 active tblptr bytes
  7122  01A290  6AF8               	clrf	tblptru,c
  7123  01A292  0E00               	movlw	low (__mediumconst shr (0+16))
  7124  01A294  22F8               	addwfc	tblptru,f,c
  7125  01A296                     	endif
  7126  01A296  0009               	tblrd		*+
  7127  01A298  006F FFD4  F030    	movff	tablat,btemp+10
  7128  01A29E  0009               	tblrd		*+
  7129  01A2A0  006F FFD4  F031    	movff	tablat,btemp+11
  7130  01A2A6  0060  F0C0  F7B1   	movff	btemp+10,_C+178	;volatile
  7131  01A2AC  0060  F0C4  F7B2   	movff	btemp+11,_C+179	;volatile
  7132  01A2B2                     l10511:
  7133                           
  7134                           ;bsoc.c: 168:  }
  7135  01A2B2  2A19               	incf	Volts_to_SOC@slot^0,f,c
  7136  01A2B4  0E19               	movlw	25
  7137  01A2B6  6419               	cpfsgt	Volts_to_SOC@slot^0,c
  7138  01A2B8  D7C2               	goto	l10507
  7139                           
  7140                           ;bsoc.c: 170:  return C.soc;
  7141  01A2BA  EE21  F3B1         	lfsr	2,_C+178	;volatile
  7142  01A2BE  006F FF78  F026    	movff	postinc2,btemp
  7143  01A2C4  006F FF74  F027    	movff	postdec2,btemp+1
  7144                           
  7145                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7146  01A2CA  52E5               	movf	postdec1,f,c
  7147  01A2CC  52E5               	movf	postdec1,f,c
  7148  01A2CE  52E5               	movf	postdec1,f,c
  7149  01A2D0  52E5               	movf	postdec1,f,c
  7150  01A2D2  0012               	return		;funcret
  7151  01A2D4                     __end_of_Volts_to_SOC:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function _hid_display *****************
  7155 ;; Defined at:
  7156 ;;		line 17 in file "hid.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  h               1  [STACK] PTR struct H_data
  7159 ;;		 -> H(7), 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1  [STACK] PTR struct H_data
  7164 ;; Registers used:
  7165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7166 ;; Tracked objects:
  7167 ;;		On entry : 3F/39
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7175 ;;Total ram usage:        0 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:   17
  7178 ;; This function calls:
  7179 ;;		_hid_input
  7180 ;; This function is called by:
  7181 ;;		_main
  7182 ;; This function uses a reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text13
  7186  019882                     __ptext13:
  7187                           	opt callstack 0
  7188  019882                     _hid_display:
  7189                           	opt callstack 13
  7190                           
  7191                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7192                           ;stkvar	_h @ sp[(0)+-1]
  7193                           
  7194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7195                           ;incstack = 0
  7196  019882  0EFF               	movlw	-1
  7197  019884  50E3               	movf	plusw1,w,c
  7198  019886  6EE6               	movwf	postinc1,c
  7199  019888  ECED  F0D2         	call	_hid_input	;wreg free
  7200                           
  7201                           ;hid.c: 21:  switch (h->h_state) {
  7202  01988C  D066               	goto	l10897
  7203  01988E                     l10875:
  7204                           
  7205                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7206                           ;stkvar	_h @ sp[(0)+-1]
  7207  01988E  0EFF               	movlw	-1
  7208  019890  50E3               	movf	plusw1,w,c
  7209  019892  6ED9               	movwf	fsr2l,c
  7210  019894  6ADA               	clrf	fsr2h,c
  7211  019896  0E01               	movlw	1
  7212  019898  26D9               	addwf	fsr2l,f,c
  7213  01989A  0E01               	movlw	1
  7214  01989C  6EDF               	movwf	indf2,c
  7215                           
  7216                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7217                           ;stkvar	_h @ sp[(0)+-1]
  7218  01989E  0EFF               	movlw	-1
  7219  0198A0  50E3               	movf	plusw1,w,c
  7220  0198A2  6ED9               	movwf	fsr2l,c
  7221  0198A4  6ADA               	clrf	fsr2h,c
  7222  0198A6  0E00               	movlw	0
  7223  0198A8  6EDF               	movwf	indf2,c
  7224                           
  7225                           ;hid.c: 25:   h->wait_enter = 1;
  7226                           ;stkvar	_h @ sp[(0)+-1]
  7227  0198AA  0EFF               	movlw	-1
  7228  0198AC  50E3               	movf	plusw1,w,c
  7229  0198AE  6ED9               	movwf	fsr2l,c
  7230  0198B0  6ADA               	clrf	fsr2h,c
  7231  0198B2  0E04               	movlw	4
  7232  0198B4  26D9               	addwf	fsr2l,f,c
  7233  0198B6  0E01               	movlw	1
  7234  0198B8  6EDF               	movwf	indf2,c
  7235                           
  7236                           ;hid.c: 26:   h->wait_select = 1;
  7237                           ;stkvar	_h @ sp[(0)+-1]
  7238  0198BA  0EFF               	movlw	-1
  7239  0198BC  50E3               	movf	plusw1,w,c
  7240  0198BE  6ED9               	movwf	fsr2l,c
  7241  0198C0  6ADA               	clrf	fsr2h,c
  7242  0198C2  0E02               	movlw	2
  7243  0198C4  26D9               	addwf	fsr2l,f,c
  7244  0198C6  0E01               	movlw	1
  7245  0198C8  6EDF               	movwf	indf2,c
  7246                           
  7247                           ;hid.c: 27:   h->select_p = SW_OFF;
  7248                           ;stkvar	_h @ sp[(0)+-1]
  7249  0198CA  0EFF               	movlw	-1
  7250  0198CC  50E3               	movf	plusw1,w,c
  7251  0198CE  6ED9               	movwf	fsr2l,c
  7252  0198D0  6ADA               	clrf	fsr2h,c
  7253  0198D2  0E03               	movlw	3
  7254  0198D4  26D9               	addwf	fsr2l,f,c
  7255  0198D6  0E00               	movlw	0
  7256  0198D8  6EDF               	movwf	indf2,c
  7257                           
  7258                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7259                           ;stkvar	_h @ sp[(0)+-1]
  7260  0198DA  0EFF               	movlw	-1
  7261  0198DC  50E3               	movf	plusw1,w,c
  7262  0198DE  6ED9               	movwf	fsr2l,c
  7263  0198E0  6ADA               	clrf	fsr2h,c
  7264  0198E2  0E05               	movlw	5
  7265  0198E4  26D9               	addwf	fsr2l,f,c
  7266  0198E6  0E00               	movlw	0
  7267  0198E8  D036               	goto	L3
  7268  0198EA                     l10887:
  7269                           
  7270                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7271                           ;stkvar	_h @ sp[(0)+-1]
  7272  0198EA  0EFF               	movlw	-1
  7273  0198EC  50E3               	movf	plusw1,w,c
  7274  0198EE  6ED9               	movwf	fsr2l,c
  7275  0198F0  6ADA               	clrf	fsr2h,c
  7276  0198F2  0E02               	movlw	2
  7277  0198F4  26D9               	addwf	fsr2l,f,c
  7278  0198F6  50DF               	movf	indf2,w,c
  7279  0198F8  A4D8               	btfss	status,2,c
  7280  0198FA  D042               	goto	l1972
  7281                           
  7282                           ;stkvar	_h @ sp[(0)+-1]
  7283  0198FC  0EFF               	movlw	-1
  7284  0198FE  50E3               	movf	plusw1,w,c
  7285  019900  6ED9               	movwf	fsr2l,c
  7286  019902  6ADA               	clrf	fsr2h,c
  7287  019904  0E03               	movlw	3
  7288  019906  26D9               	addwf	fsr2l,f,c
  7289  019908  50DF               	movf	indf2,w,c
  7290  01990A  A4D8               	btfss	status,2,c
  7291  01990C  D039               	goto	l1972
  7292                           
  7293                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7294                           ;stkvar	_h @ sp[(0)+-1]
  7295  01990E  0EFF               	movlw	-1
  7296  019910  50E3               	movf	plusw1,w,c
  7297  019912  6ED9               	movwf	fsr2l,c
  7298  019914  6ADA               	clrf	fsr2h,c
  7299  019916  0E06               	movlw	6
  7300  019918  26D9               	addwf	fsr2l,f,c
  7301                           
  7302                           ;stkvar	_h @ sp[(0)+-1]
  7303  01991A  0EFF               	movlw	-1
  7304  01991C  50E3               	movf	plusw1,w,c
  7305  01991E  6EE9               	movwf	fsr0l,c
  7306  019920  6AEA               	clrf	fsr0h,c
  7307  019922  0E06               	movlw	6
  7308  019924  26E9               	addwf	fsr0l,f,c
  7309  019926  2AEF               	incf	indf0,f,c
  7310  019928  50EF               	movf	indf0,w,c
  7311  01992A  0B03               	andlw	3
  7312  01992C  6EDF               	movwf	indf2,c
  7313                           
  7314                           ;hid.c: 34:    h->hid_display = h->sequence;
  7315                           ;stkvar	_h @ sp[(0)+-1]
  7316  01992E  0EFF               	movlw	-1
  7317  019930  50E3               	movf	plusw1,w,c
  7318  019932  6ED9               	movwf	fsr2l,c
  7319  019934  6ADA               	clrf	fsr2h,c
  7320  019936  0E06               	movlw	6
  7321  019938  26D9               	addwf	fsr2l,f,c
  7322                           
  7323                           ;stkvar	_h @ sp[(0)+-1]
  7324  01993A  0EFF               	movlw	-1
  7325  01993C  50E3               	movf	plusw1,w,c
  7326  01993E  6EE9               	movwf	fsr0l,c
  7327  019940  6AEA               	clrf	fsr0h,c
  7328  019942  006F FF7F FFEF     	movff	indf2,indf0
  7329                           
  7330                           ;hid.c: 35:    h->wait_select = 1;
  7331                           ;stkvar	_h @ sp[(0)+-1]
  7332  019948  0EFF               	movlw	-1
  7333  01994A  50E3               	movf	plusw1,w,c
  7334  01994C  6ED9               	movwf	fsr2l,c
  7335  01994E  6ADA               	clrf	fsr2h,c
  7336  019950  0E02               	movlw	2
  7337  019952  26D9               	addwf	fsr2l,f,c
  7338  019954  0E01               	movlw	1
  7339  019956                     L3:
  7340  019956  6EDF               	movwf	indf2,c
  7341  019958  D013               	goto	l1972
  7342  01995A                     l10897:
  7343                           
  7344                           ;stkvar	_h @ sp[(0)+-1]
  7345  01995A  0EFF               	movlw	-1
  7346  01995C  50E3               	movf	plusw1,w,c
  7347  01995E  6ED9               	movwf	fsr2l,c
  7348  019960  6ADA               	clrf	fsr2h,c
  7349  019962  0E01               	movlw	1
  7350  019964  26D9               	addwf	fsr2l,f,c
  7351  019966  50DF               	movf	indf2,w,c
  7352  019968  6E30               	movwf	(btemp+10)^0,c
  7353  01996A  6A31               	clrf	(btemp+11)^0,c
  7354                           
  7355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7356                           ; Switch size 1, requested type "simple"
  7357                           ; Number of cases is 1, Range of values is 0 to 0
  7358                           ; switch strategies available:
  7359                           ; Name         Instructions Cycles
  7360                           ; simple_byte            4     3 (average)
  7361                           ;	Chosen strategy is simple_byte
  7362  01996C  5031               	movf	(btemp+11)^0,w,c
  7363  01996E  0A00               	xorlw	0	; case 0
  7364  019970  A4D8               	btfss	status,2,c
  7365  019972  D7BB               	goto	l10887
  7366                           
  7367                           ; Switch size 1, requested type "simple"
  7368                           ; Number of cases is 2, Range of values is 0 to 1
  7369                           ; switch strategies available:
  7370                           ; Name         Instructions Cycles
  7371                           ; simple_byte            7     4 (average)
  7372                           ;	Chosen strategy is simple_byte
  7373  019974  5030               	movf	(btemp+10)^0,w,c
  7374  019976  0A00               	xorlw	0	; case 0
  7375  019978  B4D8               	btfsc	status,2,c
  7376  01997A  D789               	goto	l10875
  7377  01997C  0A01               	xorlw	1	; case 1
  7378  01997E  D7B5               	goto	l10887
  7379  019980                     l1972:
  7380                           
  7381                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7382  019980  52E5               	movf	postdec1,f,c
  7383  019982  0012               	return		;funcret
  7384  019984                     __end_of_hid_display:
  7385                           	opt callstack 0
  7386                           
  7387 ;; *************** function _hid_input *****************
  7388 ;; Defined at:
  7389 ;;		line 3 in file "hid.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  h               1  [STACK] PTR struct H_data
  7392 ;;		 -> H(7), 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1  [STACK] PTR struct H_data
  7397 ;; Registers used:
  7398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/39
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;Total ram usage:        0 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:   16
  7411 ;; This function calls:
  7412 ;;		_get_switch
  7413 ;; This function is called by:
  7414 ;;		_hid_display
  7415 ;; This function uses a reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text14
  7419  01A5DA                     __ptext14:
  7420                           	opt callstack 0
  7421  01A5DA                     _hid_input:
  7422                           	opt callstack 13
  7423                           
  7424                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7425                           
  7426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7427                           ;incstack = 0
  7428  01A5DA  0E02               	movlw	2
  7429  01A5DC  6EE6               	movwf	postinc1,c
  7430  01A5DE  EC51  F0DA         	call	_get_switch	;wreg free
  7431  01A5E2  5026               	movf	btemp^0,w,c
  7432  01A5E4  B4D8               	btfsc	status,2,c
  7433  01A5E6  D01C               	goto	l10443
  7434                           
  7435                           ;hid.c: 6:   h->wait_select = 0;
  7436                           ;stkvar	_h @ sp[(0)+-1]
  7437  01A5E8  0EFF               	movlw	-1
  7438  01A5EA  50E3               	movf	plusw1,w,c
  7439  01A5EC  6ED9               	movwf	fsr2l,c
  7440  01A5EE  6ADA               	clrf	fsr2h,c
  7441  01A5F0  0E02               	movlw	2
  7442  01A5F2  26D9               	addwf	fsr2l,f,c
  7443  01A5F4  0E00               	movlw	0
  7444  01A5F6  6EDF               	movwf	indf2,c
  7445                           
  7446                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7447  01A5F8  0E02               	movlw	2
  7448  01A5FA  6EE6               	movwf	postinc1,c
  7449  01A5FC  EC51  F0DA         	call	_get_switch	;wreg free
  7450  01A600  5026               	movf	btemp^0,w,c
  7451  01A602  B4D8               	btfsc	status,2,c
  7452  01A604  D003               	goto	u9690
  7453  01A606  6A31               	clrf	(btemp+11)^0,c
  7454  01A608  2A31               	incf	(btemp+11)^0,f,c
  7455  01A60A  D001               	goto	u9708
  7456  01A60C                     u9690:
  7457  01A60C  6A31               	clrf	(btemp+11)^0,c
  7458  01A60E                     u9708:
  7459                           
  7460                           ;stkvar	_h @ sp[(0)+-1]
  7461  01A60E  0EFF               	movlw	-1
  7462  01A610  50E3               	movf	plusw1,w,c
  7463  01A612  6ED9               	movwf	fsr2l,c
  7464  01A614  6ADA               	clrf	fsr2h,c
  7465  01A616  0E03               	movlw	3
  7466  01A618  26D9               	addwf	fsr2l,f,c
  7467  01A61A  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7468  01A620                     l10443:
  7469                           
  7470                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7471  01A620  0E03               	movlw	3
  7472  01A622  6EE6               	movwf	postinc1,c
  7473  01A624  EC51  F0DA         	call	_get_switch	;wreg free
  7474  01A628  5026               	movf	btemp^0,w,c
  7475  01A62A  B4D8               	btfsc	status,2,c
  7476  01A62C  D01C               	goto	l1963
  7477                           
  7478                           ;hid.c: 11:   h->wait_enter = 0;
  7479                           ;stkvar	_h @ sp[(0)+-1]
  7480  01A62E  0EFF               	movlw	-1
  7481  01A630  50E3               	movf	plusw1,w,c
  7482  01A632  6ED9               	movwf	fsr2l,c
  7483  01A634  6ADA               	clrf	fsr2h,c
  7484  01A636  0E04               	movlw	4
  7485  01A638  26D9               	addwf	fsr2l,f,c
  7486  01A63A  0E00               	movlw	0
  7487  01A63C  6EDF               	movwf	indf2,c
  7488                           
  7489                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7490  01A63E  0E03               	movlw	3
  7491  01A640  6EE6               	movwf	postinc1,c
  7492  01A642  EC51  F0DA         	call	_get_switch	;wreg free
  7493  01A646  5026               	movf	btemp^0,w,c
  7494  01A648  B4D8               	btfsc	status,2,c
  7495  01A64A  D003               	goto	u9720
  7496  01A64C  6A31               	clrf	(btemp+11)^0,c
  7497  01A64E  2A31               	incf	(btemp+11)^0,f,c
  7498  01A650  D001               	goto	u9738
  7499  01A652                     u9720:
  7500  01A652  6A31               	clrf	(btemp+11)^0,c
  7501  01A654                     u9738:
  7502                           
  7503                           ;stkvar	_h @ sp[(0)+-1]
  7504  01A654  0EFF               	movlw	-1
  7505  01A656  50E3               	movf	plusw1,w,c
  7506  01A658  6ED9               	movwf	fsr2l,c
  7507  01A65A  6ADA               	clrf	fsr2h,c
  7508  01A65C  0E05               	movlw	5
  7509  01A65E  26D9               	addwf	fsr2l,f,c
  7510  01A660  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7511  01A666                     l1963:
  7512                           
  7513                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7514  01A666  52E5               	movf	postdec1,f,c
  7515  01A668  0012               	return		;funcret
  7516  01A66A                     __end_of_hid_input:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _get_switch *****************
  7520 ;; Defined at:
  7521 ;;		line 18 in file "dio.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  i               1  [STACK] unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1  [STACK] enum E17021
  7528 ;; Registers used:
  7529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/1
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:   15
  7542 ;; This function calls:
  7543 ;;		Nothing
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;;		_hid_input
  7547 ;; This function uses a reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text15
  7551  01B4A2                     __ptext15:
  7552                           	opt callstack 0
  7553  01B4A2                     _get_switch:
  7554                           	opt callstack 13
  7555                           
  7556                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7557                           ;stkvar	_i @ sp[(0)+-1]
  7558                           
  7559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7560                           ;incstack = 0
  7561  01B4A2  0EFF               	movlw	-1
  7562  01B4A4  006F FF8C  F026    	movff	plusw1,btemp
  7563  01B4AA  0E03               	movlw	3
  7564  01B4AC  6426               	cpfsgt	btemp^0,c
  7565  01B4AE  D002               	goto	l9833
  7566                           
  7567                           ;dio.c: 21:   return SW_OFF;
  7568  01B4B0  0E00               	movlw	0
  7569  01B4B2  D00A               	goto	L4
  7570  01B4B4                     l9833:
  7571                           
  7572                           ;dio.c: 23:  return S.button[i].sw;
  7573                           ;stkvar	_i @ sp[(0)+-1]
  7574  01B4B4  0EFF               	movlw	-1
  7575  01B4B6  50E3               	movf	plusw1,w,c
  7576  01B4B8  0D05               	mullw	5
  7577  01B4BA  0EC6               	movlw	low _S
  7578  01B4BC  24F3               	addwf	243,w,c
  7579  01B4BE  6ED9               	movwf	fsr2l,c
  7580  01B4C0  0E01               	movlw	high _S
  7581  01B4C2  20F4               	addwfc	prodh,w,c
  7582  01B4C4  6EDA               	movwf	fsr2h,c
  7583  01B4C6  50DF               	movf	indf2,w,c
  7584  01B4C8                     L4:
  7585  01B4C8  6E26               	movwf	btemp^0,c
  7586                           
  7587                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7588  01B4CA  52E5               	movf	postdec1,f,c
  7589  01B4CC  0012               	return		;funcret
  7590  01B4CE                     __end_of_get_switch:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function _esr_check *****************
  7594 ;; Defined at:
  7595 ;;		line 179 in file "bsoc.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  fsm             1  [STACK] unsigned char 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  4  [STACK] float 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:   18
  7616 ;; This function calls:
  7617 ;;		_StartTimer
  7618 ;;		_TimerDone
  7619 ;;		___fldiv
  7620 ;;		___flsub
  7621 ;;		_conv_raw_result
  7622 ;;		_fabsf
  7623 ;;		_set_load_relay_one
  7624 ;;		_set_load_relay_two
  7625 ;;		_update_adc_result
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;; This function uses a reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text16
  7632  016E02                     __ptext16:
  7633                           	opt callstack 0
  7634  016E02                     _esr_check:
  7635                           	opt callstack 12
  7636                           
  7637                           ;bsoc.c: 179: float esr_check(uint8_t fsm);bsoc.c: 180: {;bsoc.c: 181:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 183:  if (fsm) {
  7638                           ;stkvar	_fsm @ sp[(0)+-1]
  7639                           
  7640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7641                           ;incstack = 0
  7642  016E02  0EFF               	movlw	-1
  7643  016E04  50E3               	movf	plusw1,w,c
  7644  016E06  B4D8               	btfsc	status,2,c
  7645  016E08  D146               	goto	l10809
  7646                           
  7647                           ;bsoc.c: 184:   esr_state = 0;
  7648  016E0A  6A18               	clrf	esr_check@esr_state^0,c
  7649                           
  7650                           ;bsoc.c: 185:   return -10.0;
  7651  016E0C  0E00               	movlw	0
  7652  016E0E  6E26               	movwf	btemp^0,c
  7653  016E10  0E00               	movlw	0
  7654  016E12  6E27               	movwf	(btemp+1)^0,c
  7655  016E14  0E20               	movlw	32
  7656  016E16  6E28               	movwf	(btemp+2)^0,c
  7657  016E18  0EC1               	movlw	193
  7658  016E1A  D158               	goto	L5
  7659  016E1C                     l10741:
  7660                           
  7661                           ;bsoc.c: 190:   StartTimer(TMR_ESR, 10000);
  7662  016E1C  0E10               	movlw	16
  7663  016E1E  6EE6               	movwf	postinc1,c
  7664  016E20  0E27               	movlw	39
  7665  016E22  6EE6               	movwf	postinc1,c
  7666  016E24  0E0C               	movlw	12
  7667  016E26  6EE6               	movwf	postinc1,c
  7668  016E28  EC44  F0D8         	call	_StartTimer	;wreg free
  7669  016E2C                     l10743:
  7670                           
  7671                           ;bsoc.c: 191:   esr_state++;
  7672  016E2C  2A18               	incf	esr_check@esr_state^0,f,c
  7673                           
  7674                           ;bsoc.c: 192:   break;
  7675  016E2E  D147               	goto	l10811
  7676  016E30                     l10745:
  7677                           
  7678                           ;bsoc.c: 197:   set_load_relay_one(0);
  7679  016E30  0E00               	movlw	0
  7680  016E32  6EE6               	movwf	postinc1,c
  7681  016E34  EC5F  F0DD         	call	_set_load_relay_one	;wreg free
  7682                           
  7683                           ;bsoc.c: 198:   set_load_relay_two(0);
  7684  016E38  0E00               	movlw	0
  7685  016E3A  6EE6               	movwf	postinc1,c
  7686  016E3C  EC57  F0DD         	call	_set_load_relay_two	;wreg free
  7687                           
  7688                           ;bsoc.c: 199:   if (TimerDone(TMR_ESR)) {
  7689  016E40  0E0C               	movlw	12
  7690  016E42  6EE6               	movwf	postinc1,c
  7691  016E44  ECE5  F0DA         	call	_TimerDone	;wreg free
  7692  016E48  5026               	movf	btemp^0,w,c
  7693  016E4A  B4D8               	btfsc	status,2,c
  7694  016E4C  D009               	goto	l10751
  7695                           
  7696                           ;bsoc.c: 200:    StartTimer(TMR_ESR, 10000);
  7697  016E4E  0E10               	movlw	16
  7698  016E50  6EE6               	movwf	postinc1,c
  7699  016E52  0E27               	movlw	39
  7700  016E54  6EE6               	movwf	postinc1,c
  7701  016E56  0E0C               	movlw	12
  7702  016E58  6EE6               	movwf	postinc1,c
  7703  016E5A  EC44  F0D8         	call	_StartTimer	;wreg free
  7704                           
  7705                           ;bsoc.c: 201:   } else {
  7706  016E5E  D006               	goto	l10755
  7707  016E60                     l10751:
  7708                           
  7709                           ;bsoc.c: 202:    return -2.0;
  7710  016E60  0E00               	movlw	0
  7711  016E62  6E26               	movwf	btemp^0,c
  7712  016E64  0E00               	movlw	0
  7713  016E66  6E27               	movwf	(btemp+1)^0,c
  7714  016E68  0E00               	movlw	0
  7715  016E6A  D066               	goto	L7
  7716  016E6C                     l10755:
  7717                           
  7718                           ;bsoc.c: 207:   update_adc_result();
  7719  016E6C  EC03  F0D9         	call	_update_adc_result	;wreg free
  7720                           
  7721                           ;bsoc.c: 208:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7722  016E70  0E00               	movlw	0
  7723  016E72  6EE6               	movwf	postinc1,c
  7724  016E74  0E04               	movlw	4
  7725  016E76  6EE6               	movwf	postinc1,c
  7726  016E78  EC08  F0A8         	call	_conv_raw_result	;wreg free
  7727  016E7C  0060  F098  F811   	movff	btemp,_C+274	;volatile
  7728  016E82  0060  F09C  F812   	movff	btemp+1,_C+275	;volatile
  7729  016E88  0060  F0A0  F813   	movff	btemp+2,_C+276	;volatile
  7730  016E8E  0060  F0A4  F814   	movff	btemp+3,_C+277	;volatile
  7731  016E94  D7CB               	goto	l10743
  7732  016E96                     l10761:
  7733                           
  7734                           ;bsoc.c: 212:   set_load_relay_one(1);
  7735  016E96  0E01               	movlw	1
  7736  016E98  6EE6               	movwf	postinc1,c
  7737  016E9A  EC5F  F0DD         	call	_set_load_relay_one	;wreg free
  7738                           
  7739                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  7740  016E9E  0E0C               	movlw	12
  7741  016EA0  6EE6               	movwf	postinc1,c
  7742  016EA2  ECE5  F0DA         	call	_TimerDone	;wreg free
  7743  016EA6  5026               	movf	btemp^0,w,c
  7744  016EA8  B4D8               	btfsc	status,2,c
  7745  016EAA  D009               	goto	l10767
  7746                           
  7747                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  7748  016EAC  0E10               	movlw	16
  7749  016EAE  6EE6               	movwf	postinc1,c
  7750  016EB0  0E27               	movlw	39
  7751  016EB2  6EE6               	movwf	postinc1,c
  7752  016EB4  0E0C               	movlw	12
  7753  016EB6  6EE6               	movwf	postinc1,c
  7754  016EB8  EC44  F0D8         	call	_StartTimer	;wreg free
  7755                           
  7756                           ;bsoc.c: 215:   } else {
  7757  016EBC  D006               	goto	l10771
  7758  016EBE                     l10767:
  7759                           
  7760                           ;bsoc.c: 216:    return -3.0;
  7761  016EBE  0E00               	movlw	0
  7762  016EC0  6E26               	movwf	btemp^0,c
  7763  016EC2  0E00               	movlw	0
  7764  016EC4  6E27               	movwf	(btemp+1)^0,c
  7765  016EC6  0E40               	movlw	64
  7766  016EC8  D037               	goto	L7
  7767  016ECA                     l10771:
  7768                           
  7769                           ;bsoc.c: 219:   update_adc_result();
  7770  016ECA  EC03  F0D9         	call	_update_adc_result	;wreg free
  7771                           
  7772                           ;bsoc.c: 220:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7773  016ECE  0E00               	movlw	0
  7774  016ED0  6EE6               	movwf	postinc1,c
  7775  016ED2  0E04               	movlw	4
  7776  016ED4  6EE6               	movwf	postinc1,c
  7777  016ED6  EC08  F0A8         	call	_conv_raw_result	;wreg free
  7778  016EDA  0060  F098  F815   	movff	btemp,_C+278	;volatile
  7779  016EE0  0060  F09C  F816   	movff	btemp+1,_C+279	;volatile
  7780  016EE6  0060  F0A0  F817   	movff	btemp+2,_C+280	;volatile
  7781  016EEC  0060  F0A4  F818   	movff	btemp+3,_C+281	;volatile
  7782                           
  7783                           ;bsoc.c: 221:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7784  016EF2  0E00               	movlw	0
  7785  016EF4  6EE6               	movwf	postinc1,c
  7786  016EF6  0E00               	movlw	0
  7787  016EF8  6EE6               	movwf	postinc1,c
  7788  016EFA  EC08  F0A8         	call	_conv_raw_result	;wreg free
  7789  016EFE  0060  F098  F809   	movff	btemp,_C+266	;volatile
  7790  016F04  0060  F09C  F80A   	movff	btemp+1,_C+267	;volatile
  7791  016F0A  0060  F0A0  F80B   	movff	btemp+2,_C+268	;volatile
  7792  016F10  0060  F0A4  F80C   	movff	btemp+3,_C+269	;volatile
  7793  016F16  D78A               	goto	l10743
  7794  016F18                     l10779:
  7795                           
  7796                           ;bsoc.c: 225:   set_load_relay_two(1);
  7797  016F18  0E01               	movlw	1
  7798  016F1A  6EE6               	movwf	postinc1,c
  7799  016F1C  EC57  F0DD         	call	_set_load_relay_two	;wreg free
  7800                           
  7801                           ;bsoc.c: 226:   if (!TimerDone(TMR_ESR))
  7802  016F20  0E0C               	movlw	12
  7803  016F22  6EE6               	movwf	postinc1,c
  7804  016F24  ECE5  F0DA         	call	_TimerDone	;wreg free
  7805  016F28  5026               	movf	btemp^0,w,c
  7806  016F2A  A4D8               	btfss	status,2,c
  7807  016F2C  D008               	goto	l10787
  7808                           
  7809                           ;bsoc.c: 227:    return -4.0;
  7810  016F2E  0E00               	movlw	0
  7811  016F30  6E26               	movwf	btemp^0,c
  7812  016F32  0E00               	movlw	0
  7813  016F34  6E27               	movwf	(btemp+1)^0,c
  7814  016F36  0E80               	movlw	128
  7815  016F38                     L7:
  7816  016F38  6E28               	movwf	(btemp+2)^0,c
  7817  016F3A  0EC0               	movlw	192
  7818  016F3C  D0C7               	goto	L5
  7819  016F3E                     l10787:
  7820                           
  7821                           ;bsoc.c: 229:   update_adc_result();
  7822  016F3E  EC03  F0D9         	call	_update_adc_result	;wreg free
  7823                           
  7824                           ;bsoc.c: 230:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7825  016F42  0E00               	movlw	0
  7826  016F44  6EE6               	movwf	postinc1,c
  7827  016F46  0E04               	movlw	4
  7828  016F48  6EE6               	movwf	postinc1,c
  7829  016F4A  EC08  F0A8         	call	_conv_raw_result	;wreg free
  7830  016F4E  0060  F098  F819   	movff	btemp,_C+282	;volatile
  7831  016F54  0060  F09C  F81A   	movff	btemp+1,_C+283	;volatile
  7832  016F5A  0060  F0A0  F81B   	movff	btemp+2,_C+284	;volatile
  7833  016F60  0060  F0A4  F81C   	movff	btemp+3,_C+285	;volatile
  7834                           
  7835                           ;bsoc.c: 231:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7836  016F66  0E00               	movlw	0
  7837  016F68  6EE6               	movwf	postinc1,c
  7838  016F6A  0E00               	movlw	0
  7839  016F6C  6EE6               	movwf	postinc1,c
  7840  016F6E  EC08  F0A8         	call	_conv_raw_result	;wreg free
  7841  016F72  0060  F098  F80D   	movff	btemp,_C+270	;volatile
  7842  016F78  0060  F09C  F80E   	movff	btemp+1,_C+271	;volatile
  7843  016F7E  0060  F0A0  F80F   	movff	btemp+2,_C+272	;volatile
  7844  016F84  0060  F0A4  F810   	movff	btemp+3,_C+273	;volatile
  7845                           
  7846                           ;bsoc.c: 233:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7847  016F8A  EE22  F00D         	lfsr	2,_C+270	;volatile
  7848  016F8E  006F FF7B FFE6     	movff	postinc2,postinc1
  7849  016F94  006F FF7B FFE6     	movff	postinc2,postinc1
  7850  016F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  7851  016FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  7852  016FA6  EE22  F009         	lfsr	2,_C+266	;volatile
  7853  016FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  7854  016FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  7855  016FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  7856  016FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  7857  016FC2  EC75  F0D7         	call	___flsub	;wreg free
  7858  016FC6  0060  F09B  FFE6   	movff	btemp,postinc1
  7859  016FCC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7860  016FD2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7861  016FD8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7862  016FDE  EE22  F019         	lfsr	2,_C+282	;volatile
  7863  016FE2  006F FF7B FFE6     	movff	postinc2,postinc1
  7864  016FE8  006F FF7B FFE6     	movff	postinc2,postinc1
  7865  016FEE  006F FF7B FFE6     	movff	postinc2,postinc1
  7866  016FF4  006F FF7B FFE6     	movff	postinc2,postinc1
  7867  016FFA  EE22  F015         	lfsr	2,_C+278	;volatile
  7868  016FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  7869  017004  006F FF7B FFE6     	movff	postinc2,postinc1
  7870  01700A  006F FF7B FFE6     	movff	postinc2,postinc1
  7871  017010  006F FF7B FFE6     	movff	postinc2,postinc1
  7872  017016  EC75  F0D7         	call	___flsub	;wreg free
  7873  01701A  0060  F09B  FFE6   	movff	btemp,postinc1
  7874  017020  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7875  017026  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7876  01702C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7877  017032  EC4B  F0A5         	call	___fldiv	;wreg free
  7878  017036  0060  F09B  FFE6   	movff	btemp,postinc1
  7879  01703C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7880  017042  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7881  017048  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7882  01704E  EC14  F0D0         	call	_fabsf	;wreg free
  7883  017052  0060  F098  F787   	movff	btemp,_C+136	;volatile
  7884  017058  0060  F09C  F788   	movff	btemp+1,_C+137	;volatile
  7885  01705E  0060  F0A0  F789   	movff	btemp+2,_C+138	;volatile
  7886  017064  0060  F0A4  F78A   	movff	btemp+3,_C+139	;volatile
  7887                           
  7888                           ;bsoc.c: 234:   set_load_relay_one(0);
  7889  01706A  0E00               	movlw	0
  7890  01706C  6EE6               	movwf	postinc1,c
  7891  01706E  EC5F  F0DD         	call	_set_load_relay_one	;wreg free
  7892                           
  7893                           ;bsoc.c: 235:   set_load_relay_two(0);
  7894  017072  0E00               	movlw	0
  7895  017074  6EE6               	movwf	postinc1,c
  7896  017076  EC57  F0DD         	call	_set_load_relay_two	;wreg free
  7897                           
  7898                           ;bsoc.c: 236:   esr_state = 0;
  7899  01707A  6A18               	clrf	esr_check@esr_state^0,c
  7900                           
  7901                           ;bsoc.c: 237:   return C.esr;
  7902  01707C  0061  FE1C  F026   	movff	_C+136,btemp	;volatile
  7903  017082  0061  FE20  F027   	movff	_C+137,btemp+1	;volatile
  7904  017088  0061  FE24  F028   	movff	_C+138,btemp+2	;volatile
  7905  01708E  0061  FE28  F029   	movff	_C+139,btemp+3	;volatile
  7906  017094  D01C               	goto	l2080
  7907  017096                     l10809:
  7908  017096  5018               	movf	esr_check@esr_state^0,w,c
  7909  017098  6E30               	movwf	(btemp+10)^0,c
  7910  01709A  6A31               	clrf	(btemp+11)^0,c
  7911                           
  7912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7913                           ; Switch size 1, requested type "simple"
  7914                           ; Number of cases is 1, Range of values is 0 to 0
  7915                           ; switch strategies available:
  7916                           ; Name         Instructions Cycles
  7917                           ; simple_byte            4     3 (average)
  7918                           ;	Chosen strategy is simple_byte
  7919  01709C  5031               	movf	(btemp+11)^0,w,c
  7920  01709E  0A00               	xorlw	0	; case 0
  7921  0170A0  A4D8               	btfss	status,2,c
  7922  0170A2  D00D               	goto	l10811
  7923                           
  7924                           ; Switch size 1, requested type "simple"
  7925                           ; Number of cases is 4, Range of values is 0 to 3
  7926                           ; switch strategies available:
  7927                           ; Name         Instructions Cycles
  7928                           ; simple_byte           13     7 (average)
  7929                           ;	Chosen strategy is simple_byte
  7930  0170A4  5030               	movf	(btemp+10)^0,w,c
  7931  0170A6  0A00               	xorlw	0	; case 0
  7932  0170A8  B4D8               	btfsc	status,2,c
  7933  0170AA  D6B8               	goto	l10741
  7934  0170AC  0A01               	xorlw	1	; case 1
  7935  0170AE  B4D8               	btfsc	status,2,c
  7936  0170B0  D6BF               	goto	l10745
  7937  0170B2  0A03               	xorlw	3	; case 2
  7938  0170B4  B4D8               	btfsc	status,2,c
  7939  0170B6  D6EF               	goto	l10761
  7940  0170B8  0A01               	xorlw	1	; case 3
  7941  0170BA  B4D8               	btfsc	status,2,c
  7942  0170BC  D72D               	goto	l10779
  7943  0170BE                     l10811:
  7944                           
  7945                           ;bsoc.c: 242:  return -1.0;
  7946  0170BE  0E00               	movlw	0
  7947  0170C0  6E26               	movwf	btemp^0,c
  7948  0170C2  0E00               	movlw	0
  7949  0170C4  6E27               	movwf	(btemp+1)^0,c
  7950  0170C6  0E80               	movlw	128
  7951  0170C8  6E28               	movwf	(btemp+2)^0,c
  7952  0170CA  0EBF               	movlw	191
  7953  0170CC                     L5:
  7954  0170CC  6E29               	movwf	(btemp+3)^0,c
  7955  0170CE                     l2080:
  7956                           
  7957                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7958  0170CE  52E5               	movf	postdec1,f,c
  7959  0170D0  0012               	return		;funcret
  7960  0170D2                     __end_of_esr_check:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function _update_adc_result *****************
  7964 ;; Defined at:
  7965 ;;		line 71 in file "daq.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1  [STACK] _Bool 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:   17
  7986 ;; This function calls:
  7987 ;;		_StartTimer
  7988 ;;		_TimerDone
  7989 ;;		_check_adc_scan
  7990 ;;		_clear_adc_scan
  7991 ;;		_start_adc_scan
  7992 ;; This function is called by:
  7993 ;;		_esr_check
  7994 ;; This function uses a reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text17
  7998  01B206                     __ptext17:
  7999                           	opt callstack 0
  8000  01B206                     _update_adc_result:
  8001                           	opt callstack 12
  8002                           
  8003                           ;daq.c: 73:  if (R.done) {
  8004                           
  8005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8006                           ;incstack = 0
  8007  01B206  0100               	movlb	0	; () banked
  8008  01B208  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  8009  01B20A  B4D8               	btfsc	status,2,c
  8010  01B20C  0012               	return	
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;daq.c: 74:   clear_adc_scan();
  8014  01B20E  ECCB  F0DD         	call	_clear_adc_scan	;wreg free
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;daq.c: 75:   start_adc_scan();
  8018  01B212  EC4A  F0D5         	call	_start_adc_scan	;wreg free
  8019                           
  8020                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  8021  01B216  0EC8               	movlw	200
  8022  01B218  6EE6               	movwf	postinc1,c
  8023  01B21A  0E00               	movlw	0
  8024  01B21C  6EE6               	movwf	postinc1,c
  8025  01B21E  0E01               	movlw	1
  8026  01B220  6EE6               	movwf	postinc1,c
  8027  01B222  EC44  F0D8         	call	_StartTimer	;wreg free
  8028  01B226                     l10379:
  8029  01B226  0E01               	movlw	1
  8030  01B228  6EE6               	movwf	postinc1,c
  8031  01B22A  ECE5  F0DA         	call	_TimerDone	;wreg free
  8032  01B22E  5026               	movf	btemp^0,w,c
  8033  01B230  A4D8               	btfss	status,2,c
  8034  01B232  0012               	return	
  8035  01B234  ECBB  F0DD         	call	_check_adc_scan	;wreg free
  8036  01B238  5026               	movf	btemp^0,w,c
  8037  01B23A  A4D8               	btfss	status,2,c
  8038  01B23C  0012               	return	
  8039  01B23E  D7F3               	goto	l10379
  8040  01B240                     __end_of_update_adc_result:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _start_adc_scan *****************
  8044 ;; Defined at:
  8045 ;;		line 32 in file "daq.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1  [STACK] _Bool 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 1/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:   16
  8066 ;; This function calls:
  8067 ;;		_ADCC_DischargeSampleCapacitor
  8068 ;;		_ADCC_SetADIInterruptHandler
  8069 ;;		_ADCC_SetADTIInterruptHandler
  8070 ;;		_ADCC_StartConversion
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;;		_update_adc_result
  8074 ;; This function uses a reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text18
  8078  01AA94                     __ptext18:
  8079                           	opt callstack 0
  8080  01AA94                     _start_adc_scan:
  8081                           	opt callstack 14
  8082                           
  8083                           ;daq.c: 34:  if (R.done)
  8084                           
  8085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8086                           ;incstack = 0
  8087  01AA94  0100               	movlb	0	; () banked
  8088  01AA96  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  8089  01AA98  A4D8               	btfss	status,2,c
  8090  01AA9A  0012               	return	
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;daq.c: 37:  R.scan_index = 0;
  8094  01AA9C  6BD5               	clrf	(_R+36)& (0+255),b	;volatile
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8098  01AA9E  013A               	movlb	58	; () banked
  8099  01AAA0  5140               	movf	64,w,b	;volatile
  8100  01AAA2  006E F940  F026    	movff	14928,btemp	;volatile
  8101  01AAA8  6A27               	clrf	(btemp+1)^0,c
  8102  01AAAA  0060  F098  F027   	movff	btemp,btemp+1
  8103  01AAB0  6A26               	clrf	btemp^0,c
  8104  01AAB2  2626               	addwf	btemp^0,f,c
  8105  01AAB4  0E00               	movlw	0
  8106  01AAB6  2227               	addwfc	(btemp+1)^0,f,c
  8107  01AAB8  0E77               	movlw	119
  8108  01AABA  1426               	andwf	btemp^0,w,c
  8109  01AABC  0100               	movlb	0	; () banked
  8110  01AABE  6FD6               	movwf	(_R+37)& (0+255),b	;volatile
  8111  01AAC0  0E3C               	movlw	60
  8112  01AAC2  1427               	andwf	(btemp+1)^0,w,c
  8113  01AAC4  6FD7               	movwf	(_R+38)& (0+255),b	;volatile
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8117  01AAC6  0EBE               	movlw	low _adc_int_handler
  8118  01AAC8  6EE6               	movwf	postinc1,c
  8119  01AACA  0EBB               	movlw	high _adc_int_handler
  8120  01AACC  6EE6               	movwf	postinc1,c
  8121  01AACE  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8122  01AAD0  6EE6               	movwf	postinc1,c
  8123  01AAD2  ECAD  F0DB         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8124                           
  8125                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8126  01AAD6  0EFA               	movlw	low _adc_int_t_handler
  8127  01AAD8  6EE6               	movwf	postinc1,c
  8128  01AADA  0EA7               	movlw	high _adc_int_t_handler
  8129  01AADC  6EE6               	movwf	postinc1,c
  8130  01AADE  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8131  01AAE0  6EE6               	movwf	postinc1,c
  8132  01AAE2  EC99  F0DB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8133                           
  8134                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8135  01AAE6  ECB7  F0DD         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8136                           
  8137                           ; BSR set to: 62
  8138                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8139  01AAEA  0100               	movlb	0	; () banked
  8140  01AAEC  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
  8141  01AAEE  0B0F               	andlw	15
  8142  01AAF0  6EE6               	movwf	postinc1,c
  8143  01AAF2  EC4E  F0DD         	call	_ADCC_StartConversion	;wreg free
  8144                           
  8145                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8146  01AAF6  0012               	return		;funcret
  8147  01AAF8                     __end_of_start_adc_scan:
  8148                           	opt callstack 0
  8149                           
  8150 ;; *************** function _ADCC_StartConversion *****************
  8151 ;; Defined at:
  8152 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  channel         1  [STACK] enum E16136
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1  [STACK] void 
  8159 ;; Registers used:
  8160 ;;		fsr1l, fsr1h
  8161 ;; Tracked objects:
  8162 ;;		On entry : 3F/0
  8163 ;;		On exit  : 3F/3E
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;Total ram usage:        0 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:   15
  8173 ;; This function calls:
  8174 ;;		Nothing
  8175 ;; This function is called by:
  8176 ;;		_start_adc_scan
  8177 ;;		_adc_int_t_handler
  8178 ;; This function uses a reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text19
  8182  01BA9C                     __ptext19:
  8183                           	opt callstack 0
  8184  01BA9C                     _ADCC_StartConversion:
  8185                           	opt callstack 0
  8186                           
  8187                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8188                           ;stkvar	_channel @ sp[(0)+-1]
  8189                           
  8190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8191                           ;incstack = 0
  8192 ;; hardware stack exceeded
  8193  01BA9C  0EFF               	movlw	-1
  8194  01BA9E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8195                           
  8196                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8197  01BAA4  013E               	movlb	62	; () banked
  8198  01BAA6  8FF8               	bsf	248,7,b	;volatile
  8199                           
  8200                           ; BSR set to: 62
  8201                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8202  01BAA8  81F8               	bsf	248,0,b	;volatile
  8203                           
  8204                           ; BSR set to: 62
  8205                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8206  01BAAA  52E5               	movf	postdec1,f,c
  8207  01BAAC  0012               	return		;funcret
  8208  01BAAE                     __end_of_ADCC_StartConversion:
  8209                           	opt callstack 0
  8210                           
  8211 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8212 ;; Defined at:
  8213 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;		None
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;		None
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1  [STACK] void 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 3F/3E
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8231 ;;Total ram usage:        0 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:   15
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_start_adc_scan
  8238 ;;		_adc_int_t_handler
  8239 ;; This function uses a reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text20
  8243  01BB6E                     __ptext20:
  8244                           	opt callstack 0
  8245  01BB6E                     _ADCC_DischargeSampleCapacitor:
  8246                           	opt callstack 0
  8247                           
  8248                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8249                           
  8250                           ; BSR set to: 62
  8251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8252                           ;incstack = 0
  8253 ;; hardware stack exceeded
  8254  01BB6E  0E3B               	movlw	59
  8255  01BB70  013E               	movlb	62	; () banked
  8256  01BB72  6FF1               	movwf	241,b	;volatile
  8257                           
  8258                           ; BSR set to: 62
  8259                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8260  01BB74  0012               	return		;funcret
  8261  01BB76                     __end_of_ADCC_DischargeSampleCapacitor:
  8262                           	opt callstack 0
  8263                           
  8264 ;; *************** function _clear_adc_scan *****************
  8265 ;; Defined at:
  8266 ;;		line 63 in file "daq.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1  [STACK] void 
  8273 ;; Registers used:
  8274 ;;		None
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 3F/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8284 ;;Total ram usage:        0 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:   15
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;;		_update_adc_result
  8292 ;; This function uses a reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text21
  8296  01BB96                     __ptext21:
  8297                           	opt callstack 0
  8298  01BB96                     _clear_adc_scan:
  8299                           	opt callstack 13
  8300                           
  8301                           ;daq.c: 65:  R.done = 0;
  8302                           
  8303                           ; BSR set to: 62
  8304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8305                           ;incstack = 0
  8306  01BB96  0100               	movlb	0	; () banked
  8307  01BB98  6BD8               	clrf	(_R+39)& (0+255),b	;volatile
  8308                           
  8309                           ; BSR set to: 0
  8310                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8311  01BB9A  0012               	return		;funcret
  8312  01BB9C                     __end_of_clear_adc_scan:
  8313                           	opt callstack 0
  8314                           
  8315 ;; *************** function _check_adc_scan *****************
  8316 ;; Defined at:
  8317 ;;		line 55 in file "daq.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1  [STACK] _Bool 
  8324 ;; Registers used:
  8325 ;;		btemp
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/1
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   15
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_main
  8342 ;;		_update_adc_result
  8343 ;; This function uses a reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text22
  8347  01BB76                     __ptext22:
  8348                           	opt callstack 0
  8349  01BB76                     _check_adc_scan:
  8350                           	opt callstack 13
  8351                           
  8352                           ;daq.c: 57:  return R.done;
  8353                           
  8354                           ; BSR set to: 0
  8355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8356                           ;incstack = 0
  8357  01BB76  0060  F360  F026   	movff	_R+39,btemp	;volatile
  8358                           
  8359                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8360  01BB7C  0012               	return		;funcret
  8361  01BB7E                     __end_of_check_adc_scan:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _set_load_relay_two *****************
  8365 ;; Defined at:
  8366 ;;		line 129 in file "mbmc.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  mode            1  [STACK] _Bool 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1  [STACK] void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr1l, fsr1h
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:   15
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_main
  8391 ;;		_esr_check
  8392 ;; This function uses a reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text23
  8396  01BAAE                     __ptext23:
  8397                           	opt callstack 0
  8398  01BAAE                     _set_load_relay_two:
  8399                           	opt callstack 15
  8400                           
  8401                           ;mbmc.c: 129: void set_load_relay_two(_Bool mode);mbmc.c: 130: {;mbmc.c: 131:  LATDbits.
      +                          LATD5 = mode;
  8402                           ;stkvar	_mode @ sp[(0)+-1]
  8403                           
  8404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8405                           ;incstack = 0
  8406  01BAAE  0EFF               	movlw	-1
  8407  01BAB0  B0E3               	btfsc	plusw1,0,c
  8408  01BAB2  D002               	bra	u9455
  8409  01BAB4  9ABD               	bcf	189,5,c	;volatile
  8410  01BAB6  D001               	bra	u9456
  8411  01BAB8                     u9455:
  8412  01BAB8  8ABD               	bsf	189,5,c	;volatile
  8413  01BABA                     u9456:
  8414                           
  8415                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8416  01BABA  52E5               	movf	postdec1,f,c
  8417  01BABC  0012               	return		;funcret
  8418  01BABE                     __end_of_set_load_relay_two:
  8419                           	opt callstack 0
  8420                           
  8421 ;; *************** function _set_load_relay_one *****************
  8422 ;; Defined at:
  8423 ;;		line 124 in file "mbmc.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  mode            1  [STACK] _Bool 
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1  [STACK] void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr1l, fsr1h
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:   15
  8444 ;; This function calls:
  8445 ;;		Nothing
  8446 ;; This function is called by:
  8447 ;;		_main
  8448 ;;		_esr_check
  8449 ;; This function uses a reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text24
  8453  01BABE                     __ptext24:
  8454                           	opt callstack 0
  8455  01BABE                     _set_load_relay_one:
  8456                           	opt callstack 15
  8457                           
  8458                           ;mbmc.c: 124: void set_load_relay_one(_Bool mode);mbmc.c: 125: {;mbmc.c: 126:  LATDbits.
      +                          LATD4 = mode;
  8459                           ;stkvar	_mode @ sp[(0)+-1]
  8460                           
  8461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8462                           ;incstack = 0
  8463  01BABE  0EFF               	movlw	-1
  8464  01BAC0  B0E3               	btfsc	plusw1,0,c
  8465  01BAC2  D002               	bra	u9445
  8466  01BAC4  98BD               	bcf	189,4,c	;volatile
  8467  01BAC6  D001               	bra	u9446
  8468  01BAC8                     u9445:
  8469  01BAC8  88BD               	bsf	189,4,c	;volatile
  8470  01BACA                     u9446:
  8471                           
  8472                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8473  01BACA  52E5               	movf	postdec1,f,c
  8474  01BACC  0012               	return		;funcret
  8475  01BACE                     __end_of_set_load_relay_one:
  8476                           	opt callstack 0
  8477                           
  8478 ;; *************** function _eaDogM_WriteCommand *****************
  8479 ;; Defined at:
  8480 ;;		line 175 in file "eadog.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  cmd             1  [STACK] const unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1  [STACK] void 
  8487 ;; Registers used:
  8488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8489 ;; Tracked objects:
  8490 ;;		On entry : 3F/3D
  8491 ;;		On exit  : 3F/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:   25
  8501 ;; This function calls:
  8502 ;;		_send_lcd_cmd_dma
  8503 ;; This function is called by:
  8504 ;;		_main
  8505 ;; This function uses a reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text25
  8509  01BAEE                     __ptext25:
  8510                           	opt callstack 0
  8511  01BAEE                     _eaDogM_WriteCommand:
  8512                           	opt callstack 5
  8513                           
  8514                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8515                           ;stkvar	_cmd @ sp[(0)+-1]
  8516                           
  8517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8518                           ;incstack = 0
  8519  01BAEE  0EFF               	movlw	-1
  8520  01BAF0  50E3               	movf	plusw1,w,c
  8521  01BAF2  6EE6               	movwf	postinc1,c
  8522  01BAF4  EC67  F0D6         	call	_send_lcd_cmd_dma	;wreg free
  8523                           
  8524                           ; BSR set to: 0
  8525                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8526  01BAF8  52E5               	movf	postdec1,f,c
  8527  01BAFA  0012               	return		;funcret
  8528  01BAFC                     __end_of_eaDogM_WriteCommand:
  8529                           	opt callstack 0
  8530                           
  8531 ;; *************** function _convert_adc_data *****************
  8532 ;; Defined at:
  8533 ;;		line 51 in file "mbmc.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  i               1  [STACK] unsigned char 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1  [STACK] void 
  8540 ;; Registers used:
  8541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/1
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:   18
  8554 ;; This function calls:
  8555 ;;		_conv_raw_result
  8556 ;;		_lp_filter
  8557 ;; This function is called by:
  8558 ;;		_main
  8559 ;; This function uses a reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text26
  8563  019F70                     __ptext26:
  8564                           	opt callstack 0
  8565  019F70                     _convert_adc_data:
  8566                           	opt callstack 0
  8567                           
  8568                           ; BSR set to: 0
  8569                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8570  019F70  52E6               	movf	postinc1,f,c
  8571                           
  8572                           ;mbmc.c: 53:  uint8_t i = 0;
  8573                           ;stkvar	_i @ sp[(-1)+0]
  8574                           
  8575                           ;incstack = 0
  8576  019F72  0EFF               	movlw	-1
  8577  019F74  6AE3               	clrf	plusw1,c
  8578  019F76                     l10821:
  8579                           
  8580                           ;mbmc.c: 56:   if (V.calib) {
  8581  019F76  0101               	movlb	1	; () banked
  8582  019F78  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  8583  019F7A  B4D8               	btfsc	status,2,c
  8584  019F7C  D01B               	goto	l10825
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8588  019F7E  0E01               	movlw	1
  8589  019F80  6EE6               	movwf	postinc1,c
  8590                           
  8591                           ;stkvar	_i @ sp[(-2)+0]
  8592  019F82  0EFE               	movlw	-2
  8593  019F84  50E3               	movf	plusw1,w,c
  8594  019F86  6EE6               	movwf	postinc1,c
  8595  019F88  0E01               	movlw	1
  8596  019F8A  6EE6               	movwf	postinc1,c
  8597                           
  8598                           ;stkvar	_i @ sp[(-4)+0]
  8599  019F8C  0EFC               	movlw	-4
  8600  019F8E  50E3               	movf	plusw1,w,c
  8601  019F90  6EE6               	movwf	postinc1,c
  8602  019F92  EC08  F0A8         	call	_conv_raw_result	;wreg free
  8603  019F96  0060  F09B  FFE6   	movff	btemp,postinc1
  8604  019F9C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8605  019FA2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8606  019FA8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8607  019FAE  EC7D  F0C0         	call	_lp_filter	;wreg free
  8608  019FB2  D01A               	goto	L8
  8609  019FB4                     l10825:
  8610                           
  8611                           ; BSR set to: 1
  8612                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8613  019FB4  0E00               	movlw	0
  8614  019FB6  6EE6               	movwf	postinc1,c
  8615                           
  8616                           ;stkvar	_i @ sp[(-2)+0]
  8617  019FB8  0EFE               	movlw	-2
  8618  019FBA  50E3               	movf	plusw1,w,c
  8619  019FBC  6EE6               	movwf	postinc1,c
  8620  019FBE  0E00               	movlw	0
  8621  019FC0  6EE6               	movwf	postinc1,c
  8622                           
  8623                           ;stkvar	_i @ sp[(-4)+0]
  8624  019FC2  0EFC               	movlw	-4
  8625  019FC4  50E3               	movf	plusw1,w,c
  8626  019FC6  6EE6               	movwf	postinc1,c
  8627  019FC8  EC08  F0A8         	call	_conv_raw_result	;wreg free
  8628  019FCC  0060  F09B  FFE6   	movff	btemp,postinc1
  8629  019FD2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8630  019FD8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8631  019FDE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8632  019FE4  EC7D  F0C0         	call	_lp_filter	;wreg free
  8633  019FE8                     L8:
  8634                           
  8635                           ;stkvar	_i @ sp[(-1)+0]
  8636  019FE8  0EFF               	movlw	-1
  8637  019FEA  50E3               	movf	plusw1,w,c
  8638  019FEC  0D04               	mullw	4
  8639  019FEE  0EFF               	movlw	low _C
  8640  019FF0  24F3               	addwf	243,w,c
  8641  019FF2  6ED9               	movwf	fsr2l,c
  8642  019FF4  0E06               	movlw	high _C
  8643  019FF6  20F4               	addwfc	prodh,w,c
  8644  019FF8  6EDA               	movwf	fsr2h,c
  8645  019FFA  0060  F09B  FFDE   	movff	btemp,postinc2
  8646  01A000  0060  F09F  FFDE   	movff	btemp+1,postinc2
  8647  01A006  0060  F0A3  FFDE   	movff	btemp+2,postinc2
  8648  01A00C  0060  F0A7  FFDE   	movff	btemp+3,postinc2
  8649                           
  8650                           ;mbmc.c: 61:  } while (++i < 16);
  8651                           ;stkvar	_i @ sp[(-1)+0]
  8652  01A012  0EFF               	movlw	-1
  8653  01A014  2AE3               	incf	plusw1,f,c
  8654  01A016  0EFF               	movlw	-1
  8655  01A018  006F FF8C  F026    	movff	plusw1,btemp
  8656  01A01E  0E0F               	movlw	15
  8657  01A020  6426               	cpfsgt	btemp^0,c
  8658  01A022  D7A9               	goto	l10821
  8659                           
  8660                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8661  01A024  52E5               	movf	postdec1,f,c
  8662  01A026  0012               	return		;funcret
  8663  01A028                     __end_of_convert_adc_data:
  8664                           	opt callstack 0
  8665                           
  8666 ;; *************** function _clear_hid_pflags *****************
  8667 ;; Defined at:
  8668 ;;		line 51 in file "hid.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  h               1  [STACK] PTR struct H_data
  8671 ;;		 -> H(7), 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1  [STACK] void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8678 ;; Tracked objects:
  8679 ;;		On entry : 3F/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;Total ram usage:        0 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:   15
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_main
  8694 ;; This function uses a reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text27
  8698  01B7FA                     __ptext27:
  8699                           	opt callstack 0
  8700  01B7FA                     _clear_hid_pflags:
  8701                           	opt callstack 15
  8702                           
  8703                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8704                           ;stkvar	_h @ sp[(0)+-1]
  8705                           
  8706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8707                           ;incstack = 0
  8708  01B7FA  0EFF               	movlw	-1
  8709  01B7FC  50E3               	movf	plusw1,w,c
  8710  01B7FE  6ED9               	movwf	fsr2l,c
  8711  01B800  6ADA               	clrf	fsr2h,c
  8712  01B802  0E03               	movlw	3
  8713  01B804  26D9               	addwf	fsr2l,f,c
  8714  01B806  0E00               	movlw	0
  8715  01B808  6EDF               	movwf	indf2,c
  8716                           
  8717                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8718                           ;stkvar	_h @ sp[(0)+-1]
  8719  01B80A  0EFF               	movlw	-1
  8720  01B80C  50E3               	movf	plusw1,w,c
  8721  01B80E  6ED9               	movwf	fsr2l,c
  8722  01B810  6ADA               	clrf	fsr2h,c
  8723  01B812  0E05               	movlw	5
  8724  01B814  26D9               	addwf	fsr2l,f,c
  8725  01B816  0E00               	movlw	0
  8726  01B818  6EDF               	movwf	indf2,c
  8727                           
  8728                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8729  01B81A  52E5               	movf	postdec1,f,c
  8730  01B81C  0012               	return		;funcret
  8731  01B81E                     __end_of_clear_hid_pflags:
  8732                           	opt callstack 0
  8733                           
  8734 ;; *************** function _check_help *****************
  8735 ;; Defined at:
  8736 ;;		line 40 in file "mconfig.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  flipper         1  [STACK] const _Bool 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  estatus         1    0        _Bool 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1  [STACK] _Bool 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8745 ;; Tracked objects:
  8746 ;;		On entry : 3F/1
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:   27
  8757 ;; This function calls:
  8758 ;;		_StartTimer
  8759 ;;		_TimerDone
  8760 ;;		_display_help
  8761 ;;		_display_info
  8762 ;;		_get_vterm_ptr
  8763 ;;		_help_button
  8764 ;;		_mode_lamp_bright
  8765 ;;		_mode_lamp_dim
  8766 ;;		_set_display_info
  8767 ;;		_set_temp_display_help
  8768 ;;		_set_vterm
  8769 ;;		_sprintf
  8770 ;;		_update_lcd
  8771 ;;		_vterm_dump
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text28
  8778  017CE4                     __ptext28:
  8779                           	opt callstack 0
  8780  017CE4                     _check_help:
  8781                           	opt callstack 3
  8782                           
  8783                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8784                           
  8785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8786                           ;incstack = 0
  8787  017CE4  EC20  F0D9         	call	_help_button	;wreg free
  8788  017CE8  5026               	movf	btemp^0,w,c
  8789  017CEA  B4D8               	btfsc	status,2,c
  8790  017CEC  D0D0               	goto	l12797
  8791  017CEE  ECBF  F0DD         	call	_display_info	;wreg free
  8792  017CF2  0426               	decf	btemp^0,w,c
  8793  017CF4  B4D8               	btfsc	status,2,c
  8794  017CF6  D0CB               	goto	l12797
  8795                           
  8796                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8797  017CF8  0EDC               	movlw	220
  8798  017CFA  6EE6               	movwf	postinc1,c
  8799  017CFC  0E05               	movlw	5
  8800  017CFE  6EE6               	movwf	postinc1,c
  8801  017D00  0E0B               	movlw	11
  8802  017D02  6EE6               	movwf	postinc1,c
  8803  017D04  EC44  F0D8         	call	_StartTimer	;wreg free
  8804                           
  8805                           ;mconfig.c: 48:   if (V.debug)
  8806  017D08  0101               	movlb	1	; () banked
  8807  017D0A  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8808                           
  8809                           ; BSR set to: 1
  8810                           ;mconfig.c: 49:    vterm_dump();
  8811  017D0C  EC62  F0C8         	call	_vterm_dump	;wreg free
  8812                           
  8813                           ;mconfig.c: 51:   set_vterm(1);
  8814  017D10  0E01               	movlw	1
  8815  017D12  6EE6               	movwf	postinc1,c
  8816  017D14  ECA7  F0DC         	call	_set_vterm	;wreg free
  8817                           
  8818                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8819  017D18  ECBF  F0DD         	call	_display_info	;wreg free
  8820  017D1C  5026               	movf	btemp^0,w,c
  8821  017D1E  6EE6               	movwf	postinc1,c
  8822  017D20  EC67  F0DD         	call	_set_temp_display_help	;wreg free
  8823                           
  8824                           ; BSR set to: 1
  8825                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8826  017D24  0E01               	movlw	1
  8827  017D26  6EE6               	movwf	postinc1,c
  8828  017D28  ECB6  F0DC         	call	_set_display_info	;wreg free
  8829                           
  8830                           ;mconfig.c: 54:   if (flipper) {
  8831                           ;stkvar	_flipper @ sp[(0)+-1]
  8832  017D2C  0EFF               	movlw	-1
  8833  017D2E  50E3               	movf	plusw1,w,c
  8834  017D30  B4D8               	btfsc	status,2,c
  8835  017D32  D019               	goto	l12783
  8836                           
  8837                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8838  017D34  0EB0               	movlw	low STR_46
  8839  017D36  6EE6               	movwf	postinc1,c
  8840  017D38  0EFF               	movlw	high STR_46
  8841  017D3A  6EE6               	movwf	postinc1,c
  8842  017D3C  0E26               	movlw	low STR_48
  8843  017D3E  6EE6               	movwf	postinc1,c
  8844  017D40  0EFE               	movlw	high STR_48
  8845  017D42  6EE6               	movwf	postinc1,c
  8846  017D44  0E01               	movlw	1
  8847  017D46  6EE6               	movwf	postinc1,c
  8848  017D48  0E00               	movlw	0
  8849  017D4A  6EE6               	movwf	postinc1,c
  8850  017D4C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  8851  017D50  0060  F09B  FFE6   	movff	btemp,postinc1
  8852  017D56  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8853  017D5C  0E06               	movlw	6
  8854  017D5E  6EE6               	movwf	postinc1,c
  8855  017D60  ECBC  F0CB         	call	_sprintf	;wreg free
  8856                           
  8857                           ;mconfig.c: 56:   } else {
  8858  017D64  D018               	goto	l1674
  8859  017D66                     l12783:
  8860                           
  8861                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8862  017D66  0EC6               	movlw	low STR_47
  8863  017D68  6EE6               	movwf	postinc1,c
  8864  017D6A  0EFF               	movlw	high STR_47
  8865  017D6C  6EE6               	movwf	postinc1,c
  8866  017D6E  0E26               	movlw	low STR_48
  8867  017D70  6EE6               	movwf	postinc1,c
  8868  017D72  0EFE               	movlw	high STR_48
  8869  017D74  6EE6               	movwf	postinc1,c
  8870  017D76  0E01               	movlw	1
  8871  017D78  6EE6               	movwf	postinc1,c
  8872  017D7A  0E00               	movlw	0
  8873  017D7C  6EE6               	movwf	postinc1,c
  8874  017D7E  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  8875  017D82  0060  F09B  FFE6   	movff	btemp,postinc1
  8876  017D88  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8877  017D8E  0E06               	movlw	6
  8878  017D90  6EE6               	movwf	postinc1,c
  8879  017D92  ECBC  F0CB         	call	_sprintf	;wreg free
  8880  017D96                     l1674:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8884  017D96  0101               	movlb	1	; () banked
  8885  017D98  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8886  017D9A  32E8               	rrcf	wreg,f,c
  8887  017D9C  32E8               	rrcf	wreg,f,c
  8888  017D9E  0B03               	andlw	3
  8889  017DA0  0D24               	mullw	36
  8890  017DA2  0E12               	movlw	18
  8891  017DA4  26F3               	addwf	243,f,c
  8892  017DA6  0E00               	movlw	0
  8893  017DA8  22F4               	addwfc	244,f,c
  8894  017DAA  0E33               	movlw	low _T
  8895  017DAC  6E30               	movwf	(btemp+10)^0,c
  8896  017DAE  0EFB               	movlw	high _T
  8897  017DB0  6E31               	movwf	(btemp+11)^0,c
  8898  017DB2  50F3               	movf	243,w,c
  8899  017DB4  2630               	addwf	(btemp+10)^0,f,c
  8900  017DB6  50F4               	movf	244,w,c
  8901  017DB8  2231               	addwfc	(btemp+11)^0,f,c
  8902  017DBA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8903  017DC0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8904  017DC6  0EBC               	movlw	low STR_50
  8905  017DC8  6EE6               	movwf	postinc1,c
  8906  017DCA  0EFF               	movlw	high STR_50
  8907  017DCC  6EE6               	movwf	postinc1,c
  8908  017DCE  0E01               	movlw	1
  8909  017DD0  6EE6               	movwf	postinc1,c
  8910  017DD2  0E01               	movlw	1
  8911  017DD4  6EE6               	movwf	postinc1,c
  8912  017DD6  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  8913  017DDA  0060  F09B  FFE6   	movff	btemp,postinc1
  8914  017DE0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8915  017DE6  0E06               	movlw	6
  8916  017DE8  6EE6               	movwf	postinc1,c
  8917  017DEA  ECBC  F0CB         	call	_sprintf	;wreg free
  8918                           
  8919                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8920  017DEE  0101               	movlb	1	; () banked
  8921  017DF0  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8922  017DF2  32E8               	rrcf	wreg,f,c
  8923  017DF4  32E8               	rrcf	wreg,f,c
  8924  017DF6  0B03               	andlw	3
  8925  017DF8  0D24               	mullw	36
  8926  017DFA  0E33               	movlw	low _T
  8927  017DFC  6E30               	movwf	(btemp+10)^0,c
  8928  017DFE  0EFB               	movlw	high _T
  8929  017E00  6E31               	movwf	(btemp+11)^0,c
  8930  017E02  50F3               	movf	243,w,c
  8931  017E04  2630               	addwf	(btemp+10)^0,f,c
  8932  017E06  50F4               	movf	244,w,c
  8933  017E08  2231               	addwfc	(btemp+11)^0,f,c
  8934  017E0A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8935  017E10  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8936  017E16  0EBC               	movlw	low STR_50
  8937  017E18  6EE6               	movwf	postinc1,c
  8938  017E1A  0EFF               	movlw	high STR_50
  8939  017E1C  6EE6               	movwf	postinc1,c
  8940  017E1E  0E01               	movlw	1
  8941  017E20  6EE6               	movwf	postinc1,c
  8942  017E22  0E02               	movlw	2
  8943  017E24  6EE6               	movwf	postinc1,c
  8944  017E26  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  8945  017E2A  0060  F09B  FFE6   	movff	btemp,postinc1
  8946  017E30  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8947  017E36  0E06               	movlw	6
  8948  017E38  6EE6               	movwf	postinc1,c
  8949  017E3A  ECBC  F0CB         	call	_sprintf	;wreg free
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;mconfig.c: 61:   V.help_id++;
  8953  017E3E  EE20  F1A2         	lfsr	2,_V+155	;volatile
  8954  017E42  38DF               	swapf	223,w,c
  8955  017E44  6E31               	movwf	(btemp+11)^0,c
  8956  017E46  3231               	rrcf	(btemp+11)^0,f,c
  8957  017E48  3031               	rrcf	(btemp+11)^0,w,c
  8958  017E4A  0B03               	andlw	3
  8959  017E4C  6E31               	movwf	(btemp+11)^0,c
  8960  017E4E  2A31               	incf	(btemp+11)^0,f,c
  8961  017E50  3A31               	swapf	(btemp+11)^0,f,c
  8962  017E52  3631               	rlcf	(btemp+11)^0,f,c
  8963  017E54  3631               	rlcf	(btemp+11)^0,f,c
  8964  017E56  50DF               	movf	223,w,c
  8965  017E58  1831               	xorwf	(btemp+11)^0,w,c
  8966  017E5A  0B3F               	andlw	-193
  8967  017E5C  1831               	xorwf	(btemp+11)^0,w,c
  8968  017E5E  6EDF               	movwf	223,c
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8972  017E60  0EB8               	movlw	184
  8973  017E62  6EE6               	movwf	postinc1,c
  8974  017E64  0E0B               	movlw	11
  8975  017E66  6EE6               	movwf	postinc1,c
  8976  017E68  0E09               	movlw	9
  8977  017E6A  6EE6               	movwf	postinc1,c
  8978  017E6C  EC44  F0D8         	call	_StartTimer	;wreg free
  8979                           
  8980                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8981  017E70  0EB8               	movlw	184
  8982  017E72  6EE6               	movwf	postinc1,c
  8983  017E74  0E0B               	movlw	11
  8984  017E76  6EE6               	movwf	postinc1,c
  8985  017E78  0E07               	movlw	7
  8986  017E7A  6EE6               	movwf	postinc1,c
  8987  017E7C  EC44  F0D8         	call	_StartTimer	;wreg free
  8988                           
  8989                           ;mconfig.c: 64:   mode_lamp_bright();
  8990  017E80  EC7E  F0DD         	call	_mode_lamp_bright	;wreg free
  8991                           
  8992                           ;mconfig.c: 65:   update_lcd(1);
  8993  017E84  0E01               	movlw	1
  8994  017E86  6EE6               	movwf	postinc1,c
  8995  017E88  EC34  F0CB         	call	_update_lcd	;wreg free
  8996                           
  8997                           ;mconfig.c: 67:  } else {
  8998  017E8C  D032               	goto	l1675
  8999  017E8E                     l12797:
  9000                           
  9001                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9002  017E8E  0E09               	movlw	9
  9003  017E90  6EE6               	movwf	postinc1,c
  9004  017E92  ECE5  F0DA         	call	_TimerDone	;wreg free
  9005  017E96  5026               	movf	btemp^0,w,c
  9006  017E98  B4D8               	btfsc	status,2,c
  9007  017E9A  D02B               	goto	l1675
  9008                           
  9009                           ;mconfig.c: 69:    set_vterm(0);
  9010  017E9C  0E00               	movlw	0
  9011  017E9E  6EE6               	movwf	postinc1,c
  9012  017EA0  ECA7  F0DC         	call	_set_vterm	;wreg free
  9013                           
  9014                           ;mconfig.c: 70:    V.help = 0;
  9015  017EA4  0101               	movlb	1	; () banked
  9016  017EA6  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
  9017                           
  9018                           ; BSR set to: 1
  9019                           ;mconfig.c: 71:    set_display_info(display_help());
  9020  017EA8  ECC3  F0DD         	call	_display_help	;wreg free
  9021  017EAC  5026               	movf	btemp^0,w,c
  9022  017EAE  6EE6               	movwf	postinc1,c
  9023  017EB0  ECB6  F0DC         	call	_set_display_info	;wreg free
  9024                           
  9025                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9026  017EB4  0060  F673  FFE6   	movff	_V+149,postinc1
  9027  017EBA  0060  F677  FFE6   	movff	_V+150,postinc1
  9028  017EC0  EC0B  F0DD         	call	_mode_lamp_dim	;wreg free
  9029                           
  9030                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9031  017EC4  0E0B               	movlw	11
  9032  017EC6  6EE6               	movwf	postinc1,c
  9033  017EC8  ECE5  F0DA         	call	_TimerDone	;wreg free
  9034  017ECC  5026               	movf	btemp^0,w,c
  9035  017ECE  B4D8               	btfsc	status,2,c
  9036  017ED0  D010               	goto	l1675
  9037                           
  9038                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9039  017ED2  0101               	movlb	1	; () banked
  9040  017ED4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  9041  017ED6  A4D8               	btfss	status,2,c
  9042  017ED8  D002               	goto	u12380
  9043  017EDA  0E01               	movlw	1
  9044  017EDC  D001               	goto	u12390
  9045  017EDE                     u12380:
  9046  017EDE  0E00               	movlw	0
  9047  017EE0                     u12390:
  9048  017EE0  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  9049                           
  9050                           ; BSR set to: 1
  9051                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9052  017EE2  0EDC               	movlw	220
  9053  017EE4  6EE6               	movwf	postinc1,c
  9054  017EE6  0E05               	movlw	5
  9055  017EE8  6EE6               	movwf	postinc1,c
  9056  017EEA  0E0B               	movlw	11
  9057  017EEC  6EE6               	movwf	postinc1,c
  9058  017EEE  EC44  F0D8         	call	_StartTimer	;wreg free
  9059  017EF2                     l1675:
  9060                           
  9061                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9062  017EF2  52E5               	movf	postdec1,f,c
  9063  017EF4  0012               	return		;funcret
  9064  017EF6                     __end_of_check_help:
  9065                           	opt callstack 0
  9066                           
  9067 ;; *************** function _vterm_dump *****************
  9068 ;; Defined at:
  9069 ;;		line 121 in file "mconfig.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1  [STACK] void 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9078 ;; Tracked objects:
  9079 ;;		On entry : 3F/1
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:   26
  9090 ;; This function calls:
  9091 ;;		_WaitMs
  9092 ;;		_eaDogM_WriteStringAtPos
  9093 ;;		_get_vterm_ptr
  9094 ;;		_sprintf
  9095 ;;		_wait_lcd_done
  9096 ;; This function is called by:
  9097 ;;		_check_help
  9098 ;; This function uses a reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text29
  9102  0190C4                     __ptext29:
  9103                           	opt callstack 0
  9104  0190C4                     _vterm_dump:
  9105                           	opt callstack 3
  9106                           
  9107                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9108                           
  9109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9110                           ;incstack = 0
  9111  0190C4  0E01               	movlw	1
  9112  0190C6  6EE6               	movwf	postinc1,c
  9113  0190C8  0E00               	movlw	0
  9114  0190CA  6EE6               	movwf	postinc1,c
  9115  0190CC  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9116  0190D0  0060  F09B  FFE6   	movff	btemp,postinc1
  9117  0190D6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9118  0190DC  0E00               	movlw	0
  9119  0190DE  6EE6               	movwf	postinc1,c
  9120  0190E0  0E00               	movlw	0
  9121  0190E2  6EE6               	movwf	postinc1,c
  9122  0190E4  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9123  0190E8  0060  F09B  FFE6   	movff	btemp,postinc1
  9124  0190EE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9125  0190F4  0E92               	movlw	low STR_52
  9126  0190F6  6EE6               	movwf	postinc1,c
  9127  0190F8  0EFF               	movlw	high STR_52
  9128  0190FA  6EE6               	movwf	postinc1,c
  9129  0190FC  0E08               	movlw	low (_V+1)
  9130  0190FE  6EE6               	movwf	postinc1,c
  9131  019100  0E01               	movlw	high (_V+1)
  9132  019102  6EE6               	movwf	postinc1,c
  9133  019104  0E08               	movlw	8
  9134  019106  6EE6               	movwf	postinc1,c
  9135  019108  ECBC  F0CB         	call	_sprintf	;wreg free
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;mconfig.c: 124:  wait_lcd_done();
  9139  01910C  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9143  019110  0E08               	movlw	low (_V+1)
  9144  019112  6EE6               	movwf	postinc1,c
  9145  019114  0E01               	movlw	high (_V+1)
  9146  019116  6EE6               	movwf	postinc1,c
  9147  019118  0E00               	movlw	0
  9148  01911A  6EE6               	movwf	postinc1,c
  9149  01911C  0E00               	movlw	0
  9150  01911E  6EE6               	movwf	postinc1,c
  9151  019120  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9152                           
  9153                           ; BSR set to: 59
  9154                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9155  019124  0E01               	movlw	1
  9156  019126  6EE6               	movwf	postinc1,c
  9157  019128  0E01               	movlw	1
  9158  01912A  6EE6               	movwf	postinc1,c
  9159  01912C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9160  019130  0060  F09B  FFE6   	movff	btemp,postinc1
  9161  019136  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9162  01913C  0E00               	movlw	0
  9163  01913E  6EE6               	movwf	postinc1,c
  9164  019140  0E01               	movlw	1
  9165  019142  6EE6               	movwf	postinc1,c
  9166  019144  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9167  019148  0060  F09B  FFE6   	movff	btemp,postinc1
  9168  01914E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9169  019154  0E92               	movlw	low STR_52
  9170  019156  6EE6               	movwf	postinc1,c
  9171  019158  0EFF               	movlw	high STR_52
  9172  01915A  6EE6               	movwf	postinc1,c
  9173  01915C  0E08               	movlw	low (_V+1)
  9174  01915E  6EE6               	movwf	postinc1,c
  9175  019160  0E01               	movlw	high (_V+1)
  9176  019162  6EE6               	movwf	postinc1,c
  9177  019164  0E08               	movlw	8
  9178  019166  6EE6               	movwf	postinc1,c
  9179  019168  ECBC  F0CB         	call	_sprintf	;wreg free
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;mconfig.c: 127:  wait_lcd_done();
  9183  01916C  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9184                           
  9185                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9186  019170  0E08               	movlw	low (_V+1)
  9187  019172  6EE6               	movwf	postinc1,c
  9188  019174  0E01               	movlw	high (_V+1)
  9189  019176  6EE6               	movwf	postinc1,c
  9190  019178  0E00               	movlw	0
  9191  01917A  6EE6               	movwf	postinc1,c
  9192  01917C  0E01               	movlw	1
  9193  01917E  6EE6               	movwf	postinc1,c
  9194  019180  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9195                           
  9196                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9197  019184  0E01               	movlw	1
  9198  019186  6EE6               	movwf	postinc1,c
  9199  019188  0E02               	movlw	2
  9200  01918A  6EE6               	movwf	postinc1,c
  9201  01918C  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9202  019190  0060  F09B  FFE6   	movff	btemp,postinc1
  9203  019196  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9204  01919C  0E00               	movlw	0
  9205  01919E  6EE6               	movwf	postinc1,c
  9206  0191A0  0E02               	movlw	2
  9207  0191A2  6EE6               	movwf	postinc1,c
  9208  0191A4  EC3A  F0DA         	call	_get_vterm_ptr	;wreg free
  9209  0191A8  0060  F09B  FFE6   	movff	btemp,postinc1
  9210  0191AE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9211  0191B4  0E92               	movlw	low STR_52
  9212  0191B6  6EE6               	movwf	postinc1,c
  9213  0191B8  0EFF               	movlw	high STR_52
  9214  0191BA  6EE6               	movwf	postinc1,c
  9215  0191BC  0E08               	movlw	low (_V+1)
  9216  0191BE  6EE6               	movwf	postinc1,c
  9217  0191C0  0E01               	movlw	high (_V+1)
  9218  0191C2  6EE6               	movwf	postinc1,c
  9219  0191C4  0E08               	movlw	8
  9220  0191C6  6EE6               	movwf	postinc1,c
  9221  0191C8  ECBC  F0CB         	call	_sprintf	;wreg free
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;mconfig.c: 130:  wait_lcd_done();
  9225  0191CC  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9229  0191D0  0E08               	movlw	low (_V+1)
  9230  0191D2  6EE6               	movwf	postinc1,c
  9231  0191D4  0E01               	movlw	high (_V+1)
  9232  0191D6  6EE6               	movwf	postinc1,c
  9233  0191D8  0E00               	movlw	0
  9234  0191DA  6EE6               	movwf	postinc1,c
  9235  0191DC  0E02               	movlw	2
  9236  0191DE  6EE6               	movwf	postinc1,c
  9237  0191E0  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9238                           
  9239                           ; BSR set to: 59
  9240                           ;mconfig.c: 132:  WaitMs(3000);
  9241  0191E4  0EB8               	movlw	184
  9242  0191E6  6EE6               	movwf	postinc1,c
  9243  0191E8  0E0B               	movlw	11
  9244  0191EA  6EE6               	movwf	postinc1,c
  9245  0191EC  EC58  F0D9         	call	_WaitMs	;wreg free
  9246                           
  9247                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9248  0191F0  0012               	return		;funcret
  9249  0191F2                     __end_of_vterm_dump:
  9250                           	opt callstack 0
  9251                           
  9252 ;; *************** function _sprintf *****************
  9253 ;; Defined at:
  9254 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  s               2  [STACK] PTR unsigned char 
  9257 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9258 ;;  fmt             2  [STACK] PTR const unsigned char 
  9259 ;;		 -> STR_65(106), STR_63(3), STR_62(3), STR_61(19), 
  9260 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9261 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9262 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9263 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9264 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9265 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9266 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9267 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9268 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9269 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9270 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9271 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9272 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9273 ;;		 -> STR_2(15), STR_1(17), 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  f               6  [STACK] struct _IO_FILE
  9276 ;;  ap              2  [STACK] PTR void [1]
  9277 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9278 ;;  ret             2    0        int 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  2  [STACK] int 
  9281 ;; Registers used:
  9282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/1
  9285 ;;		On exit  : 3F/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;Total ram usage:        0 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:   23
  9295 ;; This function calls:
  9296 ;;		_vfprintf
  9297 ;; This function is called by:
  9298 ;;		_main
  9299 ;;		_check_help
  9300 ;;		_vterm_dump
  9301 ;;		_calc_bsoc
  9302 ;; This function uses a reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text30
  9306  019778                     __ptext30:
  9307                           	opt callstack 0
  9308  019778                     _sprintf:
  9309                           	opt callstack 0
  9310                           
  9311                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 72, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9312  019778  0E08               	movlw	8
  9313  01977A  26E1               	addwf	fsr1l,f,c
  9314  01977C  0E00               	movlw	0
  9315  01977E  22E2               	addwfc	fsr1h,f,c
  9316                           
  9317                           ;incstack = 0
  9318 ;; hardware stack exceeded
  9319  019780  0EFE               	movlw	254
  9320  019782  6E30               	movwf	(btemp+10)^0,c
  9321  019784  0EFF               	movlw	255
  9322  019786  6E31               	movwf	(btemp+11)^0,c
  9323                           
  9324                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9325  019788  0EF5               	movlw	245
  9326  01978A  24E1               	addwf	fsr1l,w,c
  9327  01978C  6E2E               	movwf	(btemp+8)^0,c
  9328  01978E  0EFF               	movlw	255
  9329  019790  20E2               	addwfc	fsr1h,w,c
  9330  019792  6E2F               	movwf	(btemp+9)^0,c
  9331  019794  5030               	movf	(btemp+10)^0,w,c
  9332  019796  262E               	addwf	(btemp+8)^0,f,c
  9333  019798  5031               	movf	(btemp+11)^0,w,c
  9334  01979A  222F               	addwfc	(btemp+9)^0,f,c
  9335                           
  9336                           ;stkvar	_ap @ sp[(-8)+6]
  9337  01979C  0EFF               	movlw	-1
  9338  01979E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
  9339  0197A4  0EFE               	movlw	-2
  9340  0197A6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
  9341                           
  9342                           ;stkvar	_s @ sp[(-8)+-3]
  9343  0197AC  0EF5               	movlw	-11
  9344  0197AE  006F FF8C  F030    	movff	plusw1,btemp+10
  9345  0197B4  0EF6               	movlw	-10
  9346  0197B6  006F FF8C  F031    	movff	plusw1,btemp+11
  9347                           
  9348                           ;stkvar	_f @ sp[(-8)+0]
  9349  0197BC  0EF9               	movlw	-7
  9350  0197BE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  9351  0197C4  0EF8               	movlw	-8
  9352  0197C6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  9353                           
  9354                           ;stkvar	_f @ sp[(-8)+0]
  9355  0197CC  0EFA               	movlw	250
  9356  0197CE  24E1               	addwf	fsr1l,w,c
  9357  0197D0  6ED9               	movwf	fsr2l,c
  9358  0197D2  0EFF               	movlw	255
  9359  0197D4  20E2               	addwfc	fsr1h,w,c
  9360  0197D6  6EDA               	movwf	fsr2h,c
  9361  0197D8  0E00               	movlw	0
  9362  0197DA  6EDE               	movwf	postinc2,c
  9363  0197DC  0E00               	movlw	0
  9364  0197DE  6EDD               	movwf	postdec2,c
  9365                           
  9366                           ;stkvar	_f @ sp[(-8)+0]
  9367  0197E0  0EFC               	movlw	252
  9368  0197E2  24E1               	addwf	fsr1l,w,c
  9369  0197E4  6ED9               	movwf	fsr2l,c
  9370  0197E6  0EFF               	movlw	255
  9371  0197E8  20E2               	addwfc	fsr1h,w,c
  9372  0197EA  6EDA               	movwf	fsr2h,c
  9373  0197EC  0E00               	movlw	0
  9374  0197EE  6EDE               	movwf	postinc2,c
  9375  0197F0  0E00               	movlw	0
  9376  0197F2  6EDD               	movwf	postdec2,c
  9377                           
  9378                           ;stkvar	_ap @ sp[(-8)+6]
  9379  0197F4  0EFE               	movlw	254
  9380  0197F6  24E1               	addwf	fsr1l,w,c
  9381  0197F8  6E26               	movwf	btemp^0,c
  9382  0197FA  0EFF               	movlw	255
  9383  0197FC  20E2               	addwfc	fsr1h,w,c
  9384  0197FE  6E27               	movwf	(btemp+1)^0,c
  9385  019800  0060  F09B  FFE6   	movff	btemp,postinc1
  9386  019806  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9387                           
  9388                           ;stkvar	_fmt @ sp[(-10)+-5]
  9389  01980C  0EF1               	movlw	-15
  9390  01980E  006F FF8F FFE6     	movff	plusw1,postinc1
  9391  019814  006F FF8F FFE6     	movff	plusw1,postinc1
  9392                           
  9393                           ;stkvar	_f @ sp[(-12)+0]
  9394  01981A  0EF4               	movlw	244
  9395  01981C  24E1               	addwf	fsr1l,w,c
  9396  01981E  6E26               	movwf	btemp^0,c
  9397  019820  0EFF               	movlw	255
  9398  019822  20E2               	addwfc	fsr1h,w,c
  9399  019824  6E27               	movwf	(btemp+1)^0,c
  9400  019826  0060  F09B  FFE6   	movff	btemp,postinc1
  9401  01982C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9402  019832  EC6B  F0D0         	call	_vfprintf	;wreg free
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;stkvar	_f @ sp[(-8)+0]
  9406  019836  0EFA               	movlw	250
  9407  019838  24E1               	addwf	fsr1l,w,c
  9408  01983A  6ED9               	movwf	fsr2l,c
  9409  01983C  0EFF               	movlw	255
  9410  01983E  20E2               	addwfc	fsr1h,w,c
  9411  019840  6EDA               	movwf	fsr2h,c
  9412  019842  006F FF78  F030    	movff	postinc2,btemp+10
  9413  019848  006F FF74  F031    	movff	postdec2,btemp+11
  9414                           
  9415                           ;stkvar	_s @ sp[(-8)+-3]
  9416  01984E  0EF5               	movlw	-11
  9417  019850  006F FF8C  F02E    	movff	plusw1,btemp+8
  9418  019856  0EF6               	movlw	-10
  9419  019858  006F FF8C  F02F    	movff	plusw1,btemp+9
  9420  01985E  5030               	movf	(btemp+10)^0,w,c
  9421  019860  242E               	addwf	(btemp+8)^0,w,c
  9422  019862  6ED9               	movwf	fsr2l,c
  9423  019864  5031               	movf	(btemp+11)^0,w,c
  9424  019866  202F               	addwfc	(btemp+9)^0,w,c
  9425  019868  6EDA               	movwf	fsr2h,c
  9426  01986A  0E00               	movlw	0
  9427  01986C  6EDF               	movwf	indf2,c
  9428                           
  9429                           ; BSR set to: 0
  9430                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 72, args
      +                          ize = 4, vargsize = 0
  9431  01986E  0EF8               	movlw	248
  9432  019870  26E1               	addwf	fsr1l,f,c
  9433  019872  0EFF               	movlw	255
  9434  019874  22E2               	addwfc	fsr1h,f,c
  9435  019876  52E5               	movf	postdec1,f,c
  9436  019878  50E7               	movf	indf1,w,c
  9437  01987A  5EE1               	subwf	fsr1l,f,c
  9438  01987C  0E00               	movlw	0
  9439  01987E  5AE2               	subwfb	fsr1h,f,c
  9440  019880  0012               	return		;funcret
  9441  019882                     __end_of_sprintf:
  9442                           	opt callstack 0
  9443                           
  9444 ;; *************** function _get_vterm_ptr *****************
  9445 ;; Defined at:
  9446 ;;		line 116 in file "mconfig.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  line            1  [STACK] const unsigned char 
  9449 ;;  vterm           1  [STACK] const unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  2  [STACK] PTR unsigned char 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/1
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;Total ram usage:        0 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:   15
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_main
  9472 ;;		_check_help
  9473 ;;		_vterm_dump
  9474 ;; This function uses a reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text31
  9478  01B474                     __ptext31:
  9479                           	opt callstack 0
  9480  01B474                     _get_vterm_ptr:
  9481                           	opt callstack 15
  9482                           
  9483                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9484                           ;stkvar	_vterm @ sp[(0)+-2]
  9485                           
  9486                           ; BSR set to: 0
  9487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9488                           ;incstack = 0
  9489  01B474  0EFE               	movlw	-2
  9490  01B476  50E3               	movf	plusw1,w,c
  9491  01B478  0B03               	andlw	3
  9492  01B47A  0D78               	mullw	120
  9493  01B47C  0E26               	movlw	low _D
  9494  01B47E  6E26               	movwf	btemp^0,c
  9495  01B480  0E08               	movlw	high _D
  9496  01B482  6E27               	movwf	(btemp+1)^0,c
  9497  01B484  50F3               	movf	243,w,c
  9498  01B486  2626               	addwf	btemp^0,f,c
  9499  01B488  50F4               	movf	244,w,c
  9500  01B48A  2227               	addwfc	(btemp+1)^0,f,c
  9501                           
  9502                           ;stkvar	_line @ sp[(0)+-1]
  9503  01B48C  0EFF               	movlw	-1
  9504  01B48E  50E3               	movf	plusw1,w,c
  9505  01B490  0B03               	andlw	3
  9506  01B492  0D28               	mullw	40
  9507  01B494  50F3               	movf	243,w,c
  9508  01B496  2626               	addwf	btemp^0,f,c
  9509  01B498  50F4               	movf	244,w,c
  9510  01B49A  2227               	addwfc	(btemp+1)^0,f,c
  9511                           
  9512                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9513  01B49C  52E5               	movf	postdec1,f,c
  9514  01B49E  52E5               	movf	postdec1,f,c
  9515  01B4A0  0012               	return		;funcret
  9516  01B4A2                     __end_of_get_vterm_ptr:
  9517                           	opt callstack 0
  9518                           
  9519 ;; *************** function _WaitMs *****************
  9520 ;; Defined at:
  9521 ;;		line 32 in file "timers.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;  numMilliseco    2  [STACK] const unsigned short 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1  [STACK] void 
  9528 ;; Registers used:
  9529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/1
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:   16
  9542 ;; This function calls:
  9543 ;;		_StartTimer
  9544 ;;		_TimerDone
  9545 ;; This function is called by:
  9546 ;;		_main
  9547 ;;		_vterm_dump
  9548 ;; This function uses a reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text32
  9552  01B2B0                     __ptext32:
  9553                           	opt callstack 0
  9554  01B2B0                     _WaitMs:
  9555                           	opt callstack 12
  9556                           
  9557                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9558                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9559                           
  9560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9561                           ;incstack = 0
  9562  01B2B0  0EFE               	movlw	-2
  9563  01B2B2  006F FF8F FFE6     	movff	plusw1,postinc1
  9564  01B2B8  006F FF8F FFE6     	movff	plusw1,postinc1
  9565  01B2BE  0E00               	movlw	0
  9566  01B2C0  6EE6               	movwf	postinc1,c
  9567  01B2C2  EC44  F0D8         	call	_StartTimer	;wreg free
  9568                           
  9569                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9570  01B2C6  D005               	goto	l9775
  9571  01B2C8                     l1606:
  9572                           
  9573                           ;timers.c: 36:   __nop();
  9574  01B2C8  F000               	nop	
  9575                           
  9576                           ;timers.c: 37:   __nop();
  9577  01B2CA  F000               	nop	
  9578                           
  9579                           ;timers.c: 38:   __nop();
  9580  01B2CC  F000               	nop	
  9581                           
  9582                           ;timers.c: 39:   __nop();
  9583  01B2CE  F000               	nop	
  9584  01B2D0  0004               	clrwdt		;# 
  9585  01B2D2                     l9775:
  9586                           
  9587                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9588  01B2D2  0E00               	movlw	0
  9589  01B2D4  6EE6               	movwf	postinc1,c
  9590  01B2D6  ECE5  F0DA         	call	_TimerDone	;wreg free
  9591  01B2DA  5026               	movf	btemp^0,w,c
  9592  01B2DC  B4D8               	btfsc	status,2,c
  9593  01B2DE  D7F4               	goto	l1606
  9594                           
  9595                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9596  01B2E0  52E5               	movf	postdec1,f,c
  9597  01B2E2  52E5               	movf	postdec1,f,c
  9598  01B2E4  0012               	return		;funcret
  9599  01B2E6                     __end_of_WaitMs:
  9600                           	opt callstack 0
  9601                           
  9602 ;; *************** function _update_lcd *****************
  9603 ;; Defined at:
  9604 ;;		line 85 in file "mconfig.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  vterm           1  [STACK] unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1  [STACK] unsigned char 
  9611 ;; Registers used:
  9612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:   26
  9625 ;; This function calls:
  9626 ;;		_eaDogM_WriteStringAtPos
  9627 ;;		_wait_lcd_done
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;;		_check_help
  9631 ;; This function uses a reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text33
  9635  019668                     __ptext33:
  9636                           	opt callstack 0
  9637  019668                     _update_lcd:
  9638                           	opt callstack 4
  9639                           
  9640                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9641                           ;stkvar	_vterm @ sp[(0)+-1]
  9642                           
  9643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9644                           ;incstack = 0
  9645  019668  0EFF               	movlw	-1
  9646  01966A  006F FF8C  F026    	movff	plusw1,btemp
  9647  019670  0E03               	movlw	3
  9648  019672  1626               	andwf	btemp^0,f,c
  9649  019674  0EFF               	movlw	-1
  9650  019676  0060  F09B  FFE3   	movff	btemp,plusw1
  9651                           
  9652                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9653  01967C  EE22  F206         	lfsr	2,_D+480
  9654  019680  A0DF               	btfss	indf2,0,c
  9655  019682  D004               	goto	l12559
  9656                           
  9657                           ;stkvar	_vterm @ sp[(0)+-1]
  9658  019684  0EFF               	movlw	-1
  9659  019686  50E3               	movf	plusw1,w,c
  9660  019688  B4D8               	btfsc	status,2,c
  9661  01968A  D074               	goto	l1682
  9662  01968C                     l12559:
  9663                           
  9664                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9665                           ;stkvar	_vterm @ sp[(0)+-1]
  9666  01968C  0EFF               	movlw	-1
  9667  01968E  50E3               	movf	plusw1,w,c
  9668  019690  0D78               	mullw	120
  9669  019692  0E36               	movlw	low (_D+16)
  9670  019694  24F3               	addwf	243,w,c
  9671  019696  6ED9               	movwf	fsr2l,c
  9672  019698  0E08               	movlw	high (_D+16)
  9673  01969A  20F4               	addwfc	prodh,w,c
  9674  01969C  6EDA               	movwf	fsr2h,c
  9675  01969E  0E00               	movlw	0
  9676  0196A0  6EDF               	movwf	indf2,c
  9677                           
  9678                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9679                           ;stkvar	_vterm @ sp[(0)+-1]
  9680  0196A2  0EFF               	movlw	-1
  9681  0196A4  50E3               	movf	plusw1,w,c
  9682  0196A6  0D78               	mullw	120
  9683  0196A8  0E5E               	movlw	low (_D+56)
  9684  0196AA  24F3               	addwf	243,w,c
  9685  0196AC  6ED9               	movwf	fsr2l,c
  9686  0196AE  0E08               	movlw	high (_D+56)
  9687  0196B0  20F4               	addwfc	prodh,w,c
  9688  0196B2  6EDA               	movwf	fsr2h,c
  9689  0196B4  0E00               	movlw	0
  9690  0196B6  6EDF               	movwf	indf2,c
  9691                           
  9692                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9693                           ;stkvar	_vterm @ sp[(0)+-1]
  9694  0196B8  0EFF               	movlw	-1
  9695  0196BA  50E3               	movf	plusw1,w,c
  9696  0196BC  0D78               	mullw	120
  9697  0196BE  0E86               	movlw	low (_D+96)
  9698  0196C0  24F3               	addwf	243,w,c
  9699  0196C2  6ED9               	movwf	fsr2l,c
  9700  0196C4  0E08               	movlw	high (_D+96)
  9701  0196C6  20F4               	addwfc	prodh,w,c
  9702  0196C8  6EDA               	movwf	fsr2h,c
  9703  0196CA  0E00               	movlw	0
  9704  0196CC  6EDF               	movwf	indf2,c
  9705                           
  9706                           ;mconfig.c: 95:  wait_lcd_done();
  9707  0196CE  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9711                           ;stkvar	_vterm @ sp[(0)+-1]
  9712  0196D2  0EFF               	movlw	-1
  9713  0196D4  50E3               	movf	plusw1,w,c
  9714  0196D6  0D78               	mullw	120
  9715  0196D8  0E26               	movlw	low _D
  9716  0196DA  6E30               	movwf	(btemp+10)^0,c
  9717  0196DC  0E08               	movlw	high _D
  9718  0196DE  6E31               	movwf	(btemp+11)^0,c
  9719  0196E0  50F3               	movf	243,w,c
  9720  0196E2  2630               	addwf	(btemp+10)^0,f,c
  9721  0196E4  50F4               	movf	244,w,c
  9722  0196E6  2231               	addwfc	(btemp+11)^0,f,c
  9723  0196E8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9724  0196EE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9725  0196F4  0E00               	movlw	0
  9726  0196F6  6EE6               	movwf	postinc1,c
  9727  0196F8  0E00               	movlw	0
  9728  0196FA  6EE6               	movwf	postinc1,c
  9729  0196FC  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9730                           
  9731                           ; BSR set to: 59
  9732                           ;mconfig.c: 97:  wait_lcd_done();
  9733  019700  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9737                           ;stkvar	_vterm @ sp[(0)+-1]
  9738  019704  0EFF               	movlw	-1
  9739  019706  50E3               	movf	plusw1,w,c
  9740  019708  0D78               	mullw	120
  9741  01970A  0E26               	movlw	low _D
  9742  01970C  6E30               	movwf	(btemp+10)^0,c
  9743  01970E  0E08               	movlw	high _D
  9744  019710  6E31               	movwf	(btemp+11)^0,c
  9745  019712  0E28               	movlw	40
  9746  019714  2630               	addwf	(btemp+10)^0,f,c
  9747  019716  0E00               	movlw	0
  9748  019718  2231               	addwfc	(btemp+11)^0,f,c
  9749  01971A  50F3               	movf	243,w,c
  9750  01971C  2630               	addwf	(btemp+10)^0,f,c
  9751  01971E  50F4               	movf	244,w,c
  9752  019720  2231               	addwfc	(btemp+11)^0,f,c
  9753  019722  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9754  019728  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9755  01972E  0E00               	movlw	0
  9756  019730  6EE6               	movwf	postinc1,c
  9757  019732  0E01               	movlw	1
  9758  019734  6EE6               	movwf	postinc1,c
  9759  019736  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9760                           
  9761                           ; BSR set to: 59
  9762                           ;mconfig.c: 99:  wait_lcd_done();
  9763  01973A  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9767                           ;stkvar	_vterm @ sp[(0)+-1]
  9768  01973E  0EFF               	movlw	-1
  9769  019740  50E3               	movf	plusw1,w,c
  9770  019742  0D78               	mullw	120
  9771  019744  0E26               	movlw	low _D
  9772  019746  6E30               	movwf	(btemp+10)^0,c
  9773  019748  0E08               	movlw	high _D
  9774  01974A  6E31               	movwf	(btemp+11)^0,c
  9775  01974C  0E50               	movlw	80
  9776  01974E  2630               	addwf	(btemp+10)^0,f,c
  9777  019750  0E00               	movlw	0
  9778  019752  2231               	addwfc	(btemp+11)^0,f,c
  9779  019754  50F3               	movf	243,w,c
  9780  019756  2630               	addwf	(btemp+10)^0,f,c
  9781  019758  50F4               	movf	244,w,c
  9782  01975A  2231               	addwfc	(btemp+11)^0,f,c
  9783  01975C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9784  019762  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9785  019768  0E00               	movlw	0
  9786  01976A  6EE6               	movwf	postinc1,c
  9787  01976C  0E02               	movlw	2
  9788  01976E  6EE6               	movwf	postinc1,c
  9789  019770  EC73  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
  9790  019774                     l1682:
  9791                           
  9792                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9793  019774  52E5               	movf	postdec1,f,c
  9794  019776  0012               	return		;funcret
  9795  019778                     __end_of_update_lcd:
  9796                           	opt callstack 0
  9797                           
  9798 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9799 ;; Defined at:
  9800 ;;		line 278 in file "eadog.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  r               1  [STACK] const unsigned char 
  9803 ;;  c               1  [STACK] const unsigned char 
  9804 ;;  strPtr          2  [STACK] PTR unsigned char 
  9805 ;;		 -> D.lcd(480), D(482), V(191), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1  [STACK] void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9812 ;; Tracked objects:
  9813 ;;		On entry : 3F/0
  9814 ;;		On exit  : 3F/3B
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;Total ram usage:        0 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; Hardware stack levels required when called:   25
  9824 ;; This function calls:
  9825 ;;		_eaDogM_WriteString
  9826 ;;		_send_lcd_cmd_dma
  9827 ;; This function is called by:
  9828 ;;		_update_lcd
  9829 ;;		_vterm_dump
  9830 ;; This function uses a reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text34
  9834  01B2E6                     __ptext34:
  9835                           	opt callstack 0
  9836  01B2E6                     _eaDogM_WriteStringAtPos:
  9837                           	opt callstack 4
  9838                           
  9839                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9840                           ;stkvar	_c @ sp[(0)+-2]
  9841                           
  9842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9843                           ;incstack = 0
  9844  01B2E6  0EFE               	movlw	-2
  9845  01B2E8  006F FF8C  F031    	movff	plusw1,btemp+11
  9846                           
  9847                           ;stkvar	_r @ sp[(0)+-1]
  9848  01B2EE  0EFF               	movlw	-1
  9849  01B2F0  50E3               	movf	plusw1,w,c
  9850  01B2F2  0D10               	mullw	16
  9851  01B2F4  50F3               	movf	243,w,c
  9852  01B2F6  2431               	addwf	(btemp+11)^0,w,c
  9853  01B2F8  0F80               	addlw	128
  9854  01B2FA  6EE6               	movwf	postinc1,c
  9855  01B2FC  EC67  F0D6         	call	_send_lcd_cmd_dma	;wreg free
  9856                           
  9857                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9858                           ;stkvar	_strPtr @ sp[(0)+-4]
  9859  01B300  0EFC               	movlw	-4
  9860  01B302  006F FF8F FFE6     	movff	plusw1,postinc1
  9861  01B308  006F FF8F FFE6     	movff	plusw1,postinc1
  9862  01B30E  EC6A  F0D1         	call	_eaDogM_WriteString	;wreg free
  9863                           
  9864                           ; BSR set to: 59
  9865                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9866  01B312  52E5               	movf	postdec1,f,c
  9867  01B314  52E5               	movf	postdec1,f,c
  9868  01B316  52E5               	movf	postdec1,f,c
  9869  01B318  52E5               	movf	postdec1,f,c
  9870  01B31A  0012               	return		;funcret
  9871  01B31C                     __end_of_eaDogM_WriteStringAtPos:
  9872                           	opt callstack 0
  9873                           
  9874 ;; *************** function _send_lcd_cmd_dma *****************
  9875 ;; Defined at:
  9876 ;;		line 220 in file "eadog.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  strPtr          1  [STACK] unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1  [STACK] void 
  9883 ;; Registers used:
  9884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/3D
  9887 ;;		On exit  : 3F/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9894 ;;Total ram usage:        0 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:   24
  9897 ;; This function calls:
  9898 ;;		_printf
  9899 ;;		_ringBufS_flush
  9900 ;;		_start_lcd
  9901 ;;		_wait_lcd_done
  9902 ;;		_wait_lcd_set
  9903 ;; This function is called by:
  9904 ;;		_eaDogM_WriteCommand
  9905 ;;		_eaDogM_WriteStringAtPos
  9906 ;; This function uses a reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text35
  9910  01ACCE                     __ptext35:
  9911                           	opt callstack 0
  9912  01ACCE                     _send_lcd_cmd_dma:
  9913                           	opt callstack 4
  9914                           
  9915                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9916                           
  9917                           ; BSR set to: 59
  9918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9919                           ;incstack = 0
  9920  01ACCE  ECCE  F0DD         	call	_wait_lcd_set	;wreg free
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9924  01ACD2  0E00               	movlw	0
  9925  01ACD4  6EE6               	movwf	postinc1,c
  9926  01ACD6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9927  01ACDC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9928  01ACE2  ECA4  F0D2         	call	_ringBufS_flush	;wreg free
  9929  01ACE6  92BC               	bcf	188,1,c	;volatile
  9930  01ACE8  94BC               	bcf	188,2,c	;volatile
  9931                           
  9932                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9933  01ACEA  013B               	movlb	59	; () banked
  9934  01ACEC  9FFC               	bcf	252,7,b	;volatile
  9935                           
  9936                           ; BSR set to: 59
  9937                           ;eadog.c: 229:  DMA1SSZ = 1;
  9938  01ACEE  0E00               	movlw	0
  9939  01ACF0  6FF8               	movwf	248,b	;volatile
  9940  01ACF2  0E01               	movlw	1
  9941  01ACF4  6FF7               	movwf	247,b	;volatile
  9942                           
  9943                           ; BSR set to: 59
  9944                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9945  01ACF6  8FFC               	bsf	252,7,b	;volatile
  9946                           
  9947                           ; BSR set to: 59
  9948                           ;eadog.c: 231:  printf("%c", strPtr);
  9949                           ;stkvar	_strPtr @ sp[(0)+-1]
  9950  01ACF8  0EFF               	movlw	-1
  9951  01ACFA  50E3               	movf	plusw1,w,c
  9952  01ACFC  6EE6               	movwf	postinc1,c
  9953  01ACFE  0E00               	movlw	0
  9954  01AD00  6EE6               	movwf	postinc1,c
  9955  01AD02  0EF8               	movlw	low STR_44
  9956  01AD04  6EE6               	movwf	postinc1,c
  9957  01AD06  0EFF               	movlw	high STR_44
  9958  01AD08  6EE6               	movwf	postinc1,c
  9959  01AD0A  0E04               	movlw	4
  9960  01AD0C  6EE6               	movwf	postinc1,c
  9961  01AD0E  EC7C  F0D5         	call	_printf	;wreg free
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;eadog.c: 232:  start_lcd();
  9965  01AD12  ECD1  F0DD         	call	_start_lcd	;wreg free
  9966                           
  9967                           ; BSR set to: 59
  9968                           ;eadog.c: 233:  wait_lcd_done();
  9969  01AD16  ECE3  F0DC         	call	_wait_lcd_done	;wreg free
  9970                           
  9971                           ; BSR set to: 0
  9972  01AD1A  82BC               	bsf	188,1,c	;volatile
  9973                           
  9974                           ; BSR set to: 0
  9975                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9976  01AD1C  52E5               	movf	postdec1,f,c
  9977  01AD1E  0012               	return		;funcret
  9978  01AD20                     __end_of_send_lcd_cmd_dma:
  9979                           	opt callstack 0
  9980                           
  9981 ;; *************** function _wait_lcd_done *****************
  9982 ;; Defined at:
  9983 ;;		line 156 in file "eadog.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;		None
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;		None
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1  [STACK] void 
  9990 ;; Registers used:
  9991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 3F/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10001 ;;Total ram usage:        0 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:   16
 10004 ;; This function calls:
 10005 ;;		_wdtdelay
 10006 ;; This function is called by:
 10007 ;;		_send_lcd_cmd_dma
 10008 ;;		_update_lcd
 10009 ;;		_vterm_dump
 10010 ;; This function uses a reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text36
 10014  01B9C6                     __ptext36:
 10015                           	opt callstack 0
 10016  01B9C6                     _wait_lcd_done:
 10017                           	opt callstack 13
 10018                           
 10019                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10020                           
 10021                           ; BSR set to: 0
 10022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10023                           ;incstack = 0
 10024  01B9C6  0100               	movlb	0	; () banked
 10025  01B9C8  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10026  01B9CA  D7FD               	goto	_wait_lcd_done
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;eadog.c: 159:  wdtdelay(50);
 10030  01B9CC  0E32               	movlw	50
 10031  01B9CE  6EE6               	movwf	postinc1,c
 10032  01B9D0  0E00               	movlw	0
 10033  01B9D2  6EE6               	movwf	postinc1,c
 10034  01B9D4  0E00               	movlw	0
 10035  01B9D6  6EE6               	movwf	postinc1,c
 10036  01B9D8  0E00               	movlw	0
 10037  01B9DA  6EE6               	movwf	postinc1,c
 10038  01B9DC  EC0D  F0D6         	call	_wdtdelay	;wreg free
 10039                           
 10040                           ; BSR set to: 0
 10041                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10042  01B9E0  0012               	return		;funcret
 10043  01B9E2                     __end_of_wait_lcd_done:
 10044                           	opt callstack 0
 10045                           
 10046 ;; *************** function _wdtdelay *****************
 10047 ;; Defined at:
 10048 ;;		line 23 in file "eadog.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;  delay           4  [STACK] const unsigned long 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1  [STACK] void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 3F/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:   15
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_init_display
 10073 ;;		_send_lcd_cmd
 10074 ;;		_send_lcd_cmd_long
 10075 ;;		_wait_lcd_done
 10076 ;; This function uses a reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text37
 10080  01AC1A                     __ptext37:
 10081                           	opt callstack 0
 10082  01AC1A                     _wdtdelay:
 10083                           	opt callstack 13
 10084                           
 10085                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10086                           
 10087                           ; BSR set to: 0
 10088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10089                           ;incstack = 0
 10090  01AC1A  0100               	movlb	0	; () banked
 10091  01AC1C  6B92               	clrf	wdtdelay@dcount& (0+255),b
 10092  01AC1E  6B93               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10093  01AC20  6B94               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10094  01AC22  6B95               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10095  01AC24                     l1447:
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;eadog.c: 28:   __nop();
 10099  01AC24  F000               	nop	
 10100  01AC26  0004               	clrwdt		;# 
 10101                           
 10102                           ;eadog.c: 30:  };
 10103  01AC28  0E01               	movlw	1
 10104  01AC2A  0100               	movlb	0	; () banked
 10105  01AC2C  2792               	addwf	wdtdelay@dcount& (0+255),f,b
 10106  01AC2E  0E00               	movlw	0
 10107  01AC30  2393               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10108  01AC32  2394               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10109  01AC34  2395               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;stkvar	_delay @ sp[(0)+-4]
 10113  01AC36  0EFC               	movlw	-4
 10114  01AC38  006F FF8C  F026    	movff	plusw1,btemp
 10115  01AC3E  5192               	movf	wdtdelay@dcount& (0+255),w,b
 10116  01AC40  5C26               	subwf	btemp^0,w,c
 10117  01AC42  0EFD               	movlw	-3
 10118  01AC44  006F FF8C  F026    	movff	plusw1,btemp
 10119  01AC4A  5193               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10120  01AC4C  5826               	subwfb	btemp^0,w,c
 10121  01AC4E  0EFE               	movlw	-2
 10122  01AC50  006F FF8C  F026    	movff	plusw1,btemp
 10123  01AC56  5194               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10124  01AC58  5826               	subwfb	btemp^0,w,c
 10125  01AC5A  0EFF               	movlw	-1
 10126  01AC5C  006F FF8C  F026    	movff	plusw1,btemp
 10127  01AC62  5195               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10128  01AC64  5826               	subwfb	btemp^0,w,c
 10129  01AC66  B0D8               	btfsc	status,0,c
 10130  01AC68  D7DD               	goto	l1447
 10131                           
 10132                           ; BSR set to: 0
 10133                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10134  01AC6A  52E5               	movf	postdec1,f,c
 10135  01AC6C  52E5               	movf	postdec1,f,c
 10136  01AC6E  52E5               	movf	postdec1,f,c
 10137  01AC70  52E5               	movf	postdec1,f,c
 10138  01AC72  0012               	return		;funcret
 10139  01AC74                     __end_of_wdtdelay:
 10140                           	opt callstack 0
 10141                           
 10142 ;; *************** function _eaDogM_WriteString *****************
 10143 ;; Defined at:
 10144 ;;		line 199 in file "eadog.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  strPtr          2  [STACK] PTR unsigned char 
 10147 ;;		 -> D.lcd(480), D(482), V(191), 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1  [STACK] void 
 10152 ;; Registers used:
 10153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10154 ;; Tracked objects:
 10155 ;;		On entry : 3F/0
 10156 ;;		On exit  : 3F/3B
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:   24
 10166 ;; This function calls:
 10167 ;;		_printf
 10168 ;;		_ringBufS_flush
 10169 ;;		_start_lcd
 10170 ;;		_strlen
 10171 ;;		_wait_lcd_set
 10172 ;; This function is called by:
 10173 ;;		_eaDogM_WriteStringAtPos
 10174 ;; This function uses a reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text38
 10178  01A2D4                     __ptext38:
 10179                           	opt callstack 0
 10180  01A2D4                     _eaDogM_WriteString:
 10181                           	opt callstack 4
 10182                           
 10183                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10184                           
 10185                           ; BSR set to: 0
 10186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10187                           ;incstack = 0
 10188  01A2D4  ECCE  F0DD         	call	_wait_lcd_set	;wreg free
 10189                           
 10190                           ; BSR set to: 0
 10191                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10192  01A2D8  0E00               	movlw	0
 10193  01A2DA  6EE6               	movwf	postinc1,c
 10194  01A2DC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10195  01A2E2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10196  01A2E8  ECA4  F0D2         	call	_ringBufS_flush	;wreg free
 10197  01A2EC  94BC               	bcf	188,2,c	;volatile
 10198                           
 10199                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10200                           ;stkvar	_strPtr @ sp[(0)+-2]
 10201  01A2EE  0EFE               	movlw	-2
 10202  01A2F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10203  01A2F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10204  01A2FC  ECBD  F0D1         	call	_strlen	;wreg free
 10205  01A300  5027               	movf	(btemp+1)^0,w,c
 10206  01A302  E104               	bnz	u12150
 10207  01A304  0E41               	movlw	65
 10208  01A306  5C26               	subwf	btemp^0,w,c
 10209  01A308  A0D8               	btfss	status,0,c
 10210  01A30A  D010               	goto	l12471
 10211  01A30C                     u12150:
 10212                           
 10213                           ;stkvar	_strPtr @ sp[(0)+-2]
 10214  01A30C  0EFE               	movlw	-2
 10215  01A30E  006F FF8C  F030    	movff	plusw1,btemp+10
 10216  01A314  0EFF               	movlw	-1
 10217  01A316  006F FF8C  F031    	movff	plusw1,btemp+11
 10218  01A31C  0E40               	movlw	64
 10219  01A31E  2430               	addwf	(btemp+10)^0,w,c
 10220  01A320  6ED9               	movwf	fsr2l,c
 10221  01A322  0E00               	movlw	0
 10222  01A324  2031               	addwfc	(btemp+11)^0,w,c
 10223  01A326  6EDA               	movwf	fsr2h,c
 10224  01A328  0E00               	movlw	0
 10225  01A32A  6EDF               	movwf	indf2,c
 10226  01A32C                     l12471:
 10227                           
 10228                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10229  01A32C  013B               	movlb	59	; () banked
 10230  01A32E  9FFC               	bcf	252,7,b	;volatile
 10231                           
 10232                           ; BSR set to: 59
 10233                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10234                           ;stkvar	_strPtr @ sp[(0)+-2]
 10235  01A330  0EFE               	movlw	-2
 10236  01A332  006F FF8F FFE6     	movff	plusw1,postinc1
 10237  01A338  006F FF8F FFE6     	movff	plusw1,postinc1
 10238  01A33E  ECBD  F0D1         	call	_strlen	;wreg free
 10239  01A342  0060  F09B  FBF7   	movff	btemp,15351	;volatile
 10240  01A348  0060  F09F  FBF8   	movff	btemp+1,15352	;volatile
 10241                           
 10242                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10243  01A34E  013B               	movlb	59	; () banked
 10244  01A350  8FFC               	bsf	252,7,b	;volatile
 10245                           
 10246                           ; BSR set to: 59
 10247                           ;eadog.c: 210:  printf("%s", strPtr);
 10248                           ;stkvar	_strPtr @ sp[(0)+-2]
 10249  01A352  0EFE               	movlw	-2
 10250  01A354  006F FF8F FFE6     	movff	plusw1,postinc1
 10251  01A35A  006F FF8F FFE6     	movff	plusw1,postinc1
 10252  01A360  0EFB               	movlw	low STR_43
 10253  01A362  6EE6               	movwf	postinc1,c
 10254  01A364  0EFF               	movlw	high STR_43
 10255  01A366  6EE6               	movwf	postinc1,c
 10256  01A368  0E04               	movlw	4
 10257  01A36A  6EE6               	movwf	postinc1,c
 10258  01A36C  EC7C  F0D5         	call	_printf	;wreg free
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;eadog.c: 211:  start_lcd();
 10262  01A370  ECD1  F0DD         	call	_start_lcd	;wreg free
 10263                           
 10264                           ; BSR set to: 59
 10265                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10266  01A374  52E5               	movf	postdec1,f,c
 10267  01A376  52E5               	movf	postdec1,f,c
 10268  01A378  0012               	return		;funcret
 10269  01A37A                     __end_of_eaDogM_WriteString:
 10270                           	opt callstack 0
 10271                           
 10272 ;; *************** function _wait_lcd_set *****************
 10273 ;; Defined at:
 10274 ;;		line 146 in file "eadog.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;		None
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;		None
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  1  [STACK] void 
 10281 ;; Registers used:
 10282 ;;		None
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/3D
 10285 ;;		On exit  : 3F/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10292 ;;Total ram usage:        0 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:   15
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_eaDogM_WriteString
 10299 ;;		_send_lcd_cmd_dma
 10300 ;; This function uses a reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text39
 10304  01BB9C                     __ptext39:
 10305                           	opt callstack 0
 10306  01BB9C                     _wait_lcd_set:
 10307                           	opt callstack 12
 10308                           
 10309                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10310                           
 10311                           ; BSR set to: 59
 10312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10313                           ;incstack = 0
 10314  01BB9C  0100               	movlb	0	; () banked
 10315  01BB9E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10316                           
 10317                           ; BSR set to: 0
 10318                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10319  01BBA0  0012               	return		;funcret
 10320  01BBA2                     __end_of_wait_lcd_set:
 10321                           	opt callstack 0
 10322                           
 10323 ;; *************** function _start_lcd *****************
 10324 ;; Defined at:
 10325 ;;		line 141 in file "eadog.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;		None
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1  [STACK] void 
 10332 ;; Registers used:
 10333 ;;		None
 10334 ;; Tracked objects:
 10335 ;;		On entry : 3F/0
 10336 ;;		On exit  : 3F/3B
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;Total ram usage:        0 bytes
 10344 ;; Hardware stack levels used:    1
 10345 ;; Hardware stack levels required when called:   15
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_eaDogM_WriteString
 10350 ;;		_send_lcd_cmd_dma
 10351 ;; This function uses a reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text40
 10355  01BBA2                     __ptext40:
 10356                           	opt callstack 0
 10357  01BBA2                     _start_lcd:
 10358                           	opt callstack 12
 10359                           
 10360                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10361                           
 10362                           ; BSR set to: 0
 10363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10364                           ;incstack = 0
 10365  01BBA2  013B               	movlb	59	; () banked
 10366  01BBA4  8DFC               	bsf	252,6,b	;volatile
 10367                           
 10368                           ; BSR set to: 59
 10369                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10370  01BBA6  0012               	return		;funcret
 10371  01BBA8                     __end_of_start_lcd:
 10372                           	opt callstack 0
 10373                           
 10374 ;; *************** function _ringBufS_flush *****************
 10375 ;; Defined at:
 10376 ;;		line 76 in file "ringbufs.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10379 ;;		 -> ring_buf1(67), 
 10380 ;;  clearBuffer     1  [STACK] const char 
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1  [STACK] void 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10387 ;; Tracked objects:
 10388 ;;		On entry : 3F/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:   16
 10399 ;; This function calls:
 10400 ;;		_memset
 10401 ;; This function is called by:
 10402 ;;		_eaDogM_WriteString
 10403 ;;		_send_lcd_cmd_dma
 10404 ;; This function uses a reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text41
 10408  01A548                     __ptext41:
 10409                           	opt callstack 0
 10410  01A548                     _ringBufS_flush:
 10411                           	opt callstack 11
 10412                           
 10413                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10414                           ;stkvar	__this @ sp[(0)+-2]
 10415                           
 10416                           ; BSR set to: 59
 10417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10418                           ;incstack = 0
 10419  01A548  0EFE               	movlw	-2
 10420  01A54A  006F FF8C  F030    	movff	plusw1,btemp+10
 10421  01A550  0EFF               	movlw	-1
 10422  01A552  006F FF8C  F031    	movff	plusw1,btemp+11
 10423  01A558  0E42               	movlw	66
 10424  01A55A  2430               	addwf	(btemp+10)^0,w,c
 10425  01A55C  6ED9               	movwf	fsr2l,c
 10426  01A55E  0E00               	movlw	0
 10427  01A560  2031               	addwfc	(btemp+11)^0,w,c
 10428  01A562  6EDA               	movwf	fsr2h,c
 10429  01A564  0E00               	movlw	0
 10430  01A566  6EDF               	movwf	indf2,c
 10431                           
 10432                           ;ringbufs.c: 79:  _this->head = 0;
 10433                           ;stkvar	__this @ sp[(0)+-2]
 10434  01A568  0EFE               	movlw	-2
 10435  01A56A  006F FF8C  F030    	movff	plusw1,btemp+10
 10436  01A570  0EFF               	movlw	-1
 10437  01A572  006F FF8C  F031    	movff	plusw1,btemp+11
 10438  01A578  0E40               	movlw	64
 10439  01A57A  2430               	addwf	(btemp+10)^0,w,c
 10440  01A57C  6ED9               	movwf	fsr2l,c
 10441  01A57E  0E00               	movlw	0
 10442  01A580  2031               	addwfc	(btemp+11)^0,w,c
 10443  01A582  6EDA               	movwf	fsr2h,c
 10444  01A584  0E00               	movlw	0
 10445  01A586  6EDF               	movwf	indf2,c
 10446                           
 10447                           ;ringbufs.c: 80:  _this->tail = 0;
 10448                           ;stkvar	__this @ sp[(0)+-2]
 10449  01A588  0EFE               	movlw	-2
 10450  01A58A  006F FF8C  F030    	movff	plusw1,btemp+10
 10451  01A590  0EFF               	movlw	-1
 10452  01A592  006F FF8C  F031    	movff	plusw1,btemp+11
 10453  01A598  0E41               	movlw	65
 10454  01A59A  2430               	addwf	(btemp+10)^0,w,c
 10455  01A59C  6ED9               	movwf	fsr2l,c
 10456  01A59E  0E00               	movlw	0
 10457  01A5A0  2031               	addwfc	(btemp+11)^0,w,c
 10458  01A5A2  6EDA               	movwf	fsr2h,c
 10459  01A5A4  0E00               	movlw	0
 10460  01A5A6  6EDF               	movwf	indf2,c
 10461                           
 10462                           ;ringbufs.c: 81:  if (clearBuffer) {
 10463                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10464  01A5A8  0EFD               	movlw	-3
 10465  01A5AA  50E3               	movf	plusw1,w,c
 10466  01A5AC  B4D8               	btfsc	status,2,c
 10467  01A5AE  D011               	goto	l1591
 10468                           
 10469                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10470  01A5B0  0E40               	movlw	64
 10471  01A5B2  6EE6               	movwf	postinc1,c
 10472  01A5B4  0E00               	movlw	0
 10473  01A5B6  6EE6               	movwf	postinc1,c
 10474  01A5B8  0E00               	movlw	0
 10475  01A5BA  6EE6               	movwf	postinc1,c
 10476  01A5BC  0E00               	movlw	0
 10477  01A5BE  6EE6               	movwf	postinc1,c
 10478                           
 10479                           ;stkvar	__this @ sp[(-4)+-2]
 10480  01A5C0  0EFA               	movlw	-6
 10481  01A5C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10482  01A5C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10483  01A5CE  EC8B  F0B5         	call	_memset	;wreg free
 10484  01A5D2                     l1591:
 10485                           
 10486                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10487  01A5D2  52E5               	movf	postdec1,f,c
 10488  01A5D4  52E5               	movf	postdec1,f,c
 10489  01A5D6  52E5               	movf	postdec1,f,c
 10490  01A5D8  0012               	return		;funcret
 10491  01A5DA                     __end_of_ringBufS_flush:
 10492                           	opt callstack 0
 10493                           
 10494 ;; *************** function _memset *****************
 10495 ;; Defined at:
 10496 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  dest            2  [STACK] PTR void 
 10499 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10500 ;;  c               2  [STACK] int 
 10501 ;;  n               2  [STACK] unsigned int 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  s               2  [STACK] PTR unsigned char 
 10504 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10505 ;;  k               2  [STACK] unsigned int 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2  [STACK] PTR void 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10519 ;;Total ram usage:        0 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:   15
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_ringBufS_init
 10526 ;;		_ringBufS_flush
 10527 ;; This function uses a reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text42
 10531  016B16                     __ptext42:
 10532                           	opt callstack 0
 10533  016B16                     _memset:
 10534                           	opt callstack 0
 10535                           
 10536                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10537  016B16  52E6               	movf	postinc1,f,c
 10538  016B18  52E6               	movf	postinc1,f,c
 10539  016B1A  52E6               	movf	postinc1,f,c
 10540  016B1C  52E6               	movf	postinc1,f,c
 10541                           
 10542                           ;stkvar	_dest @ sp[(-4)+-2]
 10543                           
 10544                           ;incstack = 0
 10545  016B1E  0EFA               	movlw	-6
 10546  016B20  006F FF8C  F030    	movff	plusw1,btemp+10
 10547  016B26  0EFB               	movlw	-5
 10548  016B28  006F FF8C  F031    	movff	plusw1,btemp+11
 10549                           
 10550                           ;stkvar	_s @ sp[(-4)+0]
 10551  016B2E  0EFD               	movlw	-3
 10552  016B30  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10553  016B36  0EFC               	movlw	-4
 10554  016B38  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10555                           
 10556                           ;stkvar	_n @ sp[(-4)+-6]
 10557  016B3E  0EF6               	movlw	-10
 10558  016B40  006F FF8C  F026    	movff	plusw1,btemp
 10559  016B46  0EF7               	movlw	-9
 10560  016B48  50E3               	movf	plusw1,w,c
 10561  016B4A  1026               	iorwf	btemp^0,w,c
 10562  016B4C  B4D8               	btfsc	status,2,c
 10563  016B4E  D154               	goto	u10760
 10564                           
 10565                           ;stkvar	_c @ sp[(-4)+-4]
 10566                           ;stkvar	_s @ sp[(-4)+0]
 10567  016B50  0EFC               	movlw	-4
 10568  016B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 10569  016B58  0EFD               	movlw	-3
 10570  016B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10571  016B60  0EF8               	movlw	-8
 10572  016B62  006F FF8F FFDF     	movff	plusw1,indf2
 10573                           
 10574                           ;stkvar	_c @ sp[(-4)+-4]
 10575                           ;stkvar	_n @ sp[(-4)+-6]
 10576                           ;stkvar	_s @ sp[(-4)+0]
 10577  016B68  0EFC               	movlw	-4
 10578  016B6A  006F FF8C  F030    	movff	plusw1,btemp+10
 10579  016B70  0EFD               	movlw	-3
 10580  016B72  006F FF8C  F031    	movff	plusw1,btemp+11
 10581  016B78  0EF6               	movlw	-10
 10582  016B7A  50E3               	movf	plusw1,w,c
 10583  016B7C  2630               	addwf	(btemp+10)^0,f,c
 10584  016B7E  0EF7               	movlw	-9
 10585  016B80  50E3               	movf	plusw1,w,c
 10586  016B82  2231               	addwfc	(btemp+11)^0,f,c
 10587  016B84  0EFF               	movlw	255
 10588  016B86  2430               	addwf	(btemp+10)^0,w,c
 10589  016B88  6ED9               	movwf	fsr2l,c
 10590  016B8A  0EFF               	movlw	255
 10591  016B8C  2031               	addwfc	(btemp+11)^0,w,c
 10592  016B8E  6EDA               	movwf	fsr2h,c
 10593  016B90  0EF8               	movlw	-8
 10594  016B92  006F FF8F FFDF     	movff	plusw1,indf2
 10595                           
 10596                           ;stkvar	_n @ sp[(-4)+-6]
 10597  016B98  0EF7               	movlw	-9
 10598  016B9A  50E3               	movf	plusw1,w,c
 10599  016B9C  E108               	bnz	l11643
 10600  016B9E  0EF6               	movlw	-10
 10601  016BA0  006F FF8C  F026    	movff	plusw1,btemp
 10602  016BA6  0E03               	movlw	3
 10603  016BA8  5E26               	subwf	btemp^0,f,c
 10604  016BAA  A0D8               	btfss	status,0,c
 10605  016BAC  D125               	goto	u10760
 10606  016BAE                     l11643:
 10607                           
 10608                           ;stkvar	_c @ sp[(-4)+-4]
 10609                           ;stkvar	_s @ sp[(-4)+0]
 10610  016BAE  0EFC               	movlw	-4
 10611  016BB0  006F FF8C  F030    	movff	plusw1,btemp+10
 10612  016BB6  0EFD               	movlw	-3
 10613  016BB8  006F FF8C  F031    	movff	plusw1,btemp+11
 10614  016BBE  0E01               	movlw	1
 10615  016BC0  2430               	addwf	(btemp+10)^0,w,c
 10616  016BC2  6ED9               	movwf	fsr2l,c
 10617  016BC4  0E00               	movlw	0
 10618  016BC6  2031               	addwfc	(btemp+11)^0,w,c
 10619  016BC8  6EDA               	movwf	fsr2h,c
 10620  016BCA  0EF8               	movlw	-8
 10621  016BCC  006F FF8F FFDF     	movff	plusw1,indf2
 10622                           
 10623                           ;stkvar	_c @ sp[(-4)+-4]
 10624                           ;stkvar	_s @ sp[(-4)+0]
 10625  016BD2  0EFC               	movlw	-4
 10626  016BD4  006F FF8C  F030    	movff	plusw1,btemp+10
 10627  016BDA  0EFD               	movlw	-3
 10628  016BDC  006F FF8C  F031    	movff	plusw1,btemp+11
 10629  016BE2  0E02               	movlw	2
 10630  016BE4  2430               	addwf	(btemp+10)^0,w,c
 10631  016BE6  6ED9               	movwf	fsr2l,c
 10632  016BE8  0E00               	movlw	0
 10633  016BEA  2031               	addwfc	(btemp+11)^0,w,c
 10634  016BEC  6EDA               	movwf	fsr2h,c
 10635  016BEE  0EF8               	movlw	-8
 10636  016BF0  006F FF8F FFDF     	movff	plusw1,indf2
 10637                           
 10638                           ;stkvar	_c @ sp[(-4)+-4]
 10639                           ;stkvar	_n @ sp[(-4)+-6]
 10640                           ;stkvar	_s @ sp[(-4)+0]
 10641  016BF6  0EFC               	movlw	-4
 10642  016BF8  006F FF8C  F030    	movff	plusw1,btemp+10
 10643  016BFE  0EFD               	movlw	-3
 10644  016C00  006F FF8C  F031    	movff	plusw1,btemp+11
 10645  016C06  0EF6               	movlw	-10
 10646  016C08  50E3               	movf	plusw1,w,c
 10647  016C0A  2630               	addwf	(btemp+10)^0,f,c
 10648  016C0C  0EF7               	movlw	-9
 10649  016C0E  50E3               	movf	plusw1,w,c
 10650  016C10  2231               	addwfc	(btemp+11)^0,f,c
 10651  016C12  0EFE               	movlw	254
 10652  016C14  2430               	addwf	(btemp+10)^0,w,c
 10653  016C16  6ED9               	movwf	fsr2l,c
 10654  016C18  0EFF               	movlw	255
 10655  016C1A  2031               	addwfc	(btemp+11)^0,w,c
 10656  016C1C  6EDA               	movwf	fsr2h,c
 10657  016C1E  0EF8               	movlw	-8
 10658  016C20  006F FF8F FFDF     	movff	plusw1,indf2
 10659                           
 10660                           ;stkvar	_c @ sp[(-4)+-4]
 10661                           ;stkvar	_n @ sp[(-4)+-6]
 10662                           ;stkvar	_s @ sp[(-4)+0]
 10663  016C26  0EFC               	movlw	-4
 10664  016C28  006F FF8C  F030    	movff	plusw1,btemp+10
 10665  016C2E  0EFD               	movlw	-3
 10666  016C30  006F FF8C  F031    	movff	plusw1,btemp+11
 10667  016C36  0EF6               	movlw	-10
 10668  016C38  50E3               	movf	plusw1,w,c
 10669  016C3A  2630               	addwf	(btemp+10)^0,f,c
 10670  016C3C  0EF7               	movlw	-9
 10671  016C3E  50E3               	movf	plusw1,w,c
 10672  016C40  2231               	addwfc	(btemp+11)^0,f,c
 10673  016C42  0EFD               	movlw	253
 10674  016C44  2430               	addwf	(btemp+10)^0,w,c
 10675  016C46  6ED9               	movwf	fsr2l,c
 10676  016C48  0EFF               	movlw	255
 10677  016C4A  2031               	addwfc	(btemp+11)^0,w,c
 10678  016C4C  6EDA               	movwf	fsr2h,c
 10679  016C4E  0EF8               	movlw	-8
 10680  016C50  006F FF8F FFDF     	movff	plusw1,indf2
 10681                           
 10682                           ;stkvar	_n @ sp[(-4)+-6]
 10683  016C56  0EF7               	movlw	-9
 10684  016C58  50E3               	movf	plusw1,w,c
 10685  016C5A  E108               	bnz	l11649
 10686  016C5C  0EF6               	movlw	-10
 10687  016C5E  006F FF8C  F026    	movff	plusw1,btemp
 10688  016C64  0E07               	movlw	7
 10689  016C66  5E26               	subwf	btemp^0,f,c
 10690  016C68  A0D8               	btfss	status,0,c
 10691  016C6A  D0C6               	goto	u10760
 10692  016C6C                     l11649:
 10693                           
 10694                           ;stkvar	_c @ sp[(-4)+-4]
 10695                           ;stkvar	_s @ sp[(-4)+0]
 10696  016C6C  0EFC               	movlw	-4
 10697  016C6E  006F FF8C  F030    	movff	plusw1,btemp+10
 10698  016C74  0EFD               	movlw	-3
 10699  016C76  006F FF8C  F031    	movff	plusw1,btemp+11
 10700  016C7C  0E03               	movlw	3
 10701  016C7E  2430               	addwf	(btemp+10)^0,w,c
 10702  016C80  6ED9               	movwf	fsr2l,c
 10703  016C82  0E00               	movlw	0
 10704  016C84  2031               	addwfc	(btemp+11)^0,w,c
 10705  016C86  6EDA               	movwf	fsr2h,c
 10706  016C88  0EF8               	movlw	-8
 10707  016C8A  006F FF8F FFDF     	movff	plusw1,indf2
 10708                           
 10709                           ;stkvar	_c @ sp[(-4)+-4]
 10710                           ;stkvar	_n @ sp[(-4)+-6]
 10711                           ;stkvar	_s @ sp[(-4)+0]
 10712  016C90  0EFC               	movlw	-4
 10713  016C92  006F FF8C  F030    	movff	plusw1,btemp+10
 10714  016C98  0EFD               	movlw	-3
 10715  016C9A  006F FF8C  F031    	movff	plusw1,btemp+11
 10716  016CA0  0EF6               	movlw	-10
 10717  016CA2  50E3               	movf	plusw1,w,c
 10718  016CA4  2630               	addwf	(btemp+10)^0,f,c
 10719  016CA6  0EF7               	movlw	-9
 10720  016CA8  50E3               	movf	plusw1,w,c
 10721  016CAA  2231               	addwfc	(btemp+11)^0,f,c
 10722  016CAC  0EFC               	movlw	252
 10723  016CAE  2430               	addwf	(btemp+10)^0,w,c
 10724  016CB0  6ED9               	movwf	fsr2l,c
 10725  016CB2  0EFF               	movlw	255
 10726  016CB4  2031               	addwfc	(btemp+11)^0,w,c
 10727  016CB6  6EDA               	movwf	fsr2h,c
 10728  016CB8  0EF8               	movlw	-8
 10729  016CBA  006F FF8F FFDF     	movff	plusw1,indf2
 10730                           
 10731                           ;stkvar	_n @ sp[(-4)+-6]
 10732  016CC0  0EF7               	movlw	-9
 10733  016CC2  50E3               	movf	plusw1,w,c
 10734  016CC4  E108               	bnz	l11655
 10735  016CC6  0EF6               	movlw	-10
 10736  016CC8  006F FF8C  F026    	movff	plusw1,btemp
 10737  016CCE  0E09               	movlw	9
 10738  016CD0  5E26               	subwf	btemp^0,f,c
 10739  016CD2  A0D8               	btfss	status,0,c
 10740  016CD4  D091               	goto	u10760
 10741  016CD6                     l11655:
 10742                           
 10743                           ;stkvar	_s @ sp[(-4)+0]
 10744  016CD6  0EFC               	movlw	-4
 10745  016CD8  006F FF8C  F030    	movff	plusw1,btemp+10
 10746  016CDE  1E30               	comf	(btemp+10)^0,f,c
 10747  016CE0  0EFD               	movlw	-3
 10748  016CE2  006F FF8C  F031    	movff	plusw1,btemp+11
 10749  016CE8  1E31               	comf	(btemp+11)^0,f,c
 10750  016CEA  2A30               	incf	(btemp+10)^0,f,c
 10751  016CEC  B4D8               	btfsc	status,2,c
 10752  016CEE  2A31               	incf	(btemp+11)^0,f,c
 10753  016CF0  0E03               	movlw	3
 10754  016CF2  1630               	andwf	(btemp+10)^0,f,c
 10755  016CF4  0E00               	movlw	0
 10756  016CF6  1631               	andwf	(btemp+11)^0,f,c
 10757                           
 10758                           ;stkvar	_k @ sp[(-4)+2]
 10759  016CF8  0EFE               	movlw	-2
 10760  016CFA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10761  016D00  0EFF               	movlw	-1
 10762  016D02  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10763                           
 10764                           ;stkvar	_k @ sp[(-4)+2]
 10765                           ;stkvar	_s @ sp[(-4)+0]
 10766  016D08  0EFC               	movlw	-4
 10767  016D0A  50E3               	movf	plusw1,w,c
 10768  016D0C  6E26               	movwf	btemp^0,c
 10769  016D0E  0EFE               	movlw	-2
 10770  016D10  50E3               	movf	plusw1,w,c
 10771  016D12  2626               	addwf	btemp^0,f,c
 10772  016D14  0EFC               	movlw	-4
 10773  016D16  0060  F09B  FFE3   	movff	btemp,plusw1
 10774  016D1C  0EFD               	movlw	-3
 10775  016D1E  50E3               	movf	plusw1,w,c
 10776  016D20  6E26               	movwf	btemp^0,c
 10777  016D22  0EFF               	movlw	-1
 10778  016D24  50E3               	movf	plusw1,w,c
 10779  016D26  2226               	addwfc	btemp^0,f,c
 10780  016D28  0EFD               	movlw	-3
 10781  016D2A  0060  F09B  FFE3   	movff	btemp,plusw1
 10782                           
 10783                           ;stkvar	_k @ sp[(-4)+2]
 10784                           ;stkvar	_n @ sp[(-4)+-6]
 10785  016D30  0EF6               	movlw	-10
 10786  016D32  50E3               	movf	plusw1,w,c
 10787  016D34  6E26               	movwf	btemp^0,c
 10788  016D36  0EFE               	movlw	-2
 10789  016D38  50E3               	movf	plusw1,w,c
 10790  016D3A  5E26               	subwf	btemp^0,f,c
 10791  016D3C  0EF6               	movlw	-10
 10792  016D3E  0060  F09B  FFE3   	movff	btemp,plusw1
 10793  016D44  0EF7               	movlw	-9
 10794  016D46  50E3               	movf	plusw1,w,c
 10795  016D48  6E26               	movwf	btemp^0,c
 10796  016D4A  0EFF               	movlw	-1
 10797  016D4C  50E3               	movf	plusw1,w,c
 10798  016D4E  5A26               	subwfb	btemp^0,f,c
 10799  016D50  0EF7               	movlw	-9
 10800  016D52  0060  F09B  FFE3   	movff	btemp,plusw1
 10801  016D58  0EFC               	movlw	252
 10802  016D5A  6E30               	movwf	(btemp+10)^0,c
 10803  016D5C  0EFF               	movlw	255
 10804  016D5E  6E31               	movwf	(btemp+11)^0,c
 10805                           
 10806                           ;stkvar	_n @ sp[(-4)+-6]
 10807  016D60  0EF6               	movlw	-10
 10808  016D62  006F FF8C  F026    	movff	plusw1,btemp
 10809  016D68  5030               	movf	(btemp+10)^0,w,c
 10810  016D6A  1626               	andwf	btemp^0,f,c
 10811  016D6C  0EF6               	movlw	-10
 10812  016D6E  0060  F09B  FFE3   	movff	btemp,plusw1
 10813  016D74  0EF7               	movlw	-9
 10814  016D76  006F FF8C  F026    	movff	plusw1,btemp
 10815  016D7C  5031               	movf	(btemp+11)^0,w,c
 10816  016D7E  1626               	andwf	btemp^0,f,c
 10817  016D80  0EF7               	movlw	-9
 10818  016D82  D02E               	goto	L9
 10819  016D84                     l11663:
 10820                           
 10821                           ;stkvar	_c @ sp[(-4)+-4]
 10822                           ;stkvar	_s @ sp[(-4)+0]
 10823  016D84  0EFC               	movlw	-4
 10824  016D86  006F FF8F FFD9     	movff	plusw1,fsr2l
 10825  016D8C  0EFD               	movlw	-3
 10826  016D8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10827  016D94  0EF8               	movlw	-8
 10828  016D96  006F FF8F FFDF     	movff	plusw1,indf2
 10829                           
 10830                           ;stkvar	_n @ sp[(-4)+-6]
 10831  016D9C  0EF6               	movlw	-10
 10832  016D9E  006F FF8C  F026    	movff	plusw1,btemp
 10833  016DA4  0E01               	movlw	1
 10834  016DA6  5E26               	subwf	btemp^0,f,c
 10835  016DA8  0EF6               	movlw	-10
 10836  016DAA  0060  F09B  FFE3   	movff	btemp,plusw1
 10837  016DB0  0EF7               	movlw	-9
 10838  016DB2  006F FF8C  F026    	movff	plusw1,btemp
 10839  016DB8  0E00               	movlw	0
 10840  016DBA  5A26               	subwfb	btemp^0,f,c
 10841  016DBC  0EF7               	movlw	-9
 10842  016DBE  0060  F09B  FFE3   	movff	btemp,plusw1
 10843                           
 10844                           ;stkvar	_s @ sp[(-4)+0]
 10845  016DC4  0EFC               	movlw	-4
 10846  016DC6  50E3               	movf	plusw1,w,c
 10847  016DC8  0F01               	addlw	1
 10848  016DCA  6E26               	movwf	btemp^0,c
 10849  016DCC  0EFC               	movlw	-4
 10850  016DCE  0060  F09B  FFE3   	movff	btemp,plusw1
 10851  016DD4  6A26               	clrf	btemp^0,c
 10852  016DD6  0EFD               	movlw	-3
 10853  016DD8  50E3               	movf	plusw1,w,c
 10854  016DDA  2026               	addwfc	btemp^0,w,c
 10855  016DDC  6E26               	movwf	btemp^0,c
 10856  016DDE  0EFD               	movlw	-3
 10857  016DE0                     L9:
 10858  016DE0  0060  F09B  FFE3   	movff	btemp,plusw1
 10859                           
 10860                           ;stkvar	_n @ sp[(-4)+-6]
 10861  016DE6  0EF6               	movlw	-10
 10862  016DE8  006F FF8C  F026    	movff	plusw1,btemp
 10863  016DEE  0EF7               	movlw	-9
 10864  016DF0  50E3               	movf	plusw1,w,c
 10865  016DF2  1026               	iorwf	btemp^0,w,c
 10866  016DF4  A4D8               	btfss	status,2,c
 10867  016DF6  D7C6               	goto	l11663
 10868  016DF8                     u10760:
 10869                           
 10870                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10871  016DF8  0EF6               	movlw	246
 10872  016DFA  26E1               	addwf	fsr1l,f,c
 10873  016DFC  0EFF               	movlw	255
 10874  016DFE  22E2               	addwfc	fsr1h,f,c
 10875  016E00  0012               	return		;funcret
 10876  016E02                     __end_of_memset:
 10877                           	opt callstack 0
 10878                           
 10879 ;; *************** function _printf *****************
 10880 ;; Defined at:
 10881 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;  fmt             2  [STACK] PTR const unsigned char 
 10884 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  ap              2  [STACK] PTR void [1]
 10887 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10888 ;;  ret             2    0        int 
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  2  [STACK] int 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10893 ;; Tracked objects:
 10894 ;;		On entry : 3F/3B
 10895 ;;		On exit  : 3F/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:   23
 10905 ;; This function calls:
 10906 ;;		_vfprintf
 10907 ;; This function is called by:
 10908 ;;		_eaDogM_WriteString
 10909 ;;		_send_lcd_cmd_dma
 10910 ;; This function uses a reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text43
 10914  01AAF8                     __ptext43:
 10915                           	opt callstack 0
 10916  01AAF8                     _printf:
 10917                           	opt callstack 0
 10918                           
 10919                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10920  01AAF8  52E6               	movf	postinc1,f,c
 10921  01AAFA  52E6               	movf	postinc1,f,c
 10922                           
 10923                           ;stkvar	?_printf @ sp[(-2)+-3]
 10924                           
 10925                           ;incstack = 0
 10926  01AAFC  0EFB               	movlw	251
 10927  01AAFE  24E1               	addwf	fsr1l,w,c
 10928  01AB00  6E30               	movwf	(btemp+10)^0,c
 10929  01AB02  0EFF               	movlw	255
 10930  01AB04  20E2               	addwfc	fsr1h,w,c
 10931  01AB06  6E31               	movwf	(btemp+11)^0,c
 10932                           
 10933                           ;stkvar	_ap @ sp[(-2)+0]
 10934  01AB08  0EFF               	movlw	-1
 10935  01AB0A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10936  01AB10  0EFE               	movlw	-2
 10937  01AB12  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10938                           
 10939                           ;stkvar	_ap @ sp[(-2)+0]
 10940  01AB18  0EFE               	movlw	254
 10941  01AB1A  24E1               	addwf	fsr1l,w,c
 10942  01AB1C  6E26               	movwf	btemp^0,c
 10943  01AB1E  0EFF               	movlw	255
 10944  01AB20  20E2               	addwfc	fsr1h,w,c
 10945  01AB22  6E27               	movwf	(btemp+1)^0,c
 10946  01AB24  0060  F09B  FFE6   	movff	btemp,postinc1
 10947  01AB2A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10948                           
 10949                           ;stkvar	_fmt @ sp[(-4)+-3]
 10950  01AB30  0EF9               	movlw	-7
 10951  01AB32  006F FF8F FFE6     	movff	plusw1,postinc1
 10952  01AB38  006F FF8F FFE6     	movff	plusw1,postinc1
 10953  01AB3E  0E00               	movlw	0
 10954  01AB40  6EE6               	movwf	postinc1,c
 10955  01AB42  0E00               	movlw	0
 10956  01AB44  6EE6               	movwf	postinc1,c
 10957  01AB46  EC6B  F0D0         	call	_vfprintf	;wreg free
 10958                           
 10959                           ; BSR set to: 0
 10960                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10961  01AB4A  52E5               	movf	postdec1,f,c
 10962  01AB4C  52E5               	movf	postdec1,f,c
 10963  01AB4E  52E5               	movf	postdec1,f,c
 10964  01AB50  50E7               	movf	indf1,w,c
 10965  01AB52  5EE1               	subwf	fsr1l,f,c
 10966  01AB54  0E00               	movlw	0
 10967  01AB56  5AE2               	subwfb	fsr1h,f,c
 10968  01AB58  0012               	return		;funcret
 10969  01AB5A                     __end_of_printf:
 10970                           	opt callstack 0
 10971                           
 10972 ;; *************** function _vfprintf *****************
 10973 ;; Defined at:
 10974 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10977 ;;		 -> f(6), NULL(0), 
 10978 ;;  fmt             2  [STACK] PTR const unsigned char 
 10979 ;;		 -> STR_65(106), STR_63(3), STR_62(3), STR_61(19), 
 10980 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10981 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10982 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10983 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10984 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10985 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10986 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10987 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10988 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 10989 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 10990 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10991 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10992 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10993 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10994 ;;		 -> STR_1(17), 
 10995 ;;  ap              2  [STACK] PTR PTR void 
 10996 ;;		 -> ap(2), ap(2), 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  cfmt            2  [STACK] PTR unsigned char 
 10999 ;;		 -> STR_65(106), STR_63(3), STR_62(3), STR_61(19), 
 11000 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11001 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11002 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11003 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11004 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11005 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11006 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11007 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11008 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11009 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11010 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11011 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11012 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11013 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11014 ;;		 -> STR_1(17), 
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  2  [STACK] int 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/1
 11021 ;;		On exit  : 3F/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11028 ;;Total ram usage:        0 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:   22
 11031 ;; This function calls:
 11032 ;;		_vfpfcnvrt
 11033 ;; This function is called by:
 11034 ;;		_sprintf
 11035 ;;		_printf
 11036 ;; This function uses a reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text44
 11040  01A0D6                     __ptext44:
 11041                           	opt callstack 0
 11042  01A0D6                     _vfprintf:
 11043                           	opt callstack 0
 11044                           
 11045                           ; BSR set to: 0
 11046                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11047  01A0D6  52E6               	movf	postinc1,f,c
 11048  01A0D8  52E6               	movf	postinc1,f,c
 11049                           
 11050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11051                           ;stkvar	_fmt @ sp[(-2)+-4]
 11052                           
 11053                           ;incstack = 0
 11054 ;; hardware stack exceeded
 11055  01A0DA  0EFA               	movlw	-6
 11056  01A0DC  006F FF8C  F030    	movff	plusw1,btemp+10
 11057  01A0E2  0EFB               	movlw	-5
 11058  01A0E4  006F FF8C  F031    	movff	plusw1,btemp+11
 11059                           
 11060                           ;stkvar	_cfmt @ sp[(-2)+0]
 11061  01A0EA  0EFF               	movlw	-1
 11062  01A0EC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11063  01A0F2  0EFE               	movlw	-2
 11064  01A0F4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11065                           
 11066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11067  01A0FA  0100               	movlb	0	; () banked
 11068  01A0FC  6BAF               	clrf	_nout& (0+255),b
 11069  01A0FE  6BB0               	clrf	(_nout+1)& (0+255),b
 11070                           
 11071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11072  01A100  D021               	goto	l12487
 11073  01A102                     l12485:
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11077                           ;stkvar	_ap @ sp[(-2)+-6]
 11078  01A102  0EF8               	movlw	-8
 11079  01A104  006F FF8F FFE6     	movff	plusw1,postinc1
 11080  01A10A  006F FF8F FFE6     	movff	plusw1,postinc1
 11081                           
 11082                           ;stkvar	_cfmt @ sp[(-4)+0]
 11083  01A110  0EFC               	movlw	252
 11084  01A112  24E1               	addwf	fsr1l,w,c
 11085  01A114  6E26               	movwf	btemp^0,c
 11086  01A116  0EFF               	movlw	255
 11087  01A118  20E2               	addwfc	fsr1h,w,c
 11088  01A11A  6E27               	movwf	(btemp+1)^0,c
 11089  01A11C  0060  F09B  FFE6   	movff	btemp,postinc1
 11090  01A122  0060  F09F  FFE6   	movff	btemp+1,postinc1
 11091                           
 11092                           ;stkvar	_fp @ sp[(-6)+-2]
 11093  01A128  0EF8               	movlw	-8
 11094  01A12A  006F FF8F FFE6     	movff	plusw1,postinc1
 11095  01A130  006F FF8F FFE6     	movff	plusw1,postinc1
 11096  01A136  ECCA  F091         	call	_vfpfcnvrt	;wreg free
 11097  01A13A  5026               	movf	btemp^0,w,c
 11098  01A13C  0100               	movlb	0	; () banked
 11099  01A13E  27AF               	addwf	_nout& (0+255),f,b
 11100  01A140  5027               	movf	(btemp+1)^0,w,c
 11101  01A142  23B0               	addwfc	(_nout+1)& (0+255),f,b
 11102  01A144                     l12487:
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11106                           ;stkvar	_cfmt @ sp[(-2)+0]
 11107  01A144  50E1               	movf	fsr1l,w,c
 11108  01A146  0FFE               	addlw	-2
 11109  01A148  6ED9               	movwf	fsr2l,c
 11110  01A14A  50E2               	movf	fsr1h,w,c
 11111  01A14C  6EDA               	movwf	fsr2h,c
 11112  01A14E  0EFF               	movlw	255
 11113  01A150  22DA               	addwfc	fsr2h,f,c
 11114  01A152  006F FF7B FFF6     	movff	postinc2,tblptrl
 11115  01A158  006F FF77 FFF7     	movff	postdec2,tblptrh
 11116  01A15E                     	if	0	;tblptru may be non-zero
 11117  01A15E                     	endif
 11118  01A15E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11119  01A15E  0E00               	movlw	low (__mediumconst shr (0+16))
 11120  01A160  6EF8               	movwf	tblptru,c
 11121  01A162                     	endif
 11122  01A162  0008               	tblrd		*
 11123  01A164  50F5               	movf	tablat,w,c
 11124  01A166  0900               	iorlw	0
 11125  01A168  A4D8               	btfss	status,2,c
 11126  01A16A  D7CB               	goto	l12485
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11130  01A16C  0060  F2BC  F026   	movff	_nout,btemp
 11131  01A172  0060  F2C0  F027   	movff	_nout+1,btemp+1
 11132                           
 11133                           ; BSR set to: 0
 11134                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11135  01A178  0EF8               	movlw	248
 11136  01A17A  26E1               	addwf	fsr1l,f,c
 11137  01A17C  0EFF               	movlw	255
 11138  01A17E  22E2               	addwfc	fsr1h,f,c
 11139  01A180  0012               	return		;funcret
 11140  01A182                     __end_of_vfprintf:
 11141                           	opt callstack 0
 11142                           
 11143 ;; *************** function _vfpfcnvrt *****************
 11144 ;; Defined at:
 11145 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11148 ;;		 -> f(6), NULL(0), 
 11149 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11150 ;;		 -> cfmt(2), 
 11151 ;;  ap              2  [STACK] PTR PTR void 
 11152 ;;		 -> ap(2), ap(2), 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  llu             8  [STACK] unsigned long long 
 11155 ;;  ll              8  [STACK] long long 
 11156 ;;  f               4  [STACK] long long 
 11157 ;;  ct              3  [STACK] unsigned char [3]
 11158 ;;  vp              3    0        PTR void 
 11159 ;;  cp              2  [STACK] PTR unsigned char 
 11160 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11161 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 11162 ;;		 -> V(191), 
 11163 ;;  i               2    0        int 
 11164 ;;  done            2    0        int 
 11165 ;;  c               1  [STACK] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  2  [STACK] int 
 11168 ;; Registers used:
 11169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11179 ;;Total ram usage:        0 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:   21
 11182 ;; This function calls:
 11183 ;;		_atoi
 11184 ;;		_ctoa
 11185 ;;		_dtoa
 11186 ;;		_efgtoa
 11187 ;;		_fputc
 11188 ;;		_isdigit
 11189 ;;		_isupper
 11190 ;;		_stoa
 11191 ;;		_strncmp
 11192 ;;		_tolower
 11193 ;;		_utoa
 11194 ;;		_xtoa
 11195 ;; This function is called by:
 11196 ;;		_vfprintf
 11197 ;; This function uses a reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text45
 11201  012394                     __ptext45:
 11202                           	opt callstack 0
 11203  012394                     _vfpfcnvrt:
 11204                           	opt callstack 0
 11205                           
 11206                           ; BSR set to: 0
 11207                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11208  012394  0E20               	movlw	32
 11209  012396  26E1               	addwf	fsr1l,f,c
 11210  012398  0E00               	movlw	0
 11211  01239A  22E2               	addwfc	fsr1h,f,c
 11212                           
 11213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11214                           ;stkvar	_fmt @ sp[(-32)+-4]
 11215                           
 11216                           ;incstack = 0
 11217 ;; hardware stack exceeded
 11218  01239C  0EDC               	movlw	-36
 11219  01239E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11220  0123A4  0EDD               	movlw	-35
 11221  0123A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11222  0123AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11223  0123B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11224  0123B8                     	if	0	;tblptru may be non-zero
 11225  0123B8                     	endif
 11226  0123B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11227  0123B8  0E00               	movlw	low (__mediumconst shr (0+16))
 11228  0123BA  6EF8               	movwf	tblptru,c
 11229  0123BC                     	endif
 11230  0123BC  0008               	tblrd		*
 11231  0123BE  50F5               	movf	tablat,w,c
 11232  0123C0  0A25               	xorlw	37
 11233  0123C2  A4D8               	btfss	status,2,c
 11234  0123C4  EF71  F099         	goto	l12431
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11237                           ;stkvar	_fmt @ sp[(-32)+-4]
 11238  0123C8  0EDC               	movlw	-36
 11239  0123CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11240  0123D0  0EDD               	movlw	-35
 11241  0123D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11242  0123D8  2ADE               	incf	postinc2,f,c
 11243  0123DA  0E00               	movlw	0
 11244  0123DC  22DD               	addwfc	postdec2,f,c
 11245                           
 11246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11247  0123DE  6A0A               	clrf	_width^0,c
 11248  0123E0  6A0B               	clrf	(_width+1)^0,c
 11249  0123E2  6A0E               	clrf	_flags^0,c
 11250  0123E4  6A0F               	clrf	(_flags+1)^0,c
 11251                           
 11252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11253  0123E6  680C               	setf	_prec^0,c
 11254  0123E8  680D               	setf	(_prec+1)^0,c
 11255                           
 11256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11257                           ;stkvar	_fmt @ sp[(-32)+-4]
 11258  0123EA  0EDC               	movlw	-36
 11259  0123EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11260  0123F2  0EDD               	movlw	-35
 11261  0123F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11262  0123FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11263  012400  006F FF77 FFF7     	movff	postdec2,tblptrh
 11264  012406                     	if	0	;tblptru may be non-zero
 11265  012406                     	endif
 11266  012406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11267  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11268  012408  6EF8               	movwf	tblptru,c
 11269  01240A                     	endif
 11270  01240A  0008               	tblrd		*
 11271  01240C  50F5               	movf	tablat,w,c
 11272  01240E  0A2A               	xorlw	42
 11273  012410  A4D8               	btfss	status,2,c
 11274  012412  D031               	goto	l12249
 11275                           
 11276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11277                           ;stkvar	_fmt @ sp[(-32)+-4]
 11278  012414  0EDC               	movlw	-36
 11279  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11280  01241C  0EDD               	movlw	-35
 11281  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11282  012424  2ADE               	incf	postinc2,f,c
 11283  012426  0E00               	movlw	0
 11284  012428  22DD               	addwfc	postdec2,f,c
 11285                           
 11286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11287                           ;stkvar	_ap @ sp[(-32)+-6]
 11288  01242A  0EDA               	movlw	-38
 11289  01242C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11290  012432  0EDB               	movlw	-37
 11291  012434  006F FF8F FFDA     	movff	plusw1,fsr2h
 11292  01243A  0E02               	movlw	2
 11293  01243C  5EDE               	subwf	postinc2,f,c
 11294  01243E  0E00               	movlw	0
 11295  012440  5ADD               	subwfb	postdec2,f,c
 11296  012442  006F FF78  F030    	movff	postinc2,btemp+10
 11297  012448  006F FF74  F031    	movff	postdec2,btemp+11
 11298  01244E  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11299  012454  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11300  01245A  006F FF78  F00A    	movff	postinc2,_width
 11301  012460  006F FF74  F00B    	movff	postdec2,_width+1
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11304  012466  AE0B               	btfss	(_width+1)^0,7,c
 11305  012468  D066               	goto	u11890
 11306                           
 11307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11308  01246A  800E               	bsf	_flags^0,0,c
 11309                           
 11310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11311  01246C  6C0A               	negf	_width^0,c
 11312  01246E  1E0B               	comf	(_width+1)^0,f,c
 11313  012470  B0D8               	btfsc	status,0,c
 11314  012472  2A0B               	incf	(_width+1)^0,f,c
 11315  012474  D060               	goto	u11890
 11316  012476                     l12249:
 11317                           
 11318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11319                           ;stkvar	_fmt @ sp[(-32)+-4]
 11320  012476  0EDC               	movlw	-36
 11321  012478  006F FF8F FFD9     	movff	plusw1,fsr2l
 11322  01247E  0EDD               	movlw	-35
 11323  012480  006F FF8F FFDA     	movff	plusw1,fsr2h
 11324  012486  006F FF78  F030    	movff	postinc2,btemp+10
 11325  01248C  006F FF74  F031    	movff	postdec2,btemp+11
 11326  012492  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11327  012498  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11328  01249E  EC08  F0BB         	call	_atoi	;wreg free
 11329  0124A2  0060  F098  F00A   	movff	btemp,_width
 11330  0124A8  0060  F09C  F00B   	movff	btemp+1,_width+1
 11331                           
 11332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11333  0124AE  D00B               	goto	l12253
 11334  0124B0                     l12251:
 11335                           
 11336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11337                           ;stkvar	_fmt @ sp[(-32)+-4]
 11338  0124B0  0EDC               	movlw	-36
 11339  0124B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11340  0124B8  0EDD               	movlw	-35
 11341  0124BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11342  0124C0  2ADE               	incf	postinc2,f,c
 11343  0124C2  0E00               	movlw	0
 11344  0124C4  22DD               	addwfc	postdec2,f,c
 11345  0124C6                     l12253:
 11346  0124C6  0ED0               	movlw	208
 11347  0124C8  6E30               	movwf	(btemp+10)^0,c
 11348  0124CA  0EFF               	movlw	255
 11349  0124CC  6E31               	movwf	(btemp+11)^0,c
 11350                           
 11351                           ;stkvar	_fmt @ sp[(-32)+-4]
 11352  0124CE  0EDC               	movlw	-36
 11353  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11354  0124D6  0EDD               	movlw	-35
 11355  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11356  0124DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11357  0124E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11358  0124EA                     	if	0	;tblptru may be non-zero
 11359  0124EA                     	endif
 11360  0124EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11361  0124EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11362  0124EC  6EF8               	movwf	tblptru,c
 11363  0124EE                     	endif
 11364  0124EE  0008               	tblrd		*
 11365  0124F0  50F5               	movf	tablat,w,c
 11366  0124F2  6E2E               	movwf	(btemp+8)^0,c
 11367  0124F4  6A2F               	clrf	(btemp+9)^0,c
 11368  0124F6  5030               	movf	(btemp+10)^0,w,c
 11369  0124F8  262E               	addwf	(btemp+8)^0,f,c
 11370  0124FA  5031               	movf	(btemp+11)^0,w,c
 11371  0124FC  222F               	addwfc	(btemp+9)^0,f,c
 11372  0124FE  502F               	movf	(btemp+9)^0,w,c
 11373  012500  E106               	bnz	u11870
 11374  012502  0E0A               	movlw	10
 11375  012504  5C2E               	subwf	(btemp+8)^0,w,c
 11376  012506  B0D8               	btfsc	status,0,c
 11377  012508  D002               	goto	u11870
 11378  01250A  0E01               	movlw	1
 11379  01250C  D001               	goto	u11880
 11380  01250E                     u11870:
 11381  01250E  0E00               	movlw	0
 11382  012510                     u11880:
 11383  012510  6E30               	movwf	(btemp+10)^0,c
 11384  012512  6A31               	clrf	(btemp+11)^0,c
 11385                           
 11386                           ;stkvar	_vfpfcnvrt$5542 @ sp[(-32)+4]
 11387  012514  0EE4               	movlw	-28
 11388  012516  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11389  01251C  0EE5               	movlw	-27
 11390  01251E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11391                           
 11392                           ;stkvar	_vfpfcnvrt$5542 @ sp[(-32)+4]
 11393  012524  0EE4               	movlw	-28
 11394  012526  006F FF8C  F026    	movff	plusw1,btemp
 11395  01252C  0EE5               	movlw	-27
 11396  01252E  50E3               	movf	plusw1,w,c
 11397  012530  1026               	iorwf	btemp^0,w,c
 11398  012532  A4D8               	btfss	status,2,c
 11399  012534  D7BD               	goto	l12251
 11400  012536                     u11890:
 11401                           
 11402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11403                           ;stkvar	_fmt @ sp[(-32)+-4]
 11404  012536  0EDC               	movlw	-36
 11405  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
 11406  01253E  0EDD               	movlw	-35
 11407  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
 11408  012546  006F FF7B FFF6     	movff	postinc2,tblptrl
 11409  01254C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11410  012552                     	if	0	;tblptru may be non-zero
 11411  012552                     	endif
 11412  012552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11413  012552  0E00               	movlw	low (__mediumconst shr (0+16))
 11414  012554  6EF8               	movwf	tblptru,c
 11415  012556                     	endif
 11416  012556  0008               	tblrd		*
 11417  012558  50F5               	movf	tablat,w,c
 11418  01255A  0A2E               	xorlw	46
 11419  01255C  A4D8               	btfss	status,2,c
 11420  01255E  D0AC               	goto	u11940
 11421                           
 11422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11423  012560  6A0C               	clrf	_prec^0,c
 11424  012562  6A0D               	clrf	(_prec+1)^0,c
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11427                           ;stkvar	_fmt @ sp[(-32)+-4]
 11428  012564  0EDC               	movlw	-36
 11429  012566  006F FF8F FFD9     	movff	plusw1,fsr2l
 11430  01256C  0EDD               	movlw	-35
 11431  01256E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11432  012574  2ADE               	incf	postinc2,f,c
 11433  012576  0E00               	movlw	0
 11434  012578  22DD               	addwfc	postdec2,f,c
 11435                           
 11436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11437                           ;stkvar	_fmt @ sp[(-32)+-4]
 11438  01257A  0EDC               	movlw	-36
 11439  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11440  012582  0EDD               	movlw	-35
 11441  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11442  01258A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11443  012590  006F FF77 FFF7     	movff	postdec2,tblptrh
 11444  012596                     	if	0	;tblptru may be non-zero
 11445  012596                     	endif
 11446  012596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11447  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 11448  012598  6EF8               	movwf	tblptru,c
 11449  01259A                     	endif
 11450  01259A  0008               	tblrd		*
 11451  01259C  50F5               	movf	tablat,w,c
 11452  01259E  0A2A               	xorlw	42
 11453  0125A0  A4D8               	btfss	status,2,c
 11454  0125A2  D02A               	goto	l12271
 11455                           
 11456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11457                           ;stkvar	_fmt @ sp[(-32)+-4]
 11458  0125A4  0EDC               	movlw	-36
 11459  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11460  0125AC  0EDD               	movlw	-35
 11461  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11462  0125B4  2ADE               	incf	postinc2,f,c
 11463  0125B6  0E00               	movlw	0
 11464  0125B8  22DD               	addwfc	postdec2,f,c
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11467                           ;stkvar	_ap @ sp[(-32)+-6]
 11468  0125BA  0EDA               	movlw	-38
 11469  0125BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11470  0125C2  0EDB               	movlw	-37
 11471  0125C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11472  0125CA  0E02               	movlw	2
 11473  0125CC  5EDE               	subwf	postinc2,f,c
 11474  0125CE  0E00               	movlw	0
 11475  0125D0  5ADD               	subwfb	postdec2,f,c
 11476  0125D2  006F FF78  F030    	movff	postinc2,btemp+10
 11477  0125D8  006F FF74  F031    	movff	postdec2,btemp+11
 11478  0125DE  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11479  0125E4  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11480  0125EA  006F FF78  F00C    	movff	postinc2,_prec
 11481  0125F0  006F FF74  F00D    	movff	postdec2,_prec+1
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11484  0125F6  D060               	goto	u11940
 11485  0125F8                     l12271:
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11488                           ;stkvar	_fmt @ sp[(-32)+-4]
 11489  0125F8  0EDC               	movlw	-36
 11490  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11491  012600  0EDD               	movlw	-35
 11492  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 11493  012608  006F FF78  F030    	movff	postinc2,btemp+10
 11494  01260E  006F FF74  F031    	movff	postdec2,btemp+11
 11495  012614  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11496  01261A  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11497  012620  EC08  F0BB         	call	_atoi	;wreg free
 11498  012624  0060  F098  F00C   	movff	btemp,_prec
 11499  01262A  0060  F09C  F00D   	movff	btemp+1,_prec+1
 11500                           
 11501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11502  012630  D00B               	goto	l12275
 11503  012632                     l12273:
 11504                           
 11505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11506                           ;stkvar	_fmt @ sp[(-32)+-4]
 11507  012632  0EDC               	movlw	-36
 11508  012634  006F FF8F FFD9     	movff	plusw1,fsr2l
 11509  01263A  0EDD               	movlw	-35
 11510  01263C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11511  012642  2ADE               	incf	postinc2,f,c
 11512  012644  0E00               	movlw	0
 11513  012646  22DD               	addwfc	postdec2,f,c
 11514  012648                     l12275:
 11515  012648  0ED0               	movlw	208
 11516  01264A  6E30               	movwf	(btemp+10)^0,c
 11517  01264C  0EFF               	movlw	255
 11518  01264E  6E31               	movwf	(btemp+11)^0,c
 11519                           
 11520                           ;stkvar	_fmt @ sp[(-32)+-4]
 11521  012650  0EDC               	movlw	-36
 11522  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 11523  012658  0EDD               	movlw	-35
 11524  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11525  012660  006F FF7B FFF6     	movff	postinc2,tblptrl
 11526  012666  006F FF77 FFF7     	movff	postdec2,tblptrh
 11527  01266C                     	if	0	;tblptru may be non-zero
 11528  01266C                     	endif
 11529  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11530  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 11531  01266E  6EF8               	movwf	tblptru,c
 11532  012670                     	endif
 11533  012670  0008               	tblrd		*
 11534  012672  50F5               	movf	tablat,w,c
 11535  012674  6E2E               	movwf	(btemp+8)^0,c
 11536  012676  6A2F               	clrf	(btemp+9)^0,c
 11537  012678  5030               	movf	(btemp+10)^0,w,c
 11538  01267A  262E               	addwf	(btemp+8)^0,f,c
 11539  01267C  5031               	movf	(btemp+11)^0,w,c
 11540  01267E  222F               	addwfc	(btemp+9)^0,f,c
 11541  012680  502F               	movf	(btemp+9)^0,w,c
 11542  012682  E106               	bnz	u11920
 11543  012684  0E0A               	movlw	10
 11544  012686  5C2E               	subwf	(btemp+8)^0,w,c
 11545  012688  B0D8               	btfsc	status,0,c
 11546  01268A  D002               	goto	u11920
 11547  01268C  0E01               	movlw	1
 11548  01268E  D001               	goto	u11930
 11549  012690                     u11920:
 11550  012690  0E00               	movlw	0
 11551  012692                     u11930:
 11552  012692  6E30               	movwf	(btemp+10)^0,c
 11553  012694  6A31               	clrf	(btemp+11)^0,c
 11554                           
 11555                           ;stkvar	_vfpfcnvrt$5543 @ sp[(-32)+0]
 11556  012696  0EE0               	movlw	-32
 11557  012698  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11558  01269E  0EE1               	movlw	-31
 11559  0126A0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11560                           
 11561                           ;stkvar	_vfpfcnvrt$5543 @ sp[(-32)+0]
 11562  0126A6  0EE0               	movlw	-32
 11563  0126A8  006F FF8C  F026    	movff	plusw1,btemp
 11564  0126AE  0EE1               	movlw	-31
 11565  0126B0  50E3               	movf	plusw1,w,c
 11566  0126B2  1026               	iorwf	btemp^0,w,c
 11567  0126B4  A4D8               	btfss	status,2,c
 11568  0126B6  D7BD               	goto	l12273
 11569  0126B8                     u11940:
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11572                           ;stkvar	_fmt @ sp[(-32)+-4]
 11573  0126B8  0EDC               	movlw	-36
 11574  0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11575  0126C0  0EDD               	movlw	-35
 11576  0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11577  0126C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11578  0126CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11579  0126D4                     	if	0	;tblptru may be non-zero
 11580  0126D4                     	endif
 11581  0126D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11582  0126D4  0E00               	movlw	low (__mediumconst shr (0+16))
 11583  0126D6  6EF8               	movwf	tblptru,c
 11584  0126D8                     	endif
 11585  0126D8  0008               	tblrd		*
 11586  0126DA  50F5               	movf	tablat,w,c
 11587  0126DC  6EE6               	movwf	postinc1,c
 11588  0126DE  0E00               	movlw	0
 11589  0126E0  6EE6               	movwf	postinc1,c
 11590  0126E2  ECBB  F0D3         	call	_tolower	;wreg free
 11591                           
 11592                           ;stkvar	_ct @ sp[(-32)+26]
 11593  0126E6  0EFA               	movlw	-6
 11594  0126E8  0060  F09B  FFE3   	movff	btemp,plusw1
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11597                           ;stkvar	_ct @ sp[(-32)+26]
 11598  0126EE  0EFA               	movlw	-6
 11599  0126F0  50E3               	movf	plusw1,w,c
 11600  0126F2  B4D8               	btfsc	status,2,c
 11601  0126F4  D05B               	goto	l12291
 11602                           
 11603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11604                           ;stkvar	_ct @ sp[(-32)+26]
 11605  0126F6  0EFB               	movlw	251
 11606  0126F8  24E1               	addwf	fsr1l,w,c
 11607  0126FA  6ED9               	movwf	fsr2l,c
 11608  0126FC  0EFF               	movlw	255
 11609  0126FE  20E2               	addwfc	fsr1h,w,c
 11610  012700  6EDA               	movwf	fsr2h,c
 11611                           
 11612                           ;stkvar	_fmt @ sp[(-32)+-4]
 11613  012702  0EDC               	movlw	-36
 11614  012704  006F FF8F FFE9     	movff	plusw1,fsr0l
 11615  01270A  0EDD               	movlw	-35
 11616  01270C  006F FF8F FFEA     	movff	plusw1,fsr0h
 11617  012712  006F FFB8  F030    	movff	postinc0,btemp+10
 11618  012718  006F FFB4  F031    	movff	postdec0,btemp+11
 11619  01271E  0E01               	movlw	1
 11620  012720  2630               	addwf	(btemp+10)^0,f,c
 11621  012722  0E00               	movlw	0
 11622  012724  2231               	addwfc	(btemp+11)^0,f,c
 11623  012726  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11624  01272C  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11625  012732                     	if	0	;tblptru may be non-zero
 11626  012732                     	endif
 11627  012732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11628  012732  0E00               	movlw	low (__mediumconst shr (0+16))
 11629  012734  6EF8               	movwf	tblptru,c
 11630  012736                     	endif
 11631  012736  0008               	tblrd		*
 11632  012738  50F5               	movf	tablat,w,c
 11633  01273A  6EE6               	movwf	postinc1,c
 11634  01273C  0E00               	movlw	0
 11635  01273E  6EE6               	movwf	postinc1,c
 11636  012740  ECBB  F0D3         	call	_tolower	;wreg free
 11637  012744  5026               	movf	btemp^0,w,c
 11638  012746  6EDF               	movwf	indf2,c
 11639                           
 11640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11641                           ;stkvar	_ct @ sp[(-32)+26]
 11642  012748  0EFB               	movlw	251
 11643  01274A  24E1               	addwf	fsr1l,w,c
 11644  01274C  6ED9               	movwf	fsr2l,c
 11645  01274E  0EFF               	movlw	255
 11646  012750  20E2               	addwfc	fsr1h,w,c
 11647  012752  6EDA               	movwf	fsr2h,c
 11648  012754  50DF               	movf	indf2,w,c
 11649  012756  B4D8               	btfsc	status,2,c
 11650  012758  D029               	goto	l12291
 11651                           
 11652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11653                           ;stkvar	_ct @ sp[(-32)+26]
 11654  01275A  0EFC               	movlw	252
 11655  01275C  24E1               	addwf	fsr1l,w,c
 11656  01275E  6ED9               	movwf	fsr2l,c
 11657  012760  0EFF               	movlw	255
 11658  012762  20E2               	addwfc	fsr1h,w,c
 11659  012764  6EDA               	movwf	fsr2h,c
 11660                           
 11661                           ;stkvar	_fmt @ sp[(-32)+-4]
 11662  012766  0EDC               	movlw	-36
 11663  012768  006F FF8F FFE9     	movff	plusw1,fsr0l
 11664  01276E  0EDD               	movlw	-35
 11665  012770  006F FF8F FFEA     	movff	plusw1,fsr0h
 11666  012776  006F FFB8  F030    	movff	postinc0,btemp+10
 11667  01277C  006F FFB4  F031    	movff	postdec0,btemp+11
 11668  012782  0E02               	movlw	2
 11669  012784  2630               	addwf	(btemp+10)^0,f,c
 11670  012786  0E00               	movlw	0
 11671  012788  2231               	addwfc	(btemp+11)^0,f,c
 11672  01278A  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11673  012790  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11674  012796                     	if	0	;tblptru may be non-zero
 11675  012796                     	endif
 11676  012796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11677  012796  0E00               	movlw	low (__mediumconst shr (0+16))
 11678  012798  6EF8               	movwf	tblptru,c
 11679  01279A                     	endif
 11680  01279A  0008               	tblrd		*
 11681  01279C  50F5               	movf	tablat,w,c
 11682  01279E  6EE6               	movwf	postinc1,c
 11683  0127A0  0E00               	movlw	0
 11684  0127A2  6EE6               	movwf	postinc1,c
 11685  0127A4  ECBB  F0D3         	call	_tolower	;wreg free
 11686  0127A8  5026               	movf	btemp^0,w,c
 11687  0127AA  6EDF               	movwf	indf2,c
 11688  0127AC                     l12291:
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11691                           ;stkvar	_fmt @ sp[(-32)+-4]
 11692  0127AC  0EDC               	movlw	-36
 11693  0127AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11694  0127B4  0EDD               	movlw	-35
 11695  0127B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11696  0127BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11697  0127C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11698  0127C8                     	if	0	;tblptru may be non-zero
 11699  0127C8                     	endif
 11700  0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11701  0127C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11702  0127CA  6EF8               	movwf	tblptru,c
 11703  0127CC                     	endif
 11704  0127CC  0008               	tblrd		*
 11705  0127CE  50F5               	movf	tablat,w,c
 11706  0127D0  0A63               	xorlw	99
 11707  0127D2  A4D8               	btfss	status,2,c
 11708  0127D4  D037               	goto	l12301
 11709                           
 11710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11711                           ;stkvar	_fmt @ sp[(-32)+-4]
 11712  0127D6  0EDC               	movlw	-36
 11713  0127D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11714  0127DE  0EDD               	movlw	-35
 11715  0127E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11716  0127E6  2ADE               	incf	postinc2,f,c
 11717  0127E8  0E00               	movlw	0
 11718  0127EA  22DD               	addwfc	postdec2,f,c
 11719                           
 11720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11721                           ;stkvar	_ap @ sp[(-32)+-6]
 11722  0127EC  0EDA               	movlw	-38
 11723  0127EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11724  0127F4  0EDB               	movlw	-37
 11725  0127F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11726  0127FC  0E02               	movlw	2
 11727  0127FE  5EDE               	subwf	postinc2,f,c
 11728  012800  0E00               	movlw	0
 11729  012802  5ADD               	subwfb	postdec2,f,c
 11730  012804  006F FF78  F030    	movff	postinc2,btemp+10
 11731  01280A  006F FF74  F031    	movff	postdec2,btemp+11
 11732  012810  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11733  012816  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11734  01281C  50DF               	movf	indf2,w,c
 11735  01281E  6E31               	movwf	(btemp+11)^0,c
 11736                           
 11737                           ;stkvar	_c @ sp[(-32)+31]
 11738  012820  0EFF               	movlw	-1
 11739  012822  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11740                           
 11741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11742                           ;stkvar	_c @ sp[(-32)+31]
 11743  012828  0EFF               	movlw	-1
 11744  01282A  50E3               	movf	plusw1,w,c
 11745  01282C  6EE6               	movwf	postinc1,c
 11746                           
 11747                           ;stkvar	_fp @ sp[(-33)+-2]
 11748  01282E  0EDD               	movlw	-35
 11749  012830  006F FF8F FFE6     	movff	plusw1,postinc1
 11750  012836  006F FF8F FFE6     	movff	plusw1,postinc1
 11751  01283C  EC35  F0D3         	call	_ctoa	;wreg free
 11752  012840  EF9B  F099         	goto	l2363
 11753  012844                     l12301:
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11756                           ;stkvar	_fmt @ sp[(-32)+-4]
 11757  012844  0EDC               	movlw	-36
 11758  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11759  01284C  0EDD               	movlw	-35
 11760  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11761  012854  006F FF7B FFF6     	movff	postinc2,tblptrl
 11762  01285A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11763  012860                     	if	0	;tblptru may be non-zero
 11764  012860                     	endif
 11765  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11766  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 11767  012862  6EF8               	movwf	tblptru,c
 11768  012864                     	endif
 11769  012864  0008               	tblrd		*
 11770  012866  50F5               	movf	tablat,w,c
 11771  012868  0A64               	xorlw	100
 11772  01286A  B4D8               	btfsc	status,2,c
 11773  01286C  D015               	goto	u11990
 11774                           
 11775                           ;stkvar	_fmt @ sp[(-32)+-4]
 11776  01286E  0EDC               	movlw	-36
 11777  012870  006F FF8F FFD9     	movff	plusw1,fsr2l
 11778  012876  0EDD               	movlw	-35
 11779  012878  006F FF8F FFDA     	movff	plusw1,fsr2h
 11780  01287E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11781  012884  006F FF77 FFF7     	movff	postdec2,tblptrh
 11782  01288A                     	if	0	;tblptru may be non-zero
 11783  01288A                     	endif
 11784  01288A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11785  01288A  0E00               	movlw	low (__mediumconst shr (0+16))
 11786  01288C  6EF8               	movwf	tblptru,c
 11787  01288E                     	endif
 11788  01288E  0008               	tblrd		*
 11789  012890  50F5               	movf	tablat,w,c
 11790  012892  0A69               	xorlw	105
 11791  012894  A4D8               	btfss	status,2,c
 11792  012896  D076               	goto	l12313
 11793  012898                     u11990:
 11794                           
 11795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11796                           ;stkvar	_fmt @ sp[(-32)+-4]
 11797  012898  0EDC               	movlw	-36
 11798  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11799  0128A0  0EDD               	movlw	-35
 11800  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11801  0128A8  2ADE               	incf	postinc2,f,c
 11802  0128AA  0E00               	movlw	0
 11803  0128AC  22DD               	addwfc	postdec2,f,c
 11804                           
 11805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11806                           ;stkvar	_ap @ sp[(-32)+-6]
 11807  0128AE  0EDA               	movlw	-38
 11808  0128B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11809  0128B6  0EDB               	movlw	-37
 11810  0128B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11811  0128BE  0E02               	movlw	2
 11812  0128C0  5EDE               	subwf	postinc2,f,c
 11813  0128C2  0E00               	movlw	0
 11814  0128C4  5ADD               	subwfb	postdec2,f,c
 11815  0128C6  006F FF78  F030    	movff	postinc2,btemp+10
 11816  0128CC  006F FF74  F031    	movff	postdec2,btemp+11
 11817  0128D2  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11818  0128D8  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11819  0128DE  006F FF78  F030    	movff	postinc2,btemp+10
 11820  0128E4  006F FF74  F031    	movff	postdec2,btemp+11
 11821                           
 11822                           ;stkvar	_ll @ sp[(-32)+14]
 11823  0128EA  0EEE               	movlw	-18
 11824  0128EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11825  0128F2  0EEF               	movlw	-17
 11826  0128F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11827  0128FA  6A26               	clrf	btemp^0,c
 11828  0128FC  BEE3               	btfsc	plusw1,7,c
 11829  0128FE  6826               	setf	btemp^0,c
 11830  012900  0EF0               	movlw	-16
 11831  012902  0060  F09B  FFE3   	movff	btemp,plusw1
 11832  012908  0EF1               	movlw	-15
 11833  01290A  0060  F09B  FFE3   	movff	btemp,plusw1
 11834  012910  0EF2               	movlw	-14
 11835  012912  0060  F09B  FFE3   	movff	btemp,plusw1
 11836  012918  0EF3               	movlw	-13
 11837  01291A  0060  F09B  FFE3   	movff	btemp,plusw1
 11838  012920  0EF4               	movlw	-12
 11839  012922  0060  F09B  FFE3   	movff	btemp,plusw1
 11840  012928  0EF5               	movlw	-11
 11841  01292A  0060  F09B  FFE3   	movff	btemp,plusw1
 11842  012930                     l12309:
 11843                           
 11844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11845                           ;stkvar	_ll @ sp[(-32)+14]
 11846  012930  50E1               	movf	fsr1l,w,c
 11847  012932  0FEE               	addlw	-18
 11848  012934  6ED9               	movwf	fsr2l,c
 11849  012936  50E2               	movf	fsr1h,w,c
 11850  012938  6EDA               	movwf	fsr2h,c
 11851  01293A  0EFF               	movlw	255
 11852  01293C  22DA               	addwfc	fsr2h,f,c
 11853  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 11854  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 11855  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 11856  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 11857  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 11858  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 11859  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 11860  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 11861                           
 11862                           ;stkvar	_fp @ sp[(-40)+-2]
 11863  01296E  0ED6               	movlw	-42
 11864  012970  006F FF8F FFE6     	movff	plusw1,postinc1
 11865  012976  006F FF8F FFE6     	movff	plusw1,postinc1
 11866  01297C  EC5E  F0AA         	call	_dtoa	;wreg free
 11867  012980  EF9B  F099         	goto	l2363
 11868  012984                     l12313:
 11869                           
 11870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11871  012984  0E02               	movlw	2
 11872  012986  6EE6               	movwf	postinc1,c
 11873  012988  0E00               	movlw	0
 11874  01298A  6EE6               	movwf	postinc1,c
 11875  01298C  0EE9               	movlw	low STR_74
 11876  01298E  6EE6               	movwf	postinc1,c
 11877  012990  0EFF               	movlw	high STR_74
 11878  012992  6EE6               	movwf	postinc1,c
 11879                           
 11880                           ;stkvar	_fmt @ sp[(-36)+-4]
 11881  012994  0ED8               	movlw	-40
 11882  012996  006F FF8F FFD9     	movff	plusw1,fsr2l
 11883  01299C  0ED9               	movlw	-39
 11884  01299E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11885  0129A4  006F FF78  F030    	movff	postinc2,btemp+10
 11886  0129AA  006F FF74  F031    	movff	postdec2,btemp+11
 11887  0129B0  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11888  0129B6  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11889  0129BC  EC62  F0BD         	call	_strncmp	;wreg free
 11890  0129C0  5026               	movf	btemp^0,w,c
 11891  0129C2  1027               	iorwf	(btemp+1)^0,w,c
 11892  0129C4  B4D8               	btfsc	status,2,c
 11893  0129C6  D022               	goto	u12010
 11894  0129C8  0E02               	movlw	2
 11895  0129CA  6EE6               	movwf	postinc1,c
 11896  0129CC  0E00               	movlw	0
 11897  0129CE  6EE6               	movwf	postinc1,c
 11898  0129D0  0EEF               	movlw	low STR_78
 11899  0129D2  6EE6               	movwf	postinc1,c
 11900  0129D4  0EFF               	movlw	high STR_78
 11901  0129D6  6EE6               	movwf	postinc1,c
 11902                           
 11903                           ;stkvar	_fmt @ sp[(-36)+-4]
 11904  0129D8  0ED8               	movlw	-40
 11905  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11906  0129E0  0ED9               	movlw	-39
 11907  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11908  0129E8  006F FF78  F030    	movff	postinc2,btemp+10
 11909  0129EE  006F FF74  F031    	movff	postdec2,btemp+11
 11910  0129F4  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11911  0129FA  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11912  012A00  EC62  F0BD         	call	_strncmp	;wreg free
 11913  012A04  5026               	movf	btemp^0,w,c
 11914  012A06  1027               	iorwf	(btemp+1)^0,w,c
 11915  012A08  A4D8               	btfss	status,2,c
 11916  012A0A  D069               	goto	l12325
 11917  012A0C                     u12010:
 11918                           
 11919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11920                           ;stkvar	_fmt @ sp[(-32)+-4]
 11921  012A0C  0EDC               	movlw	-36
 11922  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11923  012A14  0EDD               	movlw	-35
 11924  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11925  012A1C  0E02               	movlw	2
 11926  012A1E  26DE               	addwf	postinc2,f,c
 11927  012A20  0E00               	movlw	0
 11928  012A22  22DD               	addwfc	postdec2,f,c
 11929                           
 11930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11931                           ;stkvar	_ap @ sp[(-32)+-6]
 11932  012A24  0EDA               	movlw	-38
 11933  012A26  006F FF8F FFD9     	movff	plusw1,fsr2l
 11934  012A2C  0EDB               	movlw	-37
 11935  012A2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11936  012A34  0E04               	movlw	4
 11937  012A36  5EDE               	subwf	postinc2,f,c
 11938  012A38  0E00               	movlw	0
 11939  012A3A  5ADD               	subwfb	postdec2,f,c
 11940  012A3C  006F FF78  F030    	movff	postinc2,btemp+10
 11941  012A42  006F FF74  F031    	movff	postdec2,btemp+11
 11942  012A48  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11943  012A4E  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11944  012A54  006F FF78  F02E    	movff	postinc2,btemp+8
 11945  012A5A  006F FF78  F02F    	movff	postinc2,btemp+9
 11946  012A60  006F FF78  F030    	movff	postinc2,btemp+10
 11947  012A66  006F FF78  F031    	movff	postinc2,btemp+11
 11948  012A6C  0060  F0B8  F036   	movff	btemp+8,btemp+16
 11949  012A72  0060  F0BC  F037   	movff	btemp+9,btemp+17
 11950  012A78  0060  F0C0  F038   	movff	btemp+10,btemp+18
 11951  012A7E  0060  F0C4  F039   	movff	btemp+11,btemp+19
 11952  012A84  6A3A               	clrf	(btemp+20)^0,c
 11953  012A86  BE39               	btfsc	(btemp+19)^0,7,c
 11954  012A88  683A               	setf	(btemp+20)^0,c
 11955  012A8A  0060  F0E8  F03B   	movff	btemp+20,btemp+21
 11956  012A90  0060  F0E8  F03C   	movff	btemp+20,btemp+22
 11957  012A96  0060  F0E8  F03D   	movff	btemp+20,btemp+23
 11958                           
 11959                           ;stkvar	_ll @ sp[(-32)+14]
 11960  012A9C  0EEE               	movlw	-18
 11961  012A9E  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 11962  012AA4  0EEF               	movlw	-17
 11963  012AA6  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 11964  012AAC  0EF0               	movlw	-16
 11965  012AAE  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 11966  012AB4  0EF1               	movlw	-15
 11967  012AB6  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 11968  012ABC  0EF2               	movlw	-14
 11969  012ABE  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 11970  012AC4  0EF3               	movlw	-13
 11971  012AC6  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 11972  012ACC  0EF4               	movlw	-12
 11973  012ACE  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 11974  012AD4  0EF5               	movlw	-11
 11975  012AD6  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 11976  012ADC  D729               	goto	l12309
 11977  012ADE                     l12325:
 11978                           
 11979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11980                           ;stkvar	_ct @ sp[(-32)+26]
 11981  012ADE  0EFA               	movlw	-6
 11982  012AE0  006F FF8C  F026    	movff	plusw1,btemp
 11983  012AE6  0E66               	movlw	102
 11984  012AE8  1826               	xorwf	btemp^0,w,c
 11985  012AEA  A4D8               	btfss	status,2,c
 11986  012AEC  D06E               	goto	l12337
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11989                           ;stkvar	_fmt @ sp[(-32)+-4]
 11990  012AEE  0EDC               	movlw	-36
 11991  012AF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11992  012AF6  0EDD               	movlw	-35
 11993  012AF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11994  012AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11995  012B04  006F FF77 FFF7     	movff	postdec2,tblptrh
 11996  012B0A                     	if	0	;tblptru may be non-zero
 11997  012B0A                     	endif
 11998  012B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11999  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12000  012B0C  6EF8               	movwf	tblptru,c
 12001  012B0E                     	endif
 12002                           
 12003                           ;stkvar	_c @ sp[(-32)+31]
 12004  012B0E  0008               	tblrd		*
 12005  012B10  0EFF               	movlw	-1
 12006  012B12  006F FFD7 FFE3     	movff	tablat,plusw1
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12009                           ;stkvar	_fmt @ sp[(-32)+-4]
 12010  012B18  0EDC               	movlw	-36
 12011  012B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12012  012B20  0EDD               	movlw	-35
 12013  012B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12014  012B28  2ADE               	incf	postinc2,f,c
 12015  012B2A  0E00               	movlw	0
 12016  012B2C  22DD               	addwfc	postdec2,f,c
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12019                           ;stkvar	_ap @ sp[(-32)+-6]
 12020  012B2E  0EDA               	movlw	-38
 12021  012B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 12022  012B36  0EDB               	movlw	-37
 12023  012B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 12024  012B3E  0E04               	movlw	4
 12025  012B40  5EDE               	subwf	postinc2,f,c
 12026  012B42  0E00               	movlw	0
 12027  012B44  5ADD               	subwfb	postdec2,f,c
 12028  012B46  006F FF78  F030    	movff	postinc2,btemp+10
 12029  012B4C  006F FF74  F031    	movff	postdec2,btemp+11
 12030  012B52  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12031  012B58  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12032  012B5E  006F FF78  F02E    	movff	postinc2,btemp+8
 12033  012B64  006F FF78  F02F    	movff	postinc2,btemp+9
 12034  012B6A  006F FF78  F030    	movff	postinc2,btemp+10
 12035  012B70  006F FF78  F031    	movff	postinc2,btemp+11
 12036                           
 12037                           ;stkvar	_f @ sp[(-32)+22]
 12038  012B76  0EF6               	movlw	-10
 12039  012B78  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 12040  012B7E  0EF7               	movlw	-9
 12041  012B80  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 12042  012B86  0EF8               	movlw	-8
 12043  012B88  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12044  012B8E  0EF9               	movlw	-7
 12045  012B90  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12046  012B96                     l12333:
 12047                           
 12048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12049                           ;stkvar	_c @ sp[(-32)+31]
 12050  012B96  0EFF               	movlw	-1
 12051  012B98  50E3               	movf	plusw1,w,c
 12052  012B9A  6EE6               	movwf	postinc1,c
 12053                           
 12054                           ;stkvar	_f @ sp[(-33)+22]
 12055  012B9C  0EF5               	movlw	-11
 12056  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12057  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12058  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12059  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12060                           
 12061                           ;stkvar	_fp @ sp[(-37)+-2]
 12062  012BB6  0ED9               	movlw	-39
 12063  012BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12064  012BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12065  012BC4  EC00  F080         	call	_efgtoa	;wreg free
 12066  012BC8  D3B6               	goto	l2363
 12067  012BCA                     l12337:
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12070  012BCA  0E02               	movlw	2
 12071  012BCC  6EE6               	movwf	postinc1,c
 12072  012BCE  0E00               	movlw	0
 12073  012BD0  6EE6               	movwf	postinc1,c
 12074  012BD2  0EEC               	movlw	low STR_83
 12075  012BD4  6EE6               	movwf	postinc1,c
 12076  012BD6  0EFF               	movlw	high STR_83
 12077  012BD8  6EE6               	movwf	postinc1,c
 12078                           
 12079                           ;stkvar	_ct @ sp[(-36)+26]
 12080  012BDA  0EF6               	movlw	246
 12081  012BDC  24E1               	addwf	fsr1l,w,c
 12082  012BDE  6E26               	movwf	btemp^0,c
 12083  012BE0  0EFF               	movlw	255
 12084  012BE2  20E2               	addwfc	fsr1h,w,c
 12085  012BE4  6E27               	movwf	(btemp+1)^0,c
 12086  012BE6  0060  F09B  FFE6   	movff	btemp,postinc1
 12087  012BEC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 12088  012BF2  EC62  F0BD         	call	_strncmp	;wreg free
 12089  012BF6  5026               	movf	btemp^0,w,c
 12090  012BF8  1027               	iorwf	(btemp+1)^0,w,c
 12091  012BFA  A4D8               	btfss	status,2,c
 12092  012BFC  D096               	goto	l12357
 12093                           
 12094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12095                           ;stkvar	_fmt @ sp[(-32)+-4]
 12096  012BFE  0EDC               	movlw	-36
 12097  012C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12098  012C06  0EDD               	movlw	-35
 12099  012C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12100  012C0E  006F FF78  F030    	movff	postinc2,btemp+10
 12101  012C14  006F FF74  F031    	movff	postdec2,btemp+11
 12102  012C1A  0E01               	movlw	1
 12103  012C1C  2630               	addwf	(btemp+10)^0,f,c
 12104  012C1E  0E00               	movlw	0
 12105  012C20  2231               	addwfc	(btemp+11)^0,f,c
 12106  012C22  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12107  012C28  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12108  012C2E                     	if	0	;tblptru may be non-zero
 12109  012C2E                     	endif
 12110  012C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12111  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12112  012C30  6EF8               	movwf	tblptru,c
 12113  012C32                     	endif
 12114                           
 12115                           ;stkvar	_c @ sp[(-32)+31]
 12116  012C32  0008               	tblrd		*
 12117  012C34  0EFF               	movlw	-1
 12118  012C36  006F FFD7 FFE3     	movff	tablat,plusw1
 12119  012C3C  0EBF               	movlw	191
 12120  012C3E  6E30               	movwf	(btemp+10)^0,c
 12121  012C40  0EFF               	movlw	255
 12122  012C42  6E31               	movwf	(btemp+11)^0,c
 12123                           
 12124                           ;stkvar	_fmt @ sp[(-32)+-4]
 12125  012C44  0EDC               	movlw	-36
 12126  012C46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12127  012C4C  0EDD               	movlw	-35
 12128  012C4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12129  012C54  006F FF7B FFF6     	movff	postinc2,tblptrl
 12130  012C5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12131  012C60                     	if	0	;tblptru may be non-zero
 12132  012C60                     	endif
 12133  012C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12134  012C60  0E00               	movlw	low (__mediumconst shr (0+16))
 12135  012C62  6EF8               	movwf	tblptru,c
 12136  012C64                     	endif
 12137  012C64  0008               	tblrd		*
 12138  012C66  50F5               	movf	tablat,w,c
 12139  012C68  6E2E               	movwf	(btemp+8)^0,c
 12140  012C6A  6A2F               	clrf	(btemp+9)^0,c
 12141  012C6C  5030               	movf	(btemp+10)^0,w,c
 12142  012C6E  262E               	addwf	(btemp+8)^0,f,c
 12143  012C70  5031               	movf	(btemp+11)^0,w,c
 12144  012C72  222F               	addwfc	(btemp+9)^0,f,c
 12145  012C74  502F               	movf	(btemp+9)^0,w,c
 12146  012C76  E106               	bnz	u12040
 12147  012C78  0E1A               	movlw	26
 12148  012C7A  5C2E               	subwf	(btemp+8)^0,w,c
 12149  012C7C  B0D8               	btfsc	status,0,c
 12150  012C7E  D002               	goto	u12040
 12151  012C80  0E01               	movlw	1
 12152  012C82  D001               	goto	u12050
 12153  012C84                     u12040:
 12154  012C84  0E00               	movlw	0
 12155  012C86                     u12050:
 12156  012C86  6E30               	movwf	(btemp+10)^0,c
 12157  012C88  6A31               	clrf	(btemp+11)^0,c
 12158                           
 12159                           ;stkvar	_vfpfcnvrt$5554 @ sp[(-32)+2]
 12160  012C8A  0EE2               	movlw	-30
 12161  012C8C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12162  012C92  0EE3               	movlw	-29
 12163  012C94  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12164                           
 12165                           ;stkvar	_vfpfcnvrt$5554 @ sp[(-32)+2]
 12166  012C9A  0EE2               	movlw	-30
 12167  012C9C  006F FF8C  F026    	movff	plusw1,btemp
 12168  012CA2  0EE3               	movlw	-29
 12169  012CA4  50E3               	movf	plusw1,w,c
 12170  012CA6  1026               	iorwf	btemp^0,w,c
 12171                           
 12172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12173                           ;stkvar	_ap @ sp[(-32)+-6]
 12174                           
 12175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12176                           
 12177                           ;stkvar	_f @ sp[(-32)+22]
 12178                           
 12179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12180                           ;stkvar	_ap @ sp[(-32)+-6]
 12181  012CA8  0EDA               	movlw	-38
 12182  012CAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12183  012CB0  0EDB               	movlw	-37
 12184  012CB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12185  012CB8  0E04               	movlw	4
 12186  012CBA  5EDE               	subwf	postinc2,f,c
 12187  012CBC  0E00               	movlw	0
 12188  012CBE  5ADD               	subwfb	postdec2,f,c
 12189  012CC0  006F FF78  F030    	movff	postinc2,btemp+10
 12190  012CC6  006F FF74  F031    	movff	postdec2,btemp+11
 12191  012CCC  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12192  012CD2  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12193  012CD8  006F FF78  F02E    	movff	postinc2,btemp+8
 12194  012CDE  006F FF78  F02F    	movff	postinc2,btemp+9
 12195  012CE4  006F FF78  F030    	movff	postinc2,btemp+10
 12196  012CEA  006F FF78  F031    	movff	postinc2,btemp+11
 12197                           
 12198                           ;stkvar	_f @ sp[(-32)+22]
 12199  012CF0  0EF6               	movlw	-10
 12200  012CF2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 12201  012CF8  0EF7               	movlw	-9
 12202  012CFA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 12203  012D00  0EF8               	movlw	-8
 12204  012D02  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12205  012D08  0EF9               	movlw	-7
 12206  012D0A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12207                           
 12208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12209                           ;stkvar	_fmt @ sp[(-32)+-4]
 12210  012D10  0EDC               	movlw	-36
 12211  012D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 12212  012D18  0EDD               	movlw	-35
 12213  012D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12214  012D20  0E02               	movlw	2
 12215  012D22  26DE               	addwf	postinc2,f,c
 12216  012D24  0E00               	movlw	0
 12217  012D26  22DD               	addwfc	postdec2,f,c
 12218  012D28  D736               	goto	l12333
 12219  012D2A                     l12357:
 12220                           
 12221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12222                           ;stkvar	_fmt @ sp[(-32)+-4]
 12223  012D2A  0EDC               	movlw	-36
 12224  012D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12225  012D32  0EDD               	movlw	-35
 12226  012D34  006F FF8F FFDA     	movff	plusw1,fsr2h
 12227  012D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12228  012D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 12229  012D46                     	if	0	;tblptru may be non-zero
 12230  012D46                     	endif
 12231  012D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12232  012D46  0E00               	movlw	low (__mediumconst shr (0+16))
 12233  012D48  6EF8               	movwf	tblptru,c
 12234  012D4A                     	endif
 12235  012D4A  0008               	tblrd		*
 12236  012D4C  50F5               	movf	tablat,w,c
 12237  012D4E  0A73               	xorlw	115
 12238  012D50  A4D8               	btfss	status,2,c
 12239  012D52  D042               	goto	l12367
 12240                           
 12241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12242                           ;stkvar	_fmt @ sp[(-32)+-4]
 12243  012D54  0EDC               	movlw	-36
 12244  012D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12245  012D5C  0EDD               	movlw	-35
 12246  012D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12247  012D64  2ADE               	incf	postinc2,f,c
 12248  012D66  0E00               	movlw	0
 12249  012D68  22DD               	addwfc	postdec2,f,c
 12250                           
 12251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12252                           ;stkvar	_ap @ sp[(-32)+-6]
 12253  012D6A  0EDA               	movlw	-38
 12254  012D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12255  012D72  0EDB               	movlw	-37
 12256  012D74  006F FF8F FFDA     	movff	plusw1,fsr2h
 12257  012D7A  0E02               	movlw	2
 12258  012D7C  5EDE               	subwf	postinc2,f,c
 12259  012D7E  0E00               	movlw	0
 12260  012D80  5ADD               	subwfb	postdec2,f,c
 12261  012D82  006F FF78  F030    	movff	postinc2,btemp+10
 12262  012D88  006F FF74  F031    	movff	postdec2,btemp+11
 12263  012D8E  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12264  012D94  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12265  012D9A  006F FF78  F030    	movff	postinc2,btemp+10
 12266  012DA0  006F FF74  F031    	movff	postdec2,btemp+11
 12267                           
 12268                           ;stkvar	_cp @ sp[(-32)+29]
 12269  012DA6  0EFE               	movlw	-2
 12270  012DA8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12271  012DAE  0EFD               	movlw	-3
 12272  012DB0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12273                           
 12274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12275                           ;stkvar	_cp @ sp[(-32)+29]
 12276  012DB6  0EFD               	movlw	-3
 12277  012DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12278  012DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12279                           
 12280                           ;stkvar	_fp @ sp[(-34)+-2]
 12281  012DC4  0EDC               	movlw	-36
 12282  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12283  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12284  012DD2  EC69  F0B8         	call	_stoa	;wreg free
 12285  012DD6  D2AF               	goto	l2363
 12286  012DD8                     l12367:
 12287                           
 12288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12289                           ;stkvar	_fmt @ sp[(-32)+-4]
 12290  012DD8  0EDC               	movlw	-36
 12291  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12292  012DE0  0EDD               	movlw	-35
 12293  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12294  012DE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12295  012DEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12296  012DF4                     	if	0	;tblptru may be non-zero
 12297  012DF4                     	endif
 12298  012DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12299  012DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12300  012DF6  6EF8               	movwf	tblptru,c
 12301  012DF8                     	endif
 12302  012DF8  0008               	tblrd		*
 12303  012DFA  50F5               	movf	tablat,w,c
 12304  012DFC  0A75               	xorlw	117
 12305  012DFE  A4D8               	btfss	status,2,c
 12306  012E00  D07C               	goto	l12377
 12307                           
 12308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12309                           ;stkvar	_fmt @ sp[(-32)+-4]
 12310  012E02  0EDC               	movlw	-36
 12311  012E04  006F FF8F FFD9     	movff	plusw1,fsr2l
 12312  012E0A  0EDD               	movlw	-35
 12313  012E0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12314  012E12  2ADE               	incf	postinc2,f,c
 12315  012E14  0E00               	movlw	0
 12316  012E16  22DD               	addwfc	postdec2,f,c
 12317                           
 12318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12319                           ;stkvar	_ap @ sp[(-32)+-6]
 12320  012E18  0EDA               	movlw	-38
 12321  012E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12322  012E20  0EDB               	movlw	-37
 12323  012E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12324  012E28  0E02               	movlw	2
 12325  012E2A  5EDE               	subwf	postinc2,f,c
 12326  012E2C  0E00               	movlw	0
 12327  012E2E  5ADD               	subwfb	postdec2,f,c
 12328  012E30  006F FF78  F030    	movff	postinc2,btemp+10
 12329  012E36  006F FF74  F031    	movff	postdec2,btemp+11
 12330  012E3C  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12331  012E42  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12332  012E48  006F FF78  F030    	movff	postinc2,btemp+10
 12333  012E4E  006F FF74  F031    	movff	postdec2,btemp+11
 12334  012E54  5030               	movf	(btemp+10)^0,w,c
 12335  012E56  6E36               	movwf	(btemp+16)^0,c
 12336  012E58  5031               	movf	(btemp+11)^0,w,c
 12337  012E5A  6E37               	movwf	(btemp+17)^0,c
 12338  012E5C  6A38               	clrf	(btemp+18)^0,c
 12339  012E5E  6A39               	clrf	(btemp+19)^0,c
 12340  012E60  6A3A               	clrf	(btemp+20)^0,c
 12341  012E62  6A3B               	clrf	(btemp+21)^0,c
 12342  012E64  6A3C               	clrf	(btemp+22)^0,c
 12343  012E66  6A3D               	clrf	(btemp+23)^0,c
 12344                           
 12345                           ;stkvar	_llu @ sp[(-32)+6]
 12346  012E68  0EE6               	movlw	-26
 12347  012E6A  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12348  012E70  0EE7               	movlw	-25
 12349  012E72  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12350  012E78  0EE8               	movlw	-24
 12351  012E7A  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12352  012E80  0EE9               	movlw	-23
 12353  012E82  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12354  012E88  0EEA               	movlw	-22
 12355  012E8A  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12356  012E90  0EEB               	movlw	-21
 12357  012E92  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12358  012E98  0EEC               	movlw	-20
 12359  012E9A  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12360  012EA0  0EED               	movlw	-19
 12361  012EA2  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12362                           
 12363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12364                           ;stkvar	_llu @ sp[(-32)+6]
 12365  012EA8  50E1               	movf	fsr1l,w,c
 12366  012EAA  0FE6               	addlw	-26
 12367  012EAC  6ED9               	movwf	fsr2l,c
 12368  012EAE  50E2               	movf	fsr1h,w,c
 12369  012EB0  6EDA               	movwf	fsr2h,c
 12370  012EB2  0EFF               	movlw	255
 12371  012EB4  22DA               	addwfc	fsr2h,f,c
 12372  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12373  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12374  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12375  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12376  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12377  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12378  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12379  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12380                           
 12381                           ;stkvar	_fp @ sp[(-40)+-2]
 12382  012EE6  0ED6               	movlw	-42
 12383  012EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12384  012EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12385  012EF4  EC57  F0B2         	call	_utoa	;wreg free
 12386  012EF8  D21E               	goto	l2363
 12387  012EFA                     l12377:
 12388                           
 12389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12390  012EFA  0E02               	movlw	2
 12391  012EFC  6EE6               	movwf	postinc1,c
 12392  012EFE  0E00               	movlw	0
 12393  012F00  6EE6               	movwf	postinc1,c
 12394  012F02  0EF2               	movlw	low STR_88
 12395  012F04  6EE6               	movwf	postinc1,c
 12396  012F06  0EFF               	movlw	high STR_88
 12397  012F08  6EE6               	movwf	postinc1,c
 12398                           
 12399                           ;stkvar	_fmt @ sp[(-36)+-4]
 12400  012F0A  0ED8               	movlw	-40
 12401  012F0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12402  012F12  0ED9               	movlw	-39
 12403  012F14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12404  012F1A  006F FF78  F030    	movff	postinc2,btemp+10
 12405  012F20  006F FF74  F031    	movff	postdec2,btemp+11
 12406  012F26  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12407  012F2C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12408  012F32  EC62  F0BD         	call	_strncmp	;wreg free
 12409  012F36  5026               	movf	btemp^0,w,c
 12410  012F38  1027               	iorwf	(btemp+1)^0,w,c
 12411  012F3A  A4D8               	btfss	status,2,c
 12412  012F3C  D039               	goto	l12387
 12413                           
 12414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12415                           ;stkvar	_fmt @ sp[(-32)+-4]
 12416  012F3E  0EDC               	movlw	-36
 12417  012F40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12418  012F46  0EDD               	movlw	-35
 12419  012F48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12420  012F4E  0E02               	movlw	2
 12421  012F50  26DE               	addwf	postinc2,f,c
 12422  012F52  0E00               	movlw	0
 12423  012F54  22DD               	addwfc	postdec2,f,c
 12424                           
 12425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12426                           ;stkvar	_ap @ sp[(-32)+-6]
 12427  012F56  0EDA               	movlw	-38
 12428  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 12429  012F5E  0EDB               	movlw	-37
 12430  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 12431  012F66  0E04               	movlw	4
 12432  012F68  5EDE               	subwf	postinc2,f,c
 12433  012F6A  0E00               	movlw	0
 12434  012F6C  5ADD               	subwfb	postdec2,f,c
 12435  012F6E  006F FF78  F030    	movff	postinc2,btemp+10
 12436  012F74  006F FF74  F031    	movff	postdec2,btemp+11
 12437  012F7A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12438  012F80  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12439  012F86  006F FF78  F02E    	movff	postinc2,btemp+8
 12440  012F8C  006F FF78  F02F    	movff	postinc2,btemp+9
 12441  012F92  006F FF78  F030    	movff	postinc2,btemp+10
 12442  012F98  006F FF78  F031    	movff	postinc2,btemp+11
 12443  012F9E  502E               	movf	(btemp+8)^0,w,c
 12444  012FA0  6E36               	movwf	(btemp+16)^0,c
 12445  012FA2  502F               	movf	(btemp+9)^0,w,c
 12446  012FA4  6E37               	movwf	(btemp+17)^0,c
 12447  012FA6  5030               	movf	(btemp+10)^0,w,c
 12448  012FA8  6E38               	movwf	(btemp+18)^0,c
 12449  012FAA  5031               	movf	(btemp+11)^0,w,c
 12450  012FAC  6E39               	movwf	(btemp+19)^0,c
 12451  012FAE  D758               	goto	L10
 12452  012FB0                     l12387:
 12453                           
 12454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12455                           ;stkvar	_fmt @ sp[(-32)+-4]
 12456  012FB0  0EDC               	movlw	-36
 12457  012FB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12458  012FB8  0EDD               	movlw	-35
 12459  012FBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12460  012FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12461  012FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12462  012FCC                     	if	0	;tblptru may be non-zero
 12463  012FCC                     	endif
 12464  012FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12465  012FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 12466  012FCE  6EF8               	movwf	tblptru,c
 12467  012FD0                     	endif
 12468  012FD0  0008               	tblrd		*
 12469  012FD2  50F5               	movf	tablat,w,c
 12470  012FD4  0A78               	xorlw	120
 12471  012FD6  B4D8               	btfsc	status,2,c
 12472  012FD8  D015               	goto	u12110
 12473                           
 12474                           ;stkvar	_fmt @ sp[(-32)+-4]
 12475  012FDA  0EDC               	movlw	-36
 12476  012FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12477  012FE2  0EDD               	movlw	-35
 12478  012FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12479  012FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12480  012FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12481  012FF6                     	if	0	;tblptru may be non-zero
 12482  012FF6                     	endif
 12483  012FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12484  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12485  012FF8  6EF8               	movwf	tblptru,c
 12486  012FFA                     	endif
 12487  012FFA  0008               	tblrd		*
 12488  012FFC  50F5               	movf	tablat,w,c
 12489  012FFE  0A58               	xorlw	88
 12490  013000  A4D8               	btfss	status,2,c
 12491  013002  D094               	goto	l12401
 12492  013004                     u12110:
 12493                           
 12494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12495                           ;stkvar	_fmt @ sp[(-32)+-4]
 12496  013004  0EDC               	movlw	-36
 12497  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 12498  01300C  0EDD               	movlw	-35
 12499  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12500  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 12501  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12502  013020                     	if	0	;tblptru may be non-zero
 12503  013020                     	endif
 12504  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12505  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 12506  013022  6EF8               	movwf	tblptru,c
 12507  013024                     	endif
 12508                           
 12509                           ;stkvar	_c @ sp[(-32)+31]
 12510  013024  0008               	tblrd		*
 12511  013026  0EFF               	movlw	-1
 12512  013028  006F FFD7 FFE3     	movff	tablat,plusw1
 12513                           
 12514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12515                           ;stkvar	_fmt @ sp[(-32)+-4]
 12516  01302E  0EDC               	movlw	-36
 12517  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 12518  013036  0EDD               	movlw	-35
 12519  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 12520  01303E  2ADE               	incf	postinc2,f,c
 12521  013040  0E00               	movlw	0
 12522  013042  22DD               	addwfc	postdec2,f,c
 12523                           
 12524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12525                           ;stkvar	_ap @ sp[(-32)+-6]
 12526  013044  0EDA               	movlw	-38
 12527  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 12528  01304C  0EDB               	movlw	-37
 12529  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12530  013054  0E02               	movlw	2
 12531  013056  5EDE               	subwf	postinc2,f,c
 12532  013058  0E00               	movlw	0
 12533  01305A  5ADD               	subwfb	postdec2,f,c
 12534  01305C  006F FF78  F030    	movff	postinc2,btemp+10
 12535  013062  006F FF74  F031    	movff	postdec2,btemp+11
 12536  013068  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12537  01306E  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12538  013074  006F FF78  F030    	movff	postinc2,btemp+10
 12539  01307A  006F FF74  F031    	movff	postdec2,btemp+11
 12540  013080  5030               	movf	(btemp+10)^0,w,c
 12541  013082  6E36               	movwf	(btemp+16)^0,c
 12542  013084  5031               	movf	(btemp+11)^0,w,c
 12543  013086  6E37               	movwf	(btemp+17)^0,c
 12544  013088  6A38               	clrf	(btemp+18)^0,c
 12545  01308A  6A39               	clrf	(btemp+19)^0,c
 12546  01308C  6A3A               	clrf	(btemp+20)^0,c
 12547  01308E  6A3B               	clrf	(btemp+21)^0,c
 12548  013090  6A3C               	clrf	(btemp+22)^0,c
 12549  013092  6A3D               	clrf	(btemp+23)^0,c
 12550                           
 12551                           ;stkvar	_llu @ sp[(-32)+6]
 12552  013094  0EE6               	movlw	-26
 12553  013096  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12554  01309C  0EE7               	movlw	-25
 12555  01309E  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12556  0130A4  0EE8               	movlw	-24
 12557  0130A6  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12558  0130AC  0EE9               	movlw	-23
 12559  0130AE  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12560  0130B4  0EEA               	movlw	-22
 12561  0130B6  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12562  0130BC  0EEB               	movlw	-21
 12563  0130BE  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12564  0130C4  0EEC               	movlw	-20
 12565  0130C6  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12566  0130CC  0EED               	movlw	-19
 12567  0130CE  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12568                           
 12569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12570                           ;stkvar	_c @ sp[(-32)+31]
 12571  0130D4  0EFF               	movlw	-1
 12572  0130D6  50E3               	movf	plusw1,w,c
 12573  0130D8  6EE6               	movwf	postinc1,c
 12574                           
 12575                           ;stkvar	_llu @ sp[(-33)+6]
 12576  0130DA  50E1               	movf	fsr1l,w,c
 12577  0130DC  0FE5               	addlw	-27
 12578  0130DE  6ED9               	movwf	fsr2l,c
 12579  0130E0  50E2               	movf	fsr1h,w,c
 12580  0130E2  6EDA               	movwf	fsr2h,c
 12581  0130E4  0EFF               	movlw	255
 12582  0130E6  22DA               	addwfc	fsr2h,f,c
 12583  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 12584  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12585  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 12586  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 12587  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 12588  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 12589  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 12590  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 12591                           
 12592                           ;stkvar	_fp @ sp[(-41)+-2]
 12593  013118  0ED5               	movlw	-43
 12594  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 12595  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 12596  013126  ECC4  F0AE         	call	_xtoa	;wreg free
 12597  01312A  D105               	goto	l2363
 12598  01312C                     l12401:
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12601  01312C  0E02               	movlw	2
 12602  01312E  6EE6               	movwf	postinc1,c
 12603  013130  0E00               	movlw	0
 12604  013132  6EE6               	movwf	postinc1,c
 12605  013134  0EF5               	movlw	low STR_93
 12606  013136  6EE6               	movwf	postinc1,c
 12607  013138  0EFF               	movlw	high STR_93
 12608  01313A  6EE6               	movwf	postinc1,c
 12609                           
 12610                           ;stkvar	_fmt @ sp[(-36)+-4]
 12611  01313C  0ED8               	movlw	-40
 12612  01313E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12613  013144  0ED9               	movlw	-39
 12614  013146  006F FF8F FFDA     	movff	plusw1,fsr2h
 12615  01314C  006F FF78  F030    	movff	postinc2,btemp+10
 12616  013152  006F FF74  F031    	movff	postdec2,btemp+11
 12617  013158  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12618  01315E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12619  013164  EC62  F0BD         	call	_strncmp	;wreg free
 12620  013168  5026               	movf	btemp^0,w,c
 12621  01316A  1027               	iorwf	(btemp+1)^0,w,c
 12622  01316C  B4D8               	btfsc	status,2,c
 12623  01316E  D022               	goto	u12130
 12624  013170  0E02               	movlw	2
 12625  013172  6EE6               	movwf	postinc1,c
 12626  013174  0E00               	movlw	0
 12627  013176  6EE6               	movwf	postinc1,c
 12628  013178  0EE6               	movlw	low STR_97
 12629  01317A  6EE6               	movwf	postinc1,c
 12630  01317C  0EFF               	movlw	high STR_97
 12631  01317E  6EE6               	movwf	postinc1,c
 12632                           
 12633                           ;stkvar	_fmt @ sp[(-36)+-4]
 12634  013180  0ED8               	movlw	-40
 12635  013182  006F FF8F FFD9     	movff	plusw1,fsr2l
 12636  013188  0ED9               	movlw	-39
 12637  01318A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12638  013190  006F FF78  F030    	movff	postinc2,btemp+10
 12639  013196  006F FF74  F031    	movff	postdec2,btemp+11
 12640  01319C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12641  0131A2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12642  0131A8  EC62  F0BD         	call	_strncmp	;wreg free
 12643  0131AC  5026               	movf	btemp^0,w,c
 12644  0131AE  1027               	iorwf	(btemp+1)^0,w,c
 12645  0131B0  A4D8               	btfss	status,2,c
 12646  0131B2  D058               	goto	l12415
 12647  0131B4                     u12130:
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12650                           ;stkvar	_fmt @ sp[(-32)+-4]
 12651  0131B4  0EDC               	movlw	-36
 12652  0131B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12653  0131BC  0EDD               	movlw	-35
 12654  0131BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12655  0131C4  006F FF78  F030    	movff	postinc2,btemp+10
 12656  0131CA  006F FF74  F031    	movff	postdec2,btemp+11
 12657  0131D0  0E01               	movlw	1
 12658  0131D2  2630               	addwf	(btemp+10)^0,f,c
 12659  0131D4  0E00               	movlw	0
 12660  0131D6  2231               	addwfc	(btemp+11)^0,f,c
 12661  0131D8  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12662  0131DE  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12663  0131E4                     	if	0	;tblptru may be non-zero
 12664  0131E4                     	endif
 12665  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12666  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 12667  0131E6  6EF8               	movwf	tblptru,c
 12668  0131E8                     	endif
 12669                           
 12670                           ;stkvar	_c @ sp[(-32)+31]
 12671  0131E8  0008               	tblrd		*
 12672  0131EA  0EFF               	movlw	-1
 12673  0131EC  006F FFD7 FFE3     	movff	tablat,plusw1
 12674                           
 12675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12676                           ;stkvar	_fmt @ sp[(-32)+-4]
 12677  0131F2  0EDC               	movlw	-36
 12678  0131F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12679  0131FA  0EDD               	movlw	-35
 12680  0131FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12681  013202  0E02               	movlw	2
 12682  013204  26DE               	addwf	postinc2,f,c
 12683  013206  0E00               	movlw	0
 12684  013208  22DD               	addwfc	postdec2,f,c
 12685                           
 12686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12687                           ;stkvar	_ap @ sp[(-32)+-6]
 12688  01320A  0EDA               	movlw	-38
 12689  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12690  013212  0EDB               	movlw	-37
 12691  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 12692  01321A  0E04               	movlw	4
 12693  01321C  5EDE               	subwf	postinc2,f,c
 12694  01321E  0E00               	movlw	0
 12695  013220  5ADD               	subwfb	postdec2,f,c
 12696  013222  006F FF78  F030    	movff	postinc2,btemp+10
 12697  013228  006F FF74  F031    	movff	postdec2,btemp+11
 12698  01322E  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12699  013234  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12700  01323A  006F FF78  F02E    	movff	postinc2,btemp+8
 12701  013240  006F FF78  F02F    	movff	postinc2,btemp+9
 12702  013246  006F FF78  F030    	movff	postinc2,btemp+10
 12703  01324C  006F FF78  F031    	movff	postinc2,btemp+11
 12704  013252  502E               	movf	(btemp+8)^0,w,c
 12705  013254  6E36               	movwf	(btemp+16)^0,c
 12706  013256  502F               	movf	(btemp+9)^0,w,c
 12707  013258  6E37               	movwf	(btemp+17)^0,c
 12708  01325A  5030               	movf	(btemp+10)^0,w,c
 12709  01325C  6E38               	movwf	(btemp+18)^0,c
 12710  01325E  5031               	movf	(btemp+11)^0,w,c
 12711  013260  6E39               	movwf	(btemp+19)^0,c
 12712  013262  D714               	goto	L11
 12713  013264                     l12415:
 12714                           
 12715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12716                           ;stkvar	_fmt @ sp[(-32)+-4]
 12717  013264  0EDC               	movlw	-36
 12718  013266  006F FF8F FFD9     	movff	plusw1,fsr2l
 12719  01326C  0EDD               	movlw	-35
 12720  01326E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12721  013274  006F FF7B FFF6     	movff	postinc2,tblptrl
 12722  01327A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12723  013280                     	if	0	;tblptru may be non-zero
 12724  013280                     	endif
 12725  013280                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12726  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 12727  013282  6EF8               	movwf	tblptru,c
 12728  013284                     	endif
 12729  013284  0008               	tblrd		*
 12730  013286  50F5               	movf	tablat,w,c
 12731  013288  0A25               	xorlw	37
 12732  01328A  A4D8               	btfss	status,2,c
 12733  01328C  D01A               	goto	l12425
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12736                           ;stkvar	_fmt @ sp[(-32)+-4]
 12737  01328E  0EDC               	movlw	-36
 12738  013290  006F FF8F FFD9     	movff	plusw1,fsr2l
 12739  013296  0EDD               	movlw	-35
 12740  013298  006F FF8F FFDA     	movff	plusw1,fsr2h
 12741  01329E  2ADE               	incf	postinc2,f,c
 12742  0132A0  0E00               	movlw	0
 12743  0132A2  22DD               	addwfc	postdec2,f,c
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12746                           ;stkvar	_fp @ sp[(-32)+-2]
 12747  0132A4  0EDE               	movlw	-34
 12748  0132A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12749  0132AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12750  0132B2  0E25               	movlw	37
 12751  0132B4  6EE6               	movwf	postinc1,c
 12752  0132B6  0E00               	movlw	0
 12753  0132B8  6EE6               	movwf	postinc1,c
 12754  0132BA  EC8C  F0C9         	call	_fputc	;wreg free
 12755  0132BE                     l12421:
 12756                           
 12757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12758  0132BE  0E01               	movlw	1
 12759  0132C0  D00C               	goto	L12
 12760  0132C2                     l12425:
 12761                           
 12762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12763                           ;stkvar	_fmt @ sp[(-32)+-4]
 12764  0132C2  0EDC               	movlw	-36
 12765  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12766  0132CA  0EDD               	movlw	-35
 12767  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12768  0132D2  2ADE               	incf	postinc2,f,c
 12769  0132D4  0E00               	movlw	0
 12770  0132D6  22DD               	addwfc	postdec2,f,c
 12771                           
 12772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12773  0132D8  0E00               	movlw	0
 12774  0132DA                     L12:
 12775  0132DA  6E26               	movwf	btemp^0,c
 12776  0132DC  0E00               	movlw	0
 12777  0132DE  6E27               	movwf	(btemp+1)^0,c
 12778  0132E0  D02A               	goto	l2363
 12779  0132E2                     l12431:
 12780                           
 12781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12782                           ;stkvar	_fp @ sp[(-32)+-2]
 12783  0132E2  0EDE               	movlw	-34
 12784  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12785  0132EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12786                           
 12787                           ;stkvar	_fmt @ sp[(-34)+-4]
 12788  0132F0  0EDA               	movlw	-38
 12789  0132F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12790  0132F8  0EDB               	movlw	-37
 12791  0132FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12792  013300  006F FF7B FFF6     	movff	postinc2,tblptrl
 12793  013306  006F FF77 FFF7     	movff	postdec2,tblptrh
 12794  01330C                     	if	0	;tblptru may be non-zero
 12795  01330C                     	endif
 12796  01330C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12797  01330C  0E00               	movlw	low (__mediumconst shr (0+16))
 12798  01330E  6EF8               	movwf	tblptru,c
 12799  013310                     	endif
 12800  013310  0008               	tblrd		*
 12801  013312  50F5               	movf	tablat,w,c
 12802  013314  6EE6               	movwf	postinc1,c
 12803  013316  0E00               	movlw	0
 12804  013318  6EE6               	movwf	postinc1,c
 12805  01331A  EC8C  F0C9         	call	_fputc	;wreg free
 12806                           
 12807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12808                           ;stkvar	_fmt @ sp[(-32)+-4]
 12809  01331E  0EDC               	movlw	-36
 12810  013320  006F FF8F FFD9     	movff	plusw1,fsr2l
 12811  013326  0EDD               	movlw	-35
 12812  013328  006F FF8F FFDA     	movff	plusw1,fsr2h
 12813  01332E  2ADE               	incf	postinc2,f,c
 12814  013330  0E00               	movlw	0
 12815  013332  22DD               	addwfc	postdec2,f,c
 12816  013334  D7C4               	goto	l12421
 12817  013336                     l2363:
 12818                           
 12819                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12820  013336  0EDA               	movlw	218
 12821  013338  26E1               	addwf	fsr1l,f,c
 12822  01333A  0EFF               	movlw	255
 12823  01333C  22E2               	addwfc	fsr1h,f,c
 12824  01333E  0012               	return		;funcret
 12825  013340                     __end_of_vfpfcnvrt:
 12826                           	opt callstack 0
 12827                           
 12828 ;; *************** function _xtoa *****************
 12829 ;; Defined at:
 12830 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12833 ;;		 -> f(6), NULL(0), 
 12834 ;;  d               8  [STACK] unsigned long long 
 12835 ;;  x               1  [STACK] unsigned char 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  n               8  [STACK] unsigned long long 
 12838 ;;  c               2  [STACK] int 
 12839 ;;  i               2  [STACK] int 
 12840 ;;  w               2  [STACK] int 
 12841 ;;  p               2  [STACK] int 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  2  [STACK] int 
 12844 ;; Registers used:
 12845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12855 ;;Total ram usage:        0 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:   20
 12858 ;; This function calls:
 12859 ;;		_isalpha
 12860 ;;		_isupper
 12861 ;;		_pad
 12862 ;;		_toupper
 12863 ;; This function is called by:
 12864 ;;		_vfpfcnvrt
 12865 ;; This function uses a reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text46
 12869  015D88                     __ptext46:
 12870                           	opt callstack 0
 12871  015D88                     _xtoa:
 12872                           	opt callstack 0
 12873                           
 12874                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12875  015D88  0E14               	movlw	20
 12876  015D8A  26E1               	addwf	fsr1l,f,c
 12877  015D8C  0E00               	movlw	0
 12878  015D8E  22E2               	addwfc	fsr1h,f,c
 12879                           
 12880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12881                           
 12882                           ;incstack = 0
 12883 ;; hardware stack exceeded
 12884  015D90  AE0D               	btfss	(_prec+1)^0,7,c
 12885                           
 12886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12887  015D92  920E               	bcf	_flags^0,1,c
 12888                           
 12889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12890  015D94  BE0D               	btfsc	(_prec+1)^0,7,c
 12891  015D96  D005               	goto	u11660
 12892  015D98  500D               	movf	(_prec+1)^0,w,c
 12893  015D9A  E110               	bnz	l12155
 12894  015D9C  040C               	decf	_prec^0,w,c
 12895  015D9E  B0D8               	btfsc	status,0,c
 12896  015DA0  D00D               	goto	l12155
 12897  015DA2                     u11660:
 12898  015DA2  0E01               	movlw	1
 12899  015DA4  6E30               	movwf	(btemp+10)^0,c
 12900  015DA6  0E00               	movlw	0
 12901  015DA8  6E31               	movwf	(btemp+11)^0,c
 12902                           
 12903                           ;stkvar	_p @ sp[(-20)+18]
 12904  015DAA  0EFE               	movlw	-2
 12905  015DAC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12906  015DB2  0EFF               	movlw	-1
 12907  015DB4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12908  015DBA  D008               	goto	l2313
 12909  015DBC                     l12155:
 12910                           
 12911                           ;stkvar	_p @ sp[(-20)+18]
 12912  015DBC  0EFE               	movlw	-2
 12913  015DBE  0060  F033  FFE3   	movff	_prec,plusw1
 12914  015DC4  0EFF               	movlw	-1
 12915  015DC6  0060  F037  FFE3   	movff	_prec+1,plusw1
 12916  015DCC                     l2313:
 12917                           
 12918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12919                           ;stkvar	_w @ sp[(-20)+16]
 12920  015DCC  0EFC               	movlw	-4
 12921  015DCE  0060  F02B  FFE3   	movff	_width,plusw1
 12922  015DD4  0EFD               	movlw	-3
 12923  015DD6  0060  F02F  FFE3   	movff	_width+1,plusw1
 12924                           
 12925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12926  015DDC  A80E               	btfss	_flags^0,4,c
 12927  015DDE  D00B               	goto	l12161
 12928                           
 12929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12930                           ;stkvar	_w @ sp[(-20)+16]
 12931  015DE0  50E1               	movf	fsr1l,w,c
 12932  015DE2  0FFC               	addlw	-4
 12933  015DE4  6ED9               	movwf	fsr2l,c
 12934  015DE6  50E2               	movf	fsr1h,w,c
 12935  015DE8  6EDA               	movwf	fsr2h,c
 12936  015DEA  0EFF               	movlw	255
 12937  015DEC  22DA               	addwfc	fsr2h,f,c
 12938  015DEE  0EFE               	movlw	254
 12939  015DF0  26DE               	addwf	postinc2,f,c
 12940  015DF2  0EFF               	movlw	255
 12941  015DF4  22DD               	addwfc	postdec2,f,c
 12942  015DF6                     l12161:
 12943                           
 12944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12945                           ;stkvar	_d @ sp[(-20)+-10]
 12946  015DF6  0EE2               	movlw	226
 12947  015DF8  24E1               	addwf	fsr1l,w,c
 12948  015DFA  6ED9               	movwf	fsr2l,c
 12949  015DFC  0EFF               	movlw	255
 12950  015DFE  20E2               	addwfc	fsr1h,w,c
 12951  015E00  6EDA               	movwf	fsr2h,c
 12952                           
 12953                           ;stkvar	_n @ sp[(-20)+4]
 12954  015E02  0E08               	movlw	8
 12955  015E04  6E26               	movwf	btemp^0,c
 12956  015E06  0EF0               	movlw	-16
 12957  015E08                     us1168999:
 12958  015E08  006F FF7B FFE3     	movff	postinc2,plusw1
 12959  015E0E  28E8               	incf	wreg,w,c
 12960  015E10  2E26               	decfsz	btemp^0,f,c
 12961  015E12  D7FA               	bra	us1168999
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12964  015E14  0E4F               	movlw	79
 12965  015E16  6E30               	movwf	(btemp+10)^0,c
 12966  015E18  0E00               	movlw	0
 12967  015E1A  6E31               	movwf	(btemp+11)^0,c
 12968                           
 12969                           ;stkvar	_i @ sp[(-20)+14]
 12970  015E1C  0EFA               	movlw	-6
 12971  015E1E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12972  015E24  0EFB               	movlw	-5
 12973  015E26  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12974                           
 12975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12976  015E2C  0102               	movlb	2	; () banked
 12977  015E2E  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12978                           
 12979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12980  015E30  D0EE               	goto	l12199
 12981  015E32                     l12167:
 12982                           
 12983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12984                           ;stkvar	_i @ sp[(-20)+14]
 12985  015E32  50E1               	movf	fsr1l,w,c
 12986  015E34  0FFA               	addlw	-6
 12987  015E36  6ED9               	movwf	fsr2l,c
 12988  015E38  50E2               	movf	fsr1h,w,c
 12989  015E3A  6EDA               	movwf	fsr2h,c
 12990  015E3C  0EFF               	movlw	255
 12991  015E3E  22DA               	addwfc	fsr2h,f,c
 12992  015E40  06DE               	decf	postinc2,f,c
 12993  015E42  0E00               	movlw	0
 12994  015E44  5ADD               	subwfb	postdec2,f,c
 12995                           
 12996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12997                           ;stkvar	_n @ sp[(-20)+4]
 12998  015E46  0EF0               	movlw	-16
 12999  015E48  006F FF8C  F030    	movff	plusw1,btemp+10
 13000  015E4E  0EF1               	movlw	-15
 13001  015E50  006F FF8C  F031    	movff	plusw1,btemp+11
 13002  015E56  0E0F               	movlw	15
 13003  015E58  1630               	andwf	(btemp+10)^0,f,c
 13004  015E5A  0E00               	movlw	0
 13005  015E5C  1631               	andwf	(btemp+11)^0,f,c
 13006                           
 13007                           ;stkvar	_c @ sp[(-20)+12]
 13008  015E5E  0EF8               	movlw	-8
 13009  015E60  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13010  015E66  0EF9               	movlw	-7
 13011  015E68  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13012                           
 13013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13014                           ;stkvar	_c @ sp[(-20)+12]
 13015  015E6E  0EF9               	movlw	-7
 13016  015E70  BEE3               	btfsc	plusw1,7,c
 13017  015E72  D00F               	goto	l12175
 13018  015E74  0EF9               	movlw	-7
 13019  015E76  50E3               	movf	plusw1,w,c
 13020  015E78  E108               	bnz	u11690
 13021  015E7A  0EF8               	movlw	-8
 13022  015E7C  006F FF8C  F026    	movff	plusw1,btemp
 13023  015E82  0E0A               	movlw	10
 13024  015E84  5E26               	subwf	btemp^0,f,c
 13025  015E86  A0D8               	btfss	status,0,c
 13026  015E88  D004               	goto	l12175
 13027  015E8A                     u11690:
 13028                           
 13029                           ;stkvar	_c @ sp[(-20)+12]
 13030  015E8A  0EF8               	movlw	-8
 13031  015E8C  50E3               	movf	plusw1,w,c
 13032  015E8E  0F57               	addlw	87
 13033  015E90  D003               	goto	L13
 13034  015E92                     l12175:
 13035                           
 13036                           ;stkvar	_c @ sp[(-20)+12]
 13037  015E92  0EF8               	movlw	-8
 13038  015E94  50E3               	movf	plusw1,w,c
 13039  015E96  0F30               	addlw	48
 13040  015E98                     L13:
 13041  015E98  6E30               	movwf	(btemp+10)^0,c
 13042  015E9A  0EF9               	movlw	-7
 13043  015E9C  006F FF8C  F031    	movff	plusw1,btemp+11
 13044  015EA2  0E00               	movlw	0
 13045  015EA4  2231               	addwfc	(btemp+11)^0,f,c
 13046                           
 13047                           ;stkvar	_c @ sp[(-20)+12]
 13048  015EA6  0EF8               	movlw	-8
 13049  015EA8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13050  015EAE  0EF9               	movlw	-7
 13051  015EB0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13052  015EB6  0EBF               	movlw	191
 13053  015EB8  6E30               	movwf	(btemp+10)^0,c
 13054  015EBA  0EFF               	movlw	255
 13055  015EBC  6E31               	movwf	(btemp+11)^0,c
 13056                           
 13057                           ;stkvar	_x @ sp[(-20)+-11]
 13058  015EBE  0EE1               	movlw	-31
 13059  015EC0  50E3               	movf	plusw1,w,c
 13060  015EC2  6E2E               	movwf	(btemp+8)^0,c
 13061  015EC4  6A2F               	clrf	(btemp+9)^0,c
 13062  015EC6  5030               	movf	(btemp+10)^0,w,c
 13063  015EC8  262E               	addwf	(btemp+8)^0,f,c
 13064  015ECA  5031               	movf	(btemp+11)^0,w,c
 13065  015ECC  222F               	addwfc	(btemp+9)^0,f,c
 13066  015ECE  502F               	movf	(btemp+9)^0,w,c
 13067  015ED0  E106               	bnz	u11700
 13068  015ED2  0E1A               	movlw	26
 13069  015ED4  5C2E               	subwf	(btemp+8)^0,w,c
 13070  015ED6  B0D8               	btfsc	status,0,c
 13071  015ED8  D002               	goto	u11700
 13072  015EDA  0E01               	movlw	1
 13073  015EDC  D001               	goto	u11710
 13074  015EDE                     u11700:
 13075  015EDE  0E00               	movlw	0
 13076  015EE0                     u11710:
 13077  015EE0  6E30               	movwf	(btemp+10)^0,c
 13078  015EE2  6A31               	clrf	(btemp+11)^0,c
 13079                           
 13080                           ;stkvar	_xtoa$5527 @ sp[(-20)+2]
 13081  015EE4  0EEE               	movlw	-18
 13082  015EE6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13083  015EEC  0EEF               	movlw	-17
 13084  015EEE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13085                           
 13086                           ;stkvar	_xtoa$5527 @ sp[(-20)+2]
 13087  015EF4  0EEE               	movlw	-18
 13088  015EF6  006F FF8C  F026    	movff	plusw1,btemp
 13089  015EFC  0EEF               	movlw	-17
 13090  015EFE  50E3               	movf	plusw1,w,c
 13091  015F00  1026               	iorwf	btemp^0,w,c
 13092  015F02  B4D8               	btfsc	status,2,c
 13093  015F04  D041               	goto	l12191
 13094  015F06  0E9F               	movlw	159
 13095  015F08  6E30               	movwf	(btemp+10)^0,c
 13096  015F0A  0EFF               	movlw	255
 13097  015F0C  6E31               	movwf	(btemp+11)^0,c
 13098                           
 13099                           ;stkvar	_c @ sp[(-20)+12]
 13100  015F0E  0EF8               	movlw	-8
 13101  015F10  006F FF8C  F02E    	movff	plusw1,btemp+8
 13102  015F16  0EF9               	movlw	-7
 13103  015F18  006F FF8C  F02F    	movff	plusw1,btemp+9
 13104  015F1E  0E20               	movlw	32
 13105  015F20  122E               	iorwf	(btemp+8)^0,f,c
 13106  015F22  0E00               	movlw	0
 13107  015F24  122F               	iorwf	(btemp+9)^0,f,c
 13108  015F26  5030               	movf	(btemp+10)^0,w,c
 13109  015F28  262E               	addwf	(btemp+8)^0,f,c
 13110  015F2A  5031               	movf	(btemp+11)^0,w,c
 13111  015F2C  222F               	addwfc	(btemp+9)^0,f,c
 13112  015F2E  502F               	movf	(btemp+9)^0,w,c
 13113  015F30  E106               	bnz	u11730
 13114  015F32  0E1A               	movlw	26
 13115  015F34  5C2E               	subwf	(btemp+8)^0,w,c
 13116  015F36  B0D8               	btfsc	status,0,c
 13117  015F38  D002               	goto	u11730
 13118  015F3A  0E01               	movlw	1
 13119  015F3C  D001               	goto	u11740
 13120  015F3E                     u11730:
 13121  015F3E  0E00               	movlw	0
 13122  015F40                     u11740:
 13123  015F40  6E30               	movwf	(btemp+10)^0,c
 13124  015F42  6A31               	clrf	(btemp+11)^0,c
 13125                           
 13126                           ;stkvar	_xtoa$5528 @ sp[(-20)+0]
 13127  015F44  0EEC               	movlw	-20
 13128  015F46  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13129  015F4C  0EED               	movlw	-19
 13130  015F4E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13131                           
 13132                           ;stkvar	_xtoa$5528 @ sp[(-20)+0]
 13133  015F54  0EEC               	movlw	-20
 13134  015F56  006F FF8C  F026    	movff	plusw1,btemp
 13135  015F5C  0EED               	movlw	-19
 13136  015F5E  50E3               	movf	plusw1,w,c
 13137  015F60  1026               	iorwf	btemp^0,w,c
 13138  015F62  B4D8               	btfsc	status,2,c
 13139  015F64  D011               	goto	l12191
 13140                           
 13141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13142                           ;stkvar	_c @ sp[(-20)+12]
 13143  015F66  0EF8               	movlw	-8
 13144  015F68  006F FF8F FFE6     	movff	plusw1,postinc1
 13145  015F6E  006F FF8F FFE6     	movff	plusw1,postinc1
 13146  015F74  EC79  F0D3         	call	_toupper	;wreg free
 13147                           
 13148                           ;stkvar	_c @ sp[(-20)+12]
 13149  015F78  0EF8               	movlw	-8
 13150  015F7A  0060  F09B  FFE3   	movff	btemp,plusw1
 13151  015F80  0EF9               	movlw	-7
 13152  015F82  0060  F09F  FFE3   	movff	btemp+1,plusw1
 13153  015F88                     l12191:
 13154                           
 13155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13156                           ;stkvar	_c @ sp[(-20)+12]
 13157                           ;stkvar	_i @ sp[(-20)+14]
 13158  015F88  0EFA               	movlw	-6
 13159  015F8A  006F FF8C  F030    	movff	plusw1,btemp+10
 13160  015F90  0EFB               	movlw	-5
 13161  015F92  006F FF8C  F031    	movff	plusw1,btemp+11
 13162  015F98  0EAE               	movlw	low _dbuf
 13163  015F9A  2430               	addwf	(btemp+10)^0,w,c
 13164  015F9C  6ED9               	movwf	fsr2l,c
 13165  015F9E  0E02               	movlw	high _dbuf
 13166  015FA0  2031               	addwfc	(btemp+11)^0,w,c
 13167  015FA2  6EDA               	movwf	fsr2h,c
 13168  015FA4  0EF8               	movlw	-8
 13169  015FA6  006F FF8F FFDF     	movff	plusw1,indf2
 13170                           
 13171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13172                           ;stkvar	_p @ sp[(-20)+18]
 13173  015FAC  50E1               	movf	fsr1l,w,c
 13174  015FAE  0FFE               	addlw	-2
 13175  015FB0  6ED9               	movwf	fsr2l,c
 13176  015FB2  50E2               	movf	fsr1h,w,c
 13177  015FB4  6EDA               	movwf	fsr2h,c
 13178  015FB6  0EFF               	movlw	255
 13179  015FB8  22DA               	addwfc	fsr2h,f,c
 13180  015FBA  06DE               	decf	postinc2,f,c
 13181  015FBC  0E00               	movlw	0
 13182  015FBE  5ADD               	subwfb	postdec2,f,c
 13183                           
 13184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13185                           ;stkvar	_w @ sp[(-20)+16]
 13186  015FC0  50E1               	movf	fsr1l,w,c
 13187  015FC2  0FFC               	addlw	-4
 13188  015FC4  6ED9               	movwf	fsr2l,c
 13189  015FC6  50E2               	movf	fsr1h,w,c
 13190  015FC8  6EDA               	movwf	fsr2h,c
 13191  015FCA  0EFF               	movlw	255
 13192  015FCC  22DA               	addwfc	fsr2h,f,c
 13193  015FCE  06DE               	decf	postinc2,f,c
 13194  015FD0  0E00               	movlw	0
 13195  015FD2  5ADD               	subwfb	postdec2,f,c
 13196                           
 13197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13198  015FD4  0E04               	movlw	4
 13199  015FD6  6E31               	movwf	(btemp+11)^0,c
 13200                           
 13201                           ;stkvar	_n @ sp[(-20)+4]
 13202  015FD8  50E1               	movf	fsr1l,w,c
 13203  015FDA  0FF0               	addlw	-16
 13204  015FDC  6ED9               	movwf	fsr2l,c
 13205  015FDE  50E2               	movf	fsr1h,w,c
 13206  015FE0  6EDA               	movwf	fsr2h,c
 13207  015FE2  0EFF               	movlw	255
 13208  015FE4  22DA               	addwfc	fsr2h,f,c
 13209  015FE6  2831               	incf	(btemp+11)^0,w,c
 13210  015FE8  52DE               	movf	postinc2,f,c
 13211  015FEA  D00F               	goto	u11760
 13212  015FEC                     u11765:
 13213  015FEC  52DE               	movf	postinc2,f,c
 13214  015FEE  52DE               	movf	postinc2,f,c
 13215  015FF0  52DE               	movf	postinc2,f,c
 13216  015FF2  52DE               	movf	postinc2,f,c
 13217  015FF4  52DE               	movf	postinc2,f,c
 13218  015FF6  52DE               	movf	postinc2,f,c
 13219  015FF8  90D8               	bcf	status,0,c
 13220  015FFA  32DD               	rrcf	postdec2,f,c
 13221  015FFC  32DD               	rrcf	postdec2,f,c
 13222  015FFE  32DD               	rrcf	postdec2,f,c
 13223  016000  32DD               	rrcf	postdec2,f,c
 13224  016002  32DD               	rrcf	postdec2,f,c
 13225  016004  32DD               	rrcf	postdec2,f,c
 13226  016006  32DD               	rrcf	postdec2,f,c
 13227  016008  32DE               	rrcf	postinc2,f,c
 13228  01600A                     u11760:
 13229  01600A  2EE8               	decfsz	wreg,f,c
 13230  01600C  D7EF               	goto	u11765
 13231  01600E                     l12199:
 13232                           
 13233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13234                           ;stkvar	_i @ sp[(-20)+14]
 13235  01600E  0EFB               	movlw	-5
 13236  016010  BEE3               	btfsc	plusw1,7,c
 13237  016012  D03A               	goto	u11810
 13238  016014  0EFB               	movlw	-5
 13239  016016  50E3               	movf	plusw1,w,c
 13240  016018  E108               	bnz	u11770
 13241  01601A  0EFA               	movlw	-6
 13242  01601C  006F FF8C  F026    	movff	plusw1,btemp
 13243  016022  0E02               	movlw	2
 13244  016024  5E26               	subwf	btemp^0,f,c
 13245  016026  A0D8               	btfss	status,0,c
 13246  016028  D02F               	goto	u11810
 13247  01602A                     u11770:
 13248                           
 13249                           ;stkvar	_n @ sp[(-20)+4]
 13250  01602A  0EF0               	movlw	-16
 13251  01602C  50E3               	movf	plusw1,w,c
 13252  01602E  E115               	bnz	u11781
 13253  016030  0EF1               	movlw	-15
 13254  016032  50E3               	movf	plusw1,w,c
 13255  016034  E112               	bnz	u11781
 13256  016036  0EF2               	movlw	-14
 13257  016038  50E3               	movf	plusw1,w,c
 13258  01603A  E10F               	bnz	u11781
 13259  01603C  0EF3               	movlw	-13
 13260  01603E  50E3               	movf	plusw1,w,c
 13261  016040  E10C               	bnz	u11781
 13262  016042  0EF4               	movlw	-12
 13263  016044  50E3               	movf	plusw1,w,c
 13264  016046  E109               	bnz	u11781
 13265  016048  0EF5               	movlw	-11
 13266  01604A  50E3               	movf	plusw1,w,c
 13267  01604C  E106               	bnz	u11781
 13268  01604E  0EF6               	movlw	-10
 13269  016050  50E3               	movf	plusw1,w,c
 13270  016052  E103               	bnz	u11781
 13271  016054  0EF7               	movlw	-9
 13272  016056  50E3               	movf	plusw1,w,c
 13273  016058  A4D8               	btfss	status,2,c
 13274  01605A                     u11781:
 13275  01605A  D6EB               	goto	l12167
 13276                           
 13277                           ;stkvar	_p @ sp[(-20)+18]
 13278  01605C  0EFF               	movlw	-1
 13279  01605E  BEE3               	btfsc	plusw1,7,c
 13280  016060  D007               	goto	u11790
 13281  016062  0EFF               	movlw	-1
 13282  016064  50E3               	movf	plusw1,w,c
 13283  016066  E103               	bnz	u11791
 13284  016068  0EFE               	movlw	-2
 13285  01606A  04E3               	decf	plusw1,w,c
 13286  01606C  B0D8               	btfsc	status,0,c
 13287  01606E                     u11791:
 13288  01606E  D6E1               	goto	l12167
 13289  016070                     u11790:
 13290                           
 13291                           ;stkvar	_w @ sp[(-20)+16]
 13292  016070  0EFD               	movlw	-3
 13293  016072  BEE3               	btfsc	plusw1,7,c
 13294  016074  D009               	goto	u11810
 13295  016076  0EFD               	movlw	-3
 13296  016078  50E3               	movf	plusw1,w,c
 13297  01607A  E104               	bnz	u11800
 13298  01607C  0EFC               	movlw	-4
 13299  01607E  04E3               	decf	plusw1,w,c
 13300  016080  A0D8               	btfss	status,0,c
 13301  016082  D002               	goto	u11810
 13302  016084                     u11800:
 13303  016084  B20E               	btfsc	_flags^0,1,c
 13304  016086  D6D5               	goto	l12167
 13305  016088                     u11810:
 13306                           
 13307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13308  016088  A80E               	btfss	_flags^0,4,c
 13309  01608A  D036               	goto	l12215
 13310                           
 13311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13312                           ;stkvar	_i @ sp[(-20)+14]
 13313  01608C  50E1               	movf	fsr1l,w,c
 13314  01608E  0FFA               	addlw	-6
 13315  016090  6ED9               	movwf	fsr2l,c
 13316  016092  50E2               	movf	fsr1h,w,c
 13317  016094  6EDA               	movwf	fsr2h,c
 13318  016096  0EFF               	movlw	255
 13319  016098  22DA               	addwfc	fsr2h,f,c
 13320  01609A  06DE               	decf	postinc2,f,c
 13321  01609C  0E00               	movlw	0
 13322  01609E  5ADD               	subwfb	postdec2,f,c
 13323                           
 13324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13325                           ;stkvar	_x @ sp[(-20)+-11]
 13326                           ;stkvar	_i @ sp[(-20)+14]
 13327  0160A0  0EFA               	movlw	-6
 13328  0160A2  006F FF8C  F030    	movff	plusw1,btemp+10
 13329  0160A8  0EFB               	movlw	-5
 13330  0160AA  006F FF8C  F031    	movff	plusw1,btemp+11
 13331  0160B0  0EAE               	movlw	low _dbuf
 13332  0160B2  2430               	addwf	(btemp+10)^0,w,c
 13333  0160B4  6ED9               	movwf	fsr2l,c
 13334  0160B6  0E02               	movlw	high _dbuf
 13335  0160B8  2031               	addwfc	(btemp+11)^0,w,c
 13336  0160BA  6EDA               	movwf	fsr2h,c
 13337  0160BC  0EE1               	movlw	-31
 13338  0160BE  006F FF8F FFDF     	movff	plusw1,indf2
 13339                           
 13340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13341                           ;stkvar	_i @ sp[(-20)+14]
 13342  0160C4  50E1               	movf	fsr1l,w,c
 13343  0160C6  0FFA               	addlw	-6
 13344  0160C8  6ED9               	movwf	fsr2l,c
 13345  0160CA  50E2               	movf	fsr1h,w,c
 13346  0160CC  6EDA               	movwf	fsr2h,c
 13347  0160CE  0EFF               	movlw	255
 13348  0160D0  22DA               	addwfc	fsr2h,f,c
 13349  0160D2  06DE               	decf	postinc2,f,c
 13350  0160D4  0E00               	movlw	0
 13351  0160D6  5ADD               	subwfb	postdec2,f,c
 13352                           
 13353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13354                           ;stkvar	_i @ sp[(-20)+14]
 13355  0160D8  0EFA               	movlw	-6
 13356  0160DA  006F FF8C  F030    	movff	plusw1,btemp+10
 13357  0160E0  0EFB               	movlw	-5
 13358  0160E2  006F FF8C  F031    	movff	plusw1,btemp+11
 13359  0160E8  0EAE               	movlw	low _dbuf
 13360  0160EA  2430               	addwf	(btemp+10)^0,w,c
 13361  0160EC  6ED9               	movwf	fsr2l,c
 13362  0160EE  0E02               	movlw	high _dbuf
 13363  0160F0  2031               	addwfc	(btemp+11)^0,w,c
 13364  0160F2  6EDA               	movwf	fsr2h,c
 13365  0160F4  0E30               	movlw	48
 13366  0160F6  6EDF               	movwf	indf2,c
 13367  0160F8                     l12215:
 13368                           
 13369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13370                           ;stkvar	_w @ sp[(-20)+16]
 13371  0160F8  0EFC               	movlw	-4
 13372  0160FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13373  016100  006F FF8F FFE6     	movff	plusw1,postinc1
 13374                           
 13375                           ;stkvar	_i @ sp[(-22)+14]
 13376  016106  0EAE               	movlw	low _dbuf
 13377  016108  6E30               	movwf	(btemp+10)^0,c
 13378  01610A  0E02               	movlw	high _dbuf
 13379  01610C  6E31               	movwf	(btemp+11)^0,c
 13380  01610E  0EF8               	movlw	-8
 13381  016110  50E3               	movf	plusw1,w,c
 13382  016112  2630               	addwf	(btemp+10)^0,f,c
 13383  016114  0EF9               	movlw	-7
 13384  016116  50E3               	movf	plusw1,w,c
 13385  016118  2231               	addwfc	(btemp+11)^0,f,c
 13386  01611A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13387  016120  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13388                           
 13389                           ;stkvar	_fp @ sp[(-24)+-2]
 13390  016126  0EE6               	movlw	-26
 13391  016128  006F FF8F FFE6     	movff	plusw1,postinc1
 13392  01612E  006F FF8F FFE6     	movff	plusw1,postinc1
 13393  016134  ECAA  F0CA         	call	_pad	;wreg free
 13394                           
 13395                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13396  016138  0EE1               	movlw	225
 13397  01613A  26E1               	addwf	fsr1l,f,c
 13398  01613C  0EFF               	movlw	255
 13399  01613E  22E2               	addwfc	fsr1h,f,c
 13400  016140  0012               	return		;funcret
 13401  016142                     __end_of_xtoa:
 13402                           	opt callstack 0
 13403                           
 13404 ;; *************** function _toupper *****************
 13405 ;; Defined at:
 13406 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  c               2  [STACK] int 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;		None
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  2  [STACK] int 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/2
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;Total ram usage:        0 bytes
 13425 ;; Hardware stack levels used:    1
 13426 ;; Hardware stack levels required when called:   16
 13427 ;; This function calls:
 13428 ;;		_islower
 13429 ;; This function is called by:
 13430 ;;		_xtoa
 13431 ;; This function uses a reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text47
 13435  01A6F2                     __ptext47:
 13436                           	opt callstack 0
 13437  01A6F2                     _toupper:
 13438                           	opt callstack 0
 13439                           
 13440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13441  01A6F2  52E6               	movf	postinc1,f,c
 13442  01A6F4  52E6               	movf	postinc1,f,c
 13443                           
 13444                           ;stkvar	_c @ sp[(-2)+-2]
 13445                           
 13446                           ;incstack = 0
 13447 ;; hardware stack exceeded
 13448  01A6F6  0EFC               	movlw	-4
 13449  01A6F8  50E3               	movf	plusw1,w,c
 13450  01A6FA  0F9F               	addlw	159
 13451  01A6FC  6E30               	movwf	(btemp+10)^0,c
 13452  01A6FE  0EFD               	movlw	-3
 13453  01A700  006F FF8C  F031    	movff	plusw1,btemp+11
 13454  01A706  0EFF               	movlw	255
 13455  01A708  2231               	addwfc	(btemp+11)^0,f,c
 13456  01A70A  5031               	movf	(btemp+11)^0,w,c
 13457  01A70C  E106               	bnz	u6150
 13458  01A70E  0E1A               	movlw	26
 13459  01A710  5C30               	subwf	(btemp+10)^0,w,c
 13460  01A712  B0D8               	btfsc	status,0,c
 13461  01A714  D002               	goto	u6150
 13462  01A716  0E01               	movlw	1
 13463  01A718  D001               	goto	u6160
 13464  01A71A                     u6150:
 13465  01A71A  0E00               	movlw	0
 13466  01A71C                     u6160:
 13467  01A71C  6E30               	movwf	(btemp+10)^0,c
 13468  01A71E  6A31               	clrf	(btemp+11)^0,c
 13469                           
 13470                           ;stkvar	_toupper$6334 @ sp[(-2)+0]
 13471  01A720  0EFE               	movlw	-2
 13472  01A722  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13473  01A728  0EFF               	movlw	-1
 13474  01A72A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13475                           
 13476                           ;stkvar	_toupper$6334 @ sp[(-2)+0]
 13477  01A730  0EFE               	movlw	-2
 13478  01A732  006F FF8C  F026    	movff	plusw1,btemp
 13479  01A738  0EFF               	movlw	-1
 13480  01A73A  50E3               	movf	plusw1,w,c
 13481  01A73C  1026               	iorwf	btemp^0,w,c
 13482  01A73E  B4D8               	btfsc	status,2,c
 13483  01A740  D00D               	goto	l7969
 13484                           
 13485                           ;stkvar	_c @ sp[(-2)+-2]
 13486  01A742  0EFC               	movlw	-4
 13487  01A744  006F FF8C  F026    	movff	plusw1,btemp
 13488  01A74A  0EFD               	movlw	-3
 13489  01A74C  006F FF8C  F027    	movff	plusw1,btemp+1
 13490  01A752  0E5F               	movlw	95
 13491  01A754  1626               	andwf	btemp^0,f,c
 13492  01A756  0E00               	movlw	0
 13493  01A758  1627               	andwf	(btemp+1)^0,f,c
 13494  01A75A  D008               	goto	l3480
 13495  01A75C                     l7969:
 13496                           
 13497                           ;stkvar	_c @ sp[(-2)+-2]
 13498  01A75C  0EFC               	movlw	-4
 13499  01A75E  006F FF8C  F026    	movff	plusw1,btemp
 13500  01A764  0EFD               	movlw	-3
 13501  01A766  006F FF8C  F027    	movff	plusw1,btemp+1
 13502  01A76C                     l3480:
 13503                           
 13504                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13505  01A76C  52E5               	movf	postdec1,f,c
 13506  01A76E  52E5               	movf	postdec1,f,c
 13507  01A770  52E5               	movf	postdec1,f,c
 13508  01A772  52E5               	movf	postdec1,f,c
 13509  01A774  0012               	return		;funcret
 13510  01A776                     __end_of_toupper:
 13511                           	opt callstack 0
 13512                           
 13513 ;; *************** function _islower *****************
 13514 ;; Defined at:
 13515 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  c               2  [STACK] int 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;		None
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  2  [STACK] int 
 13522 ;; Registers used:
 13523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13533 ;;Total ram usage:        0 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; Hardware stack levels required when called:   15
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_toupper
 13540 ;; This function uses a reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text48
 13544  01B3B4                     __ptext48:
 13545                           	opt callstack 0
 13546  01B3B4                     _islower:
 13547                           	opt callstack 0
 13548                           
 13549                           ;stkvar	_c @ sp[(0)+-2]
 13550                           
 13551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13552                           ;incstack = 0
 13553 ;; hardware stack exceeded
 13554  01B3B4  0EFE               	movlw	-2
 13555  01B3B6  50E3               	movf	plusw1,w,c
 13556  01B3B8  0F9F               	addlw	159
 13557  01B3BA  6E30               	movwf	(btemp+10)^0,c
 13558  01B3BC  0EFF               	movlw	-1
 13559  01B3BE  006F FF8C  F031    	movff	plusw1,btemp+11
 13560  01B3C4  0EFF               	movlw	255
 13561  01B3C6  2231               	addwfc	(btemp+11)^0,f,c
 13562  01B3C8  5031               	movf	(btemp+11)^0,w,c
 13563  01B3CA  E106               	bnz	u5840
 13564  01B3CC  0E1A               	movlw	26
 13565  01B3CE  5C30               	subwf	(btemp+10)^0,w,c
 13566  01B3D0  B0D8               	btfsc	status,0,c
 13567  01B3D2  D002               	goto	u5840
 13568  01B3D4  0E01               	movlw	1
 13569  01B3D6  D001               	goto	u5850
 13570  01B3D8                     u5840:
 13571  01B3D8  0E00               	movlw	0
 13572  01B3DA                     u5850:
 13573  01B3DA  6E26               	movwf	btemp^0,c
 13574  01B3DC  6A27               	clrf	(btemp+1)^0,c
 13575                           
 13576                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13577  01B3DE  52E5               	movf	postdec1,f,c
 13578  01B3E0  52E5               	movf	postdec1,f,c
 13579  01B3E2  0012               	return		;funcret
 13580  01B3E4                     __end_of_islower:
 13581                           	opt callstack 0
 13582                           
 13583 ;; *************** function _isalpha *****************
 13584 ;; Defined at:
 13585 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;  c               2  [STACK] int 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  2  [STACK] int 
 13592 ;; Registers used:
 13593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:   15
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_xtoa
 13610 ;; This function uses a reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text49
 13614  01B002                     __ptext49:
 13615                           	opt callstack 0
 13616  01B002                     _isalpha:
 13617                           	opt callstack 0
 13618                           
 13619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13620                           ;incstack = 0
 13621 ;; hardware stack exceeded
 13622  01B002  0E9F               	movlw	159
 13623  01B004  6E30               	movwf	(btemp+10)^0,c
 13624  01B006  0EFF               	movlw	255
 13625  01B008  6E31               	movwf	(btemp+11)^0,c
 13626                           
 13627                           ;stkvar	_c @ sp[(0)+-2]
 13628  01B00A  0EFE               	movlw	-2
 13629  01B00C  006F FF8C  F02E    	movff	plusw1,btemp+8
 13630  01B012  0EFF               	movlw	-1
 13631  01B014  006F FF8C  F02F    	movff	plusw1,btemp+9
 13632  01B01A  0E20               	movlw	32
 13633  01B01C  122E               	iorwf	(btemp+8)^0,f,c
 13634  01B01E  0E00               	movlw	0
 13635  01B020  122F               	iorwf	(btemp+9)^0,f,c
 13636  01B022  5030               	movf	(btemp+10)^0,w,c
 13637  01B024  262E               	addwf	(btemp+8)^0,f,c
 13638  01B026  5031               	movf	(btemp+11)^0,w,c
 13639  01B028  222F               	addwfc	(btemp+9)^0,f,c
 13640  01B02A  502F               	movf	(btemp+9)^0,w,c
 13641  01B02C  E106               	bnz	u6130
 13642  01B02E  0E1A               	movlw	26
 13643  01B030  5C2E               	subwf	(btemp+8)^0,w,c
 13644  01B032  B0D8               	btfsc	status,0,c
 13645  01B034  D002               	goto	u6130
 13646  01B036  0E01               	movlw	1
 13647  01B038  D001               	goto	u6140
 13648  01B03A                     u6130:
 13649  01B03A  0E00               	movlw	0
 13650  01B03C                     u6140:
 13651  01B03C  6E26               	movwf	btemp^0,c
 13652  01B03E  6A27               	clrf	(btemp+1)^0,c
 13653                           
 13654                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13655  01B040  52E5               	movf	postdec1,f,c
 13656  01B042  52E5               	movf	postdec1,f,c
 13657  01B044  0012               	return		;funcret
 13658  01B046                     __end_of_isalpha:
 13659                           	opt callstack 0
 13660                           
 13661 ;; *************** function _utoa *****************
 13662 ;; Defined at:
 13663 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13666 ;;		 -> f(6), NULL(0), 
 13667 ;;  d               8  [STACK] unsigned long long 
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;  n               8  [STACK] unsigned long long 
 13670 ;;  i               2  [STACK] int 
 13671 ;;  w               2  [STACK] int 
 13672 ;;  p               2  [STACK] int 
 13673 ;; Return value:  Size  Location     Type
 13674 ;;                  2  [STACK] int 
 13675 ;; Registers used:
 13676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13677 ;; Tracked objects:
 13678 ;;		On entry : 0/0
 13679 ;;		On exit  : 0/0
 13680 ;;		Unchanged: 0/0
 13681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13686 ;;Total ram usage:        0 bytes
 13687 ;; Hardware stack levels used:    1
 13688 ;; Hardware stack levels required when called:   20
 13689 ;; This function calls:
 13690 ;;		___lodiv
 13691 ;;		___lomod
 13692 ;;		_pad
 13693 ;; This function is called by:
 13694 ;;		_vfpfcnvrt
 13695 ;; This function uses a reentrant model
 13696 ;;
 13697                           
 13698                           	psect	text50
 13699  0164AE                     __ptext50:
 13700                           	opt callstack 0
 13701  0164AE                     _utoa:
 13702                           	opt callstack 0
 13703                           
 13704                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13705  0164AE  0E0E               	movlw	14
 13706  0164B0  26E1               	addwf	fsr1l,f,c
 13707  0164B2  0E00               	movlw	0
 13708  0164B4  22E2               	addwfc	fsr1h,f,c
 13709                           
 13710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13711                           
 13712                           ;incstack = 0
 13713 ;; hardware stack exceeded
 13714  0164B6  AE0D               	btfss	(_prec+1)^0,7,c
 13715                           
 13716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13717  0164B8  920E               	bcf	_flags^0,1,c
 13718                           
 13719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13720  0164BA  BE0D               	btfsc	(_prec+1)^0,7,c
 13721  0164BC  D005               	goto	u11580
 13722  0164BE  500D               	movf	(_prec+1)^0,w,c
 13723  0164C0  E110               	bnz	l12115
 13724  0164C2  040C               	decf	_prec^0,w,c
 13725  0164C4  B0D8               	btfsc	status,0,c
 13726  0164C6  D00D               	goto	l12115
 13727  0164C8                     u11580:
 13728  0164C8  0E01               	movlw	1
 13729  0164CA  6E30               	movwf	(btemp+10)^0,c
 13730  0164CC  0E00               	movlw	0
 13731  0164CE  6E31               	movwf	(btemp+11)^0,c
 13732                           
 13733                           ;stkvar	_p @ sp[(-14)+12]
 13734  0164D0  0EFE               	movlw	-2
 13735  0164D2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13736  0164D8  0EFF               	movlw	-1
 13737  0164DA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13738  0164E0  D008               	goto	l2298
 13739  0164E2                     l12115:
 13740                           
 13741                           ;stkvar	_p @ sp[(-14)+12]
 13742  0164E2  0EFE               	movlw	-2
 13743  0164E4  0060  F033  FFE3   	movff	_prec,plusw1
 13744  0164EA  0EFF               	movlw	-1
 13745  0164EC  0060  F037  FFE3   	movff	_prec+1,plusw1
 13746  0164F2                     l2298:
 13747                           
 13748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13749                           ;stkvar	_w @ sp[(-14)+10]
 13750  0164F2  0EFC               	movlw	-4
 13751  0164F4  0060  F02B  FFE3   	movff	_width,plusw1
 13752  0164FA  0EFD               	movlw	-3
 13753  0164FC  0060  F02F  FFE3   	movff	_width+1,plusw1
 13754                           
 13755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13756                           ;stkvar	_d @ sp[(-14)+-10]
 13757  016502  0EE8               	movlw	232
 13758  016504  24E1               	addwf	fsr1l,w,c
 13759  016506  6ED9               	movwf	fsr2l,c
 13760  016508  0EFF               	movlw	255
 13761  01650A  20E2               	addwfc	fsr1h,w,c
 13762  01650C  6EDA               	movwf	fsr2h,c
 13763                           
 13764                           ;stkvar	_n @ sp[(-14)+0]
 13765  01650E  0E08               	movlw	8
 13766  016510  6E26               	movwf	btemp^0,c
 13767  016512  0EF2               	movlw	-14
 13768  016514                     us1159999:
 13769  016514  006F FF7B FFE3     	movff	postinc2,plusw1
 13770  01651A  28E8               	incf	wreg,w,c
 13771  01651C  2E26               	decfsz	btemp^0,f,c
 13772  01651E  D7FA               	bra	us1159999
 13773                           
 13774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13775  016520  0E4F               	movlw	79
 13776  016522  6E30               	movwf	(btemp+10)^0,c
 13777  016524  0E00               	movlw	0
 13778  016526  6E31               	movwf	(btemp+11)^0,c
 13779                           
 13780                           ;stkvar	_i @ sp[(-14)+8]
 13781  016528  0EFA               	movlw	-6
 13782  01652A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13783  016530  0EFB               	movlw	-5
 13784  016532  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13785                           
 13786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13787  016538  0102               	movlb	2	; () banked
 13788  01653A  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13791  01653C  D0FB               	goto	l12133
 13792  01653E                     l12123:
 13793                           
 13794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13795                           ;stkvar	_i @ sp[(-14)+8]
 13796  01653E  50E1               	movf	fsr1l,w,c
 13797  016540  0FFA               	addlw	-6
 13798  016542  6ED9               	movwf	fsr2l,c
 13799  016544  50E2               	movf	fsr1h,w,c
 13800  016546  6EDA               	movwf	fsr2h,c
 13801  016548  0EFF               	movlw	255
 13802  01654A  22DA               	addwfc	fsr2h,f,c
 13803  01654C  06DE               	decf	postinc2,f,c
 13804  01654E  0E00               	movlw	0
 13805  016550  5ADD               	subwfb	postdec2,f,c
 13806                           
 13807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13808  016552  0E0A               	movlw	10
 13809  016554  6EE6               	movwf	postinc1,c
 13810  016556  0E00               	movlw	0
 13811  016558  6EE6               	movwf	postinc1,c
 13812  01655A  0E00               	movlw	0
 13813  01655C  6EE6               	movwf	postinc1,c
 13814  01655E  0E00               	movlw	0
 13815  016560  6EE6               	movwf	postinc1,c
 13816  016562  0E00               	movlw	0
 13817  016564  6EE6               	movwf	postinc1,c
 13818  016566  0E00               	movlw	0
 13819  016568  6EE6               	movwf	postinc1,c
 13820  01656A  0E00               	movlw	0
 13821  01656C  6EE6               	movwf	postinc1,c
 13822  01656E  0E00               	movlw	0
 13823  016570  6EE6               	movwf	postinc1,c
 13824                           
 13825                           ;stkvar	_n @ sp[(-22)+0]
 13826  016572  50E1               	movf	fsr1l,w,c
 13827  016574  0FEA               	addlw	-22
 13828  016576  6ED9               	movwf	fsr2l,c
 13829  016578  50E2               	movf	fsr1h,w,c
 13830  01657A  6EDA               	movwf	fsr2h,c
 13831  01657C  0EFF               	movlw	255
 13832  01657E  22DA               	addwfc	fsr2h,f,c
 13833  016580  006F FF7B FFE6     	movff	postinc2,postinc1
 13834  016586  006F FF7B FFE6     	movff	postinc2,postinc1
 13835  01658C  006F FF7B FFE6     	movff	postinc2,postinc1
 13836  016592  006F FF7B FFE6     	movff	postinc2,postinc1
 13837  016598  006F FF7B FFE6     	movff	postinc2,postinc1
 13838  01659E  006F FF7B FFE6     	movff	postinc2,postinc1
 13839  0165A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13840  0165AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13841  0165B0  EC22  F0C7         	call	___lomod	;wreg free
 13842  0165B4  52E5               	movf	postdec1,f,c
 13843  0165B6  006F FF9C  F03D    	movff	indf1,btemp+23
 13844  0165BC  52E5               	movf	postdec1,f,c
 13845  0165BE  006F FF9C  F03C    	movff	indf1,btemp+22
 13846  0165C4  52E5               	movf	postdec1,f,c
 13847  0165C6  006F FF9C  F03B    	movff	indf1,btemp+21
 13848  0165CC  52E5               	movf	postdec1,f,c
 13849  0165CE  006F FF9C  F03A    	movff	indf1,btemp+20
 13850  0165D4  52E5               	movf	postdec1,f,c
 13851  0165D6  006F FF9C  F039    	movff	indf1,btemp+19
 13852  0165DC  52E5               	movf	postdec1,f,c
 13853  0165DE  006F FF9C  F038    	movff	indf1,btemp+18
 13854  0165E4  52E5               	movf	postdec1,f,c
 13855  0165E6  006F FF9C  F037    	movff	indf1,btemp+17
 13856  0165EC  52E5               	movf	postdec1,f,c
 13857  0165EE  006F FF9C  F036    	movff	indf1,btemp+16
 13858  0165F4  0EF8               	movlw	248
 13859  0165F6  26E1               	addwf	fsr1l,f,c
 13860  0165F8  0EFF               	movlw	255
 13861  0165FA  22E2               	addwfc	fsr1h,f,c
 13862  0165FC  0E30               	movlw	48
 13863  0165FE  2636               	addwf	(btemp+16)^0,f,c
 13864                           
 13865                           ;stkvar	_i @ sp[(-14)+8]
 13866  016600  0EFA               	movlw	-6
 13867  016602  006F FF8C  F030    	movff	plusw1,btemp+10
 13868  016608  0EFB               	movlw	-5
 13869  01660A  006F FF8C  F031    	movff	plusw1,btemp+11
 13870  016610  0EAE               	movlw	low _dbuf
 13871  016612  2430               	addwf	(btemp+10)^0,w,c
 13872  016614  6ED9               	movwf	fsr2l,c
 13873  016616  0E02               	movlw	high _dbuf
 13874  016618  2031               	addwfc	(btemp+11)^0,w,c
 13875  01661A  6EDA               	movwf	fsr2h,c
 13876  01661C  0060  F0DB  FFDF   	movff	btemp+16,indf2
 13877                           
 13878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13879                           ;stkvar	_p @ sp[(-14)+12]
 13880  016622  50E1               	movf	fsr1l,w,c
 13881  016624  0FFE               	addlw	-2
 13882  016626  6ED9               	movwf	fsr2l,c
 13883  016628  50E2               	movf	fsr1h,w,c
 13884  01662A  6EDA               	movwf	fsr2h,c
 13885  01662C  0EFF               	movlw	255
 13886  01662E  22DA               	addwfc	fsr2h,f,c
 13887  016630  06DE               	decf	postinc2,f,c
 13888  016632  0E00               	movlw	0
 13889  016634  5ADD               	subwfb	postdec2,f,c
 13890                           
 13891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13892                           ;stkvar	_w @ sp[(-14)+10]
 13893  016636  50E1               	movf	fsr1l,w,c
 13894  016638  0FFC               	addlw	-4
 13895  01663A  6ED9               	movwf	fsr2l,c
 13896  01663C  50E2               	movf	fsr1h,w,c
 13897  01663E  6EDA               	movwf	fsr2h,c
 13898  016640  0EFF               	movlw	255
 13899  016642  22DA               	addwfc	fsr2h,f,c
 13900  016644  06DE               	decf	postinc2,f,c
 13901  016646  0E00               	movlw	0
 13902  016648  5ADD               	subwfb	postdec2,f,c
 13903                           
 13904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13905  01664A  0E0A               	movlw	10
 13906  01664C  6EE6               	movwf	postinc1,c
 13907  01664E  0E00               	movlw	0
 13908  016650  6EE6               	movwf	postinc1,c
 13909  016652  0E00               	movlw	0
 13910  016654  6EE6               	movwf	postinc1,c
 13911  016656  0E00               	movlw	0
 13912  016658  6EE6               	movwf	postinc1,c
 13913  01665A  0E00               	movlw	0
 13914  01665C  6EE6               	movwf	postinc1,c
 13915  01665E  0E00               	movlw	0
 13916  016660  6EE6               	movwf	postinc1,c
 13917  016662  0E00               	movlw	0
 13918  016664  6EE6               	movwf	postinc1,c
 13919  016666  0E00               	movlw	0
 13920  016668  6EE6               	movwf	postinc1,c
 13921                           
 13922                           ;stkvar	_n @ sp[(-22)+0]
 13923  01666A  50E1               	movf	fsr1l,w,c
 13924  01666C  0FEA               	addlw	-22
 13925  01666E  6ED9               	movwf	fsr2l,c
 13926  016670  50E2               	movf	fsr1h,w,c
 13927  016672  6EDA               	movwf	fsr2h,c
 13928  016674  0EFF               	movlw	255
 13929  016676  22DA               	addwfc	fsr2h,f,c
 13930  016678  006F FF7B FFE6     	movff	postinc2,postinc1
 13931  01667E  006F FF7B FFE6     	movff	postinc2,postinc1
 13932  016684  006F FF7B FFE6     	movff	postinc2,postinc1
 13933  01668A  006F FF7B FFE6     	movff	postinc2,postinc1
 13934  016690  006F FF7B FFE6     	movff	postinc2,postinc1
 13935  016696  006F FF7B FFE6     	movff	postinc2,postinc1
 13936  01669C  006F FF7B FFE6     	movff	postinc2,postinc1
 13937  0166A2  006F FF7B FFE6     	movff	postinc2,postinc1
 13938  0166A8  ECE9  F0C2         	call	___lodiv	;wreg free
 13939  0166AC  52E5               	movf	postdec1,f,c
 13940  0166AE  006F FF9C  F03D    	movff	indf1,btemp+23
 13941  0166B4  52E5               	movf	postdec1,f,c
 13942  0166B6  006F FF9C  F03C    	movff	indf1,btemp+22
 13943  0166BC  52E5               	movf	postdec1,f,c
 13944  0166BE  006F FF9C  F03B    	movff	indf1,btemp+21
 13945  0166C4  52E5               	movf	postdec1,f,c
 13946  0166C6  006F FF9C  F03A    	movff	indf1,btemp+20
 13947  0166CC  52E5               	movf	postdec1,f,c
 13948  0166CE  006F FF9C  F039    	movff	indf1,btemp+19
 13949  0166D4  52E5               	movf	postdec1,f,c
 13950  0166D6  006F FF9C  F038    	movff	indf1,btemp+18
 13951  0166DC  52E5               	movf	postdec1,f,c
 13952  0166DE  006F FF9C  F037    	movff	indf1,btemp+17
 13953  0166E4  52E5               	movf	postdec1,f,c
 13954  0166E6  006F FF9C  F036    	movff	indf1,btemp+16
 13955  0166EC  0EF8               	movlw	248
 13956  0166EE  26E1               	addwf	fsr1l,f,c
 13957  0166F0  0EFF               	movlw	255
 13958  0166F2  22E2               	addwfc	fsr1h,f,c
 13959                           
 13960                           ;stkvar	_n @ sp[(-14)+0]
 13961  0166F4  0EF2               	movlw	-14
 13962  0166F6  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 13963  0166FC  0EF3               	movlw	-13
 13964  0166FE  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 13965  016704  0EF4               	movlw	-12
 13966  016706  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 13967  01670C  0EF5               	movlw	-11
 13968  01670E  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 13969  016714  0EF6               	movlw	-10
 13970  016716  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 13971  01671C  0EF7               	movlw	-9
 13972  01671E  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 13973  016724  0EF8               	movlw	-8
 13974  016726  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 13975  01672C  0EF9               	movlw	-7
 13976  01672E  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 13977  016734                     l12133:
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13980                           ;stkvar	_i @ sp[(-14)+8]
 13981  016734  0EFA               	movlw	-6
 13982  016736  006F FF8C  F026    	movff	plusw1,btemp
 13983  01673C  0EFB               	movlw	-5
 13984  01673E  50E3               	movf	plusw1,w,c
 13985  016740  1026               	iorwf	btemp^0,w,c
 13986  016742  B4D8               	btfsc	status,2,c
 13987  016744  D02F               	goto	u11640
 13988                           
 13989                           ;stkvar	_n @ sp[(-14)+0]
 13990  016746  0EF2               	movlw	-14
 13991  016748  50E3               	movf	plusw1,w,c
 13992  01674A  E115               	bnz	u11611
 13993  01674C  0EF3               	movlw	-13
 13994  01674E  50E3               	movf	plusw1,w,c
 13995  016750  E112               	bnz	u11611
 13996  016752  0EF4               	movlw	-12
 13997  016754  50E3               	movf	plusw1,w,c
 13998  016756  E10F               	bnz	u11611
 13999  016758  0EF5               	movlw	-11
 14000  01675A  50E3               	movf	plusw1,w,c
 14001  01675C  E10C               	bnz	u11611
 14002  01675E  0EF6               	movlw	-10
 14003  016760  50E3               	movf	plusw1,w,c
 14004  016762  E109               	bnz	u11611
 14005  016764  0EF7               	movlw	-9
 14006  016766  50E3               	movf	plusw1,w,c
 14007  016768  E106               	bnz	u11611
 14008  01676A  0EF8               	movlw	-8
 14009  01676C  50E3               	movf	plusw1,w,c
 14010  01676E  E103               	bnz	u11611
 14011  016770  0EF9               	movlw	-7
 14012  016772  50E3               	movf	plusw1,w,c
 14013  016774  A4D8               	btfss	status,2,c
 14014  016776                     u11611:
 14015  016776  D6E3               	goto	l12123
 14016                           
 14017                           ;stkvar	_p @ sp[(-14)+12]
 14018  016778  0EFF               	movlw	-1
 14019  01677A  BEE3               	btfsc	plusw1,7,c
 14020  01677C  D007               	goto	u11620
 14021  01677E  0EFF               	movlw	-1
 14022  016780  50E3               	movf	plusw1,w,c
 14023  016782  E103               	bnz	u11621
 14024  016784  0EFE               	movlw	-2
 14025  016786  04E3               	decf	plusw1,w,c
 14026  016788  B0D8               	btfsc	status,0,c
 14027  01678A                     u11621:
 14028  01678A  D6D9               	goto	l12123
 14029  01678C                     u11620:
 14030                           
 14031                           ;stkvar	_w @ sp[(-14)+10]
 14032  01678C  0EFD               	movlw	-3
 14033  01678E  BEE3               	btfsc	plusw1,7,c
 14034  016790  D009               	goto	u11640
 14035  016792  0EFD               	movlw	-3
 14036  016794  50E3               	movf	plusw1,w,c
 14037  016796  E104               	bnz	u11630
 14038  016798  0EFC               	movlw	-4
 14039  01679A  04E3               	decf	plusw1,w,c
 14040  01679C  A0D8               	btfss	status,0,c
 14041  01679E  D002               	goto	u11640
 14042  0167A0                     u11630:
 14043  0167A0  B20E               	btfsc	_flags^0,1,c
 14044  0167A2  D6CD               	goto	l12123
 14045  0167A4                     u11640:
 14046                           
 14047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14048                           ;stkvar	_w @ sp[(-14)+10]
 14049  0167A4  0EFC               	movlw	-4
 14050  0167A6  006F FF8F FFE6     	movff	plusw1,postinc1
 14051  0167AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14052                           
 14053                           ;stkvar	_i @ sp[(-16)+8]
 14054  0167B2  0EAE               	movlw	low _dbuf
 14055  0167B4  6E30               	movwf	(btemp+10)^0,c
 14056  0167B6  0E02               	movlw	high _dbuf
 14057  0167B8  6E31               	movwf	(btemp+11)^0,c
 14058  0167BA  0EF8               	movlw	-8
 14059  0167BC  50E3               	movf	plusw1,w,c
 14060  0167BE  2630               	addwf	(btemp+10)^0,f,c
 14061  0167C0  0EF9               	movlw	-7
 14062  0167C2  50E3               	movf	plusw1,w,c
 14063  0167C4  2231               	addwfc	(btemp+11)^0,f,c
 14064  0167C6  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 14065  0167CC  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 14066                           
 14067                           ;stkvar	_fp @ sp[(-18)+-2]
 14068  0167D2  0EEC               	movlw	-20
 14069  0167D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14070  0167DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14071  0167E0  ECAA  F0CA         	call	_pad	;wreg free
 14072                           
 14073                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14074  0167E4  0EE8               	movlw	232
 14075  0167E6  26E1               	addwf	fsr1l,f,c
 14076  0167E8  0EFF               	movlw	255
 14077  0167EA  22E2               	addwfc	fsr1h,f,c
 14078  0167EC  0012               	return		;funcret
 14079  0167EE                     __end_of_utoa:
 14080                           	opt callstack 0
 14081                           
 14082 ;; *************** function ___lomod *****************
 14083 ;; Defined at:
 14084 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  dividend        8  [STACK] unsigned long long 
 14087 ;;  divisor         8  [STACK] unsigned long long 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  counter         1  [STACK] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  8  [STACK] unsigned long long 
 14092 ;; Registers used:
 14093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/2
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;Total ram usage:        0 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:   15
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_utoa
 14110 ;; This function uses a reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text51
 14114  018E44                     __ptext51:
 14115                           	opt callstack 0
 14116  018E44                     ___lomod:
 14117                           	opt callstack 0
 14118                           
 14119                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14120  018E44  52E6               	movf	postinc1,f,c
 14121                           
 14122                           ;stkvar	_divisor @ sp[(-1)+-16]
 14123                           
 14124                           ;incstack = 0
 14125 ;; hardware stack exceeded
 14126  018E46  0EEF               	movlw	-17
 14127  018E48  50E3               	movf	plusw1,w,c
 14128  018E4A  E116               	bnz	u7280
 14129  018E4C  0EF0               	movlw	-16
 14130  018E4E  50E3               	movf	plusw1,w,c
 14131  018E50  E113               	bnz	u7280
 14132  018E52  0EF1               	movlw	-15
 14133  018E54  50E3               	movf	plusw1,w,c
 14134  018E56  E110               	bnz	u7280
 14135  018E58  0EF2               	movlw	-14
 14136  018E5A  50E3               	movf	plusw1,w,c
 14137  018E5C  E10D               	bnz	u7280
 14138  018E5E  0EF3               	movlw	-13
 14139  018E60  50E3               	movf	plusw1,w,c
 14140  018E62  E10A               	bnz	u7280
 14141  018E64  0EF4               	movlw	-12
 14142  018E66  50E3               	movf	plusw1,w,c
 14143  018E68  E107               	bnz	u7280
 14144  018E6A  0EF5               	movlw	-11
 14145  018E6C  50E3               	movf	plusw1,w,c
 14146  018E6E  E104               	bnz	u7280
 14147  018E70  0EF6               	movlw	-10
 14148  018E72  50E3               	movf	plusw1,w,c
 14149  018E74  B4D8               	btfsc	status,2,c
 14150  018E76  D075               	goto	u7310
 14151  018E78                     u7280:
 14152                           
 14153                           ;stkvar	_counter @ sp[(-1)+0]
 14154  018E78  0EFF               	movlw	-1
 14155  018E7A  6AE3               	clrf	plusw1,c
 14156  018E7C  D012               	goto	L14
 14157  018E7E                     l8579:
 14158                           
 14159                           ;stkvar	_divisor @ sp[(-1)+-16]
 14160  018E7E  90D8               	bcf	status,0,c
 14161  018E80  0EEF               	movlw	-17
 14162  018E82  36E3               	rlcf	plusw1,f,c
 14163  018E84  0EF0               	movlw	-16
 14164  018E86  36E3               	rlcf	plusw1,f,c
 14165  018E88  0EF1               	movlw	-15
 14166  018E8A  36E3               	rlcf	plusw1,f,c
 14167  018E8C  0EF2               	movlw	-14
 14168  018E8E  36E3               	rlcf	plusw1,f,c
 14169  018E90  0EF3               	movlw	-13
 14170  018E92  36E3               	rlcf	plusw1,f,c
 14171  018E94  0EF4               	movlw	-12
 14172  018E96  36E3               	rlcf	plusw1,f,c
 14173  018E98  0EF5               	movlw	-11
 14174  018E9A  36E3               	rlcf	plusw1,f,c
 14175  018E9C  0EF6               	movlw	-10
 14176  018E9E  36E3               	rlcf	plusw1,f,c
 14177                           
 14178                           ;stkvar	_counter @ sp[(-1)+0]
 14179  018EA0  0EFF               	movlw	-1
 14180  018EA2                     L14:
 14181  018EA2  2AE3               	incf	plusw1,f,c
 14182                           
 14183                           ;stkvar	_divisor @ sp[(-1)+-16]
 14184  018EA4  0EF6               	movlw	-10
 14185  018EA6  AEE3               	btfss	plusw1,7,c
 14186  018EA8  D7EA               	goto	l8579
 14187  018EAA                     u7290:
 14188                           
 14189                           ;stkvar	_divisor @ sp[(-1)+-16]
 14190                           ;stkvar	_dividend @ sp[(-1)+-8]
 14191  018EAA  50E1               	movf	fsr1l,w,c
 14192  018EAC  0FF7               	addlw	-9
 14193  018EAE  6ED9               	movwf	fsr2l,c
 14194  018EB0  50E2               	movf	fsr1h,w,c
 14195  018EB2  6EDA               	movwf	fsr2h,c
 14196  018EB4  0EFF               	movlw	255
 14197  018EB6  22DA               	addwfc	fsr2h,f,c
 14198  018EB8  0EEF               	movlw	-17
 14199  018EBA  50E3               	movf	plusw1,w,c
 14200  018EBC  5CDE               	subwf	postinc2,w,c
 14201  018EBE  0EF0               	movlw	-16
 14202  018EC0  50E3               	movf	plusw1,w,c
 14203  018EC2  58DE               	subwfb	postinc2,w,c
 14204  018EC4  0EF1               	movlw	-15
 14205  018EC6  50E3               	movf	plusw1,w,c
 14206  018EC8  58DE               	subwfb	postinc2,w,c
 14207  018ECA  0EF2               	movlw	-14
 14208  018ECC  50E3               	movf	plusw1,w,c
 14209  018ECE  58DE               	subwfb	postinc2,w,c
 14210  018ED0  0EF3               	movlw	-13
 14211  018ED2  50E3               	movf	plusw1,w,c
 14212  018ED4  58DE               	subwfb	postinc2,w,c
 14213  018ED6  0EF4               	movlw	-12
 14214  018ED8  50E3               	movf	plusw1,w,c
 14215  018EDA  58DE               	subwfb	postinc2,w,c
 14216  018EDC  0EF5               	movlw	-11
 14217  018EDE  50E3               	movf	plusw1,w,c
 14218  018EE0  58DE               	subwfb	postinc2,w,c
 14219  018EE2  0EF6               	movlw	-10
 14220  018EE4  50E3               	movf	plusw1,w,c
 14221  018EE6  58DE               	subwfb	postinc2,w,c
 14222  018EE8  A0D8               	btfss	status,0,c
 14223  018EEA  D01F               	goto	l8587
 14224                           
 14225                           ;stkvar	_divisor @ sp[(-1)+-16]
 14226                           ;stkvar	_dividend @ sp[(-1)+-8]
 14227  018EEC  50E1               	movf	fsr1l,w,c
 14228  018EEE  0FF7               	addlw	-9
 14229  018EF0  6ED9               	movwf	fsr2l,c
 14230  018EF2  50E2               	movf	fsr1h,w,c
 14231  018EF4  6EDA               	movwf	fsr2h,c
 14232  018EF6  0EFF               	movlw	255
 14233  018EF8  22DA               	addwfc	fsr2h,f,c
 14234  018EFA  0EEF               	movlw	-17
 14235  018EFC  50E3               	movf	plusw1,w,c
 14236  018EFE  5EDE               	subwf	postinc2,f,c
 14237  018F00  0EF0               	movlw	-16
 14238  018F02  50E3               	movf	plusw1,w,c
 14239  018F04  5ADE               	subwfb	postinc2,f,c
 14240  018F06  0EF1               	movlw	-15
 14241  018F08  50E3               	movf	plusw1,w,c
 14242  018F0A  5ADE               	subwfb	postinc2,f,c
 14243  018F0C  0EF2               	movlw	-14
 14244  018F0E  50E3               	movf	plusw1,w,c
 14245  018F10  5ADE               	subwfb	postinc2,f,c
 14246  018F12  0EF3               	movlw	-13
 14247  018F14  50E3               	movf	plusw1,w,c
 14248  018F16  5ADE               	subwfb	postinc2,f,c
 14249  018F18  0EF4               	movlw	-12
 14250  018F1A  50E3               	movf	plusw1,w,c
 14251  018F1C  5ADE               	subwfb	postinc2,f,c
 14252  018F1E  0EF5               	movlw	-11
 14253  018F20  50E3               	movf	plusw1,w,c
 14254  018F22  5ADE               	subwfb	postinc2,f,c
 14255  018F24  0EF6               	movlw	-10
 14256  018F26  50E3               	movf	plusw1,w,c
 14257  018F28  5ADE               	subwfb	postinc2,f,c
 14258  018F2A                     l8587:
 14259                           
 14260                           ;stkvar	_divisor @ sp[(-1)+-16]
 14261  018F2A  90D8               	bcf	status,0,c
 14262  018F2C  0EF6               	movlw	-10
 14263  018F2E  32E3               	rrcf	plusw1,f,c
 14264  018F30  0EF5               	movlw	-11
 14265  018F32  32E3               	rrcf	plusw1,f,c
 14266  018F34  0EF4               	movlw	-12
 14267  018F36  32E3               	rrcf	plusw1,f,c
 14268  018F38  0EF3               	movlw	-13
 14269  018F3A  32E3               	rrcf	plusw1,f,c
 14270  018F3C  0EF2               	movlw	-14
 14271  018F3E  32E3               	rrcf	plusw1,f,c
 14272  018F40  0EF1               	movlw	-15
 14273  018F42  32E3               	rrcf	plusw1,f,c
 14274  018F44  0EF0               	movlw	-16
 14275  018F46  32E3               	rrcf	plusw1,f,c
 14276  018F48  0EEF               	movlw	-17
 14277  018F4A  32E3               	rrcf	plusw1,f,c
 14278                           
 14279                           ;stkvar	_counter @ sp[(-1)+0]
 14280  018F4C  0EFF               	movlw	-1
 14281  018F4E  50E3               	movf	plusw1,w,c
 14282  018F50  6E26               	movwf	btemp^0,c
 14283  018F52  0E01               	movlw	1
 14284  018F54  5E26               	subwf	btemp^0,f,c
 14285  018F56  0EFF               	movlw	-1
 14286  018F58  0060  F09B  FFE3   	movff	btemp,plusw1
 14287  018F5E  A4D8               	btfss	status,2,c
 14288  018F60  D7A4               	goto	u7290
 14289  018F62                     u7310:
 14290                           
 14291                           ;stkvar	_dividend @ sp[(-1)+-8]
 14292  018F62  0EF7               	movlw	247
 14293  018F64  24E1               	addwf	fsr1l,w,c
 14294  018F66  6ED9               	movwf	fsr2l,c
 14295  018F68  0EFF               	movlw	255
 14296  018F6A  20E2               	addwfc	fsr1h,w,c
 14297  018F6C  6EDA               	movwf	fsr2h,c
 14298                           
 14299                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14300  018F6E  0E08               	movlw	8
 14301  018F70  6E26               	movwf	btemp^0,c
 14302  018F72  0EF7               	movlw	-9
 14303  018F74                     us732999:
 14304  018F74  006F FF7B FFE3     	movff	postinc2,plusw1
 14305  018F7A  28E8               	incf	wreg,w,c
 14306  018F7C  2E26               	decfsz	btemp^0,f,c
 14307  018F7E  D7FA               	bra	us732999
 14308                           
 14309                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14310  018F80  52E5               	movf	postdec1,f,c
 14311  018F82  0012               	return		;funcret
 14312  018F84                     __end_of___lomod:
 14313                           	opt callstack 0
 14314                           
 14315 ;; *************** function ___lodiv *****************
 14316 ;; Defined at:
 14317 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;  dividend        8  [STACK] unsigned long long 
 14320 ;;  divisor         8  [STACK] unsigned long long 
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;  quotient        8  [STACK] unsigned long long 
 14323 ;;  counter         1  [STACK] unsigned char 
 14324 ;; Return value:  Size  Location     Type
 14325 ;;                  8  [STACK] unsigned long long 
 14326 ;; Registers used:
 14327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14328 ;; Tracked objects:
 14329 ;;		On entry : 0/2
 14330 ;;		On exit  : 0/0
 14331 ;;		Unchanged: 0/0
 14332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14337 ;;Total ram usage:        0 bytes
 14338 ;; Hardware stack levels used:    1
 14339 ;; Hardware stack levels required when called:   15
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_utoa
 14344 ;; This function uses a reentrant model
 14345 ;;
 14346                           
 14347                           	psect	text52
 14348  0185D2                     __ptext52:
 14349                           	opt callstack 0
 14350  0185D2                     ___lodiv:
 14351                           	opt callstack 0
 14352                           
 14353                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14354  0185D2  0E09               	movlw	9
 14355  0185D4  26E1               	addwf	fsr1l,f,c
 14356  0185D6  0E00               	movlw	0
 14357  0185D8  22E2               	addwfc	fsr1h,f,c
 14358                           
 14359                           ;stkvar	_quotient @ sp[(-9)+0]
 14360                           
 14361                           ;incstack = 0
 14362 ;; hardware stack exceeded
 14363  0185DA  0E07               	movlw	7
 14364  0185DC  6E26               	movwf	btemp^0,c
 14365  0185DE  0EF7               	movlw	-9
 14366  0185E0                     u7221:
 14367  0185E0  6AE3               	clrf	plusw1,c
 14368  0185E2  2AE8               	incf	wreg,f,c
 14369  0185E4  0626               	decf	btemp^0,f,c
 14370  0185E6  E2FC               	bc	u7221
 14371                           
 14372                           ;stkvar	_divisor @ sp[(-9)+-16]
 14373  0185E8  0EE7               	movlw	-25
 14374  0185EA  50E3               	movf	plusw1,w,c
 14375  0185EC  E116               	bnz	u7230
 14376  0185EE  0EE8               	movlw	-24
 14377  0185F0  50E3               	movf	plusw1,w,c
 14378  0185F2  E113               	bnz	u7230
 14379  0185F4  0EE9               	movlw	-23
 14380  0185F6  50E3               	movf	plusw1,w,c
 14381  0185F8  E110               	bnz	u7230
 14382  0185FA  0EEA               	movlw	-22
 14383  0185FC  50E3               	movf	plusw1,w,c
 14384  0185FE  E10D               	bnz	u7230
 14385  018600  0EEB               	movlw	-21
 14386  018602  50E3               	movf	plusw1,w,c
 14387  018604  E10A               	bnz	u7230
 14388  018606  0EEC               	movlw	-20
 14389  018608  50E3               	movf	plusw1,w,c
 14390  01860A  E107               	bnz	u7230
 14391  01860C  0EED               	movlw	-19
 14392  01860E  50E3               	movf	plusw1,w,c
 14393  018610  E104               	bnz	u7230
 14394  018612  0EEE               	movlw	-18
 14395  018614  50E3               	movf	plusw1,w,c
 14396  018616  B4D8               	btfsc	status,2,c
 14397  018618  D088               	goto	u7260
 14398  01861A                     u7230:
 14399                           
 14400                           ;stkvar	_counter @ sp[(-9)+8]
 14401  01861A  0EFF               	movlw	-1
 14402  01861C  6AE3               	clrf	plusw1,c
 14403  01861E  D012               	goto	L15
 14404  018620                     l8555:
 14405                           
 14406                           ;stkvar	_divisor @ sp[(-9)+-16]
 14407  018620  90D8               	bcf	status,0,c
 14408  018622  0EE7               	movlw	-25
 14409  018624  36E3               	rlcf	plusw1,f,c
 14410  018626  0EE8               	movlw	-24
 14411  018628  36E3               	rlcf	plusw1,f,c
 14412  01862A  0EE9               	movlw	-23
 14413  01862C  36E3               	rlcf	plusw1,f,c
 14414  01862E  0EEA               	movlw	-22
 14415  018630  36E3               	rlcf	plusw1,f,c
 14416  018632  0EEB               	movlw	-21
 14417  018634  36E3               	rlcf	plusw1,f,c
 14418  018636  0EEC               	movlw	-20
 14419  018638  36E3               	rlcf	plusw1,f,c
 14420  01863A  0EED               	movlw	-19
 14421  01863C  36E3               	rlcf	plusw1,f,c
 14422  01863E  0EEE               	movlw	-18
 14423  018640  36E3               	rlcf	plusw1,f,c
 14424                           
 14425                           ;stkvar	_counter @ sp[(-9)+8]
 14426  018642  0EFF               	movlw	-1
 14427  018644                     L15:
 14428  018644  2AE3               	incf	plusw1,f,c
 14429                           
 14430                           ;stkvar	_divisor @ sp[(-9)+-16]
 14431  018646  0EEE               	movlw	-18
 14432  018648  AEE3               	btfss	plusw1,7,c
 14433  01864A  D7EA               	goto	l8555
 14434  01864C                     u7240:
 14435                           
 14436                           ;stkvar	_quotient @ sp[(-9)+0]
 14437  01864C  90D8               	bcf	status,0,c
 14438  01864E  0EF7               	movlw	-9
 14439  018650  36E3               	rlcf	plusw1,f,c
 14440  018652  0EF8               	movlw	-8
 14441  018654  36E3               	rlcf	plusw1,f,c
 14442  018656  0EF9               	movlw	-7
 14443  018658  36E3               	rlcf	plusw1,f,c
 14444  01865A  0EFA               	movlw	-6
 14445  01865C  36E3               	rlcf	plusw1,f,c
 14446  01865E  0EFB               	movlw	-5
 14447  018660  36E3               	rlcf	plusw1,f,c
 14448  018662  0EFC               	movlw	-4
 14449  018664  36E3               	rlcf	plusw1,f,c
 14450  018666  0EFD               	movlw	-3
 14451  018668  36E3               	rlcf	plusw1,f,c
 14452  01866A  0EFE               	movlw	-2
 14453  01866C  36E3               	rlcf	plusw1,f,c
 14454                           
 14455                           ;stkvar	_divisor @ sp[(-9)+-16]
 14456                           ;stkvar	_dividend @ sp[(-9)+-8]
 14457  01866E  50E1               	movf	fsr1l,w,c
 14458  018670  0FEF               	addlw	-17
 14459  018672  6ED9               	movwf	fsr2l,c
 14460  018674  50E2               	movf	fsr1h,w,c
 14461  018676  6EDA               	movwf	fsr2h,c
 14462  018678  0EFF               	movlw	255
 14463  01867A  22DA               	addwfc	fsr2h,f,c
 14464  01867C  0EE7               	movlw	-25
 14465  01867E  50E3               	movf	plusw1,w,c
 14466  018680  5CDE               	subwf	postinc2,w,c
 14467  018682  0EE8               	movlw	-24
 14468  018684  50E3               	movf	plusw1,w,c
 14469  018686  58DE               	subwfb	postinc2,w,c
 14470  018688  0EE9               	movlw	-23
 14471  01868A  50E3               	movf	plusw1,w,c
 14472  01868C  58DE               	subwfb	postinc2,w,c
 14473  01868E  0EEA               	movlw	-22
 14474  018690  50E3               	movf	plusw1,w,c
 14475  018692  58DE               	subwfb	postinc2,w,c
 14476  018694  0EEB               	movlw	-21
 14477  018696  50E3               	movf	plusw1,w,c
 14478  018698  58DE               	subwfb	postinc2,w,c
 14479  01869A  0EEC               	movlw	-20
 14480  01869C  50E3               	movf	plusw1,w,c
 14481  01869E  58DE               	subwfb	postinc2,w,c
 14482  0186A0  0EED               	movlw	-19
 14483  0186A2  50E3               	movf	plusw1,w,c
 14484  0186A4  58DE               	subwfb	postinc2,w,c
 14485  0186A6  0EEE               	movlw	-18
 14486  0186A8  50E3               	movf	plusw1,w,c
 14487  0186AA  58DE               	subwfb	postinc2,w,c
 14488  0186AC  A0D8               	btfss	status,0,c
 14489  0186AE  D021               	goto	l8567
 14490                           
 14491                           ;stkvar	_divisor @ sp[(-9)+-16]
 14492                           ;stkvar	_dividend @ sp[(-9)+-8]
 14493  0186B0  50E1               	movf	fsr1l,w,c
 14494  0186B2  0FEF               	addlw	-17
 14495  0186B4  6ED9               	movwf	fsr2l,c
 14496  0186B6  50E2               	movf	fsr1h,w,c
 14497  0186B8  6EDA               	movwf	fsr2h,c
 14498  0186BA  0EFF               	movlw	255
 14499  0186BC  22DA               	addwfc	fsr2h,f,c
 14500  0186BE  0EE7               	movlw	-25
 14501  0186C0  50E3               	movf	plusw1,w,c
 14502  0186C2  5EDE               	subwf	postinc2,f,c
 14503  0186C4  0EE8               	movlw	-24
 14504  0186C6  50E3               	movf	plusw1,w,c
 14505  0186C8  5ADE               	subwfb	postinc2,f,c
 14506  0186CA  0EE9               	movlw	-23
 14507  0186CC  50E3               	movf	plusw1,w,c
 14508  0186CE  5ADE               	subwfb	postinc2,f,c
 14509  0186D0  0EEA               	movlw	-22
 14510  0186D2  50E3               	movf	plusw1,w,c
 14511  0186D4  5ADE               	subwfb	postinc2,f,c
 14512  0186D6  0EEB               	movlw	-21
 14513  0186D8  50E3               	movf	plusw1,w,c
 14514  0186DA  5ADE               	subwfb	postinc2,f,c
 14515  0186DC  0EEC               	movlw	-20
 14516  0186DE  50E3               	movf	plusw1,w,c
 14517  0186E0  5ADE               	subwfb	postinc2,f,c
 14518  0186E2  0EED               	movlw	-19
 14519  0186E4  50E3               	movf	plusw1,w,c
 14520  0186E6  5ADE               	subwfb	postinc2,f,c
 14521  0186E8  0EEE               	movlw	-18
 14522  0186EA  50E3               	movf	plusw1,w,c
 14523  0186EC  5ADE               	subwfb	postinc2,f,c
 14524                           
 14525                           ;stkvar	_quotient @ sp[(-9)+0]
 14526  0186EE  0EF7               	movlw	-9
 14527  0186F0  80E3               	bsf	plusw1,0,c
 14528  0186F2                     l8567:
 14529                           
 14530                           ;stkvar	_divisor @ sp[(-9)+-16]
 14531  0186F2  90D8               	bcf	status,0,c
 14532  0186F4  0EEE               	movlw	-18
 14533  0186F6  32E3               	rrcf	plusw1,f,c
 14534  0186F8  0EED               	movlw	-19
 14535  0186FA  32E3               	rrcf	plusw1,f,c
 14536  0186FC  0EEC               	movlw	-20
 14537  0186FE  32E3               	rrcf	plusw1,f,c
 14538  018700  0EEB               	movlw	-21
 14539  018702  32E3               	rrcf	plusw1,f,c
 14540  018704  0EEA               	movlw	-22
 14541  018706  32E3               	rrcf	plusw1,f,c
 14542  018708  0EE9               	movlw	-23
 14543  01870A  32E3               	rrcf	plusw1,f,c
 14544  01870C  0EE8               	movlw	-24
 14545  01870E  32E3               	rrcf	plusw1,f,c
 14546  018710  0EE7               	movlw	-25
 14547  018712  32E3               	rrcf	plusw1,f,c
 14548                           
 14549                           ;stkvar	_counter @ sp[(-9)+8]
 14550  018714  0EFF               	movlw	-1
 14551  018716  50E3               	movf	plusw1,w,c
 14552  018718  6E26               	movwf	btemp^0,c
 14553  01871A  0E01               	movlw	1
 14554  01871C  5E26               	subwf	btemp^0,f,c
 14555  01871E  0EFF               	movlw	-1
 14556  018720  0060  F09B  FFE3   	movff	btemp,plusw1
 14557  018726  A4D8               	btfss	status,2,c
 14558  018728  D791               	goto	u7240
 14559  01872A                     u7260:
 14560                           
 14561                           ;stkvar	_quotient @ sp[(-9)+0]
 14562  01872A  0EF7               	movlw	247
 14563  01872C  24E1               	addwf	fsr1l,w,c
 14564  01872E  6ED9               	movwf	fsr2l,c
 14565  018730  0EFF               	movlw	255
 14566  018732  20E2               	addwfc	fsr1h,w,c
 14567  018734  6EDA               	movwf	fsr2h,c
 14568                           
 14569                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14570  018736  0E08               	movlw	8
 14571  018738  6E26               	movwf	btemp^0,c
 14572  01873A  0EEF               	movlw	-17
 14573  01873C                     us727999:
 14574  01873C  006F FF7B FFE3     	movff	postinc2,plusw1
 14575  018742  28E8               	incf	wreg,w,c
 14576  018744  2E26               	decfsz	btemp^0,f,c
 14577  018746  D7FA               	bra	us727999
 14578                           
 14579                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14580  018748  0EF7               	movlw	247
 14581  01874A  26E1               	addwf	fsr1l,f,c
 14582  01874C  0EFF               	movlw	255
 14583  01874E  22E2               	addwfc	fsr1h,f,c
 14584  018750  0012               	return		;funcret
 14585  018752                     __end_of___lodiv:
 14586                           	opt callstack 0
 14587                           
 14588 ;; *************** function _strncmp *****************
 14589 ;; Defined at:
 14590 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;  _l              2  [STACK] PTR const unsigned char 
 14593 ;;		 -> ct(3), STR_65(106), STR_63(3), STR_62(3), 
 14594 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14595 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14596 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14597 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14598 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14599 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14600 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14601 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14602 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14603 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14604 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14605 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14606 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14607 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14608 ;;		 -> STR_2(15), STR_1(17), 
 14609 ;;  _r              2  [STACK] PTR const unsigned char 
 14610 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14611 ;;		 -> STR_80(3), STR_76(3), 
 14612 ;;  n               2  [STACK] unsigned int 
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;  r               2  [STACK] PTR const unsigned char 
 14615 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14616 ;;		 -> STR_80(3), STR_76(3), 
 14617 ;;  l               2  [STACK] PTR const unsigned char 
 14618 ;;		 -> ct(3), STR_65(106), STR_63(3), STR_62(3), 
 14619 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14620 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14621 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14622 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14623 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14624 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14625 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14626 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14627 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14628 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14629 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14630 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14631 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14632 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14633 ;;		 -> STR_2(15), STR_1(17), 
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  2  [STACK] int 
 14636 ;; Registers used:
 14637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;Total ram usage:        0 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; Hardware stack levels required when called:   15
 14650 ;; This function calls:
 14651 ;;		Nothing
 14652 ;; This function is called by:
 14653 ;;		_vfpfcnvrt
 14654 ;; This function uses a reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text53
 14658  017AC4                     __ptext53:
 14659                           	opt callstack 0
 14660  017AC4                     _strncmp:
 14661                           	opt callstack 0
 14662                           
 14663                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14664  017AC4  52E6               	movf	postinc1,f,c
 14665  017AC6  52E6               	movf	postinc1,f,c
 14666  017AC8  52E6               	movf	postinc1,f,c
 14667  017ACA  52E6               	movf	postinc1,f,c
 14668                           
 14669                           ;stkvar	__l @ sp[(-4)+-2]
 14670                           
 14671                           ;incstack = 0
 14672 ;; hardware stack exceeded
 14673  017ACC  0EFA               	movlw	-6
 14674  017ACE  006F FF8C  F030    	movff	plusw1,btemp+10
 14675  017AD4  0EFB               	movlw	-5
 14676  017AD6  006F FF8C  F031    	movff	plusw1,btemp+11
 14677                           
 14678                           ;stkvar	_l @ sp[(-4)+2]
 14679  017ADC  0EFF               	movlw	-1
 14680  017ADE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14681  017AE4  0EFE               	movlw	-2
 14682  017AE6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14683                           
 14684                           ;stkvar	__r @ sp[(-4)+-4]
 14685  017AEC  0EF8               	movlw	-8
 14686  017AEE  006F FF8C  F030    	movff	plusw1,btemp+10
 14687  017AF4  0EF9               	movlw	-7
 14688  017AF6  006F FF8C  F031    	movff	plusw1,btemp+11
 14689                           
 14690                           ;stkvar	_r @ sp[(-4)+0]
 14691  017AFC  0EFD               	movlw	-3
 14692  017AFE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14693  017B04  0EFC               	movlw	-4
 14694  017B06  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14695                           
 14696                           ;stkvar	_n @ sp[(-4)+-6]
 14697  017B0C  0EF6               	movlw	-10
 14698  017B0E  006F FF8C  F026    	movff	plusw1,btemp
 14699  017B14  0E01               	movlw	1
 14700  017B16  5E26               	subwf	btemp^0,f,c
 14701  017B18  0EF6               	movlw	-10
 14702  017B1A  0060  F09B  FFE3   	movff	btemp,plusw1
 14703  017B20  0EF7               	movlw	-9
 14704  017B22  006F FF8C  F026    	movff	plusw1,btemp
 14705  017B28  0E00               	movlw	0
 14706  017B2A  5A26               	subwfb	btemp^0,f,c
 14707  017B2C  0EF7               	movlw	-9
 14708  017B2E  0060  F09B  FFE3   	movff	btemp,plusw1
 14709  017B34  0EF6               	movlw	-10
 14710  017B36  28E3               	incf	plusw1,w,c
 14711  017B38  E13F               	bnz	l9263
 14712  017B3A  0EF7               	movlw	-9
 14713  017B3C  28E3               	incf	plusw1,w,c
 14714  017B3E  A4D8               	btfss	status,2,c
 14715  017B40  D03B               	goto	l9263
 14716  017B42  0E00               	movlw	0
 14717  017B44  6E26               	movwf	btemp^0,c
 14718  017B46  0E00               	movlw	0
 14719  017B48  6E27               	movwf	(btemp+1)^0,c
 14720  017B4A  D0C7               	goto	l3452
 14721  017B4C                     l9261:
 14722                           
 14723                           ;stkvar	_l @ sp[(-4)+2]
 14724  017B4C  0EFE               	movlw	-2
 14725  017B4E  50E3               	movf	plusw1,w,c
 14726  017B50  0F01               	addlw	1
 14727  017B52  6E26               	movwf	btemp^0,c
 14728  017B54  0EFE               	movlw	-2
 14729  017B56  0060  F09B  FFE3   	movff	btemp,plusw1
 14730  017B5C  6A26               	clrf	btemp^0,c
 14731  017B5E  0EFF               	movlw	-1
 14732  017B60  50E3               	movf	plusw1,w,c
 14733  017B62  2026               	addwfc	btemp^0,w,c
 14734  017B64  6E26               	movwf	btemp^0,c
 14735  017B66  0EFF               	movlw	-1
 14736  017B68  0060  F09B  FFE3   	movff	btemp,plusw1
 14737                           
 14738                           ;stkvar	_r @ sp[(-4)+0]
 14739  017B6E  0EFC               	movlw	-4
 14740  017B70  50E3               	movf	plusw1,w,c
 14741  017B72  0F01               	addlw	1
 14742  017B74  6E26               	movwf	btemp^0,c
 14743  017B76  0EFC               	movlw	-4
 14744  017B78  0060  F09B  FFE3   	movff	btemp,plusw1
 14745  017B7E  6A26               	clrf	btemp^0,c
 14746  017B80  0EFD               	movlw	-3
 14747  017B82  50E3               	movf	plusw1,w,c
 14748  017B84  2026               	addwfc	btemp^0,w,c
 14749  017B86  6E26               	movwf	btemp^0,c
 14750  017B88  0EFD               	movlw	-3
 14751  017B8A  0060  F09B  FFE3   	movff	btemp,plusw1
 14752                           
 14753                           ;stkvar	_n @ sp[(-4)+-6]
 14754  017B90  0EF6               	movlw	-10
 14755  017B92  006F FF8C  F026    	movff	plusw1,btemp
 14756  017B98  0E01               	movlw	1
 14757  017B9A  5E26               	subwf	btemp^0,f,c
 14758  017B9C  0EF6               	movlw	-10
 14759  017B9E  0060  F09B  FFE3   	movff	btemp,plusw1
 14760  017BA4  0EF7               	movlw	-9
 14761  017BA6  006F FF8C  F026    	movff	plusw1,btemp
 14762  017BAC  0E00               	movlw	0
 14763  017BAE  5A26               	subwfb	btemp^0,f,c
 14764  017BB0  0EF7               	movlw	-9
 14765  017BB2  0060  F09B  FFE3   	movff	btemp,plusw1
 14766  017BB8                     l9263:
 14767                           
 14768                           ;stkvar	_l @ sp[(-4)+2]
 14769  017BB8  0EFE               	movlw	-2
 14770  017BBA  006F FF8F FFF6     	movff	plusw1,tblptrl
 14771  017BC0  0EFF               	movlw	-1
 14772  017BC2  006F FF8F FFF7     	movff	plusw1,tblptrh
 14773  017BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 14774  017BCA  6EF8               	movwf	tblptru,c
 14775  017BCC  0E1F               	movlw	(high __ramtop+-1)
 14776  017BCE  64F7               	cpfsgt	tblptrh,c
 14777  017BD0  D003               	bra	u8557
 14778  017BD2  0008               	tblrd		*
 14779  017BD4  50F5               	movf	tablat,w,c
 14780  017BD6  D007               	bra	u8550
 14781  017BD8                     u8557:
 14782  017BD8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14783  017BDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14784  017BE4  50EF               	movf	indf0,w,c
 14785  017BE6                     u8550:
 14786  017BE6  0900               	iorlw	0
 14787  017BE8  B4D8               	btfsc	status,2,c
 14788  017BEA  D04A               	goto	u8590
 14789                           
 14790                           ;stkvar	_r @ sp[(-4)+0]
 14791  017BEC  50E1               	movf	fsr1l,w,c
 14792  017BEE  0FFC               	addlw	-4
 14793  017BF0  6ED9               	movwf	fsr2l,c
 14794  017BF2  50E2               	movf	fsr1h,w,c
 14795  017BF4  6EDA               	movwf	fsr2h,c
 14796  017BF6  0EFF               	movlw	255
 14797  017BF8  22DA               	addwfc	fsr2h,f,c
 14798  017BFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 14799  017C00  006F FF77 FFF7     	movff	postdec2,tblptrh
 14800  017C06                     	if	0	;tblptru may be non-zero
 14801  017C06                     	endif
 14802  017C06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14803  017C06  0E00               	movlw	low (__mediumconst shr (0+16))
 14804  017C08  6EF8               	movwf	tblptru,c
 14805  017C0A                     	endif
 14806  017C0A  0008               	tblrd		*
 14807  017C0C  50F5               	movf	tablat,w,c
 14808  017C0E  0900               	iorlw	0
 14809  017C10  B4D8               	btfsc	status,2,c
 14810  017C12  D036               	goto	u8590
 14811                           
 14812                           ;stkvar	_n @ sp[(-4)+-6]
 14813  017C14  0EF6               	movlw	-10
 14814  017C16  006F FF8C  F026    	movff	plusw1,btemp
 14815  017C1C  0EF7               	movlw	-9
 14816  017C1E  50E3               	movf	plusw1,w,c
 14817  017C20  1026               	iorwf	btemp^0,w,c
 14818  017C22  B4D8               	btfsc	status,2,c
 14819  017C24  D02D               	goto	u8590
 14820                           
 14821                           ;stkvar	_r @ sp[(-4)+0]
 14822  017C26  50E1               	movf	fsr1l,w,c
 14823  017C28  0FFC               	addlw	-4
 14824  017C2A  6ED9               	movwf	fsr2l,c
 14825  017C2C  50E2               	movf	fsr1h,w,c
 14826  017C2E  6EDA               	movwf	fsr2h,c
 14827  017C30  0EFF               	movlw	255
 14828  017C32  22DA               	addwfc	fsr2h,f,c
 14829  017C34  006F FF7B FFF6     	movff	postinc2,tblptrl
 14830  017C3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14831  017C40                     	if	0	;tblptru may be non-zero
 14832  017C40                     	endif
 14833  017C40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14834  017C40  0E00               	movlw	low (__mediumconst shr (0+16))
 14835  017C42  6EF8               	movwf	tblptru,c
 14836  017C44                     	endif
 14837  017C44  0008               	tblrd		*
 14838  017C46  006F FFD4  F031    	movff	tablat,btemp+11
 14839                           
 14840                           ;stkvar	_l @ sp[(-4)+2]
 14841  017C4C  0EFE               	movlw	-2
 14842  017C4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 14843  017C54  0EFF               	movlw	-1
 14844  017C56  006F FF8F FFF7     	movff	plusw1,tblptrh
 14845  017C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 14846  017C5E  6EF8               	movwf	tblptru,c
 14847  017C60  0E1F               	movlw	(high __ramtop+-1)
 14848  017C62  64F7               	cpfsgt	tblptrh,c
 14849  017C64  D003               	bra	u8597
 14850  017C66  0008               	tblrd		*
 14851  017C68  50F5               	movf	tablat,w,c
 14852  017C6A  D007               	bra	u8595
 14853  017C6C                     u8597:
 14854  017C6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14855  017C72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14856  017C78  50EF               	movf	indf0,w,c
 14857  017C7A                     u8595:
 14858  017C7A  1831               	xorwf	(btemp+11)^0,w,c
 14859  017C7C  B4D8               	btfsc	status,2,c
 14860  017C7E  D766               	goto	l9261
 14861  017C80                     u8590:
 14862                           
 14863                           ;stkvar	_l @ sp[(-4)+2]
 14864  017C80  0EFE               	movlw	-2
 14865  017C82  006F FF8F FFF6     	movff	plusw1,tblptrl
 14866  017C88  0EFF               	movlw	-1
 14867  017C8A  006F FF8F FFF7     	movff	plusw1,tblptrh
 14868  017C90  0E00               	movlw	low (__mediumconst shr (0+16))
 14869  017C92  6EF8               	movwf	tblptru,c
 14870  017C94  0E1F               	movlw	(high __ramtop+-1)
 14871  017C96  64F7               	cpfsgt	tblptrh,c
 14872  017C98  D003               	bra	u8607
 14873  017C9A  0008               	tblrd		*
 14874  017C9C  50F5               	movf	tablat,w,c
 14875  017C9E  D007               	bra	u8600
 14876  017CA0                     u8607:
 14877  017CA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14878  017CA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14879  017CAC  50EF               	movf	indf0,w,c
 14880  017CAE                     u8600:
 14881  017CAE  6E26               	movwf	btemp^0,c
 14882  017CB0  6A27               	clrf	(btemp+1)^0,c
 14883                           
 14884                           ;stkvar	_r @ sp[(-4)+0]
 14885  017CB2  50E1               	movf	fsr1l,w,c
 14886  017CB4  0FFC               	addlw	-4
 14887  017CB6  6ED9               	movwf	fsr2l,c
 14888  017CB8  50E2               	movf	fsr1h,w,c
 14889  017CBA  6EDA               	movwf	fsr2h,c
 14890  017CBC  0EFF               	movlw	255
 14891  017CBE  22DA               	addwfc	fsr2h,f,c
 14892  017CC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 14893  017CC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 14894  017CCC                     	if	0	;tblptru may be non-zero
 14895  017CCC                     	endif
 14896  017CCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14897  017CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 14898  017CCE  6EF8               	movwf	tblptru,c
 14899  017CD0                     	endif
 14900  017CD0  0008               	tblrd		*
 14901  017CD2  50F5               	movf	tablat,w,c
 14902  017CD4  5E26               	subwf	btemp^0,f,c
 14903  017CD6  0E00               	movlw	0
 14904  017CD8  5A27               	subwfb	(btemp+1)^0,f,c
 14905  017CDA                     l3452:
 14906                           
 14907                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14908  017CDA  0EF6               	movlw	246
 14909  017CDC  26E1               	addwf	fsr1l,f,c
 14910  017CDE  0EFF               	movlw	255
 14911  017CE0  22E2               	addwfc	fsr1h,f,c
 14912  017CE2  0012               	return		;funcret
 14913  017CE4                     __end_of_strncmp:
 14914                           	opt callstack 0
 14915                           
 14916 ;; *************** function _stoa *****************
 14917 ;; Defined at:
 14918 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14921 ;;		 -> f(6), NULL(0), 
 14922 ;;  s               2  [STACK] PTR unsigned char 
 14923 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14924 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 14925 ;;		 -> V(191), 
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;  nuls            7  [STACK] unsigned char [7]
 14928 ;;  l               2  [STACK] int 
 14929 ;;  p               2  [STACK] int 
 14930 ;;  cp              2  [STACK] PTR unsigned char 
 14931 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14932 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14933 ;;		 -> STR_3(7), V(191), 
 14934 ;;  w               2  [STACK] int 
 14935 ;;  i               2  [STACK] int 
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  2  [STACK] int 
 14938 ;; Registers used:
 14939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;Total ram usage:        0 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:   18
 14952 ;; This function calls:
 14953 ;;		_fputc
 14954 ;;		_strlen
 14955 ;; This function is called by:
 14956 ;;		_vfpfcnvrt
 14957 ;; This function uses a reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text54
 14961  0170D2                     __ptext54:
 14962                           	opt callstack 0
 14963  0170D2                     _stoa:
 14964                           	opt callstack 0
 14965                           
 14966                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14967  0170D2  0E11               	movlw	17
 14968  0170D4  26E1               	addwf	fsr1l,f,c
 14969  0170D6  0E00               	movlw	0
 14970  0170D8  22E2               	addwfc	fsr1h,f,c
 14971                           
 14972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14973                           
 14974                           ;incstack = 0
 14975 ;; hardware stack exceeded
 14976  0170DA  EE20  F100         	lfsr	2,stoa@F1166
 14977                           
 14978                           ;stkvar	_nuls @ sp[(-17)+0]
 14979  0170DE  0E07               	movlw	7
 14980  0170E0  6E26               	movwf	btemp^0,c
 14981  0170E2  0EEF               	movlw	-17
 14982  0170E4                     us1147999:
 14983  0170E4  006F FF7B FFE3     	movff	postinc2,plusw1
 14984  0170EA  28E8               	incf	wreg,w,c
 14985  0170EC  2E26               	decfsz	btemp^0,f,c
 14986  0170EE  D7FA               	bra	us1147999
 14987                           
 14988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14989                           ;stkvar	_s @ sp[(-17)+-4]
 14990  0170F0  0EEB               	movlw	-21
 14991  0170F2  006F FF8C  F030    	movff	plusw1,btemp+10
 14992  0170F8  0EEC               	movlw	-20
 14993  0170FA  006F FF8C  F031    	movff	plusw1,btemp+11
 14994                           
 14995                           ;stkvar	_cp @ sp[(-17)+11]
 14996  017100  0EFB               	movlw	-5
 14997  017102  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14998  017108  0EFA               	movlw	-6
 14999  01710A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15000                           
 15001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15002                           ;stkvar	_cp @ sp[(-17)+11]
 15003  017110  0EFA               	movlw	-6
 15004  017112  006F FF8C  F026    	movff	plusw1,btemp
 15005  017118  0EFB               	movlw	-5
 15006  01711A  50E3               	movf	plusw1,w,c
 15007  01711C  1026               	iorwf	btemp^0,w,c
 15008  01711E  A4D8               	btfss	status,2,c
 15009  017120  D00E               	goto	l12063
 15010                           
 15011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15012                           ;stkvar	_nuls @ sp[(-17)+0]
 15013  017122  0EEF               	movlw	239
 15014  017124  24E1               	addwf	fsr1l,w,c
 15015  017126  6E30               	movwf	(btemp+10)^0,c
 15016  017128  0EFF               	movlw	255
 15017  01712A  20E2               	addwfc	fsr1h,w,c
 15018  01712C  6E31               	movwf	(btemp+11)^0,c
 15019                           
 15020                           ;stkvar	_cp @ sp[(-17)+11]
 15021  01712E  0EFB               	movlw	-5
 15022  017130  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15023  017136  0EFA               	movlw	-6
 15024  017138  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15025  01713E                     l12063:
 15026                           
 15027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15028                           ;stkvar	_cp @ sp[(-17)+11]
 15029  01713E  0EFA               	movlw	-6
 15030  017140  006F FF8F FFE6     	movff	plusw1,postinc1
 15031  017146  006F FF8F FFE6     	movff	plusw1,postinc1
 15032  01714C  ECBD  F0D1         	call	_strlen	;wreg free
 15033                           
 15034                           ;stkvar	_l @ sp[(-17)+7]
 15035  017150  0EF6               	movlw	-10
 15036  017152  0060  F09B  FFE3   	movff	btemp,plusw1
 15037  017158  0EF7               	movlw	-9
 15038  01715A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15039                           
 15040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15041                           ;stkvar	_p @ sp[(-17)+9]
 15042  017160  0EF8               	movlw	-8
 15043  017162  0060  F033  FFE3   	movff	_prec,plusw1
 15044  017168  0EF9               	movlw	-7
 15045  01716A  0060  F037  FFE3   	movff	_prec+1,plusw1
 15046                           
 15047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15048                           ;stkvar	_p @ sp[(-17)+9]
 15049  017170  0EF9               	movlw	-7
 15050  017172  BEE3               	btfsc	plusw1,7,c
 15051  017174  D023               	goto	l2277
 15052                           
 15053                           ;stkvar	_l @ sp[(-17)+7]
 15054                           ;stkvar	_p @ sp[(-17)+9]
 15055  017176  50E1               	movf	fsr1l,w,c
 15056  017178  0FF8               	addlw	-8
 15057  01717A  6ED9               	movwf	fsr2l,c
 15058  01717C  50E2               	movf	fsr1h,w,c
 15059  01717E  6EDA               	movwf	fsr2h,c
 15060  017180  0EFF               	movlw	255
 15061  017182  22DA               	addwfc	fsr2h,f,c
 15062  017184  0EF6               	movlw	-10
 15063  017186  50E3               	movf	plusw1,w,c
 15064  017188  5CDE               	subwf	postinc2,w,c
 15065  01718A  50DE               	movf	postinc2,w,c
 15066  01718C  0A80               	xorlw	128
 15067  01718E  6E26               	movwf	btemp^0,c
 15068  017190  0EF7               	movlw	-9
 15069  017192  50E3               	movf	plusw1,w,c
 15070  017194  0A80               	xorlw	128
 15071  017196  5826               	subwfb	btemp^0,w,c
 15072  017198  B0D8               	btfsc	status,0,c
 15073  01719A  D010               	goto	l2277
 15074                           
 15075                           ;stkvar	_p @ sp[(-17)+9]
 15076                           ;stkvar	_l @ sp[(-17)+7]
 15077  01719C  0EF8               	movlw	-8
 15078  01719E  006F FF8C  F026    	movff	plusw1,btemp
 15079  0171A4  0EF6               	movlw	-10
 15080  0171A6  0060  F09B  FFE3   	movff	btemp,plusw1
 15081  0171AC  0EF9               	movlw	-7
 15082  0171AE  006F FF8C  F026    	movff	plusw1,btemp
 15083  0171B4  0EF7               	movlw	-9
 15084  0171B6  0060  F09B  FFE3   	movff	btemp,plusw1
 15085  0171BC                     l2277:
 15086                           
 15087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15088                           ;stkvar	_l @ sp[(-17)+7]
 15089                           ;stkvar	_p @ sp[(-17)+9]
 15090  0171BC  0EF6               	movlw	-10
 15091  0171BE  006F FF8C  F026    	movff	plusw1,btemp
 15092  0171C4  0EF8               	movlw	-8
 15093  0171C6  0060  F09B  FFE3   	movff	btemp,plusw1
 15094  0171CC  0EF7               	movlw	-9
 15095  0171CE  006F FF8C  F026    	movff	plusw1,btemp
 15096  0171D4  0EF9               	movlw	-7
 15097  0171D6  0060  F09B  FFE3   	movff	btemp,plusw1
 15098                           
 15099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15100                           ;stkvar	_w @ sp[(-17)+13]
 15101  0171DC  0EFC               	movlw	-4
 15102  0171DE  0060  F02B  FFE3   	movff	_width,plusw1
 15103  0171E4  0EFD               	movlw	-3
 15104  0171E6  0060  F02F  FFE3   	movff	_width+1,plusw1
 15105                           
 15106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15107  0171EC  A00E               	btfss	_flags^0,0,c
 15108  0171EE  D01F               	goto	l12083
 15109  0171F0  D031               	goto	u11520
 15110  0171F2                     l12079:
 15111                           
 15112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15113                           ;stkvar	_fp @ sp[(-17)+-2]
 15114  0171F2  0EED               	movlw	-19
 15115  0171F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15116  0171FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15117  017200  0E20               	movlw	32
 15118  017202  6EE6               	movwf	postinc1,c
 15119  017204  0E00               	movlw	0
 15120  017206  6EE6               	movwf	postinc1,c
 15121  017208  EC8C  F0C9         	call	_fputc	;wreg free
 15122                           
 15123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15124                           ;stkvar	_l @ sp[(-17)+7]
 15125  01720C  0EF6               	movlw	-10
 15126  01720E  50E3               	movf	plusw1,w,c
 15127  017210  0F01               	addlw	1
 15128  017212  6E26               	movwf	btemp^0,c
 15129  017214  0EF6               	movlw	-10
 15130  017216  0060  F09B  FFE3   	movff	btemp,plusw1
 15131  01721C  6A26               	clrf	btemp^0,c
 15132  01721E  0EF7               	movlw	-9
 15133  017220  50E3               	movf	plusw1,w,c
 15134  017222  2026               	addwfc	btemp^0,w,c
 15135  017224  6E26               	movwf	btemp^0,c
 15136  017226  0EF7               	movlw	-9
 15137  017228  0060  F09B  FFE3   	movff	btemp,plusw1
 15138  01722E                     l12083:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15141                           ;stkvar	_w @ sp[(-17)+13]
 15142                           ;stkvar	_l @ sp[(-17)+7]
 15143  01722E  50E1               	movf	fsr1l,w,c
 15144  017230  0FF6               	addlw	-10
 15145  017232  6ED9               	movwf	fsr2l,c
 15146  017234  50E2               	movf	fsr1h,w,c
 15147  017236  6EDA               	movwf	fsr2h,c
 15148  017238  0EFF               	movlw	255
 15149  01723A  22DA               	addwfc	fsr2h,f,c
 15150  01723C  0EFC               	movlw	-4
 15151  01723E  50E3               	movf	plusw1,w,c
 15152  017240  5CDE               	subwf	postinc2,w,c
 15153  017242  50DE               	movf	postinc2,w,c
 15154  017244  0A80               	xorlw	128
 15155  017246  6E26               	movwf	btemp^0,c
 15156  017248  0EFD               	movlw	-3
 15157  01724A  50E3               	movf	plusw1,w,c
 15158  01724C  0A80               	xorlw	128
 15159  01724E  5826               	subwfb	btemp^0,w,c
 15160  017250  A0D8               	btfss	status,0,c
 15161  017252  D7CF               	goto	l12079
 15162  017254                     u11520:
 15163                           
 15164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15165                           ;stkvar	_i @ sp[(-17)+15]
 15166  017254  0EFE               	movlw	-2
 15167  017256  6AE3               	clrf	plusw1,c
 15168  017258  0EFF               	movlw	-1
 15169  01725A  6AE3               	clrf	plusw1,c
 15170                           
 15171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15172  01725C  D045               	goto	l12093
 15173  01725E                     l12087:
 15174                           
 15175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15176                           ;stkvar	_fp @ sp[(-17)+-2]
 15177  01725E  0EED               	movlw	-19
 15178  017260  006F FF8F FFE6     	movff	plusw1,postinc1
 15179  017266  006F FF8F FFE6     	movff	plusw1,postinc1
 15180                           
 15181                           ;stkvar	_cp @ sp[(-19)+11]
 15182  01726C  0EF8               	movlw	-8
 15183  01726E  006F FF8F FFF6     	movff	plusw1,tblptrl
 15184  017274  0EF9               	movlw	-7
 15185  017276  006F FF8F FFF7     	movff	plusw1,tblptrh
 15186  01727C  0E00               	movlw	low (__mediumconst shr (0+16))
 15187  01727E  6EF8               	movwf	tblptru,c
 15188  017280  0E1F               	movlw	(high __ramtop+-1)
 15189  017282  64F7               	cpfsgt	tblptrh,c
 15190  017284  D003               	bra	u11537
 15191  017286  0008               	tblrd		*
 15192  017288  50F5               	movf	tablat,w,c
 15193  01728A  D007               	bra	u11530
 15194  01728C                     u11537:
 15195  01728C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15196  017292  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15197  017298  50EF               	movf	indf0,w,c
 15198  01729A                     u11530:
 15199  01729A  6EE6               	movwf	postinc1,c
 15200  01729C  0E00               	movlw	0
 15201  01729E  6EE6               	movwf	postinc1,c
 15202  0172A0  EC8C  F0C9         	call	_fputc	;wreg free
 15203                           
 15204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15205                           ;stkvar	_cp @ sp[(-17)+11]
 15206  0172A4  0EFA               	movlw	-6
 15207  0172A6  50E3               	movf	plusw1,w,c
 15208  0172A8  0F01               	addlw	1
 15209  0172AA  6E26               	movwf	btemp^0,c
 15210  0172AC  0EFA               	movlw	-6
 15211  0172AE  0060  F09B  FFE3   	movff	btemp,plusw1
 15212  0172B4  6A26               	clrf	btemp^0,c
 15213  0172B6  0EFB               	movlw	-5
 15214  0172B8  50E3               	movf	plusw1,w,c
 15215  0172BA  2026               	addwfc	btemp^0,w,c
 15216  0172BC  6E26               	movwf	btemp^0,c
 15217  0172BE  0EFB               	movlw	-5
 15218  0172C0  0060  F09B  FFE3   	movff	btemp,plusw1
 15219                           
 15220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15221                           ;stkvar	_i @ sp[(-17)+15]
 15222  0172C6  0EFE               	movlw	-2
 15223  0172C8  50E3               	movf	plusw1,w,c
 15224  0172CA  0F01               	addlw	1
 15225  0172CC  6E26               	movwf	btemp^0,c
 15226  0172CE  0EFE               	movlw	-2
 15227  0172D0  0060  F09B  FFE3   	movff	btemp,plusw1
 15228  0172D6  6A26               	clrf	btemp^0,c
 15229  0172D8  0EFF               	movlw	-1
 15230  0172DA  50E3               	movf	plusw1,w,c
 15231  0172DC  2026               	addwfc	btemp^0,w,c
 15232  0172DE  6E26               	movwf	btemp^0,c
 15233  0172E0  0EFF               	movlw	-1
 15234  0172E2  0060  F09B  FFE3   	movff	btemp,plusw1
 15235  0172E8                     l12093:
 15236                           
 15237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15238                           ;stkvar	_p @ sp[(-17)+9]
 15239                           ;stkvar	_i @ sp[(-17)+15]
 15240  0172E8  50E1               	movf	fsr1l,w,c
 15241  0172EA  0FFE               	addlw	-2
 15242  0172EC  6ED9               	movwf	fsr2l,c
 15243  0172EE  50E2               	movf	fsr1h,w,c
 15244  0172F0  6EDA               	movwf	fsr2h,c
 15245  0172F2  0EFF               	movlw	255
 15246  0172F4  22DA               	addwfc	fsr2h,f,c
 15247  0172F6  0EF8               	movlw	-8
 15248  0172F8  50E3               	movf	plusw1,w,c
 15249  0172FA  5CDE               	subwf	postinc2,w,c
 15250  0172FC  50DE               	movf	postinc2,w,c
 15251  0172FE  0A80               	xorlw	128
 15252  017300  6E26               	movwf	btemp^0,c
 15253  017302  0EF9               	movlw	-7
 15254  017304  50E3               	movf	plusw1,w,c
 15255  017306  0A80               	xorlw	128
 15256  017308  5826               	subwfb	btemp^0,w,c
 15257  01730A  A0D8               	btfss	status,0,c
 15258  01730C  D7A8               	goto	l12087
 15259                           
 15260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15261  01730E  B00E               	btfsc	_flags^0,0,c
 15262  017310  D01F               	goto	l12101
 15263  017312  D031               	goto	u11560
 15264  017314                     l12097:
 15265                           
 15266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15267                           ;stkvar	_fp @ sp[(-17)+-2]
 15268  017314  0EED               	movlw	-19
 15269  017316  006F FF8F FFE6     	movff	plusw1,postinc1
 15270  01731C  006F FF8F FFE6     	movff	plusw1,postinc1
 15271  017322  0E20               	movlw	32
 15272  017324  6EE6               	movwf	postinc1,c
 15273  017326  0E00               	movlw	0
 15274  017328  6EE6               	movwf	postinc1,c
 15275  01732A  EC8C  F0C9         	call	_fputc	;wreg free
 15276                           
 15277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15278                           ;stkvar	_l @ sp[(-17)+7]
 15279  01732E  0EF6               	movlw	-10
 15280  017330  50E3               	movf	plusw1,w,c
 15281  017332  0F01               	addlw	1
 15282  017334  6E26               	movwf	btemp^0,c
 15283  017336  0EF6               	movlw	-10
 15284  017338  0060  F09B  FFE3   	movff	btemp,plusw1
 15285  01733E  6A26               	clrf	btemp^0,c
 15286  017340  0EF7               	movlw	-9
 15287  017342  50E3               	movf	plusw1,w,c
 15288  017344  2026               	addwfc	btemp^0,w,c
 15289  017346  6E26               	movwf	btemp^0,c
 15290  017348  0EF7               	movlw	-9
 15291  01734A  0060  F09B  FFE3   	movff	btemp,plusw1
 15292  017350                     l12101:
 15293                           
 15294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15295                           ;stkvar	_w @ sp[(-17)+13]
 15296                           ;stkvar	_l @ sp[(-17)+7]
 15297  017350  50E1               	movf	fsr1l,w,c
 15298  017352  0FF6               	addlw	-10
 15299  017354  6ED9               	movwf	fsr2l,c
 15300  017356  50E2               	movf	fsr1h,w,c
 15301  017358  6EDA               	movwf	fsr2h,c
 15302  01735A  0EFF               	movlw	255
 15303  01735C  22DA               	addwfc	fsr2h,f,c
 15304  01735E  0EFC               	movlw	-4
 15305  017360  50E3               	movf	plusw1,w,c
 15306  017362  5CDE               	subwf	postinc2,w,c
 15307  017364  50DE               	movf	postinc2,w,c
 15308  017366  0A80               	xorlw	128
 15309  017368  6E26               	movwf	btemp^0,c
 15310  01736A  0EFD               	movlw	-3
 15311  01736C  50E3               	movf	plusw1,w,c
 15312  01736E  0A80               	xorlw	128
 15313  017370  5826               	subwfb	btemp^0,w,c
 15314  017372  A0D8               	btfss	status,0,c
 15315  017374  D7CF               	goto	l12097
 15316  017376                     u11560:
 15317                           
 15318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15319                           ;stkvar	_l @ sp[(-17)+7]
 15320  017376  0EF6               	movlw	-10
 15321  017378  006F FF8C  F026    	movff	plusw1,btemp
 15322  01737E  0EF7               	movlw	-9
 15323  017380  006F FF8C  F027    	movff	plusw1,btemp+1
 15324                           
 15325                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15326  017386  0EEB               	movlw	235
 15327  017388  26E1               	addwf	fsr1l,f,c
 15328  01738A  0EFF               	movlw	255
 15329  01738C  22E2               	addwfc	fsr1h,f,c
 15330  01738E  0012               	return		;funcret
 15331  017390                     __end_of_stoa:
 15332                           	opt callstack 0
 15333                           
 15334 ;; *************** function _efgtoa *****************
 15335 ;; Defined at:
 15336 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15339 ;;		 -> f(6), NULL(0), 
 15340 ;;  f               4  [STACK] PTR struct _IO_FILE
 15341 ;;  c               1  [STACK] unsigned char 
 15342 ;; Auto vars:     Size  Location     Type
 15343 ;;  u               4  [STACK] unsigned char 
 15344 ;;  g               4  [STACK] unsigned char 
 15345 ;;  l               4  [STACK] unsigned char 
 15346 ;;  h               4  [STACK] unsigned char 
 15347 ;;  ou              4  [STACK] unsigned char 
 15348 ;;  n               2  [STACK] int 
 15349 ;;  e               2  [STACK] int 
 15350 ;;  i               2  [STACK] int 
 15351 ;;  w               2  [STACK] int 
 15352 ;;  p               2  [STACK] int 
 15353 ;;  sign            2  [STACK] int 
 15354 ;;  d               2  [STACK] int 
 15355 ;;  ne              2  [STACK] int 
 15356 ;;  m               2  [STACK] int 
 15357 ;;  pp              2  [STACK] int 
 15358 ;;  t               2  [STACK] int 
 15359 ;;  mode            1  [STACK] unsigned char 
 15360 ;;  nmode           1  [STACK] unsigned char 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  2  [STACK] int 
 15363 ;; Registers used:
 15364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15365 ;; Tracked objects:
 15366 ;;		On entry : 0/0
 15367 ;;		On exit  : 0/0
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;Total ram usage:        0 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:   20
 15377 ;; This function calls:
 15378 ;;		___awdiv
 15379 ;;		___awmod
 15380 ;;		___fladd
 15381 ;;		___fldiv
 15382 ;;		___fleq
 15383 ;;		___flge
 15384 ;;		___flmul
 15385 ;;		___flneg
 15386 ;;		___flsub
 15387 ;;		___fltol
 15388 ;;		___fpclassifyf
 15389 ;;		_floorf
 15390 ;;		_isupper
 15391 ;;		_pad
 15392 ;;		_strcpy
 15393 ;;		_tolower
 15394 ;; This function is called by:
 15395 ;;		_vfpfcnvrt
 15396 ;; This function uses a reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text55
 15400  010000                     __ptext55:
 15401                           	opt callstack 0
 15402  010000                     _efgtoa:
 15403                           	opt callstack 0
 15404                           
 15405                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15406  010000  0E38               	movlw	56
 15407  010002  26E1               	addwf	fsr1l,f,c
 15408  010004  0E00               	movlw	0
 15409  010006  22E2               	addwfc	fsr1h,f,c
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15412                           ;stkvar	_sign @ sp[(-56)+42]
 15413                           
 15414                           ;incstack = 0
 15415 ;; hardware stack exceeded
 15416  010008  0EF2               	movlw	-14
 15417  01000A  6AE3               	clrf	plusw1,c
 15418  01000C  0EF3               	movlw	-13
 15419  01000E  6AE3               	clrf	plusw1,c
 15420                           
 15421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15422                           ;stkvar	_f @ sp[(-56)+-6]
 15423  010010  0EC2               	movlw	-62
 15424  010012  006F FF8C  F02E    	movff	plusw1,btemp+8
 15425  010018  0EC3               	movlw	-61
 15426  01001A  006F FF8C  F02F    	movff	plusw1,btemp+9
 15427  010020  0EC4               	movlw	-60
 15428  010022  006F FF8C  F030    	movff	plusw1,btemp+10
 15429  010028  0EC5               	movlw	-59
 15430  01002A  006F FF8C  F031    	movff	plusw1,btemp+11
 15431                           
 15432                           ;stkvar	_g @ sp[(-56)+16]
 15433  010030  0ED8               	movlw	-40
 15434  010032  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15435  010038  0ED9               	movlw	-39
 15436  01003A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15437  010040  0EDA               	movlw	-38
 15438  010042  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15439  010048  0EDB               	movlw	-37
 15440  01004A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15441                           
 15442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15443                           ;stkvar	_g @ sp[(-56)+16]
 15444  010050  0EDB               	movlw	-37
 15445  010052  AEE3               	btfss	plusw1,7,c
 15446  010054  D02B               	goto	l11761
 15447                           
 15448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15449  010056  0E01               	movlw	1
 15450  010058  6E30               	movwf	(btemp+10)^0,c
 15451  01005A  0E00               	movlw	0
 15452  01005C  6E31               	movwf	(btemp+11)^0,c
 15453                           
 15454                           ;stkvar	_sign @ sp[(-56)+42]
 15455  01005E  0EF2               	movlw	-14
 15456  010060  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15457  010066  0EF3               	movlw	-13
 15458  010068  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15459                           
 15460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15461                           ;stkvar	_g @ sp[(-56)+16]
 15462  01006E  0ED8               	movlw	-40
 15463  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15464  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15465  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15466  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15467  010088  EC2E  F0D7         	call	___flneg	;wreg free
 15468                           
 15469                           ;stkvar	_g @ sp[(-56)+16]
 15470  01008C  0ED8               	movlw	-40
 15471  01008E  0060  F09B  FFE3   	movff	btemp,plusw1
 15472  010094  0ED9               	movlw	-39
 15473  010096  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15474  01009C  0EDA               	movlw	-38
 15475  01009E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15476  0100A4  0EDB               	movlw	-37
 15477  0100A6  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15478  0100AC                     l11761:
 15479                           
 15480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15481                           ;stkvar	_n @ sp[(-56)+32]
 15482  0100AC  0EE8               	movlw	-24
 15483  0100AE  6AE3               	clrf	plusw1,c
 15484  0100B0  0EE9               	movlw	-23
 15485  0100B2  6AE3               	clrf	plusw1,c
 15486                           
 15487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15488                           ;stkvar	_w @ sp[(-56)+38]
 15489  0100B4  0EEE               	movlw	-18
 15490  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 15491  0100BC  0EEF               	movlw	-17
 15492  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 15493                           
 15494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15495                           ;stkvar	_sign @ sp[(-56)+42]
 15496  0100C4  0EF2               	movlw	-14
 15497  0100C6  006F FF8C  F026    	movff	plusw1,btemp
 15498  0100CC  0EF3               	movlw	-13
 15499  0100CE  50E3               	movf	plusw1,w,c
 15500  0100D0  1026               	iorwf	btemp^0,w,c
 15501  0100D2  A4D8               	btfss	status,2,c
 15502  0100D4  D002               	goto	u10970
 15503  0100D6  A40E               	btfss	_flags^0,2,c
 15504  0100D8  D036               	goto	l11781
 15505  0100DA                     u10970:
 15506                           
 15507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15508                           ;stkvar	_sign @ sp[(-56)+42]
 15509  0100DA  0EF2               	movlw	-14
 15510  0100DC  006F FF8C  F026    	movff	plusw1,btemp
 15511  0100E2  0EF3               	movlw	-13
 15512  0100E4  50E3               	movf	plusw1,w,c
 15513  0100E6  1026               	iorwf	btemp^0,w,c
 15514  0100E8  A4D8               	btfss	status,2,c
 15515  0100EA  D002               	goto	l11773
 15516  0100EC  0E2B               	movlw	43
 15517  0100EE  D001               	goto	L16
 15518  0100F0                     l11773:
 15519  0100F0  0E2D               	movlw	45
 15520  0100F2                     L16:
 15521  0100F2  6E30               	movwf	(btemp+10)^0,c
 15522  0100F4  0E00               	movlw	0
 15523  0100F6  6E31               	movwf	(btemp+11)^0,c
 15524                           
 15525                           ;stkvar	_efgtoa$5489 @ sp[(-56)+10]
 15526  0100F8  0ED2               	movlw	-46
 15527  0100FA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15528  010100  0ED3               	movlw	-45
 15529  010102  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15530                           
 15531                           ;stkvar	_efgtoa$5489 @ sp[(-56)+10]
 15532  010108  0ED2               	movlw	-46
 15533  01010A  006F FF8C  F2AE    	movff	plusw1,_dbuf
 15534                           
 15535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15536                           ;stkvar	_n @ sp[(-56)+32]
 15537  010110  0EE8               	movlw	-24
 15538  010112  50E3               	movf	plusw1,w,c
 15539  010114  0F01               	addlw	1
 15540  010116  6E26               	movwf	btemp^0,c
 15541  010118  0EE8               	movlw	-24
 15542  01011A  0060  F09B  FFE3   	movff	btemp,plusw1
 15543  010120  6A26               	clrf	btemp^0,c
 15544  010122  0EE9               	movlw	-23
 15545  010124  50E3               	movf	plusw1,w,c
 15546  010126  2026               	addwfc	btemp^0,w,c
 15547  010128  6E26               	movwf	btemp^0,c
 15548  01012A  0EE9               	movlw	-23
 15549  01012C  0060  F09B  FFE3   	movff	btemp,plusw1
 15550                           
 15551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15552                           ;stkvar	_w @ sp[(-56)+38]
 15553  010132  50E1               	movf	fsr1l,w,c
 15554  010134  0FEE               	addlw	-18
 15555  010136  6ED9               	movwf	fsr2l,c
 15556  010138  50E2               	movf	fsr1h,w,c
 15557  01013A  6EDA               	movwf	fsr2h,c
 15558  01013C  0EFF               	movlw	255
 15559  01013E  22DA               	addwfc	fsr2h,f,c
 15560  010140  06DE               	decf	postinc2,f,c
 15561  010142  0E00               	movlw	0
 15562  010144  5ADD               	subwfb	postdec2,f,c
 15563  010146                     l11781:
 15564                           
 15565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15566                           ;stkvar	_g @ sp[(-56)+16]
 15567  010146  0ED8               	movlw	-40
 15568  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15569  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15570  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15571  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15572  010160  EC5B  F0C1         	call	___fpclassifyf	;wreg free
 15573  010164  0426               	decf	btemp^0,w,c
 15574  010166  1027               	iorwf	(btemp+1)^0,w,c
 15575  010168  A4D8               	btfss	status,2,c
 15576  01016A  D076               	goto	l11799
 15577  01016C  0EBF               	movlw	191
 15578  01016E  6E30               	movwf	(btemp+10)^0,c
 15579  010170  0EFF               	movlw	255
 15580  010172  6E31               	movwf	(btemp+11)^0,c
 15581                           
 15582                           ;stkvar	_c @ sp[(-56)+-7]
 15583  010174  0EC1               	movlw	-63
 15584  010176  50E3               	movf	plusw1,w,c
 15585  010178  6E2E               	movwf	(btemp+8)^0,c
 15586  01017A  6A2F               	clrf	(btemp+9)^0,c
 15587  01017C  5030               	movf	(btemp+10)^0,w,c
 15588  01017E  262E               	addwf	(btemp+8)^0,f,c
 15589  010180  5031               	movf	(btemp+11)^0,w,c
 15590  010182  222F               	addwfc	(btemp+9)^0,f,c
 15591  010184  502F               	movf	(btemp+9)^0,w,c
 15592  010186  E106               	bnz	u11000
 15593  010188  0E1A               	movlw	26
 15594  01018A  5C2E               	subwf	(btemp+8)^0,w,c
 15595  01018C  B0D8               	btfsc	status,0,c
 15596  01018E  D002               	goto	u11000
 15597  010190  0E01               	movlw	1
 15598  010192  D001               	goto	u11010
 15599  010194                     u11000:
 15600  010194  0E00               	movlw	0
 15601  010196                     u11010:
 15602  010196  6E30               	movwf	(btemp+10)^0,c
 15603  010198  6A31               	clrf	(btemp+11)^0,c
 15604                           
 15605                           ;stkvar	_efgtoa$5490 @ sp[(-56)+8]
 15606  01019A  0ED0               	movlw	-48
 15607  01019C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15608  0101A2  0ED1               	movlw	-47
 15609  0101A4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15610                           
 15611                           ;stkvar	_efgtoa$5490 @ sp[(-56)+8]
 15612  0101AA  0ED0               	movlw	-48
 15613  0101AC  006F FF8C  F026    	movff	plusw1,btemp
 15614  0101B2  0ED1               	movlw	-47
 15615  0101B4  50E3               	movf	plusw1,w,c
 15616  0101B6  1026               	iorwf	btemp^0,w,c
 15617  0101B8  B4D8               	btfsc	status,2,c
 15618  0101BA  D017               	goto	l11791
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15621  0101BC  0ED6               	movlw	low STR_66
 15622  0101BE  6EE6               	movwf	postinc1,c
 15623  0101C0  0EFF               	movlw	high STR_66
 15624  0101C2  6EE6               	movwf	postinc1,c
 15625                           
 15626                           ;stkvar	_n @ sp[(-58)+32]
 15627  0101C4  0EAE               	movlw	low _dbuf
 15628  0101C6  6E30               	movwf	(btemp+10)^0,c
 15629  0101C8  0E02               	movlw	high _dbuf
 15630  0101CA  6E31               	movwf	(btemp+11)^0,c
 15631  0101CC  0EE6               	movlw	-26
 15632  0101CE  50E3               	movf	plusw1,w,c
 15633  0101D0  2630               	addwf	(btemp+10)^0,f,c
 15634  0101D2  0EE7               	movlw	-25
 15635  0101D4  50E3               	movf	plusw1,w,c
 15636  0101D6  2231               	addwfc	(btemp+11)^0,f,c
 15637  0101D8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15638  0101DE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15639  0101E4  EC89  F0CE         	call	_strcpy	;wreg free
 15640                           
 15641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15642  0101E8  D016               	goto	l11793
 15643  0101EA                     l11791:
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15646  0101EA  0EDE               	movlw	low STR_67
 15647  0101EC  6EE6               	movwf	postinc1,c
 15648  0101EE  0EFF               	movlw	high STR_67
 15649  0101F0  6EE6               	movwf	postinc1,c
 15650                           
 15651                           ;stkvar	_n @ sp[(-58)+32]
 15652  0101F2  0EAE               	movlw	low _dbuf
 15653  0101F4  6E30               	movwf	(btemp+10)^0,c
 15654  0101F6  0E02               	movlw	high _dbuf
 15655  0101F8  6E31               	movwf	(btemp+11)^0,c
 15656  0101FA  0EE6               	movlw	-26
 15657  0101FC  50E3               	movf	plusw1,w,c
 15658  0101FE  2630               	addwf	(btemp+10)^0,f,c
 15659  010200  0EE7               	movlw	-25
 15660  010202  50E3               	movf	plusw1,w,c
 15661  010204  2231               	addwfc	(btemp+11)^0,f,c
 15662  010206  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15663  01020C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15664  010212  EC89  F0CE         	call	_strcpy	;wreg free
 15665  010216                     l11793:
 15666                           
 15667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15668                           ;stkvar	_w @ sp[(-56)+38]
 15669  010216  50E1               	movf	fsr1l,w,c
 15670  010218  0FEE               	addlw	-18
 15671  01021A  6ED9               	movwf	fsr2l,c
 15672  01021C  50E2               	movf	fsr1h,w,c
 15673  01021E  6EDA               	movwf	fsr2h,c
 15674  010220  0EFF               	movlw	255
 15675  010222  22DA               	addwfc	fsr2h,f,c
 15676  010224  0EFD               	movlw	253
 15677  010226  26DE               	addwf	postinc2,f,c
 15678  010228  0EFF               	movlw	255
 15679  01022A  22DD               	addwfc	postdec2,f,c
 15680  01022C                     l11795:
 15681                           
 15682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15683                           ;stkvar	_w @ sp[(-56)+38]
 15684  01022C  0EEE               	movlw	-18
 15685  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15686  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15687  01023A  0EAE               	movlw	low _dbuf
 15688  01023C  6EE6               	movwf	postinc1,c
 15689  01023E  0E02               	movlw	high _dbuf
 15690  010240  6EE6               	movwf	postinc1,c
 15691                           
 15692                           ;stkvar	_fp @ sp[(-60)+-2]
 15693  010242  0EC2               	movlw	-62
 15694  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15695  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15696  010250  ECAA  F0CA         	call	_pad	;wreg free
 15697  010254  EF1D  F089         	goto	l2195
 15698  010258                     l11799:
 15699                           
 15700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15701                           ;stkvar	_g @ sp[(-56)+16]
 15702  010258  0ED8               	movlw	-40
 15703  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15704  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15705  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15706  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15707  010272  EC5B  F0C1         	call	___fpclassifyf	;wreg free
 15708  010276  5026               	movf	btemp^0,w,c
 15709  010278  1027               	iorwf	(btemp+1)^0,w,c
 15710  01027A  A4D8               	btfss	status,2,c
 15711  01027C  D056               	goto	l11817
 15712  01027E  0EBF               	movlw	191
 15713  010280  6E30               	movwf	(btemp+10)^0,c
 15714  010282  0EFF               	movlw	255
 15715  010284  6E31               	movwf	(btemp+11)^0,c
 15716                           
 15717                           ;stkvar	_c @ sp[(-56)+-7]
 15718  010286  0EC1               	movlw	-63
 15719  010288  50E3               	movf	plusw1,w,c
 15720  01028A  6E2E               	movwf	(btemp+8)^0,c
 15721  01028C  6A2F               	clrf	(btemp+9)^0,c
 15722  01028E  5030               	movf	(btemp+10)^0,w,c
 15723  010290  262E               	addwf	(btemp+8)^0,f,c
 15724  010292  5031               	movf	(btemp+11)^0,w,c
 15725  010294  222F               	addwfc	(btemp+9)^0,f,c
 15726  010296  502F               	movf	(btemp+9)^0,w,c
 15727  010298  E106               	bnz	u11040
 15728  01029A  0E1A               	movlw	26
 15729  01029C  5C2E               	subwf	(btemp+8)^0,w,c
 15730  01029E  B0D8               	btfsc	status,0,c
 15731  0102A0  D002               	goto	u11040
 15732  0102A2  0E01               	movlw	1
 15733  0102A4  D001               	goto	u11050
 15734  0102A6                     u11040:
 15735  0102A6  0E00               	movlw	0
 15736  0102A8                     u11050:
 15737  0102A8  6E30               	movwf	(btemp+10)^0,c
 15738  0102AA  6A31               	clrf	(btemp+11)^0,c
 15739                           
 15740                           ;stkvar	_efgtoa$5494 @ sp[(-56)+6]
 15741  0102AC  0ECE               	movlw	-50
 15742  0102AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15743  0102B4  0ECF               	movlw	-49
 15744  0102B6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15745                           
 15746                           ;stkvar	_efgtoa$5494 @ sp[(-56)+6]
 15747  0102BC  0ECE               	movlw	-50
 15748  0102BE  006F FF8C  F026    	movff	plusw1,btemp
 15749  0102C4  0ECF               	movlw	-49
 15750  0102C6  50E3               	movf	plusw1,w,c
 15751  0102C8  1026               	iorwf	btemp^0,w,c
 15752  0102CA  B4D8               	btfsc	status,2,c
 15753  0102CC  D017               	goto	l11809
 15754                           
 15755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15756  0102CE  0EDA               	movlw	low STR_70
 15757  0102D0  6EE6               	movwf	postinc1,c
 15758  0102D2  0EFF               	movlw	high STR_70
 15759  0102D4  6EE6               	movwf	postinc1,c
 15760                           
 15761                           ;stkvar	_n @ sp[(-58)+32]
 15762  0102D6  0EAE               	movlw	low _dbuf
 15763  0102D8  6E30               	movwf	(btemp+10)^0,c
 15764  0102DA  0E02               	movlw	high _dbuf
 15765  0102DC  6E31               	movwf	(btemp+11)^0,c
 15766  0102DE  0EE6               	movlw	-26
 15767  0102E0  50E3               	movf	plusw1,w,c
 15768  0102E2  2630               	addwf	(btemp+10)^0,f,c
 15769  0102E4  0EE7               	movlw	-25
 15770  0102E6  50E3               	movf	plusw1,w,c
 15771  0102E8  2231               	addwfc	(btemp+11)^0,f,c
 15772  0102EA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15773  0102F0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15774  0102F6  EC89  F0CE         	call	_strcpy	;wreg free
 15775                           
 15776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15777  0102FA  D78D               	goto	l11793
 15778  0102FC                     l11809:
 15779                           
 15780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15781  0102FC  0EE2               	movlw	low STR_71
 15782  0102FE  6EE6               	movwf	postinc1,c
 15783  010300  0EFF               	movlw	high STR_71
 15784  010302  6EE6               	movwf	postinc1,c
 15785                           
 15786                           ;stkvar	_n @ sp[(-58)+32]
 15787  010304  0EAE               	movlw	low _dbuf
 15788  010306  6E30               	movwf	(btemp+10)^0,c
 15789  010308  0E02               	movlw	high _dbuf
 15790  01030A  6E31               	movwf	(btemp+11)^0,c
 15791  01030C  0EE6               	movlw	-26
 15792  01030E  50E3               	movf	plusw1,w,c
 15793  010310  2630               	addwf	(btemp+10)^0,f,c
 15794  010312  0EE7               	movlw	-25
 15795  010314  50E3               	movf	plusw1,w,c
 15796  010316  2231               	addwfc	(btemp+11)^0,f,c
 15797  010318  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15798  01031E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15799  010324  EC89  F0CE         	call	_strcpy	;wreg free
 15800  010328  D776               	goto	l11793
 15801  01032A                     l11817:
 15802                           
 15803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15804  01032A  0E00               	movlw	0
 15805  01032C  6E2E               	movwf	(btemp+8)^0,c
 15806  01032E  0E00               	movlw	0
 15807  010330  6E2F               	movwf	(btemp+9)^0,c
 15808  010332  0E80               	movlw	128
 15809  010334  6E30               	movwf	(btemp+10)^0,c
 15810  010336  0E3F               	movlw	63
 15811  010338  6E31               	movwf	(btemp+11)^0,c
 15812                           
 15813                           ;stkvar	_u @ sp[(-56)+12]
 15814  01033A  0ED4               	movlw	-44
 15815  01033C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15816  010342  0ED5               	movlw	-43
 15817  010344  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15818  01034A  0ED6               	movlw	-42
 15819  01034C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15820  010352  0ED7               	movlw	-41
 15821  010354  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15822                           
 15823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15824                           ;stkvar	_e @ sp[(-56)+34]
 15825  01035A  0EEA               	movlw	-22
 15826  01035C  6AE3               	clrf	plusw1,c
 15827  01035E  0EEB               	movlw	-21
 15828  010360  6AE3               	clrf	plusw1,c
 15829                           
 15830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15831  010362  0E00               	movlw	0
 15832  010364  6EE6               	movwf	postinc1,c
 15833  010366  0E00               	movlw	0
 15834  010368  6EE6               	movwf	postinc1,c
 15835  01036A  0E00               	movlw	0
 15836  01036C  6EE6               	movwf	postinc1,c
 15837  01036E  0E00               	movlw	0
 15838  010370  6EE6               	movwf	postinc1,c
 15839                           
 15840                           ;stkvar	_g @ sp[(-60)+16]
 15841  010372  0ED4               	movlw	-44
 15842  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15843  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15844  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15845  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  01038C  EC56  F0CF         	call	___fleq	;wreg free
 15847  010390  A026               	btfss	btemp& (0+255),0,c
 15848  010392  D039               	goto	l11829
 15849  010394  D0BC               	goto	u11090
 15850  010396                     l11825:
 15851                           
 15852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15853  010396  0E00               	movlw	0
 15854  010398  6EE6               	movwf	postinc1,c
 15855  01039A  0E00               	movlw	0
 15856  01039C  6EE6               	movwf	postinc1,c
 15857  01039E  0E20               	movlw	32
 15858  0103A0  6EE6               	movwf	postinc1,c
 15859  0103A2  0E41               	movlw	65
 15860  0103A4  6EE6               	movwf	postinc1,c
 15861                           
 15862                           ;stkvar	_u @ sp[(-60)+12]
 15863  0103A6  0ED0               	movlw	-48
 15864  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15865  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15866  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15867  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15868  0103C0  ECA0  F099         	call	___flmul	;wreg free
 15869                           
 15870                           ;stkvar	_u @ sp[(-56)+12]
 15871  0103C4  0ED4               	movlw	-44
 15872  0103C6  0060  F09B  FFE3   	movff	btemp,plusw1
 15873  0103CC  0ED5               	movlw	-43
 15874  0103CE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15875  0103D4  0ED6               	movlw	-42
 15876  0103D6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15877  0103DC  0ED7               	movlw	-41
 15878  0103DE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15879                           
 15880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15881                           ;stkvar	_e @ sp[(-56)+34]
 15882  0103E4  0EEA               	movlw	-22
 15883  0103E6  50E3               	movf	plusw1,w,c
 15884  0103E8  0F01               	addlw	1
 15885  0103EA  6E26               	movwf	btemp^0,c
 15886  0103EC  0EEA               	movlw	-22
 15887  0103EE  0060  F09B  FFE3   	movff	btemp,plusw1
 15888  0103F4  6A26               	clrf	btemp^0,c
 15889  0103F6  0EEB               	movlw	-21
 15890  0103F8  50E3               	movf	plusw1,w,c
 15891  0103FA  2026               	addwfc	btemp^0,w,c
 15892  0103FC  6E26               	movwf	btemp^0,c
 15893  0103FE  0EEB               	movlw	-21
 15894  010400  0060  F09B  FFE3   	movff	btemp,plusw1
 15895  010406                     l11829:
 15896                           
 15897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15898  010406  0E00               	movlw	0
 15899  010408  6EE6               	movwf	postinc1,c
 15900  01040A  0E00               	movlw	0
 15901  01040C  6EE6               	movwf	postinc1,c
 15902  01040E  0E20               	movlw	32
 15903  010410  6EE6               	movwf	postinc1,c
 15904  010412  0E41               	movlw	65
 15905  010414  6EE6               	movwf	postinc1,c
 15906                           
 15907                           ;stkvar	_u @ sp[(-60)+12]
 15908  010416  0ED0               	movlw	-48
 15909  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15910  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15911  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15912  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15913  010430  ECA0  F099         	call	___flmul	;wreg free
 15914  010434  0060  F09B  FFE6   	movff	btemp,postinc1
 15915  01043A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 15916  010440  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 15917  010446  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 15918                           
 15919                           ;stkvar	_g @ sp[(-60)+16]
 15920  01044C  0ED4               	movlw	-44
 15921  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15922  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15923  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15924  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15925  010466  EC1B  F0C5         	call	___flge	;wreg free
 15926  01046A  A026               	btfss	btemp& (0+255),0,c
 15927  01046C  D032               	goto	l11835
 15928  01046E  D793               	goto	l11825
 15929  010470                     l11831:
 15930                           
 15931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15932  010470  0E00               	movlw	0
 15933  010472  6EE6               	movwf	postinc1,c
 15934  010474  0E00               	movlw	0
 15935  010476  6EE6               	movwf	postinc1,c
 15936  010478  0E20               	movlw	32
 15937  01047A  6EE6               	movwf	postinc1,c
 15938  01047C  0E41               	movlw	65
 15939  01047E  6EE6               	movwf	postinc1,c
 15940                           
 15941                           ;stkvar	_u @ sp[(-60)+12]
 15942  010480  0ED0               	movlw	-48
 15943  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15944  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15945  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15946  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15947  01049A  EC4B  F0A5         	call	___fldiv	;wreg free
 15948                           
 15949                           ;stkvar	_u @ sp[(-56)+12]
 15950  01049E  0ED4               	movlw	-44
 15951  0104A0  0060  F09B  FFE3   	movff	btemp,plusw1
 15952  0104A6  0ED5               	movlw	-43
 15953  0104A8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15954  0104AE  0ED6               	movlw	-42
 15955  0104B0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15956  0104B6  0ED7               	movlw	-41
 15957  0104B8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15958                           
 15959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15960                           ;stkvar	_e @ sp[(-56)+34]
 15961  0104BE  50E1               	movf	fsr1l,w,c
 15962  0104C0  0FEA               	addlw	-22
 15963  0104C2  6ED9               	movwf	fsr2l,c
 15964  0104C4  50E2               	movf	fsr1h,w,c
 15965  0104C6  6EDA               	movwf	fsr2h,c
 15966  0104C8  0EFF               	movlw	255
 15967  0104CA  22DA               	addwfc	fsr2h,f,c
 15968  0104CC  06DE               	decf	postinc2,f,c
 15969  0104CE  0E00               	movlw	0
 15970  0104D0  5ADD               	subwfb	postdec2,f,c
 15971  0104D2                     l11835:
 15972                           
 15973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15974                           ;stkvar	_u @ sp[(-56)+12]
 15975  0104D2  0ED4               	movlw	-44
 15976  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15977  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15978  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15979  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15980                           
 15981                           ;stkvar	_g @ sp[(-60)+16]
 15982  0104EC  0ED4               	movlw	-44
 15983  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15984  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15985  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15986  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15987  010506  EC1B  F0C5         	call	___flge	;wreg free
 15988  01050A  A026               	btfss	btemp& (0+255),0,c
 15989  01050C  D7B1               	goto	l11831
 15990  01050E                     u11090:
 15991                           
 15992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15993                           ;stkvar	_c @ sp[(-56)+-7]
 15994  01050E  0EC1               	movlw	-63
 15995  010510  50E3               	movf	plusw1,w,c
 15996  010512  6EE6               	movwf	postinc1,c
 15997  010514  0E00               	movlw	0
 15998  010516  6EE6               	movwf	postinc1,c
 15999  010518  ECBB  F0D3         	call	_tolower	;wreg free
 16000                           
 16001                           ;stkvar	_mode @ sp[(-56)+54]
 16002  01051C  0EFE               	movlw	-2
 16003  01051E  0060  F09B  FFE3   	movff	btemp,plusw1
 16004                           
 16005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16006                           ;stkvar	_mode @ sp[(-56)+54]
 16007                           ;stkvar	_nmode @ sp[(-56)+55]
 16008  010524  0EFE               	movlw	-2
 16009  010526  006F FF8C  F026    	movff	plusw1,btemp
 16010  01052C  0EFF               	movlw	-1
 16011  01052E  0060  F09B  FFE3   	movff	btemp,plusw1
 16012                           
 16013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16014                           ;stkvar	_mode @ sp[(-56)+54]
 16015  010534  0EFE               	movlw	-2
 16016  010536  006F FF8C  F026    	movff	plusw1,btemp
 16017  01053C  0E67               	movlw	103
 16018  01053E  1826               	xorwf	btemp^0,w,c
 16019  010540  A4D8               	btfss	status,2,c
 16020  010542  D025               	goto	l11853
 16021                           
 16022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16023  010544  500C               	movf	_prec^0,w,c
 16024  010546  100D               	iorwf	(_prec+1)^0,w,c
 16025  010548  A4D8               	btfss	status,2,c
 16026  01054A  D004               	goto	l11847
 16027                           
 16028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16029  01054C  0E00               	movlw	0
 16030  01054E  6E0D               	movwf	(_prec+1)^0,c
 16031  010550  0E01               	movlw	1
 16032  010552  6E0C               	movwf	_prec^0,c
 16033  010554                     l11847:
 16034                           
 16035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16036  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 16037  010556  D005               	goto	u11120
 16038  010558  500D               	movf	(_prec+1)^0,w,c
 16039  01055A  E110               	bnz	l11851
 16040  01055C  040C               	decf	_prec^0,w,c
 16041  01055E  B0D8               	btfsc	status,0,c
 16042  010560  D00D               	goto	l11851
 16043  010562                     u11120:
 16044  010562  0E06               	movlw	6
 16045  010564  6E30               	movwf	(btemp+10)^0,c
 16046  010566  0E00               	movlw	0
 16047  010568  6E31               	movwf	(btemp+11)^0,c
 16048                           
 16049                           ;stkvar	_p @ sp[(-56)+40]
 16050  01056A  0EF0               	movlw	-16
 16051  01056C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16052  010572  0EF1               	movlw	-15
 16053  010574  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16054  01057A  D00C               	goto	l11859
 16055  01057C                     l11851:
 16056                           
 16057                           ;stkvar	_p @ sp[(-56)+40]
 16058  01057C  0EF0               	movlw	-16
 16059  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 16060  010584  0EF1               	movlw	-15
 16061  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 16062  01058C  D003               	goto	l11859
 16063  01058E                     l11853:
 16064                           
 16065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16066  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 16067  010590  D7F5               	goto	l11851
 16068  010592  D7E7               	goto	u11120
 16069  010594                     l11859:
 16070                           
 16071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16072                           ;stkvar	_mode @ sp[(-56)+54]
 16073  010594  0EFE               	movlw	-2
 16074  010596  006F FF8C  F026    	movff	plusw1,btemp
 16075  01059C  0E67               	movlw	103
 16076  01059E  1826               	xorwf	btemp^0,w,c
 16077  0105A0  A4D8               	btfss	status,2,c
 16078  0105A2  D02F               	goto	l11869
 16079                           
 16080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16081                           ;stkvar	_e @ sp[(-56)+34]
 16082  0105A4  0EEB               	movlw	-21
 16083  0105A6  AEE3               	btfss	plusw1,7,c
 16084  0105A8  D00E               	goto	u11150
 16085  0105AA  0EEA               	movlw	-22
 16086  0105AC  006F FF8C  F026    	movff	plusw1,btemp
 16087  0105B2  0EFC               	movlw	252
 16088  0105B4  5E26               	subwf	btemp^0,f,c
 16089  0105B6  0EEB               	movlw	-21
 16090  0105B8  006F FF8C  F026    	movff	plusw1,btemp
 16091  0105BE  0EFF               	movlw	255
 16092  0105C0  5A26               	subwfb	btemp^0,f,c
 16093  0105C2  A0D8               	btfss	status,0,c
 16094  0105C4  D018               	goto	l11867
 16095  0105C6                     u11150:
 16096                           
 16097                           ;stkvar	_e @ sp[(-56)+34]
 16098                           ;stkvar	_p @ sp[(-56)+40]
 16099  0105C6  0EF0               	movlw	-16
 16100  0105C8  50E3               	movf	plusw1,w,c
 16101  0105CA  0FFF               	addlw	255
 16102  0105CC  6E30               	movwf	(btemp+10)^0,c
 16103  0105CE  0EF1               	movlw	-15
 16104  0105D0  006F FF8C  F031    	movff	plusw1,btemp+11
 16105  0105D6  0EFF               	movlw	255
 16106  0105D8  2231               	addwfc	(btemp+11)^0,f,c
 16107  0105DA  0EEA               	movlw	-22
 16108  0105DC  50E3               	movf	plusw1,w,c
 16109  0105DE  5C30               	subwf	(btemp+10)^0,w,c
 16110  0105E0  5031               	movf	(btemp+11)^0,w,c
 16111  0105E2  0A80               	xorlw	128
 16112  0105E4  6E26               	movwf	btemp^0,c
 16113  0105E6  0EEB               	movlw	-21
 16114  0105E8  50E3               	movf	plusw1,w,c
 16115  0105EA  0A80               	xorlw	128
 16116  0105EC  5826               	subwfb	btemp^0,w,c
 16117  0105EE  A0D8               	btfss	status,0,c
 16118  0105F0  D002               	goto	l11867
 16119                           
 16120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16121  0105F2  0E66               	movlw	102
 16122  0105F4  D001               	goto	L17
 16123  0105F6                     l11867:
 16124                           
 16125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16126  0105F6  0E65               	movlw	101
 16127  0105F8                     L17:
 16128  0105F8  6E31               	movwf	(btemp+11)^0,c
 16129                           
 16130                           ;stkvar	_nmode @ sp[(-56)+55]
 16131  0105FA  0EFF               	movlw	-1
 16132  0105FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16133  010602                     l11869:
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16136                           ;stkvar	_p @ sp[(-56)+40]
 16137                           ;stkvar	_m @ sp[(-56)+48]
 16138  010602  0EF0               	movlw	-16
 16139  010604  006F FF8C  F026    	movff	plusw1,btemp
 16140  01060A  0EF8               	movlw	-8
 16141  01060C  0060  F09B  FFE3   	movff	btemp,plusw1
 16142  010612  0EF1               	movlw	-15
 16143  010614  006F FF8C  F026    	movff	plusw1,btemp
 16144  01061A  0EF9               	movlw	-7
 16145  01061C  0060  F09B  FFE3   	movff	btemp,plusw1
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16148                           ;stkvar	_mode @ sp[(-56)+54]
 16149  010622  0EFE               	movlw	-2
 16150  010624  006F FF8C  F026    	movff	plusw1,btemp
 16151  01062A  0E67               	movlw	103
 16152  01062C  1826               	xorwf	btemp^0,w,c
 16153  01062E  A4D8               	btfss	status,2,c
 16154  010630  D00B               	goto	u11190
 16155                           
 16156                           ;stkvar	_nmode @ sp[(-56)+55]
 16157  010632  0EFF               	movlw	-1
 16158  010634  006F FF8C  F026    	movff	plusw1,btemp
 16159  01063A  0E66               	movlw	102
 16160  01063C  1826               	xorwf	btemp^0,w,c
 16161  01063E  A4D8               	btfss	status,2,c
 16162  010640  D014               	goto	l2224
 16163                           
 16164                           ;stkvar	_e @ sp[(-56)+34]
 16165  010642  0EEB               	movlw	-21
 16166  010644  AEE3               	btfss	plusw1,7,c
 16167  010646  D011               	goto	l2224
 16168  010648                     u11190:
 16169                           
 16170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16171                           ;stkvar	_m @ sp[(-56)+48]
 16172  010648  0EF8               	movlw	-8
 16173  01064A  50E3               	movf	plusw1,w,c
 16174  01064C  0F01               	addlw	1
 16175  01064E  6E26               	movwf	btemp^0,c
 16176  010650  0EF8               	movlw	-8
 16177  010652  0060  F09B  FFE3   	movff	btemp,plusw1
 16178  010658  6A26               	clrf	btemp^0,c
 16179  01065A  0EF9               	movlw	-7
 16180  01065C  50E3               	movf	plusw1,w,c
 16181  01065E  2026               	addwfc	btemp^0,w,c
 16182  010660  6E26               	movwf	btemp^0,c
 16183  010662  0EF9               	movlw	-7
 16184  010664  0060  F09B  FFE3   	movff	btemp,plusw1
 16185  01066A                     l2224:
 16186                           
 16187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16188                           ;stkvar	_nmode @ sp[(-56)+55]
 16189  01066A  0EFF               	movlw	-1
 16190  01066C  006F FF8C  F026    	movff	plusw1,btemp
 16191  010672  0E66               	movlw	102
 16192  010674  1826               	xorwf	btemp^0,w,c
 16193  010676  A4D8               	btfss	status,2,c
 16194  010678  D03B               	goto	l11889
 16195                           
 16196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16197                           ;stkvar	_e @ sp[(-56)+34]
 16198  01067A  0EEB               	movlw	-21
 16199  01067C  AEE3               	btfss	plusw1,7,c
 16200  01067E  D01C               	goto	l11885
 16201                           
 16202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16203  010680  0E00               	movlw	0
 16204  010682  6E2E               	movwf	(btemp+8)^0,c
 16205  010684  0E00               	movlw	0
 16206  010686  6E2F               	movwf	(btemp+9)^0,c
 16207  010688  0E80               	movlw	128
 16208  01068A  6E30               	movwf	(btemp+10)^0,c
 16209  01068C  0E3F               	movlw	63
 16210  01068E  6E31               	movwf	(btemp+11)^0,c
 16211                           
 16212                           ;stkvar	_u @ sp[(-56)+12]
 16213  010690  0ED4               	movlw	-44
 16214  010692  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16215  010698  0ED5               	movlw	-43
 16216  01069A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16217  0106A0  0ED6               	movlw	-42
 16218  0106A2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16219  0106A8  0ED7               	movlw	-41
 16220  0106AA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16221                           
 16222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16223                           ;stkvar	_e @ sp[(-56)+34]
 16224  0106B0  0EEA               	movlw	-22
 16225  0106B2  6AE3               	clrf	plusw1,c
 16226  0106B4  0EEB               	movlw	-21
 16227  0106B6  6AE3               	clrf	plusw1,c
 16228  0106B8                     l11885:
 16229                           
 16230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16231                           ;stkvar	_mode @ sp[(-56)+54]
 16232  0106B8  0EFE               	movlw	-2
 16233  0106BA  006F FF8C  F026    	movff	plusw1,btemp
 16234  0106C0  0E67               	movlw	103
 16235  0106C2  1826               	xorwf	btemp^0,w,c
 16236  0106C4  B4D8               	btfsc	status,2,c
 16237  0106C6  D014               	goto	l11889
 16238                           
 16239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16240                           ;stkvar	_e @ sp[(-56)+34]
 16241                           ;stkvar	_m @ sp[(-56)+48]
 16242  0106C8  0EF8               	movlw	-8
 16243  0106CA  50E3               	movf	plusw1,w,c
 16244  0106CC  6E26               	movwf	btemp^0,c
 16245  0106CE  0EEA               	movlw	-22
 16246  0106D0  50E3               	movf	plusw1,w,c
 16247  0106D2  2626               	addwf	btemp^0,f,c
 16248  0106D4  0EF8               	movlw	-8
 16249  0106D6  0060  F09B  FFE3   	movff	btemp,plusw1
 16250  0106DC  0EF9               	movlw	-7
 16251  0106DE  50E3               	movf	plusw1,w,c
 16252  0106E0  6E26               	movwf	btemp^0,c
 16253  0106E2  0EEB               	movlw	-21
 16254  0106E4  50E3               	movf	plusw1,w,c
 16255  0106E6  2226               	addwfc	btemp^0,f,c
 16256  0106E8  0EF9               	movlw	-7
 16257  0106EA  0060  F09B  FFE3   	movff	btemp,plusw1
 16258  0106F0                     l11889:
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16261                           ;stkvar	_i @ sp[(-56)+36]
 16262  0106F0  0EEC               	movlw	-20
 16263  0106F2  6AE3               	clrf	plusw1,c
 16264  0106F4  0EED               	movlw	-19
 16265  0106F6  6AE3               	clrf	plusw1,c
 16266                           
 16267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16268                           ;stkvar	_g @ sp[(-56)+16]
 16269  0106F8  0ED8               	movlw	-40
 16270  0106FA  006F FF8C  F02E    	movff	plusw1,btemp+8
 16271  010700  0ED9               	movlw	-39
 16272  010702  006F FF8C  F02F    	movff	plusw1,btemp+9
 16273  010708  0EDA               	movlw	-38
 16274  01070A  006F FF8C  F030    	movff	plusw1,btemp+10
 16275  010710  0EDB               	movlw	-37
 16276  010712  006F FF8C  F031    	movff	plusw1,btemp+11
 16277                           
 16278                           ;stkvar	_h @ sp[(-56)+24]
 16279  010718  0EE0               	movlw	-32
 16280  01071A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16281  010720  0EE1               	movlw	-31
 16282  010722  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16283  010728  0EE2               	movlw	-30
 16284  01072A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16285  010730  0EE3               	movlw	-29
 16286  010732  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16287                           
 16288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16289                           ;stkvar	_u @ sp[(-56)+12]
 16290  010738  0ED4               	movlw	-44
 16291  01073A  006F FF8C  F02E    	movff	plusw1,btemp+8
 16292  010740  0ED5               	movlw	-43
 16293  010742  006F FF8C  F02F    	movff	plusw1,btemp+9
 16294  010748  0ED6               	movlw	-42
 16295  01074A  006F FF8C  F030    	movff	plusw1,btemp+10
 16296  010750  0ED7               	movlw	-41
 16297  010752  006F FF8C  F031    	movff	plusw1,btemp+11
 16298                           
 16299                           ;stkvar	_ou @ sp[(-56)+28]
 16300  010758  0EE4               	movlw	-28
 16301  01075A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16302  010760  0EE5               	movlw	-27
 16303  010762  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16304  010768  0EE6               	movlw	-26
 16305  01076A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16306  010770  0EE7               	movlw	-25
 16307  010772  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16308                           
 16309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16310  010778  D0D6               	goto	l11905
 16311  01077A                     l11895:
 16312                           
 16313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16314                           ;stkvar	_u @ sp[(-56)+12]
 16315  01077A  0ED4               	movlw	-44
 16316  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16317  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16318  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16319  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16320                           
 16321                           ;stkvar	_h @ sp[(-60)+24]
 16322  010794  0EDC               	movlw	-36
 16323  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16324  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16325  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16326  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16327  0107AE  EC4B  F0A5         	call	___fldiv	;wreg free
 16328  0107B2  0060  F09B  FFE6   	movff	btemp,postinc1
 16329  0107B8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16330  0107BE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16331  0107C4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16332  0107CA  ECA1  F0B0         	call	_floorf	;wreg free
 16333                           
 16334                           ;stkvar	_l @ sp[(-56)+20]
 16335  0107CE  0EDC               	movlw	-36
 16336  0107D0  0060  F09B  FFE3   	movff	btemp,plusw1
 16337  0107D6  0EDD               	movlw	-35
 16338  0107D8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16339  0107DE  0EDE               	movlw	-34
 16340  0107E0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16341  0107E6  0EDF               	movlw	-33
 16342  0107E8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16343                           
 16344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16345                           ;stkvar	_l @ sp[(-56)+20]
 16346  0107EE  0EDC               	movlw	-36
 16347  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16351  010808  EC62  F0C4         	call	___fltol	;wreg free
 16352  01080C  0060  F098  F030   	movff	btemp,btemp+10
 16353  010812  0060  F09C  F031   	movff	btemp+1,btemp+11
 16354                           
 16355                           ;stkvar	_d @ sp[(-56)+44]
 16356  010818  0EF4               	movlw	-12
 16357  01081A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16358  010820  0EF5               	movlw	-11
 16359  010822  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16360                           
 16361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16362                           ;stkvar	_u @ sp[(-56)+12]
 16363  010828  0ED4               	movlw	-44
 16364  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16366  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16367  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16368                           
 16369                           ;stkvar	_l @ sp[(-60)+20]
 16370  010842  0ED8               	movlw	-40
 16371  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16373  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16374  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16375  01085C  ECA0  F099         	call	___flmul	;wreg free
 16376  010860  0060  F09B  FFE6   	movff	btemp,postinc1
 16377  010866  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16378  01086C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16379  010872  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16380                           
 16381                           ;stkvar	_h @ sp[(-60)+24]
 16382  010878  0EDC               	movlw	-36
 16383  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16384  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16385  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16386  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16387  010892  EC75  F0D7         	call	___flsub	;wreg free
 16388                           
 16389                           ;stkvar	_h @ sp[(-56)+24]
 16390  010896  0EE0               	movlw	-32
 16391  010898  0060  F09B  FFE3   	movff	btemp,plusw1
 16392  01089E  0EE1               	movlw	-31
 16393  0108A0  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16394  0108A6  0EE2               	movlw	-30
 16395  0108A8  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16396  0108AE  0EE3               	movlw	-29
 16397  0108B0  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16398                           
 16399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16400  0108B6  0E00               	movlw	0
 16401  0108B8  6EE6               	movwf	postinc1,c
 16402  0108BA  0E00               	movlw	0
 16403  0108BC  6EE6               	movwf	postinc1,c
 16404  0108BE  0E20               	movlw	32
 16405  0108C0  6EE6               	movwf	postinc1,c
 16406  0108C2  0E41               	movlw	65
 16407  0108C4  6EE6               	movwf	postinc1,c
 16408                           
 16409                           ;stkvar	_u @ sp[(-60)+12]
 16410  0108C6  0ED0               	movlw	-48
 16411  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16412  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16413  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16414  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16415  0108E0  EC4B  F0A5         	call	___fldiv	;wreg free
 16416                           
 16417                           ;stkvar	_u @ sp[(-56)+12]
 16418  0108E4  0ED4               	movlw	-44
 16419  0108E6  0060  F09B  FFE3   	movff	btemp,plusw1
 16420  0108EC  0ED5               	movlw	-43
 16421  0108EE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16422  0108F4  0ED6               	movlw	-42
 16423  0108F6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16424  0108FC  0ED7               	movlw	-41
 16425  0108FE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16426                           
 16427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16428                           ;stkvar	_i @ sp[(-56)+36]
 16429  010904  0EEC               	movlw	-20
 16430  010906  50E3               	movf	plusw1,w,c
 16431  010908  0F01               	addlw	1
 16432  01090A  6E26               	movwf	btemp^0,c
 16433  01090C  0EEC               	movlw	-20
 16434  01090E  0060  F09B  FFE3   	movff	btemp,plusw1
 16435  010914  6A26               	clrf	btemp^0,c
 16436  010916  0EED               	movlw	-19
 16437  010918  50E3               	movf	plusw1,w,c
 16438  01091A  2026               	addwfc	btemp^0,w,c
 16439  01091C  6E26               	movwf	btemp^0,c
 16440  01091E  0EED               	movlw	-19
 16441  010920  0060  F09B  FFE3   	movff	btemp,plusw1
 16442  010926                     l11905:
 16443                           
 16444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16445                           ;stkvar	_m @ sp[(-56)+48]
 16446                           ;stkvar	_i @ sp[(-56)+36]
 16447  010926  50E1               	movf	fsr1l,w,c
 16448  010928  0FEC               	addlw	-20
 16449  01092A  6ED9               	movwf	fsr2l,c
 16450  01092C  50E2               	movf	fsr1h,w,c
 16451  01092E  6EDA               	movwf	fsr2h,c
 16452  010930  0EFF               	movlw	255
 16453  010932  22DA               	addwfc	fsr2h,f,c
 16454  010934  0EF8               	movlw	-8
 16455  010936  50E3               	movf	plusw1,w,c
 16456  010938  5CDE               	subwf	postinc2,w,c
 16457  01093A  50DE               	movf	postinc2,w,c
 16458  01093C  0A80               	xorlw	128
 16459  01093E  6E26               	movwf	btemp^0,c
 16460  010940  0EF9               	movlw	-7
 16461  010942  50E3               	movf	plusw1,w,c
 16462  010944  0A80               	xorlw	128
 16463  010946  5826               	subwfb	btemp^0,w,c
 16464  010948  A0D8               	btfss	status,0,c
 16465  01094A  D717               	goto	l11895
 16466                           
 16467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16468  01094C  0E00               	movlw	0
 16469  01094E  6EE6               	movwf	postinc1,c
 16470  010950  0E00               	movlw	0
 16471  010952  6EE6               	movwf	postinc1,c
 16472  010954  0EA0               	movlw	160
 16473  010956  6EE6               	movwf	postinc1,c
 16474  010958  0E40               	movlw	64
 16475  01095A  6EE6               	movwf	postinc1,c
 16476                           
 16477                           ;stkvar	_u @ sp[(-60)+12]
 16478  01095C  0ED0               	movlw	-48
 16479  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16480  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16481  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16482  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16483  010976  ECA0  F099         	call	___flmul	;wreg free
 16484                           
 16485                           ;stkvar	_l @ sp[(-56)+20]
 16486  01097A  0EDC               	movlw	-36
 16487  01097C  0060  F09B  FFE3   	movff	btemp,plusw1
 16488  010982  0EDD               	movlw	-35
 16489  010984  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16490  01098A  0EDE               	movlw	-34
 16491  01098C  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16492  010992  0EDF               	movlw	-33
 16493  010994  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16494                           
 16495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16496                           ;stkvar	_l @ sp[(-56)+20]
 16497  01099A  0EDC               	movlw	-36
 16498  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16499  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16500  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16501  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16502                           
 16503                           ;stkvar	_h @ sp[(-60)+24]
 16504  0109B4  0EDC               	movlw	-36
 16505  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16506  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16507  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16508  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16509  0109CE  EC1B  F0C5         	call	___flge	;wreg free
 16510  0109D2  A026               	btfss	btemp& (0+255),0,c
 16511  0109D4  D021               	goto	u11260
 16512                           
 16513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16514                           ;stkvar	_l @ sp[(-56)+20]
 16515                           
 16516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16517                           
 16518                           ;stkvar	_l @ sp[(-56)+20]
 16519                           
 16520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16521  0109D6  0EDC               	movlw	-36
 16522  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16523  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16524  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16526                           
 16527                           ;stkvar	_h @ sp[(-60)+24]
 16528  0109F0  0EDC               	movlw	-36
 16529  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16530  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16531  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16532  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16533  010A0A  EC56  F0CF         	call	___fleq	;wreg free
 16534  010A0E  A026               	btfss	btemp& (0+255),0,c
 16535  010A10  D01B               	goto	l11919
 16536                           
 16537                           ;stkvar	_d @ sp[(-56)+44]
 16538  010A12  0EF4               	movlw	-12
 16539  010A14  B0E3               	btfsc	plusw1,0,c
 16540  010A16  D018               	goto	l11919
 16541  010A18                     u11260:
 16542                           
 16543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16544  010A18  0E00               	movlw	0
 16545  010A1A  6E2E               	movwf	(btemp+8)^0,c
 16546  010A1C  0E00               	movlw	0
 16547  010A1E  6E2F               	movwf	(btemp+9)^0,c
 16548  010A20  0E00               	movlw	0
 16549  010A22  6E30               	movwf	(btemp+10)^0,c
 16550  010A24  0E00               	movlw	0
 16551  010A26  6E31               	movwf	(btemp+11)^0,c
 16552                           
 16553                           ;stkvar	_l @ sp[(-56)+20]
 16554  010A28  0EDC               	movlw	-36
 16555  010A2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16556  010A30  0EDD               	movlw	-35
 16557  010A32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16558  010A38  0EDE               	movlw	-34
 16559  010A3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16560  010A40  0EDF               	movlw	-33
 16561  010A42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16562  010A48                     l11919:
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16565                           ;stkvar	_l @ sp[(-56)+20]
 16566  010A48  0EDC               	movlw	-36
 16567  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16568  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16569  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16570  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16571                           
 16572                           ;stkvar	_g @ sp[(-60)+16]
 16573  010A62  0ED4               	movlw	-44
 16574  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16575  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16576  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16577  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16578  010A7C  ECB5  F09D         	call	___fladd	;wreg free
 16579                           
 16580                           ;stkvar	_h @ sp[(-56)+24]
 16581  010A80  0EE0               	movlw	-32
 16582  010A82  0060  F09B  FFE3   	movff	btemp,plusw1
 16583  010A88  0EE1               	movlw	-31
 16584  010A8A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16585  010A90  0EE2               	movlw	-30
 16586  010A92  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16587  010A98  0EE3               	movlw	-29
 16588  010A9A  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16589                           
 16590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16591                           ;stkvar	_ou @ sp[(-56)+28]
 16592  010AA0  0EE4               	movlw	-28
 16593  010AA2  006F FF8C  F02E    	movff	plusw1,btemp+8
 16594  010AA8  0EE5               	movlw	-27
 16595  010AAA  006F FF8C  F02F    	movff	plusw1,btemp+9
 16596  010AB0  0EE6               	movlw	-26
 16597  010AB2  006F FF8C  F030    	movff	plusw1,btemp+10
 16598  010AB8  0EE7               	movlw	-25
 16599  010ABA  006F FF8C  F031    	movff	plusw1,btemp+11
 16600                           
 16601                           ;stkvar	_u @ sp[(-56)+12]
 16602  010AC0  0ED4               	movlw	-44
 16603  010AC2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16604  010AC8  0ED5               	movlw	-43
 16605  010ACA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16606  010AD0  0ED6               	movlw	-42
 16607  010AD2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16608  010AD8  0ED7               	movlw	-41
 16609  010ADA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16610                           
 16611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16612                           ;stkvar	_nmode @ sp[(-56)+55]
 16613  010AE0  0EFF               	movlw	-1
 16614  010AE2  006F FF8C  F026    	movff	plusw1,btemp
 16615  010AE8  0E65               	movlw	101
 16616  010AEA  1826               	xorwf	btemp^0,w,c
 16617  010AEC  B4D8               	btfsc	status,2,c
 16618  010AEE  D011               	goto	l11927
 16619                           
 16620                           ;stkvar	_e @ sp[(-56)+34]
 16621                           ;stkvar	_ne @ sp[(-56)+46]
 16622  010AF0  0EEA               	movlw	-22
 16623  010AF2  006F FF8C  F026    	movff	plusw1,btemp
 16624  010AF8  0EF6               	movlw	-10
 16625  010AFA  0060  F09B  FFE3   	movff	btemp,plusw1
 16626  010B00  0EEB               	movlw	-21
 16627  010B02  006F FF8C  F026    	movff	plusw1,btemp
 16628  010B08  0EF7               	movlw	-9
 16629  010B0A  0060  F09B  FFE3   	movff	btemp,plusw1
 16630  010B10  D004               	goto	l2239
 16631  010B12                     l11927:
 16632                           
 16633                           ;stkvar	_ne @ sp[(-56)+46]
 16634  010B12  0EF6               	movlw	-10
 16635  010B14  6AE3               	clrf	plusw1,c
 16636  010B16  0EF7               	movlw	-9
 16637  010B18  6AE3               	clrf	plusw1,c
 16638  010B1A                     l2239:
 16639                           
 16640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16641                           ;stkvar	_pp @ sp[(-56)+50]
 16642  010B1A  0EFA               	movlw	-6
 16643  010B1C  6AE3               	clrf	plusw1,c
 16644  010B1E  0EFB               	movlw	-5
 16645  010B20  6AE3               	clrf	plusw1,c
 16646                           
 16647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16648                           ;stkvar	_t @ sp[(-56)+52]
 16649  010B22  0EFC               	movlw	-4
 16650  010B24  6AE3               	clrf	plusw1,c
 16651  010B26  0EFD               	movlw	-3
 16652  010B28  6AE3               	clrf	plusw1,c
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16655                           ;stkvar	_i @ sp[(-56)+36]
 16656  010B2A  0EEC               	movlw	-20
 16657  010B2C  6AE3               	clrf	plusw1,c
 16658  010B2E  0EED               	movlw	-19
 16659  010B30  6AE3               	clrf	plusw1,c
 16660                           
 16661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16662  010B32  D1B7               	goto	l11979
 16663  010B34                     l11929:
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16666                           ;stkvar	_u @ sp[(-56)+12]
 16667  010B34  0ED4               	movlw	-44
 16668  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16669  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16670  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16671  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16672                           
 16673                           ;stkvar	_h @ sp[(-60)+24]
 16674  010B4E  0EDC               	movlw	-36
 16675  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16676  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16677  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16678  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16679  010B68  EC4B  F0A5         	call	___fldiv	;wreg free
 16680  010B6C  0060  F09B  FFE6   	movff	btemp,postinc1
 16681  010B72  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16682  010B78  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16683  010B7E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16684  010B84  ECA1  F0B0         	call	_floorf	;wreg free
 16685                           
 16686                           ;stkvar	_l @ sp[(-56)+20]
 16687  010B88  0EDC               	movlw	-36
 16688  010B8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16689  010B90  0EDD               	movlw	-35
 16690  010B92  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16691  010B98  0EDE               	movlw	-34
 16692  010B9A  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16693  010BA0  0EDF               	movlw	-33
 16694  010BA2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16697                           ;stkvar	_l @ sp[(-56)+20]
 16698  010BA8  0EDC               	movlw	-36
 16699  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16700  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16701  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16702  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16703  010BC2  EC62  F0C4         	call	___fltol	;wreg free
 16704  010BC6  0060  F098  F030   	movff	btemp,btemp+10
 16705  010BCC  0060  F09C  F031   	movff	btemp+1,btemp+11
 16706                           
 16707                           ;stkvar	_d @ sp[(-56)+44]
 16708  010BD2  0EF4               	movlw	-12
 16709  010BD4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16710  010BDA  0EF5               	movlw	-11
 16711  010BDC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16712                           
 16713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16714  010BE2  B80E               	btfsc	_flags^0,4,c
 16715  010BE4  D026               	goto	l11943
 16716                           
 16717                           ;stkvar	_d @ sp[(-56)+44]
 16718  010BE6  0EF4               	movlw	-12
 16719  010BE8  006F FF8C  F026    	movff	plusw1,btemp
 16720  010BEE  0EF5               	movlw	-11
 16721  010BF0  50E3               	movf	plusw1,w,c
 16722  010BF2  1026               	iorwf	btemp^0,w,c
 16723  010BF4  A4D8               	btfss	status,2,c
 16724  010BF6  D01D               	goto	l11943
 16725                           
 16726                           ;stkvar	_mode @ sp[(-56)+54]
 16727  010BF8  0EFE               	movlw	-2
 16728  010BFA  006F FF8C  F026    	movff	plusw1,btemp
 16729  010C00  0E67               	movlw	103
 16730  010C02  1826               	xorwf	btemp^0,w,c
 16731  010C04  A4D8               	btfss	status,2,c
 16732  010C06  D015               	goto	l11943
 16733                           
 16734                           ;stkvar	_ne @ sp[(-56)+46]
 16735  010C08  0EF7               	movlw	-9
 16736  010C0A  AEE3               	btfss	plusw1,7,c
 16737  010C0C  D012               	goto	l11943
 16738                           
 16739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16740                           ;stkvar	_t @ sp[(-56)+52]
 16741  010C0E  0EFC               	movlw	-4
 16742  010C10  50E3               	movf	plusw1,w,c
 16743  010C12  0F01               	addlw	1
 16744  010C14  6E26               	movwf	btemp^0,c
 16745  010C16  0EFC               	movlw	-4
 16746  010C18  0060  F09B  FFE3   	movff	btemp,plusw1
 16747  010C1E  6A26               	clrf	btemp^0,c
 16748  010C20  0EFD               	movlw	-3
 16749  010C22  50E3               	movf	plusw1,w,c
 16750  010C24  2026               	addwfc	btemp^0,w,c
 16751  010C26  6E26               	movwf	btemp^0,c
 16752  010C28  0EFD               	movlw	-3
 16753  010C2A  0060  F09B  FFE3   	movff	btemp,plusw1
 16754                           
 16755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16756  010C30  D0AF               	goto	l11971
 16757  010C32                     l11943:
 16758                           
 16759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16760                           ;stkvar	_pp @ sp[(-56)+50]
 16761  010C32  0EFA               	movlw	-6
 16762  010C34  006F FF8C  F026    	movff	plusw1,btemp
 16763  010C3A  0EFB               	movlw	-5
 16764  010C3C  50E3               	movf	plusw1,w,c
 16765  010C3E  1026               	iorwf	btemp^0,w,c
 16766  010C40  A4D8               	btfss	status,2,c
 16767  010C42  D070               	goto	l11963
 16768                           
 16769                           ;stkvar	_ne @ sp[(-56)+46]
 16770  010C44  0EF7               	movlw	-9
 16771  010C46  AEE3               	btfss	plusw1,7,c
 16772  010C48  D06D               	goto	l11963
 16773                           
 16774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16775                           ;stkvar	_n @ sp[(-56)+32]
 16776  010C4A  0EE8               	movlw	-24
 16777  010C4C  006F FF8C  F030    	movff	plusw1,btemp+10
 16778  010C52  0EE9               	movlw	-23
 16779  010C54  006F FF8C  F031    	movff	plusw1,btemp+11
 16780  010C5A  0EAE               	movlw	low _dbuf
 16781  010C5C  2430               	addwf	(btemp+10)^0,w,c
 16782  010C5E  6ED9               	movwf	fsr2l,c
 16783  010C60  0E02               	movlw	high _dbuf
 16784  010C62  2031               	addwfc	(btemp+11)^0,w,c
 16785  010C64  6EDA               	movwf	fsr2h,c
 16786  010C66  0E2E               	movlw	46
 16787  010C68  6EDF               	movwf	indf2,c
 16788                           
 16789                           ;stkvar	_n @ sp[(-56)+32]
 16790  010C6A  0EE8               	movlw	-24
 16791  010C6C  50E3               	movf	plusw1,w,c
 16792  010C6E  0F01               	addlw	1
 16793  010C70  6E26               	movwf	btemp^0,c
 16794  010C72  0EE8               	movlw	-24
 16795  010C74  0060  F09B  FFE3   	movff	btemp,plusw1
 16796  010C7A  6A26               	clrf	btemp^0,c
 16797  010C7C  0EE9               	movlw	-23
 16798  010C7E  50E3               	movf	plusw1,w,c
 16799  010C80  2026               	addwfc	btemp^0,w,c
 16800  010C82  6E26               	movwf	btemp^0,c
 16801  010C84  0EE9               	movlw	-23
 16802  010C86  0060  F09B  FFE3   	movff	btemp,plusw1
 16803                           
 16804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16805                           ;stkvar	_w @ sp[(-56)+38]
 16806  010C8C  50E1               	movf	fsr1l,w,c
 16807  010C8E  0FEE               	addlw	-18
 16808  010C90  6ED9               	movwf	fsr2l,c
 16809  010C92  50E2               	movf	fsr1h,w,c
 16810  010C94  6EDA               	movwf	fsr2h,c
 16811  010C96  0EFF               	movlw	255
 16812  010C98  22DA               	addwfc	fsr2h,f,c
 16813  010C9A  06DE               	decf	postinc2,f,c
 16814  010C9C  0E00               	movlw	0
 16815  010C9E  5ADD               	subwfb	postdec2,f,c
 16816                           
 16817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16818  010CA0  0E01               	movlw	1
 16819  010CA2  6E30               	movwf	(btemp+10)^0,c
 16820  010CA4  0E00               	movlw	0
 16821  010CA6  6E31               	movwf	(btemp+11)^0,c
 16822                           
 16823                           ;stkvar	_pp @ sp[(-56)+50]
 16824  010CA8  0EFA               	movlw	-6
 16825  010CAA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16826  010CB0  0EFB               	movlw	-5
 16827  010CB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16828  010CB8  D035               	goto	l11963
 16829  010CBA                     l11955:
 16830                           
 16831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16832                           ;stkvar	_n @ sp[(-56)+32]
 16833  010CBA  0EE8               	movlw	-24
 16834  010CBC  006F FF8C  F030    	movff	plusw1,btemp+10
 16835  010CC2  0EE9               	movlw	-23
 16836  010CC4  006F FF8C  F031    	movff	plusw1,btemp+11
 16837  010CCA  0EAE               	movlw	low _dbuf
 16838  010CCC  2430               	addwf	(btemp+10)^0,w,c
 16839  010CCE  6ED9               	movwf	fsr2l,c
 16840  010CD0  0E02               	movlw	high _dbuf
 16841  010CD2  2031               	addwfc	(btemp+11)^0,w,c
 16842  010CD4  6EDA               	movwf	fsr2h,c
 16843  010CD6  0E30               	movlw	48
 16844  010CD8  6EDF               	movwf	indf2,c
 16845                           
 16846                           ;stkvar	_n @ sp[(-56)+32]
 16847  010CDA  0EE8               	movlw	-24
 16848  010CDC  50E3               	movf	plusw1,w,c
 16849  010CDE  0F01               	addlw	1
 16850  010CE0  6E26               	movwf	btemp^0,c
 16851  010CE2  0EE8               	movlw	-24
 16852  010CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 16853  010CEA  6A26               	clrf	btemp^0,c
 16854  010CEC  0EE9               	movlw	-23
 16855  010CEE  50E3               	movf	plusw1,w,c
 16856  010CF0  2026               	addwfc	btemp^0,w,c
 16857  010CF2  6E26               	movwf	btemp^0,c
 16858  010CF4  0EE9               	movlw	-23
 16859  010CF6  0060  F09B  FFE3   	movff	btemp,plusw1
 16860                           
 16861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16862                           ;stkvar	_w @ sp[(-56)+38]
 16863  010CFC  50E1               	movf	fsr1l,w,c
 16864  010CFE  0FEE               	addlw	-18
 16865  010D00  6ED9               	movwf	fsr2l,c
 16866  010D02  50E2               	movf	fsr1h,w,c
 16867  010D04  6EDA               	movwf	fsr2h,c
 16868  010D06  0EFF               	movlw	255
 16869  010D08  22DA               	addwfc	fsr2h,f,c
 16870  010D0A  06DE               	decf	postinc2,f,c
 16871  010D0C  0E00               	movlw	0
 16872  010D0E  5ADD               	subwfb	postdec2,f,c
 16873                           
 16874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16875                           ;stkvar	_t @ sp[(-56)+52]
 16876  010D10  50E1               	movf	fsr1l,w,c
 16877  010D12  0FFC               	addlw	-4
 16878  010D14  6ED9               	movwf	fsr2l,c
 16879  010D16  50E2               	movf	fsr1h,w,c
 16880  010D18  6EDA               	movwf	fsr2h,c
 16881  010D1A  0EFF               	movlw	255
 16882  010D1C  22DA               	addwfc	fsr2h,f,c
 16883  010D1E  06DE               	decf	postinc2,f,c
 16884  010D20  0E00               	movlw	0
 16885  010D22  5ADD               	subwfb	postdec2,f,c
 16886  010D24                     l11963:
 16887                           
 16888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16889                           ;stkvar	_t @ sp[(-56)+52]
 16890  010D24  0EFC               	movlw	-4
 16891  010D26  006F FF8C  F026    	movff	plusw1,btemp
 16892  010D2C  0EFD               	movlw	-3
 16893  010D2E  50E3               	movf	plusw1,w,c
 16894  010D30  1026               	iorwf	btemp^0,w,c
 16895  010D32  A4D8               	btfss	status,2,c
 16896  010D34  D7C2               	goto	l11955
 16897                           
 16898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16899                           ;stkvar	_n @ sp[(-56)+32]
 16900  010D36  0EE8               	movlw	-24
 16901  010D38  006F FF8C  F030    	movff	plusw1,btemp+10
 16902  010D3E  0EE9               	movlw	-23
 16903  010D40  006F FF8C  F031    	movff	plusw1,btemp+11
 16904  010D46  0EAE               	movlw	low _dbuf
 16905  010D48  2430               	addwf	(btemp+10)^0,w,c
 16906  010D4A  6ED9               	movwf	fsr2l,c
 16907  010D4C  0E02               	movlw	high _dbuf
 16908  010D4E  2031               	addwfc	(btemp+11)^0,w,c
 16909  010D50  6EDA               	movwf	fsr2h,c
 16910                           
 16911                           ;stkvar	_d @ sp[(-56)+44]
 16912  010D52  0EF4               	movlw	-12
 16913  010D54  50E3               	movf	plusw1,w,c
 16914  010D56  0F30               	addlw	48
 16915  010D58  6EDF               	movwf	indf2,c
 16916                           
 16917                           ;stkvar	_n @ sp[(-56)+32]
 16918  010D5A  0EE8               	movlw	-24
 16919  010D5C  50E3               	movf	plusw1,w,c
 16920  010D5E  0F01               	addlw	1
 16921  010D60  6E26               	movwf	btemp^0,c
 16922  010D62  0EE8               	movlw	-24
 16923  010D64  0060  F09B  FFE3   	movff	btemp,plusw1
 16924  010D6A  6A26               	clrf	btemp^0,c
 16925  010D6C  0EE9               	movlw	-23
 16926  010D6E  50E3               	movf	plusw1,w,c
 16927  010D70  2026               	addwfc	btemp^0,w,c
 16928  010D72  6E26               	movwf	btemp^0,c
 16929  010D74  0EE9               	movlw	-23
 16930  010D76  0060  F09B  FFE3   	movff	btemp,plusw1
 16931                           
 16932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16933                           ;stkvar	_w @ sp[(-56)+38]
 16934  010D7C  50E1               	movf	fsr1l,w,c
 16935  010D7E  0FEE               	addlw	-18
 16936  010D80  6ED9               	movwf	fsr2l,c
 16937  010D82  50E2               	movf	fsr1h,w,c
 16938  010D84  6EDA               	movwf	fsr2h,c
 16939  010D86  0EFF               	movlw	255
 16940  010D88  22DA               	addwfc	fsr2h,f,c
 16941  010D8A  06DE               	decf	postinc2,f,c
 16942  010D8C  0E00               	movlw	0
 16943  010D8E  5ADD               	subwfb	postdec2,f,c
 16944  010D90                     l11971:
 16945                           
 16946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16947                           ;stkvar	_u @ sp[(-56)+12]
 16948  010D90  0ED4               	movlw	-44
 16949  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16950  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16951  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16952  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16953                           
 16954                           ;stkvar	_l @ sp[(-60)+20]
 16955  010DAA  0ED8               	movlw	-40
 16956  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16957  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16958  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16959  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16960  010DC4  ECA0  F099         	call	___flmul	;wreg free
 16961  010DC8  0060  F09B  FFE6   	movff	btemp,postinc1
 16962  010DCE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16963  010DD4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16964  010DDA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16965                           
 16966                           ;stkvar	_h @ sp[(-60)+24]
 16967  010DE0  0EDC               	movlw	-36
 16968  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16969  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16970  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16971  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16972  010DFA  EC75  F0D7         	call	___flsub	;wreg free
 16973                           
 16974                           ;stkvar	_h @ sp[(-56)+24]
 16975  010DFE  0EE0               	movlw	-32
 16976  010E00  0060  F09B  FFE3   	movff	btemp,plusw1
 16977  010E06  0EE1               	movlw	-31
 16978  010E08  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16979  010E0E  0EE2               	movlw	-30
 16980  010E10  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16981  010E16  0EE3               	movlw	-29
 16982  010E18  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16983                           
 16984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16985  010E1E  0E00               	movlw	0
 16986  010E20  6EE6               	movwf	postinc1,c
 16987  010E22  0E00               	movlw	0
 16988  010E24  6EE6               	movwf	postinc1,c
 16989  010E26  0E20               	movlw	32
 16990  010E28  6EE6               	movwf	postinc1,c
 16991  010E2A  0E41               	movlw	65
 16992  010E2C  6EE6               	movwf	postinc1,c
 16993                           
 16994                           ;stkvar	_u @ sp[(-60)+12]
 16995  010E2E  0ED0               	movlw	-48
 16996  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16997  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16998  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16999  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17000  010E48  EC4B  F0A5         	call	___fldiv	;wreg free
 17001                           
 17002                           ;stkvar	_u @ sp[(-56)+12]
 17003  010E4C  0ED4               	movlw	-44
 17004  010E4E  0060  F09B  FFE3   	movff	btemp,plusw1
 17005  010E54  0ED5               	movlw	-43
 17006  010E56  0060  F09F  FFE3   	movff	btemp+1,plusw1
 17007  010E5C  0ED6               	movlw	-42
 17008  010E5E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 17009  010E64  0ED7               	movlw	-41
 17010  010E66  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 17011                           
 17012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17013                           ;stkvar	_ne @ sp[(-56)+46]
 17014  010E6C  50E1               	movf	fsr1l,w,c
 17015  010E6E  0FF6               	addlw	-10
 17016  010E70  6ED9               	movwf	fsr2l,c
 17017  010E72  50E2               	movf	fsr1h,w,c
 17018  010E74  6EDA               	movwf	fsr2h,c
 17019  010E76  0EFF               	movlw	255
 17020  010E78  22DA               	addwfc	fsr2h,f,c
 17021  010E7A  06DE               	decf	postinc2,f,c
 17022  010E7C  0E00               	movlw	0
 17023  010E7E  5ADD               	subwfb	postdec2,f,c
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17026                           ;stkvar	_i @ sp[(-56)+36]
 17027  010E80  0EEC               	movlw	-20
 17028  010E82  50E3               	movf	plusw1,w,c
 17029  010E84  0F01               	addlw	1
 17030  010E86  6E26               	movwf	btemp^0,c
 17031  010E88  0EEC               	movlw	-20
 17032  010E8A  0060  F09B  FFE3   	movff	btemp,plusw1
 17033  010E90  6A26               	clrf	btemp^0,c
 17034  010E92  0EED               	movlw	-19
 17035  010E94  50E3               	movf	plusw1,w,c
 17036  010E96  2026               	addwfc	btemp^0,w,c
 17037  010E98  6E26               	movwf	btemp^0,c
 17038  010E9A  0EED               	movlw	-19
 17039  010E9C  0060  F09B  FFE3   	movff	btemp,plusw1
 17040  010EA2                     l11979:
 17041                           
 17042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17043                           ;stkvar	_m @ sp[(-56)+48]
 17044                           ;stkvar	_i @ sp[(-56)+36]
 17045  010EA2  50E1               	movf	fsr1l,w,c
 17046  010EA4  0FEC               	addlw	-20
 17047  010EA6  6ED9               	movwf	fsr2l,c
 17048  010EA8  50E2               	movf	fsr1h,w,c
 17049  010EAA  6EDA               	movwf	fsr2h,c
 17050  010EAC  0EFF               	movlw	255
 17051  010EAE  22DA               	addwfc	fsr2h,f,c
 17052  010EB0  0EF8               	movlw	-8
 17053  010EB2  50E3               	movf	plusw1,w,c
 17054  010EB4  5CDE               	subwf	postinc2,w,c
 17055  010EB6  50DE               	movf	postinc2,w,c
 17056  010EB8  0A80               	xorlw	128
 17057  010EBA  6E26               	movwf	btemp^0,c
 17058  010EBC  0EF9               	movlw	-7
 17059  010EBE  50E3               	movf	plusw1,w,c
 17060  010EC0  0A80               	xorlw	128
 17061  010EC2  5826               	subwfb	btemp^0,w,c
 17062  010EC4  B0D8               	btfsc	status,0,c
 17063  010EC6  D00E               	goto	u11360
 17064                           
 17065                           ;stkvar	_n @ sp[(-56)+32]
 17066  010EC8  0EE9               	movlw	-23
 17067  010ECA  BEE3               	btfsc	plusw1,7,c
 17068  010ECC  D633               	goto	l11929
 17069  010ECE  0EE9               	movlw	-23
 17070  010ED0  50E3               	movf	plusw1,w,c
 17071  010ED2  E108               	bnz	u11360
 17072  010ED4  0EE8               	movlw	-24
 17073  010ED6  006F FF8C  F026    	movff	plusw1,btemp
 17074  010EDC  0E4B               	movlw	75
 17075  010EDE  5E26               	subwf	btemp^0,f,c
 17076  010EE0  A0D8               	btfss	status,0,c
 17077  010EE2  D628               	goto	l11929
 17078  010EE4                     u11360:
 17079                           
 17080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17081                           ;stkvar	_pp @ sp[(-56)+50]
 17082  010EE4  0EFA               	movlw	-6
 17083  010EE6  006F FF8C  F026    	movff	plusw1,btemp
 17084  010EEC  0EFB               	movlw	-5
 17085  010EEE  50E3               	movf	plusw1,w,c
 17086  010EF0  1026               	iorwf	btemp^0,w,c
 17087  010EF2  B4D8               	btfsc	status,2,c
 17088  010EF4  A80E               	btfss	_flags^0,4,c
 17089  010EF6  D021               	goto	l11991
 17090                           
 17091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17092                           ;stkvar	_n @ sp[(-56)+32]
 17093  010EF8  0EE8               	movlw	-24
 17094  010EFA  006F FF8C  F030    	movff	plusw1,btemp+10
 17095  010F00  0EE9               	movlw	-23
 17096  010F02  006F FF8C  F031    	movff	plusw1,btemp+11
 17097  010F08  0EAE               	movlw	low _dbuf
 17098  010F0A  2430               	addwf	(btemp+10)^0,w,c
 17099  010F0C  6ED9               	movwf	fsr2l,c
 17100  010F0E  0E02               	movlw	high _dbuf
 17101  010F10  2031               	addwfc	(btemp+11)^0,w,c
 17102  010F12  6EDA               	movwf	fsr2h,c
 17103  010F14  0E2E               	movlw	46
 17104  010F16  6EDF               	movwf	indf2,c
 17105                           
 17106                           ;stkvar	_n @ sp[(-56)+32]
 17107  010F18  0EE8               	movlw	-24
 17108  010F1A  50E3               	movf	plusw1,w,c
 17109  010F1C  0F01               	addlw	1
 17110  010F1E  6E26               	movwf	btemp^0,c
 17111  010F20  0EE8               	movlw	-24
 17112  010F22  0060  F09B  FFE3   	movff	btemp,plusw1
 17113  010F28  6A26               	clrf	btemp^0,c
 17114  010F2A  0EE9               	movlw	-23
 17115  010F2C  50E3               	movf	plusw1,w,c
 17116  010F2E  2026               	addwfc	btemp^0,w,c
 17117  010F30  6E26               	movwf	btemp^0,c
 17118  010F32  0EE9               	movlw	-23
 17119  010F34  0060  F09B  FFE3   	movff	btemp,plusw1
 17120  010F3A                     l11991:
 17121                           
 17122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17123                           ;stkvar	_n @ sp[(-56)+32]
 17124  010F3A  0EE8               	movlw	-24
 17125  010F3C  006F FF8C  F030    	movff	plusw1,btemp+10
 17126  010F42  0EE9               	movlw	-23
 17127  010F44  006F FF8C  F031    	movff	plusw1,btemp+11
 17128  010F4A  0EAE               	movlw	low _dbuf
 17129  010F4C  2430               	addwf	(btemp+10)^0,w,c
 17130  010F4E  6ED9               	movwf	fsr2l,c
 17131  010F50  0E02               	movlw	high _dbuf
 17132  010F52  2031               	addwfc	(btemp+11)^0,w,c
 17133  010F54  6EDA               	movwf	fsr2h,c
 17134  010F56  0E00               	movlw	0
 17135  010F58  6EDF               	movwf	indf2,c
 17136                           
 17137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17138                           ;stkvar	_nmode @ sp[(-56)+55]
 17139  010F5A  0EFF               	movlw	-1
 17140  010F5C  006F FF8C  F026    	movff	plusw1,btemp
 17141  010F62  0E65               	movlw	101
 17142  010F64  1826               	xorwf	btemp^0,w,c
 17143  010F66  A4D8               	btfss	status,2,c
 17144  010F68  EF16  F081         	goto	l11795
 17145                           
 17146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17147  010F6C  0E4F               	movlw	79
 17148  010F6E  6E30               	movwf	(btemp+10)^0,c
 17149  010F70  0E00               	movlw	0
 17150  010F72  6E31               	movwf	(btemp+11)^0,c
 17151                           
 17152                           ;stkvar	_i @ sp[(-56)+36]
 17153  010F74  0EEC               	movlw	-20
 17154  010F76  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17155  010F7C  0EED               	movlw	-19
 17156  010F7E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17157                           
 17158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17159                           ;stkvar	_i @ sp[(-56)+36]
 17160  010F84  0EEC               	movlw	-20
 17161  010F86  006F FF8C  F030    	movff	plusw1,btemp+10
 17162  010F8C  0EED               	movlw	-19
 17163  010F8E  006F FF8C  F031    	movff	plusw1,btemp+11
 17164  010F94  0EAE               	movlw	low _dbuf
 17165  010F96  2430               	addwf	(btemp+10)^0,w,c
 17166  010F98  6ED9               	movwf	fsr2l,c
 17167  010F9A  0E02               	movlw	high _dbuf
 17168  010F9C  2031               	addwfc	(btemp+11)^0,w,c
 17169  010F9E  6EDA               	movwf	fsr2h,c
 17170  010FA0  0E00               	movlw	0
 17171  010FA2  6EDF               	movwf	indf2,c
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17174                           ;stkvar	_sign @ sp[(-56)+42]
 17175  010FA4  0EF2               	movlw	-14
 17176  010FA6  6AE3               	clrf	plusw1,c
 17177  010FA8  0EF3               	movlw	-13
 17178  010FAA  6AE3               	clrf	plusw1,c
 17179                           
 17180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17181                           ;stkvar	_e @ sp[(-56)+34]
 17182  010FAC  0EEB               	movlw	-21
 17183  010FAE  AEE3               	btfss	plusw1,7,c
 17184  010FB0  D012               	goto	l12005
 17185                           
 17186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17187  010FB2  0E01               	movlw	1
 17188  010FB4  6E30               	movwf	(btemp+10)^0,c
 17189  010FB6  0E00               	movlw	0
 17190  010FB8  6E31               	movwf	(btemp+11)^0,c
 17191                           
 17192                           ;stkvar	_sign @ sp[(-56)+42]
 17193  010FBA  0EF2               	movlw	-14
 17194  010FBC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17195  010FC2  0EF3               	movlw	-13
 17196  010FC4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17197                           
 17198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17199                           ;stkvar	_e @ sp[(-56)+34]
 17200                           ;stkvar	_e @ sp[(-56)+34]
 17201  010FCA  0EEA               	movlw	-22
 17202  010FCC  6CE3               	negf	plusw1,c
 17203  010FCE  0EEB               	movlw	-21
 17204  010FD0  1EE3               	comf	plusw1,f,c
 17205  010FD2  B0D8               	btfsc	status,0,c
 17206  010FD4  2AE3               	incf	plusw1,f,c
 17207  010FD6                     l12005:
 17208                           
 17209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17210  010FD6  0E02               	movlw	2
 17211  010FD8  6E30               	movwf	(btemp+10)^0,c
 17212  010FDA  0E00               	movlw	0
 17213  010FDC  6E31               	movwf	(btemp+11)^0,c
 17214                           
 17215                           ;stkvar	_p @ sp[(-56)+40]
 17216  010FDE  0EF0               	movlw	-16
 17217  010FE0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17218  010FE6  0EF1               	movlw	-15
 17219  010FE8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17220                           
 17221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17222  010FEE  D051               	goto	l12017
 17223  010FF0                     l12007:
 17224                           
 17225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17226                           ;stkvar	_i @ sp[(-56)+36]
 17227  010FF0  50E1               	movf	fsr1l,w,c
 17228  010FF2  0FEC               	addlw	-20
 17229  010FF4  6ED9               	movwf	fsr2l,c
 17230  010FF6  50E2               	movf	fsr1h,w,c
 17231  010FF8  6EDA               	movwf	fsr2h,c
 17232  010FFA  0EFF               	movlw	255
 17233  010FFC  22DA               	addwfc	fsr2h,f,c
 17234  010FFE  06DE               	decf	postinc2,f,c
 17235  011000  0E00               	movlw	0
 17236  011002  5ADD               	subwfb	postdec2,f,c
 17237                           
 17238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17239                           ;stkvar	_i @ sp[(-56)+36]
 17240  011004  0EEC               	movlw	-20
 17241  011006  006F FF8C  F030    	movff	plusw1,btemp+10
 17242  01100C  0EED               	movlw	-19
 17243  01100E  006F FF8C  F031    	movff	plusw1,btemp+11
 17244  011014  0EAE               	movlw	low _dbuf
 17245  011016  2430               	addwf	(btemp+10)^0,w,c
 17246  011018  6ED9               	movwf	fsr2l,c
 17247  01101A  0E02               	movlw	high _dbuf
 17248  01101C  2031               	addwfc	(btemp+11)^0,w,c
 17249  01101E  6EDA               	movwf	fsr2h,c
 17250  011020  0E0A               	movlw	10
 17251  011022  6EE6               	movwf	postinc1,c
 17252  011024  0E00               	movlw	0
 17253  011026  6EE6               	movwf	postinc1,c
 17254                           
 17255                           ;stkvar	_e @ sp[(-58)+34]
 17256  011028  0EE8               	movlw	-24
 17257  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17258  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17259  011036  EC1E  F0CA         	call	___awmod	;wreg free
 17260  01103A  5026               	movf	btemp^0,w,c
 17261  01103C  0F30               	addlw	48
 17262  01103E  6EDF               	movwf	indf2,c
 17263                           
 17264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17265  011040  0E0A               	movlw	10
 17266  011042  6EE6               	movwf	postinc1,c
 17267  011044  0E00               	movlw	0
 17268  011046  6EE6               	movwf	postinc1,c
 17269                           
 17270                           ;stkvar	_e @ sp[(-58)+34]
 17271  011048  0EE8               	movlw	-24
 17272  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17273  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17274  011056  EC7B  F0C6         	call	___awdiv	;wreg free
 17275                           
 17276                           ;stkvar	_e @ sp[(-56)+34]
 17277  01105A  0EEA               	movlw	-22
 17278  01105C  0060  F09B  FFE3   	movff	btemp,plusw1
 17279  011062  0EEB               	movlw	-21
 17280  011064  0060  F09F  FFE3   	movff	btemp+1,plusw1
 17281                           
 17282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17283                           ;stkvar	_p @ sp[(-56)+40]
 17284  01106A  50E1               	movf	fsr1l,w,c
 17285  01106C  0FF0               	addlw	-16
 17286  01106E  6ED9               	movwf	fsr2l,c
 17287  011070  50E2               	movf	fsr1h,w,c
 17288  011072  6EDA               	movwf	fsr2h,c
 17289  011074  0EFF               	movlw	255
 17290  011076  22DA               	addwfc	fsr2h,f,c
 17291  011078  06DE               	decf	postinc2,f,c
 17292  01107A  0E00               	movlw	0
 17293  01107C  5ADD               	subwfb	postdec2,f,c
 17294                           
 17295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17296                           ;stkvar	_w @ sp[(-56)+38]
 17297  01107E  50E1               	movf	fsr1l,w,c
 17298  011080  0FEE               	addlw	-18
 17299  011082  6ED9               	movwf	fsr2l,c
 17300  011084  50E2               	movf	fsr1h,w,c
 17301  011086  6EDA               	movwf	fsr2h,c
 17302  011088  0EFF               	movlw	255
 17303  01108A  22DA               	addwfc	fsr2h,f,c
 17304  01108C  06DE               	decf	postinc2,f,c
 17305  01108E  0E00               	movlw	0
 17306  011090  5ADD               	subwfb	postdec2,f,c
 17307  011092                     l12017:
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17310                           ;stkvar	_e @ sp[(-56)+34]
 17311  011092  0EEA               	movlw	-22
 17312  011094  006F FF8C  F026    	movff	plusw1,btemp
 17313  01109A  0EEB               	movlw	-21
 17314  01109C  50E3               	movf	plusw1,w,c
 17315  01109E  1026               	iorwf	btemp^0,w,c
 17316  0110A0  A4D8               	btfss	status,2,c
 17317  0110A2  D7A6               	goto	l12007
 17318                           
 17319                           ;stkvar	_p @ sp[(-56)+40]
 17320  0110A4  0EF1               	movlw	-15
 17321  0110A6  BEE3               	btfsc	plusw1,7,c
 17322  0110A8  D007               	goto	u11420
 17323  0110AA  0EF1               	movlw	-15
 17324  0110AC  50E3               	movf	plusw1,w,c
 17325  0110AE  E1A0               	bnz	l12007
 17326  0110B0  0EF0               	movlw	-16
 17327  0110B2  04E3               	decf	plusw1,w,c
 17328  0110B4  B0D8               	btfsc	status,0,c
 17329  0110B6  D79C               	goto	l12007
 17330  0110B8                     u11420:
 17331                           
 17332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17333                           ;stkvar	_i @ sp[(-56)+36]
 17334  0110B8  50E1               	movf	fsr1l,w,c
 17335  0110BA  0FEC               	addlw	-20
 17336  0110BC  6ED9               	movwf	fsr2l,c
 17337  0110BE  50E2               	movf	fsr1h,w,c
 17338  0110C0  6EDA               	movwf	fsr2h,c
 17339  0110C2  0EFF               	movlw	255
 17340  0110C4  22DA               	addwfc	fsr2h,f,c
 17341  0110C6  06DE               	decf	postinc2,f,c
 17342  0110C8  0E00               	movlw	0
 17343  0110CA  5ADD               	subwfb	postdec2,f,c
 17344                           
 17345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17346                           ;stkvar	_sign @ sp[(-56)+42]
 17347  0110CC  0EF2               	movlw	-14
 17348  0110CE  006F FF8C  F026    	movff	plusw1,btemp
 17349  0110D4  0EF3               	movlw	-13
 17350  0110D6  50E3               	movf	plusw1,w,c
 17351  0110D8  1026               	iorwf	btemp^0,w,c
 17352  0110DA  A4D8               	btfss	status,2,c
 17353  0110DC  D002               	goto	l12027
 17354  0110DE  0E2B               	movlw	43
 17355  0110E0  D001               	goto	L18
 17356  0110E2                     l12027:
 17357  0110E2  0E2D               	movlw	45
 17358  0110E4                     L18:
 17359  0110E4  6E30               	movwf	(btemp+10)^0,c
 17360  0110E6  0E00               	movlw	0
 17361  0110E8  6E31               	movwf	(btemp+11)^0,c
 17362                           
 17363                           ;stkvar	_efgtoa$5498 @ sp[(-56)+4]
 17364  0110EA  0ECC               	movlw	-52
 17365  0110EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17366  0110F2  0ECD               	movlw	-51
 17367  0110F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17368                           
 17369                           ;stkvar	_efgtoa$5498 @ sp[(-56)+4]
 17370                           ;stkvar	_i @ sp[(-56)+36]
 17371  0110FA  0EEC               	movlw	-20
 17372  0110FC  006F FF8C  F030    	movff	plusw1,btemp+10
 17373  011102  0EED               	movlw	-19
 17374  011104  006F FF8C  F031    	movff	plusw1,btemp+11
 17375  01110A  0EAE               	movlw	low _dbuf
 17376  01110C  2430               	addwf	(btemp+10)^0,w,c
 17377  01110E  6ED9               	movwf	fsr2l,c
 17378  011110  0E02               	movlw	high _dbuf
 17379  011112  2031               	addwfc	(btemp+11)^0,w,c
 17380  011114  6EDA               	movwf	fsr2h,c
 17381  011116  0ECC               	movlw	-52
 17382  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17383                           
 17384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17385                           ;stkvar	_w @ sp[(-56)+38]
 17386  01111E  50E1               	movf	fsr1l,w,c
 17387  011120  0FEE               	addlw	-18
 17388  011122  6ED9               	movwf	fsr2l,c
 17389  011124  50E2               	movf	fsr1h,w,c
 17390  011126  6EDA               	movwf	fsr2h,c
 17391  011128  0EFF               	movlw	255
 17392  01112A  22DA               	addwfc	fsr2h,f,c
 17393  01112C  06DE               	decf	postinc2,f,c
 17394  01112E  0E00               	movlw	0
 17395  011130  5ADD               	subwfb	postdec2,f,c
 17396                           
 17397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17398                           ;stkvar	_i @ sp[(-56)+36]
 17399  011132  50E1               	movf	fsr1l,w,c
 17400  011134  0FEC               	addlw	-20
 17401  011136  6ED9               	movwf	fsr2l,c
 17402  011138  50E2               	movf	fsr1h,w,c
 17403  01113A  6EDA               	movwf	fsr2h,c
 17404  01113C  0EFF               	movlw	255
 17405  01113E  22DA               	addwfc	fsr2h,f,c
 17406  011140  06DE               	decf	postinc2,f,c
 17407  011142  0E00               	movlw	0
 17408  011144  5ADD               	subwfb	postdec2,f,c
 17409  011146  0EBF               	movlw	191
 17410  011148  6E30               	movwf	(btemp+10)^0,c
 17411  01114A  0EFF               	movlw	255
 17412  01114C  6E31               	movwf	(btemp+11)^0,c
 17413                           
 17414                           ;stkvar	_c @ sp[(-56)+-7]
 17415  01114E  0EC1               	movlw	-63
 17416  011150  50E3               	movf	plusw1,w,c
 17417  011152  6E2E               	movwf	(btemp+8)^0,c
 17418  011154  6A2F               	clrf	(btemp+9)^0,c
 17419  011156  5030               	movf	(btemp+10)^0,w,c
 17420  011158  262E               	addwf	(btemp+8)^0,f,c
 17421  01115A  5031               	movf	(btemp+11)^0,w,c
 17422  01115C  222F               	addwfc	(btemp+9)^0,f,c
 17423  01115E  502F               	movf	(btemp+9)^0,w,c
 17424  011160  E106               	bnz	u11440
 17425  011162  0E1A               	movlw	26
 17426  011164  5C2E               	subwf	(btemp+8)^0,w,c
 17427  011166  B0D8               	btfsc	status,0,c
 17428  011168  D002               	goto	u11440
 17429  01116A  0E01               	movlw	1
 17430  01116C  D001               	goto	u11450
 17431  01116E                     u11440:
 17432  01116E  0E00               	movlw	0
 17433  011170                     u11450:
 17434  011170  6E30               	movwf	(btemp+10)^0,c
 17435  011172  6A31               	clrf	(btemp+11)^0,c
 17436                           
 17437                           ;stkvar	_efgtoa$5500 @ sp[(-56)+0]
 17438  011174  0EC8               	movlw	-56
 17439  011176  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17440  01117C  0EC9               	movlw	-55
 17441  01117E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17442                           
 17443                           ;stkvar	_efgtoa$5500 @ sp[(-56)+0]
 17444  011184  0EC8               	movlw	-56
 17445  011186  006F FF8C  F026    	movff	plusw1,btemp
 17446  01118C  0EC9               	movlw	-55
 17447  01118E  50E3               	movf	plusw1,w,c
 17448  011190  1026               	iorwf	btemp^0,w,c
 17449  011192  A4D8               	btfss	status,2,c
 17450  011194  D002               	goto	l12043
 17451  011196  0E65               	movlw	101
 17452  011198  D001               	goto	L19
 17453  01119A                     l12043:
 17454  01119A  0E45               	movlw	69
 17455  01119C                     L19:
 17456  01119C  6E30               	movwf	(btemp+10)^0,c
 17457  01119E  0E00               	movlw	0
 17458  0111A0  6E31               	movwf	(btemp+11)^0,c
 17459                           
 17460                           ;stkvar	_efgtoa$5499 @ sp[(-56)+2]
 17461  0111A2  0ECA               	movlw	-54
 17462  0111A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17463  0111AA  0ECB               	movlw	-53
 17464  0111AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17465                           
 17466                           ;stkvar	_efgtoa$5499 @ sp[(-56)+2]
 17467                           ;stkvar	_i @ sp[(-56)+36]
 17468  0111B2  0EEC               	movlw	-20
 17469  0111B4  006F FF8C  F030    	movff	plusw1,btemp+10
 17470  0111BA  0EED               	movlw	-19
 17471  0111BC  006F FF8C  F031    	movff	plusw1,btemp+11
 17472  0111C2  0EAE               	movlw	low _dbuf
 17473  0111C4  2430               	addwf	(btemp+10)^0,w,c
 17474  0111C6  6ED9               	movwf	fsr2l,c
 17475  0111C8  0E02               	movlw	high _dbuf
 17476  0111CA  2031               	addwfc	(btemp+11)^0,w,c
 17477  0111CC  6EDA               	movwf	fsr2h,c
 17478  0111CE  0ECA               	movlw	-54
 17479  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17480                           
 17481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17482                           ;stkvar	_w @ sp[(-56)+38]
 17483  0111D6  50E1               	movf	fsr1l,w,c
 17484  0111D8  0FEE               	addlw	-18
 17485  0111DA  6ED9               	movwf	fsr2l,c
 17486  0111DC  50E2               	movf	fsr1h,w,c
 17487  0111DE  6EDA               	movwf	fsr2h,c
 17488  0111E0  0EFF               	movlw	255
 17489  0111E2  22DA               	addwfc	fsr2h,f,c
 17490  0111E4  06DE               	decf	postinc2,f,c
 17491  0111E6  0E00               	movlw	0
 17492  0111E8  5ADD               	subwfb	postdec2,f,c
 17493                           
 17494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17495                           ;stkvar	_i @ sp[(-56)+36]
 17496  0111EA  0EEC               	movlw	-20
 17497  0111EC  006F FF8C  F030    	movff	plusw1,btemp+10
 17498  0111F2  0EED               	movlw	-19
 17499  0111F4  006F FF8C  F031    	movff	plusw1,btemp+11
 17500  0111FA  0EAE               	movlw	low _dbuf
 17501  0111FC  2430               	addwf	(btemp+10)^0,w,c
 17502  0111FE  6E2E               	movwf	(btemp+8)^0,c
 17503  011200  0E02               	movlw	high _dbuf
 17504  011202  2031               	addwfc	(btemp+11)^0,w,c
 17505  011204  6E2F               	movwf	(btemp+9)^0,c
 17506  011206  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 17507  01120C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 17508                           
 17509                           ;stkvar	_n @ sp[(-58)+32]
 17510  011212  0EAE               	movlw	low _dbuf
 17511  011214  6E30               	movwf	(btemp+10)^0,c
 17512  011216  0E02               	movlw	high _dbuf
 17513  011218  6E31               	movwf	(btemp+11)^0,c
 17514  01121A  0EE6               	movlw	-26
 17515  01121C  50E3               	movf	plusw1,w,c
 17516  01121E  2630               	addwf	(btemp+10)^0,f,c
 17517  011220  0EE7               	movlw	-25
 17518  011222  50E3               	movf	plusw1,w,c
 17519  011224  2231               	addwfc	(btemp+11)^0,f,c
 17520  011226  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 17521  01122C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 17522  011232  EC89  F0CE         	call	_strcpy	;wreg free
 17523  011236  EF16  F081         	goto	l11795
 17524  01123A                     l2195:
 17525                           
 17526                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17527  01123A  0EC1               	movlw	193
 17528  01123C  26E1               	addwf	fsr1l,f,c
 17529  01123E  0EFF               	movlw	255
 17530  011240  22E2               	addwfc	fsr1h,f,c
 17531  011242  0012               	return		;funcret
 17532  011244                     __end_of_efgtoa:
 17533                           	opt callstack 0
 17534                           
 17535 ;; *************** function _tolower *****************
 17536 ;; Defined at:
 17537 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17538 ;; Parameters:    Size  Location     Type
 17539 ;;  c               2  [STACK] int 
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;		None
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  2  [STACK] int 
 17544 ;; Registers used:
 17545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;Total ram usage:        0 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:   16
 17558 ;; This function calls:
 17559 ;;		_isupper
 17560 ;; This function is called by:
 17561 ;;		_efgtoa
 17562 ;;		_vfpfcnvrt
 17563 ;; This function uses a reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text56
 17567  01A776                     __ptext56:
 17568                           	opt callstack 0
 17569  01A776                     _tolower:
 17570                           	opt callstack 0
 17571                           
 17572                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17573  01A776  52E6               	movf	postinc1,f,c
 17574  01A778  52E6               	movf	postinc1,f,c
 17575                           
 17576                           ;stkvar	_c @ sp[(-2)+-2]
 17577                           
 17578                           ;incstack = 0
 17579 ;; hardware stack exceeded
 17580  01A77A  0EFC               	movlw	-4
 17581  01A77C  50E3               	movf	plusw1,w,c
 17582  01A77E  0FBF               	addlw	191
 17583  01A780  6E30               	movwf	(btemp+10)^0,c
 17584  01A782  0EFD               	movlw	-3
 17585  01A784  006F FF8C  F031    	movff	plusw1,btemp+11
 17586  01A78A  0EFF               	movlw	255
 17587  01A78C  2231               	addwfc	(btemp+11)^0,f,c
 17588  01A78E  5031               	movf	(btemp+11)^0,w,c
 17589  01A790  E106               	bnz	u6000
 17590  01A792  0E1A               	movlw	26
 17591  01A794  5C30               	subwf	(btemp+10)^0,w,c
 17592  01A796  B0D8               	btfsc	status,0,c
 17593  01A798  D002               	goto	u6000
 17594  01A79A  0E01               	movlw	1
 17595  01A79C  D001               	goto	u6010
 17596  01A79E                     u6000:
 17597  01A79E  0E00               	movlw	0
 17598  01A7A0                     u6010:
 17599  01A7A0  6E30               	movwf	(btemp+10)^0,c
 17600  01A7A2  6A31               	clrf	(btemp+11)^0,c
 17601                           
 17602                           ;stkvar	_tolower$6319 @ sp[(-2)+0]
 17603  01A7A4  0EFE               	movlw	-2
 17604  01A7A6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17605  01A7AC  0EFF               	movlw	-1
 17606  01A7AE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17607                           
 17608                           ;stkvar	_tolower$6319 @ sp[(-2)+0]
 17609  01A7B4  0EFE               	movlw	-2
 17610  01A7B6  006F FF8C  F026    	movff	plusw1,btemp
 17611  01A7BC  0EFF               	movlw	-1
 17612  01A7BE  50E3               	movf	plusw1,w,c
 17613  01A7C0  1026               	iorwf	btemp^0,w,c
 17614  01A7C2  B4D8               	btfsc	status,2,c
 17615  01A7C4  D00D               	goto	l7913
 17616                           
 17617                           ;stkvar	_c @ sp[(-2)+-2]
 17618  01A7C6  0EFC               	movlw	-4
 17619  01A7C8  006F FF8C  F026    	movff	plusw1,btemp
 17620  01A7CE  0EFD               	movlw	-3
 17621  01A7D0  006F FF8C  F027    	movff	plusw1,btemp+1
 17622  01A7D6  0E20               	movlw	32
 17623  01A7D8  1226               	iorwf	btemp^0,f,c
 17624  01A7DA  0E00               	movlw	0
 17625  01A7DC  1227               	iorwf	(btemp+1)^0,f,c
 17626  01A7DE  D008               	goto	l3467
 17627  01A7E0                     l7913:
 17628                           
 17629                           ;stkvar	_c @ sp[(-2)+-2]
 17630  01A7E0  0EFC               	movlw	-4
 17631  01A7E2  006F FF8C  F026    	movff	plusw1,btemp
 17632  01A7E8  0EFD               	movlw	-3
 17633  01A7EA  006F FF8C  F027    	movff	plusw1,btemp+1
 17634  01A7F0                     l3467:
 17635                           
 17636                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17637  01A7F0  52E5               	movf	postdec1,f,c
 17638  01A7F2  52E5               	movf	postdec1,f,c
 17639  01A7F4  52E5               	movf	postdec1,f,c
 17640  01A7F6  52E5               	movf	postdec1,f,c
 17641  01A7F8  0012               	return		;funcret
 17642  01A7FA                     __end_of_tolower:
 17643                           	opt callstack 0
 17644                           
 17645 ;; *************** function _isupper *****************
 17646 ;; Defined at:
 17647 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;  c               2  [STACK] int 
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;		None
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  2  [STACK] int 
 17654 ;; Registers used:
 17655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17665 ;;Total ram usage:        0 bytes
 17666 ;; Hardware stack levels used:    1
 17667 ;; Hardware stack levels required when called:   15
 17668 ;; This function calls:
 17669 ;;		Nothing
 17670 ;; This function is called by:
 17671 ;;		_efgtoa
 17672 ;;		_xtoa
 17673 ;;		_vfpfcnvrt
 17674 ;;		_tolower
 17675 ;; This function uses a reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text57
 17679  01B3E4                     __ptext57:
 17680                           	opt callstack 0
 17681  01B3E4                     _isupper:
 17682                           	opt callstack 0
 17683                           
 17684                           ;stkvar	_c @ sp[(0)+-2]
 17685                           
 17686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17687                           ;incstack = 0
 17688 ;; hardware stack exceeded
 17689  01B3E4  0EFE               	movlw	-2
 17690  01B3E6  50E3               	movf	plusw1,w,c
 17691  01B3E8  0FBF               	addlw	191
 17692  01B3EA  6E30               	movwf	(btemp+10)^0,c
 17693  01B3EC  0EFF               	movlw	-1
 17694  01B3EE  006F FF8C  F031    	movff	plusw1,btemp+11
 17695  01B3F4  0EFF               	movlw	255
 17696  01B3F6  2231               	addwfc	(btemp+11)^0,f,c
 17697  01B3F8  5031               	movf	(btemp+11)^0,w,c
 17698  01B3FA  E106               	bnz	u5400
 17699  01B3FC  0E1A               	movlw	26
 17700  01B3FE  5C30               	subwf	(btemp+10)^0,w,c
 17701  01B400  B0D8               	btfsc	status,0,c
 17702  01B402  D002               	goto	u5400
 17703  01B404  0E01               	movlw	1
 17704  01B406  D001               	goto	u5410
 17705  01B408                     u5400:
 17706  01B408  0E00               	movlw	0
 17707  01B40A                     u5410:
 17708  01B40A  6E26               	movwf	btemp^0,c
 17709  01B40C  6A27               	clrf	(btemp+1)^0,c
 17710                           
 17711                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17712  01B40E  52E5               	movf	postdec1,f,c
 17713  01B410  52E5               	movf	postdec1,f,c
 17714  01B412  0012               	return		;funcret
 17715  01B414                     __end_of_isupper:
 17716                           	opt callstack 0
 17717                           
 17718 ;; *************** function _strcpy *****************
 17719 ;; Defined at:
 17720 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  dest            2  [STACK] PTR unsigned char 
 17723 ;;		 -> dbuf(80), 
 17724 ;;  src             2  [STACK] PTR const unsigned char 
 17725 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17726 ;;		 -> dbuf(80), 
 17727 ;; Auto vars:     Size  Location     Type
 17728 ;;  d               2  [STACK] PTR unsigned char 
 17729 ;;		 -> dbuf(80), 
 17730 ;;  s               2  [STACK] PTR const unsigned char 
 17731 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17732 ;;		 -> dbuf(80), 
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  2  [STACK] PTR unsigned char 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17746 ;;Total ram usage:        0 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:   15
 17749 ;; This function calls:
 17750 ;;		Nothing
 17751 ;; This function is called by:
 17752 ;;		_efgtoa
 17753 ;; This function uses a reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text58
 17757  019D12                     __ptext58:
 17758                           	opt callstack 0
 17759  019D12                     _strcpy:
 17760                           	opt callstack 0
 17761                           
 17762                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17763  019D12  52E6               	movf	postinc1,f,c
 17764  019D14  52E6               	movf	postinc1,f,c
 17765  019D16  52E6               	movf	postinc1,f,c
 17766  019D18  52E6               	movf	postinc1,f,c
 17767                           
 17768                           ;stkvar	_src @ sp[(-4)+-4]
 17769                           
 17770                           ;incstack = 0
 17771 ;; hardware stack exceeded
 17772  019D1A  0EF8               	movlw	-8
 17773  019D1C  006F FF8C  F030    	movff	plusw1,btemp+10
 17774  019D22  0EF9               	movlw	-7
 17775  019D24  006F FF8C  F031    	movff	plusw1,btemp+11
 17776                           
 17777                           ;stkvar	_s @ sp[(-4)+2]
 17778  019D2A  0EFF               	movlw	-1
 17779  019D2C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17780  019D32  0EFE               	movlw	-2
 17781  019D34  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17782                           
 17783                           ;stkvar	_dest @ sp[(-4)+-2]
 17784  019D3A  0EFA               	movlw	-6
 17785  019D3C  006F FF8C  F030    	movff	plusw1,btemp+10
 17786  019D42  0EFB               	movlw	-5
 17787  019D44  006F FF8C  F031    	movff	plusw1,btemp+11
 17788                           
 17789                           ;stkvar	_d @ sp[(-4)+0]
 17790  019D4A  0EFD               	movlw	-3
 17791  019D4C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17792  019D52  0EFC               	movlw	-4
 17793  019D54  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17794  019D5A                     l11627:
 17795                           
 17796                           ;stkvar	_s @ sp[(-4)+2]
 17797  019D5A  50E1               	movf	fsr1l,w,c
 17798  019D5C  0FFE               	addlw	-2
 17799  019D5E  6ED9               	movwf	fsr2l,c
 17800  019D60  50E2               	movf	fsr1h,w,c
 17801  019D62  6EDA               	movwf	fsr2h,c
 17802  019D64  0EFF               	movlw	255
 17803  019D66  22DA               	addwfc	fsr2h,f,c
 17804  019D68  006F FF7C  F030    	movff	indf2,btemp+10
 17805  019D6E  0E01               	movlw	1
 17806  019D70  26DE               	addwf	postinc2,f,c
 17807  019D72  006F FF7C  F031    	movff	indf2,btemp+11
 17808  019D78  0E00               	movlw	0
 17809  019D7A  22DD               	addwfc	postdec2,f,c
 17810  019D7C  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 17811  019D82  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 17812  019D88  0E00               	movlw	low (__mediumconst shr (0+16))
 17813  019D8A  6EF8               	movwf	tblptru,c
 17814                           
 17815                           ;stkvar	_d @ sp[(-4)+0]
 17816  019D8C  50E1               	movf	fsr1l,w,c
 17817  019D8E  0FFC               	addlw	-4
 17818  019D90  6ED9               	movwf	fsr2l,c
 17819  019D92  50E2               	movf	fsr1h,w,c
 17820  019D94  6EDA               	movwf	fsr2h,c
 17821  019D96  0EFF               	movlw	255
 17822  019D98  22DA               	addwfc	fsr2h,f,c
 17823  019D9A  006F FF7C  F030    	movff	indf2,btemp+10
 17824  019DA0  0E01               	movlw	1
 17825  019DA2  26DE               	addwf	postinc2,f,c
 17826  019DA4  006F FF7C  F031    	movff	indf2,btemp+11
 17827  019DAA  0E00               	movlw	0
 17828  019DAC  22DD               	addwfc	postdec2,f,c
 17829  019DAE  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 17830  019DB4  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 17831  019DBA  0E1F               	movlw	(high __ramtop+-1)
 17832  019DBC  64F7               	cpfsgt	tblptrh,c
 17833  019DBE  D003               	bra	u10707
 17834  019DC0  0008               	tblrd		*
 17835  019DC2  50F5               	movf	tablat,w,c
 17836  019DC4  D007               	bra	u10700
 17837  019DC6                     u10707:
 17838  019DC6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17839  019DCC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17840  019DD2  50EF               	movf	indf0,w,c
 17841  019DD4                     u10700:
 17842  019DD4  6EDF               	movwf	indf2,c
 17843  019DD6  50DF               	movf	indf2,w,c
 17844  019DD8  A4D8               	btfss	status,2,c
 17845  019DDA  D7BF               	goto	l11627
 17846                           
 17847                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17848  019DDC  0EF8               	movlw	248
 17849  019DDE  26E1               	addwf	fsr1l,f,c
 17850  019DE0  0EFF               	movlw	255
 17851  019DE2  22E2               	addwfc	fsr1h,f,c
 17852  019DE4  0012               	return		;funcret
 17853  019DE6                     __end_of_strcpy:
 17854                           	opt callstack 0
 17855                           
 17856 ;; *************** function _floorf *****************
 17857 ;; Defined at:
 17858 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;  x               4  [STACK] float 
 17861 ;; Auto vars:     Size  Location     Type
 17862 ;;  u               4  [STACK] struct .
 17863 ;;  m               4  [STACK] unsigned long 
 17864 ;;  e               2  [STACK] int 
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  4  [STACK] float 
 17867 ;; Registers used:
 17868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17878 ;;Total ram usage:        0 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:   15
 17881 ;; This function calls:
 17882 ;;		Nothing
 17883 ;; This function is called by:
 17884 ;;		_efgtoa
 17885 ;; This function uses a reentrant model
 17886 ;;
 17887                           
 17888                           	psect	text59
 17889  016142                     __ptext59:
 17890                           	opt callstack 0
 17891  016142                     _floorf:
 17892                           	opt callstack 0
 17893                           
 17894                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17895  016142  0E0A               	movlw	10
 17896  016144  26E1               	addwf	fsr1l,f,c
 17897  016146  0E00               	movlw	0
 17898  016148  22E2               	addwfc	fsr1h,f,c
 17899                           
 17900                           ;incstack = 0
 17901 ;; hardware stack exceeded
 17902  01614A  0060  F1C8  F02E   	movff	floorf@F524,btemp+8
 17903  016150  0060  F1CC  F02F   	movff	floorf@F524+1,btemp+9
 17904  016156  0060  F1D0  F030   	movff	floorf@F524+2,btemp+10
 17905  01615C  0060  F1D4  F031   	movff	floorf@F524+3,btemp+11
 17906                           
 17907                           ;stkvar	_u @ sp[(-10)+0]
 17908  016162  0EF6               	movlw	-10
 17909  016164  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17910  01616A  0EF7               	movlw	-9
 17911  01616C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17912  016172  0EF8               	movlw	-8
 17913  016174  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17914  01617A  0EF9               	movlw	-7
 17915  01617C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17916                           
 17917                           ;stkvar	_x @ sp[(-10)+-4]
 17918  016182  0EF2               	movlw	-14
 17919  016184  006F FF8C  F02E    	movff	plusw1,btemp+8
 17920  01618A  0EF3               	movlw	-13
 17921  01618C  006F FF8C  F02F    	movff	plusw1,btemp+9
 17922  016192  0EF4               	movlw	-12
 17923  016194  006F FF8C  F030    	movff	plusw1,btemp+10
 17924  01619A  0EF5               	movlw	-11
 17925  01619C  006F FF8C  F031    	movff	plusw1,btemp+11
 17926                           
 17927                           ;stkvar	_u @ sp[(-10)+0]
 17928  0161A2  0EF6               	movlw	-10
 17929  0161A4  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17930  0161AA  0EF7               	movlw	-9
 17931  0161AC  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17932  0161B2  0EF8               	movlw	-8
 17933  0161B4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17934  0161BA  0EF9               	movlw	-7
 17935  0161BC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17936  0161C2  0E81               	movlw	129
 17937  0161C4  6E30               	movwf	(btemp+10)^0,c
 17938  0161C6  0EFF               	movlw	255
 17939  0161C8  6E31               	movwf	(btemp+11)^0,c
 17940                           
 17941                           ;stkvar	_u @ sp[(-10)+0]
 17942  0161CA  0EF6               	movlw	-10
 17943  0161CC  006F FF8C  F02A    	movff	plusw1,btemp+4
 17944  0161D2  0EF7               	movlw	-9
 17945  0161D4  006F FF8C  F02B    	movff	plusw1,btemp+5
 17946  0161DA  0EF8               	movlw	-8
 17947  0161DC  006F FF8C  F02C    	movff	plusw1,btemp+6
 17948  0161E2  0EF9               	movlw	-7
 17949  0161E4  006F FF8C  F02D    	movff	plusw1,btemp+7
 17950  0161EA  0E18               	movlw	24
 17951  0161EC  D005               	goto	u6030
 17952  0161EE                     u6035:
 17953  0161EE  90D8               	bcf	status,0,c
 17954  0161F0  322D               	rrcf	(btemp+7)^0,f,c
 17955  0161F2  322C               	rrcf	(btemp+6)^0,f,c
 17956  0161F4  322B               	rrcf	(btemp+5)^0,f,c
 17957  0161F6  322A               	rrcf	(btemp+4)^0,f,c
 17958  0161F8                     u6030:
 17959  0161F8  2EE8               	decfsz	wreg,f,c
 17960  0161FA  D7F9               	goto	u6035
 17961  0161FC  0060  F0A8  F02E   	movff	btemp+4,btemp+8
 17962  016202  0060  F0AC  F02F   	movff	btemp+5,btemp+9
 17963  016208  0EFF               	movlw	255
 17964  01620A  162E               	andwf	(btemp+8)^0,f,c
 17965  01620C  0E00               	movlw	0
 17966  01620E  162F               	andwf	(btemp+9)^0,f,c
 17967  016210  5030               	movf	(btemp+10)^0,w,c
 17968  016212  262E               	addwf	(btemp+8)^0,f,c
 17969  016214  5031               	movf	(btemp+11)^0,w,c
 17970  016216  222F               	addwfc	(btemp+9)^0,f,c
 17971                           
 17972                           ;stkvar	_e @ sp[(-10)+8]
 17973  016218  0EFE               	movlw	-2
 17974  01621A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17975  016220  0EFF               	movlw	-1
 17976  016222  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17977                           
 17978                           ;stkvar	_e @ sp[(-10)+8]
 17979  016228  0EFF               	movlw	-1
 17980  01622A  BEE3               	btfsc	plusw1,7,c
 17981  01622C  D019               	goto	l7927
 17982  01622E  0EFF               	movlw	-1
 17983  016230  50E3               	movf	plusw1,w,c
 17984  016232  E108               	bnz	u6040
 17985  016234  0EFE               	movlw	-2
 17986  016236  006F FF8C  F026    	movff	plusw1,btemp
 17987  01623C  0E17               	movlw	23
 17988  01623E  5E26               	subwf	btemp^0,f,c
 17989  016240  A0D8               	btfss	status,0,c
 17990  016242  D00E               	goto	l7927
 17991  016244                     u6040:
 17992                           
 17993                           ;stkvar	_x @ sp[(-10)+-4]
 17994  016244  0EF2               	movlw	-14
 17995  016246  006F FF8C  F026    	movff	plusw1,btemp
 17996  01624C  0EF3               	movlw	-13
 17997  01624E  006F FF8C  F027    	movff	plusw1,btemp+1
 17998  016254  0EF4               	movlw	-12
 17999  016256  006F FF8C  F028    	movff	plusw1,btemp+2
 18000  01625C  0EF5               	movlw	-11
 18001  01625E  D11F               	goto	L20
 18002  016260                     l7927:
 18003                           
 18004                           ;stkvar	_e @ sp[(-10)+8]
 18005  016260  0EFF               	movlw	-1
 18006  016262  BEE3               	btfsc	plusw1,7,c
 18007  016264  D0B4               	goto	l7943
 18008                           
 18009                           ;stkvar	_e @ sp[(-10)+8]
 18010  016266  0EFE               	movlw	-2
 18011  016268  006F FF8C  F031    	movff	plusw1,btemp+11
 18012  01626E  0EFF               	movlw	255
 18013  016270  6E2A               	movwf	(btemp+4)^0,c
 18014  016272  0EFF               	movlw	255
 18015  016274  6E2B               	movwf	(btemp+5)^0,c
 18016  016276  0E7F               	movlw	127
 18017  016278  6E2C               	movwf	(btemp+6)^0,c
 18018  01627A  0E00               	movlw	0
 18019  01627C  6E2D               	movwf	(btemp+7)^0,c
 18020  01627E                     u6065:
 18021  01627E  6631               	tstfsz	(btemp+11)^0,c
 18022  016280  D001               	goto	u6066
 18023  016282  D007               	goto	u6067
 18024  016284                     u6066:
 18025  016284  342D               	rlcf	(btemp+7)^0,w,c
 18026  016286  322D               	rrcf	(btemp+7)^0,f,c
 18027  016288  322C               	rrcf	(btemp+6)^0,f,c
 18028  01628A  322B               	rrcf	(btemp+5)^0,f,c
 18029  01628C  322A               	rrcf	(btemp+4)^0,f,c
 18030  01628E  2E31               	decfsz	(btemp+11)^0,f,c
 18031  016290  D7F6               	goto	u6065
 18032  016292                     u6067:
 18033                           
 18034                           ;stkvar	_m @ sp[(-10)+4]
 18035  016292  0EFA               	movlw	-6
 18036  016294  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 18037  01629A  0EFB               	movlw	-5
 18038  01629C  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 18039  0162A2  0EFC               	movlw	-4
 18040  0162A4  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 18041  0162AA  0EFD               	movlw	-3
 18042  0162AC  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 18043                           
 18044                           ;stkvar	_m @ sp[(-10)+4]
 18045                           ;stkvar	_u @ sp[(-10)+0]
 18046  0162B2  0EF6               	movlw	-10
 18047  0162B4  006F FF8C  F02E    	movff	plusw1,btemp+8
 18048  0162BA  0EF7               	movlw	-9
 18049  0162BC  006F FF8C  F02F    	movff	plusw1,btemp+9
 18050  0162C2  0EF8               	movlw	-8
 18051  0162C4  006F FF8C  F030    	movff	plusw1,btemp+10
 18052  0162CA  0EF9               	movlw	-7
 18053  0162CC  006F FF8C  F031    	movff	plusw1,btemp+11
 18054  0162D2  0EFA               	movlw	-6
 18055  0162D4  50E3               	movf	plusw1,w,c
 18056  0162D6  162E               	andwf	(btemp+8)^0,f,c
 18057  0162D8  0EFB               	movlw	-5
 18058  0162DA  50E3               	movf	plusw1,w,c
 18059  0162DC  162F               	andwf	(btemp+9)^0,f,c
 18060  0162DE  0EFC               	movlw	-4
 18061  0162E0  50E3               	movf	plusw1,w,c
 18062  0162E2  1630               	andwf	(btemp+10)^0,f,c
 18063  0162E4  0EFD               	movlw	-3
 18064  0162E6  50E3               	movf	plusw1,w,c
 18065  0162E8  1631               	andwf	(btemp+11)^0,f,c
 18066  0162EA  502E               	movf	(btemp+8)^0,w,c
 18067  0162EC  102F               	iorwf	(btemp+9)^0,w,c
 18068  0162EE  1030               	iorwf	(btemp+10)^0,w,c
 18069  0162F0  1031               	iorwf	(btemp+11)^0,w,c
 18070  0162F2  B4D8               	btfsc	status,2,c
 18071  0162F4  D7A7               	goto	u6040
 18072                           
 18073                           ;stkvar	_u @ sp[(-10)+0]
 18074  0162F6  0EF6               	movlw	-10
 18075  0162F8  006F FF8C  F02E    	movff	plusw1,btemp+8
 18076  0162FE  0EF7               	movlw	-9
 18077  016300  006F FF8C  F02F    	movff	plusw1,btemp+9
 18078  016306  0EF8               	movlw	-8
 18079  016308  006F FF8C  F030    	movff	plusw1,btemp+10
 18080  01630E  0EF9               	movlw	-7
 18081  016310  006F FF8C  F031    	movff	plusw1,btemp+11
 18082  016316  0E20               	movlw	32
 18083  016318  D005               	goto	u6080
 18084  01631A                     u6085:
 18085  01631A  90D8               	bcf	status,0,c
 18086  01631C  3231               	rrcf	(btemp+11)^0,f,c
 18087  01631E  3230               	rrcf	(btemp+10)^0,f,c
 18088  016320  322F               	rrcf	(btemp+9)^0,f,c
 18089  016322  322E               	rrcf	(btemp+8)^0,f,c
 18090  016324                     u6080:
 18091  016324  2EE8               	decfsz	wreg,f,c
 18092  016326  D7F9               	goto	u6085
 18093  016328  502E               	movf	(btemp+8)^0,w,c
 18094  01632A  B4D8               	btfsc	status,2,c
 18095  01632C  D028               	goto	l7941
 18096                           
 18097                           ;stkvar	_m @ sp[(-10)+4]
 18098                           ;stkvar	_u @ sp[(-10)+0]
 18099  01632E  0EF6               	movlw	-10
 18100  016330  50E3               	movf	plusw1,w,c
 18101  016332  6E26               	movwf	btemp^0,c
 18102  016334  0EFA               	movlw	-6
 18103  016336  50E3               	movf	plusw1,w,c
 18104  016338  2626               	addwf	btemp^0,f,c
 18105  01633A  0EF6               	movlw	-10
 18106  01633C  0060  F09B  FFE3   	movff	btemp,plusw1
 18107  016342  0EF7               	movlw	-9
 18108  016344  50E3               	movf	plusw1,w,c
 18109  016346  6E26               	movwf	btemp^0,c
 18110  016348  0EFB               	movlw	-5
 18111  01634A  50E3               	movf	plusw1,w,c
 18112  01634C  2226               	addwfc	btemp^0,f,c
 18113  01634E  0EF7               	movlw	-9
 18114  016350  0060  F09B  FFE3   	movff	btemp,plusw1
 18115  016356  0EF8               	movlw	-8
 18116  016358  50E3               	movf	plusw1,w,c
 18117  01635A  6E26               	movwf	btemp^0,c
 18118  01635C  0EFC               	movlw	-4
 18119  01635E  50E3               	movf	plusw1,w,c
 18120  016360  2226               	addwfc	btemp^0,f,c
 18121  016362  0EF8               	movlw	-8
 18122  016364  0060  F09B  FFE3   	movff	btemp,plusw1
 18123  01636A  0EF9               	movlw	-7
 18124  01636C  50E3               	movf	plusw1,w,c
 18125  01636E  6E26               	movwf	btemp^0,c
 18126  016370  0EFD               	movlw	-3
 18127  016372  50E3               	movf	plusw1,w,c
 18128  016374  2226               	addwfc	btemp^0,f,c
 18129  016376  0EF9               	movlw	-7
 18130  016378  0060  F09B  FFE3   	movff	btemp,plusw1
 18131  01637E                     l7941:
 18132                           
 18133                           ;stkvar	_m @ sp[(-10)+4]
 18134  01637E  0EFA               	movlw	-6
 18135  016380  006F FF8C  F02E    	movff	plusw1,btemp+8
 18136  016386  0EFB               	movlw	-5
 18137  016388  006F FF8C  F02F    	movff	plusw1,btemp+9
 18138  01638E  0EFC               	movlw	-4
 18139  016390  006F FF8C  F030    	movff	plusw1,btemp+10
 18140  016396  0EFD               	movlw	-3
 18141  016398  006F FF8C  F031    	movff	plusw1,btemp+11
 18142  01639E  1C2E               	comf	(btemp+8)^0,w,c
 18143  0163A0  6E2A               	movwf	(btemp+4)^0,c
 18144  0163A2  1C2F               	comf	(btemp+9)^0,w,c
 18145  0163A4  6E2B               	movwf	(btemp+5)^0,c
 18146  0163A6  1C30               	comf	(btemp+10)^0,w,c
 18147  0163A8  6E2C               	movwf	(btemp+6)^0,c
 18148  0163AA  1C31               	comf	(btemp+11)^0,w,c
 18149  0163AC  6E2D               	movwf	(btemp+7)^0,c
 18150                           
 18151                           ;stkvar	_u @ sp[(-10)+0]
 18152  0163AE  50E1               	movf	fsr1l,w,c
 18153  0163B0  0FF6               	addlw	-10
 18154  0163B2  6ED9               	movwf	fsr2l,c
 18155  0163B4  50E2               	movf	fsr1h,w,c
 18156  0163B6  6EDA               	movwf	fsr2h,c
 18157  0163B8  0EFF               	movlw	255
 18158  0163BA  22DA               	addwfc	fsr2h,f,c
 18159  0163BC  502A               	movf	(btemp+4)^0,w,c
 18160  0163BE  16DE               	andwf	postinc2,f,c
 18161  0163C0  502B               	movf	(btemp+5)^0,w,c
 18162  0163C2  16DE               	andwf	postinc2,f,c
 18163  0163C4  502C               	movf	(btemp+6)^0,w,c
 18164  0163C6  16DE               	andwf	postinc2,f,c
 18165  0163C8  502D               	movf	(btemp+7)^0,w,c
 18166  0163CA  16DE               	andwf	postinc2,f,c
 18167  0163CC  D05B               	goto	l7951
 18168  0163CE                     l7943:
 18169                           
 18170                           ;stkvar	_u @ sp[(-10)+0]
 18171  0163CE  0EF6               	movlw	-10
 18172  0163D0  006F FF8C  F02E    	movff	plusw1,btemp+8
 18173  0163D6  0EF7               	movlw	-9
 18174  0163D8  006F FF8C  F02F    	movff	plusw1,btemp+9
 18175  0163DE  0EF8               	movlw	-8
 18176  0163E0  006F FF8C  F030    	movff	plusw1,btemp+10
 18177  0163E6  0EF9               	movlw	-7
 18178  0163E8  006F FF8C  F031    	movff	plusw1,btemp+11
 18179  0163EE  0E20               	movlw	32
 18180  0163F0  D005               	goto	u6100
 18181  0163F2                     u6105:
 18182  0163F2  90D8               	bcf	status,0,c
 18183  0163F4  3231               	rrcf	(btemp+11)^0,f,c
 18184  0163F6  3230               	rrcf	(btemp+10)^0,f,c
 18185  0163F8  322F               	rrcf	(btemp+9)^0,f,c
 18186  0163FA  322E               	rrcf	(btemp+8)^0,f,c
 18187  0163FC                     u6100:
 18188  0163FC  2EE8               	decfsz	wreg,f,c
 18189  0163FE  D7F9               	goto	u6105
 18190  016400  662E               	tstfsz	(btemp+8)^0,c
 18191  016402  D009               	goto	l7947
 18192                           
 18193                           ;stkvar	_u @ sp[(-10)+0]
 18194  016404  0EF6               	movlw	-10
 18195  016406  6AE3               	clrf	plusw1,c
 18196  016408  0EF7               	movlw	-9
 18197  01640A  6AE3               	clrf	plusw1,c
 18198  01640C  0EF8               	movlw	-8
 18199  01640E  6AE3               	clrf	plusw1,c
 18200  016410  0EF9               	movlw	-7
 18201  016412  6AE3               	clrf	plusw1,c
 18202  016414  D037               	goto	l7951
 18203  016416                     l7947:
 18204                           
 18205                           ;stkvar	_u @ sp[(-10)+0]
 18206  016416  0EF6               	movlw	-10
 18207  016418  006F FF8C  F02E    	movff	plusw1,btemp+8
 18208  01641E  0EF7               	movlw	-9
 18209  016420  006F FF8C  F02F    	movff	plusw1,btemp+9
 18210  016426  0EF8               	movlw	-8
 18211  016428  006F FF8C  F030    	movff	plusw1,btemp+10
 18212  01642E  0EF9               	movlw	-7
 18213  016430  006F FF8C  F031    	movff	plusw1,btemp+11
 18214  016436  90D8               	bcf	status,0,c
 18215  016438  342E               	rlcf	(btemp+8)^0,w,c
 18216  01643A  6E2A               	movwf	(btemp+4)^0,c
 18217  01643C  342F               	rlcf	(btemp+9)^0,w,c
 18218  01643E  6E2B               	movwf	(btemp+5)^0,c
 18219  016440  3430               	rlcf	(btemp+10)^0,w,c
 18220  016442  6E2C               	movwf	(btemp+6)^0,c
 18221  016444  3431               	rlcf	(btemp+11)^0,w,c
 18222  016446  6E2D               	movwf	(btemp+7)^0,c
 18223  016448  502A               	movf	(btemp+4)^0,w,c
 18224  01644A  102B               	iorwf	(btemp+5)^0,w,c
 18225  01644C  102C               	iorwf	(btemp+6)^0,w,c
 18226  01644E  102D               	iorwf	(btemp+7)^0,w,c
 18227  016450  B4D8               	btfsc	status,2,c
 18228  016452  D018               	goto	l7951
 18229  016454  0E00               	movlw	0
 18230  016456  6E2E               	movwf	(btemp+8)^0,c
 18231  016458  0E00               	movlw	0
 18232  01645A  6E2F               	movwf	(btemp+9)^0,c
 18233  01645C  0E80               	movlw	128
 18234  01645E  6E30               	movwf	(btemp+10)^0,c
 18235  016460  0EBF               	movlw	191
 18236  016462  6E31               	movwf	(btemp+11)^0,c
 18237                           
 18238                           ;stkvar	_u @ sp[(-10)+0]
 18239  016464  0EF6               	movlw	-10
 18240  016466  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18241  01646C  0EF7               	movlw	-9
 18242  01646E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18243  016474  0EF8               	movlw	-8
 18244  016476  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18245  01647C  0EF9               	movlw	-7
 18246  01647E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18247  016484                     l7951:
 18248                           
 18249                           ;stkvar	_u @ sp[(-10)+0]
 18250  016484  0EF6               	movlw	-10
 18251  016486  006F FF8C  F026    	movff	plusw1,btemp
 18252  01648C  0EF7               	movlw	-9
 18253  01648E  006F FF8C  F027    	movff	plusw1,btemp+1
 18254  016494  0EF8               	movlw	-8
 18255  016496  006F FF8C  F028    	movff	plusw1,btemp+2
 18256  01649C  0EF9               	movlw	-7
 18257  01649E                     L20:
 18258  01649E  006F FF8C  F029    	movff	plusw1,btemp+3
 18259                           
 18260                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18261  0164A4  0EF2               	movlw	242
 18262  0164A6  26E1               	addwf	fsr1l,f,c
 18263  0164A8  0EFF               	movlw	255
 18264  0164AA  22E2               	addwfc	fsr1h,f,c
 18265  0164AC  0012               	return		;funcret
 18266  0164AE                     __end_of_floorf:
 18267                           	opt callstack 0
 18268                           
 18269 ;; *************** function ___fpclassifyf *****************
 18270 ;; Defined at:
 18271 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  x               4  [STACK] float 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  u               4  [STACK] struct .
 18276 ;;  e               2  [STACK] int 
 18277 ;; Return value:  Size  Location     Type
 18278 ;;                  2  [STACK] int 
 18279 ;; Registers used:
 18280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18281 ;; Tracked objects:
 18282 ;;		On entry : 0/0
 18283 ;;		On exit  : 0/0
 18284 ;;		Unchanged: 0/0
 18285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18290 ;;Total ram usage:        0 bytes
 18291 ;; Hardware stack levels used:    1
 18292 ;; Hardware stack levels required when called:   15
 18293 ;; This function calls:
 18294 ;;		Nothing
 18295 ;; This function is called by:
 18296 ;;		_efgtoa
 18297 ;; This function uses a reentrant model
 18298 ;;
 18299                           
 18300                           	psect	text60
 18301  0182B6                     __ptext60:
 18302                           	opt callstack 0
 18303  0182B6                     ___fpclassifyf:
 18304                           	opt callstack 0
 18305                           
 18306                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18307  0182B6  0E06               	movlw	6
 18308  0182B8  26E1               	addwf	fsr1l,f,c
 18309  0182BA  0E00               	movlw	0
 18310  0182BC  22E2               	addwfc	fsr1h,f,c
 18311                           
 18312                           ;incstack = 0
 18313 ;; hardware stack exceeded
 18314  0182BE  0060  F1E8  F02E   	movff	___fpclassifyf@F463,btemp+8
 18315  0182C4  0060  F1EC  F02F   	movff	___fpclassifyf@F463+1,btemp+9
 18316  0182CA  0060  F1F0  F030   	movff	___fpclassifyf@F463+2,btemp+10
 18317  0182D0  0060  F1F4  F031   	movff	___fpclassifyf@F463+3,btemp+11
 18318                           
 18319                           ;stkvar	_u @ sp[(-6)+0]
 18320  0182D6  0EFA               	movlw	-6
 18321  0182D8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18322  0182DE  0EFB               	movlw	-5
 18323  0182E0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18324  0182E6  0EFC               	movlw	-4
 18325  0182E8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18326  0182EE  0EFD               	movlw	-3
 18327  0182F0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18328                           
 18329                           ;stkvar	_x @ sp[(-6)+-4]
 18330  0182F6  0EF6               	movlw	-10
 18331  0182F8  006F FF8C  F02E    	movff	plusw1,btemp+8
 18332  0182FE  0EF7               	movlw	-9
 18333  018300  006F FF8C  F02F    	movff	plusw1,btemp+9
 18334  018306  0EF8               	movlw	-8
 18335  018308  006F FF8C  F030    	movff	plusw1,btemp+10
 18336  01830E  0EF9               	movlw	-7
 18337  018310  006F FF8C  F031    	movff	plusw1,btemp+11
 18338                           
 18339                           ;stkvar	_u @ sp[(-6)+0]
 18340  018316  0EFA               	movlw	-6
 18341  018318  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18342  01831E  0EFB               	movlw	-5
 18343  018320  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18344  018326  0EFC               	movlw	-4
 18345  018328  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18346  01832E  0EFD               	movlw	-3
 18347  018330  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18348                           
 18349                           ;stkvar	_u @ sp[(-6)+0]
 18350  018336  0EFA               	movlw	-6
 18351  018338  006F FF8C  F02E    	movff	plusw1,btemp+8
 18352  01833E  0EFB               	movlw	-5
 18353  018340  006F FF8C  F02F    	movff	plusw1,btemp+9
 18354  018346  0EFC               	movlw	-4
 18355  018348  006F FF8C  F030    	movff	plusw1,btemp+10
 18356  01834E  0EFD               	movlw	-3
 18357  018350  006F FF8C  F031    	movff	plusw1,btemp+11
 18358  018356  0E18               	movlw	24
 18359  018358  D005               	goto	u5910
 18360  01835A                     u5915:
 18361  01835A  90D8               	bcf	status,0,c
 18362  01835C  3231               	rrcf	(btemp+11)^0,f,c
 18363  01835E  3230               	rrcf	(btemp+10)^0,f,c
 18364  018360  322F               	rrcf	(btemp+9)^0,f,c
 18365  018362  322E               	rrcf	(btemp+8)^0,f,c
 18366  018364                     u5910:
 18367  018364  2EE8               	decfsz	wreg,f,c
 18368  018366  D7F9               	goto	u5915
 18369  018368  0060  F0B8  F02C   	movff	btemp+8,btemp+6
 18370  01836E  0060  F0BC  F02D   	movff	btemp+9,btemp+7
 18371  018374  0EFF               	movlw	255
 18372  018376  162C               	andwf	(btemp+6)^0,f,c
 18373  018378  0E00               	movlw	0
 18374  01837A  162D               	andwf	(btemp+7)^0,f,c
 18375                           
 18376                           ;stkvar	_e @ sp[(-6)+4]
 18377  01837C  0EFE               	movlw	-2
 18378  01837E  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 18379  018384  0EFF               	movlw	-1
 18380  018386  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 18381                           
 18382                           ;stkvar	_e @ sp[(-6)+4]
 18383  01838C  0EFE               	movlw	-2
 18384  01838E  006F FF8C  F026    	movff	plusw1,btemp
 18385  018394  0EFF               	movlw	-1
 18386  018396  50E3               	movf	plusw1,w,c
 18387  018398  1026               	iorwf	btemp^0,w,c
 18388  01839A  A4D8               	btfss	status,2,c
 18389  01839C  D023               	goto	l7889
 18390                           
 18391                           ;stkvar	_u @ sp[(-6)+0]
 18392  01839E  0EFA               	movlw	-6
 18393  0183A0  006F FF8C  F02E    	movff	plusw1,btemp+8
 18394  0183A6  0EFB               	movlw	-5
 18395  0183A8  006F FF8C  F02F    	movff	plusw1,btemp+9
 18396  0183AE  0EFC               	movlw	-4
 18397  0183B0  006F FF8C  F030    	movff	plusw1,btemp+10
 18398  0183B6  0EFD               	movlw	-3
 18399  0183B8  006F FF8C  F031    	movff	plusw1,btemp+11
 18400  0183BE  90D8               	bcf	status,0,c
 18401  0183C0  342E               	rlcf	(btemp+8)^0,w,c
 18402  0183C2  6E2A               	movwf	(btemp+4)^0,c
 18403  0183C4  342F               	rlcf	(btemp+9)^0,w,c
 18404  0183C6  6E2B               	movwf	(btemp+5)^0,c
 18405  0183C8  3430               	rlcf	(btemp+10)^0,w,c
 18406  0183CA  6E2C               	movwf	(btemp+6)^0,c
 18407  0183CC  3431               	rlcf	(btemp+11)^0,w,c
 18408  0183CE  6E2D               	movwf	(btemp+7)^0,c
 18409  0183D0  502A               	movf	(btemp+4)^0,w,c
 18410  0183D2  102B               	iorwf	(btemp+5)^0,w,c
 18411  0183D4  102C               	iorwf	(btemp+6)^0,w,c
 18412  0183D6  102D               	iorwf	(btemp+7)^0,w,c
 18413  0183D8  A4D8               	btfss	status,2,c
 18414  0183DA  D002               	goto	l7885
 18415  0183DC  0E02               	movlw	2
 18416  0183DE  D02E               	goto	L21
 18417  0183E0                     l7885:
 18418  0183E0  0E03               	movlw	3
 18419  0183E2  D02C               	goto	L21
 18420  0183E4                     l7889:
 18421                           
 18422                           ;stkvar	_e @ sp[(-6)+4]
 18423  0183E4  0EFE               	movlw	-2
 18424  0183E6  28E3               	incf	plusw1,w,c
 18425  0183E8  E128               	bnz	l7895
 18426  0183EA  0EFF               	movlw	-1
 18427  0183EC  50E3               	movf	plusw1,w,c
 18428  0183EE  A4D8               	btfss	status,2,c
 18429  0183F0  D024               	goto	l7895
 18430                           
 18431                           ;stkvar	_u @ sp[(-6)+0]
 18432  0183F2  0EFA               	movlw	-6
 18433  0183F4  006F FF8C  F02E    	movff	plusw1,btemp+8
 18434  0183FA  0EFB               	movlw	-5
 18435  0183FC  006F FF8C  F02F    	movff	plusw1,btemp+9
 18436  018402  0EFC               	movlw	-4
 18437  018404  006F FF8C  F030    	movff	plusw1,btemp+10
 18438  01840A  0EFD               	movlw	-3
 18439  01840C  006F FF8C  F031    	movff	plusw1,btemp+11
 18440  018412  0E09               	movlw	9
 18441  018414                     u5955:
 18442  018414  90D8               	bcf	status,0,c
 18443  018416  362E               	rlcf	(btemp+8)^0,f,c
 18444  018418  362F               	rlcf	(btemp+9)^0,f,c
 18445  01841A  3630               	rlcf	(btemp+10)^0,f,c
 18446  01841C  3631               	rlcf	(btemp+11)^0,f,c
 18447  01841E  2EE8               	decfsz	wreg,f,c
 18448  018420  D7F9               	goto	u5955
 18449  018422  502E               	movf	(btemp+8)^0,w,c
 18450  018424  102F               	iorwf	(btemp+9)^0,w,c
 18451  018426  1030               	iorwf	(btemp+10)^0,w,c
 18452  018428  1031               	iorwf	(btemp+11)^0,w,c
 18453  01842A  A4D8               	btfss	status,2,c
 18454  01842C  D002               	goto	u5960
 18455  01842E  0E01               	movlw	1
 18456  018430  D001               	goto	u5970
 18457  018432                     u5960:
 18458  018432  0E00               	movlw	0
 18459  018434                     u5970:
 18460  018434  6E26               	movwf	btemp^0,c
 18461  018436  6A27               	clrf	(btemp+1)^0,c
 18462  018438  D004               	goto	l3077
 18463  01843A                     l7895:
 18464  01843A  0E04               	movlw	4
 18465  01843C                     L21:
 18466  01843C  6E26               	movwf	btemp^0,c
 18467  01843E  0E00               	movlw	0
 18468  018440  6E27               	movwf	(btemp+1)^0,c
 18469  018442                     l3077:
 18470                           
 18471                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18472  018442  0EF6               	movlw	246
 18473  018444  26E1               	addwf	fsr1l,f,c
 18474  018446  0EFF               	movlw	255
 18475  018448  22E2               	addwfc	fsr1h,f,c
 18476  01844A  0012               	return		;funcret
 18477  01844C                     __end_of___fpclassifyf:
 18478                           	opt callstack 0
 18479                           
 18480 ;; *************** function ___fltol *****************
 18481 ;; Defined at:
 18482 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18483 ;; Parameters:    Size  Location     Type
 18484 ;;  f1              4  [STACK] int 
 18485 ;; Auto vars:     Size  Location     Type
 18486 ;;  exp1            1  [STACK] unsigned char 
 18487 ;;  sign1           1  [STACK] unsigned char 
 18488 ;; Return value:  Size  Location     Type
 18489 ;;                  4  [STACK] long 
 18490 ;; Registers used:
 18491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18492 ;; Tracked objects:
 18493 ;;		On entry : 0/0
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18501 ;;Total ram usage:        0 bytes
 18502 ;; Hardware stack levels used:    1
 18503 ;; Hardware stack levels required when called:   15
 18504 ;; This function calls:
 18505 ;;		Nothing
 18506 ;; This function is called by:
 18507 ;;		_main
 18508 ;;		_calc_bsoc
 18509 ;;		_init_bsoc
 18510 ;;		_efgtoa
 18511 ;; This function uses a reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text61
 18515  0188C4                     __ptext61:
 18516                           	opt callstack 0
 18517  0188C4                     ___fltol:
 18518                           	opt callstack 0
 18519                           
 18520                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18521  0188C4  52E6               	movf	postinc1,f,c
 18522  0188C6  52E6               	movf	postinc1,f,c
 18523                           
 18524                           ;stkvar	_f1 @ sp[(-2)+-4]
 18525                           
 18526                           ;incstack = 0
 18527 ;; hardware stack exceeded
 18528  0188C8  0EFA               	movlw	-6
 18529  0188CA  006F FF8C  F02E    	movff	plusw1,btemp+8
 18530  0188D0  0EFB               	movlw	-5
 18531  0188D2  006F FF8C  F02F    	movff	plusw1,btemp+9
 18532  0188D8  0EFC               	movlw	-4
 18533  0188DA  006F FF8C  F030    	movff	plusw1,btemp+10
 18534  0188E0  0EFD               	movlw	-3
 18535  0188E2  006F FF8C  F031    	movff	plusw1,btemp+11
 18536  0188E8  0E18               	movlw	24
 18537  0188EA  D005               	goto	u7120
 18538  0188EC                     u7125:
 18539  0188EC  90D8               	bcf	status,0,c
 18540  0188EE  3231               	rrcf	(btemp+11)^0,f,c
 18541  0188F0  3230               	rrcf	(btemp+10)^0,f,c
 18542  0188F2  322F               	rrcf	(btemp+9)^0,f,c
 18543  0188F4  322E               	rrcf	(btemp+8)^0,f,c
 18544  0188F6                     u7120:
 18545  0188F6  2EE8               	decfsz	wreg,f,c
 18546  0188F8  D7F9               	goto	u7125
 18547                           
 18548                           ;stkvar	_exp1 @ sp[(-2)+0]
 18549  0188FA  0EFE               	movlw	-2
 18550  0188FC  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18551  018902  0EFE               	movlw	-2
 18552  018904  50E3               	movf	plusw1,w,c
 18553  018906  A4D8               	btfss	status,2,c
 18554  018908  D006               	goto	l8515
 18555  01890A                     u7130:
 18556  01890A  0E00               	movlw	0
 18557  01890C  6E26               	movwf	btemp^0,c
 18558  01890E  6A27               	clrf	(btemp+1)^0,c
 18559  018910  6A28               	clrf	(btemp+2)^0,c
 18560  018912  6A29               	clrf	(btemp+3)^0,c
 18561  018914  D08B               	goto	l2693
 18562  018916                     l8515:
 18563                           
 18564                           ;stkvar	_f1 @ sp[(-2)+-4]
 18565  018916  0EFA               	movlw	-6
 18566  018918  006F FF8C  F02E    	movff	plusw1,btemp+8
 18567  01891E  0EFB               	movlw	-5
 18568  018920  006F FF8C  F02F    	movff	plusw1,btemp+9
 18569  018926  0EFC               	movlw	-4
 18570  018928  006F FF8C  F030    	movff	plusw1,btemp+10
 18571  01892E  0EFD               	movlw	-3
 18572  018930  006F FF8C  F031    	movff	plusw1,btemp+11
 18573  018936  0E20               	movlw	32
 18574  018938  D005               	goto	u7140
 18575  01893A                     u7145:
 18576  01893A  90D8               	bcf	status,0,c
 18577  01893C  3231               	rrcf	(btemp+11)^0,f,c
 18578  01893E  3230               	rrcf	(btemp+10)^0,f,c
 18579  018940  322F               	rrcf	(btemp+9)^0,f,c
 18580  018942  322E               	rrcf	(btemp+8)^0,f,c
 18581  018944                     u7140:
 18582  018944  2EE8               	decfsz	wreg,f,c
 18583  018946  D7F9               	goto	u7145
 18584                           
 18585                           ;stkvar	_sign1 @ sp[(-2)+1]
 18586  018948  0EFF               	movlw	-1
 18587  01894A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18588                           
 18589                           ;stkvar	_f1 @ sp[(-2)+-4]
 18590  018950  0EFC               	movlw	-4
 18591  018952  8EE3               	bsf	plusw1,7,c
 18592                           
 18593                           ;stkvar	_f1 @ sp[(-2)+-4]
 18594  018954  50E1               	movf	fsr1l,w,c
 18595  018956  0FFA               	addlw	-6
 18596  018958  6ED9               	movwf	fsr2l,c
 18597  01895A  50E2               	movf	fsr1h,w,c
 18598  01895C  6EDA               	movwf	fsr2h,c
 18599  01895E  0EFF               	movlw	255
 18600  018960  22DA               	addwfc	fsr2h,f,c
 18601  018962  0EFF               	movlw	255
 18602  018964  16DE               	andwf	postinc2,f,c
 18603  018966  0EFF               	movlw	255
 18604  018968  16DE               	andwf	postinc2,f,c
 18605  01896A  0EFF               	movlw	255
 18606  01896C  16DE               	andwf	postinc2,f,c
 18607  01896E  0E00               	movlw	0
 18608  018970  16DE               	andwf	postinc2,f,c
 18609                           
 18610                           ;stkvar	_exp1 @ sp[(-2)+0]
 18611  018972  0EFE               	movlw	-2
 18612  018974  006F FF8C  F026    	movff	plusw1,btemp
 18613  01897A  0E96               	movlw	150
 18614  01897C  5E26               	subwf	btemp^0,f,c
 18615  01897E  0EFE               	movlw	-2
 18616  018980  0060  F09B  FFE3   	movff	btemp,plusw1
 18617                           
 18618                           ;stkvar	_exp1 @ sp[(-2)+0]
 18619  018986  0EFE               	movlw	-2
 18620  018988  AEE3               	btfss	plusw1,7,c
 18621  01898A  D014               	goto	l8533
 18622                           
 18623                           ;stkvar	_exp1 @ sp[(-2)+0]
 18624  01898C  0EFE               	movlw	-2
 18625  01898E  50E3               	movf	plusw1,w,c
 18626  018990  0A80               	xorlw	128
 18627  018992  0F97               	addlw	151
 18628  018994  A0D8               	btfss	status,0,c
 18629  018996  D7B9               	goto	u7130
 18630  018998                     l8531:
 18631                           
 18632                           ;stkvar	_f1 @ sp[(-2)+-4]
 18633  018998  90D8               	bcf	status,0,c
 18634  01899A  0EFD               	movlw	-3
 18635  01899C  32E3               	rrcf	plusw1,f,c
 18636  01899E  0EFC               	movlw	-4
 18637  0189A0  32E3               	rrcf	plusw1,f,c
 18638  0189A2  0EFB               	movlw	-5
 18639  0189A4  32E3               	rrcf	plusw1,f,c
 18640  0189A6  0EFA               	movlw	-6
 18641  0189A8  32E3               	rrcf	plusw1,f,c
 18642                           
 18643                           ;stkvar	_exp1 @ sp[(-2)+0]
 18644  0189AA  0EFE               	movlw	-2
 18645  0189AC  2AE3               	incf	plusw1,f,c
 18646  0189AE  B4D8               	btfsc	status,2,c
 18647  0189B0  D018               	goto	u7190
 18648  0189B2  D7F2               	goto	l8531
 18649  0189B4                     l8533:
 18650                           
 18651                           ;stkvar	_exp1 @ sp[(-2)+0]
 18652  0189B4  0EFE               	movlw	-2
 18653  0189B6  006F FF8C  F026    	movff	plusw1,btemp
 18654  0189BC  0E1F               	movlw	31
 18655  0189BE  6426               	cpfsgt	btemp^0,c
 18656  0189C0  D00C               	goto	l8541
 18657  0189C2  D7A3               	goto	u7130
 18658  0189C4                     l8539:
 18659                           
 18660                           ;stkvar	_f1 @ sp[(-2)+-4]
 18661  0189C4  90D8               	bcf	status,0,c
 18662  0189C6  0EFA               	movlw	-6
 18663  0189C8  36E3               	rlcf	plusw1,f,c
 18664  0189CA  0EFB               	movlw	-5
 18665  0189CC  36E3               	rlcf	plusw1,f,c
 18666  0189CE  0EFC               	movlw	-4
 18667  0189D0  36E3               	rlcf	plusw1,f,c
 18668  0189D2  0EFD               	movlw	-3
 18669  0189D4  36E3               	rlcf	plusw1,f,c
 18670                           
 18671                           ;stkvar	_exp1 @ sp[(-2)+0]
 18672  0189D6  0EFE               	movlw	-2
 18673  0189D8  06E3               	decf	plusw1,f,c
 18674  0189DA                     l8541:
 18675                           
 18676                           ;stkvar	_exp1 @ sp[(-2)+0]
 18677  0189DA  0EFE               	movlw	-2
 18678  0189DC  50E3               	movf	plusw1,w,c
 18679  0189DE  A4D8               	btfss	status,2,c
 18680  0189E0  D7F1               	goto	l8539
 18681  0189E2                     u7190:
 18682                           
 18683                           ;stkvar	_sign1 @ sp[(-2)+1]
 18684  0189E2  0EFF               	movlw	-1
 18685  0189E4  50E3               	movf	plusw1,w,c
 18686  0189E6  B4D8               	btfsc	status,2,c
 18687  0189E8  D011               	goto	u7210
 18688                           
 18689                           ;stkvar	_f1 @ sp[(-2)+-4]
 18690                           ;stkvar	_f1 @ sp[(-2)+-4]
 18691  0189EA  0EFA               	movlw	-6
 18692  0189EC  6CE3               	negf	plusw1,c
 18693  0189EE  0EFB               	movlw	-5
 18694  0189F0  1EE3               	comf	plusw1,f,c
 18695  0189F2  0EFC               	movlw	-4
 18696  0189F4  1EE3               	comf	plusw1,f,c
 18697  0189F6  0EFD               	movlw	-3
 18698  0189F8  1EE3               	comf	plusw1,f,c
 18699  0189FA  E308               	bnc	u7210
 18700  0189FC  0EFB               	movlw	-5
 18701  0189FE  2AE3               	incf	plusw1,f,c
 18702  018A00  E305               	bnc	u7210
 18703  018A02  0EFC               	movlw	-4
 18704  018A04  2AE3               	incf	plusw1,f,c
 18705  018A06  E302               	bnc	u7210
 18706  018A08  0EFD               	movlw	-3
 18707  018A0A  2AE3               	incf	plusw1,f,c
 18708  018A0C                     u7210:
 18709                           
 18710                           ;stkvar	_f1 @ sp[(-2)+-4]
 18711  018A0C  0EFA               	movlw	-6
 18712  018A0E  006F FF8C  F026    	movff	plusw1,btemp
 18713  018A14  0EFB               	movlw	-5
 18714  018A16  006F FF8C  F027    	movff	plusw1,btemp+1
 18715  018A1C  0EFC               	movlw	-4
 18716  018A1E  006F FF8C  F028    	movff	plusw1,btemp+2
 18717  018A24  0EFD               	movlw	-3
 18718  018A26  006F FF8C  F029    	movff	plusw1,btemp+3
 18719  018A2C                     l2693:
 18720                           
 18721                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18722  018A2C  0EFA               	movlw	250
 18723  018A2E  26E1               	addwf	fsr1l,f,c
 18724  018A30  0EFF               	movlw	255
 18725  018A32  22E2               	addwfc	fsr1h,f,c
 18726  018A34  0012               	return		;funcret
 18727  018A36                     __end_of___fltol:
 18728                           	opt callstack 0
 18729                           
 18730 ;; *************** function ___flneg *****************
 18731 ;; Defined at:
 18732 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18733 ;; Parameters:    Size  Location     Type
 18734 ;;  f1              4  [STACK] long 
 18735 ;; Auto vars:     Size  Location     Type
 18736 ;;		None
 18737 ;; Return value:  Size  Location     Type
 18738 ;;                  4  [STACK] long 
 18739 ;; Registers used:
 18740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18741 ;; Tracked objects:
 18742 ;;		On entry : 0/0
 18743 ;;		On exit  : 0/0
 18744 ;;		Unchanged: 0/0
 18745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18750 ;;Total ram usage:        0 bytes
 18751 ;; Hardware stack levels used:    1
 18752 ;; Hardware stack levels required when called:   15
 18753 ;; This function calls:
 18754 ;;		Nothing
 18755 ;; This function is called by:
 18756 ;;		_calc_bsoc
 18757 ;;		_efgtoa
 18758 ;; This function uses a reentrant model
 18759 ;;
 18760                           
 18761                           	psect	text62
 18762  01AE5C                     __ptext62:
 18763                           	opt callstack 0
 18764  01AE5C                     ___flneg:
 18765                           	opt callstack 0
 18766                           
 18767                           ;stkvar	_f1 @ sp[(0)+-4]
 18768                           
 18769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18770                           ;incstack = 0
 18771 ;; hardware stack exceeded
 18772  01AE5C  0EFC               	movlw	-4
 18773  01AE5E  50E3               	movf	plusw1,w,c
 18774  01AE60  E10A               	bnz	u7110
 18775  01AE62  0EFD               	movlw	-3
 18776  01AE64  50E3               	movf	plusw1,w,c
 18777  01AE66  E107               	bnz	u7110
 18778  01AE68  0EFE               	movlw	-2
 18779  01AE6A  50E3               	movf	plusw1,w,c
 18780  01AE6C  E104               	bnz	u7110
 18781  01AE6E  0EFF               	movlw	-1
 18782  01AE70  50E3               	movf	plusw1,w,c
 18783  01AE72  B4D8               	btfsc	status,2,c
 18784  01AE74  D002               	goto	l8505
 18785  01AE76                     u7110:
 18786                           
 18787                           ;stkvar	_f1 @ sp[(0)+-4]
 18788  01AE76  0EFF               	movlw	-1
 18789  01AE78  7EE3               	btg	plusw1,7,c
 18790  01AE7A                     l8505:
 18791                           
 18792                           ;stkvar	_f1 @ sp[(0)+-4]
 18793  01AE7A  0EFC               	movlw	-4
 18794  01AE7C  006F FF8C  F026    	movff	plusw1,btemp
 18795  01AE82  0EFD               	movlw	-3
 18796  01AE84  006F FF8C  F027    	movff	plusw1,btemp+1
 18797  01AE8A  0EFE               	movlw	-2
 18798  01AE8C  006F FF8C  F028    	movff	plusw1,btemp+2
 18799  01AE92  0EFF               	movlw	-1
 18800  01AE94  006F FF8C  F029    	movff	plusw1,btemp+3
 18801                           
 18802                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18803  01AE9A  52E5               	movf	postdec1,f,c
 18804  01AE9C  52E5               	movf	postdec1,f,c
 18805  01AE9E  52E5               	movf	postdec1,f,c
 18806  01AEA0  52E5               	movf	postdec1,f,c
 18807  01AEA2  0012               	return		;funcret
 18808  01AEA4                     __end_of___flneg:
 18809                           	opt callstack 0
 18810                           
 18811 ;; *************** function ___fleq *****************
 18812 ;; Defined at:
 18813 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  ff1             4  [STACK] long 
 18816 ;;  ff2             4  [STACK] long 
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;		None
 18819 ;; Return value:  Size  Location     Type
 18820 ;;		None               void
 18821 ;; Registers used:
 18822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18823 ;; Tracked objects:
 18824 ;;		On entry : 0/0
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;Total ram usage:        0 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:   15
 18835 ;; This function calls:
 18836 ;;		Nothing
 18837 ;; This function is called by:
 18838 ;;		_efgtoa
 18839 ;; This function uses a reentrant model
 18840 ;;
 18841                           
 18842                           	psect	text63
 18843  019EAC                     __ptext63:
 18844                           	opt callstack 0
 18845  019EAC                     ___fleq:
 18846                           	opt callstack 0
 18847                           
 18848                           ;stkvar	_ff1 @ sp[(0)+-4]
 18849                           
 18850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18851                           ;incstack = 0
 18852 ;; hardware stack exceeded
 18853  019EAC  50E1               	movf	fsr1l,w,c
 18854  019EAE  0FFC               	addlw	-4
 18855  019EB0  6ED9               	movwf	fsr2l,c
 18856  019EB2  50E2               	movf	fsr1h,w,c
 18857  019EB4  6EDA               	movwf	fsr2h,c
 18858  019EB6  0EFF               	movlw	255
 18859  019EB8  22DA               	addwfc	fsr2h,f,c
 18860  019EBA  0E00               	movlw	0
 18861  019EBC  14DE               	andwf	postinc2,w,c
 18862  019EBE  6E2E               	movwf	(btemp+8)^0,c
 18863  019EC0  0E00               	movlw	0
 18864  019EC2  14DE               	andwf	postinc2,w,c
 18865  019EC4  6E2F               	movwf	(btemp+9)^0,c
 18866  019EC6  0E80               	movlw	128
 18867  019EC8  14DE               	andwf	postinc2,w,c
 18868  019ECA  6E30               	movwf	(btemp+10)^0,c
 18869  019ECC  0E7F               	movlw	127
 18870  019ECE  14DE               	andwf	postinc2,w,c
 18871  019ED0  6E31               	movwf	(btemp+11)^0,c
 18872  019ED2  502E               	movf	(btemp+8)^0,w,c
 18873  019ED4  102F               	iorwf	(btemp+9)^0,w,c
 18874  019ED6  1030               	iorwf	(btemp+10)^0,w,c
 18875  019ED8  1031               	iorwf	(btemp+11)^0,w,c
 18876  019EDA  A4D8               	btfss	status,2,c
 18877  019EDC  D008               	goto	l8463
 18878                           
 18879                           ;stkvar	_ff1 @ sp[(0)+-4]
 18880  019EDE  0EFC               	movlw	-4
 18881  019EE0  6AE3               	clrf	plusw1,c
 18882  019EE2  0EFD               	movlw	-3
 18883  019EE4  6AE3               	clrf	plusw1,c
 18884  019EE6  0EFE               	movlw	-2
 18885  019EE8  6AE3               	clrf	plusw1,c
 18886  019EEA  0EFF               	movlw	-1
 18887  019EEC  6AE3               	clrf	plusw1,c
 18888  019EEE                     l8463:
 18889                           
 18890                           ;stkvar	_ff2 @ sp[(0)+-8]
 18891  019EEE  50E1               	movf	fsr1l,w,c
 18892  019EF0  0FF8               	addlw	-8
 18893  019EF2  6ED9               	movwf	fsr2l,c
 18894  019EF4  50E2               	movf	fsr1h,w,c
 18895  019EF6  6EDA               	movwf	fsr2h,c
 18896  019EF8  0EFF               	movlw	255
 18897  019EFA  22DA               	addwfc	fsr2h,f,c
 18898  019EFC  0E00               	movlw	0
 18899  019EFE  14DE               	andwf	postinc2,w,c
 18900  019F00  6E2E               	movwf	(btemp+8)^0,c
 18901  019F02  0E00               	movlw	0
 18902  019F04  14DE               	andwf	postinc2,w,c
 18903  019F06  6E2F               	movwf	(btemp+9)^0,c
 18904  019F08  0E80               	movlw	128
 18905  019F0A  14DE               	andwf	postinc2,w,c
 18906  019F0C  6E30               	movwf	(btemp+10)^0,c
 18907  019F0E  0E7F               	movlw	127
 18908  019F10  14DE               	andwf	postinc2,w,c
 18909  019F12  6E31               	movwf	(btemp+11)^0,c
 18910  019F14  502E               	movf	(btemp+8)^0,w,c
 18911  019F16  102F               	iorwf	(btemp+9)^0,w,c
 18912  019F18  1030               	iorwf	(btemp+10)^0,w,c
 18913  019F1A  1031               	iorwf	(btemp+11)^0,w,c
 18914  019F1C  A4D8               	btfss	status,2,c
 18915  019F1E  D008               	goto	l8467
 18916                           
 18917                           ;stkvar	_ff2 @ sp[(0)+-8]
 18918  019F20  0EF8               	movlw	-8
 18919  019F22  6AE3               	clrf	plusw1,c
 18920  019F24  0EF9               	movlw	-7
 18921  019F26  6AE3               	clrf	plusw1,c
 18922  019F28  0EFA               	movlw	-6
 18923  019F2A  6AE3               	clrf	plusw1,c
 18924  019F2C  0EFB               	movlw	-5
 18925  019F2E  6AE3               	clrf	plusw1,c
 18926  019F30                     l8467:
 18927                           
 18928                           ;stkvar	_ff2 @ sp[(0)+-8]
 18929                           ;stkvar	_ff1 @ sp[(0)+-4]
 18930  019F30  50E1               	movf	fsr1l,w,c
 18931  019F32  0FFC               	addlw	-4
 18932  019F34  6ED9               	movwf	fsr2l,c
 18933  019F36  50E2               	movf	fsr1h,w,c
 18934  019F38  6EDA               	movwf	fsr2h,c
 18935  019F3A  0EFF               	movlw	255
 18936  019F3C  22DA               	addwfc	fsr2h,f,c
 18937  019F3E  0EF8               	movlw	-8
 18938  019F40  50E3               	movf	plusw1,w,c
 18939  019F42  18DE               	xorwf	postinc2,w,c
 18940  019F44  E10D               	bnz	u7050
 18941  019F46  0EF9               	movlw	-7
 18942  019F48  50E3               	movf	plusw1,w,c
 18943  019F4A  18DE               	xorwf	postinc2,w,c
 18944  019F4C  E109               	bnz	u7050
 18945  019F4E  0EFA               	movlw	-6
 18946  019F50  50E3               	movf	plusw1,w,c
 18947  019F52  18DE               	xorwf	postinc2,w,c
 18948  019F54  E105               	bnz	u7050
 18949  019F56  0EFB               	movlw	-5
 18950  019F58  50E3               	movf	plusw1,w,c
 18951  019F5A  18DE               	xorwf	postinc2,w,c
 18952  019F5C  B4D8               	btfsc	status,2,c
 18953  019F5E  D002               	goto	l8471
 18954  019F60                     u7050:
 18955  019F60  9026               	bcf	btemp& (0+255),0,c
 18956  019F62  D001               	goto	l2655
 18957  019F64                     l8471:
 18958  019F64  8026               	bsf	btemp& (0+255),0,c
 18959  019F66                     l2655:
 18960                           
 18961                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18962  019F66  0EF8               	movlw	248
 18963  019F68  26E1               	addwf	fsr1l,f,c
 18964  019F6A  0EFF               	movlw	255
 18965  019F6C  22E2               	addwfc	fsr1h,f,c
 18966  019F6E  0012               	return		;funcret
 18967  019F70                     __end_of___fleq:
 18968                           	opt callstack 0
 18969                           
 18970 ;; *************** function ___awmod *****************
 18971 ;; Defined at:
 18972 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;  dividend        2  [STACK] int 
 18975 ;;  divisor         2  [STACK] int 
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;  sign            1  [STACK] unsigned char 
 18978 ;;  counter         1  [STACK] unsigned char 
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  2  [STACK] int 
 18981 ;; Registers used:
 18982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18983 ;; Tracked objects:
 18984 ;;		On entry : 0/0
 18985 ;;		On exit  : 0/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18992 ;;Total ram usage:        0 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:   15
 18995 ;; This function calls:
 18996 ;;		Nothing
 18997 ;; This function is called by:
 18998 ;;		_efgtoa
 18999 ;; This function uses a reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text64
 19003  01943C                     __ptext64:
 19004                           	opt callstack 0
 19005  01943C                     ___awmod:
 19006                           	opt callstack 0
 19007                           
 19008                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19009  01943C  52E6               	movf	postinc1,f,c
 19010  01943E  52E6               	movf	postinc1,f,c
 19011                           
 19012                           ;stkvar	_sign @ sp[(-2)+0]
 19013                           
 19014                           ;incstack = 0
 19015 ;; hardware stack exceeded
 19016  019440  0EFE               	movlw	-2
 19017  019442  6AE3               	clrf	plusw1,c
 19018                           
 19019                           ;stkvar	_dividend @ sp[(-2)+-2]
 19020  019444  0EFD               	movlw	-3
 19021  019446  AEE3               	btfss	plusw1,7,c
 19022  019448  D009               	goto	l8429
 19023                           
 19024                           ;stkvar	_dividend @ sp[(-2)+-2]
 19025                           ;stkvar	_dividend @ sp[(-2)+-2]
 19026  01944A  0EFC               	movlw	-4
 19027  01944C  6CE3               	negf	plusw1,c
 19028  01944E  0EFD               	movlw	-3
 19029  019450  1EE3               	comf	plusw1,f,c
 19030  019452  B0D8               	btfsc	status,0,c
 19031  019454  2AE3               	incf	plusw1,f,c
 19032                           
 19033                           ;stkvar	_sign @ sp[(-2)+0]
 19034  019456  0EFE               	movlw	-2
 19035  019458  6AE3               	clrf	plusw1,c
 19036  01945A  2AE3               	incf	plusw1,f,c
 19037  01945C                     l8429:
 19038                           
 19039                           ;stkvar	_divisor @ sp[(-2)+-4]
 19040  01945C  0EFB               	movlw	-5
 19041  01945E  AEE3               	btfss	plusw1,7,c
 19042  019460  D006               	goto	l8433
 19043                           
 19044                           ;stkvar	_divisor @ sp[(-2)+-4]
 19045                           ;stkvar	_divisor @ sp[(-2)+-4]
 19046  019462  0EFA               	movlw	-6
 19047  019464  6CE3               	negf	plusw1,c
 19048  019466  0EFB               	movlw	-5
 19049  019468  1EE3               	comf	plusw1,f,c
 19050  01946A  B0D8               	btfsc	status,0,c
 19051  01946C  2AE3               	incf	plusw1,f,c
 19052  01946E                     l8433:
 19053                           
 19054                           ;stkvar	_divisor @ sp[(-2)+-4]
 19055  01946E  0EFA               	movlw	-6
 19056  019470  006F FF8C  F026    	movff	plusw1,btemp
 19057  019476  0EFB               	movlw	-5
 19058  019478  50E3               	movf	plusw1,w,c
 19059  01947A  1026               	iorwf	btemp^0,w,c
 19060  01947C  B4D8               	btfsc	status,2,c
 19061  01947E  D053               	goto	u7010
 19062                           
 19063                           ;stkvar	_counter @ sp[(-2)+1]
 19064  019480  0EFF               	movlw	-1
 19065  019482  6AE3               	clrf	plusw1,c
 19066  019484  D012               	goto	L22
 19067  019486                     l8437:
 19068                           
 19069                           ;stkvar	_divisor @ sp[(-2)+-4]
 19070  019486  0EFA               	movlw	-6
 19071  019488  50E3               	movf	plusw1,w,c
 19072  01948A  90D8               	bcf	status,0,c
 19073  01948C  34E8               	rlcf	wreg,w,c
 19074  01948E  6E26               	movwf	btemp^0,c
 19075  019490  0EFA               	movlw	-6
 19076  019492  0060  F09B  FFE3   	movff	btemp,plusw1
 19077  019498  0EFB               	movlw	-5
 19078  01949A  50E3               	movf	plusw1,w,c
 19079  01949C  34E8               	rlcf	wreg,w,c
 19080  01949E  6E26               	movwf	btemp^0,c
 19081  0194A0  0EFB               	movlw	-5
 19082  0194A2  0060  F09B  FFE3   	movff	btemp,plusw1
 19083                           
 19084                           ;stkvar	_counter @ sp[(-2)+1]
 19085  0194A8  0EFF               	movlw	-1
 19086  0194AA                     L22:
 19087  0194AA  2AE3               	incf	plusw1,f,c
 19088                           
 19089                           ;stkvar	_divisor @ sp[(-2)+-4]
 19090  0194AC  0EFB               	movlw	-5
 19091  0194AE  AEE3               	btfss	plusw1,7,c
 19092  0194B0  D7EA               	goto	l8437
 19093  0194B2                     u6990:
 19094                           
 19095                           ;stkvar	_divisor @ sp[(-2)+-4]
 19096  0194B2  0EFA               	movlw	-6
 19097  0194B4  006F FF8C  F030    	movff	plusw1,btemp+10
 19098  0194BA  0EFB               	movlw	-5
 19099  0194BC  006F FF8C  F031    	movff	plusw1,btemp+11
 19100                           
 19101                           ;stkvar	_dividend @ sp[(-2)+-2]
 19102  0194C2  0EFC               	movlw	-4
 19103  0194C4  006F FF8C  F02E    	movff	plusw1,btemp+8
 19104  0194CA  0EFD               	movlw	-3
 19105  0194CC  006F FF8C  F02F    	movff	plusw1,btemp+9
 19106  0194D2  5030               	movf	(btemp+10)^0,w,c
 19107  0194D4  5C2E               	subwf	(btemp+8)^0,w,c
 19108  0194D6  5031               	movf	(btemp+11)^0,w,c
 19109  0194D8  582F               	subwfb	(btemp+9)^0,w,c
 19110  0194DA  A0D8               	btfss	status,0,c
 19111  0194DC  D014               	goto	l8447
 19112                           
 19113                           ;stkvar	_divisor @ sp[(-2)+-4]
 19114                           ;stkvar	_dividend @ sp[(-2)+-2]
 19115  0194DE  0EFC               	movlw	-4
 19116  0194E0  50E3               	movf	plusw1,w,c
 19117  0194E2  6E26               	movwf	btemp^0,c
 19118  0194E4  0EFA               	movlw	-6
 19119  0194E6  50E3               	movf	plusw1,w,c
 19120  0194E8  5E26               	subwf	btemp^0,f,c
 19121  0194EA  0EFC               	movlw	-4
 19122  0194EC  0060  F09B  FFE3   	movff	btemp,plusw1
 19123  0194F2  0EFD               	movlw	-3
 19124  0194F4  50E3               	movf	plusw1,w,c
 19125  0194F6  6E26               	movwf	btemp^0,c
 19126  0194F8  0EFB               	movlw	-5
 19127  0194FA  50E3               	movf	plusw1,w,c
 19128  0194FC  5A26               	subwfb	btemp^0,f,c
 19129  0194FE  0EFD               	movlw	-3
 19130  019500  0060  F09B  FFE3   	movff	btemp,plusw1
 19131  019506                     l8447:
 19132                           
 19133                           ;stkvar	_divisor @ sp[(-2)+-4]
 19134  019506  90D8               	bcf	status,0,c
 19135  019508  0EFB               	movlw	-5
 19136  01950A  32E3               	rrcf	plusw1,f,c
 19137  01950C  0EFA               	movlw	-6
 19138  01950E  32E3               	rrcf	plusw1,f,c
 19139                           
 19140                           ;stkvar	_counter @ sp[(-2)+1]
 19141  019510  0EFF               	movlw	-1
 19142  019512  50E3               	movf	plusw1,w,c
 19143  019514  6E26               	movwf	btemp^0,c
 19144  019516  0E01               	movlw	1
 19145  019518  5E26               	subwf	btemp^0,f,c
 19146  01951A  0EFF               	movlw	-1
 19147  01951C  0060  F09B  FFE3   	movff	btemp,plusw1
 19148  019522  A4D8               	btfss	status,2,c
 19149  019524  D7C6               	goto	u6990
 19150  019526                     u7010:
 19151                           
 19152                           ;stkvar	_sign @ sp[(-2)+0]
 19153  019526  0EFE               	movlw	-2
 19154  019528  50E3               	movf	plusw1,w,c
 19155  01952A  B4D8               	btfsc	status,2,c
 19156  01952C  D006               	goto	l8455
 19157                           
 19158                           ;stkvar	_dividend @ sp[(-2)+-2]
 19159                           ;stkvar	_dividend @ sp[(-2)+-2]
 19160  01952E  0EFC               	movlw	-4
 19161  019530  6CE3               	negf	plusw1,c
 19162  019532  0EFD               	movlw	-3
 19163  019534  1EE3               	comf	plusw1,f,c
 19164  019536  B0D8               	btfsc	status,0,c
 19165  019538  2AE3               	incf	plusw1,f,c
 19166  01953A                     l8455:
 19167                           
 19168                           ;stkvar	_dividend @ sp[(-2)+-2]
 19169  01953A  0EFC               	movlw	-4
 19170  01953C  006F FF8C  F026    	movff	plusw1,btemp
 19171  019542  0EFD               	movlw	-3
 19172  019544  006F FF8C  F027    	movff	plusw1,btemp+1
 19173                           
 19174                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19175  01954A  0EFA               	movlw	250
 19176  01954C  26E1               	addwf	fsr1l,f,c
 19177  01954E  0EFF               	movlw	255
 19178  019550  22E2               	addwfc	fsr1h,f,c
 19179  019552  0012               	return		;funcret
 19180  019554                     __end_of___awmod:
 19181                           	opt callstack 0
 19182                           
 19183 ;; *************** function ___awdiv *****************
 19184 ;; Defined at:
 19185 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19186 ;; Parameters:    Size  Location     Type
 19187 ;;  dividend        2  [STACK] int 
 19188 ;;  divisor         2  [STACK] int 
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;  quotient        2  [STACK] int 
 19191 ;;  sign            1  [STACK] unsigned char 
 19192 ;;  counter         1  [STACK] unsigned char 
 19193 ;; Return value:  Size  Location     Type
 19194 ;;                  2  [STACK] int 
 19195 ;; Registers used:
 19196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19197 ;; Tracked objects:
 19198 ;;		On entry : 0/0
 19199 ;;		On exit  : 0/0
 19200 ;;		Unchanged: 0/0
 19201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19206 ;;Total ram usage:        0 bytes
 19207 ;; Hardware stack levels used:    1
 19208 ;; Hardware stack levels required when called:   15
 19209 ;; This function calls:
 19210 ;;		Nothing
 19211 ;; This function is called by:
 19212 ;;		_efgtoa
 19213 ;; This function uses a reentrant model
 19214 ;;
 19215                           
 19216                           	psect	text65
 19217  018CF6                     __ptext65:
 19218                           	opt callstack 0
 19219  018CF6                     ___awdiv:
 19220                           	opt callstack 0
 19221                           
 19222                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19223  018CF6  52E6               	movf	postinc1,f,c
 19224  018CF8  52E6               	movf	postinc1,f,c
 19225  018CFA  52E6               	movf	postinc1,f,c
 19226  018CFC  52E6               	movf	postinc1,f,c
 19227                           
 19228                           ;stkvar	_sign @ sp[(-4)+2]
 19229                           
 19230                           ;incstack = 0
 19231 ;; hardware stack exceeded
 19232  018CFE  0EFE               	movlw	-2
 19233  018D00  6AE3               	clrf	plusw1,c
 19234                           
 19235                           ;stkvar	_divisor @ sp[(-4)+-4]
 19236  018D02  0EF9               	movlw	-7
 19237  018D04  AEE3               	btfss	plusw1,7,c
 19238  018D06  D009               	goto	l8383
 19239                           
 19240                           ;stkvar	_divisor @ sp[(-4)+-4]
 19241                           ;stkvar	_divisor @ sp[(-4)+-4]
 19242  018D08  0EF8               	movlw	-8
 19243  018D0A  6CE3               	negf	plusw1,c
 19244  018D0C  0EF9               	movlw	-7
 19245  018D0E  1EE3               	comf	plusw1,f,c
 19246  018D10  B0D8               	btfsc	status,0,c
 19247  018D12  2AE3               	incf	plusw1,f,c
 19248                           
 19249                           ;stkvar	_sign @ sp[(-4)+2]
 19250  018D14  0EFE               	movlw	-2
 19251  018D16  6AE3               	clrf	plusw1,c
 19252  018D18  2AE3               	incf	plusw1,f,c
 19253  018D1A                     l8383:
 19254                           
 19255                           ;stkvar	_dividend @ sp[(-4)+-2]
 19256  018D1A  0EFB               	movlw	-5
 19257  018D1C  AEE3               	btfss	plusw1,7,c
 19258  018D1E  D008               	goto	l8389
 19259                           
 19260                           ;stkvar	_dividend @ sp[(-4)+-2]
 19261                           ;stkvar	_dividend @ sp[(-4)+-2]
 19262  018D20  0EFA               	movlw	-6
 19263  018D22  6CE3               	negf	plusw1,c
 19264  018D24  0EFB               	movlw	-5
 19265  018D26  1EE3               	comf	plusw1,f,c
 19266  018D28  B0D8               	btfsc	status,0,c
 19267  018D2A  2AE3               	incf	plusw1,f,c
 19268                           
 19269                           ;stkvar	_sign @ sp[(-4)+2]
 19270  018D2C  0EFE               	movlw	-2
 19271  018D2E  70E3               	btg	plusw1,0,c
 19272  018D30                     l8389:
 19273                           
 19274                           ;stkvar	_quotient @ sp[(-4)+0]
 19275  018D30  0EFC               	movlw	-4
 19276  018D32  6AE3               	clrf	plusw1,c
 19277  018D34  0EFD               	movlw	-3
 19278  018D36  6AE3               	clrf	plusw1,c
 19279                           
 19280                           ;stkvar	_divisor @ sp[(-4)+-4]
 19281  018D38  0EF8               	movlw	-8
 19282  018D3A  006F FF8C  F026    	movff	plusw1,btemp
 19283  018D40  0EF9               	movlw	-7
 19284  018D42  50E3               	movf	plusw1,w,c
 19285  018D44  1026               	iorwf	btemp^0,w,c
 19286  018D46  B4D8               	btfsc	status,2,c
 19287  018D48  D066               	goto	u6940
 19288                           
 19289                           ;stkvar	_counter @ sp[(-4)+3]
 19290  018D4A  0EFF               	movlw	-1
 19291  018D4C  6AE3               	clrf	plusw1,c
 19292  018D4E  D012               	goto	L23
 19293  018D50                     l8395:
 19294                           
 19295                           ;stkvar	_divisor @ sp[(-4)+-4]
 19296  018D50  0EF8               	movlw	-8
 19297  018D52  50E3               	movf	plusw1,w,c
 19298  018D54  90D8               	bcf	status,0,c
 19299  018D56  34E8               	rlcf	wreg,w,c
 19300  018D58  6E26               	movwf	btemp^0,c
 19301  018D5A  0EF8               	movlw	-8
 19302  018D5C  0060  F09B  FFE3   	movff	btemp,plusw1
 19303  018D62  0EF9               	movlw	-7
 19304  018D64  50E3               	movf	plusw1,w,c
 19305  018D66  34E8               	rlcf	wreg,w,c
 19306  018D68  6E26               	movwf	btemp^0,c
 19307  018D6A  0EF9               	movlw	-7
 19308  018D6C  0060  F09B  FFE3   	movff	btemp,plusw1
 19309                           
 19310                           ;stkvar	_counter @ sp[(-4)+3]
 19311  018D72  0EFF               	movlw	-1
 19312  018D74                     L23:
 19313  018D74  2AE3               	incf	plusw1,f,c
 19314                           
 19315                           ;stkvar	_divisor @ sp[(-4)+-4]
 19316  018D76  0EF9               	movlw	-7
 19317  018D78  AEE3               	btfss	plusw1,7,c
 19318  018D7A  D7EA               	goto	l8395
 19319  018D7C                     u6920:
 19320                           
 19321                           ;stkvar	_quotient @ sp[(-4)+0]
 19322  018D7C  0EFC               	movlw	-4
 19323  018D7E  50E3               	movf	plusw1,w,c
 19324  018D80  90D8               	bcf	status,0,c
 19325  018D82  34E8               	rlcf	wreg,w,c
 19326  018D84  6E26               	movwf	btemp^0,c
 19327  018D86  0EFC               	movlw	-4
 19328  018D88  0060  F09B  FFE3   	movff	btemp,plusw1
 19329  018D8E  0EFD               	movlw	-3
 19330  018D90  50E3               	movf	plusw1,w,c
 19331  018D92  34E8               	rlcf	wreg,w,c
 19332  018D94  6E26               	movwf	btemp^0,c
 19333  018D96  0EFD               	movlw	-3
 19334  018D98  0060  F09B  FFE3   	movff	btemp,plusw1
 19335                           
 19336                           ;stkvar	_divisor @ sp[(-4)+-4]
 19337  018D9E  0EF8               	movlw	-8
 19338  018DA0  006F FF8C  F030    	movff	plusw1,btemp+10
 19339  018DA6  0EF9               	movlw	-7
 19340  018DA8  006F FF8C  F031    	movff	plusw1,btemp+11
 19341                           
 19342                           ;stkvar	_dividend @ sp[(-4)+-2]
 19343  018DAE  0EFA               	movlw	-6
 19344  018DB0  006F FF8C  F02E    	movff	plusw1,btemp+8
 19345  018DB6  0EFB               	movlw	-5
 19346  018DB8  006F FF8C  F02F    	movff	plusw1,btemp+9
 19347  018DBE  5030               	movf	(btemp+10)^0,w,c
 19348  018DC0  5C2E               	subwf	(btemp+8)^0,w,c
 19349  018DC2  5031               	movf	(btemp+11)^0,w,c
 19350  018DC4  582F               	subwfb	(btemp+9)^0,w,c
 19351  018DC6  A0D8               	btfss	status,0,c
 19352  018DC8  D016               	goto	l8409
 19353                           
 19354                           ;stkvar	_divisor @ sp[(-4)+-4]
 19355                           ;stkvar	_dividend @ sp[(-4)+-2]
 19356  018DCA  0EFA               	movlw	-6
 19357  018DCC  50E3               	movf	plusw1,w,c
 19358  018DCE  6E26               	movwf	btemp^0,c
 19359  018DD0  0EF8               	movlw	-8
 19360  018DD2  50E3               	movf	plusw1,w,c
 19361  018DD4  5E26               	subwf	btemp^0,f,c
 19362  018DD6  0EFA               	movlw	-6
 19363  018DD8  0060  F09B  FFE3   	movff	btemp,plusw1
 19364  018DDE  0EFB               	movlw	-5
 19365  018DE0  50E3               	movf	plusw1,w,c
 19366  018DE2  6E26               	movwf	btemp^0,c
 19367  018DE4  0EF9               	movlw	-7
 19368  018DE6  50E3               	movf	plusw1,w,c
 19369  018DE8  5A26               	subwfb	btemp^0,f,c
 19370  018DEA  0EFB               	movlw	-5
 19371  018DEC  0060  F09B  FFE3   	movff	btemp,plusw1
 19372                           
 19373                           ;stkvar	_quotient @ sp[(-4)+0]
 19374  018DF2  0EFC               	movlw	-4
 19375  018DF4  80E3               	bsf	plusw1,0,c
 19376  018DF6                     l8409:
 19377                           
 19378                           ;stkvar	_divisor @ sp[(-4)+-4]
 19379  018DF6  90D8               	bcf	status,0,c
 19380  018DF8  0EF9               	movlw	-7
 19381  018DFA  32E3               	rrcf	plusw1,f,c
 19382  018DFC  0EF8               	movlw	-8
 19383  018DFE  32E3               	rrcf	plusw1,f,c
 19384                           
 19385                           ;stkvar	_counter @ sp[(-4)+3]
 19386  018E00  0EFF               	movlw	-1
 19387  018E02  50E3               	movf	plusw1,w,c
 19388  018E04  6E26               	movwf	btemp^0,c
 19389  018E06  0E01               	movlw	1
 19390  018E08  5E26               	subwf	btemp^0,f,c
 19391  018E0A  0EFF               	movlw	-1
 19392  018E0C  0060  F09B  FFE3   	movff	btemp,plusw1
 19393  018E12  A4D8               	btfss	status,2,c
 19394  018E14  D7B3               	goto	u6920
 19395  018E16                     u6940:
 19396                           
 19397                           ;stkvar	_sign @ sp[(-4)+2]
 19398  018E16  0EFE               	movlw	-2
 19399  018E18  50E3               	movf	plusw1,w,c
 19400  018E1A  B4D8               	btfsc	status,2,c
 19401  018E1C  D006               	goto	l8417
 19402                           
 19403                           ;stkvar	_quotient @ sp[(-4)+0]
 19404                           ;stkvar	_quotient @ sp[(-4)+0]
 19405  018E1E  0EFC               	movlw	-4
 19406  018E20  6CE3               	negf	plusw1,c
 19407  018E22  0EFD               	movlw	-3
 19408  018E24  1EE3               	comf	plusw1,f,c
 19409  018E26  B0D8               	btfsc	status,0,c
 19410  018E28  2AE3               	incf	plusw1,f,c
 19411  018E2A                     l8417:
 19412                           
 19413                           ;stkvar	_quotient @ sp[(-4)+0]
 19414  018E2A  0EFC               	movlw	-4
 19415  018E2C  006F FF8C  F026    	movff	plusw1,btemp
 19416  018E32  0EFD               	movlw	-3
 19417  018E34  006F FF8C  F027    	movff	plusw1,btemp+1
 19418                           
 19419                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19420  018E3A  0EF8               	movlw	248
 19421  018E3C  26E1               	addwf	fsr1l,f,c
 19422  018E3E  0EFF               	movlw	255
 19423  018E40  22E2               	addwfc	fsr1h,f,c
 19424  018E42  0012               	return		;funcret
 19425  018E44                     __end_of___awdiv:
 19426                           	opt callstack 0
 19427                           
 19428 ;; *************** function _dtoa *****************
 19429 ;; Defined at:
 19430 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19433 ;;		 -> f(6), NULL(0), 
 19434 ;;  d               8  [STACK] long long 
 19435 ;; Auto vars:     Size  Location     Type
 19436 ;;  n               8  [STACK] long long 
 19437 ;;  i               2  [STACK] int 
 19438 ;;  s               2  [STACK] int 
 19439 ;;  w               2  [STACK] int 
 19440 ;;  p               2  [STACK] int 
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  2  [STACK] int 
 19443 ;; Registers used:
 19444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19454 ;;Total ram usage:        0 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:   20
 19457 ;; This function calls:
 19458 ;;		___aodiv
 19459 ;;		___aomod
 19460 ;;		_abs
 19461 ;;		_pad
 19462 ;; This function is called by:
 19463 ;;		_vfpfcnvrt
 19464 ;; This function uses a reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text66
 19468  0154BC                     __ptext66:
 19469                           	opt callstack 0
 19470  0154BC                     _dtoa:
 19471                           	opt callstack 0
 19472                           
 19473                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19474  0154BC  0E12               	movlw	18
 19475  0154BE  26E1               	addwf	fsr1l,f,c
 19476  0154C0  0E00               	movlw	0
 19477  0154C2  22E2               	addwfc	fsr1h,f,c
 19478                           
 19479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19480                           ;stkvar	_d @ sp[(-18)+-10]
 19481                           
 19482                           ;incstack = 0
 19483 ;; hardware stack exceeded
 19484  0154C4  0EE4               	movlw	228
 19485  0154C6  24E1               	addwf	fsr1l,w,c
 19486  0154C8  6ED9               	movwf	fsr2l,c
 19487  0154CA  0EFF               	movlw	255
 19488  0154CC  20E2               	addwfc	fsr1h,w,c
 19489  0154CE  6EDA               	movwf	fsr2h,c
 19490                           
 19491                           ;stkvar	_n @ sp[(-18)+2]
 19492  0154D0  0E08               	movlw	8
 19493  0154D2  6E26               	movwf	btemp^0,c
 19494  0154D4  0EF0               	movlw	-16
 19495  0154D6                     us1078999:
 19496  0154D6  006F FF7B FFE3     	movff	postinc2,plusw1
 19497  0154DC  28E8               	incf	wreg,w,c
 19498  0154DE  2E26               	decfsz	btemp^0,f,c
 19499  0154E0  D7FA               	bra	us1078999
 19500                           
 19501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19502                           ;stkvar	_n @ sp[(-18)+2]
 19503  0154E2  0EF7               	movlw	-9
 19504  0154E4  AEE3               	btfss	plusw1,7,c
 19505  0154E6  D002               	goto	u10790
 19506  0154E8  0E01               	movlw	1
 19507  0154EA  D001               	goto	u10800
 19508  0154EC                     u10790:
 19509  0154EC  0E00               	movlw	0
 19510  0154EE                     u10800:
 19511  0154EE  6E30               	movwf	(btemp+10)^0,c
 19512  0154F0  6A31               	clrf	(btemp+11)^0,c
 19513                           
 19514                           ;stkvar	_s @ sp[(-18)+12]
 19515  0154F2  0EFA               	movlw	-6
 19516  0154F4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19517  0154FA  0EFB               	movlw	-5
 19518  0154FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19521                           ;stkvar	_s @ sp[(-18)+12]
 19522  015502  0EFA               	movlw	-6
 19523  015504  006F FF8C  F026    	movff	plusw1,btemp
 19524  01550A  0EFB               	movlw	-5
 19525  01550C  50E3               	movf	plusw1,w,c
 19526  01550E  1026               	iorwf	btemp^0,w,c
 19527  015510  B4D8               	btfsc	status,2,c
 19528  015512  D025               	goto	u10820
 19529                           
 19530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19531                           ;stkvar	_n @ sp[(-18)+2]
 19532                           ;stkvar	_n @ sp[(-18)+2]
 19533  015514  0EF0               	movlw	-16
 19534  015516  6CE3               	negf	plusw1,c
 19535  015518  0EF1               	movlw	-15
 19536  01551A  1EE3               	comf	plusw1,f,c
 19537  01551C  0EF2               	movlw	-14
 19538  01551E  1EE3               	comf	plusw1,f,c
 19539  015520  0EF3               	movlw	-13
 19540  015522  1EE3               	comf	plusw1,f,c
 19541  015524  0EF4               	movlw	-12
 19542  015526  1EE3               	comf	plusw1,f,c
 19543  015528  0EF5               	movlw	-11
 19544  01552A  1EE3               	comf	plusw1,f,c
 19545  01552C  0EF6               	movlw	-10
 19546  01552E  1EE3               	comf	plusw1,f,c
 19547  015530  0EF7               	movlw	-9
 19548  015532  1EE3               	comf	plusw1,f,c
 19549  015534  E314               	bnc	u10820
 19550  015536  0EF1               	movlw	-15
 19551  015538  2AE3               	incf	plusw1,f,c
 19552  01553A  E311               	bnc	u10820
 19553  01553C  0EF2               	movlw	-14
 19554  01553E  2AE3               	incf	plusw1,f,c
 19555  015540  E30E               	bnc	u10820
 19556  015542  0EF3               	movlw	-13
 19557  015544  2AE3               	incf	plusw1,f,c
 19558  015546  E30B               	bnc	u10820
 19559  015548  0EF4               	movlw	-12
 19560  01554A  2AE3               	incf	plusw1,f,c
 19561  01554C  E308               	bnc	u10820
 19562  01554E  0EF5               	movlw	-11
 19563  015550  2AE3               	incf	plusw1,f,c
 19564  015552  E305               	bnc	u10820
 19565  015554  0EF6               	movlw	-10
 19566  015556  2AE3               	incf	plusw1,f,c
 19567  015558  E302               	bnc	u10820
 19568  01555A  0EF7               	movlw	-9
 19569  01555C  2AE3               	incf	plusw1,f,c
 19570  01555E                     u10820:
 19571                           
 19572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19573  01555E  AE0D               	btfss	(_prec+1)^0,7,c
 19574                           
 19575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19576  015560  920E               	bcf	_flags^0,1,c
 19577                           
 19578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19579  015562  BE0D               	btfsc	(_prec+1)^0,7,c
 19580  015564  D005               	goto	u10840
 19581  015566  500D               	movf	(_prec+1)^0,w,c
 19582  015568  E110               	bnz	l11701
 19583  01556A  040C               	decf	_prec^0,w,c
 19584  01556C  B0D8               	btfsc	status,0,c
 19585  01556E  D00D               	goto	l11701
 19586  015570                     u10840:
 19587  015570  0E01               	movlw	1
 19588  015572  6E30               	movwf	(btemp+10)^0,c
 19589  015574  0E00               	movlw	0
 19590  015576  6E31               	movwf	(btemp+11)^0,c
 19591                           
 19592                           ;stkvar	_p @ sp[(-18)+16]
 19593  015578  0EFE               	movlw	-2
 19594  01557A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19595  015580  0EFF               	movlw	-1
 19596  015582  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19597  015588  D008               	goto	l2159
 19598  01558A                     l11701:
 19599                           
 19600                           ;stkvar	_p @ sp[(-18)+16]
 19601  01558A  0EFE               	movlw	-2
 19602  01558C  0060  F033  FFE3   	movff	_prec,plusw1
 19603  015592  0EFF               	movlw	-1
 19604  015594  0060  F037  FFE3   	movff	_prec+1,plusw1
 19605  01559A                     l2159:
 19606                           
 19607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19608                           ;stkvar	_w @ sp[(-18)+14]
 19609  01559A  0EFC               	movlw	-4
 19610  01559C  0060  F02B  FFE3   	movff	_width,plusw1
 19611  0155A2  0EFD               	movlw	-3
 19612  0155A4  0060  F02F  FFE3   	movff	_width+1,plusw1
 19613                           
 19614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19615                           ;stkvar	_s @ sp[(-18)+12]
 19616  0155AA  0EFA               	movlw	-6
 19617  0155AC  006F FF8C  F026    	movff	plusw1,btemp
 19618  0155B2  0EFB               	movlw	-5
 19619  0155B4  50E3               	movf	plusw1,w,c
 19620  0155B6  1026               	iorwf	btemp^0,w,c
 19621  0155B8  A4D8               	btfss	status,2,c
 19622  0155BA  D002               	goto	u10860
 19623  0155BC  A40E               	btfss	_flags^0,2,c
 19624  0155BE  D00A               	goto	l11709
 19625  0155C0                     u10860:
 19626                           
 19627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19628                           ;stkvar	_w @ sp[(-18)+14]
 19629  0155C0  50E1               	movf	fsr1l,w,c
 19630  0155C2  0FFC               	addlw	-4
 19631  0155C4  6ED9               	movwf	fsr2l,c
 19632  0155C6  50E2               	movf	fsr1h,w,c
 19633  0155C8  6EDA               	movwf	fsr2h,c
 19634  0155CA  0EFF               	movlw	255
 19635  0155CC  22DA               	addwfc	fsr2h,f,c
 19636  0155CE  06DE               	decf	postinc2,f,c
 19637  0155D0  0E00               	movlw	0
 19638  0155D2  5ADD               	subwfb	postdec2,f,c
 19639  0155D4                     l11709:
 19640                           
 19641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19642  0155D4  0E4F               	movlw	79
 19643  0155D6  6E30               	movwf	(btemp+10)^0,c
 19644  0155D8  0E00               	movlw	0
 19645  0155DA  6E31               	movwf	(btemp+11)^0,c
 19646                           
 19647                           ;stkvar	_i @ sp[(-18)+10]
 19648  0155DC  0EF8               	movlw	-8
 19649  0155DE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19650  0155E4  0EF9               	movlw	-7
 19651  0155E6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19652                           
 19653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19654  0155EC  0102               	movlb	2	; () banked
 19655  0155EE  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19656                           
 19657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19658  0155F0  D109               	goto	l11723
 19659  0155F2                     l11713:
 19660                           
 19661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19662                           ;stkvar	_i @ sp[(-18)+10]
 19663  0155F2  50E1               	movf	fsr1l,w,c
 19664  0155F4  0FF8               	addlw	-8
 19665  0155F6  6ED9               	movwf	fsr2l,c
 19666  0155F8  50E2               	movf	fsr1h,w,c
 19667  0155FA  6EDA               	movwf	fsr2h,c
 19668  0155FC  0EFF               	movlw	255
 19669  0155FE  22DA               	addwfc	fsr2h,f,c
 19670  015600  06DE               	decf	postinc2,f,c
 19671  015602  0E00               	movlw	0
 19672  015604  5ADD               	subwfb	postdec2,f,c
 19673                           
 19674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19675  015606  0E0A               	movlw	10
 19676  015608  6EE6               	movwf	postinc1,c
 19677  01560A  0E00               	movlw	0
 19678  01560C  6EE6               	movwf	postinc1,c
 19679  01560E  0E00               	movlw	0
 19680  015610  6EE6               	movwf	postinc1,c
 19681  015612  0E00               	movlw	0
 19682  015614  6EE6               	movwf	postinc1,c
 19683  015616  0E00               	movlw	0
 19684  015618  6EE6               	movwf	postinc1,c
 19685  01561A  0E00               	movlw	0
 19686  01561C  6EE6               	movwf	postinc1,c
 19687  01561E  0E00               	movlw	0
 19688  015620  6EE6               	movwf	postinc1,c
 19689  015622  0E00               	movlw	0
 19690  015624  6EE6               	movwf	postinc1,c
 19691                           
 19692                           ;stkvar	_n @ sp[(-26)+2]
 19693  015626  50E1               	movf	fsr1l,w,c
 19694  015628  0FE8               	addlw	-24
 19695  01562A  6ED9               	movwf	fsr2l,c
 19696  01562C  50E2               	movf	fsr1h,w,c
 19697  01562E  6EDA               	movwf	fsr2h,c
 19698  015630  0EFF               	movlw	255
 19699  015632  22DA               	addwfc	fsr2h,f,c
 19700  015634  006F FF7B FFE6     	movff	postinc2,postinc1
 19701  01563A  006F FF7B FFE6     	movff	postinc2,postinc1
 19702  015640  006F FF7B FFE6     	movff	postinc2,postinc1
 19703  015646  006F FF7B FFE6     	movff	postinc2,postinc1
 19704  01564C  006F FF7B FFE6     	movff	postinc2,postinc1
 19705  015652  006F FF7B FFE6     	movff	postinc2,postinc1
 19706  015658  006F FF7B FFE6     	movff	postinc2,postinc1
 19707  01565E  006F FF7B FFE6     	movff	postinc2,postinc1
 19708  015664  EC42  F0BC         	call	___aomod	;wreg free
 19709  015668  52E5               	movf	postdec1,f,c
 19710  01566A  006F FF9C  F03D    	movff	indf1,btemp+23
 19711  015670  52E5               	movf	postdec1,f,c
 19712  015672  006F FF9C  F03C    	movff	indf1,btemp+22
 19713  015678  52E5               	movf	postdec1,f,c
 19714  01567A  006F FF9C  F03B    	movff	indf1,btemp+21
 19715  015680  52E5               	movf	postdec1,f,c
 19716  015682  006F FF9C  F03A    	movff	indf1,btemp+20
 19717  015688  52E5               	movf	postdec1,f,c
 19718  01568A  006F FF9C  F039    	movff	indf1,btemp+19
 19719  015690  52E5               	movf	postdec1,f,c
 19720  015692  006F FF9C  F038    	movff	indf1,btemp+18
 19721  015698  52E5               	movf	postdec1,f,c
 19722  01569A  006F FF9C  F037    	movff	indf1,btemp+17
 19723  0156A0  52E5               	movf	postdec1,f,c
 19724  0156A2  006F FF9C  F036    	movff	indf1,btemp+16
 19725  0156A8  0EF8               	movlw	248
 19726  0156AA  26E1               	addwf	fsr1l,f,c
 19727  0156AC  0EFF               	movlw	255
 19728  0156AE  22E2               	addwfc	fsr1h,f,c
 19729  0156B0  0060  F0D8  F030   	movff	btemp+16,btemp+10
 19730  0156B6  0060  F0DC  F031   	movff	btemp+17,btemp+11
 19731  0156BC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19732  0156C2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19733  0156C8  EC52  F0D7         	call	_abs	;wreg free
 19734  0156CC  0E30               	movlw	48
 19735  0156CE  2626               	addwf	btemp^0,f,c
 19736                           
 19737                           ;stkvar	_i @ sp[(-18)+10]
 19738  0156D0  0EF8               	movlw	-8
 19739  0156D2  006F FF8C  F030    	movff	plusw1,btemp+10
 19740  0156D8  0EF9               	movlw	-7
 19741  0156DA  006F FF8C  F031    	movff	plusw1,btemp+11
 19742  0156E0  0EAE               	movlw	low _dbuf
 19743  0156E2  2430               	addwf	(btemp+10)^0,w,c
 19744  0156E4  6ED9               	movwf	fsr2l,c
 19745  0156E6  0E02               	movlw	high _dbuf
 19746  0156E8  2031               	addwfc	(btemp+11)^0,w,c
 19747  0156EA  6EDA               	movwf	fsr2h,c
 19748  0156EC  0060  F09B  FFDF   	movff	btemp,indf2
 19749                           
 19750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19751                           ;stkvar	_p @ sp[(-18)+16]
 19752  0156F2  50E1               	movf	fsr1l,w,c
 19753  0156F4  0FFE               	addlw	-2
 19754  0156F6  6ED9               	movwf	fsr2l,c
 19755  0156F8  50E2               	movf	fsr1h,w,c
 19756  0156FA  6EDA               	movwf	fsr2h,c
 19757  0156FC  0EFF               	movlw	255
 19758  0156FE  22DA               	addwfc	fsr2h,f,c
 19759  015700  06DE               	decf	postinc2,f,c
 19760  015702  0E00               	movlw	0
 19761  015704  5ADD               	subwfb	postdec2,f,c
 19762                           
 19763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19764                           ;stkvar	_w @ sp[(-18)+14]
 19765  015706  50E1               	movf	fsr1l,w,c
 19766  015708  0FFC               	addlw	-4
 19767  01570A  6ED9               	movwf	fsr2l,c
 19768  01570C  50E2               	movf	fsr1h,w,c
 19769  01570E  6EDA               	movwf	fsr2h,c
 19770  015710  0EFF               	movlw	255
 19771  015712  22DA               	addwfc	fsr2h,f,c
 19772  015714  06DE               	decf	postinc2,f,c
 19773  015716  0E00               	movlw	0
 19774  015718  5ADD               	subwfb	postdec2,f,c
 19775                           
 19776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19777  01571A  0E0A               	movlw	10
 19778  01571C  6EE6               	movwf	postinc1,c
 19779  01571E  0E00               	movlw	0
 19780  015720  6EE6               	movwf	postinc1,c
 19781  015722  0E00               	movlw	0
 19782  015724  6EE6               	movwf	postinc1,c
 19783  015726  0E00               	movlw	0
 19784  015728  6EE6               	movwf	postinc1,c
 19785  01572A  0E00               	movlw	0
 19786  01572C  6EE6               	movwf	postinc1,c
 19787  01572E  0E00               	movlw	0
 19788  015730  6EE6               	movwf	postinc1,c
 19789  015732  0E00               	movlw	0
 19790  015734  6EE6               	movwf	postinc1,c
 19791  015736  0E00               	movlw	0
 19792  015738  6EE6               	movwf	postinc1,c
 19793                           
 19794                           ;stkvar	_n @ sp[(-26)+2]
 19795  01573A  50E1               	movf	fsr1l,w,c
 19796  01573C  0FE8               	addlw	-24
 19797  01573E  6ED9               	movwf	fsr2l,c
 19798  015740  50E2               	movf	fsr1h,w,c
 19799  015742  6EDA               	movwf	fsr2h,c
 19800  015744  0EFF               	movlw	255
 19801  015746  22DA               	addwfc	fsr2h,f,c
 19802  015748  006F FF7B FFE6     	movff	postinc2,postinc1
 19803  01574E  006F FF7B FFE6     	movff	postinc2,postinc1
 19804  015754  006F FF7B FFE6     	movff	postinc2,postinc1
 19805  01575A  006F FF7B FFE6     	movff	postinc2,postinc1
 19806  015760  006F FF7B FFE6     	movff	postinc2,postinc1
 19807  015766  006F FF7B FFE6     	movff	postinc2,postinc1
 19808  01576C  006F FF7B FFE6     	movff	postinc2,postinc1
 19809  015772  006F FF7B FFE6     	movff	postinc2,postinc1
 19810  015778  ECC8  F0B9         	call	___aodiv	;wreg free
 19811  01577C  52E5               	movf	postdec1,f,c
 19812  01577E  006F FF9C  F03D    	movff	indf1,btemp+23
 19813  015784  52E5               	movf	postdec1,f,c
 19814  015786  006F FF9C  F03C    	movff	indf1,btemp+22
 19815  01578C  52E5               	movf	postdec1,f,c
 19816  01578E  006F FF9C  F03B    	movff	indf1,btemp+21
 19817  015794  52E5               	movf	postdec1,f,c
 19818  015796  006F FF9C  F03A    	movff	indf1,btemp+20
 19819  01579C  52E5               	movf	postdec1,f,c
 19820  01579E  006F FF9C  F039    	movff	indf1,btemp+19
 19821  0157A4  52E5               	movf	postdec1,f,c
 19822  0157A6  006F FF9C  F038    	movff	indf1,btemp+18
 19823  0157AC  52E5               	movf	postdec1,f,c
 19824  0157AE  006F FF9C  F037    	movff	indf1,btemp+17
 19825  0157B4  52E5               	movf	postdec1,f,c
 19826  0157B6  006F FF9C  F036    	movff	indf1,btemp+16
 19827  0157BC  0EF8               	movlw	248
 19828  0157BE  26E1               	addwf	fsr1l,f,c
 19829  0157C0  0EFF               	movlw	255
 19830  0157C2  22E2               	addwfc	fsr1h,f,c
 19831                           
 19832                           ;stkvar	_n @ sp[(-18)+2]
 19833  0157C4  0EF0               	movlw	-16
 19834  0157C6  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 19835  0157CC  0EF1               	movlw	-15
 19836  0157CE  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 19837  0157D4  0EF2               	movlw	-14
 19838  0157D6  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 19839  0157DC  0EF3               	movlw	-13
 19840  0157DE  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 19841  0157E4  0EF4               	movlw	-12
 19842  0157E6  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 19843  0157EC  0EF5               	movlw	-11
 19844  0157EE  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 19845  0157F4  0EF6               	movlw	-10
 19846  0157F6  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 19847  0157FC  0EF7               	movlw	-9
 19848  0157FE  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 19849  015804                     l11723:
 19850                           
 19851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19852                           ;stkvar	_i @ sp[(-18)+10]
 19853  015804  0EF9               	movlw	-7
 19854  015806  BEE3               	btfsc	plusw1,7,c
 19855  015808  D036               	goto	u10910
 19856  01580A  0EF9               	movlw	-7
 19857  01580C  50E3               	movf	plusw1,w,c
 19858  01580E  E104               	bnz	u10870
 19859  015810  0EF8               	movlw	-8
 19860  015812  04E3               	decf	plusw1,w,c
 19861  015814  A0D8               	btfss	status,0,c
 19862  015816  D02F               	goto	u10910
 19863  015818                     u10870:
 19864                           
 19865                           ;stkvar	_n @ sp[(-18)+2]
 19866  015818  0EF0               	movlw	-16
 19867  01581A  50E3               	movf	plusw1,w,c
 19868  01581C  E115               	bnz	u10881
 19869  01581E  0EF1               	movlw	-15
 19870  015820  50E3               	movf	plusw1,w,c
 19871  015822  E112               	bnz	u10881
 19872  015824  0EF2               	movlw	-14
 19873  015826  50E3               	movf	plusw1,w,c
 19874  015828  E10F               	bnz	u10881
 19875  01582A  0EF3               	movlw	-13
 19876  01582C  50E3               	movf	plusw1,w,c
 19877  01582E  E10C               	bnz	u10881
 19878  015830  0EF4               	movlw	-12
 19879  015832  50E3               	movf	plusw1,w,c
 19880  015834  E109               	bnz	u10881
 19881  015836  0EF5               	movlw	-11
 19882  015838  50E3               	movf	plusw1,w,c
 19883  01583A  E106               	bnz	u10881
 19884  01583C  0EF6               	movlw	-10
 19885  01583E  50E3               	movf	plusw1,w,c
 19886  015840  E103               	bnz	u10881
 19887  015842  0EF7               	movlw	-9
 19888  015844  50E3               	movf	plusw1,w,c
 19889  015846  A4D8               	btfss	status,2,c
 19890  015848                     u10881:
 19891  015848  D6D4               	goto	l11713
 19892                           
 19893                           ;stkvar	_p @ sp[(-18)+16]
 19894  01584A  0EFF               	movlw	-1
 19895  01584C  BEE3               	btfsc	plusw1,7,c
 19896  01584E  D007               	goto	u10890
 19897  015850  0EFF               	movlw	-1
 19898  015852  50E3               	movf	plusw1,w,c
 19899  015854  E103               	bnz	u10891
 19900  015856  0EFE               	movlw	-2
 19901  015858  04E3               	decf	plusw1,w,c
 19902  01585A  B0D8               	btfsc	status,0,c
 19903  01585C                     u10891:
 19904  01585C  D6CA               	goto	l11713
 19905  01585E                     u10890:
 19906                           
 19907                           ;stkvar	_w @ sp[(-18)+14]
 19908  01585E  0EFD               	movlw	-3
 19909  015860  BEE3               	btfsc	plusw1,7,c
 19910  015862  D009               	goto	u10910
 19911  015864  0EFD               	movlw	-3
 19912  015866  50E3               	movf	plusw1,w,c
 19913  015868  E104               	bnz	u10900
 19914  01586A  0EFC               	movlw	-4
 19915  01586C  04E3               	decf	plusw1,w,c
 19916  01586E  A0D8               	btfss	status,0,c
 19917  015870  D002               	goto	u10910
 19918  015872                     u10900:
 19919  015872  B20E               	btfsc	_flags^0,1,c
 19920  015874  D6BE               	goto	l11713
 19921  015876                     u10910:
 19922                           
 19923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19924                           ;stkvar	_s @ sp[(-18)+12]
 19925  015876  0EFA               	movlw	-6
 19926  015878  006F FF8C  F026    	movff	plusw1,btemp
 19927  01587E  0EFB               	movlw	-5
 19928  015880  50E3               	movf	plusw1,w,c
 19929  015882  1026               	iorwf	btemp^0,w,c
 19930  015884  A4D8               	btfss	status,2,c
 19931  015886  D002               	goto	u10930
 19932  015888  A40E               	btfss	_flags^0,2,c
 19933  01588A  D033               	goto	l11747
 19934  01588C                     u10930:
 19935                           
 19936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19937                           ;stkvar	_i @ sp[(-18)+10]
 19938  01588C  50E1               	movf	fsr1l,w,c
 19939  01588E  0FF8               	addlw	-8
 19940  015890  6ED9               	movwf	fsr2l,c
 19941  015892  50E2               	movf	fsr1h,w,c
 19942  015894  6EDA               	movwf	fsr2h,c
 19943  015896  0EFF               	movlw	255
 19944  015898  22DA               	addwfc	fsr2h,f,c
 19945  01589A  06DE               	decf	postinc2,f,c
 19946  01589C  0E00               	movlw	0
 19947  01589E  5ADD               	subwfb	postdec2,f,c
 19948                           
 19949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19950                           ;stkvar	_s @ sp[(-18)+12]
 19951  0158A0  0EFA               	movlw	-6
 19952  0158A2  006F FF8C  F026    	movff	plusw1,btemp
 19953  0158A8  0EFB               	movlw	-5
 19954  0158AA  50E3               	movf	plusw1,w,c
 19955  0158AC  1026               	iorwf	btemp^0,w,c
 19956  0158AE  A4D8               	btfss	status,2,c
 19957  0158B0  D002               	goto	l11743
 19958  0158B2  0E2B               	movlw	43
 19959  0158B4  D001               	goto	L24
 19960  0158B6                     l11743:
 19961  0158B6  0E2D               	movlw	45
 19962  0158B8                     L24:
 19963  0158B8  6E30               	movwf	(btemp+10)^0,c
 19964  0158BA  0E00               	movlw	0
 19965  0158BC  6E31               	movwf	(btemp+11)^0,c
 19966                           
 19967                           ;stkvar	_dtoa$5466 @ sp[(-18)+0]
 19968  0158BE  0EEE               	movlw	-18
 19969  0158C0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19970  0158C6  0EEF               	movlw	-17
 19971  0158C8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19972                           
 19973                           ;stkvar	_dtoa$5466 @ sp[(-18)+0]
 19974                           ;stkvar	_i @ sp[(-18)+10]
 19975  0158CE  0EF8               	movlw	-8
 19976  0158D0  006F FF8C  F030    	movff	plusw1,btemp+10
 19977  0158D6  0EF9               	movlw	-7
 19978  0158D8  006F FF8C  F031    	movff	plusw1,btemp+11
 19979  0158DE  0EAE               	movlw	low _dbuf
 19980  0158E0  2430               	addwf	(btemp+10)^0,w,c
 19981  0158E2  6ED9               	movwf	fsr2l,c
 19982  0158E4  0E02               	movlw	high _dbuf
 19983  0158E6  2031               	addwfc	(btemp+11)^0,w,c
 19984  0158E8  6EDA               	movwf	fsr2h,c
 19985  0158EA  0EEE               	movlw	-18
 19986  0158EC  006F FF8F FFDF     	movff	plusw1,indf2
 19987  0158F2                     l11747:
 19988                           
 19989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19990                           ;stkvar	_w @ sp[(-18)+14]
 19991  0158F2  0EFC               	movlw	-4
 19992  0158F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19993  0158FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19994                           
 19995                           ;stkvar	_i @ sp[(-20)+10]
 19996  015900  0EAE               	movlw	low _dbuf
 19997  015902  6E30               	movwf	(btemp+10)^0,c
 19998  015904  0E02               	movlw	high _dbuf
 19999  015906  6E31               	movwf	(btemp+11)^0,c
 20000  015908  0EF6               	movlw	-10
 20001  01590A  50E3               	movf	plusw1,w,c
 20002  01590C  2630               	addwf	(btemp+10)^0,f,c
 20003  01590E  0EF7               	movlw	-9
 20004  015910  50E3               	movf	plusw1,w,c
 20005  015912  2231               	addwfc	(btemp+11)^0,f,c
 20006  015914  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 20007  01591A  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 20008                           
 20009                           ;stkvar	_fp @ sp[(-22)+-2]
 20010  015920  0EE8               	movlw	-24
 20011  015922  006F FF8F FFE6     	movff	plusw1,postinc1
 20012  015928  006F FF8F FFE6     	movff	plusw1,postinc1
 20013  01592E  ECAA  F0CA         	call	_pad	;wreg free
 20014                           
 20015                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20016  015932  0EE4               	movlw	228
 20017  015934  26E1               	addwf	fsr1l,f,c
 20018  015936  0EFF               	movlw	255
 20019  015938  22E2               	addwfc	fsr1h,f,c
 20020  01593A  0012               	return		;funcret
 20021  01593C                     __end_of_dtoa:
 20022                           	opt callstack 0
 20023                           
 20024 ;; *************** function _abs *****************
 20025 ;; Defined at:
 20026 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20027 ;; Parameters:    Size  Location     Type
 20028 ;;  a               2  [STACK] int 
 20029 ;; Auto vars:     Size  Location     Type
 20030 ;;		None
 20031 ;; Return value:  Size  Location     Type
 20032 ;;                  2  [STACK] int 
 20033 ;; Registers used:
 20034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20035 ;; Tracked objects:
 20036 ;;		On entry : 0/2
 20037 ;;		On exit  : 0/0
 20038 ;;		Unchanged: 0/0
 20039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20044 ;;Total ram usage:        0 bytes
 20045 ;; Hardware stack levels used:    1
 20046 ;; Hardware stack levels required when called:   15
 20047 ;; This function calls:
 20048 ;;		Nothing
 20049 ;; This function is called by:
 20050 ;;		_dtoa
 20051 ;; This function uses a reentrant model
 20052 ;;
 20053                           
 20054                           	psect	text67
 20055  01AEA4                     __ptext67:
 20056                           	opt callstack 0
 20057  01AEA4                     _abs:
 20058                           	opt callstack 0
 20059                           
 20060                           ;stkvar	_a @ sp[(0)+-2]
 20061                           
 20062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20063                           ;incstack = 0
 20064 ;; hardware stack exceeded
 20065  01AEA4  0EFF               	movlw	-1
 20066  01AEA6  BEE3               	btfsc	plusw1,7,c
 20067  01AEA8  D007               	goto	u5900
 20068  01AEAA  0EFF               	movlw	-1
 20069  01AEAC  50E3               	movf	plusw1,w,c
 20070  01AEAE  E112               	bnz	l7871
 20071  01AEB0  0EFE               	movlw	-2
 20072  01AEB2  04E3               	decf	plusw1,w,c
 20073  01AEB4  B0D8               	btfsc	status,0,c
 20074  01AEB6  D00E               	goto	l7871
 20075  01AEB8                     u5900:
 20076                           
 20077                           ;stkvar	_a @ sp[(0)+-2]
 20078  01AEB8  0EFE               	movlw	-2
 20079  01AEBA  006F FF8C  F026    	movff	plusw1,btemp
 20080  01AEC0  1E26               	comf	btemp^0,f,c
 20081  01AEC2  0EFF               	movlw	-1
 20082  01AEC4  006F FF8C  F027    	movff	plusw1,btemp+1
 20083  01AECA  1E27               	comf	(btemp+1)^0,f,c
 20084  01AECC  2A26               	incf	btemp^0,f,c
 20085  01AECE  B4D8               	btfsc	status,2,c
 20086  01AED0  2A27               	incf	(btemp+1)^0,f,c
 20087  01AED2  D008               	goto	l3085
 20088  01AED4                     l7871:
 20089                           
 20090                           ;stkvar	_a @ sp[(0)+-2]
 20091  01AED4  0EFE               	movlw	-2
 20092  01AED6  006F FF8C  F026    	movff	plusw1,btemp
 20093  01AEDC  0EFF               	movlw	-1
 20094  01AEDE  006F FF8C  F027    	movff	plusw1,btemp+1
 20095  01AEE4                     l3085:
 20096                           
 20097                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20098  01AEE4  52E5               	movf	postdec1,f,c
 20099  01AEE6  52E5               	movf	postdec1,f,c
 20100  01AEE8  0012               	return		;funcret
 20101  01AEEA                     __end_of_abs:
 20102                           	opt callstack 0
 20103                           
 20104 ;; *************** function ___aomod *****************
 20105 ;; Defined at:
 20106 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;  dividend        8  [STACK] long long 
 20109 ;;  divisor         8  [STACK] long long 
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  sign            1  [STACK] unsigned char 
 20112 ;;  counter         1  [STACK] unsigned char 
 20113 ;; Return value:  Size  Location     Type
 20114 ;;                  8  [STACK] long long 
 20115 ;; Registers used:
 20116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20117 ;; Tracked objects:
 20118 ;;		On entry : 0/2
 20119 ;;		On exit  : 0/0
 20120 ;;		Unchanged: 0/0
 20121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;Total ram usage:        0 bytes
 20127 ;; Hardware stack levels used:    1
 20128 ;; Hardware stack levels required when called:   15
 20129 ;; This function calls:
 20130 ;;		Nothing
 20131 ;; This function is called by:
 20132 ;;		_dtoa
 20133 ;; This function uses a reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text68
 20137  017884                     __ptext68:
 20138                           	opt callstack 0
 20139  017884                     ___aomod:
 20140                           	opt callstack 0
 20141                           
 20142                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20143  017884  52E6               	movf	postinc1,f,c
 20144  017886  52E6               	movf	postinc1,f,c
 20145                           
 20146                           ;stkvar	_sign @ sp[(-2)+0]
 20147                           
 20148                           ;incstack = 0
 20149 ;; hardware stack exceeded
 20150  017888  0EFE               	movlw	-2
 20151  01788A  6AE3               	clrf	plusw1,c
 20152                           
 20153                           ;stkvar	_dividend @ sp[(-2)+-8]
 20154  01788C  0EFD               	movlw	-3
 20155  01788E  AEE3               	btfss	plusw1,7,c
 20156  017890  D028               	goto	l8029
 20157                           
 20158                           ;stkvar	_dividend @ sp[(-2)+-8]
 20159                           ;stkvar	_dividend @ sp[(-2)+-8]
 20160  017892  0EF6               	movlw	-10
 20161  017894  6CE3               	negf	plusw1,c
 20162  017896  0EF7               	movlw	-9
 20163  017898  1EE3               	comf	plusw1,f,c
 20164  01789A  0EF8               	movlw	-8
 20165  01789C  1EE3               	comf	plusw1,f,c
 20166  01789E  0EF9               	movlw	-7
 20167  0178A0  1EE3               	comf	plusw1,f,c
 20168  0178A2  0EFA               	movlw	-6
 20169  0178A4  1EE3               	comf	plusw1,f,c
 20170  0178A6  0EFB               	movlw	-5
 20171  0178A8  1EE3               	comf	plusw1,f,c
 20172  0178AA  0EFC               	movlw	-4
 20173  0178AC  1EE3               	comf	plusw1,f,c
 20174  0178AE  0EFD               	movlw	-3
 20175  0178B0  1EE3               	comf	plusw1,f,c
 20176  0178B2  E314               	bnc	u6330
 20177  0178B4  0EF7               	movlw	-9
 20178  0178B6  2AE3               	incf	plusw1,f,c
 20179  0178B8  E311               	bnc	u6330
 20180  0178BA  0EF8               	movlw	-8
 20181  0178BC  2AE3               	incf	plusw1,f,c
 20182  0178BE  E30E               	bnc	u6330
 20183  0178C0  0EF9               	movlw	-7
 20184  0178C2  2AE3               	incf	plusw1,f,c
 20185  0178C4  E30B               	bnc	u6330
 20186  0178C6  0EFA               	movlw	-6
 20187  0178C8  2AE3               	incf	plusw1,f,c
 20188  0178CA  E308               	bnc	u6330
 20189  0178CC  0EFB               	movlw	-5
 20190  0178CE  2AE3               	incf	plusw1,f,c
 20191  0178D0  E305               	bnc	u6330
 20192  0178D2  0EFC               	movlw	-4
 20193  0178D4  2AE3               	incf	plusw1,f,c
 20194  0178D6  E302               	bnc	u6330
 20195  0178D8  0EFD               	movlw	-3
 20196  0178DA  2AE3               	incf	plusw1,f,c
 20197  0178DC                     u6330:
 20198                           
 20199                           ;stkvar	_sign @ sp[(-2)+0]
 20200  0178DC  0EFE               	movlw	-2
 20201  0178DE  6AE3               	clrf	plusw1,c
 20202  0178E0  2AE3               	incf	plusw1,f,c
 20203  0178E2                     l8029:
 20204                           
 20205                           ;stkvar	_divisor @ sp[(-2)+-16]
 20206  0178E2  0EF5               	movlw	-11
 20207  0178E4  AEE3               	btfss	plusw1,7,c
 20208  0178E6  D025               	goto	u6350
 20209                           
 20210                           ;stkvar	_divisor @ sp[(-2)+-16]
 20211                           ;stkvar	_divisor @ sp[(-2)+-16]
 20212  0178E8  0EEE               	movlw	-18
 20213  0178EA  6CE3               	negf	plusw1,c
 20214  0178EC  0EEF               	movlw	-17
 20215  0178EE  1EE3               	comf	plusw1,f,c
 20216  0178F0  0EF0               	movlw	-16
 20217  0178F2  1EE3               	comf	plusw1,f,c
 20218  0178F4  0EF1               	movlw	-15
 20219  0178F6  1EE3               	comf	plusw1,f,c
 20220  0178F8  0EF2               	movlw	-14
 20221  0178FA  1EE3               	comf	plusw1,f,c
 20222  0178FC  0EF3               	movlw	-13
 20223  0178FE  1EE3               	comf	plusw1,f,c
 20224  017900  0EF4               	movlw	-12
 20225  017902  1EE3               	comf	plusw1,f,c
 20226  017904  0EF5               	movlw	-11
 20227  017906  1EE3               	comf	plusw1,f,c
 20228  017908  E314               	bnc	u6350
 20229  01790A  0EEF               	movlw	-17
 20230  01790C  2AE3               	incf	plusw1,f,c
 20231  01790E  E311               	bnc	u6350
 20232  017910  0EF0               	movlw	-16
 20233  017912  2AE3               	incf	plusw1,f,c
 20234  017914  E30E               	bnc	u6350
 20235  017916  0EF1               	movlw	-15
 20236  017918  2AE3               	incf	plusw1,f,c
 20237  01791A  E30B               	bnc	u6350
 20238  01791C  0EF2               	movlw	-14
 20239  01791E  2AE3               	incf	plusw1,f,c
 20240  017920  E308               	bnc	u6350
 20241  017922  0EF3               	movlw	-13
 20242  017924  2AE3               	incf	plusw1,f,c
 20243  017926  E305               	bnc	u6350
 20244  017928  0EF4               	movlw	-12
 20245  01792A  2AE3               	incf	plusw1,f,c
 20246  01792C  E302               	bnc	u6350
 20247  01792E  0EF5               	movlw	-11
 20248  017930  2AE3               	incf	plusw1,f,c
 20249  017932                     u6350:
 20250                           
 20251                           ;stkvar	_divisor @ sp[(-2)+-16]
 20252  017932  0EEE               	movlw	-18
 20253  017934  50E3               	movf	plusw1,w,c
 20254  017936  E116               	bnz	u6360
 20255  017938  0EEF               	movlw	-17
 20256  01793A  50E3               	movf	plusw1,w,c
 20257  01793C  E113               	bnz	u6360
 20258  01793E  0EF0               	movlw	-16
 20259  017940  50E3               	movf	plusw1,w,c
 20260  017942  E110               	bnz	u6360
 20261  017944  0EF1               	movlw	-15
 20262  017946  50E3               	movf	plusw1,w,c
 20263  017948  E10D               	bnz	u6360
 20264  01794A  0EF2               	movlw	-14
 20265  01794C  50E3               	movf	plusw1,w,c
 20266  01794E  E10A               	bnz	u6360
 20267  017950  0EF3               	movlw	-13
 20268  017952  50E3               	movf	plusw1,w,c
 20269  017954  E107               	bnz	u6360
 20270  017956  0EF4               	movlw	-12
 20271  017958  50E3               	movf	plusw1,w,c
 20272  01795A  E104               	bnz	u6360
 20273  01795C  0EF5               	movlw	-11
 20274  01795E  50E3               	movf	plusw1,w,c
 20275  017960  B4D8               	btfsc	status,2,c
 20276  017962  D075               	goto	u6390
 20277  017964                     u6360:
 20278                           
 20279                           ;stkvar	_counter @ sp[(-2)+1]
 20280  017964  0EFF               	movlw	-1
 20281  017966  6AE3               	clrf	plusw1,c
 20282  017968  D012               	goto	L25
 20283  01796A                     l8037:
 20284                           
 20285                           ;stkvar	_divisor @ sp[(-2)+-16]
 20286  01796A  90D8               	bcf	status,0,c
 20287  01796C  0EEE               	movlw	-18
 20288  01796E  36E3               	rlcf	plusw1,f,c
 20289  017970  0EEF               	movlw	-17
 20290  017972  36E3               	rlcf	plusw1,f,c
 20291  017974  0EF0               	movlw	-16
 20292  017976  36E3               	rlcf	plusw1,f,c
 20293  017978  0EF1               	movlw	-15
 20294  01797A  36E3               	rlcf	plusw1,f,c
 20295  01797C  0EF2               	movlw	-14
 20296  01797E  36E3               	rlcf	plusw1,f,c
 20297  017980  0EF3               	movlw	-13
 20298  017982  36E3               	rlcf	plusw1,f,c
 20299  017984  0EF4               	movlw	-12
 20300  017986  36E3               	rlcf	plusw1,f,c
 20301  017988  0EF5               	movlw	-11
 20302  01798A  36E3               	rlcf	plusw1,f,c
 20303                           
 20304                           ;stkvar	_counter @ sp[(-2)+1]
 20305  01798C  0EFF               	movlw	-1
 20306  01798E                     L25:
 20307  01798E  2AE3               	incf	plusw1,f,c
 20308                           
 20309                           ;stkvar	_divisor @ sp[(-2)+-16]
 20310  017990  0EF5               	movlw	-11
 20311  017992  AEE3               	btfss	plusw1,7,c
 20312  017994  D7EA               	goto	l8037
 20313  017996                     u6370:
 20314                           
 20315                           ;stkvar	_divisor @ sp[(-2)+-16]
 20316                           ;stkvar	_dividend @ sp[(-2)+-8]
 20317  017996  50E1               	movf	fsr1l,w,c
 20318  017998  0FF6               	addlw	-10
 20319  01799A  6ED9               	movwf	fsr2l,c
 20320  01799C  50E2               	movf	fsr1h,w,c
 20321  01799E  6EDA               	movwf	fsr2h,c
 20322  0179A0  0EFF               	movlw	255
 20323  0179A2  22DA               	addwfc	fsr2h,f,c
 20324  0179A4  0EEE               	movlw	-18
 20325  0179A6  50E3               	movf	plusw1,w,c
 20326  0179A8  5CDE               	subwf	postinc2,w,c
 20327  0179AA  0EEF               	movlw	-17
 20328  0179AC  50E3               	movf	plusw1,w,c
 20329  0179AE  58DE               	subwfb	postinc2,w,c
 20330  0179B0  0EF0               	movlw	-16
 20331  0179B2  50E3               	movf	plusw1,w,c
 20332  0179B4  58DE               	subwfb	postinc2,w,c
 20333  0179B6  0EF1               	movlw	-15
 20334  0179B8  50E3               	movf	plusw1,w,c
 20335  0179BA  58DE               	subwfb	postinc2,w,c
 20336  0179BC  0EF2               	movlw	-14
 20337  0179BE  50E3               	movf	plusw1,w,c
 20338  0179C0  58DE               	subwfb	postinc2,w,c
 20339  0179C2  0EF3               	movlw	-13
 20340  0179C4  50E3               	movf	plusw1,w,c
 20341  0179C6  58DE               	subwfb	postinc2,w,c
 20342  0179C8  0EF4               	movlw	-12
 20343  0179CA  50E3               	movf	plusw1,w,c
 20344  0179CC  58DE               	subwfb	postinc2,w,c
 20345  0179CE  0EF5               	movlw	-11
 20346  0179D0  50E3               	movf	plusw1,w,c
 20347  0179D2  58DE               	subwfb	postinc2,w,c
 20348  0179D4  A0D8               	btfss	status,0,c
 20349  0179D6  D01F               	goto	l8045
 20350                           
 20351                           ;stkvar	_divisor @ sp[(-2)+-16]
 20352                           ;stkvar	_dividend @ sp[(-2)+-8]
 20353  0179D8  50E1               	movf	fsr1l,w,c
 20354  0179DA  0FF6               	addlw	-10
 20355  0179DC  6ED9               	movwf	fsr2l,c
 20356  0179DE  50E2               	movf	fsr1h,w,c
 20357  0179E0  6EDA               	movwf	fsr2h,c
 20358  0179E2  0EFF               	movlw	255
 20359  0179E4  22DA               	addwfc	fsr2h,f,c
 20360  0179E6  0EEE               	movlw	-18
 20361  0179E8  50E3               	movf	plusw1,w,c
 20362  0179EA  5EDE               	subwf	postinc2,f,c
 20363  0179EC  0EEF               	movlw	-17
 20364  0179EE  50E3               	movf	plusw1,w,c
 20365  0179F0  5ADE               	subwfb	postinc2,f,c
 20366  0179F2  0EF0               	movlw	-16
 20367  0179F4  50E3               	movf	plusw1,w,c
 20368  0179F6  5ADE               	subwfb	postinc2,f,c
 20369  0179F8  0EF1               	movlw	-15
 20370  0179FA  50E3               	movf	plusw1,w,c
 20371  0179FC  5ADE               	subwfb	postinc2,f,c
 20372  0179FE  0EF2               	movlw	-14
 20373  017A00  50E3               	movf	plusw1,w,c
 20374  017A02  5ADE               	subwfb	postinc2,f,c
 20375  017A04  0EF3               	movlw	-13
 20376  017A06  50E3               	movf	plusw1,w,c
 20377  017A08  5ADE               	subwfb	postinc2,f,c
 20378  017A0A  0EF4               	movlw	-12
 20379  017A0C  50E3               	movf	plusw1,w,c
 20380  017A0E  5ADE               	subwfb	postinc2,f,c
 20381  017A10  0EF5               	movlw	-11
 20382  017A12  50E3               	movf	plusw1,w,c
 20383  017A14  5ADE               	subwfb	postinc2,f,c
 20384  017A16                     l8045:
 20385                           
 20386                           ;stkvar	_divisor @ sp[(-2)+-16]
 20387  017A16  90D8               	bcf	status,0,c
 20388  017A18  0EF5               	movlw	-11
 20389  017A1A  32E3               	rrcf	plusw1,f,c
 20390  017A1C  0EF4               	movlw	-12
 20391  017A1E  32E3               	rrcf	plusw1,f,c
 20392  017A20  0EF3               	movlw	-13
 20393  017A22  32E3               	rrcf	plusw1,f,c
 20394  017A24  0EF2               	movlw	-14
 20395  017A26  32E3               	rrcf	plusw1,f,c
 20396  017A28  0EF1               	movlw	-15
 20397  017A2A  32E3               	rrcf	plusw1,f,c
 20398  017A2C  0EF0               	movlw	-16
 20399  017A2E  32E3               	rrcf	plusw1,f,c
 20400  017A30  0EEF               	movlw	-17
 20401  017A32  32E3               	rrcf	plusw1,f,c
 20402  017A34  0EEE               	movlw	-18
 20403  017A36  32E3               	rrcf	plusw1,f,c
 20404                           
 20405                           ;stkvar	_counter @ sp[(-2)+1]
 20406  017A38  0EFF               	movlw	-1
 20407  017A3A  50E3               	movf	plusw1,w,c
 20408  017A3C  6E26               	movwf	btemp^0,c
 20409  017A3E  0E01               	movlw	1
 20410  017A40  5E26               	subwf	btemp^0,f,c
 20411  017A42  0EFF               	movlw	-1
 20412  017A44  0060  F09B  FFE3   	movff	btemp,plusw1
 20413  017A4A  A4D8               	btfss	status,2,c
 20414  017A4C  D7A4               	goto	u6370
 20415  017A4E                     u6390:
 20416                           
 20417                           ;stkvar	_sign @ sp[(-2)+0]
 20418  017A4E  0EFE               	movlw	-2
 20419  017A50  50E3               	movf	plusw1,w,c
 20420  017A52  B4D8               	btfsc	status,2,c
 20421  017A54  D025               	goto	u6410
 20422                           
 20423                           ;stkvar	_dividend @ sp[(-2)+-8]
 20424                           ;stkvar	_dividend @ sp[(-2)+-8]
 20425  017A56  0EF6               	movlw	-10
 20426  017A58  6CE3               	negf	plusw1,c
 20427  017A5A  0EF7               	movlw	-9
 20428  017A5C  1EE3               	comf	plusw1,f,c
 20429  017A5E  0EF8               	movlw	-8
 20430  017A60  1EE3               	comf	plusw1,f,c
 20431  017A62  0EF9               	movlw	-7
 20432  017A64  1EE3               	comf	plusw1,f,c
 20433  017A66  0EFA               	movlw	-6
 20434  017A68  1EE3               	comf	plusw1,f,c
 20435  017A6A  0EFB               	movlw	-5
 20436  017A6C  1EE3               	comf	plusw1,f,c
 20437  017A6E  0EFC               	movlw	-4
 20438  017A70  1EE3               	comf	plusw1,f,c
 20439  017A72  0EFD               	movlw	-3
 20440  017A74  1EE3               	comf	plusw1,f,c
 20441  017A76  E314               	bnc	u6410
 20442  017A78  0EF7               	movlw	-9
 20443  017A7A  2AE3               	incf	plusw1,f,c
 20444  017A7C  E311               	bnc	u6410
 20445  017A7E  0EF8               	movlw	-8
 20446  017A80  2AE3               	incf	plusw1,f,c
 20447  017A82  E30E               	bnc	u6410
 20448  017A84  0EF9               	movlw	-7
 20449  017A86  2AE3               	incf	plusw1,f,c
 20450  017A88  E30B               	bnc	u6410
 20451  017A8A  0EFA               	movlw	-6
 20452  017A8C  2AE3               	incf	plusw1,f,c
 20453  017A8E  E308               	bnc	u6410
 20454  017A90  0EFB               	movlw	-5
 20455  017A92  2AE3               	incf	plusw1,f,c
 20456  017A94  E305               	bnc	u6410
 20457  017A96  0EFC               	movlw	-4
 20458  017A98  2AE3               	incf	plusw1,f,c
 20459  017A9A  E302               	bnc	u6410
 20460  017A9C  0EFD               	movlw	-3
 20461  017A9E  2AE3               	incf	plusw1,f,c
 20462  017AA0                     u6410:
 20463                           
 20464                           ;stkvar	_dividend @ sp[(-2)+-8]
 20465  017AA0  0EF6               	movlw	246
 20466  017AA2  24E1               	addwf	fsr1l,w,c
 20467  017AA4  6ED9               	movwf	fsr2l,c
 20468  017AA6  0EFF               	movlw	255
 20469  017AA8  20E2               	addwfc	fsr1h,w,c
 20470  017AAA  6EDA               	movwf	fsr2h,c
 20471                           
 20472                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20473  017AAC  0E08               	movlw	8
 20474  017AAE  6E26               	movwf	btemp^0,c
 20475  017AB0  0EF6               	movlw	-10
 20476  017AB2                     us642999:
 20477  017AB2  006F FF7B FFE3     	movff	postinc2,plusw1
 20478  017AB8  28E8               	incf	wreg,w,c
 20479  017ABA  2E26               	decfsz	btemp^0,f,c
 20480  017ABC  D7FA               	bra	us642999
 20481                           
 20482                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20483  017ABE  52E5               	movf	postdec1,f,c
 20484  017AC0  52E5               	movf	postdec1,f,c
 20485  017AC2  0012               	return		;funcret
 20486  017AC4                     __end_of___aomod:
 20487                           	opt callstack 0
 20488                           
 20489 ;; *************** function ___aodiv *****************
 20490 ;; Defined at:
 20491 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20492 ;; Parameters:    Size  Location     Type
 20493 ;;  dividend        8  [STACK] long long 
 20494 ;;  divisor         8  [STACK] long long 
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;  quotient        8  [STACK] long long 
 20497 ;;  sign            1  [STACK] unsigned char 
 20498 ;;  counter         1  [STACK] unsigned char 
 20499 ;; Return value:  Size  Location     Type
 20500 ;;                  8  [STACK] long long 
 20501 ;; Registers used:
 20502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20503 ;; Tracked objects:
 20504 ;;		On entry : 0/2
 20505 ;;		On exit  : 0/0
 20506 ;;		Unchanged: 0/0
 20507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20512 ;;Total ram usage:        0 bytes
 20513 ;; Hardware stack levels used:    1
 20514 ;; Hardware stack levels required when called:   15
 20515 ;; This function calls:
 20516 ;;		Nothing
 20517 ;; This function is called by:
 20518 ;;		_dtoa
 20519 ;; This function uses a reentrant model
 20520 ;;
 20521                           
 20522                           	psect	text69
 20523  017390                     __ptext69:
 20524                           	opt callstack 0
 20525  017390                     ___aodiv:
 20526                           	opt callstack 0
 20527                           
 20528                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20529  017390  0E0A               	movlw	10
 20530  017392  26E1               	addwf	fsr1l,f,c
 20531  017394  0E00               	movlw	0
 20532  017396  22E2               	addwfc	fsr1h,f,c
 20533                           
 20534                           ;stkvar	_sign @ sp[(-10)+8]
 20535                           
 20536                           ;incstack = 0
 20537 ;; hardware stack exceeded
 20538  017398  0EFE               	movlw	-2
 20539  01739A  6AE3               	clrf	plusw1,c
 20540                           
 20541                           ;stkvar	_divisor @ sp[(-10)+-16]
 20542  01739C  0EED               	movlw	-19
 20543  01739E  AEE3               	btfss	plusw1,7,c
 20544  0173A0  D028               	goto	l7985
 20545                           
 20546                           ;stkvar	_divisor @ sp[(-10)+-16]
 20547                           ;stkvar	_divisor @ sp[(-10)+-16]
 20548  0173A2  0EE6               	movlw	-26
 20549  0173A4  6CE3               	negf	plusw1,c
 20550  0173A6  0EE7               	movlw	-25
 20551  0173A8  1EE3               	comf	plusw1,f,c
 20552  0173AA  0EE8               	movlw	-24
 20553  0173AC  1EE3               	comf	plusw1,f,c
 20554  0173AE  0EE9               	movlw	-23
 20555  0173B0  1EE3               	comf	plusw1,f,c
 20556  0173B2  0EEA               	movlw	-22
 20557  0173B4  1EE3               	comf	plusw1,f,c
 20558  0173B6  0EEB               	movlw	-21
 20559  0173B8  1EE3               	comf	plusw1,f,c
 20560  0173BA  0EEC               	movlw	-20
 20561  0173BC  1EE3               	comf	plusw1,f,c
 20562  0173BE  0EED               	movlw	-19
 20563  0173C0  1EE3               	comf	plusw1,f,c
 20564  0173C2  E314               	bnc	u6210
 20565  0173C4  0EE7               	movlw	-25
 20566  0173C6  2AE3               	incf	plusw1,f,c
 20567  0173C8  E311               	bnc	u6210
 20568  0173CA  0EE8               	movlw	-24
 20569  0173CC  2AE3               	incf	plusw1,f,c
 20570  0173CE  E30E               	bnc	u6210
 20571  0173D0  0EE9               	movlw	-23
 20572  0173D2  2AE3               	incf	plusw1,f,c
 20573  0173D4  E30B               	bnc	u6210
 20574  0173D6  0EEA               	movlw	-22
 20575  0173D8  2AE3               	incf	plusw1,f,c
 20576  0173DA  E308               	bnc	u6210
 20577  0173DC  0EEB               	movlw	-21
 20578  0173DE  2AE3               	incf	plusw1,f,c
 20579  0173E0  E305               	bnc	u6210
 20580  0173E2  0EEC               	movlw	-20
 20581  0173E4  2AE3               	incf	plusw1,f,c
 20582  0173E6  E302               	bnc	u6210
 20583  0173E8  0EED               	movlw	-19
 20584  0173EA  2AE3               	incf	plusw1,f,c
 20585  0173EC                     u6210:
 20586                           
 20587                           ;stkvar	_sign @ sp[(-10)+8]
 20588  0173EC  0EFE               	movlw	-2
 20589  0173EE  6AE3               	clrf	plusw1,c
 20590  0173F0  2AE3               	incf	plusw1,f,c
 20591  0173F2                     l7985:
 20592                           
 20593                           ;stkvar	_dividend @ sp[(-10)+-8]
 20594  0173F2  0EF5               	movlw	-11
 20595  0173F4  AEE3               	btfss	plusw1,7,c
 20596  0173F6  D027               	goto	l7991
 20597                           
 20598                           ;stkvar	_dividend @ sp[(-10)+-8]
 20599                           ;stkvar	_dividend @ sp[(-10)+-8]
 20600  0173F8  0EEE               	movlw	-18
 20601  0173FA  6CE3               	negf	plusw1,c
 20602  0173FC  0EEF               	movlw	-17
 20603  0173FE  1EE3               	comf	plusw1,f,c
 20604  017400  0EF0               	movlw	-16
 20605  017402  1EE3               	comf	plusw1,f,c
 20606  017404  0EF1               	movlw	-15
 20607  017406  1EE3               	comf	plusw1,f,c
 20608  017408  0EF2               	movlw	-14
 20609  01740A  1EE3               	comf	plusw1,f,c
 20610  01740C  0EF3               	movlw	-13
 20611  01740E  1EE3               	comf	plusw1,f,c
 20612  017410  0EF4               	movlw	-12
 20613  017412  1EE3               	comf	plusw1,f,c
 20614  017414  0EF5               	movlw	-11
 20615  017416  1EE3               	comf	plusw1,f,c
 20616  017418  E314               	bnc	u6230
 20617  01741A  0EEF               	movlw	-17
 20618  01741C  2AE3               	incf	plusw1,f,c
 20619  01741E  E311               	bnc	u6230
 20620  017420  0EF0               	movlw	-16
 20621  017422  2AE3               	incf	plusw1,f,c
 20622  017424  E30E               	bnc	u6230
 20623  017426  0EF1               	movlw	-15
 20624  017428  2AE3               	incf	plusw1,f,c
 20625  01742A  E30B               	bnc	u6230
 20626  01742C  0EF2               	movlw	-14
 20627  01742E  2AE3               	incf	plusw1,f,c
 20628  017430  E308               	bnc	u6230
 20629  017432  0EF3               	movlw	-13
 20630  017434  2AE3               	incf	plusw1,f,c
 20631  017436  E305               	bnc	u6230
 20632  017438  0EF4               	movlw	-12
 20633  01743A  2AE3               	incf	plusw1,f,c
 20634  01743C  E302               	bnc	u6230
 20635  01743E  0EF5               	movlw	-11
 20636  017440  2AE3               	incf	plusw1,f,c
 20637  017442                     u6230:
 20638                           
 20639                           ;stkvar	_sign @ sp[(-10)+8]
 20640  017442  0EFE               	movlw	-2
 20641  017444  70E3               	btg	plusw1,0,c
 20642  017446                     l7991:
 20643                           
 20644                           ;stkvar	_quotient @ sp[(-10)+0]
 20645  017446  0E07               	movlw	7
 20646  017448  6E26               	movwf	btemp^0,c
 20647  01744A  0EF6               	movlw	-10
 20648  01744C                     u6241:
 20649  01744C  6AE3               	clrf	plusw1,c
 20650  01744E  2AE8               	incf	wreg,f,c
 20651  017450  0626               	decf	btemp^0,f,c
 20652  017452  E2FC               	bc	u6241
 20653                           
 20654                           ;stkvar	_divisor @ sp[(-10)+-16]
 20655  017454  0EE6               	movlw	-26
 20656  017456  50E3               	movf	plusw1,w,c
 20657  017458  E116               	bnz	u6250
 20658  01745A  0EE7               	movlw	-25
 20659  01745C  50E3               	movf	plusw1,w,c
 20660  01745E  E113               	bnz	u6250
 20661  017460  0EE8               	movlw	-24
 20662  017462  50E3               	movf	plusw1,w,c
 20663  017464  E110               	bnz	u6250
 20664  017466  0EE9               	movlw	-23
 20665  017468  50E3               	movf	plusw1,w,c
 20666  01746A  E10D               	bnz	u6250
 20667  01746C  0EEA               	movlw	-22
 20668  01746E  50E3               	movf	plusw1,w,c
 20669  017470  E10A               	bnz	u6250
 20670  017472  0EEB               	movlw	-21
 20671  017474  50E3               	movf	plusw1,w,c
 20672  017476  E107               	bnz	u6250
 20673  017478  0EEC               	movlw	-20
 20674  01747A  50E3               	movf	plusw1,w,c
 20675  01747C  E104               	bnz	u6250
 20676  01747E  0EED               	movlw	-19
 20677  017480  50E3               	movf	plusw1,w,c
 20678  017482  B4D8               	btfsc	status,2,c
 20679  017484  D088               	goto	u6280
 20680  017486                     u6250:
 20681                           
 20682                           ;stkvar	_counter @ sp[(-10)+9]
 20683  017486  0EFF               	movlw	-1
 20684  017488  6AE3               	clrf	plusw1,c
 20685  01748A  D012               	goto	L26
 20686  01748C                     l7997:
 20687                           
 20688                           ;stkvar	_divisor @ sp[(-10)+-16]
 20689  01748C  90D8               	bcf	status,0,c
 20690  01748E  0EE6               	movlw	-26
 20691  017490  36E3               	rlcf	plusw1,f,c
 20692  017492  0EE7               	movlw	-25
 20693  017494  36E3               	rlcf	plusw1,f,c
 20694  017496  0EE8               	movlw	-24
 20695  017498  36E3               	rlcf	plusw1,f,c
 20696  01749A  0EE9               	movlw	-23
 20697  01749C  36E3               	rlcf	plusw1,f,c
 20698  01749E  0EEA               	movlw	-22
 20699  0174A0  36E3               	rlcf	plusw1,f,c
 20700  0174A2  0EEB               	movlw	-21
 20701  0174A4  36E3               	rlcf	plusw1,f,c
 20702  0174A6  0EEC               	movlw	-20
 20703  0174A8  36E3               	rlcf	plusw1,f,c
 20704  0174AA  0EED               	movlw	-19
 20705  0174AC  36E3               	rlcf	plusw1,f,c
 20706                           
 20707                           ;stkvar	_counter @ sp[(-10)+9]
 20708  0174AE  0EFF               	movlw	-1
 20709  0174B0                     L26:
 20710  0174B0  2AE3               	incf	plusw1,f,c
 20711                           
 20712                           ;stkvar	_divisor @ sp[(-10)+-16]
 20713  0174B2  0EED               	movlw	-19
 20714  0174B4  AEE3               	btfss	plusw1,7,c
 20715  0174B6  D7EA               	goto	l7997
 20716  0174B8                     u6260:
 20717                           
 20718                           ;stkvar	_quotient @ sp[(-10)+0]
 20719  0174B8  90D8               	bcf	status,0,c
 20720  0174BA  0EF6               	movlw	-10
 20721  0174BC  36E3               	rlcf	plusw1,f,c
 20722  0174BE  0EF7               	movlw	-9
 20723  0174C0  36E3               	rlcf	plusw1,f,c
 20724  0174C2  0EF8               	movlw	-8
 20725  0174C4  36E3               	rlcf	plusw1,f,c
 20726  0174C6  0EF9               	movlw	-7
 20727  0174C8  36E3               	rlcf	plusw1,f,c
 20728  0174CA  0EFA               	movlw	-6
 20729  0174CC  36E3               	rlcf	plusw1,f,c
 20730  0174CE  0EFB               	movlw	-5
 20731  0174D0  36E3               	rlcf	plusw1,f,c
 20732  0174D2  0EFC               	movlw	-4
 20733  0174D4  36E3               	rlcf	plusw1,f,c
 20734  0174D6  0EFD               	movlw	-3
 20735  0174D8  36E3               	rlcf	plusw1,f,c
 20736                           
 20737                           ;stkvar	_divisor @ sp[(-10)+-16]
 20738                           ;stkvar	_dividend @ sp[(-10)+-8]
 20739  0174DA  50E1               	movf	fsr1l,w,c
 20740  0174DC  0FEE               	addlw	-18
 20741  0174DE  6ED9               	movwf	fsr2l,c
 20742  0174E0  50E2               	movf	fsr1h,w,c
 20743  0174E2  6EDA               	movwf	fsr2h,c
 20744  0174E4  0EFF               	movlw	255
 20745  0174E6  22DA               	addwfc	fsr2h,f,c
 20746  0174E8  0EE6               	movlw	-26
 20747  0174EA  50E3               	movf	plusw1,w,c
 20748  0174EC  5CDE               	subwf	postinc2,w,c
 20749  0174EE  0EE7               	movlw	-25
 20750  0174F0  50E3               	movf	plusw1,w,c
 20751  0174F2  58DE               	subwfb	postinc2,w,c
 20752  0174F4  0EE8               	movlw	-24
 20753  0174F6  50E3               	movf	plusw1,w,c
 20754  0174F8  58DE               	subwfb	postinc2,w,c
 20755  0174FA  0EE9               	movlw	-23
 20756  0174FC  50E3               	movf	plusw1,w,c
 20757  0174FE  58DE               	subwfb	postinc2,w,c
 20758  017500  0EEA               	movlw	-22
 20759  017502  50E3               	movf	plusw1,w,c
 20760  017504  58DE               	subwfb	postinc2,w,c
 20761  017506  0EEB               	movlw	-21
 20762  017508  50E3               	movf	plusw1,w,c
 20763  01750A  58DE               	subwfb	postinc2,w,c
 20764  01750C  0EEC               	movlw	-20
 20765  01750E  50E3               	movf	plusw1,w,c
 20766  017510  58DE               	subwfb	postinc2,w,c
 20767  017512  0EED               	movlw	-19
 20768  017514  50E3               	movf	plusw1,w,c
 20769  017516  58DE               	subwfb	postinc2,w,c
 20770  017518  A0D8               	btfss	status,0,c
 20771  01751A  D021               	goto	l8009
 20772                           
 20773                           ;stkvar	_divisor @ sp[(-10)+-16]
 20774                           ;stkvar	_dividend @ sp[(-10)+-8]
 20775  01751C  50E1               	movf	fsr1l,w,c
 20776  01751E  0FEE               	addlw	-18
 20777  017520  6ED9               	movwf	fsr2l,c
 20778  017522  50E2               	movf	fsr1h,w,c
 20779  017524  6EDA               	movwf	fsr2h,c
 20780  017526  0EFF               	movlw	255
 20781  017528  22DA               	addwfc	fsr2h,f,c
 20782  01752A  0EE6               	movlw	-26
 20783  01752C  50E3               	movf	plusw1,w,c
 20784  01752E  5EDE               	subwf	postinc2,f,c
 20785  017530  0EE7               	movlw	-25
 20786  017532  50E3               	movf	plusw1,w,c
 20787  017534  5ADE               	subwfb	postinc2,f,c
 20788  017536  0EE8               	movlw	-24
 20789  017538  50E3               	movf	plusw1,w,c
 20790  01753A  5ADE               	subwfb	postinc2,f,c
 20791  01753C  0EE9               	movlw	-23
 20792  01753E  50E3               	movf	plusw1,w,c
 20793  017540  5ADE               	subwfb	postinc2,f,c
 20794  017542  0EEA               	movlw	-22
 20795  017544  50E3               	movf	plusw1,w,c
 20796  017546  5ADE               	subwfb	postinc2,f,c
 20797  017548  0EEB               	movlw	-21
 20798  01754A  50E3               	movf	plusw1,w,c
 20799  01754C  5ADE               	subwfb	postinc2,f,c
 20800  01754E  0EEC               	movlw	-20
 20801  017550  50E3               	movf	plusw1,w,c
 20802  017552  5ADE               	subwfb	postinc2,f,c
 20803  017554  0EED               	movlw	-19
 20804  017556  50E3               	movf	plusw1,w,c
 20805  017558  5ADE               	subwfb	postinc2,f,c
 20806                           
 20807                           ;stkvar	_quotient @ sp[(-10)+0]
 20808  01755A  0EF6               	movlw	-10
 20809  01755C  80E3               	bsf	plusw1,0,c
 20810  01755E                     l8009:
 20811                           
 20812                           ;stkvar	_divisor @ sp[(-10)+-16]
 20813  01755E  90D8               	bcf	status,0,c
 20814  017560  0EED               	movlw	-19
 20815  017562  32E3               	rrcf	plusw1,f,c
 20816  017564  0EEC               	movlw	-20
 20817  017566  32E3               	rrcf	plusw1,f,c
 20818  017568  0EEB               	movlw	-21
 20819  01756A  32E3               	rrcf	plusw1,f,c
 20820  01756C  0EEA               	movlw	-22
 20821  01756E  32E3               	rrcf	plusw1,f,c
 20822  017570  0EE9               	movlw	-23
 20823  017572  32E3               	rrcf	plusw1,f,c
 20824  017574  0EE8               	movlw	-24
 20825  017576  32E3               	rrcf	plusw1,f,c
 20826  017578  0EE7               	movlw	-25
 20827  01757A  32E3               	rrcf	plusw1,f,c
 20828  01757C  0EE6               	movlw	-26
 20829  01757E  32E3               	rrcf	plusw1,f,c
 20830                           
 20831                           ;stkvar	_counter @ sp[(-10)+9]
 20832  017580  0EFF               	movlw	-1
 20833  017582  50E3               	movf	plusw1,w,c
 20834  017584  6E26               	movwf	btemp^0,c
 20835  017586  0E01               	movlw	1
 20836  017588  5E26               	subwf	btemp^0,f,c
 20837  01758A  0EFF               	movlw	-1
 20838  01758C  0060  F09B  FFE3   	movff	btemp,plusw1
 20839  017592  A4D8               	btfss	status,2,c
 20840  017594  D791               	goto	u6260
 20841  017596                     u6280:
 20842                           
 20843                           ;stkvar	_sign @ sp[(-10)+8]
 20844  017596  0EFE               	movlw	-2
 20845  017598  50E3               	movf	plusw1,w,c
 20846  01759A  B4D8               	btfsc	status,2,c
 20847  01759C  D025               	goto	u6300
 20848                           
 20849                           ;stkvar	_quotient @ sp[(-10)+0]
 20850                           ;stkvar	_quotient @ sp[(-10)+0]
 20851  01759E  0EF6               	movlw	-10
 20852  0175A0  6CE3               	negf	plusw1,c
 20853  0175A2  0EF7               	movlw	-9
 20854  0175A4  1EE3               	comf	plusw1,f,c
 20855  0175A6  0EF8               	movlw	-8
 20856  0175A8  1EE3               	comf	plusw1,f,c
 20857  0175AA  0EF9               	movlw	-7
 20858  0175AC  1EE3               	comf	plusw1,f,c
 20859  0175AE  0EFA               	movlw	-6
 20860  0175B0  1EE3               	comf	plusw1,f,c
 20861  0175B2  0EFB               	movlw	-5
 20862  0175B4  1EE3               	comf	plusw1,f,c
 20863  0175B6  0EFC               	movlw	-4
 20864  0175B8  1EE3               	comf	plusw1,f,c
 20865  0175BA  0EFD               	movlw	-3
 20866  0175BC  1EE3               	comf	plusw1,f,c
 20867  0175BE  E314               	bnc	u6300
 20868  0175C0  0EF7               	movlw	-9
 20869  0175C2  2AE3               	incf	plusw1,f,c
 20870  0175C4  E311               	bnc	u6300
 20871  0175C6  0EF8               	movlw	-8
 20872  0175C8  2AE3               	incf	plusw1,f,c
 20873  0175CA  E30E               	bnc	u6300
 20874  0175CC  0EF9               	movlw	-7
 20875  0175CE  2AE3               	incf	plusw1,f,c
 20876  0175D0  E30B               	bnc	u6300
 20877  0175D2  0EFA               	movlw	-6
 20878  0175D4  2AE3               	incf	plusw1,f,c
 20879  0175D6  E308               	bnc	u6300
 20880  0175D8  0EFB               	movlw	-5
 20881  0175DA  2AE3               	incf	plusw1,f,c
 20882  0175DC  E305               	bnc	u6300
 20883  0175DE  0EFC               	movlw	-4
 20884  0175E0  2AE3               	incf	plusw1,f,c
 20885  0175E2  E302               	bnc	u6300
 20886  0175E4  0EFD               	movlw	-3
 20887  0175E6  2AE3               	incf	plusw1,f,c
 20888  0175E8                     u6300:
 20889                           
 20890                           ;stkvar	_quotient @ sp[(-10)+0]
 20891  0175E8  0EF6               	movlw	246
 20892  0175EA  24E1               	addwf	fsr1l,w,c
 20893  0175EC  6ED9               	movwf	fsr2l,c
 20894  0175EE  0EFF               	movlw	255
 20895  0175F0  20E2               	addwfc	fsr1h,w,c
 20896  0175F2  6EDA               	movwf	fsr2h,c
 20897                           
 20898                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20899  0175F4  0E08               	movlw	8
 20900  0175F6  6E26               	movwf	btemp^0,c
 20901  0175F8  0EEE               	movlw	-18
 20902  0175FA                     us631999:
 20903  0175FA  006F FF7B FFE3     	movff	postinc2,plusw1
 20904  017600  28E8               	incf	wreg,w,c
 20905  017602  2E26               	decfsz	btemp^0,f,c
 20906  017604  D7FA               	bra	us631999
 20907                           
 20908                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20909  017606  0EF6               	movlw	246
 20910  017608  26E1               	addwf	fsr1l,f,c
 20911  01760A  0EFF               	movlw	255
 20912  01760C  22E2               	addwfc	fsr1h,f,c
 20913  01760E  0012               	return		;funcret
 20914  017610                     __end_of___aodiv:
 20915                           	opt callstack 0
 20916                           
 20917 ;; *************** function _ctoa *****************
 20918 ;; Defined at:
 20919 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20920 ;; Parameters:    Size  Location     Type
 20921 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20922 ;;		 -> f(6), NULL(0), 
 20923 ;;  c               1  [STACK] unsigned char 
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;  w               2  [STACK] int 
 20926 ;;  l               2    0        int 
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  2  [STACK] int 
 20929 ;; Registers used:
 20930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/0
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20940 ;;Total ram usage:        0 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:   20
 20943 ;; This function calls:
 20944 ;;		_pad
 20945 ;; This function is called by:
 20946 ;;		_vfpfcnvrt
 20947 ;; This function uses a reentrant model
 20948 ;;
 20949                           
 20950                           	psect	text70
 20951  01A66A                     __ptext70:
 20952                           	opt callstack 0
 20953  01A66A                     _ctoa:
 20954                           	opt callstack 0
 20955                           
 20956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20957  01A66A  52E6               	movf	postinc1,f,c
 20958  01A66C  52E6               	movf	postinc1,f,c
 20959                           
 20960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20961                           
 20962                           ;incstack = 0
 20963 ;; hardware stack exceeded
 20964  01A66E  500A               	movf	_width^0,w,c
 20965  01A670  100B               	iorwf	(_width+1)^0,w,c
 20966  01A672  A4D8               	btfss	status,2,c
 20967  01A674  D009               	goto	l11675
 20968                           
 20969                           ;stkvar	_w @ sp[(-2)+0]
 20970  01A676  0EFE               	movlw	-2
 20971  01A678  0060  F02B  FFE3   	movff	_width,plusw1
 20972  01A67E  0EFF               	movlw	-1
 20973  01A680  0060  F02F  FFE3   	movff	_width+1,plusw1
 20974  01A686  D016               	goto	l11677
 20975  01A688                     l11675:
 20976  01A688  0EFF               	movlw	255
 20977  01A68A  6E30               	movwf	(btemp+10)^0,c
 20978  01A68C  0EFF               	movlw	255
 20979  01A68E  6E31               	movwf	(btemp+11)^0,c
 20980  01A690  0060  F028  F02E   	movff	_width,btemp+8
 20981  01A696  0060  F02C  F02F   	movff	_width+1,btemp+9
 20982  01A69C  5030               	movf	(btemp+10)^0,w,c
 20983  01A69E  262E               	addwf	(btemp+8)^0,f,c
 20984  01A6A0  5031               	movf	(btemp+11)^0,w,c
 20985  01A6A2  222F               	addwfc	(btemp+9)^0,f,c
 20986                           
 20987                           ;stkvar	_w @ sp[(-2)+0]
 20988  01A6A4  0EFE               	movlw	-2
 20989  01A6A6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 20990  01A6AC  0EFF               	movlw	-1
 20991  01A6AE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 20992  01A6B4                     l11677:
 20993                           
 20994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20995                           ;stkvar	_c @ sp[(-2)+-3]
 20996  01A6B4  0EFB               	movlw	-5
 20997  01A6B6  006F FF8C  F2AE    	movff	plusw1,_dbuf
 20998                           
 20999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21000  01A6BC  0102               	movlb	2	; () banked
 21001  01A6BE  6BAF               	clrf	(_dbuf+1)& (0+255),b
 21002                           
 21003                           ; BSR set to: 2
 21004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21005                           ;stkvar	_w @ sp[(-2)+0]
 21006  01A6C0  0EFE               	movlw	-2
 21007  01A6C2  006F FF8F FFE6     	movff	plusw1,postinc1
 21008  01A6C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21009  01A6CE  0EAE               	movlw	low _dbuf
 21010  01A6D0  6EE6               	movwf	postinc1,c
 21011  01A6D2  0E02               	movlw	high _dbuf
 21012  01A6D4  6EE6               	movwf	postinc1,c
 21013                           
 21014                           ;stkvar	_fp @ sp[(-6)+-2]
 21015  01A6D6  0EF8               	movlw	-8
 21016  01A6D8  006F FF8F FFE6     	movff	plusw1,postinc1
 21017  01A6DE  006F FF8F FFE6     	movff	plusw1,postinc1
 21018  01A6E4  ECAA  F0CA         	call	_pad	;wreg free
 21019                           
 21020                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21021  01A6E8  0EFB               	movlw	251
 21022  01A6EA  26E1               	addwf	fsr1l,f,c
 21023  01A6EC  0EFF               	movlw	255
 21024  01A6EE  22E2               	addwfc	fsr1h,f,c
 21025  01A6F0  0012               	return		;funcret
 21026  01A6F2                     __end_of_ctoa:
 21027                           	opt callstack 0
 21028                           
 21029 ;; *************** function _pad *****************
 21030 ;; Defined at:
 21031 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21032 ;; Parameters:    Size  Location     Type
 21033 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21034 ;;		 -> f(6), NULL(0), 
 21035 ;;  buf             2  [STACK] PTR unsigned char 
 21036 ;;		 -> dbuf(80), 
 21037 ;;  p               2  [STACK] int 
 21038 ;; Auto vars:     Size  Location     Type
 21039 ;;  w               2  [STACK] int 
 21040 ;;  i               2  [STACK] int 
 21041 ;; Return value:  Size  Location     Type
 21042 ;;                  2  [STACK] int 
 21043 ;; Registers used:
 21044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21045 ;; Tracked objects:
 21046 ;;		On entry : 0/2
 21047 ;;		On exit  : 0/0
 21048 ;;		Unchanged: 0/0
 21049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;Total ram usage:        0 bytes
 21055 ;; Hardware stack levels used:    1
 21056 ;; Hardware stack levels required when called:   19
 21057 ;; This function calls:
 21058 ;;		_fputc
 21059 ;;		_fputs
 21060 ;;		_strlen
 21061 ;; This function is called by:
 21062 ;;		_ctoa
 21063 ;;		_dtoa
 21064 ;;		_efgtoa
 21065 ;;		_utoa
 21066 ;;		_xtoa
 21067 ;; This function uses a reentrant model
 21068 ;;
 21069                           
 21070                           	psect	text71
 21071  019554                     __ptext71:
 21072                           	opt callstack 0
 21073  019554                     _pad:
 21074                           	opt callstack 0
 21075                           
 21076                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21077  019554  52E6               	movf	postinc1,f,c
 21078  019556  52E6               	movf	postinc1,f,c
 21079  019558  52E6               	movf	postinc1,f,c
 21080  01955A  52E6               	movf	postinc1,f,c
 21081                           
 21082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21083                           
 21084                           ;incstack = 0
 21085 ;; hardware stack exceeded
 21086  01955C  A00E               	btfss	_flags^0,0,c
 21087  01955E  D010               	goto	l11607
 21088                           
 21089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21090                           ;stkvar	_fp @ sp[(-4)+-2]
 21091  019560  0EFA               	movlw	-6
 21092  019562  006F FF8F FFE6     	movff	plusw1,postinc1
 21093  019568  006F FF8F FFE6     	movff	plusw1,postinc1
 21094                           
 21095                           ;stkvar	_buf @ sp[(-6)+-4]
 21096  01956E  0EF6               	movlw	-10
 21097  019570  006F FF8F FFE6     	movff	plusw1,postinc1
 21098  019576  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  01957C  EC0E  F0D2         	call	_fputs	;wreg free
 21100  019580                     l11607:
 21101                           
 21102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21103                           ;stkvar	_p @ sp[(-4)+-6]
 21104  019580  0EF7               	movlw	-9
 21105  019582  BEE3               	btfsc	plusw1,7,c
 21106  019584  D011               	goto	l11611
 21107                           
 21108                           ;stkvar	_p @ sp[(-4)+-6]
 21109                           ;stkvar	_w @ sp[(-4)+0]
 21110  019586  0EF6               	movlw	-10
 21111  019588  006F FF8C  F026    	movff	plusw1,btemp
 21112  01958E  0EFC               	movlw	-4
 21113  019590  0060  F09B  FFE3   	movff	btemp,plusw1
 21114  019596  0EF7               	movlw	-9
 21115  019598  006F FF8C  F026    	movff	plusw1,btemp
 21116  01959E  0EFD               	movlw	-3
 21117  0195A0  0060  F09B  FFE3   	movff	btemp,plusw1
 21118  0195A6  D004               	goto	l2139
 21119  0195A8                     l11611:
 21120                           
 21121                           ;stkvar	_w @ sp[(-4)+0]
 21122  0195A8  0EFC               	movlw	-4
 21123  0195AA  6AE3               	clrf	plusw1,c
 21124  0195AC  0EFD               	movlw	-3
 21125  0195AE  6AE3               	clrf	plusw1,c
 21126  0195B0                     l2139:
 21127                           
 21128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21129                           ;stkvar	_i @ sp[(-4)+2]
 21130  0195B0  0EFE               	movlw	-2
 21131  0195B2  6AE3               	clrf	plusw1,c
 21132  0195B4  0EFF               	movlw	-1
 21133  0195B6  6AE3               	clrf	plusw1,c
 21134                           
 21135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21136  0195B8  D01E               	goto	l11617
 21137  0195BA                     l11613:
 21138                           
 21139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21140                           ;stkvar	_fp @ sp[(-4)+-2]
 21141  0195BA  0EFA               	movlw	-6
 21142  0195BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21143  0195C2  006F FF8F FFE6     	movff	plusw1,postinc1
 21144  0195C8  0E20               	movlw	32
 21145  0195CA  6EE6               	movwf	postinc1,c
 21146  0195CC  0E00               	movlw	0
 21147  0195CE  6EE6               	movwf	postinc1,c
 21148  0195D0  EC8C  F0C9         	call	_fputc	;wreg free
 21149                           
 21150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21151                           ;stkvar	_i @ sp[(-4)+2]
 21152  0195D4  0EFE               	movlw	-2
 21153  0195D6  50E3               	movf	plusw1,w,c
 21154  0195D8  0F01               	addlw	1
 21155  0195DA  6E26               	movwf	btemp^0,c
 21156  0195DC  0EFE               	movlw	-2
 21157  0195DE  0060  F09B  FFE3   	movff	btemp,plusw1
 21158  0195E4  6A26               	clrf	btemp^0,c
 21159  0195E6  0EFF               	movlw	-1
 21160  0195E8  50E3               	movf	plusw1,w,c
 21161  0195EA  2026               	addwfc	btemp^0,w,c
 21162  0195EC  6E26               	movwf	btemp^0,c
 21163  0195EE  0EFF               	movlw	-1
 21164  0195F0  0060  F09B  FFE3   	movff	btemp,plusw1
 21165  0195F6                     l11617:
 21166                           
 21167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21168                           ;stkvar	_w @ sp[(-4)+0]
 21169                           ;stkvar	_i @ sp[(-4)+2]
 21170  0195F6  50E1               	movf	fsr1l,w,c
 21171  0195F8  0FFE               	addlw	-2
 21172  0195FA  6ED9               	movwf	fsr2l,c
 21173  0195FC  50E2               	movf	fsr1h,w,c
 21174  0195FE  6EDA               	movwf	fsr2h,c
 21175  019600  0EFF               	movlw	255
 21176  019602  22DA               	addwfc	fsr2h,f,c
 21177  019604  0EFC               	movlw	-4
 21178  019606  50E3               	movf	plusw1,w,c
 21179  019608  5CDE               	subwf	postinc2,w,c
 21180  01960A  50DE               	movf	postinc2,w,c
 21181  01960C  0A80               	xorlw	128
 21182  01960E  6E26               	movwf	btemp^0,c
 21183  019610  0EFD               	movlw	-3
 21184  019612  50E3               	movf	plusw1,w,c
 21185  019614  0A80               	xorlw	128
 21186  019616  5826               	subwfb	btemp^0,w,c
 21187  019618  A0D8               	btfss	status,0,c
 21188  01961A  D7CF               	goto	l11613
 21189                           
 21190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21191  01961C  B00E               	btfsc	_flags^0,0,c
 21192  01961E  D010               	goto	l11621
 21193                           
 21194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21195                           ;stkvar	_fp @ sp[(-4)+-2]
 21196  019620  0EFA               	movlw	-6
 21197  019622  006F FF8F FFE6     	movff	plusw1,postinc1
 21198  019628  006F FF8F FFE6     	movff	plusw1,postinc1
 21199                           
 21200                           ;stkvar	_buf @ sp[(-6)+-4]
 21201  01962E  0EF6               	movlw	-10
 21202  019630  006F FF8F FFE6     	movff	plusw1,postinc1
 21203  019636  006F FF8F FFE6     	movff	plusw1,postinc1
 21204  01963C  EC0E  F0D2         	call	_fputs	;wreg free
 21205  019640                     l11621:
 21206                           
 21207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21208                           ;stkvar	_w @ sp[(-4)+0]
 21209                           ;stkvar	_buf @ sp[(-4)+-4]
 21210  019640  0EF8               	movlw	-8
 21211  019642  006F FF8F FFE6     	movff	plusw1,postinc1
 21212  019648  006F FF8F FFE6     	movff	plusw1,postinc1
 21213  01964E  ECBD  F0D1         	call	_strlen	;wreg free
 21214  019652  0EFC               	movlw	-4
 21215  019654  50E3               	movf	plusw1,w,c
 21216  019656  2626               	addwf	btemp^0,f,c
 21217  019658  0EFD               	movlw	-3
 21218  01965A  50E3               	movf	plusw1,w,c
 21219  01965C  2227               	addwfc	(btemp+1)^0,f,c
 21220                           
 21221                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21222  01965E  0EF6               	movlw	246
 21223  019660  26E1               	addwf	fsr1l,f,c
 21224  019662  0EFF               	movlw	255
 21225  019664  22E2               	addwfc	fsr1h,f,c
 21226  019666  0012               	return		;funcret
 21227  019668                     __end_of_pad:
 21228                           	opt callstack 0
 21229                           
 21230 ;; *************** function _strlen *****************
 21231 ;; Defined at:
 21232 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21233 ;; Parameters:    Size  Location     Type
 21234 ;;  s               2  [STACK] PTR const unsigned char 
 21235 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21236 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21237 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21238 ;;		 -> V(191), 
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;  a               2  [STACK] PTR const unsigned char 
 21241 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21242 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21243 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21244 ;;		 -> V(191), 
 21245 ;; Return value:  Size  Location     Type
 21246 ;;                  2  [STACK] unsigned int 
 21247 ;; Registers used:
 21248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21249 ;; Tracked objects:
 21250 ;;		On entry : 0/0
 21251 ;;		On exit  : 0/0
 21252 ;;		Unchanged: 0/0
 21253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21258 ;;Total ram usage:        0 bytes
 21259 ;; Hardware stack levels used:    1
 21260 ;; Hardware stack levels required when called:   15
 21261 ;; This function calls:
 21262 ;;		Nothing
 21263 ;; This function is called by:
 21264 ;;		_eaDogM_WriteString
 21265 ;;		_spinners
 21266 ;;		_calc_bsoc
 21267 ;;		_pad
 21268 ;;		_stoa
 21269 ;; This function uses a reentrant model
 21270 ;;
 21271                           
 21272                           	psect	text72
 21273  01A37A                     __ptext72:
 21274                           	opt callstack 0
 21275  01A37A                     _strlen:
 21276                           	opt callstack 0
 21277                           
 21278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21279  01A37A  52E6               	movf	postinc1,f,c
 21280  01A37C  52E6               	movf	postinc1,f,c
 21281                           
 21282                           ;stkvar	_s @ sp[(-2)+-2]
 21283                           
 21284                           ;incstack = 0
 21285 ;; hardware stack exceeded
 21286  01A37E  0EFC               	movlw	-4
 21287  01A380  006F FF8C  F030    	movff	plusw1,btemp+10
 21288  01A386  0EFD               	movlw	-3
 21289  01A388  006F FF8C  F031    	movff	plusw1,btemp+11
 21290                           
 21291                           ;stkvar	_a @ sp[(-2)+0]
 21292  01A38E  0EFF               	movlw	-1
 21293  01A390  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21294  01A396  0EFE               	movlw	-2
 21295  01A398  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21296  01A39E  D011               	goto	l7603
 21297  01A3A0                     l7601:
 21298                           
 21299                           ;stkvar	_s @ sp[(-2)+-2]
 21300  01A3A0  0EFC               	movlw	-4
 21301  01A3A2  50E3               	movf	plusw1,w,c
 21302  01A3A4  0F01               	addlw	1
 21303  01A3A6  6E26               	movwf	btemp^0,c
 21304  01A3A8  0EFC               	movlw	-4
 21305  01A3AA  0060  F09B  FFE3   	movff	btemp,plusw1
 21306  01A3B0  6A26               	clrf	btemp^0,c
 21307  01A3B2  0EFD               	movlw	-3
 21308  01A3B4  50E3               	movf	plusw1,w,c
 21309  01A3B6  2026               	addwfc	btemp^0,w,c
 21310  01A3B8  6E26               	movwf	btemp^0,c
 21311  01A3BA  0EFD               	movlw	-3
 21312  01A3BC  0060  F09B  FFE3   	movff	btemp,plusw1
 21313  01A3C2                     l7603:
 21314                           
 21315                           ;stkvar	_s @ sp[(-2)+-2]
 21316  01A3C2  0EFC               	movlw	-4
 21317  01A3C4  006F FF8F FFF6     	movff	plusw1,tblptrl
 21318  01A3CA  0EFD               	movlw	-3
 21319  01A3CC  006F FF8F FFF7     	movff	plusw1,tblptrh
 21320  01A3D2  0E00               	movlw	low (__mediumconst shr (0+16))
 21321  01A3D4  6EF8               	movwf	tblptru,c
 21322  01A3D6  0E1F               	movlw	(high __ramtop+-1)
 21323  01A3D8  64F7               	cpfsgt	tblptrh,c
 21324  01A3DA  D003               	bra	u5377
 21325  01A3DC  0008               	tblrd		*
 21326  01A3DE  50F5               	movf	tablat,w,c
 21327  01A3E0  D007               	bra	u5370
 21328  01A3E2                     u5377:
 21329  01A3E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21330  01A3E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21331  01A3EE  50EF               	movf	indf0,w,c
 21332  01A3F0                     u5370:
 21333  01A3F0  0900               	iorlw	0
 21334  01A3F2  A4D8               	btfss	status,2,c
 21335  01A3F4  D7D5               	goto	l7601
 21336                           
 21337                           ;stkvar	_a @ sp[(-2)+0]
 21338                           ;stkvar	_s @ sp[(-2)+-2]
 21339  01A3F6  0EFC               	movlw	-4
 21340  01A3F8  006F FF8C  F026    	movff	plusw1,btemp
 21341  01A3FE  0EFD               	movlw	-3
 21342  01A400  006F FF8C  F027    	movff	plusw1,btemp+1
 21343  01A406  0EFE               	movlw	-2
 21344  01A408  50E3               	movf	plusw1,w,c
 21345  01A40A  5E26               	subwf	btemp^0,f,c
 21346  01A40C  0EFF               	movlw	-1
 21347  01A40E  50E3               	movf	plusw1,w,c
 21348  01A410  5A27               	subwfb	(btemp+1)^0,f,c
 21349                           
 21350                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21351  01A412  52E5               	movf	postdec1,f,c
 21352  01A414  52E5               	movf	postdec1,f,c
 21353  01A416  52E5               	movf	postdec1,f,c
 21354  01A418  52E5               	movf	postdec1,f,c
 21355  01A41A  0012               	return		;funcret
 21356  01A41C                     __end_of_strlen:
 21357                           	opt callstack 0
 21358                           
 21359 ;; *************** function _fputs *****************
 21360 ;; Defined at:
 21361 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  s               2  [STACK] PTR const unsigned char 
 21364 ;;		 -> dbuf(80), 
 21365 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21366 ;;		 -> f(6), NULL(0), 
 21367 ;; Auto vars:     Size  Location     Type
 21368 ;;  i               2  [STACK] int 
 21369 ;;  c               1  [STACK] unsigned char 
 21370 ;; Return value:  Size  Location     Type
 21371 ;;                  2  [STACK] int 
 21372 ;; Registers used:
 21373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21374 ;; Tracked objects:
 21375 ;;		On entry : 0/2
 21376 ;;		On exit  : 0/0
 21377 ;;		Unchanged: 0/0
 21378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21383 ;;Total ram usage:        0 bytes
 21384 ;; Hardware stack levels used:    1
 21385 ;; Hardware stack levels required when called:   18
 21386 ;; This function calls:
 21387 ;;		_fputc
 21388 ;; This function is called by:
 21389 ;;		_pad
 21390 ;; This function uses a reentrant model
 21391 ;;
 21392                           
 21393                           	psect	text73
 21394  01A41C                     __ptext73:
 21395                           	opt callstack 0
 21396  01A41C                     _fputs:
 21397                           	opt callstack 0
 21398                           
 21399                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21400  01A41C  52E6               	movf	postinc1,f,c
 21401  01A41E  52E6               	movf	postinc1,f,c
 21402  01A420  52E6               	movf	postinc1,f,c
 21403                           
 21404                           ;stkvar	_i @ sp[(-3)+0]
 21405                           
 21406                           ;incstack = 0
 21407 ;; hardware stack exceeded
 21408  01A422  0EFD               	movlw	-3
 21409  01A424  6AE3               	clrf	plusw1,c
 21410  01A426  0EFE               	movlw	-2
 21411  01A428  6AE3               	clrf	plusw1,c
 21412  01A42A  D01F               	goto	l11601
 21413  01A42C                     l11597:
 21414                           
 21415                           ;stkvar	_fp @ sp[(-3)+-4]
 21416  01A42C  0EF9               	movlw	-7
 21417  01A42E  006F FF8F FFE6     	movff	plusw1,postinc1
 21418  01A434  006F FF8F FFE6     	movff	plusw1,postinc1
 21419                           
 21420                           ;stkvar	_c @ sp[(-5)+2]
 21421  01A43A  0EFD               	movlw	-3
 21422  01A43C  50E3               	movf	plusw1,w,c
 21423  01A43E  6EE6               	movwf	postinc1,c
 21424  01A440  0E00               	movlw	0
 21425  01A442  6EE6               	movwf	postinc1,c
 21426  01A444  EC8C  F0C9         	call	_fputc	;wreg free
 21427                           
 21428                           ;stkvar	_i @ sp[(-3)+0]
 21429  01A448  0EFD               	movlw	-3
 21430  01A44A  50E3               	movf	plusw1,w,c
 21431  01A44C  0F01               	addlw	1
 21432  01A44E  6E26               	movwf	btemp^0,c
 21433  01A450  0EFD               	movlw	-3
 21434  01A452  0060  F09B  FFE3   	movff	btemp,plusw1
 21435  01A458  6A26               	clrf	btemp^0,c
 21436  01A45A  0EFE               	movlw	-2
 21437  01A45C  50E3               	movf	plusw1,w,c
 21438  01A45E  2026               	addwfc	btemp^0,w,c
 21439  01A460  6E26               	movwf	btemp^0,c
 21440  01A462  0EFE               	movlw	-2
 21441  01A464  0060  F09B  FFE3   	movff	btemp,plusw1
 21442  01A46A                     l11601:
 21443                           
 21444                           ;stkvar	_i @ sp[(-3)+0]
 21445  01A46A  0EFD               	movlw	-3
 21446  01A46C  006F FF8C  F030    	movff	plusw1,btemp+10
 21447  01A472  0EFE               	movlw	-2
 21448  01A474  006F FF8C  F031    	movff	plusw1,btemp+11
 21449                           
 21450                           ;stkvar	_s @ sp[(-3)+-2]
 21451  01A47A  0EFB               	movlw	-5
 21452  01A47C  006F FF8C  F02E    	movff	plusw1,btemp+8
 21453  01A482  0EFC               	movlw	-4
 21454  01A484  006F FF8C  F02F    	movff	plusw1,btemp+9
 21455  01A48A  5030               	movf	(btemp+10)^0,w,c
 21456  01A48C  242E               	addwf	(btemp+8)^0,w,c
 21457  01A48E  6ED9               	movwf	fsr2l,c
 21458  01A490  5031               	movf	(btemp+11)^0,w,c
 21459  01A492  202F               	addwfc	(btemp+9)^0,w,c
 21460  01A494  6EDA               	movwf	fsr2h,c
 21461  01A496  50DF               	movf	indf2,w,c
 21462  01A498  6E31               	movwf	(btemp+11)^0,c
 21463                           
 21464                           ;stkvar	_c @ sp[(-3)+2]
 21465  01A49A  0EFF               	movlw	-1
 21466  01A49C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21467  01A4A2  0EFF               	movlw	-1
 21468  01A4A4  50E3               	movf	plusw1,w,c
 21469  01A4A6  A4D8               	btfss	status,2,c
 21470  01A4A8  D7C1               	goto	l11597
 21471                           
 21472                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21473  01A4AA  0EF9               	movlw	249
 21474  01A4AC  26E1               	addwf	fsr1l,f,c
 21475  01A4AE  0EFF               	movlw	255
 21476  01A4B0  22E2               	addwfc	fsr1h,f,c
 21477  01A4B2  0012               	return		;funcret
 21478  01A4B4                     __end_of_fputs:
 21479                           	opt callstack 0
 21480                           
 21481 ;; *************** function _fputc *****************
 21482 ;; Defined at:
 21483 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21484 ;; Parameters:    Size  Location     Type
 21485 ;;  c               2  [STACK] int 
 21486 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21487 ;;		 -> f(6), NULL(0), 
 21488 ;; Auto vars:     Size  Location     Type
 21489 ;;		None
 21490 ;; Return value:  Size  Location     Type
 21491 ;;                  2  [STACK] int 
 21492 ;; Registers used:
 21493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21494 ;; Tracked objects:
 21495 ;;		On entry : 0/0
 21496 ;;		On exit  : 0/0
 21497 ;;		Unchanged: 0/0
 21498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21503 ;;Total ram usage:        0 bytes
 21504 ;; Hardware stack levels used:    1
 21505 ;; Hardware stack levels required when called:   17
 21506 ;; This function calls:
 21507 ;;		_putch
 21508 ;; This function is called by:
 21509 ;;		_pad
 21510 ;;		_stoa
 21511 ;;		_vfpfcnvrt
 21512 ;;		_fputs
 21513 ;; This function uses a reentrant model
 21514 ;;
 21515                           
 21516                           	psect	text74
 21517  019318                     __ptext74:
 21518                           	opt callstack 0
 21519  019318                     _fputc:
 21520                           	opt callstack 0
 21521                           
 21522                           ;stkvar	_fp @ sp[(0)+-4]
 21523                           
 21524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21525                           ;incstack = 0
 21526 ;; hardware stack exceeded
 21527  019318  0EFC               	movlw	-4
 21528  01931A  006F FF8C  F026    	movff	plusw1,btemp
 21529  019320  0EFD               	movlw	-3
 21530  019322  50E3               	movf	plusw1,w,c
 21531  019324  1026               	iorwf	btemp^0,w,c
 21532  019326  B4D8               	btfsc	status,2,c
 21533  019328  D009               	goto	u10620
 21534                           
 21535                           ;stkvar	_fp @ sp[(0)+-4]
 21536  01932A  0EFC               	movlw	-4
 21537  01932C  006F FF8C  F026    	movff	plusw1,btemp
 21538  019332  0EFD               	movlw	-3
 21539  019334  50E3               	movf	plusw1,w,c
 21540  019336  1026               	iorwf	btemp^0,w,c
 21541  019338  A4D8               	btfss	status,2,c
 21542  01933A  D006               	goto	l11585
 21543  01933C                     u10620:
 21544                           
 21545                           ;stkvar	_c @ sp[(0)+-2]
 21546  01933C  0EFE               	movlw	-2
 21547  01933E  50E3               	movf	plusw1,w,c
 21548  019340  6EE6               	movwf	postinc1,c
 21549  019342  ECF1  F0DC         	call	_putch	;wreg free
 21550  019346  D075               	goto	l3185
 21551  019348                     l11585:
 21552                           
 21553                           ;stkvar	_fp @ sp[(0)+-4]
 21554  019348  0EFC               	movlw	-4
 21555  01934A  006F FF8C  F030    	movff	plusw1,btemp+10
 21556  019350  0EFD               	movlw	-3
 21557  019352  006F FF8C  F031    	movff	plusw1,btemp+11
 21558  019358  0E04               	movlw	4
 21559  01935A  2430               	addwf	(btemp+10)^0,w,c
 21560  01935C  6ED9               	movwf	fsr2l,c
 21561  01935E  0E00               	movlw	0
 21562  019360  2031               	addwfc	(btemp+11)^0,w,c
 21563  019362  6EDA               	movwf	fsr2h,c
 21564  019364  50DE               	movf	postinc2,w,c
 21565  019366  10DE               	iorwf	postinc2,w,c
 21566  019368  B4D8               	btfsc	status,2,c
 21567  01936A  D026               	goto	u10640
 21568                           
 21569                           ;stkvar	_fp @ sp[(0)+-4]
 21570  01936C  0EFC               	movlw	-4
 21571  01936E  006F FF8C  F030    	movff	plusw1,btemp+10
 21572  019374  0EFD               	movlw	-3
 21573  019376  006F FF8C  F031    	movff	plusw1,btemp+11
 21574  01937C  0E04               	movlw	4
 21575  01937E  2430               	addwf	(btemp+10)^0,w,c
 21576  019380  6ED9               	movwf	fsr2l,c
 21577  019382  0E00               	movlw	0
 21578  019384  2031               	addwfc	(btemp+11)^0,w,c
 21579  019386  6EDA               	movwf	fsr2h,c
 21580                           
 21581                           ;stkvar	_fp @ sp[(0)+-4]
 21582  019388  0EFC               	movlw	-4
 21583  01938A  006F FF8C  F030    	movff	plusw1,btemp+10
 21584  019390  0EFD               	movlw	-3
 21585  019392  006F FF8C  F031    	movff	plusw1,btemp+11
 21586  019398  0E02               	movlw	2
 21587  01939A  2430               	addwf	(btemp+10)^0,w,c
 21588  01939C  6EE9               	movwf	fsr0l,c
 21589  01939E  0E00               	movlw	0
 21590  0193A0  2031               	addwfc	(btemp+11)^0,w,c
 21591  0193A2  6EEA               	movwf	fsr0h,c
 21592  0193A4  50DE               	movf	postinc2,w,c
 21593  0193A6  5CEE               	subwf	postinc0,w,c
 21594  0193A8  50EE               	movf	postinc0,w,c
 21595  0193AA  0A80               	xorlw	128
 21596  0193AC  6E26               	movwf	btemp^0,c
 21597  0193AE  50DE               	movf	postinc2,w,c
 21598  0193B0  0A80               	xorlw	128
 21599  0193B2  5826               	subwfb	btemp^0,w,c
 21600  0193B4  B0D8               	btfsc	status,0,c
 21601  0193B6  D03D               	goto	l3185
 21602  0193B8                     u10640:
 21603                           
 21604                           ;stkvar	_c @ sp[(0)+-2]
 21605                           ;stkvar	_fp @ sp[(0)+-4]
 21606  0193B8  0EFC               	movlw	-4
 21607  0193BA  006F FF8C  F030    	movff	plusw1,btemp+10
 21608  0193C0  0EFD               	movlw	-3
 21609  0193C2  006F FF8C  F031    	movff	plusw1,btemp+11
 21610  0193C8  0E02               	movlw	2
 21611  0193CA  2430               	addwf	(btemp+10)^0,w,c
 21612  0193CC  6ED9               	movwf	fsr2l,c
 21613  0193CE  0E00               	movlw	0
 21614  0193D0  2031               	addwfc	(btemp+11)^0,w,c
 21615  0193D2  6EDA               	movwf	fsr2h,c
 21616  0193D4  006F FF78  F030    	movff	postinc2,btemp+10
 21617  0193DA  006F FF74  F031    	movff	postdec2,btemp+11
 21618                           
 21619                           ;stkvar	_fp @ sp[(0)+-4]
 21620  0193E0  0EFC               	movlw	-4
 21621  0193E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 21622  0193E8  0EFD               	movlw	-3
 21623  0193EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 21624  0193F0  006F FF78  F02E    	movff	postinc2,btemp+8
 21625  0193F6  006F FF74  F02F    	movff	postdec2,btemp+9
 21626  0193FC  5030               	movf	(btemp+10)^0,w,c
 21627  0193FE  242E               	addwf	(btemp+8)^0,w,c
 21628  019400  6ED9               	movwf	fsr2l,c
 21629  019402  5031               	movf	(btemp+11)^0,w,c
 21630  019404  202F               	addwfc	(btemp+9)^0,w,c
 21631  019406  6EDA               	movwf	fsr2h,c
 21632  019408  0EFE               	movlw	-2
 21633  01940A  006F FF8F FFDF     	movff	plusw1,indf2
 21634                           
 21635                           ;stkvar	_fp @ sp[(0)+-4]
 21636  019410  0EFC               	movlw	-4
 21637  019412  006F FF8C  F030    	movff	plusw1,btemp+10
 21638  019418  0EFD               	movlw	-3
 21639  01941A  006F FF8C  F031    	movff	plusw1,btemp+11
 21640  019420  0E02               	movlw	2
 21641  019422  2430               	addwf	(btemp+10)^0,w,c
 21642  019424  6ED9               	movwf	fsr2l,c
 21643  019426  0E00               	movlw	0
 21644  019428  2031               	addwfc	(btemp+11)^0,w,c
 21645  01942A  6EDA               	movwf	fsr2h,c
 21646  01942C  2ADE               	incf	postinc2,f,c
 21647  01942E  0E00               	movlw	0
 21648  019430  22DD               	addwfc	postdec2,f,c
 21649  019432                     l3185:
 21650                           
 21651                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21652  019432  52E5               	movf	postdec1,f,c
 21653  019434  52E5               	movf	postdec1,f,c
 21654  019436  52E5               	movf	postdec1,f,c
 21655  019438  52E5               	movf	postdec1,f,c
 21656  01943A  0012               	return		;funcret
 21657  01943C                     __end_of_fputc:
 21658                           	opt callstack 0
 21659                           
 21660 ;; *************** function _putch *****************
 21661 ;; Defined at:
 21662 ;;		line 170 in file "eadog.c"
 21663 ;; Parameters:    Size  Location     Type
 21664 ;;  c               1  [STACK] unsigned char 
 21665 ;; Auto vars:     Size  Location     Type
 21666 ;;		None
 21667 ;; Return value:  Size  Location     Type
 21668 ;;                  1  [STACK] void 
 21669 ;; Registers used:
 21670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21671 ;; Tracked objects:
 21672 ;;		On entry : 0/0
 21673 ;;		On exit  : 0/0
 21674 ;;		Unchanged: 0/0
 21675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;Total ram usage:        0 bytes
 21681 ;; Hardware stack levels used:    1
 21682 ;; Hardware stack levels required when called:   16
 21683 ;; This function calls:
 21684 ;;		_ringBufS_put_dma
 21685 ;; This function is called by:
 21686 ;;		_fputc
 21687 ;; This function uses a reentrant model
 21688 ;;
 21689                           
 21690                           	psect	text75
 21691  01B9E2                     __ptext75:
 21692                           	opt callstack 0
 21693  01B9E2                     _putch:
 21694                           	opt callstack 0
 21695                           
 21696                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21697                           ;stkvar	_c @ sp[(0)+-1]
 21698                           
 21699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21700                           ;incstack = 0
 21701 ;; hardware stack exceeded
 21702  01B9E2  0EFF               	movlw	-1
 21703  01B9E4  50E3               	movf	plusw1,w,c
 21704  01B9E6  6EE6               	movwf	postinc1,c
 21705  01B9E8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21706  01B9EE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21707  01B9F4  ECC1  F0D0         	call	_ringBufS_put_dma	;wreg free
 21708                           
 21709                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21710  01B9F8  52E5               	movf	postdec1,f,c
 21711  01B9FA  0012               	return		;funcret
 21712  01B9FC                     __end_of_putch:
 21713                           	opt callstack 0
 21714                           
 21715 ;; *************** function _ringBufS_put_dma *****************
 21716 ;; Defined at:
 21717 ;;		line 67 in file "ringbufs.c"
 21718 ;; Parameters:    Size  Location     Type
 21719 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21720 ;;		 -> ring_buf1(67), 
 21721 ;;  c               1  [STACK] const unsigned char 
 21722 ;; Auto vars:     Size  Location     Type
 21723 ;;		None
 21724 ;; Return value:  Size  Location     Type
 21725 ;;                  1  [STACK] void 
 21726 ;; Registers used:
 21727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21728 ;; Tracked objects:
 21729 ;;		On entry : 0/0
 21730 ;;		On exit  : 0/0
 21731 ;;		Unchanged: 0/0
 21732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;Total ram usage:        0 bytes
 21738 ;; Hardware stack levels used:    1
 21739 ;; Hardware stack levels required when called:   15
 21740 ;; This function calls:
 21741 ;;		Nothing
 21742 ;; This function is called by:
 21743 ;;		_putch
 21744 ;; This function uses a reentrant model
 21745 ;;
 21746                           
 21747                           	psect	text76
 21748  01A182                     __ptext76:
 21749                           	opt callstack 0
 21750  01A182                     _ringBufS_put_dma:
 21751                           	opt callstack 0
 21752                           
 21753                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21754                           ;stkvar	__this @ sp[(0)+-2]
 21755                           
 21756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21757                           ;incstack = 0
 21758 ;; hardware stack exceeded
 21759  01A182  0EFE               	movlw	-2
 21760  01A184  006F FF8C  F030    	movff	plusw1,btemp+10
 21761  01A18A  0EFF               	movlw	-1
 21762  01A18C  006F FF8C  F031    	movff	plusw1,btemp+11
 21763  01A192  0E42               	movlw	66
 21764  01A194  2430               	addwf	(btemp+10)^0,w,c
 21765  01A196  6ED9               	movwf	fsr2l,c
 21766  01A198  0E00               	movlw	0
 21767  01A19A  2031               	addwfc	(btemp+11)^0,w,c
 21768  01A19C  6EDA               	movwf	fsr2h,c
 21769  01A19E  0E40               	movlw	64
 21770  01A1A0  60DF               	cpfslt	indf2,c
 21771  01A1A2  D040               	goto	l1587
 21772                           
 21773                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21774                           ;stkvar	_c @ sp[(0)+-3]
 21775                           ;stkvar	__this @ sp[(0)+-2]
 21776  01A1A4  0EFE               	movlw	-2
 21777  01A1A6  006F FF8C  F030    	movff	plusw1,btemp+10
 21778  01A1AC  0EFF               	movlw	-1
 21779  01A1AE  006F FF8C  F031    	movff	plusw1,btemp+11
 21780  01A1B4  0E40               	movlw	64
 21781  01A1B6  2430               	addwf	(btemp+10)^0,w,c
 21782  01A1B8  6ED9               	movwf	fsr2l,c
 21783  01A1BA  0E00               	movlw	0
 21784  01A1BC  2031               	addwfc	(btemp+11)^0,w,c
 21785  01A1BE  6EDA               	movwf	fsr2h,c
 21786  01A1C0  50DF               	movf	indf2,w,c
 21787  01A1C2  6E31               	movwf	(btemp+11)^0,c
 21788                           
 21789                           ;stkvar	__this @ sp[(0)+-2]
 21790  01A1C4  0EFE               	movlw	-2
 21791  01A1C6  006F FF8C  F02E    	movff	plusw1,btemp+8
 21792  01A1CC  0EFF               	movlw	-1
 21793  01A1CE  006F FF8C  F02F    	movff	plusw1,btemp+9
 21794  01A1D4  5031               	movf	(btemp+11)^0,w,c
 21795  01A1D6  242E               	addwf	(btemp+8)^0,w,c
 21796  01A1D8  6ED9               	movwf	fsr2l,c
 21797  01A1DA  0E00               	movlw	0
 21798  01A1DC  202F               	addwfc	(btemp+9)^0,w,c
 21799  01A1DE  6EDA               	movwf	fsr2h,c
 21800  01A1E0  0EFD               	movlw	-3
 21801  01A1E2  006F FF8F FFDF     	movff	plusw1,indf2
 21802                           
 21803                           ;ringbufs.c: 71:   ++_this->head;
 21804                           ;stkvar	__this @ sp[(0)+-2]
 21805  01A1E8  0EFE               	movlw	-2
 21806  01A1EA  006F FF8C  F030    	movff	plusw1,btemp+10
 21807  01A1F0  0EFF               	movlw	-1
 21808  01A1F2  006F FF8C  F031    	movff	plusw1,btemp+11
 21809  01A1F8  0E40               	movlw	64
 21810  01A1FA  2430               	addwf	(btemp+10)^0,w,c
 21811  01A1FC  6ED9               	movwf	fsr2l,c
 21812  01A1FE  0E00               	movlw	0
 21813  01A200  2031               	addwfc	(btemp+11)^0,w,c
 21814  01A202  6EDA               	movwf	fsr2h,c
 21815  01A204  2ADF               	incf	indf2,f,c
 21816                           
 21817                           ;ringbufs.c: 72:   ++_this->count;
 21818                           ;stkvar	__this @ sp[(0)+-2]
 21819  01A206  0EFE               	movlw	-2
 21820  01A208  006F FF8C  F030    	movff	plusw1,btemp+10
 21821  01A20E  0EFF               	movlw	-1
 21822  01A210  006F FF8C  F031    	movff	plusw1,btemp+11
 21823  01A216  0E42               	movlw	66
 21824  01A218  2430               	addwf	(btemp+10)^0,w,c
 21825  01A21A  6ED9               	movwf	fsr2l,c
 21826  01A21C  0E00               	movlw	0
 21827  01A21E  2031               	addwfc	(btemp+11)^0,w,c
 21828  01A220  6EDA               	movwf	fsr2h,c
 21829  01A222  2ADF               	incf	indf2,f,c
 21830  01A224                     l1587:
 21831                           
 21832                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21833  01A224  52E5               	movf	postdec1,f,c
 21834  01A226  52E5               	movf	postdec1,f,c
 21835  01A228  52E5               	movf	postdec1,f,c
 21836  01A22A  0012               	return		;funcret
 21837  01A22C                     __end_of_ringBufS_put_dma:
 21838                           	opt callstack 0
 21839                           
 21840 ;; *************** function _atoi *****************
 21841 ;; Defined at:
 21842 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21843 ;; Parameters:    Size  Location     Type
 21844 ;;  s               2  [STACK] PTR const unsigned char 
 21845 ;;		 -> STR_65(106), STR_63(3), STR_62(3), STR_61(19), 
 21846 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21847 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21848 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21849 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21850 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21851 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21852 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21853 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21854 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21855 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21856 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21857 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21858 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21859 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21860 ;;		 -> STR_1(17), 
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;  n               2  [STACK] int 
 21863 ;;  neg             2  [STACK] int 
 21864 ;; Return value:  Size  Location     Type
 21865 ;;                  2  [STACK] int 
 21866 ;; Registers used:
 21867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21868 ;; Tracked objects:
 21869 ;;		On entry : 0/0
 21870 ;;		On exit  : 0/0
 21871 ;;		Unchanged: 0/0
 21872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21877 ;;Total ram usage:        0 bytes
 21878 ;; Hardware stack levels used:    1
 21879 ;; Hardware stack levels required when called:   16
 21880 ;; This function calls:
 21881 ;;		_isdigit
 21882 ;;		_isspace
 21883 ;; This function is called by:
 21884 ;;		_vfpfcnvrt
 21885 ;; This function uses a reentrant model
 21886 ;;
 21887                           
 21888                           	psect	text77
 21889  017610                     __ptext77:
 21890                           	opt callstack 0
 21891  017610                     _atoi:
 21892                           	opt callstack 0
 21893                           
 21894                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21895  017610  0E09               	movlw	9
 21896  017612  26E1               	addwf	fsr1l,f,c
 21897  017614  0E00               	movlw	0
 21898  017616  22E2               	addwfc	fsr1h,f,c
 21899                           
 21900                           ;stkvar	_n @ sp[(-9)+5]
 21901                           
 21902                           ;incstack = 0
 21903 ;; hardware stack exceeded
 21904  017618  0EFC               	movlw	-4
 21905  01761A  6AE3               	clrf	plusw1,c
 21906  01761C  0EFD               	movlw	-3
 21907  01761E  6AE3               	clrf	plusw1,c
 21908                           
 21909                           ;stkvar	_neg @ sp[(-9)+7]
 21910  017620  0EFE               	movlw	-2
 21911  017622  6AE3               	clrf	plusw1,c
 21912  017624  0EFF               	movlw	-1
 21913  017626  6AE3               	clrf	plusw1,c
 21914  017628  D011               	goto	l9211
 21915  01762A                     l9209:
 21916                           
 21917                           ;stkvar	_s @ sp[(-9)+-2]
 21918  01762A  0EF5               	movlw	-11
 21919  01762C  50E3               	movf	plusw1,w,c
 21920  01762E  0F01               	addlw	1
 21921  017630  6E26               	movwf	btemp^0,c
 21922  017632  0EF5               	movlw	-11
 21923  017634  0060  F09B  FFE3   	movff	btemp,plusw1
 21924  01763A  6A26               	clrf	btemp^0,c
 21925  01763C  0EF6               	movlw	-10
 21926  01763E  50E3               	movf	plusw1,w,c
 21927  017640  2026               	addwfc	btemp^0,w,c
 21928  017642  6E26               	movwf	btemp^0,c
 21929  017644  0EF6               	movlw	-10
 21930  017646  0060  F09B  FFE3   	movff	btemp,plusw1
 21931  01764C                     l9211:
 21932                           
 21933                           ;stkvar	_atoi$6049 @ sp[(-9)+4]
 21934  01764C  0EFB               	movlw	-5
 21935  01764E  6AE3               	clrf	plusw1,c
 21936  017650  2AE3               	incf	plusw1,f,c
 21937                           
 21938                           ;stkvar	_s @ sp[(-9)+-2]
 21939  017652  50E1               	movf	fsr1l,w,c
 21940  017654  0FF5               	addlw	-11
 21941  017656  6ED9               	movwf	fsr2l,c
 21942  017658  50E2               	movf	fsr1h,w,c
 21943  01765A  6EDA               	movwf	fsr2h,c
 21944  01765C  0EFF               	movlw	255
 21945  01765E  22DA               	addwfc	fsr2h,f,c
 21946  017660  006F FF7B FFF6     	movff	postinc2,tblptrl
 21947  017666  006F FF77 FFF7     	movff	postdec2,tblptrh
 21948  01766C                     	if	0	;tblptru may be non-zero
 21949  01766C                     	endif
 21950  01766C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21951  01766C  0E00               	movlw	low (__mediumconst shr (0+16))
 21952  01766E  6EF8               	movwf	tblptru,c
 21953  017670                     	endif
 21954  017670  0008               	tblrd		*
 21955  017672  50F5               	movf	tablat,w,c
 21956  017674  0A20               	xorlw	32
 21957  017676  B4D8               	btfsc	status,2,c
 21958  017678  D023               	goto	l9219
 21959  01767A  0EF7               	movlw	247
 21960  01767C  6E30               	movwf	(btemp+10)^0,c
 21961  01767E  0EFF               	movlw	255
 21962  017680  6E31               	movwf	(btemp+11)^0,c
 21963                           
 21964                           ;stkvar	_s @ sp[(-9)+-2]
 21965  017682  50E1               	movf	fsr1l,w,c
 21966  017684  0FF5               	addlw	-11
 21967  017686  6ED9               	movwf	fsr2l,c
 21968  017688  50E2               	movf	fsr1h,w,c
 21969  01768A  6EDA               	movwf	fsr2h,c
 21970  01768C  0EFF               	movlw	255
 21971  01768E  22DA               	addwfc	fsr2h,f,c
 21972  017690  006F FF7B FFF6     	movff	postinc2,tblptrl
 21973  017696  006F FF77 FFF7     	movff	postdec2,tblptrh
 21974  01769C                     	if	0	;tblptru may be non-zero
 21975  01769C                     	endif
 21976  01769C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21977  01769C  0E00               	movlw	low (__mediumconst shr (0+16))
 21978  01769E  6EF8               	movwf	tblptru,c
 21979  0176A0                     	endif
 21980  0176A0  0008               	tblrd		*
 21981  0176A2  50F5               	movf	tablat,w,c
 21982  0176A4  6E2E               	movwf	(btemp+8)^0,c
 21983  0176A6  6A2F               	clrf	(btemp+9)^0,c
 21984  0176A8  5030               	movf	(btemp+10)^0,w,c
 21985  0176AA  262E               	addwf	(btemp+8)^0,f,c
 21986  0176AC  5031               	movf	(btemp+11)^0,w,c
 21987  0176AE  222F               	addwfc	(btemp+9)^0,f,c
 21988  0176B0  502F               	movf	(btemp+9)^0,w,c
 21989  0176B2  E104               	bnz	u8480
 21990  0176B4  0E05               	movlw	5
 21991  0176B6  5C2E               	subwf	(btemp+8)^0,w,c
 21992  0176B8  A0D8               	btfss	status,0,c
 21993  0176BA  D002               	goto	l9219
 21994  0176BC                     u8480:
 21995                           
 21996                           ;stkvar	_atoi$6049 @ sp[(-9)+4]
 21997  0176BC  0EFB               	movlw	-5
 21998  0176BE  6AE3               	clrf	plusw1,c
 21999  0176C0                     l9219:
 22000                           
 22001                           ;stkvar	_atoi$6049 @ sp[(-9)+4]
 22002  0176C0  0EFB               	movlw	-5
 22003  0176C2  50E3               	movf	plusw1,w,c
 22004  0176C4  6E30               	movwf	(btemp+10)^0,c
 22005  0176C6  6A31               	clrf	(btemp+11)^0,c
 22006                           
 22007                           ;stkvar	_atoi$6048 @ sp[(-9)+2]
 22008  0176C8  0EF9               	movlw	-7
 22009  0176CA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22010  0176D0  0EFA               	movlw	-6
 22011  0176D2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22012                           
 22013                           ;stkvar	_atoi$6048 @ sp[(-9)+2]
 22014  0176D8  0EF9               	movlw	-7
 22015  0176DA  006F FF8C  F026    	movff	plusw1,btemp
 22016  0176E0  0EFA               	movlw	-6
 22017  0176E2  50E3               	movf	plusw1,w,c
 22018  0176E4  1026               	iorwf	btemp^0,w,c
 22019  0176E6  B4D8               	btfsc	status,2,c
 22020  0176E8  D01F               	goto	l9229
 22021  0176EA  D79F               	goto	l9209
 22022  0176EC                     l9225:
 22023  0176EC  0E01               	movlw	1
 22024  0176EE  6E30               	movwf	(btemp+10)^0,c
 22025  0176F0  0E00               	movlw	0
 22026  0176F2  6E31               	movwf	(btemp+11)^0,c
 22027                           
 22028                           ;stkvar	_neg @ sp[(-9)+7]
 22029  0176F4  0EFE               	movlw	-2
 22030  0176F6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22031  0176FC  0EFF               	movlw	-1
 22032  0176FE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22033  017704                     l9227:
 22034                           
 22035                           ;stkvar	_s @ sp[(-9)+-2]
 22036  017704  0EF5               	movlw	-11
 22037  017706  50E3               	movf	plusw1,w,c
 22038  017708  0F01               	addlw	1
 22039  01770A  6E26               	movwf	btemp^0,c
 22040  01770C  0EF5               	movlw	-11
 22041  01770E  0060  F09B  FFE3   	movff	btemp,plusw1
 22042  017714  6A26               	clrf	btemp^0,c
 22043  017716  0EF6               	movlw	-10
 22044  017718  50E3               	movf	plusw1,w,c
 22045  01771A  2026               	addwfc	btemp^0,w,c
 22046  01771C  6E26               	movwf	btemp^0,c
 22047  01771E  0EF6               	movlw	-10
 22048  017720  0060  F09B  FFE3   	movff	btemp,plusw1
 22049  017726  D053               	goto	l9235
 22050  017728                     l9229:
 22051                           
 22052                           ;stkvar	_s @ sp[(-9)+-2]
 22053  017728  50E1               	movf	fsr1l,w,c
 22054  01772A  0FF5               	addlw	-11
 22055  01772C  6ED9               	movwf	fsr2l,c
 22056  01772E  50E2               	movf	fsr1h,w,c
 22057  017730  6EDA               	movwf	fsr2h,c
 22058  017732  0EFF               	movlw	255
 22059  017734  22DA               	addwfc	fsr2h,f,c
 22060  017736  006F FF7B FFF6     	movff	postinc2,tblptrl
 22061  01773C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22062  017742                     	if	0	;tblptru may be non-zero
 22063  017742                     	endif
 22064  017742                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22065  017742  0E00               	movlw	low (__mediumconst shr (0+16))
 22066  017744  6EF8               	movwf	tblptru,c
 22067  017746                     	endif
 22068  017746  0008               	tblrd		*
 22069  017748  50F5               	movf	tablat,w,c
 22070  01774A  6E30               	movwf	(btemp+10)^0,c
 22071  01774C  6A31               	clrf	(btemp+11)^0,c
 22072                           
 22073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22074                           ; Switch size 1, requested type "simple"
 22075                           ; Number of cases is 1, Range of values is 0 to 0
 22076                           ; switch strategies available:
 22077                           ; Name         Instructions Cycles
 22078                           ; simple_byte            4     3 (average)
 22079                           ;	Chosen strategy is simple_byte
 22080  01774E  5031               	movf	(btemp+11)^0,w,c
 22081  017750  0A00               	xorlw	0	; case 0
 22082  017752  A4D8               	btfss	status,2,c
 22083  017754  D03C               	goto	l9235
 22084                           
 22085                           ; Switch size 1, requested type "simple"
 22086                           ; Number of cases is 2, Range of values is 43 to 45
 22087                           ; switch strategies available:
 22088                           ; Name         Instructions Cycles
 22089                           ; simple_byte            7     4 (average)
 22090                           ;	Chosen strategy is simple_byte
 22091  017756  5030               	movf	(btemp+10)^0,w,c
 22092  017758  0A2B               	xorlw	43	; case 43
 22093  01775A  B4D8               	btfsc	status,2,c
 22094  01775C  D7D3               	goto	l9227
 22095  01775E  0A06               	xorlw	6	; case 45
 22096  017760  B4D8               	btfsc	status,2,c
 22097  017762  D7C4               	goto	l9225
 22098  017764  D034               	goto	l9235
 22099  017766                     l9231:
 22100                           
 22101                           ;stkvar	_n @ sp[(-9)+5]
 22102  017766  0EFC               	movlw	-4
 22103  017768  006F FF8C  F030    	movff	plusw1,btemp+10
 22104  01776E  0EFD               	movlw	-3
 22105  017770  006F FF8C  F031    	movff	plusw1,btemp+11
 22106  017776  0E0A               	movlw	10
 22107  017778  0230               	mulwf	(btemp+10)^0,c
 22108  01777A  006F FFCC  F02E    	movff	prodl,btemp+8
 22109  017780  006F FFD0  F02F    	movff	prodh,btemp+9
 22110  017786  0231               	mulwf	(btemp+11)^0,c
 22111  017788  50F3               	movf	prodl,w,c
 22112  01778A  262F               	addwf	(btemp+9)^0,f,c
 22113                           
 22114                           ;stkvar	_s @ sp[(-9)+-2]
 22115  01778C  50E1               	movf	fsr1l,w,c
 22116  01778E  0FF5               	addlw	-11
 22117  017790  6ED9               	movwf	fsr2l,c
 22118  017792  50E2               	movf	fsr1h,w,c
 22119  017794  6EDA               	movwf	fsr2h,c
 22120  017796  0EFF               	movlw	255
 22121  017798  22DA               	addwfc	fsr2h,f,c
 22122  01779A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22123  0177A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22124  0177A6                     	if	0	;tblptru may be non-zero
 22125  0177A6                     	endif
 22126  0177A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22127  0177A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22128  0177A8  6EF8               	movwf	tblptru,c
 22129  0177AA                     	endif
 22130  0177AA  0008               	tblrd		*
 22131  0177AC  50F5               	movf	tablat,w,c
 22132  0177AE  5E2E               	subwf	(btemp+8)^0,f,c
 22133  0177B0  0E00               	movlw	0
 22134  0177B2  5A2F               	subwfb	(btemp+9)^0,f,c
 22135  0177B4  0E30               	movlw	48
 22136  0177B6  262E               	addwf	(btemp+8)^0,f,c
 22137  0177B8  0E00               	movlw	0
 22138  0177BA  222F               	addwfc	(btemp+9)^0,f,c
 22139                           
 22140                           ;stkvar	_n @ sp[(-9)+5]
 22141  0177BC  0EFC               	movlw	-4
 22142  0177BE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 22143  0177C4  0EFD               	movlw	-3
 22144  0177C6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 22145  0177CC  D79B               	goto	l9227
 22146  0177CE                     l9235:
 22147  0177CE  0ED0               	movlw	208
 22148  0177D0  6E30               	movwf	(btemp+10)^0,c
 22149  0177D2  0EFF               	movlw	255
 22150  0177D4  6E31               	movwf	(btemp+11)^0,c
 22151                           
 22152                           ;stkvar	_s @ sp[(-9)+-2]
 22153  0177D6  50E1               	movf	fsr1l,w,c
 22154  0177D8  0FF5               	addlw	-11
 22155  0177DA  6ED9               	movwf	fsr2l,c
 22156  0177DC  50E2               	movf	fsr1h,w,c
 22157  0177DE  6EDA               	movwf	fsr2h,c
 22158  0177E0  0EFF               	movlw	255
 22159  0177E2  22DA               	addwfc	fsr2h,f,c
 22160  0177E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22161  0177EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22162  0177F0                     	if	0	;tblptru may be non-zero
 22163  0177F0                     	endif
 22164  0177F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22165  0177F0  0E00               	movlw	low (__mediumconst shr (0+16))
 22166  0177F2  6EF8               	movwf	tblptru,c
 22167  0177F4                     	endif
 22168  0177F4  0008               	tblrd		*
 22169  0177F6  50F5               	movf	tablat,w,c
 22170  0177F8  6E2E               	movwf	(btemp+8)^0,c
 22171  0177FA  6A2F               	clrf	(btemp+9)^0,c
 22172  0177FC  5030               	movf	(btemp+10)^0,w,c
 22173  0177FE  262E               	addwf	(btemp+8)^0,f,c
 22174  017800  5031               	movf	(btemp+11)^0,w,c
 22175  017802  222F               	addwfc	(btemp+9)^0,f,c
 22176  017804  502F               	movf	(btemp+9)^0,w,c
 22177  017806  E106               	bnz	u8500
 22178  017808  0E0A               	movlw	10
 22179  01780A  5C2E               	subwf	(btemp+8)^0,w,c
 22180  01780C  B0D8               	btfsc	status,0,c
 22181  01780E  D002               	goto	u8500
 22182  017810  0E01               	movlw	1
 22183  017812  D001               	goto	u8510
 22184  017814                     u8500:
 22185  017814  0E00               	movlw	0
 22186  017816                     u8510:
 22187  017816  6E30               	movwf	(btemp+10)^0,c
 22188  017818  6A31               	clrf	(btemp+11)^0,c
 22189                           
 22190                           ;stkvar	_atoi$6050 @ sp[(-9)+0]
 22191  01781A  0EF7               	movlw	-9
 22192  01781C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22193  017822  0EF8               	movlw	-8
 22194  017824  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22195                           
 22196                           ;stkvar	_atoi$6050 @ sp[(-9)+0]
 22197  01782A  0EF7               	movlw	-9
 22198  01782C  006F FF8C  F026    	movff	plusw1,btemp
 22199  017832  0EF8               	movlw	-8
 22200  017834  50E3               	movf	plusw1,w,c
 22201  017836  1026               	iorwf	btemp^0,w,c
 22202  017838  A4D8               	btfss	status,2,c
 22203  01783A  D795               	goto	l9231
 22204                           
 22205                           ;stkvar	_neg @ sp[(-9)+7]
 22206  01783C  0EFE               	movlw	-2
 22207  01783E  006F FF8C  F026    	movff	plusw1,btemp
 22208  017844  0EFF               	movlw	-1
 22209  017846  50E3               	movf	plusw1,w,c
 22210  017848  1026               	iorwf	btemp^0,w,c
 22211  01784A  A4D8               	btfss	status,2,c
 22212  01784C  D00E               	goto	l9245
 22213                           
 22214                           ;stkvar	_n @ sp[(-9)+5]
 22215  01784E  0EFC               	movlw	-4
 22216  017850  006F FF8C  F026    	movff	plusw1,btemp
 22217  017856  1E26               	comf	btemp^0,f,c
 22218  017858  0EFD               	movlw	-3
 22219  01785A  006F FF8C  F027    	movff	plusw1,btemp+1
 22220  017860  1E27               	comf	(btemp+1)^0,f,c
 22221  017862  2A26               	incf	btemp^0,f,c
 22222  017864  B4D8               	btfsc	status,2,c
 22223  017866  2A27               	incf	(btemp+1)^0,f,c
 22224  017868  D008               	goto	l3116
 22225  01786A                     l9245:
 22226                           
 22227                           ;stkvar	_n @ sp[(-9)+5]
 22228  01786A  0EFC               	movlw	-4
 22229  01786C  006F FF8C  F026    	movff	plusw1,btemp
 22230  017872  0EFD               	movlw	-3
 22231  017874  006F FF8C  F027    	movff	plusw1,btemp+1
 22232  01787A                     l3116:
 22233                           
 22234                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22235  01787A  0EF5               	movlw	245
 22236  01787C  26E1               	addwf	fsr1l,f,c
 22237  01787E  0EFF               	movlw	255
 22238  017880  22E2               	addwfc	fsr1h,f,c
 22239  017882  0012               	return		;funcret
 22240  017884                     __end_of_atoi:
 22241                           	opt callstack 0
 22242                           
 22243 ;; *************** function _isspace *****************
 22244 ;; Defined at:
 22245 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22246 ;; Parameters:    Size  Location     Type
 22247 ;;  c               2  [STACK] int 
 22248 ;; Auto vars:     Size  Location     Type
 22249 ;;		None
 22250 ;; Return value:  Size  Location     Type
 22251 ;;                  2  [STACK] int 
 22252 ;; Registers used:
 22253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22254 ;; Tracked objects:
 22255 ;;		On entry : 0/0
 22256 ;;		On exit  : 0/0
 22257 ;;		Unchanged: 0/0
 22258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22263 ;;Total ram usage:        0 bytes
 22264 ;; Hardware stack levels used:    1
 22265 ;; Hardware stack levels required when called:   15
 22266 ;; This function calls:
 22267 ;;		Nothing
 22268 ;; This function is called by:
 22269 ;;		_atoi
 22270 ;; This function uses a reentrant model
 22271 ;;
 22272                           
 22273                           	psect	text78
 22274  01AD20                     __ptext78:
 22275                           	opt callstack 0
 22276  01AD20                     _isspace:
 22277                           	opt callstack 0
 22278                           
 22279                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22280  01AD20  52E6               	movf	postinc1,f,c
 22281                           
 22282                           ;stkvar	_isspace$6099 @ sp[(-1)+0]
 22283                           
 22284                           ;incstack = 0
 22285 ;; hardware stack exceeded
 22286  01AD22  0EFF               	movlw	-1
 22287  01AD24  6AE3               	clrf	plusw1,c
 22288  01AD26  2AE3               	incf	plusw1,f,c
 22289                           
 22290                           ;stkvar	_c @ sp[(-1)+-2]
 22291  01AD28  0EFD               	movlw	-3
 22292  01AD2A  006F FF8C  F026    	movff	plusw1,btemp
 22293  01AD30  0E20               	movlw	32
 22294  01AD32  1826               	xorwf	btemp^0,w,c
 22295  01AD34  E104               	bnz	u7330
 22296  01AD36  0EFE               	movlw	-2
 22297  01AD38  50E3               	movf	plusw1,w,c
 22298  01AD3A  B4D8               	btfsc	status,2,c
 22299  01AD3C  D012               	goto	l8603
 22300  01AD3E                     u7330:
 22301                           
 22302                           ;stkvar	_c @ sp[(-1)+-2]
 22303  01AD3E  0EFD               	movlw	-3
 22304  01AD40  50E3               	movf	plusw1,w,c
 22305  01AD42  0FF7               	addlw	247
 22306  01AD44  6E30               	movwf	(btemp+10)^0,c
 22307  01AD46  0EFE               	movlw	-2
 22308  01AD48  006F FF8C  F031    	movff	plusw1,btemp+11
 22309  01AD4E  0EFF               	movlw	255
 22310  01AD50  2231               	addwfc	(btemp+11)^0,f,c
 22311  01AD52  5031               	movf	(btemp+11)^0,w,c
 22312  01AD54  E104               	bnz	u7340
 22313  01AD56  0E05               	movlw	5
 22314  01AD58  5C30               	subwf	(btemp+10)^0,w,c
 22315  01AD5A  A0D8               	btfss	status,0,c
 22316  01AD5C  D002               	goto	l8603
 22317  01AD5E                     u7340:
 22318                           
 22319                           ;stkvar	_isspace$6099 @ sp[(-1)+0]
 22320  01AD5E  0EFF               	movlw	-1
 22321  01AD60  6AE3               	clrf	plusw1,c
 22322  01AD62                     l8603:
 22323                           
 22324                           ;stkvar	_isspace$6099 @ sp[(-1)+0]
 22325  01AD62  0EFF               	movlw	-1
 22326  01AD64  50E3               	movf	plusw1,w,c
 22327  01AD66  6E26               	movwf	btemp^0,c
 22328  01AD68  6A27               	clrf	(btemp+1)^0,c
 22329                           
 22330                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22331  01AD6A  52E5               	movf	postdec1,f,c
 22332  01AD6C  52E5               	movf	postdec1,f,c
 22333  01AD6E  52E5               	movf	postdec1,f,c
 22334  01AD70  0012               	return		;funcret
 22335  01AD72                     __end_of_isspace:
 22336                           	opt callstack 0
 22337                           
 22338 ;; *************** function _isdigit *****************
 22339 ;; Defined at:
 22340 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;  c               2  [STACK] int 
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  2  [STACK] int 
 22347 ;; Registers used:
 22348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22358 ;;Total ram usage:        0 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; Hardware stack levels required when called:   15
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_vfpfcnvrt
 22365 ;;		_atoi
 22366 ;; This function uses a reentrant model
 22367 ;;
 22368                           
 22369                           	psect	text79
 22370  01B414                     __ptext79:
 22371                           	opt callstack 0
 22372  01B414                     _isdigit:
 22373                           	opt callstack 0
 22374                           
 22375                           ;stkvar	_c @ sp[(0)+-2]
 22376                           
 22377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22378                           ;incstack = 0
 22379 ;; hardware stack exceeded
 22380  01B414  0EFE               	movlw	-2
 22381  01B416  50E3               	movf	plusw1,w,c
 22382  01B418  0FD0               	addlw	208
 22383  01B41A  6E30               	movwf	(btemp+10)^0,c
 22384  01B41C  0EFF               	movlw	-1
 22385  01B41E  006F FF8C  F031    	movff	plusw1,btemp+11
 22386  01B424  0EFF               	movlw	255
 22387  01B426  2231               	addwfc	(btemp+11)^0,f,c
 22388  01B428  5031               	movf	(btemp+11)^0,w,c
 22389  01B42A  E106               	bnz	u6180
 22390  01B42C  0E0A               	movlw	10
 22391  01B42E  5C30               	subwf	(btemp+10)^0,w,c
 22392  01B430  B0D8               	btfsc	status,0,c
 22393  01B432  D002               	goto	u6180
 22394  01B434  0E01               	movlw	1
 22395  01B436  D001               	goto	u6190
 22396  01B438                     u6180:
 22397  01B438  0E00               	movlw	0
 22398  01B43A                     u6190:
 22399  01B43A  6E26               	movwf	btemp^0,c
 22400  01B43C  6A27               	clrf	(btemp+1)^0,c
 22401                           
 22402                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22403  01B43E  52E5               	movf	postdec1,f,c
 22404  01B440  52E5               	movf	postdec1,f,c
 22405  01B442  0012               	return		;funcret
 22406  01B444                     __end_of_isdigit:
 22407                           	opt callstack 0
 22408                           
 22409 ;; *************** function _set_vterm *****************
 22410 ;; Defined at:
 22411 ;;		line 107 in file "mconfig.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;  vterm           1  [STACK] const unsigned char 
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;		None
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1  [STACK] unsigned char 
 22418 ;; Registers used:
 22419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/1
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22429 ;;Total ram usage:        0 bytes
 22430 ;; Hardware stack levels used:    1
 22431 ;; Hardware stack levels required when called:   15
 22432 ;; This function calls:
 22433 ;;		Nothing
 22434 ;; This function is called by:
 22435 ;;		_main
 22436 ;;		_check_help
 22437 ;; This function uses a reentrant model
 22438 ;;
 22439                           
 22440                           	psect	text80
 22441  01B94E                     __ptext80:
 22442                           	opt callstack 0
 22443  01B94E                     _set_vterm:
 22444                           	opt callstack 15
 22445                           
 22446                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22447                           ;stkvar	_vterm @ sp[(0)+-1]
 22448                           
 22449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22450                           ;incstack = 0
 22451  01B94E  0EFF               	movlw	-1
 22452  01B950  006F FF8C  F031    	movff	plusw1,btemp+11
 22453  01B956  0E03               	movlw	3
 22454  01B958  1631               	andwf	(btemp+11)^0,f,c
 22455  01B95A  EE22  F206         	lfsr	2,_D+480
 22456  01B95E  50DF               	movf	223,w,c
 22457  01B960  1831               	xorwf	(btemp+11)^0,w,c
 22458  01B962  0BFE               	andlw	-2
 22459  01B964  1831               	xorwf	(btemp+11)^0,w,c
 22460  01B966  6EDF               	movwf	223,c
 22461                           
 22462                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22463  01B968  52E5               	movf	postdec1,f,c
 22464  01B96A  0012               	return		;funcret
 22465  01B96C                     __end_of_set_vterm:
 22466                           	opt callstack 0
 22467                           
 22468 ;; *************** function _set_temp_display_help *****************
 22469 ;; Defined at:
 22470 ;;		line 211 in file "mconfig.c"
 22471 ;; Parameters:    Size  Location     Type
 22472 ;;  new_response    1  [STACK] const enum E16509
 22473 ;; Auto vars:     Size  Location     Type
 22474 ;;		None
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  1  [STACK] enum E16509
 22477 ;; Registers used:
 22478 ;;		wreg, fsr1l, fsr1h
 22479 ;; Tracked objects:
 22480 ;;		On entry : 0/1
 22481 ;;		On exit  : 3F/1
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22488 ;;Total ram usage:        0 bytes
 22489 ;; Hardware stack levels used:    1
 22490 ;; Hardware stack levels required when called:   15
 22491 ;; This function calls:
 22492 ;;		Nothing
 22493 ;; This function is called by:
 22494 ;;		_check_help
 22495 ;; This function uses a reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text81
 22499  01BACE                     __ptext81:
 22500                           	opt callstack 0
 22501  01BACE                     _set_temp_display_help:
 22502                           	opt callstack 14
 22503                           
 22504                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22505                           
 22506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22507                           ;incstack = 0
 22508  01BACE  0101               	movlb	1	; () banked
 22509  01BAD0  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 22510                           
 22511                           ; BSR set to: 1
 22512                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22513                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22514  01BAD2  0EFF               	movlw	-1
 22515  01BAD4  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 22516                           
 22517                           ; BSR set to: 1
 22518                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22519  01BADA  52E5               	movf	postdec1,f,c
 22520  01BADC  0012               	return		;funcret
 22521  01BADE                     __end_of_set_temp_display_help:
 22522                           	opt callstack 0
 22523                           
 22524 ;; *************** function _set_display_info *****************
 22525 ;; Defined at:
 22526 ;;		line 200 in file "mconfig.c"
 22527 ;; Parameters:    Size  Location     Type
 22528 ;;  new_response    1  [STACK] const enum E16509
 22529 ;; Auto vars:     Size  Location     Type
 22530 ;;		None
 22531 ;; Return value:  Size  Location     Type
 22532 ;;                  1  [STACK] enum E16994
 22533 ;; Registers used:
 22534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22535 ;; Tracked objects:
 22536 ;;		On entry : 0/1
 22537 ;;		On exit  : 0/0
 22538 ;;		Unchanged: 0/0
 22539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22544 ;;Total ram usage:        0 bytes
 22545 ;; Hardware stack levels used:    1
 22546 ;; Hardware stack levels required when called:   16
 22547 ;; This function calls:
 22548 ;;		_TimerDone
 22549 ;; This function is called by:
 22550 ;;		_main
 22551 ;;		_check_help
 22552 ;; This function uses a reentrant model
 22553 ;;
 22554                           
 22555                           	psect	text82
 22556  01B96C                     __ptext82:
 22557                           	opt callstack 0
 22558  01B96C                     _set_display_info:
 22559                           	opt callstack 14
 22560                           
 22561                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22562                           
 22563                           ; BSR set to: 1
 22564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22565                           ;incstack = 0
 22566  01B96C  0E07               	movlw	7
 22567  01B96E  6EE6               	movwf	postinc1,c
 22568  01B970  ECE5  F0DA         	call	_TimerDone	;wreg free
 22569  01B974  5026               	movf	btemp^0,w,c
 22570  01B976  B4D8               	btfsc	status,2,c
 22571  01B978  D006               	goto	l1722
 22572                           
 22573                           ;mconfig.c: 205:   old_info = V.response.info;
 22574  01B97A  0101               	movlb	1	; () banked
 22575  01B97C  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 22576                           
 22577                           ; BSR set to: 1
 22578                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22579                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22580  01B97E  0EFF               	movlw	-1
 22581  01B980  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 22582  01B986                     l1722:
 22583                           
 22584                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22585  01B986  52E5               	movf	postdec1,f,c
 22586  01B988  0012               	return		;funcret
 22587  01B98A                     __end_of_set_display_info:
 22588                           	opt callstack 0
 22589                           
 22590 ;; *************** function _mode_lamp_dim *****************
 22591 ;; Defined at:
 22592 ;;		line 13 in file "mconfig.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;  level           2  [STACK] const unsigned short 
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1  [STACK] void 
 22599 ;; Registers used:
 22600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/1
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   16
 22613 ;; This function calls:
 22614 ;;		_PWM8_LoadDutyValue
 22615 ;; This function is called by:
 22616 ;;		_main
 22617 ;;		_check_help
 22618 ;; This function uses a reentrant model
 22619 ;;
 22620                           
 22621                           	psect	text83
 22622  01BA16                     __ptext83:
 22623                           	opt callstack 0
 22624  01BA16                     _mode_lamp_dim:
 22625                           	opt callstack 14
 22626                           
 22627                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22628                           ;stkvar	_level @ sp[(0)+-2]
 22629                           
 22630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22631                           ;incstack = 0
 22632  01BA16  0EFE               	movlw	-2
 22633  01BA18  006F FF8F FFE6     	movff	plusw1,postinc1
 22634  01BA1E  006F FF8F FFE6     	movff	plusw1,postinc1
 22635  01BA24  EC23  F0D8         	call	_PWM8_LoadDutyValue	;wreg free
 22636                           
 22637                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22638  01BA28  52E5               	movf	postdec1,f,c
 22639  01BA2A  52E5               	movf	postdec1,f,c
 22640  01BA2C  0012               	return		;funcret
 22641  01BA2E                     __end_of_mode_lamp_dim:
 22642                           	opt callstack 0
 22643                           
 22644 ;; *************** function _mode_lamp_bright *****************
 22645 ;; Defined at:
 22646 ;;		line 18 in file "mconfig.c"
 22647 ;; Parameters:    Size  Location     Type
 22648 ;;		None
 22649 ;; Auto vars:     Size  Location     Type
 22650 ;;		None
 22651 ;; Return value:  Size  Location     Type
 22652 ;;                  1  [STACK] void 
 22653 ;; Registers used:
 22654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22655 ;; Tracked objects:
 22656 ;;		On entry : 0/0
 22657 ;;		On exit  : 0/0
 22658 ;;		Unchanged: 0/0
 22659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22664 ;;Total ram usage:        0 bytes
 22665 ;; Hardware stack levels used:    1
 22666 ;; Hardware stack levels required when called:   16
 22667 ;; This function calls:
 22668 ;;		_PWM8_LoadDutyValue
 22669 ;; This function is called by:
 22670 ;;		_check_help
 22671 ;; This function uses a reentrant model
 22672 ;;
 22673                           
 22674                           	psect	text84
 22675  01BAFC                     __ptext84:
 22676                           	opt callstack 0
 22677  01BAFC                     _mode_lamp_bright:
 22678                           	opt callstack 13
 22679                           
 22680                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22681                           
 22682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22683                           ;incstack = 0
 22684  01BAFC  0E2C               	movlw	44
 22685  01BAFE  6EE6               	movwf	postinc1,c
 22686  01BB00  0E01               	movlw	1
 22687  01BB02  6EE6               	movwf	postinc1,c
 22688  01BB04  EC23  F0D8         	call	_PWM8_LoadDutyValue	;wreg free
 22689                           
 22690                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22691  01BB08  0012               	return		;funcret
 22692  01BB0A                     __end_of_mode_lamp_bright:
 22693                           	opt callstack 0
 22694                           
 22695 ;; *************** function _PWM8_LoadDutyValue *****************
 22696 ;; Defined at:
 22697 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22698 ;; Parameters:    Size  Location     Type
 22699 ;;  dutyValue       2  [STACK] unsigned short 
 22700 ;; Auto vars:     Size  Location     Type
 22701 ;;		None
 22702 ;; Return value:  Size  Location     Type
 22703 ;;                  1  [STACK] void 
 22704 ;; Registers used:
 22705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22706 ;; Tracked objects:
 22707 ;;		On entry : 0/1
 22708 ;;		On exit  : 0/0
 22709 ;;		Unchanged: 0/0
 22710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22715 ;;Total ram usage:        0 bytes
 22716 ;; Hardware stack levels used:    1
 22717 ;; Hardware stack levels required when called:   15
 22718 ;; This function calls:
 22719 ;;		Nothing
 22720 ;; This function is called by:
 22721 ;;		_mode_lamp_dim
 22722 ;;		_mode_lamp_bright
 22723 ;; This function uses a reentrant model
 22724 ;;
 22725                           
 22726                           	psect	text85
 22727  01B046                     __ptext85:
 22728                           	opt callstack 0
 22729  01B046                     _PWM8_LoadDutyValue:
 22730                           	opt callstack 14
 22731                           
 22732                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22733                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22734                           
 22735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22736                           ;incstack = 0
 22737  01B046  0EFE               	movlw	-2
 22738  01B048  006F FF8C  F030    	movff	plusw1,btemp+10
 22739  01B04E  0EFF               	movlw	-1
 22740  01B050  006F FF8C  F031    	movff	plusw1,btemp+11
 22741  01B056  90D8               	bcf	status,0,c
 22742  01B058  3231               	rrcf	(btemp+11)^0,f,c
 22743  01B05A  3230               	rrcf	(btemp+10)^0,f,c
 22744  01B05C  90D8               	bcf	status,0,c
 22745  01B05E  3231               	rrcf	(btemp+11)^0,f,c
 22746  01B060  3230               	rrcf	(btemp+10)^0,f,c
 22747  01B062  5030               	movf	(btemp+10)^0,w,c
 22748  01B064  6E61               	movwf	97,c	;volatile
 22749                           
 22750                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22751                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22752  01B066  0EFE               	movlw	-2
 22753  01B068  006F FF8C  F031    	movff	plusw1,btemp+11
 22754  01B06E  0E03               	movlw	3
 22755  01B070  1631               	andwf	(btemp+11)^0,f,c
 22756  01B072  0E06               	movlw	6
 22757  01B074  6E26               	movwf	btemp^0,c
 22758  01B076                     u9325:
 22759  01B076  90D8               	bcf	status,0,c
 22760  01B078  3631               	rlcf	(btemp+11)^0,f,c
 22761  01B07A  2E26               	decfsz	btemp^0,f,c
 22762  01B07C  D7FC               	goto	u9325
 22763  01B07E  5031               	movf	(btemp+11)^0,w,c
 22764  01B080  6E60               	movwf	96,c	;volatile
 22765                           
 22766                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22767  01B082  52E5               	movf	postdec1,f,c
 22768  01B084  52E5               	movf	postdec1,f,c
 22769  01B086  0012               	return		;funcret
 22770  01B088                     __end_of_PWM8_LoadDutyValue:
 22771                           	opt callstack 0
 22772                           
 22773 ;; *************** function _help_button *****************
 22774 ;; Defined at:
 22775 ;;		line 26 in file "mconfig.c"
 22776 ;; Parameters:    Size  Location     Type
 22777 ;;		None
 22778 ;; Auto vars:     Size  Location     Type
 22779 ;;		None
 22780 ;; Return value:  Size  Location     Type
 22781 ;;                  1  [STACK] _Bool 
 22782 ;; Registers used:
 22783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22784 ;; Tracked objects:
 22785 ;;		On entry : 0/1
 22786 ;;		On exit  : 0/0
 22787 ;;		Unchanged: 0/0
 22788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22793 ;;Total ram usage:        0 bytes
 22794 ;; Hardware stack levels used:    1
 22795 ;; Hardware stack levels required when called:   16
 22796 ;; This function calls:
 22797 ;;		_StartTimer
 22798 ;;		_TimerDone
 22799 ;; This function is called by:
 22800 ;;		_check_help
 22801 ;; This function uses a reentrant model
 22802 ;;
 22803                           
 22804                           	psect	text86
 22805  01B240                     __ptext86:
 22806                           	opt callstack 0
 22807  01B240                     _help_button:
 22808                           	opt callstack 13
 22809                           
 22810                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22811                           
 22812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22813                           ;incstack = 0
 22814  01B240  B0CB               	btfsc	203,0,c	;volatile
 22815  01B242  D00C               	goto	l1665
 22816                           
 22817                           ;mconfig.c: 29:   V.help = 1;
 22818  01B244  0101               	movlb	1	; () banked
 22819  01B246  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22823  01B248  0E08               	movlw	8
 22824  01B24A  6EE6               	movwf	postinc1,c
 22825  01B24C  ECE5  F0DA         	call	_TimerDone	;wreg free
 22826  01B250  5026               	movf	btemp^0,w,c
 22827  01B252  B4D8               	btfsc	status,2,c
 22828  01B254  D003               	goto	l1665
 22829                           
 22830                           ;mconfig.c: 31:    return 1;
 22831  01B256  0E01               	movlw	1
 22832  01B258  6E26               	movwf	btemp^0,c
 22833  01B25A  0012               	return	
 22834  01B25C                     l1665:
 22835                           
 22836                           ;mconfig.c: 34:  if (!V.help)
 22837  01B25C  0101               	movlb	1	; () banked
 22838  01B25E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22839  01B260  D008               	goto	l10337
 22840                           
 22841                           ; BSR set to: 1
 22842                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22843  01B262  0E2C               	movlw	44
 22844  01B264  6EE6               	movwf	postinc1,c
 22845  01B266  0E01               	movlw	1
 22846  01B268  6EE6               	movwf	postinc1,c
 22847  01B26A  0E08               	movlw	8
 22848  01B26C  6EE6               	movwf	postinc1,c
 22849  01B26E  EC44  F0D8         	call	_StartTimer	;wreg free
 22850  01B272                     l10337:
 22851                           
 22852                           ;mconfig.c: 37:  return 0;
 22853  01B272  0E00               	movlw	0
 22854  01B274  6E26               	movwf	btemp^0,c
 22855                           
 22856                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22857  01B276  0012               	return		;funcret
 22858  01B278                     __end_of_help_button:
 22859                           	opt callstack 0
 22860                           
 22861 ;; *************** function _TimerDone *****************
 22862 ;; Defined at:
 22863 ;;		line 20 in file "timers.c"
 22864 ;; Parameters:    Size  Location     Type
 22865 ;;  timer           1  [STACK] const unsigned char 
 22866 ;; Auto vars:     Size  Location     Type
 22867 ;;		None
 22868 ;; Return value:  Size  Location     Type
 22869 ;;                  1  [STACK] _Bool 
 22870 ;; Registers used:
 22871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22872 ;; Tracked objects:
 22873 ;;		On entry : 0/1
 22874 ;;		On exit  : 0/0
 22875 ;;		Unchanged: 0/0
 22876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22881 ;;Total ram usage:        0 bytes
 22882 ;; Hardware stack levels used:    1
 22883 ;; Hardware stack levels required when called:   15
 22884 ;; This function calls:
 22885 ;;		Nothing
 22886 ;; This function is called by:
 22887 ;;		_main
 22888 ;;		_WaitMs
 22889 ;;		_help_button
 22890 ;;		_check_help
 22891 ;;		_set_display_info
 22892 ;;		_update_adc_result
 22893 ;;		_esr_check
 22894 ;; This function uses a reentrant model
 22895 ;;
 22896                           
 22897                           	psect	text87
 22898  01B5CA                     __ptext87:
 22899                           	opt callstack 0
 22900  01B5CA                     _TimerDone:
 22901                           	opt callstack 14
 22902                           
 22903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22904                           ;incstack = 0
 22905  01B5CA  0004               	clrwdt		;# 
 22906                           
 22907                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22908                           ;stkvar	_timer @ sp[(0)+-1]
 22909  01B5CC  0EFF               	movlw	-1
 22910  01B5CE  50E3               	movf	plusw1,w,c
 22911  01B5D0  0D02               	mullw	2
 22912  01B5D2  0E94               	movlw	low _tickCount
 22913  01B5D4  24F3               	addwf	243,w,c
 22914  01B5D6  6ED9               	movwf	fsr2l,c
 22915  01B5D8  0E02               	movlw	high _tickCount
 22916  01B5DA  20F4               	addwfc	prodh,w,c
 22917  01B5DC  6EDA               	movwf	fsr2h,c
 22918  01B5DE  50DE               	movf	postinc2,w,c
 22919  01B5E0  10DE               	iorwf	postinc2,w,c
 22920  01B5E2  A4D8               	btfss	status,2,c
 22921  01B5E4  D002               	goto	l9643
 22922                           
 22923                           ;timers.c: 24:   return 1;
 22924  01B5E6  0E01               	movlw	1
 22925  01B5E8  D001               	goto	L27
 22926  01B5EA                     l9643:
 22927                           
 22928                           ;timers.c: 26:  return 0;
 22929  01B5EA  0E00               	movlw	0
 22930  01B5EC                     L27:
 22931  01B5EC  6E26               	movwf	btemp^0,c
 22932                           
 22933                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22934  01B5EE  52E5               	movf	postdec1,f,c
 22935  01B5F0  0012               	return		;funcret
 22936  01B5F2                     __end_of_TimerDone:
 22937                           	opt callstack 0
 22938                           
 22939 ;; *************** function _StartTimer *****************
 22940 ;; Defined at:
 22941 ;;		line 12 in file "timers.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  timer           1  [STACK] const unsigned char 
 22944 ;;  count           2  [STACK] const unsigned short 
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;		None
 22947 ;; Return value:  Size  Location     Type
 22948 ;;                  1  [STACK] void 
 22949 ;; Registers used:
 22950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 0/0
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;Total ram usage:        0 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:   15
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_main
 22967 ;;		_WaitMs
 22968 ;;		_help_button
 22969 ;;		_check_help
 22970 ;;		_update_adc_result
 22971 ;;		_calc_bsoc
 22972 ;;		_esr_check
 22973 ;; This function uses a reentrant model
 22974 ;;
 22975                           
 22976                           	psect	text88
 22977  01B088                     __ptext88:
 22978                           	opt callstack 0
 22979  01B088                     _StartTimer:
 22980                           	opt callstack 0
 22981                           
 22982                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22983                           ;stkvar	_count @ sp[(0)+-3]
 22984                           
 22985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22986                           ;incstack = 0
 22987 ;; hardware stack exceeded
 22988  01B088  0EFD               	movlw	-3
 22989  01B08A  006F FF8C  F030    	movff	plusw1,btemp+10
 22990  01B090  0EFE               	movlw	-2
 22991  01B092  006F FF8C  F031    	movff	plusw1,btemp+11
 22992  01B098  90D8               	bcf	status,0,c
 22993  01B09A  3430               	rlcf	(btemp+10)^0,w,c
 22994  01B09C  6E2E               	movwf	(btemp+8)^0,c
 22995  01B09E  3431               	rlcf	(btemp+11)^0,w,c
 22996  01B0A0  6E2F               	movwf	(btemp+9)^0,c
 22997                           
 22998                           ;stkvar	_timer @ sp[(0)+-1]
 22999  01B0A2  0EFF               	movlw	-1
 23000  01B0A4  50E3               	movf	plusw1,w,c
 23001  01B0A6  0D02               	mullw	2
 23002  01B0A8  0E94               	movlw	low _tickCount
 23003  01B0AA  24F3               	addwf	243,w,c
 23004  01B0AC  6ED9               	movwf	fsr2l,c
 23005  01B0AE  0E02               	movlw	high _tickCount
 23006  01B0B0  20F4               	addwfc	prodh,w,c
 23007  01B0B2  6EDA               	movwf	fsr2h,c
 23008  01B0B4  0060  F0BB  FFDE   	movff	btemp+8,postinc2
 23009  01B0BA  0060  F0BF  FFDD   	movff	btemp+9,postdec2
 23010                           
 23011                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23012  01B0C0  52E5               	movf	postdec1,f,c
 23013  01B0C2  52E5               	movf	postdec1,f,c
 23014  01B0C4  52E5               	movf	postdec1,f,c
 23015  01B0C6  0012               	return		;funcret
 23016  01B0C8                     __end_of_StartTimer:
 23017                           	opt callstack 0
 23018                           
 23019 ;; *************** function _display_info *****************
 23020 ;; Defined at:
 23021 ;;		line 190 in file "mconfig.c"
 23022 ;; Parameters:    Size  Location     Type
 23023 ;;		None
 23024 ;; Auto vars:     Size  Location     Type
 23025 ;;		None
 23026 ;; Return value:  Size  Location     Type
 23027 ;;                  1  [STACK] enum E16509
 23028 ;; Registers used:
 23029 ;;		btemp
 23030 ;; Tracked objects:
 23031 ;;		On entry : 0/1
 23032 ;;		On exit  : 0/0
 23033 ;;		Unchanged: 0/0
 23034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23039 ;;Total ram usage:        0 bytes
 23040 ;; Hardware stack levels used:    1
 23041 ;; Hardware stack levels required when called:   15
 23042 ;; This function calls:
 23043 ;;		Nothing
 23044 ;; This function is called by:
 23045 ;;		_check_help
 23046 ;; This function uses a reentrant model
 23047 ;;
 23048                           
 23049                           	psect	text89
 23050  01BB7E                     __ptext89:
 23051                           	opt callstack 0
 23052  01BB7E                     _display_info:
 23053                           	opt callstack 14
 23054                           
 23055                           ;mconfig.c: 192:  return V.response.info;
 23056                           
 23057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23058                           ;incstack = 0
 23059  01BB7E  0060  F6AC  F026   	movff	_V+164,btemp	;volatile
 23060                           
 23061                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23062  01BB84  0012               	return		;funcret
 23063  01BB86                     __end_of_display_info:
 23064                           	opt callstack 0
 23065                           
 23066 ;; *************** function _display_help *****************
 23067 ;; Defined at:
 23068 ;;		line 195 in file "mconfig.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;		None
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;		None
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  1  [STACK] enum E16509
 23075 ;; Registers used:
 23076 ;;		btemp
 23077 ;; Tracked objects:
 23078 ;;		On entry : 3F/1
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;Total ram usage:        0 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; Hardware stack levels required when called:   15
 23089 ;; This function calls:
 23090 ;;		Nothing
 23091 ;; This function is called by:
 23092 ;;		_check_help
 23093 ;; This function uses a reentrant model
 23094 ;;
 23095                           
 23096                           	psect	text90
 23097  01BB86                     __ptext90:
 23098                           	opt callstack 0
 23099  01BB86                     _display_help:
 23100                           	opt callstack 14
 23101                           
 23102                           ;mconfig.c: 197:  return V.response.help_temp;
 23103                           
 23104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23105                           ;incstack = 0
 23106  01BB86  0060  F6B0  F026   	movff	_V+165,btemp	;volatile
 23107                           
 23108                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23109  01BB8C  0012               	return		;funcret
 23110  01BB8E                     __end_of_display_help:
 23111                           	opt callstack 0
 23112                           
 23113 ;; *************** function _check_enter_button *****************
 23114 ;; Defined at:
 23115 ;;		line 42 in file "hid.c"
 23116 ;; Parameters:    Size  Location     Type
 23117 ;;  h               1  [STACK] PTR struct H_data
 23118 ;;		 -> H(7), 
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;		None
 23121 ;; Return value:  Size  Location     Type
 23122 ;;                  1  [STACK] _Bool 
 23123 ;; Registers used:
 23124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23125 ;; Tracked objects:
 23126 ;;		On entry : 0/0
 23127 ;;		On exit  : 0/0
 23128 ;;		Unchanged: 0/0
 23129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23134 ;;Total ram usage:        0 bytes
 23135 ;; Hardware stack levels used:    1
 23136 ;; Hardware stack levels required when called:   15
 23137 ;; This function calls:
 23138 ;;		Nothing
 23139 ;; This function is called by:
 23140 ;;		_main
 23141 ;; This function uses a reentrant model
 23142 ;;
 23143                           
 23144                           	psect	text91
 23145  01B0C8                     __ptext91:
 23146                           	opt callstack 0
 23147  01B0C8                     _check_enter_button:
 23148                           	opt callstack 15
 23149                           
 23150                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23151                           ;stkvar	_h @ sp[(0)+-1]
 23152                           
 23153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23154                           ;incstack = 0
 23155  01B0C8  0EFF               	movlw	-1
 23156  01B0CA  50E3               	movf	plusw1,w,c
 23157  01B0CC  6ED9               	movwf	fsr2l,c
 23158  01B0CE  6ADA               	clrf	fsr2h,c
 23159  01B0D0  0E04               	movlw	4
 23160  01B0D2  26D9               	addwf	fsr2l,f,c
 23161  01B0D4  50DF               	movf	indf2,w,c
 23162  01B0D6  A4D8               	btfss	status,2,c
 23163  01B0D8  D013               	goto	l10915
 23164                           
 23165                           ;stkvar	_h @ sp[(0)+-1]
 23166  01B0DA  0EFF               	movlw	-1
 23167  01B0DC  50E3               	movf	plusw1,w,c
 23168  01B0DE  6ED9               	movwf	fsr2l,c
 23169  01B0E0  6ADA               	clrf	fsr2h,c
 23170  01B0E2  0E05               	movlw	5
 23171  01B0E4  26D9               	addwf	fsr2l,f,c
 23172  01B0E6  50DF               	movf	indf2,w,c
 23173  01B0E8  A4D8               	btfss	status,2,c
 23174  01B0EA  D00A               	goto	l10915
 23175                           
 23176                           ;hid.c: 45:   h->wait_enter = 1;
 23177                           ;stkvar	_h @ sp[(0)+-1]
 23178  01B0EC  0EFF               	movlw	-1
 23179  01B0EE  50E3               	movf	plusw1,w,c
 23180  01B0F0  6ED9               	movwf	fsr2l,c
 23181  01B0F2  6ADA               	clrf	fsr2h,c
 23182  01B0F4  0E04               	movlw	4
 23183  01B0F6  26D9               	addwf	fsr2l,f,c
 23184  01B0F8  0E01               	movlw	1
 23185  01B0FA  6EDF               	movwf	indf2,c
 23186                           
 23187                           ;hid.c: 46:   return 1;
 23188  01B0FC  0E01               	movlw	1
 23189  01B0FE  D001               	goto	L28
 23190  01B100                     l10915:
 23191                           
 23192                           ;hid.c: 48:  return 0;
 23193  01B100  0E00               	movlw	0
 23194  01B102                     L28:
 23195  01B102  6E26               	movwf	btemp^0,c
 23196                           
 23197                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23198  01B104  52E5               	movf	postdec1,f,c
 23199  01B106  0012               	return		;funcret
 23200  01B108                     __end_of_check_enter_button:
 23201                           	opt callstack 0
 23202                           
 23203 ;; *************** function _calc_ror_data *****************
 23204 ;; Defined at:
 23205 ;;		line 102 in file "mbmc.c"
 23206 ;; Parameters:    Size  Location     Type
 23207 ;;		None
 23208 ;; Auto vars:     Size  Location     Type
 23209 ;;		None
 23210 ;; Return value:  Size  Location     Type
 23211 ;;                  1  [STACK] void 
 23212 ;; Registers used:
 23213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23214 ;; Tracked objects:
 23215 ;;		On entry : 0/39
 23216 ;;		On exit  : 0/0
 23217 ;;		Unchanged: 0/0
 23218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23223 ;;Total ram usage:        0 bytes
 23224 ;; Hardware stack levels used:    1
 23225 ;; Hardware stack levels required when called:   18
 23226 ;; This function calls:
 23227 ;;		___flge
 23228 ;;		___flsub
 23229 ;;		_conv_raw_result
 23230 ;;		_fabsf
 23231 ;; This function is called by:
 23232 ;;		_main
 23233 ;; This function uses a reentrant model
 23234 ;;
 23235                           
 23236                           	psect	text92
 23237  01844C                     __ptext92:
 23238                           	opt callstack 0
 23239  01844C                     _calc_ror_data:
 23240                           	opt callstack 12
 23241                           
 23242                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23243                           
 23244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23245                           ;incstack = 0
 23246  01844C  0060  F1FB  FFE6   	movff	calc_ror_data@bcror,postinc1
 23247  018452  0060  F1FF  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23248  018458  0060  F203  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23249  01845E  0060  F207  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23250  018464  0E00               	movlw	0
 23251  018466  6EE6               	movwf	postinc1,c
 23252  018468  0E00               	movlw	0
 23253  01846A  6EE6               	movwf	postinc1,c
 23254  01846C  EC08  F0A8         	call	_conv_raw_result	;wreg free
 23255  018470  0060  F09B  FFE6   	movff	btemp,postinc1
 23256  018476  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23257  01847C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23258  018482  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23259  018488  EC75  F0D7         	call	___flsub	;wreg free
 23260  01848C  0060  F09B  FFE6   	movff	btemp,postinc1
 23261  018492  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23262  018498  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23263  01849E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23264  0184A4  EC14  F0D0         	call	_fabsf	;wreg free
 23265  0184A8  0060  F098  F76F   	movff	btemp,_C+112	;volatile
 23266  0184AE  0060  F09C  F770   	movff	btemp+1,_C+113	;volatile
 23267  0184B4  0060  F0A0  F771   	movff	btemp+2,_C+114	;volatile
 23268  0184BA  0060  F0A4  F772   	movff	btemp+3,_C+115	;volatile
 23269                           
 23270                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23271  0184C0  0E00               	movlw	0
 23272  0184C2  6EE6               	movwf	postinc1,c
 23273  0184C4  0E00               	movlw	0
 23274  0184C6  6EE6               	movwf	postinc1,c
 23275  0184C8  EC08  F0A8         	call	_conv_raw_result	;wreg free
 23276  0184CC  0060  F098  F07E   	movff	btemp,calc_ror_data@bcror
 23277  0184D2  0060  F09C  F07F   	movff	btemp+1,calc_ror_data@bcror+1
 23278  0184D8  0060  F0A0  F080   	movff	btemp+2,calc_ror_data@bcror+2
 23279  0184DE  0060  F0A4  F081   	movff	btemp+3,calc_ror_data@bcror+3
 23280                           
 23281                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23282  0184E4  0060  F20B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23283  0184EA  0060  F20F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23284  0184F0  0060  F213  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23285  0184F6  0060  F217  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23286  0184FC  0E00               	movlw	0
 23287  0184FE  6EE6               	movwf	postinc1,c
 23288  018500  0E04               	movlw	4
 23289  018502  6EE6               	movwf	postinc1,c
 23290  018504  EC08  F0A8         	call	_conv_raw_result	;wreg free
 23291  018508  0060  F09B  FFE6   	movff	btemp,postinc1
 23292  01850E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23293  018514  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23294  01851A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23295  018520  EC75  F0D7         	call	___flsub	;wreg free
 23296  018524  0060  F09B  FFE6   	movff	btemp,postinc1
 23297  01852A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23298  018530  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23299  018536  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23300  01853C  EC14  F0D0         	call	_fabsf	;wreg free
 23301  018540  0060  F098  F76B   	movff	btemp,_C+108	;volatile
 23302  018546  0060  F09C  F76C   	movff	btemp+1,_C+109	;volatile
 23303  01854C  0060  F0A0  F76D   	movff	btemp+2,_C+110	;volatile
 23304  018552  0060  F0A4  F76E   	movff	btemp+3,_C+111	;volatile
 23305                           
 23306                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23307  018558  0EE7               	movlw	231
 23308  01855A  6EE6               	movwf	postinc1,c
 23309  01855C  0E1D               	movlw	29
 23310  01855E  6EE6               	movwf	postinc1,c
 23311  018560  0EA7               	movlw	167
 23312  018562  6EE6               	movwf	postinc1,c
 23313  018564  0E3B               	movlw	59
 23314  018566  6EE6               	movwf	postinc1,c
 23315  018568  EE21  F36B         	lfsr	2,_C+108	;volatile
 23316  01856C  006F FF7B FFE6     	movff	postinc2,postinc1
 23317  018572  006F FF7B FFE6     	movff	postinc2,postinc1
 23318  018578  006F FF7B FFE6     	movff	postinc2,postinc1
 23319  01857E  006F FF7B FFE6     	movff	postinc2,postinc1
 23320  018584  EC1B  F0C5         	call	___flge	;wreg free
 23321  018588  B026               	btfsc	btemp& (0+255),0,c
 23322  01858A  D010               	goto	l10705
 23323                           
 23324                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23325  01858C  0EB0               	movlw	176
 23326  01858E  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23327  018594  0E03               	movlw	3
 23328  018596  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23329  01859C  0E67               	movlw	103
 23330  01859E  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23331  0185A4  0E3C               	movlw	60
 23332  0185A6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23333  0185AC                     l10705:
 23334                           
 23335                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23336  0185AC  0E00               	movlw	0
 23337  0185AE  6EE6               	movwf	postinc1,c
 23338  0185B0  0E04               	movlw	4
 23339  0185B2  6EE6               	movwf	postinc1,c
 23340  0185B4  EC08  F0A8         	call	_conv_raw_result	;wreg free
 23341  0185B8  0060  F098  F082   	movff	btemp,calc_ror_data@bvror
 23342  0185BE  0060  F09C  F083   	movff	btemp+1,calc_ror_data@bvror+1
 23343  0185C4  0060  F0A0  F084   	movff	btemp+2,calc_ror_data@bvror+2
 23344  0185CA  0060  F0A4  F085   	movff	btemp+3,calc_ror_data@bvror+3
 23345                           
 23346                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23347  0185D0  0012               	return		;funcret
 23348  0185D2                     __end_of_calc_ror_data:
 23349                           	opt callstack 0
 23350                           
 23351 ;; *************** function _fabsf *****************
 23352 ;; Defined at:
 23353 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23354 ;; Parameters:    Size  Location     Type
 23355 ;;  x               4  [STACK] float 
 23356 ;; Auto vars:     Size  Location     Type
 23357 ;;  u               4  [STACK] struct .
 23358 ;; Return value:  Size  Location     Type
 23359 ;;                  4  [STACK] float 
 23360 ;; Registers used:
 23361 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23362 ;; Tracked objects:
 23363 ;;		On entry : 0/0
 23364 ;;		On exit  : 0/0
 23365 ;;		Unchanged: 0/0
 23366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23371 ;;Total ram usage:        0 bytes
 23372 ;; Hardware stack levels used:    1
 23373 ;; Hardware stack levels required when called:   15
 23374 ;; This function calls:
 23375 ;;		Nothing
 23376 ;; This function is called by:
 23377 ;;		_main
 23378 ;;		_calc_ror_data
 23379 ;;		_calc_bsoc
 23380 ;;		_esr_check
 23381 ;; This function uses a reentrant model
 23382 ;;
 23383                           
 23384                           	psect	text93
 23385  01A028                     __ptext93:
 23386                           	opt callstack 0
 23387  01A028                     _fabsf:
 23388                           	opt callstack 0
 23389                           
 23390                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23391  01A028  52E6               	movf	postinc1,f,c
 23392  01A02A  52E6               	movf	postinc1,f,c
 23393  01A02C  52E6               	movf	postinc1,f,c
 23394  01A02E  52E6               	movf	postinc1,f,c
 23395                           
 23396                           ;incstack = 0
 23397 ;; hardware stack exceeded
 23398  01A030  0060  F1D8  F02E   	movff	fabsf@F463,btemp+8
 23399  01A036  0060  F1DC  F02F   	movff	fabsf@F463+1,btemp+9
 23400  01A03C  0060  F1E0  F030   	movff	fabsf@F463+2,btemp+10
 23401  01A042  0060  F1E4  F031   	movff	fabsf@F463+3,btemp+11
 23402                           
 23403                           ;stkvar	_u @ sp[(-4)+0]
 23404  01A048  0EFC               	movlw	-4
 23405  01A04A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23406  01A050  0EFD               	movlw	-3
 23407  01A052  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23408  01A058  0EFE               	movlw	-2
 23409  01A05A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23410  01A060  0EFF               	movlw	-1
 23411  01A062  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23412                           
 23413                           ;stkvar	_x @ sp[(-4)+-4]
 23414  01A068  0EF8               	movlw	-8
 23415  01A06A  006F FF8C  F02E    	movff	plusw1,btemp+8
 23416  01A070  0EF9               	movlw	-7
 23417  01A072  006F FF8C  F02F    	movff	plusw1,btemp+9
 23418  01A078  0EFA               	movlw	-6
 23419  01A07A  006F FF8C  F030    	movff	plusw1,btemp+10
 23420  01A080  0EFB               	movlw	-5
 23421  01A082  006F FF8C  F031    	movff	plusw1,btemp+11
 23422                           
 23423                           ;stkvar	_u @ sp[(-4)+0]
 23424  01A088  0EFC               	movlw	-4
 23425  01A08A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23426  01A090  0EFD               	movlw	-3
 23427  01A092  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23428  01A098  0EFE               	movlw	-2
 23429  01A09A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23430  01A0A0  0EFF               	movlw	-1
 23431  01A0A2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23432                           
 23433                           ;stkvar	_u @ sp[(-4)+0]
 23434  01A0A8  0EFF               	movlw	-1
 23435  01A0AA  9EE3               	bcf	plusw1,7,c
 23436                           
 23437                           ;stkvar	_u @ sp[(-4)+0]
 23438  01A0AC  0EFC               	movlw	-4
 23439  01A0AE  006F FF8C  F026    	movff	plusw1,btemp
 23440  01A0B4  0EFD               	movlw	-3
 23441  01A0B6  006F FF8C  F027    	movff	plusw1,btemp+1
 23442  01A0BC  0EFE               	movlw	-2
 23443  01A0BE  006F FF8C  F028    	movff	plusw1,btemp+2
 23444  01A0C4  0EFF               	movlw	-1
 23445  01A0C6  006F FF8C  F029    	movff	plusw1,btemp+3
 23446                           
 23447                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23448  01A0CC  0EF8               	movlw	248
 23449  01A0CE  26E1               	addwf	fsr1l,f,c
 23450  01A0D0  0EFF               	movlw	255
 23451  01A0D2  22E2               	addwfc	fsr1h,f,c
 23452  01A0D4  0012               	return		;funcret
 23453  01A0D6                     __end_of_fabsf:
 23454                           	opt callstack 0
 23455                           
 23456 ;; *************** function _conv_raw_result *****************
 23457 ;; Defined at:
 23458 ;;		line 95 in file "daq.c"
 23459 ;; Parameters:    Size  Location     Type
 23460 ;;  chan            1  [STACK] const enum E16582
 23461 ;;  to_what         1  [STACK] const enum E16644
 23462 ;; Auto vars:     Size  Location     Type
 23463 ;;		None
 23464 ;; Return value:  Size  Location     Type
 23465 ;;                  4  [STACK] float 
 23466 ;; Registers used:
 23467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23468 ;; Tracked objects:
 23469 ;;		On entry : 0/39
 23470 ;;		On exit  : 0/0
 23471 ;;		Unchanged: 0/0
 23472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23477 ;;Total ram usage:        0 bytes
 23478 ;; Hardware stack levels used:    1
 23479 ;; Hardware stack levels required when called:   17
 23480 ;; This function calls:
 23481 ;;		___fldiv
 23482 ;;		___flmul
 23483 ;;		___flsub
 23484 ;;		___xxtofl
 23485 ;;		_get_raw_result
 23486 ;;		_nanf
 23487 ;; This function is called by:
 23488 ;;		_main
 23489 ;;		_convert_adc_data
 23490 ;;		_calc_ror_data
 23491 ;;		_check_day_time
 23492 ;;		_init_bsoc
 23493 ;;		_esr_check
 23494 ;; This function uses a reentrant model
 23495 ;;
 23496                           
 23497                           	psect	text94
 23498  015010                     __ptext94:
 23499                           	opt callstack 0
 23500  015010                     _conv_raw_result:
 23501                           	opt callstack 0
 23502                           
 23503                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23504                           
 23505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23506                           ;incstack = 0
 23507 ;; hardware stack exceeded
 23508  015010  D242               	goto	l9625
 23509  015012                     l9571:
 23510                           
 23511                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23512                           ;stkvar	_chan @ sp[(0)+-1]
 23513  015012  0EFF               	movlw	-1
 23514  015014  006F FF8C  F031    	movff	plusw1,btemp+11
 23515  01501A  0E77               	movlw	119
 23516  01501C  6E2E               	movwf	(btemp+8)^0,c
 23517  01501E  0E3C               	movlw	60
 23518  015020  6E2F               	movwf	(btemp+9)^0,c
 23519  015022  2A31               	incf	(btemp+11)^0,f,c
 23520  015024  D003               	goto	u9044
 23521  015026                     u9045:
 23522  015026  342F               	rlcf	(btemp+9)^0,w,c
 23523  015028  322F               	rrcf	(btemp+9)^0,f,c
 23524  01502A  322E               	rrcf	(btemp+8)^0,f,c
 23525  01502C                     u9044:
 23526  01502C  2E31               	decfsz	(btemp+11)^0,f,c
 23527  01502E  D7FB               	goto	u9045
 23528  015030  B02E               	btfsc	(btemp+8)^0,0,c
 23529  015032  D007               	goto	l9577
 23530                           
 23531                           ;daq.c: 101:    return nanf("");
 23532  015034  0EB8               	movlw	low (STR_65+105)
 23533  015036  6EE6               	movwf	postinc1,c
 23534  015038  0EFC               	movlw	high (STR_65+105)
 23535  01503A  6EE6               	movwf	postinc1,c
 23536  01503C  ECAD  F0D5         	call	_nanf	;wreg free
 23537  015040  D23A               	goto	l1784
 23538  015042                     l9577:
 23539                           
 23540                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23541                           ;stkvar	_chan @ sp[(0)+-1]
 23542  015042  0EFF               	movlw	-1
 23543  015044  006F FF8C  F031    	movff	plusw1,btemp+11
 23544  01504A  0E03               	movlw	3
 23545  01504C  6E2E               	movwf	(btemp+8)^0,c
 23546  01504E  0E00               	movlw	0
 23547  015050  6E2F               	movwf	(btemp+9)^0,c
 23548  015052  2A31               	incf	(btemp+11)^0,f,c
 23549  015054  D003               	goto	u9064
 23550  015056                     u9065:
 23551  015056  342F               	rlcf	(btemp+9)^0,w,c
 23552  015058  322F               	rrcf	(btemp+9)^0,f,c
 23553  01505A  322E               	rrcf	(btemp+8)^0,f,c
 23554  01505C                     u9064:
 23555  01505C  2E31               	decfsz	(btemp+11)^0,f,c
 23556  01505E  D7FB               	goto	u9065
 23557  015060  A02E               	btfss	(btemp+8)^0,0,c
 23558  015062  D0EB               	goto	l9591
 23559                           
 23560                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23561                           ;stkvar	_chan @ sp[(0)+-1]
 23562  015064  0EFF               	movlw	-1
 23563  015066  006F FF8C  F031    	movff	plusw1,btemp+11
 23564  01506C  0E01               	movlw	1
 23565  01506E  6E2E               	movwf	(btemp+8)^0,c
 23566  015070  0E00               	movlw	0
 23567  015072  6E2F               	movwf	(btemp+9)^0,c
 23568  015074  2A31               	incf	(btemp+11)^0,f,c
 23569  015076  D003               	goto	u9084
 23570  015078                     u9085:
 23571  015078  342F               	rlcf	(btemp+9)^0,w,c
 23572  01507A  322F               	rrcf	(btemp+9)^0,f,c
 23573  01507C  322E               	rrcf	(btemp+8)^0,f,c
 23574  01507E                     u9084:
 23575  01507E  2E31               	decfsz	(btemp+11)^0,f,c
 23576  015080  D7FB               	goto	u9085
 23577  015082  A02E               	btfss	(btemp+8)^0,0,c
 23578  015084  D06D               	goto	l9587
 23579                           
 23580                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23581  015086  0E7B               	movlw	123
 23582  015088  6EE6               	movwf	postinc1,c
 23583  01508A  0E14               	movlw	20
 23584  01508C  6EE6               	movwf	postinc1,c
 23585  01508E  0EAE               	movlw	174
 23586  015090  6EE6               	movwf	postinc1,c
 23587  015092  0E3D               	movlw	61
 23588  015094  6EE6               	movwf	postinc1,c
 23589  015096  0060  F344  F02E   	movff	_R+32,btemp+8	;volatile
 23590  01509C  0060  F348  F02F   	movff	_R+33,btemp+9	;volatile
 23591  0150A2  0E00               	movlw	0
 23592  0150A4  BE2F               	btfsc	(btemp+9)^0,7,c
 23593  0150A6  0EFF               	movlw	255
 23594  0150A8  6E30               	movwf	(btemp+10)^0,c
 23595  0150AA  6E31               	movwf	(btemp+11)^0,c
 23596  0150AC  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23597  0150B2  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23598  0150B8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23599  0150BE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23600  0150C4  0E01               	movlw	1
 23601  0150C6  6EE6               	movwf	postinc1,c
 23602  0150C8  EC7B  F0BF         	call	___xxtofl	;wreg free
 23603  0150CC  0060  F09B  FFE6   	movff	btemp,postinc1
 23604  0150D2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23605  0150D8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23606  0150DE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23607                           
 23608                           ;stkvar	_chan @ sp[(-8)+-1]
 23609  0150E4  0EF7               	movlw	-9
 23610  0150E6  50E3               	movf	plusw1,w,c
 23611  0150E8  6EE6               	movwf	postinc1,c
 23612  0150EA  ECC5  F0DC         	call	_get_raw_result	;wreg free
 23613  0150EE  0060  F098  F030   	movff	btemp,btemp+10
 23614  0150F4  0060  F09C  F031   	movff	btemp+1,btemp+11
 23615  0150FA  5030               	movf	(btemp+10)^0,w,c
 23616  0150FC  6E2A               	movwf	(btemp+4)^0,c
 23617  0150FE  5031               	movf	(btemp+11)^0,w,c
 23618  015100  6E2B               	movwf	(btemp+5)^0,c
 23619  015102  6A2C               	clrf	(btemp+6)^0,c
 23620  015104  6A2D               	clrf	(btemp+7)^0,c
 23621  015106  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23622  01510C  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23623  015112  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23624  015118  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23625  01511E  0E00               	movlw	0
 23626  015120  6EE6               	movwf	postinc1,c
 23627  015122  EC7B  F0BF         	call	___xxtofl	;wreg free
 23628  015126  0060  F09B  FFE6   	movff	btemp,postinc1
 23629  01512C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23630  015132  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23631  015138  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23632  01513E  EC75  F0D7         	call	___flsub	;wreg free
 23633  015142  0060  F09B  FFE6   	movff	btemp,postinc1
 23634  015148  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23635  01514E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23636  015154  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23637  01515A  ECA0  F099         	call	___flmul	;wreg free
 23638  01515E  D1AB               	goto	l1784
 23639  015160                     l9587:
 23640                           
 23641                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23642  015160  0E29               	movlw	41
 23643  015162  6EE6               	movwf	postinc1,c
 23644  015164  0E5C               	movlw	92
 23645  015166  6EE6               	movwf	postinc1,c
 23646  015168  0E0F               	movlw	15
 23647  01516A  6EE6               	movwf	postinc1,c
 23648  01516C  0E3D               	movlw	61
 23649  01516E  6EE6               	movwf	postinc1,c
 23650  015170  0060  F34C  F02E   	movff	_R+34,btemp+8	;volatile
 23651  015176  0060  F350  F02F   	movff	_R+35,btemp+9	;volatile
 23652  01517C  0E00               	movlw	0
 23653  01517E  BE2F               	btfsc	(btemp+9)^0,7,c
 23654  015180  0EFF               	movlw	255
 23655  015182  6E30               	movwf	(btemp+10)^0,c
 23656  015184  6E31               	movwf	(btemp+11)^0,c
 23657  015186  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23658  01518C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23659  015192  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23660  015198  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23661  01519E  0E01               	movlw	1
 23662  0151A0  6EE6               	movwf	postinc1,c
 23663  0151A2  EC7B  F0BF         	call	___xxtofl	;wreg free
 23664  0151A6  0060  F09B  FFE6   	movff	btemp,postinc1
 23665  0151AC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23666  0151B2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23667  0151B8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23668                           
 23669                           ;stkvar	_chan @ sp[(-8)+-1]
 23670  0151BE  0EF7               	movlw	-9
 23671  0151C0  50E3               	movf	plusw1,w,c
 23672  0151C2  6EE6               	movwf	postinc1,c
 23673  0151C4  ECC5  F0DC         	call	_get_raw_result	;wreg free
 23674  0151C8  0060  F098  F030   	movff	btemp,btemp+10
 23675  0151CE  0060  F09C  F031   	movff	btemp+1,btemp+11
 23676  0151D4  5030               	movf	(btemp+10)^0,w,c
 23677  0151D6  6E2A               	movwf	(btemp+4)^0,c
 23678  0151D8  5031               	movf	(btemp+11)^0,w,c
 23679  0151DA  6E2B               	movwf	(btemp+5)^0,c
 23680  0151DC  6A2C               	clrf	(btemp+6)^0,c
 23681  0151DE  6A2D               	clrf	(btemp+7)^0,c
 23682  0151E0  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23683  0151E6  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23684  0151EC  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23685  0151F2  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23686  0151F8  0E00               	movlw	0
 23687  0151FA  6EE6               	movwf	postinc1,c
 23688  0151FC  EC7B  F0BF         	call	___xxtofl	;wreg free
 23689  015200  0060  F09B  FFE6   	movff	btemp,postinc1
 23690  015206  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23691  01520C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23692  015212  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23693  015218  EC75  F0D7         	call	___flsub	;wreg free
 23694  01521C  0060  F09B  FFE6   	movff	btemp,postinc1
 23695  015222  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23696  015228  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23697  01522E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23698  015234  ECA0  F099         	call	___flmul	;wreg free
 23699  015238  D13E               	goto	l1784
 23700  01523A                     l9591:
 23701                           
 23702                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23703                           ;stkvar	_chan @ sp[(0)+-1]
 23704  01523A  0EFF               	movlw	-1
 23705  01523C  006F FF8C  F031    	movff	plusw1,btemp+11
 23706  015242  0E00               	movlw	0
 23707  015244  6E2E               	movwf	(btemp+8)^0,c
 23708  015246  0E08               	movlw	8
 23709  015248  6E2F               	movwf	(btemp+9)^0,c
 23710  01524A  2A31               	incf	(btemp+11)^0,f,c
 23711  01524C  D003               	goto	u9104
 23712  01524E                     u9105:
 23713  01524E  342F               	rlcf	(btemp+9)^0,w,c
 23714  015250  322F               	rrcf	(btemp+9)^0,f,c
 23715  015252  322E               	rrcf	(btemp+8)^0,f,c
 23716  015254                     u9104:
 23717  015254  2E31               	decfsz	(btemp+11)^0,f,c
 23718  015256  D7FB               	goto	u9105
 23719  015258  A02E               	btfss	(btemp+8)^0,0,c
 23720  01525A  D008               	goto	l9599
 23721                           
 23722                           ;daq.c: 111:     return 25.0;
 23723  01525C  0E00               	movlw	0
 23724  01525E  6E26               	movwf	btemp^0,c
 23725  015260  0E00               	movlw	0
 23726  015262  6E27               	movwf	(btemp+1)^0,c
 23727  015264  0EC8               	movlw	200
 23728  015266  6E28               	movwf	(btemp+2)^0,c
 23729  015268  0E41               	movlw	65
 23730  01526A  D113               	goto	L29
 23731  01526C                     l9599:
 23732                           
 23733                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23734  01526C  0E00               	movlw	0
 23735  01526E  6EE6               	movwf	postinc1,c
 23736  015270  0E00               	movlw	0
 23737  015272  6EE6               	movwf	postinc1,c
 23738  015274  0E7A               	movlw	122
 23739  015276  6EE6               	movwf	postinc1,c
 23740  015278  0E44               	movlw	68
 23741  01527A  6EE6               	movwf	postinc1,c
 23742  01527C  0E61               	movlw	97
 23743  01527E  6EE6               	movwf	postinc1,c
 23744  015280  0E03               	movlw	3
 23745  015282  6EE6               	movwf	postinc1,c
 23746  015284  0E84               	movlw	132
 23747  015286  6EE6               	movwf	postinc1,c
 23748  015288  0E40               	movlw	64
 23749  01528A  6EE6               	movwf	postinc1,c
 23750                           
 23751                           ;stkvar	_chan @ sp[(-8)+-1]
 23752  01528C  0EF7               	movlw	-9
 23753  01528E  50E3               	movf	plusw1,w,c
 23754  015290  6EE6               	movwf	postinc1,c
 23755  015292  ECC5  F0DC         	call	_get_raw_result	;wreg free
 23756  015296  0060  F098  F030   	movff	btemp,btemp+10
 23757  01529C  0060  F09C  F031   	movff	btemp+1,btemp+11
 23758  0152A2  5030               	movf	(btemp+10)^0,w,c
 23759  0152A4  6E2A               	movwf	(btemp+4)^0,c
 23760  0152A6  5031               	movf	(btemp+11)^0,w,c
 23761  0152A8  6E2B               	movwf	(btemp+5)^0,c
 23762  0152AA  6A2C               	clrf	(btemp+6)^0,c
 23763  0152AC  6A2D               	clrf	(btemp+7)^0,c
 23764  0152AE  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23765  0152B4  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23766  0152BA  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23767  0152C0  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23768  0152C6  0E00               	movlw	0
 23769  0152C8  6EE6               	movwf	postinc1,c
 23770  0152CA  EC7B  F0BF         	call	___xxtofl	;wreg free
 23771  0152CE  0060  F09B  FFE6   	movff	btemp,postinc1
 23772  0152D4  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23773  0152DA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23774  0152E0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23775  0152E6  ECA0  F099         	call	___flmul	;wreg free
 23776  0152EA  0060  F09B  FFE6   	movff	btemp,postinc1
 23777  0152F0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23778  0152F6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23779  0152FC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23780  015302  EC4B  F0A5         	call	___fldiv	;wreg free
 23781  015306  D0D7               	goto	l1784
 23782  015308                     l9603:
 23783                           
 23784                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23785                           ;stkvar	_chan @ sp[(0)+-1]
 23786  015308  0EFF               	movlw	-1
 23787  01530A  006F FF8C  F031    	movff	plusw1,btemp+11
 23788  015310  0E03               	movlw	3
 23789  015312  6E2E               	movwf	(btemp+8)^0,c
 23790  015314  0E00               	movlw	0
 23791  015316  6E2F               	movwf	(btemp+9)^0,c
 23792  015318  2A31               	incf	(btemp+11)^0,f,c
 23793  01531A  D003               	goto	u9124
 23794  01531C                     u9125:
 23795  01531C  342F               	rlcf	(btemp+9)^0,w,c
 23796  01531E  322F               	rrcf	(btemp+9)^0,f,c
 23797  015320  322E               	rrcf	(btemp+8)^0,f,c
 23798  015322                     u9124:
 23799  015322  2E31               	decfsz	(btemp+11)^0,f,c
 23800  015324  D7FB               	goto	u9125
 23801  015326  B02E               	btfsc	(btemp+8)^0,0,c
 23802  015328  D011               	goto	u9150
 23803                           
 23804                           ;stkvar	_chan @ sp[(0)+-1]
 23805  01532A  0EFF               	movlw	-1
 23806  01532C  006F FF8C  F031    	movff	plusw1,btemp+11
 23807  015332  0E00               	movlw	0
 23808  015334  6E2E               	movwf	(btemp+8)^0,c
 23809  015336  0E08               	movlw	8
 23810  015338  6E2F               	movwf	(btemp+9)^0,c
 23811  01533A  2A31               	incf	(btemp+11)^0,f,c
 23812  01533C  D003               	goto	u9144
 23813  01533E                     u9145:
 23814  01533E  342F               	rlcf	(btemp+9)^0,w,c
 23815  015340  322F               	rrcf	(btemp+9)^0,f,c
 23816  015342  322E               	rrcf	(btemp+8)^0,f,c
 23817  015344                     u9144:
 23818  015344  2E31               	decfsz	(btemp+11)^0,f,c
 23819  015346  D7FB               	goto	u9145
 23820  015348  A02E               	btfss	(btemp+8)^0,0,c
 23821  01534A  D04E               	goto	l9611
 23822  01534C                     u9150:
 23823                           
 23824                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23825  01534C  0E00               	movlw	0
 23826  01534E  6EE6               	movwf	postinc1,c
 23827  015350  0E00               	movlw	0
 23828  015352  6EE6               	movwf	postinc1,c
 23829  015354  0E7A               	movlw	122
 23830  015356  6EE6               	movwf	postinc1,c
 23831  015358  0E44               	movlw	68
 23832  01535A  6EE6               	movwf	postinc1,c
 23833  01535C  0E00               	movlw	0
 23834  01535E  6EE6               	movwf	postinc1,c
 23835  015360  0E00               	movlw	0
 23836  015362  6EE6               	movwf	postinc1,c
 23837  015364  0E20               	movlw	32
 23838  015366  6EE6               	movwf	postinc1,c
 23839  015368  0E3F               	movlw	63
 23840  01536A  6EE6               	movwf	postinc1,c
 23841                           
 23842                           ;stkvar	_chan @ sp[(-8)+-1]
 23843  01536C  0EF7               	movlw	-9
 23844  01536E  50E3               	movf	plusw1,w,c
 23845  015370  6EE6               	movwf	postinc1,c
 23846  015372  ECC5  F0DC         	call	_get_raw_result	;wreg free
 23847  015376  0060  F098  F030   	movff	btemp,btemp+10
 23848  01537C  0060  F09C  F031   	movff	btemp+1,btemp+11
 23849  015382  5030               	movf	(btemp+10)^0,w,c
 23850  015384  6E2A               	movwf	(btemp+4)^0,c
 23851  015386  5031               	movf	(btemp+11)^0,w,c
 23852  015388  6E2B               	movwf	(btemp+5)^0,c
 23853  01538A  6A2C               	clrf	(btemp+6)^0,c
 23854  01538C  6A2D               	clrf	(btemp+7)^0,c
 23855  01538E  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23856  015394  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23857  01539A  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23858  0153A0  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23859  0153A6  0E00               	movlw	0
 23860  0153A8  6EE6               	movwf	postinc1,c
 23861  0153AA  EC7B  F0BF         	call	___xxtofl	;wreg free
 23862  0153AE  0060  F09B  FFE6   	movff	btemp,postinc1
 23863  0153B4  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23864  0153BA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23865  0153C0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23866  0153C6  ECA0  F099         	call	___flmul	;wreg free
 23867  0153CA  0060  F09B  FFE6   	movff	btemp,postinc1
 23868  0153D0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23869  0153D6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23870  0153DC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23871  0153E2  EC4B  F0A5         	call	___fldiv	;wreg free
 23872  0153E6  D067               	goto	l1784
 23873  0153E8                     l9611:
 23874                           
 23875                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23876  0153E8  0E00               	movlw	0
 23877  0153EA  6EE6               	movwf	postinc1,c
 23878  0153EC  0E00               	movlw	0
 23879  0153EE  6EE6               	movwf	postinc1,c
 23880  0153F0  0E7A               	movlw	122
 23881  0153F2  6EE6               	movwf	postinc1,c
 23882  0153F4  0E44               	movlw	68
 23883  0153F6  6EE6               	movwf	postinc1,c
 23884  0153F8  0E61               	movlw	97
 23885  0153FA  6EE6               	movwf	postinc1,c
 23886  0153FC  0E03               	movlw	3
 23887  0153FE  6EE6               	movwf	postinc1,c
 23888  015400  0E84               	movlw	132
 23889  015402  6EE6               	movwf	postinc1,c
 23890  015404  0E40               	movlw	64
 23891  015406  6EE6               	movwf	postinc1,c
 23892                           
 23893                           ;stkvar	_chan @ sp[(-8)+-1]
 23894  015408  0EF7               	movlw	-9
 23895  01540A  50E3               	movf	plusw1,w,c
 23896  01540C  6EE6               	movwf	postinc1,c
 23897  01540E  ECC5  F0DC         	call	_get_raw_result	;wreg free
 23898  015412  0060  F098  F030   	movff	btemp,btemp+10
 23899  015418  0060  F09C  F031   	movff	btemp+1,btemp+11
 23900  01541E  5030               	movf	(btemp+10)^0,w,c
 23901  015420  6E2A               	movwf	(btemp+4)^0,c
 23902  015422  5031               	movf	(btemp+11)^0,w,c
 23903  015424  6E2B               	movwf	(btemp+5)^0,c
 23904  015426  6A2C               	clrf	(btemp+6)^0,c
 23905  015428  6A2D               	clrf	(btemp+7)^0,c
 23906  01542A  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23907  015430  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23908  015436  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23909  01543C  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23910  015442  0E00               	movlw	0
 23911  015444  6EE6               	movwf	postinc1,c
 23912  015446  EC7B  F0BF         	call	___xxtofl	;wreg free
 23913  01544A  0060  F09B  FFE6   	movff	btemp,postinc1
 23914  015450  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23915  015456  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23916  01545C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23917  015462  ECA0  F099         	call	___flmul	;wreg free
 23918  015466  0060  F09B  FFE6   	movff	btemp,postinc1
 23919  01546C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23920  015472  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23921  015478  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23922  01547E  EC4B  F0A5         	call	___fldiv	;wreg free
 23923  015482  D019               	goto	l1784
 23924  015484                     l9617:
 23925                           
 23926                           ;daq.c: 124:   return 0.0;
 23927  015484  0E00               	movlw	0
 23928  015486  6E26               	movwf	btemp^0,c
 23929  015488  0E00               	movlw	0
 23930  01548A  6E27               	movwf	(btemp+1)^0,c
 23931  01548C  0E00               	movlw	0
 23932  01548E  6E28               	movwf	(btemp+2)^0,c
 23933  015490  0E00               	movlw	0
 23934  015492                     L29:
 23935  015492  6E29               	movwf	(btemp+3)^0,c
 23936  015494  D010               	goto	l1784
 23937  015496                     l9625:
 23938                           
 23939                           ;stkvar	_to_what @ sp[(0)+-2]
 23940  015496  0EFE               	movlw	-2
 23941  015498  50E3               	movf	plusw1,w,c
 23942  01549A  6E30               	movwf	(btemp+10)^0,c
 23943  01549C  6A31               	clrf	(btemp+11)^0,c
 23944                           
 23945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23946                           ; Switch size 1, requested type "simple"
 23947                           ; Number of cases is 1, Range of values is 0 to 0
 23948                           ; switch strategies available:
 23949                           ; Name         Instructions Cycles
 23950                           ; simple_byte            4     3 (average)
 23951                           ;	Chosen strategy is simple_byte
 23952  01549E  5031               	movf	(btemp+11)^0,w,c
 23953  0154A0  0A00               	xorlw	0	; case 0
 23954  0154A2  A4D8               	btfss	status,2,c
 23955  0154A4  D7EF               	goto	l9617
 23956                           
 23957                           ; Switch size 1, requested type "simple"
 23958                           ; Number of cases is 2, Range of values is 0 to 1
 23959                           ; switch strategies available:
 23960                           ; Name         Instructions Cycles
 23961                           ; simple_byte            7     4 (average)
 23962                           ;	Chosen strategy is simple_byte
 23963  0154A6  5030               	movf	(btemp+10)^0,w,c
 23964  0154A8  0A00               	xorlw	0	; case 0
 23965  0154AA  B4D8               	btfsc	status,2,c
 23966  0154AC  D5B2               	goto	l9571
 23967  0154AE  0A01               	xorlw	1	; case 1
 23968  0154B0  B4D8               	btfsc	status,2,c
 23969  0154B2  D72A               	goto	l9603
 23970  0154B4  D7E7               	goto	l9617
 23971  0154B6                     l1784:
 23972                           
 23973                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23974  0154B6  52E5               	movf	postdec1,f,c
 23975  0154B8  52E5               	movf	postdec1,f,c
 23976  0154BA  0012               	return		;funcret
 23977  0154BC                     __end_of_conv_raw_result:
 23978                           	opt callstack 0
 23979                           
 23980 ;; *************** function _nanf *****************
 23981 ;; Defined at:
 23982 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;  s               2  [STACK] PTR const unsigned char 
 23985 ;;		 -> STR_102(1), STR_64(1), 
 23986 ;; Auto vars:     Size  Location     Type
 23987 ;;  u               4  [STACK] struct .
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  4  [STACK] float 
 23990 ;; Registers used:
 23991 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23992 ;; Tracked objects:
 23993 ;;		On entry : 0/39
 23994 ;;		On exit  : 0/0
 23995 ;;		Unchanged: 0/0
 23996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24001 ;;Total ram usage:        0 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; Hardware stack levels required when called:   15
 24004 ;; This function calls:
 24005 ;;		Nothing
 24006 ;; This function is called by:
 24007 ;;		_conv_raw_result
 24008 ;; This function uses a reentrant model
 24009 ;;
 24010                           
 24011                           	psect	text95
 24012  01AB5A                     __ptext95:
 24013                           	opt callstack 0
 24014  01AB5A                     _nanf:
 24015                           	opt callstack 0
 24016                           
 24017                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24018  01AB5A  52E6               	movf	postinc1,f,c
 24019  01AB5C  52E6               	movf	postinc1,f,c
 24020  01AB5E  52E6               	movf	postinc1,f,c
 24021  01AB60  52E6               	movf	postinc1,f,c
 24022                           
 24023                           ;incstack = 0
 24024 ;; hardware stack exceeded
 24025  01AB62  0EFF               	movlw	255
 24026  01AB64  6E2E               	movwf	(btemp+8)^0,c
 24027  01AB66  0EFF               	movlw	255
 24028  01AB68  6E2F               	movwf	(btemp+9)^0,c
 24029  01AB6A  0EFF               	movlw	255
 24030  01AB6C  6E30               	movwf	(btemp+10)^0,c
 24031  01AB6E  0E7F               	movlw	127
 24032  01AB70  6E31               	movwf	(btemp+11)^0,c
 24033                           
 24034                           ;stkvar	_u @ sp[(-4)+0]
 24035  01AB72  0EFC               	movlw	-4
 24036  01AB74  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24037  01AB7A  0EFD               	movlw	-3
 24038  01AB7C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24039  01AB82  0EFE               	movlw	-2
 24040  01AB84  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24041  01AB8A  0EFF               	movlw	-1
 24042  01AB8C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24043                           
 24044                           ;stkvar	_u @ sp[(-4)+0]
 24045  01AB92  0EFC               	movlw	-4
 24046  01AB94  006F FF8C  F026    	movff	plusw1,btemp
 24047  01AB9A  0EFD               	movlw	-3
 24048  01AB9C  006F FF8C  F027    	movff	plusw1,btemp+1
 24049  01ABA2  0EFE               	movlw	-2
 24050  01ABA4  006F FF8C  F028    	movff	plusw1,btemp+2
 24051  01ABAA  0EFF               	movlw	-1
 24052  01ABAC  006F FF8C  F029    	movff	plusw1,btemp+3
 24053                           
 24054                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24055  01ABB2  0EFA               	movlw	250
 24056  01ABB4  26E1               	addwf	fsr1l,f,c
 24057  01ABB6  0EFF               	movlw	255
 24058  01ABB8  22E2               	addwfc	fsr1h,f,c
 24059  01ABBA  0012               	return		;funcret
 24060  01ABBC                     __end_of_nanf:
 24061                           	opt callstack 0
 24062                           
 24063 ;; *************** function _get_raw_result *****************
 24064 ;; Defined at:
 24065 ;;		line 87 in file "daq.c"
 24066 ;; Parameters:    Size  Location     Type
 24067 ;;  index           1  [STACK] const enum E16582
 24068 ;; Auto vars:     Size  Location     Type
 24069 ;;		None
 24070 ;; Return value:  Size  Location     Type
 24071 ;;                  2  [STACK] unsigned short 
 24072 ;; Registers used:
 24073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24074 ;; Tracked objects:
 24075 ;;		On entry : 0/1
 24076 ;;		On exit  : 0/0
 24077 ;;		Unchanged: 0/0
 24078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24083 ;;Total ram usage:        0 bytes
 24084 ;; Hardware stack levels used:    1
 24085 ;; Hardware stack levels required when called:   15
 24086 ;; This function calls:
 24087 ;;		Nothing
 24088 ;; This function is called by:
 24089 ;;		_main
 24090 ;;		_conv_raw_result
 24091 ;; This function uses a reentrant model
 24092 ;;
 24093                           
 24094                           	psect	text96
 24095  01B98A                     __ptext96:
 24096                           	opt callstack 0
 24097  01B98A                     _get_raw_result:
 24098                           	opt callstack 0
 24099                           
 24100                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 24101                           ;stkvar	_index @ sp[(0)+-1]
 24102                           
 24103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24104                           ;incstack = 0
 24105 ;; hardware stack exceeded
 24106  01B98A  0EFF               	movlw	-1
 24107  01B98C  50E3               	movf	plusw1,w,c
 24108  01B98E  0D02               	mullw	2
 24109  01B990  50F3               	movf	243,w,c
 24110  01B992  0FB1               	addlw	low _R
 24111  01B994  6ED9               	movwf	fsr2l,c
 24112  01B996  6ADA               	clrf	fsr2h,c
 24113  01B998  006F FF78  F026    	movff	postinc2,btemp
 24114  01B99E  006F FF74  F027    	movff	postdec2,btemp+1
 24115                           
 24116                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24117  01B9A4  52E5               	movf	postdec1,f,c
 24118  01B9A6  0012               	return		;funcret
 24119  01B9A8                     __end_of_get_raw_result:
 24120                           	opt callstack 0
 24121                           
 24122 ;; *************** function ___xxtofl *****************
 24123 ;; Defined at:
 24124 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24125 ;; Parameters:    Size  Location     Type
 24126 ;;  sign            1  [STACK] unsigned char 
 24127 ;;  val             4  [STACK] long 
 24128 ;; Auto vars:     Size  Location     Type
 24129 ;;  arg             4  [STACK] unsigned long 
 24130 ;;  exp             1  [STACK] unsigned char 
 24131 ;; Return value:  Size  Location     Type
 24132 ;;                  4  [STACK] unsigned char 
 24133 ;; Registers used:
 24134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24135 ;; Tracked objects:
 24136 ;;		On entry : 0/0
 24137 ;;		On exit  : 0/0
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24144 ;;Total ram usage:        0 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:   15
 24147 ;; This function calls:
 24148 ;;		Nothing
 24149 ;; This function is called by:
 24150 ;;		_conv_raw_result
 24151 ;;		_init_bsoc
 24152 ;; This function uses a reentrant model
 24153 ;;
 24154                           
 24155                           	psect	text97
 24156  017EF6                     __ptext97:
 24157                           	opt callstack 0
 24158  017EF6                     ___xxtofl:
 24159                           	opt callstack 0
 24160                           
 24161                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24162  017EF6  0E05               	movlw	5
 24163  017EF8  26E1               	addwf	fsr1l,f,c
 24164  017EFA  0E00               	movlw	0
 24165  017EFC  22E2               	addwfc	fsr1h,f,c
 24166                           
 24167                           ;stkvar	_sign @ sp[(-5)+-1]
 24168                           
 24169                           ;incstack = 0
 24170 ;; hardware stack exceeded
 24171  017EFE  0EFA               	movlw	-6
 24172  017F00  50E3               	movf	plusw1,w,c
 24173  017F02  B4D8               	btfsc	status,2,c
 24174  017F04  D01D               	goto	l9519
 24175                           
 24176                           ;stkvar	_val @ sp[(-5)+-5]
 24177  017F06  0EF9               	movlw	-7
 24178  017F08  AEE3               	btfss	plusw1,7,c
 24179  017F0A  D01A               	goto	l9519
 24180                           
 24181                           ;stkvar	_val @ sp[(-5)+-5]
 24182  017F0C  0EF6               	movlw	-10
 24183  017F0E  006F FF8C  F02E    	movff	plusw1,btemp+8
 24184  017F14  0EF7               	movlw	-9
 24185  017F16  006F FF8C  F02F    	movff	plusw1,btemp+9
 24186  017F1C  0EF8               	movlw	-8
 24187  017F1E  006F FF8C  F030    	movff	plusw1,btemp+10
 24188  017F24  0EF9               	movlw	-7
 24189  017F26  006F FF8C  F031    	movff	plusw1,btemp+11
 24190  017F2C  1E2E               	comf	(btemp+8)^0,f,c
 24191  017F2E  1E2F               	comf	(btemp+9)^0,f,c
 24192  017F30  1E30               	comf	(btemp+10)^0,f,c
 24193  017F32  1E31               	comf	(btemp+11)^0,f,c
 24194  017F34  2A2E               	incf	(btemp+8)^0,f,c
 24195  017F36  0E00               	movlw	0
 24196  017F38  222F               	addwfc	(btemp+9)^0,f,c
 24197  017F3A  2230               	addwfc	(btemp+10)^0,f,c
 24198  017F3C  2231               	addwfc	(btemp+11)^0,f,c
 24199  017F3E  D010               	goto	L30
 24200  017F40                     l9519:
 24201                           
 24202                           ;stkvar	_val @ sp[(-5)+-5]
 24203  017F40  0EF6               	movlw	-10
 24204  017F42  006F FF8C  F02E    	movff	plusw1,btemp+8
 24205  017F48  0EF7               	movlw	-9
 24206  017F4A  006F FF8C  F02F    	movff	plusw1,btemp+9
 24207  017F50  0EF8               	movlw	-8
 24208  017F52  006F FF8C  F030    	movff	plusw1,btemp+10
 24209  017F58  0EF9               	movlw	-7
 24210  017F5A  006F FF8C  F031    	movff	plusw1,btemp+11
 24211  017F60                     L30:
 24212                           
 24213                           ;stkvar	_arg @ sp[(-5)+0]
 24214  017F60  0EFB               	movlw	-5
 24215  017F62  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24216  017F68  0EFC               	movlw	-4
 24217  017F6A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24218  017F70  0EFD               	movlw	-3
 24219  017F72  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24220  017F78  0EFE               	movlw	-2
 24221  017F7A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24222                           
 24223                           ;stkvar	_val @ sp[(-5)+-5]
 24224  017F80  0EF6               	movlw	-10
 24225  017F82  50E3               	movf	plusw1,w,c
 24226  017F84  E113               	bnz	l9527
 24227  017F86  0EF7               	movlw	-9
 24228  017F88  50E3               	movf	plusw1,w,c
 24229  017F8A  E110               	bnz	l9527
 24230  017F8C  0EF8               	movlw	-8
 24231  017F8E  50E3               	movf	plusw1,w,c
 24232  017F90  E10D               	bnz	l9527
 24233  017F92  0EF9               	movlw	-7
 24234  017F94  50E3               	movf	plusw1,w,c
 24235  017F96  A4D8               	btfss	status,2,c
 24236  017F98  D009               	goto	l9527
 24237  017F9A  0E00               	movlw	0
 24238  017F9C  6E26               	movwf	btemp^0,c
 24239  017F9E  0E00               	movlw	0
 24240  017FA0  6E27               	movwf	(btemp+1)^0,c
 24241  017FA2  0E00               	movlw	0
 24242  017FA4  6E28               	movwf	(btemp+2)^0,c
 24243  017FA6  0E00               	movlw	0
 24244  017FA8  6E29               	movwf	(btemp+3)^0,c
 24245  017FAA  D0A2               	goto	l3054
 24246  017FAC                     l9527:
 24247  017FAC  0E96               	movlw	150
 24248  017FAE  6E31               	movwf	(btemp+11)^0,c
 24249                           
 24250                           ;stkvar	_exp @ sp[(-5)+4]
 24251  017FB0  0EFF               	movlw	-1
 24252  017FB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24253  017FB8  D00B               	goto	l9531
 24254  017FBA                     l9529:
 24255                           
 24256                           ;stkvar	_exp @ sp[(-5)+4]
 24257  017FBA  0EFF               	movlw	-1
 24258  017FBC  2AE3               	incf	plusw1,f,c
 24259                           
 24260                           ;stkvar	_arg @ sp[(-5)+0]
 24261  017FBE  90D8               	bcf	status,0,c
 24262  017FC0  0EFE               	movlw	-2
 24263  017FC2  32E3               	rrcf	plusw1,f,c
 24264  017FC4  0EFD               	movlw	-3
 24265  017FC6  32E3               	rrcf	plusw1,f,c
 24266  017FC8  0EFC               	movlw	-4
 24267  017FCA  32E3               	rrcf	plusw1,f,c
 24268  017FCC  0EFB               	movlw	-5
 24269  017FCE  32E3               	rrcf	plusw1,f,c
 24270  017FD0                     l9531:
 24271                           
 24272                           ;stkvar	_arg @ sp[(-5)+0]
 24273  017FD0  50E1               	movf	fsr1l,w,c
 24274  017FD2  0FFB               	addlw	-5
 24275  017FD4  6ED9               	movwf	fsr2l,c
 24276  017FD6  50E2               	movf	fsr1h,w,c
 24277  017FD8  6EDA               	movwf	fsr2h,c
 24278  017FDA  0EFF               	movlw	255
 24279  017FDC  22DA               	addwfc	fsr2h,f,c
 24280  017FDE  52DE               	movf	postinc2,f,c
 24281  017FE0  52DE               	movf	postinc2,f,c
 24282  017FE2  52DE               	movf	postinc2,f,c
 24283  017FE4  0EFE               	movlw	254
 24284  017FE6  14DD               	andwf	postdec2,w,c
 24285  017FE8  B4D8               	btfsc	status,2,c
 24286  017FEA  D018               	goto	l9539
 24287  017FEC  D7E6               	goto	l9529
 24288  017FEE                     l9533:
 24289                           
 24290                           ;stkvar	_exp @ sp[(-5)+4]
 24291  017FEE  0EFF               	movlw	-1
 24292  017FF0  2AE3               	incf	plusw1,f,c
 24293                           
 24294                           ;stkvar	_arg @ sp[(-5)+0]
 24295  017FF2  50E1               	movf	fsr1l,w,c
 24296  017FF4  0FFB               	addlw	-5
 24297  017FF6  6ED9               	movwf	fsr2l,c
 24298  017FF8  50E2               	movf	fsr1h,w,c
 24299  017FFA  6EDA               	movwf	fsr2h,c
 24300  017FFC  0EFF               	movlw	255
 24301  017FFE  22DA               	addwfc	fsr2h,f,c
 24302  018000  2ADE               	incf	postinc2,f,c
 24303  018002  0E00               	movlw	0
 24304  018004  22DE               	addwfc	postinc2,f,c
 24305  018006  22DE               	addwfc	postinc2,f,c
 24306  018008  22DE               	addwfc	postinc2,f,c
 24307                           
 24308                           ;stkvar	_arg @ sp[(-5)+0]
 24309  01800A  90D8               	bcf	status,0,c
 24310  01800C  0EFE               	movlw	-2
 24311  01800E  32E3               	rrcf	plusw1,f,c
 24312  018010  0EFD               	movlw	-3
 24313  018012  32E3               	rrcf	plusw1,f,c
 24314  018014  0EFC               	movlw	-4
 24315  018016  32E3               	rrcf	plusw1,f,c
 24316  018018  0EFB               	movlw	-5
 24317  01801A  32E3               	rrcf	plusw1,f,c
 24318  01801C                     l9539:
 24319                           
 24320                           ;stkvar	_arg @ sp[(-5)+0]
 24321  01801C  50E1               	movf	fsr1l,w,c
 24322  01801E  0FFB               	addlw	-5
 24323  018020  6ED9               	movwf	fsr2l,c
 24324  018022  50E2               	movf	fsr1h,w,c
 24325  018024  6EDA               	movwf	fsr2h,c
 24326  018026  0EFF               	movlw	255
 24327  018028  22DA               	addwfc	fsr2h,f,c
 24328  01802A  52DE               	movf	postinc2,f,c
 24329  01802C  52DE               	movf	postinc2,f,c
 24330  01802E  52DE               	movf	postinc2,f,c
 24331  018030  0EFF               	movlw	255
 24332  018032  14DD               	andwf	postdec2,w,c
 24333  018034  B4D8               	btfsc	status,2,c
 24334  018036  D00C               	goto	l9543
 24335  018038  D7DA               	goto	l9533
 24336  01803A                     l9541:
 24337                           
 24338                           ;stkvar	_exp @ sp[(-5)+4]
 24339  01803A  0EFF               	movlw	-1
 24340  01803C  06E3               	decf	plusw1,f,c
 24341                           
 24342                           ;stkvar	_arg @ sp[(-5)+0]
 24343  01803E  90D8               	bcf	status,0,c
 24344  018040  0EFB               	movlw	-5
 24345  018042  36E3               	rlcf	plusw1,f,c
 24346  018044  0EFC               	movlw	-4
 24347  018046  36E3               	rlcf	plusw1,f,c
 24348  018048  0EFD               	movlw	-3
 24349  01804A  36E3               	rlcf	plusw1,f,c
 24350  01804C  0EFE               	movlw	-2
 24351  01804E  36E3               	rlcf	plusw1,f,c
 24352  018050                     l9543:
 24353                           
 24354                           ;stkvar	_arg @ sp[(-5)+0]
 24355  018050  0EFD               	movlw	-3
 24356  018052  BEE3               	btfsc	plusw1,7,c
 24357  018054  D007               	goto	u9000
 24358                           
 24359                           ;stkvar	_exp @ sp[(-5)+4]
 24360  018056  0EFF               	movlw	-1
 24361  018058  006F FF8C  F026    	movff	plusw1,btemp
 24362  01805E  0E02               	movlw	2
 24363  018060  6026               	cpfslt	btemp^0,c
 24364  018062  D7EB               	goto	l9541
 24365  018064                     u9000:
 24366                           
 24367                           ;stkvar	_exp @ sp[(-5)+4]
 24368  018064  0EFF               	movlw	-1
 24369  018066  B0E3               	btfsc	plusw1,0,c
 24370  018068  D002               	goto	l9551
 24371                           
 24372                           ;stkvar	_arg @ sp[(-5)+0]
 24373  01806A  0EFD               	movlw	-3
 24374  01806C  9EE3               	bcf	plusw1,7,c
 24375  01806E                     l9551:
 24376                           
 24377                           ;stkvar	_exp @ sp[(-5)+4]
 24378  01806E  50E1               	movf	fsr1l,w,c
 24379  018070  0FFF               	addlw	-1
 24380  018072  6ED9               	movwf	fsr2l,c
 24381  018074  50E2               	movf	fsr1h,w,c
 24382  018076  6EDA               	movwf	fsr2h,c
 24383  018078  0EFF               	movlw	255
 24384  01807A  22DA               	addwfc	fsr2h,f,c
 24385  01807C  90D8               	bcf	status,0,c
 24386  01807E  32DF               	rrcf	indf2,f,c
 24387                           
 24388                           ;stkvar	_exp @ sp[(-5)+4]
 24389  018080  0EFF               	movlw	-1
 24390  018082  006F FF8C  F031    	movff	plusw1,btemp+11
 24391  018088  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 24392  01808E  6A2B               	clrf	(btemp+5)^0,c
 24393  018090  6A2C               	clrf	(btemp+6)^0,c
 24394  018092  6A2D               	clrf	(btemp+7)^0,c
 24395  018094  0060  F0A8  F02D   	movff	btemp+4,btemp+7
 24396  01809A  6A2C               	clrf	(btemp+6)^0,c
 24397  01809C  6A2B               	clrf	(btemp+5)^0,c
 24398  01809E  6A2A               	clrf	(btemp+4)^0,c
 24399                           
 24400                           ;stkvar	_arg @ sp[(-5)+0]
 24401  0180A0  50E1               	movf	fsr1l,w,c
 24402  0180A2  0FFB               	addlw	-5
 24403  0180A4  6ED9               	movwf	fsr2l,c
 24404  0180A6  50E2               	movf	fsr1h,w,c
 24405  0180A8  6EDA               	movwf	fsr2h,c
 24406  0180AA  0EFF               	movlw	255
 24407  0180AC  22DA               	addwfc	fsr2h,f,c
 24408  0180AE  502A               	movf	(btemp+4)^0,w,c
 24409  0180B0  12DE               	iorwf	postinc2,f,c
 24410  0180B2  502B               	movf	(btemp+5)^0,w,c
 24411  0180B4  12DE               	iorwf	postinc2,f,c
 24412  0180B6  502C               	movf	(btemp+6)^0,w,c
 24413  0180B8  12DE               	iorwf	postinc2,f,c
 24414  0180BA  502D               	movf	(btemp+7)^0,w,c
 24415  0180BC  12DE               	iorwf	postinc2,f,c
 24416                           
 24417                           ;stkvar	_sign @ sp[(-5)+-1]
 24418  0180BE  0EFA               	movlw	-6
 24419  0180C0  50E3               	movf	plusw1,w,c
 24420  0180C2  B4D8               	btfsc	status,2,c
 24421  0180C4  D005               	goto	l9561
 24422                           
 24423                           ;stkvar	_val @ sp[(-5)+-5]
 24424  0180C6  0EF9               	movlw	-7
 24425  0180C8  AEE3               	btfss	plusw1,7,c
 24426  0180CA  D002               	goto	l9561
 24427                           
 24428                           ;stkvar	_arg @ sp[(-5)+0]
 24429  0180CC  0EFE               	movlw	-2
 24430  0180CE  8EE3               	bsf	plusw1,7,c
 24431  0180D0                     l9561:
 24432                           
 24433                           ;stkvar	_arg @ sp[(-5)+0]
 24434  0180D0  0EFB               	movlw	-5
 24435  0180D2  006F FF8C  F026    	movff	plusw1,btemp
 24436  0180D8  0EFC               	movlw	-4
 24437  0180DA  006F FF8C  F027    	movff	plusw1,btemp+1
 24438  0180E0  0EFD               	movlw	-3
 24439  0180E2  006F FF8C  F028    	movff	plusw1,btemp+2
 24440  0180E8  0EFE               	movlw	-2
 24441  0180EA  006F FF8C  F029    	movff	plusw1,btemp+3
 24442  0180F0                     l3054:
 24443                           
 24444                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24445  0180F0  0EF6               	movlw	246
 24446  0180F2  26E1               	addwf	fsr1l,f,c
 24447  0180F4  0EFF               	movlw	255
 24448  0180F6  22E2               	addwfc	fsr1h,f,c
 24449  0180F8  0012               	return		;funcret
 24450  0180FA                     __end_of___xxtofl:
 24451                           	opt callstack 0
 24452                           
 24453 ;; *************** function ___fldiv *****************
 24454 ;; Defined at:
 24455 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;  b               4  [STACK] unsigned char 
 24458 ;;  a               4  [STACK] unsigned char 
 24459 ;; Auto vars:     Size  Location     Type
 24460 ;;  grs             4  [STACK] unsigned long 
 24461 ;;  rem             4  [STACK] unsigned long 
 24462 ;;  new_exp         2  [STACK] short 
 24463 ;;  aexp            1  [STACK] unsigned char 
 24464 ;;  bexp            1  [STACK] unsigned char 
 24465 ;;  sign            1  [STACK] unsigned char 
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  4  [STACK] unsigned char 
 24468 ;; Registers used:
 24469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24470 ;; Tracked objects:
 24471 ;;		On entry : 0/0
 24472 ;;		On exit  : 0/0
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24479 ;;Total ram usage:        0 bytes
 24480 ;; Hardware stack levels used:    1
 24481 ;; Hardware stack levels required when called:   15
 24482 ;; This function calls:
 24483 ;;		Nothing
 24484 ;; This function is called by:
 24485 ;;		_conv_raw_result
 24486 ;;		_calc_bsoc
 24487 ;;		_init_bsoc
 24488 ;;		_esr_check
 24489 ;;		_efgtoa
 24490 ;; This function uses a reentrant model
 24491 ;;
 24492                           
 24493                           	psect	text98
 24494  014A96                     __ptext98:
 24495                           	opt callstack 0
 24496  014A96                     ___fldiv:
 24497                           	opt callstack 0
 24498                           
 24499                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24500  014A96  0E0D               	movlw	13
 24501  014A98  26E1               	addwf	fsr1l,f,c
 24502  014A9A  0E00               	movlw	0
 24503  014A9C  22E2               	addwfc	fsr1h,f,c
 24504                           
 24505                           ;stkvar	_b @ sp[(-13)+-4]
 24506                           
 24507                           ;incstack = 0
 24508 ;; hardware stack exceeded
 24509  014A9E  0EF2               	movlw	242
 24510  014AA0  24E1               	addwf	fsr1l,w,c
 24511  014AA2  6ED9               	movwf	fsr2l,c
 24512  014AA4  0EFF               	movlw	255
 24513  014AA6  20E2               	addwfc	fsr1h,w,c
 24514  014AA8  6EDA               	movwf	fsr2h,c
 24515  014AAA  50DF               	movf	indf2,w,c
 24516  014AAC  6E31               	movwf	(btemp+11)^0,c
 24517  014AAE  0E80               	movlw	128
 24518  014AB0  1631               	andwf	(btemp+11)^0,f,c
 24519                           
 24520                           ;stkvar	_sign @ sp[(-13)+12]
 24521  014AB2  0EFF               	movlw	-1
 24522  014AB4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24523                           
 24524                           ;stkvar	_b @ sp[(-13)+-4]
 24525  014ABA  0EF2               	movlw	242
 24526  014ABC  24E1               	addwf	fsr1l,w,c
 24527  014ABE  6ED9               	movwf	fsr2l,c
 24528  014AC0  0EFF               	movlw	255
 24529  014AC2  20E2               	addwfc	fsr1h,w,c
 24530  014AC4  6EDA               	movwf	fsr2h,c
 24531  014AC6  50DF               	movf	indf2,w,c
 24532  014AC8  6E31               	movwf	(btemp+11)^0,c
 24533  014ACA  90D8               	bcf	status,0,c
 24534  014ACC  3431               	rlcf	(btemp+11)^0,w,c
 24535  014ACE  6E30               	movwf	(btemp+10)^0,c
 24536                           
 24537                           ;stkvar	_bexp @ sp[(-13)+11]
 24538  014AD0  0EFE               	movlw	-2
 24539  014AD2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24540                           
 24541                           ;stkvar	_b @ sp[(-13)+-4]
 24542  014AD8  0EF1               	movlw	241
 24543  014ADA  24E1               	addwf	fsr1l,w,c
 24544  014ADC  6ED9               	movwf	fsr2l,c
 24545  014ADE  0EFF               	movlw	255
 24546  014AE0  20E2               	addwfc	fsr1h,w,c
 24547  014AE2  6EDA               	movwf	fsr2h,c
 24548  014AE4  AEDF               	btfss	indf2,7,c
 24549  014AE6  D002               	goto	l8065
 24550                           
 24551                           ;stkvar	_bexp @ sp[(-13)+11]
 24552  014AE8  0EFE               	movlw	-2
 24553  014AEA  80E3               	bsf	plusw1,0,c
 24554  014AEC                     l8065:
 24555                           
 24556                           ;stkvar	_bexp @ sp[(-13)+11]
 24557  014AEC  0EFE               	movlw	-2
 24558  014AEE  50E3               	movf	plusw1,w,c
 24559  014AF0  B4D8               	btfsc	status,2,c
 24560  014AF2  D027               	goto	l8075
 24561                           
 24562                           ;stkvar	_bexp @ sp[(-13)+11]
 24563  014AF4  0EFE               	movlw	-2
 24564  014AF6  28E3               	incf	plusw1,w,c
 24565  014AF8  A4D8               	btfss	status,2,c
 24566  014AFA  D018               	goto	l8071
 24567  014AFC  0E00               	movlw	0
 24568  014AFE  6E2E               	movwf	(btemp+8)^0,c
 24569  014B00  0E00               	movlw	0
 24570  014B02  6E2F               	movwf	(btemp+9)^0,c
 24571  014B04  0E00               	movlw	0
 24572  014B06  6E30               	movwf	(btemp+10)^0,c
 24573  014B08  0E00               	movlw	0
 24574  014B0A  6E31               	movwf	(btemp+11)^0,c
 24575                           
 24576                           ;stkvar	_b @ sp[(-13)+-4]
 24577  014B0C  0EEF               	movlw	-17
 24578  014B0E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24579  014B14  0EF0               	movlw	-16
 24580  014B16  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24581  014B1C  0EF1               	movlw	-15
 24582  014B1E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24583  014B24  0EF2               	movlw	-14
 24584  014B26  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24585  014B2C                     l8071:
 24586                           
 24587                           ;stkvar	_b @ sp[(-13)+-4]
 24588  014B2C  0EF1               	movlw	-15
 24589  014B2E  8EE3               	bsf	plusw1,7,c
 24590                           
 24591                           ;stkvar	_b @ sp[(-13)+-4]
 24592  014B30  0EF2               	movlw	242
 24593  014B32  24E1               	addwf	fsr1l,w,c
 24594  014B34  6ED9               	movwf	fsr2l,c
 24595  014B36  0EFF               	movlw	255
 24596  014B38  20E2               	addwfc	fsr1h,w,c
 24597  014B3A  6EDA               	movwf	fsr2h,c
 24598  014B3C  0E00               	movlw	0
 24599  014B3E  6EDF               	movwf	indf2,c
 24600  014B40  D018               	goto	l8077
 24601  014B42                     l8075:
 24602  014B42  0E00               	movlw	0
 24603  014B44  6E2E               	movwf	(btemp+8)^0,c
 24604  014B46  0E00               	movlw	0
 24605  014B48  6E2F               	movwf	(btemp+9)^0,c
 24606  014B4A  0E00               	movlw	0
 24607  014B4C  6E30               	movwf	(btemp+10)^0,c
 24608  014B4E  0E00               	movlw	0
 24609  014B50  6E31               	movwf	(btemp+11)^0,c
 24610                           
 24611                           ;stkvar	_b @ sp[(-13)+-4]
 24612  014B52  0EEF               	movlw	-17
 24613  014B54  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24614  014B5A  0EF0               	movlw	-16
 24615  014B5C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24616  014B62  0EF1               	movlw	-15
 24617  014B64  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24618  014B6A  0EF2               	movlw	-14
 24619  014B6C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24620  014B72                     l8077:
 24621                           
 24622                           ;stkvar	_a @ sp[(-13)+-8]
 24623  014B72  0EEE               	movlw	238
 24624  014B74  24E1               	addwf	fsr1l,w,c
 24625  014B76  6ED9               	movwf	fsr2l,c
 24626  014B78  0EFF               	movlw	255
 24627  014B7A  20E2               	addwfc	fsr1h,w,c
 24628  014B7C  6EDA               	movwf	fsr2h,c
 24629  014B7E  50DF               	movf	indf2,w,c
 24630  014B80  6E31               	movwf	(btemp+11)^0,c
 24631  014B82  0E80               	movlw	128
 24632  014B84  1631               	andwf	(btemp+11)^0,f,c
 24633                           
 24634                           ;stkvar	_sign @ sp[(-13)+12]
 24635  014B86  50E1               	movf	fsr1l,w,c
 24636  014B88  0FFF               	addlw	-1
 24637  014B8A  6ED9               	movwf	fsr2l,c
 24638  014B8C  50E2               	movf	fsr1h,w,c
 24639  014B8E  6EDA               	movwf	fsr2h,c
 24640  014B90  0EFF               	movlw	255
 24641  014B92  22DA               	addwfc	fsr2h,f,c
 24642  014B94  5031               	movf	(btemp+11)^0,w,c
 24643  014B96  1ADF               	xorwf	indf2,f,c
 24644                           
 24645                           ;stkvar	_a @ sp[(-13)+-8]
 24646  014B98  0EEE               	movlw	238
 24647  014B9A  24E1               	addwf	fsr1l,w,c
 24648  014B9C  6ED9               	movwf	fsr2l,c
 24649  014B9E  0EFF               	movlw	255
 24650  014BA0  20E2               	addwfc	fsr1h,w,c
 24651  014BA2  6EDA               	movwf	fsr2h,c
 24652  014BA4  50DF               	movf	indf2,w,c
 24653  014BA6  6E31               	movwf	(btemp+11)^0,c
 24654  014BA8  90D8               	bcf	status,0,c
 24655  014BAA  3431               	rlcf	(btemp+11)^0,w,c
 24656  014BAC  6E30               	movwf	(btemp+10)^0,c
 24657                           
 24658                           ;stkvar	_aexp @ sp[(-13)+10]
 24659  014BAE  0EFD               	movlw	-3
 24660  014BB0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24661                           
 24662                           ;stkvar	_a @ sp[(-13)+-8]
 24663  014BB6  0EED               	movlw	237
 24664  014BB8  24E1               	addwf	fsr1l,w,c
 24665  014BBA  6ED9               	movwf	fsr2l,c
 24666  014BBC  0EFF               	movlw	255
 24667  014BBE  20E2               	addwfc	fsr1h,w,c
 24668  014BC0  6EDA               	movwf	fsr2h,c
 24669  014BC2  AEDF               	btfss	indf2,7,c
 24670  014BC4  D002               	goto	l8085
 24671                           
 24672                           ;stkvar	_aexp @ sp[(-13)+10]
 24673  014BC6  0EFD               	movlw	-3
 24674  014BC8  80E3               	bsf	plusw1,0,c
 24675  014BCA                     l8085:
 24676                           
 24677                           ;stkvar	_aexp @ sp[(-13)+10]
 24678  014BCA  0EFD               	movlw	-3
 24679  014BCC  50E3               	movf	plusw1,w,c
 24680  014BCE  B4D8               	btfsc	status,2,c
 24681  014BD0  D027               	goto	l8095
 24682                           
 24683                           ;stkvar	_aexp @ sp[(-13)+10]
 24684  014BD2  0EFD               	movlw	-3
 24685  014BD4  28E3               	incf	plusw1,w,c
 24686  014BD6  A4D8               	btfss	status,2,c
 24687  014BD8  D018               	goto	l8091
 24688  014BDA  0E00               	movlw	0
 24689  014BDC  6E2E               	movwf	(btemp+8)^0,c
 24690  014BDE  0E00               	movlw	0
 24691  014BE0  6E2F               	movwf	(btemp+9)^0,c
 24692  014BE2  0E00               	movlw	0
 24693  014BE4  6E30               	movwf	(btemp+10)^0,c
 24694  014BE6  0E00               	movlw	0
 24695  014BE8  6E31               	movwf	(btemp+11)^0,c
 24696                           
 24697                           ;stkvar	_a @ sp[(-13)+-8]
 24698  014BEA  0EEB               	movlw	-21
 24699  014BEC  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24700  014BF2  0EEC               	movlw	-20
 24701  014BF4  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24702  014BFA  0EED               	movlw	-19
 24703  014BFC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24704  014C02  0EEE               	movlw	-18
 24705  014C04  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24706  014C0A                     l8091:
 24707                           
 24708                           ;stkvar	_a @ sp[(-13)+-8]
 24709  014C0A  0EED               	movlw	-19
 24710  014C0C  8EE3               	bsf	plusw1,7,c
 24711                           
 24712                           ;stkvar	_a @ sp[(-13)+-8]
 24713  014C0E  0EEE               	movlw	238
 24714  014C10  24E1               	addwf	fsr1l,w,c
 24715  014C12  6ED9               	movwf	fsr2l,c
 24716  014C14  0EFF               	movlw	255
 24717  014C16  20E2               	addwfc	fsr1h,w,c
 24718  014C18  6EDA               	movwf	fsr2h,c
 24719  014C1A  0E00               	movlw	0
 24720  014C1C  6EDF               	movwf	indf2,c
 24721  014C1E  D018               	goto	l8097
 24722  014C20                     l8095:
 24723  014C20  0E00               	movlw	0
 24724  014C22  6E2E               	movwf	(btemp+8)^0,c
 24725  014C24  0E00               	movlw	0
 24726  014C26  6E2F               	movwf	(btemp+9)^0,c
 24727  014C28  0E00               	movlw	0
 24728  014C2A  6E30               	movwf	(btemp+10)^0,c
 24729  014C2C  0E00               	movlw	0
 24730  014C2E  6E31               	movwf	(btemp+11)^0,c
 24731                           
 24732                           ;stkvar	_a @ sp[(-13)+-8]
 24733  014C30  0EEB               	movlw	-21
 24734  014C32  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24735  014C38  0EEC               	movlw	-20
 24736  014C3A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24737  014C40  0EED               	movlw	-19
 24738  014C42  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24739  014C48  0EEE               	movlw	-18
 24740  014C4A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24741  014C50                     l8097:
 24742                           
 24743                           ;stkvar	_a @ sp[(-13)+-8]
 24744  014C50  0EEB               	movlw	-21
 24745  014C52  50E3               	movf	plusw1,w,c
 24746  014C54  E139               	bnz	l8109
 24747  014C56  0EEC               	movlw	-20
 24748  014C58  50E3               	movf	plusw1,w,c
 24749  014C5A  E136               	bnz	l8109
 24750  014C5C  0EED               	movlw	-19
 24751  014C5E  50E3               	movf	plusw1,w,c
 24752  014C60  E133               	bnz	l8109
 24753  014C62  0EEE               	movlw	-18
 24754  014C64  50E3               	movf	plusw1,w,c
 24755  014C66  A4D8               	btfss	status,2,c
 24756  014C68  D02F               	goto	l8109
 24757                           
 24758                           ;stkvar	_b @ sp[(-13)+-4]
 24759  014C6A  0EEF               	movlw	-17
 24760  014C6C  6AE3               	clrf	plusw1,c
 24761  014C6E  0EF0               	movlw	-16
 24762  014C70  6AE3               	clrf	plusw1,c
 24763  014C72  0EF1               	movlw	-15
 24764  014C74  6AE3               	clrf	plusw1,c
 24765  014C76  0EF2               	movlw	-14
 24766  014C78  6AE3               	clrf	plusw1,c
 24767                           
 24768                           ;stkvar	_b @ sp[(-13)+-4]
 24769  014C7A  0EF1               	movlw	241
 24770  014C7C  24E1               	addwf	fsr1l,w,c
 24771  014C7E  6ED9               	movwf	fsr2l,c
 24772  014C80  0EFF               	movlw	255
 24773  014C82  20E2               	addwfc	fsr1h,w,c
 24774  014C84  6EDA               	movwf	fsr2h,c
 24775  014C86  0E80               	movlw	128
 24776  014C88  12DE               	iorwf	postinc2,f,c
 24777  014C8A  0E7F               	movlw	127
 24778  014C8C  12DD               	iorwf	postdec2,f,c
 24779  014C8E                     l8103:
 24780                           
 24781                           ;stkvar	_sign @ sp[(-13)+12]
 24782  014C8E  0EFF               	movlw	-1
 24783  014C90  006F FF8C  F031    	movff	plusw1,btemp+11
 24784                           
 24785                           ;stkvar	_b @ sp[(-13)+-4]
 24786  014C96  0EF2               	movlw	242
 24787  014C98  24E1               	addwf	fsr1l,w,c
 24788  014C9A  6ED9               	movwf	fsr2l,c
 24789  014C9C  0EFF               	movlw	255
 24790  014C9E  20E2               	addwfc	fsr1h,w,c
 24791  014CA0  6EDA               	movwf	fsr2h,c
 24792  014CA2  5031               	movf	(btemp+11)^0,w,c
 24793  014CA4  12DF               	iorwf	indf2,f,c
 24794                           
 24795                           ;stkvar	_b @ sp[(-13)+-4]
 24796  014CA6  0EEF               	movlw	-17
 24797  014CA8  006F FF8C  F026    	movff	plusw1,btemp
 24798  014CAE  0EF0               	movlw	-16
 24799  014CB0  006F FF8C  F027    	movff	plusw1,btemp+1
 24800  014CB6  0EF1               	movlw	-15
 24801  014CB8  006F FF8C  F028    	movff	plusw1,btemp+2
 24802  014CBE  0EF2               	movlw	-14
 24803  014CC0  006F FF8C  F029    	movff	plusw1,btemp+3
 24804  014CC6  D19F               	goto	l2978
 24805  014CC8                     l8109:
 24806                           
 24807                           ;stkvar	_bexp @ sp[(-13)+11]
 24808  014CC8  0EFE               	movlw	-2
 24809  014CCA  50E3               	movf	plusw1,w,c
 24810  014CCC  A4D8               	btfss	status,2,c
 24811  014CCE  D009               	goto	l8117
 24812  014CD0  0E00               	movlw	0
 24813  014CD2  6E26               	movwf	btemp^0,c
 24814  014CD4  0E00               	movlw	0
 24815  014CD6  6E27               	movwf	(btemp+1)^0,c
 24816  014CD8  0E00               	movlw	0
 24817  014CDA  6E28               	movwf	(btemp+2)^0,c
 24818  014CDC  0E00               	movlw	0
 24819  014CDE  6E29               	movwf	(btemp+3)^0,c
 24820  014CE0  D192               	goto	l2978
 24821  014CE2                     l8117:
 24822                           
 24823                           ;stkvar	_bexp @ sp[(-13)+11]
 24824  014CE2  0EFE               	movlw	-2
 24825  014CE4  50E3               	movf	plusw1,w,c
 24826  014CE6  6E30               	movwf	(btemp+10)^0,c
 24827  014CE8  6A31               	clrf	(btemp+11)^0,c
 24828                           
 24829                           ;stkvar	_aexp @ sp[(-13)+10]
 24830  014CEA  0EFD               	movlw	-3
 24831  014CEC  50E3               	movf	plusw1,w,c
 24832  014CEE  5E30               	subwf	(btemp+10)^0,f,c
 24833  014CF0  0E00               	movlw	0
 24834  014CF2  5A31               	subwfb	(btemp+11)^0,f,c
 24835  014CF4  0E7F               	movlw	127
 24836  014CF6  2630               	addwf	(btemp+10)^0,f,c
 24837  014CF8  0E00               	movlw	0
 24838  014CFA  2231               	addwfc	(btemp+11)^0,f,c
 24839                           
 24840                           ;stkvar	_new_exp @ sp[(-13)+8]
 24841  014CFC  0EFB               	movlw	-5
 24842  014CFE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24843  014D04  0EFC               	movlw	-4
 24844  014D06  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24845                           
 24846                           ;stkvar	_b @ sp[(-13)+-4]
 24847  014D0C  0EEF               	movlw	-17
 24848  014D0E  006F FF8C  F02E    	movff	plusw1,btemp+8
 24849  014D14  0EF0               	movlw	-16
 24850  014D16  006F FF8C  F02F    	movff	plusw1,btemp+9
 24851  014D1C  0EF1               	movlw	-15
 24852  014D1E  006F FF8C  F030    	movff	plusw1,btemp+10
 24853  014D24  0EF2               	movlw	-14
 24854  014D26  006F FF8C  F031    	movff	plusw1,btemp+11
 24855                           
 24856                           ;stkvar	_rem @ sp[(-13)+4]
 24857  014D2C  0EF7               	movlw	-9
 24858  014D2E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24859  014D34  0EF8               	movlw	-8
 24860  014D36  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24861  014D3C  0EF9               	movlw	-7
 24862  014D3E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24863  014D44  0EFA               	movlw	-6
 24864  014D46  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24865                           
 24866                           ;stkvar	_b @ sp[(-13)+-4]
 24867  014D4C  0EEF               	movlw	-17
 24868  014D4E  6AE3               	clrf	plusw1,c
 24869  014D50  0EF0               	movlw	-16
 24870  014D52  6AE3               	clrf	plusw1,c
 24871  014D54  0EF1               	movlw	-15
 24872  014D56  6AE3               	clrf	plusw1,c
 24873  014D58  0EF2               	movlw	-14
 24874  014D5A  6AE3               	clrf	plusw1,c
 24875                           
 24876                           ;stkvar	_grs @ sp[(-13)+0]
 24877  014D5C  0EF3               	movlw	-13
 24878  014D5E  6AE3               	clrf	plusw1,c
 24879  014D60  0EF4               	movlw	-12
 24880  014D62  6AE3               	clrf	plusw1,c
 24881  014D64  0EF5               	movlw	-11
 24882  014D66  6AE3               	clrf	plusw1,c
 24883  014D68  0EF6               	movlw	-10
 24884  014D6A  6AE3               	clrf	plusw1,c
 24885                           
 24886                           ;stkvar	_aexp @ sp[(-13)+10]
 24887  014D6C  0EFD               	movlw	-3
 24888  014D6E  6AE3               	clrf	plusw1,c
 24889  014D70  D050               	goto	l8145
 24890  014D72                     l8127:
 24891                           
 24892                           ;stkvar	_aexp @ sp[(-13)+10]
 24893  014D72  0EFD               	movlw	-3
 24894  014D74  50E3               	movf	plusw1,w,c
 24895  014D76  B4D8               	btfsc	status,2,c
 24896  014D78  D020               	goto	l8137
 24897                           
 24898                           ;stkvar	_rem @ sp[(-13)+4]
 24899  014D7A  90D8               	bcf	status,0,c
 24900  014D7C  0EF7               	movlw	-9
 24901  014D7E  36E3               	rlcf	plusw1,f,c
 24902  014D80  0EF8               	movlw	-8
 24903  014D82  36E3               	rlcf	plusw1,f,c
 24904  014D84  0EF9               	movlw	-7
 24905  014D86  36E3               	rlcf	plusw1,f,c
 24906  014D88  0EFA               	movlw	-6
 24907  014D8A  36E3               	rlcf	plusw1,f,c
 24908                           
 24909                           ;stkvar	_b @ sp[(-13)+-4]
 24910  014D8C  90D8               	bcf	status,0,c
 24911  014D8E  0EEF               	movlw	-17
 24912  014D90  36E3               	rlcf	plusw1,f,c
 24913  014D92  0EF0               	movlw	-16
 24914  014D94  36E3               	rlcf	plusw1,f,c
 24915  014D96  0EF1               	movlw	-15
 24916  014D98  36E3               	rlcf	plusw1,f,c
 24917  014D9A  0EF2               	movlw	-14
 24918  014D9C  36E3               	rlcf	plusw1,f,c
 24919                           
 24920                           ;stkvar	_grs @ sp[(-13)+0]
 24921  014D9E  0EF6               	movlw	-10
 24922  014DA0  AEE3               	btfss	plusw1,7,c
 24923  014DA2  D002               	goto	l8135
 24924                           
 24925                           ;stkvar	_b @ sp[(-13)+-4]
 24926  014DA4  0EEF               	movlw	-17
 24927  014DA6  80E3               	bsf	plusw1,0,c
 24928  014DA8                     l8135:
 24929                           
 24930                           ;stkvar	_grs @ sp[(-13)+0]
 24931  014DA8  90D8               	bcf	status,0,c
 24932  014DAA  0EF3               	movlw	-13
 24933  014DAC  36E3               	rlcf	plusw1,f,c
 24934  014DAE  0EF4               	movlw	-12
 24935  014DB0  36E3               	rlcf	plusw1,f,c
 24936  014DB2  0EF5               	movlw	-11
 24937  014DB4  36E3               	rlcf	plusw1,f,c
 24938  014DB6  0EF6               	movlw	-10
 24939  014DB8  36E3               	rlcf	plusw1,f,c
 24940  014DBA                     l8137:
 24941                           
 24942                           ;stkvar	_a @ sp[(-13)+-8]
 24943                           ;stkvar	_rem @ sp[(-13)+4]
 24944  014DBA  50E1               	movf	fsr1l,w,c
 24945  014DBC  0FF7               	addlw	-9
 24946  014DBE  6ED9               	movwf	fsr2l,c
 24947  014DC0  50E2               	movf	fsr1h,w,c
 24948  014DC2  6EDA               	movwf	fsr2h,c
 24949  014DC4  0EFF               	movlw	255
 24950  014DC6  22DA               	addwfc	fsr2h,f,c
 24951  014DC8  0EEB               	movlw	-21
 24952  014DCA  50E3               	movf	plusw1,w,c
 24953  014DCC  5CDE               	subwf	postinc2,w,c
 24954  014DCE  0EEC               	movlw	-20
 24955  014DD0  50E3               	movf	plusw1,w,c
 24956  014DD2  58DE               	subwfb	postinc2,w,c
 24957  014DD4  0EED               	movlw	-19
 24958  014DD6  50E3               	movf	plusw1,w,c
 24959  014DD8  58DE               	subwfb	postinc2,w,c
 24960  014DDA  0EEE               	movlw	-18
 24961  014DDC  50E3               	movf	plusw1,w,c
 24962  014DDE  58DE               	subwfb	postinc2,w,c
 24963  014DE0  A0D8               	btfss	status,0,c
 24964  014DE2  D015               	goto	l8143
 24965                           
 24966                           ;stkvar	_grs @ sp[(-13)+0]
 24967  014DE4  0EF6               	movlw	-10
 24968  014DE6  8CE3               	bsf	plusw1,6,c
 24969                           
 24970                           ;stkvar	_a @ sp[(-13)+-8]
 24971                           ;stkvar	_rem @ sp[(-13)+4]
 24972  014DE8  50E1               	movf	fsr1l,w,c
 24973  014DEA  0FF7               	addlw	-9
 24974  014DEC  6ED9               	movwf	fsr2l,c
 24975  014DEE  50E2               	movf	fsr1h,w,c
 24976  014DF0  6EDA               	movwf	fsr2h,c
 24977  014DF2  0EFF               	movlw	255
 24978  014DF4  22DA               	addwfc	fsr2h,f,c
 24979  014DF6  0EEB               	movlw	-21
 24980  014DF8  50E3               	movf	plusw1,w,c
 24981  014DFA  5EDE               	subwf	postinc2,f,c
 24982  014DFC  0EEC               	movlw	-20
 24983  014DFE  50E3               	movf	plusw1,w,c
 24984  014E00  5ADE               	subwfb	postinc2,f,c
 24985  014E02  0EED               	movlw	-19
 24986  014E04  50E3               	movf	plusw1,w,c
 24987  014E06  5ADE               	subwfb	postinc2,f,c
 24988  014E08  0EEE               	movlw	-18
 24989  014E0A  50E3               	movf	plusw1,w,c
 24990  014E0C  5ADE               	subwfb	postinc2,f,c
 24991  014E0E                     l8143:
 24992                           
 24993                           ;stkvar	_aexp @ sp[(-13)+10]
 24994  014E0E  0EFD               	movlw	-3
 24995  014E10  2AE3               	incf	plusw1,f,c
 24996  014E12                     l8145:
 24997                           
 24998                           ;stkvar	_aexp @ sp[(-13)+10]
 24999  014E12  0EFD               	movlw	-3
 25000  014E14  006F FF8C  F026    	movff	plusw1,btemp
 25001  014E1A  0E19               	movlw	25
 25002  014E1C  6426               	cpfsgt	btemp^0,c
 25003  014E1E  D7A9               	goto	l8127
 25004                           
 25005                           ;stkvar	_rem @ sp[(-13)+4]
 25006  014E20  0EF7               	movlw	-9
 25007  014E22  50E3               	movf	plusw1,w,c
 25008  014E24  E10A               	bnz	u6550
 25009  014E26  0EF8               	movlw	-8
 25010  014E28  50E3               	movf	plusw1,w,c
 25011  014E2A  E107               	bnz	u6550
 25012  014E2C  0EF9               	movlw	-7
 25013  014E2E  50E3               	movf	plusw1,w,c
 25014  014E30  E104               	bnz	u6550
 25015  014E32  0EFA               	movlw	-6
 25016  014E34  50E3               	movf	plusw1,w,c
 25017  014E36  B4D8               	btfsc	status,2,c
 25018  014E38  D024               	goto	l8161
 25019  014E3A                     u6550:
 25020                           
 25021                           ;stkvar	_grs @ sp[(-13)+0]
 25022  014E3A  0EF3               	movlw	-13
 25023  014E3C  80E3               	bsf	plusw1,0,c
 25024  014E3E  D021               	goto	l8161
 25025  014E40                     l8151:
 25026                           
 25027                           ;stkvar	_b @ sp[(-13)+-4]
 25028  014E40  90D8               	bcf	status,0,c
 25029  014E42  0EEF               	movlw	-17
 25030  014E44  36E3               	rlcf	plusw1,f,c
 25031  014E46  0EF0               	movlw	-16
 25032  014E48  36E3               	rlcf	plusw1,f,c
 25033  014E4A  0EF1               	movlw	-15
 25034  014E4C  36E3               	rlcf	plusw1,f,c
 25035  014E4E  0EF2               	movlw	-14
 25036  014E50  36E3               	rlcf	plusw1,f,c
 25037                           
 25038                           ;stkvar	_grs @ sp[(-13)+0]
 25039  014E52  0EF6               	movlw	-10
 25040  014E54  AEE3               	btfss	plusw1,7,c
 25041  014E56  D002               	goto	l8157
 25042                           
 25043                           ;stkvar	_b @ sp[(-13)+-4]
 25044  014E58  0EEF               	movlw	-17
 25045  014E5A  80E3               	bsf	plusw1,0,c
 25046  014E5C                     l8157:
 25047                           
 25048                           ;stkvar	_grs @ sp[(-13)+0]
 25049  014E5C  90D8               	bcf	status,0,c
 25050  014E5E  0EF3               	movlw	-13
 25051  014E60  36E3               	rlcf	plusw1,f,c
 25052  014E62  0EF4               	movlw	-12
 25053  014E64  36E3               	rlcf	plusw1,f,c
 25054  014E66  0EF5               	movlw	-11
 25055  014E68  36E3               	rlcf	plusw1,f,c
 25056  014E6A  0EF6               	movlw	-10
 25057  014E6C  36E3               	rlcf	plusw1,f,c
 25058                           
 25059                           ;stkvar	_new_exp @ sp[(-13)+8]
 25060  014E6E  50E1               	movf	fsr1l,w,c
 25061  014E70  0FFB               	addlw	-5
 25062  014E72  6ED9               	movwf	fsr2l,c
 25063  014E74  50E2               	movf	fsr1h,w,c
 25064  014E76  6EDA               	movwf	fsr2h,c
 25065  014E78  0EFF               	movlw	255
 25066  014E7A  22DA               	addwfc	fsr2h,f,c
 25067  014E7C  06DE               	decf	postinc2,f,c
 25068  014E7E  0E00               	movlw	0
 25069  014E80  5ADD               	subwfb	postdec2,f,c
 25070  014E82                     l8161:
 25071                           
 25072                           ;stkvar	_b @ sp[(-13)+-4]
 25073  014E82  0EF1               	movlw	-15
 25074  014E84  AEE3               	btfss	plusw1,7,c
 25075  014E86  D7DC               	goto	l8151
 25076                           
 25077                           ;stkvar	_aexp @ sp[(-13)+10]
 25078  014E88  0EFD               	movlw	-3
 25079  014E8A  6AE3               	clrf	plusw1,c
 25080                           
 25081                           ;stkvar	_grs @ sp[(-13)+0]
 25082  014E8C  0EF6               	movlw	-10
 25083  014E8E  AEE3               	btfss	plusw1,7,c
 25084  014E90  D020               	goto	l8175
 25085                           
 25086                           ;stkvar	_grs @ sp[(-13)+0]
 25087  014E92  50E1               	movf	fsr1l,w,c
 25088  014E94  0FF3               	addlw	-13
 25089  014E96  6ED9               	movwf	fsr2l,c
 25090  014E98  50E2               	movf	fsr1h,w,c
 25091  014E9A  6EDA               	movwf	fsr2h,c
 25092  014E9C  0EFF               	movlw	255
 25093  014E9E  22DA               	addwfc	fsr2h,f,c
 25094  014EA0  0EFF               	movlw	255
 25095  014EA2  14DE               	andwf	postinc2,w,c
 25096  014EA4  6E2E               	movwf	(btemp+8)^0,c
 25097  014EA6  0EFF               	movlw	255
 25098  014EA8  14DE               	andwf	postinc2,w,c
 25099  014EAA  6E2F               	movwf	(btemp+9)^0,c
 25100  014EAC  0EFF               	movlw	255
 25101  014EAE  14DE               	andwf	postinc2,w,c
 25102  014EB0  6E30               	movwf	(btemp+10)^0,c
 25103  014EB2  0E7F               	movlw	127
 25104  014EB4  14DE               	andwf	postinc2,w,c
 25105  014EB6  6E31               	movwf	(btemp+11)^0,c
 25106  014EB8  502E               	movf	(btemp+8)^0,w,c
 25107  014EBA  102F               	iorwf	(btemp+9)^0,w,c
 25108  014EBC  1030               	iorwf	(btemp+10)^0,w,c
 25109  014EBE  1031               	iorwf	(btemp+11)^0,w,c
 25110  014EC0  B4D8               	btfsc	status,2,c
 25111  014EC2  D004               	goto	l8171
 25112  014EC4                     u6590:
 25113                           
 25114                           ;stkvar	_aexp @ sp[(-13)+10]
 25115  014EC4  0EFD               	movlw	-3
 25116  014EC6  6AE3               	clrf	plusw1,c
 25117  014EC8  2AE3               	incf	plusw1,f,c
 25118  014ECA  D003               	goto	l8175
 25119  014ECC                     l8171:
 25120                           
 25121                           ;stkvar	_b @ sp[(-13)+-4]
 25122  014ECC  0EEF               	movlw	-17
 25123  014ECE  B0E3               	btfsc	plusw1,0,c
 25124  014ED0  D7F9               	goto	u6590
 25125  014ED2                     l8175:
 25126                           
 25127                           ;stkvar	_aexp @ sp[(-13)+10]
 25128  014ED2  0EFD               	movlw	-3
 25129  014ED4  50E3               	movf	plusw1,w,c
 25130  014ED6  B4D8               	btfsc	status,2,c
 25131  014ED8  D036               	goto	l8185
 25132                           
 25133                           ;stkvar	_b @ sp[(-13)+-4]
 25134  014EDA  50E1               	movf	fsr1l,w,c
 25135  014EDC  0FEF               	addlw	-17
 25136  014EDE  6ED9               	movwf	fsr2l,c
 25137  014EE0  50E2               	movf	fsr1h,w,c
 25138  014EE2  6EDA               	movwf	fsr2h,c
 25139  014EE4  0EFF               	movlw	255
 25140  014EE6  22DA               	addwfc	fsr2h,f,c
 25141  014EE8  2ADE               	incf	postinc2,f,c
 25142  014EEA  0E00               	movlw	0
 25143  014EEC  22DE               	addwfc	postinc2,f,c
 25144  014EEE  22DE               	addwfc	postinc2,f,c
 25145  014EF0  22DE               	addwfc	postinc2,f,c
 25146                           
 25147                           ;stkvar	_b @ sp[(-13)+-4]
 25148  014EF2  0EF2               	movlw	-14
 25149  014EF4  A0E3               	btfss	plusw1,0,c
 25150  014EF6  D027               	goto	l8185
 25151  014EF8  0E01               	movlw	1
 25152  014EFA  6E31               	movwf	(btemp+11)^0,c
 25153                           
 25154                           ;stkvar	_b @ sp[(-13)+-4]
 25155  014EFC  50E1               	movf	fsr1l,w,c
 25156  014EFE  0FEF               	addlw	-17
 25157  014F00  6ED9               	movwf	fsr2l,c
 25158  014F02  50E2               	movf	fsr1h,w,c
 25159  014F04  6EDA               	movwf	fsr2h,c
 25160  014F06  0EFF               	movlw	255
 25161  014F08  22DA               	addwfc	fsr2h,f,c
 25162  014F0A  2831               	incf	(btemp+11)^0,w,c
 25163  014F0C  52DE               	movf	postinc2,f,c
 25164  014F0E  D008               	goto	u6630
 25165  014F10                     u6635:
 25166  014F10  52DE               	movf	postinc2,f,c
 25167  014F12  90D8               	bcf	status,0,c
 25168  014F14  BEDC               	btfsc	preinc2,7,c
 25169  014F16  80D8               	bsf	status,0,c
 25170  014F18  32DD               	rrcf	postdec2,f,c
 25171  014F1A  32DD               	rrcf	postdec2,f,c
 25172  014F1C  32DD               	rrcf	postdec2,f,c
 25173  014F1E  32DE               	rrcf	postinc2,f,c
 25174  014F20                     u6630:
 25175  014F20  2EE8               	decfsz	wreg,f,c
 25176  014F22  D7F6               	goto	u6635
 25177                           
 25178                           ;stkvar	_new_exp @ sp[(-13)+8]
 25179  014F24  0EFB               	movlw	-5
 25180  014F26  50E3               	movf	plusw1,w,c
 25181  014F28  0F01               	addlw	1
 25182  014F2A  6E26               	movwf	btemp^0,c
 25183  014F2C  0EFB               	movlw	-5
 25184  014F2E  0060  F09B  FFE3   	movff	btemp,plusw1
 25185  014F34  6A26               	clrf	btemp^0,c
 25186  014F36  0EFC               	movlw	-4
 25187  014F38  50E3               	movf	plusw1,w,c
 25188  014F3A  2026               	addwfc	btemp^0,w,c
 25189  014F3C  6E26               	movwf	btemp^0,c
 25190  014F3E  0EFC               	movlw	-4
 25191  014F40  0060  F09B  FFE3   	movff	btemp,plusw1
 25192  014F46                     l8185:
 25193                           
 25194                           ;stkvar	_new_exp @ sp[(-13)+8]
 25195  014F46  0EFC               	movlw	-4
 25196  014F48  BEE3               	btfsc	plusw1,7,c
 25197  014F4A  D01B               	goto	l8191
 25198  014F4C  0EFC               	movlw	-4
 25199  014F4E  50E3               	movf	plusw1,w,c
 25200  014F50  E104               	bnz	u6640
 25201  014F52  0EFB               	movlw	-5
 25202  014F54  28E3               	incf	plusw1,w,c
 25203  014F56  A0D8               	btfss	status,0,c
 25204  014F58  D014               	goto	l8191
 25205  014F5A                     u6640:
 25206  014F5A  0EFF               	movlw	255
 25207  014F5C  6E30               	movwf	(btemp+10)^0,c
 25208  014F5E  0E00               	movlw	0
 25209  014F60  6E31               	movwf	(btemp+11)^0,c
 25210                           
 25211                           ;stkvar	_new_exp @ sp[(-13)+8]
 25212  014F62  0EFB               	movlw	-5
 25213  014F64  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25214  014F6A  0EFC               	movlw	-4
 25215  014F6C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25216                           
 25217                           ;stkvar	_b @ sp[(-13)+-4]
 25218  014F72  0EEF               	movlw	-17
 25219  014F74  6AE3               	clrf	plusw1,c
 25220  014F76  0EF0               	movlw	-16
 25221  014F78  6AE3               	clrf	plusw1,c
 25222  014F7A  0EF1               	movlw	-15
 25223  014F7C  6AE3               	clrf	plusw1,c
 25224  014F7E  0EF2               	movlw	-14
 25225  014F80  6AE3               	clrf	plusw1,c
 25226  014F82                     l8191:
 25227                           
 25228                           ;stkvar	_new_exp @ sp[(-13)+8]
 25229  014F82  0EFC               	movlw	-4
 25230  014F84  BEE3               	btfsc	plusw1,7,c
 25231  014F86  D007               	goto	u6650
 25232  014F88  0EFC               	movlw	-4
 25233  014F8A  50E3               	movf	plusw1,w,c
 25234  014F8C  E112               	bnz	l8197
 25235  014F8E  0EFB               	movlw	-5
 25236  014F90  04E3               	decf	plusw1,w,c
 25237  014F92  B0D8               	btfsc	status,0,c
 25238  014F94  D00E               	goto	l8197
 25239  014F96                     u6650:
 25240                           
 25241                           ;stkvar	_new_exp @ sp[(-13)+8]
 25242  014F96  0EFB               	movlw	-5
 25243  014F98  6AE3               	clrf	plusw1,c
 25244  014F9A  0EFC               	movlw	-4
 25245  014F9C  6AE3               	clrf	plusw1,c
 25246                           
 25247                           ;stkvar	_b @ sp[(-13)+-4]
 25248  014F9E  0EEF               	movlw	-17
 25249  014FA0  6AE3               	clrf	plusw1,c
 25250  014FA2  0EF0               	movlw	-16
 25251  014FA4  6AE3               	clrf	plusw1,c
 25252  014FA6  0EF1               	movlw	-15
 25253  014FA8  6AE3               	clrf	plusw1,c
 25254  014FAA  0EF2               	movlw	-14
 25255  014FAC  6AE3               	clrf	plusw1,c
 25256                           
 25257                           ;stkvar	_sign @ sp[(-13)+12]
 25258  014FAE  0EFF               	movlw	-1
 25259  014FB0  6AE3               	clrf	plusw1,c
 25260  014FB2                     l8197:
 25261                           
 25262                           ;stkvar	_new_exp @ sp[(-13)+8]
 25263                           ;stkvar	_bexp @ sp[(-13)+11]
 25264  014FB2  0EFB               	movlw	-5
 25265  014FB4  006F FF8C  F026    	movff	plusw1,btemp
 25266  014FBA  0EFE               	movlw	-2
 25267  014FBC  0060  F09B  FFE3   	movff	btemp,plusw1
 25268                           
 25269                           ;stkvar	_bexp @ sp[(-13)+11]
 25270  014FC2  0EFE               	movlw	-2
 25271  014FC4  A0E3               	btfss	plusw1,0,c
 25272  014FC6  D009               	goto	l8203
 25273                           
 25274                           ;stkvar	_b @ sp[(-13)+-4]
 25275  014FC8  0EF1               	movlw	241
 25276  014FCA  24E1               	addwf	fsr1l,w,c
 25277  014FCC  6ED9               	movwf	fsr2l,c
 25278  014FCE  0EFF               	movlw	255
 25279  014FD0  20E2               	addwfc	fsr1h,w,c
 25280  014FD2  6EDA               	movwf	fsr2h,c
 25281  014FD4  0E00               	movlw	0
 25282  014FD6  8EDB               	bsf	plusw2,7,c
 25283  014FD8  D008               	goto	l8205
 25284  014FDA                     l8203:
 25285                           
 25286                           ;stkvar	_b @ sp[(-13)+-4]
 25287  014FDA  0EF1               	movlw	241
 25288  014FDC  24E1               	addwf	fsr1l,w,c
 25289  014FDE  6ED9               	movwf	fsr2l,c
 25290  014FE0  0EFF               	movlw	255
 25291  014FE2  20E2               	addwfc	fsr1h,w,c
 25292  014FE4  6EDA               	movwf	fsr2h,c
 25293  014FE6  0E7F               	movlw	127
 25294  014FE8  16DF               	andwf	indf2,f,c
 25295  014FEA                     l8205:
 25296                           
 25297                           ;stkvar	_b @ sp[(-13)+-4]
 25298  014FEA  0EF2               	movlw	242
 25299  014FEC  24E1               	addwf	fsr1l,w,c
 25300  014FEE  6ED9               	movwf	fsr2l,c
 25301  014FF0  0EFF               	movlw	255
 25302  014FF2  20E2               	addwfc	fsr1h,w,c
 25303  014FF4  6EDA               	movwf	fsr2h,c
 25304                           
 25305                           ;stkvar	_bexp @ sp[(-13)+11]
 25306  014FF6  0EFE               	movlw	-2
 25307  014FF8  006F FF8C  F031    	movff	plusw1,btemp+11
 25308  014FFE  90D8               	bcf	status,0,c
 25309  015000  3031               	rrcf	(btemp+11)^0,w,c
 25310  015002  6EDF               	movwf	indf2,c
 25311  015004  D644               	goto	l8103
 25312  015006                     l2978:
 25313                           
 25314                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25315  015006  0EEB               	movlw	235
 25316  015008  26E1               	addwf	fsr1l,f,c
 25317  01500A  0EFF               	movlw	255
 25318  01500C  22E2               	addwfc	fsr1h,f,c
 25319  01500E  0012               	return		;funcret
 25320  015010                     __end_of___fldiv:
 25321                           	opt callstack 0
 25322                           
 25323 ;; *************** function ___flge *****************
 25324 ;; Defined at:
 25325 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25326 ;; Parameters:    Size  Location     Type
 25327 ;;  ff1             4  [STACK] unsigned char 
 25328 ;;  ff2             4  [STACK] unsigned char 
 25329 ;; Auto vars:     Size  Location     Type
 25330 ;;		None
 25331 ;; Return value:  Size  Location     Type
 25332 ;;		None               void
 25333 ;; Registers used:
 25334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25335 ;; Tracked objects:
 25336 ;;		On entry : 0/0
 25337 ;;		On exit  : 0/0
 25338 ;;		Unchanged: 0/0
 25339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;Total ram usage:        0 bytes
 25345 ;; Hardware stack levels used:    1
 25346 ;; Hardware stack levels required when called:   15
 25347 ;; This function calls:
 25348 ;;		Nothing
 25349 ;; This function is called by:
 25350 ;;		_main
 25351 ;;		_calc_ror_data
 25352 ;;		_check_day_time
 25353 ;;		_calc_bsoc
 25354 ;;		_efgtoa
 25355 ;; This function uses a reentrant model
 25356 ;;
 25357                           
 25358                           	psect	text99
 25359  018A36                     __ptext99:
 25360                           	opt callstack 0
 25361  018A36                     ___flge:
 25362                           	opt callstack 0
 25363                           
 25364                           ;stkvar	_ff1 @ sp[(0)+-4]
 25365                           
 25366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25367                           ;incstack = 0
 25368 ;; hardware stack exceeded
 25369  018A36  50E1               	movf	fsr1l,w,c
 25370  018A38  0FFC               	addlw	-4
 25371  018A3A  6ED9               	movwf	fsr2l,c
 25372  018A3C  50E2               	movf	fsr1h,w,c
 25373  018A3E  6EDA               	movwf	fsr2h,c
 25374  018A40  0EFF               	movlw	255
 25375  018A42  22DA               	addwfc	fsr2h,f,c
 25376  018A44  0E00               	movlw	0
 25377  018A46  14DE               	andwf	postinc2,w,c
 25378  018A48  6E2E               	movwf	(btemp+8)^0,c
 25379  018A4A  0E00               	movlw	0
 25380  018A4C  14DE               	andwf	postinc2,w,c
 25381  018A4E  6E2F               	movwf	(btemp+9)^0,c
 25382  018A50  0E80               	movlw	128
 25383  018A52  14DE               	andwf	postinc2,w,c
 25384  018A54  6E30               	movwf	(btemp+10)^0,c
 25385  018A56  0E7F               	movlw	127
 25386  018A58  14DE               	andwf	postinc2,w,c
 25387  018A5A  6E31               	movwf	(btemp+11)^0,c
 25388  018A5C  502E               	movf	(btemp+8)^0,w,c
 25389  018A5E  102F               	iorwf	(btemp+9)^0,w,c
 25390  018A60  1030               	iorwf	(btemp+10)^0,w,c
 25391  018A62  1031               	iorwf	(btemp+11)^0,w,c
 25392  018A64  A4D8               	btfss	status,2,c
 25393  018A66  D008               	goto	l8479
 25394                           
 25395                           ;stkvar	_ff1 @ sp[(0)+-4]
 25396  018A68  0EFC               	movlw	-4
 25397  018A6A  6AE3               	clrf	plusw1,c
 25398  018A6C  0EFD               	movlw	-3
 25399  018A6E  6AE3               	clrf	plusw1,c
 25400  018A70  0EFE               	movlw	-2
 25401  018A72  6AE3               	clrf	plusw1,c
 25402  018A74  0EFF               	movlw	-1
 25403  018A76  6AE3               	clrf	plusw1,c
 25404  018A78                     l8479:
 25405                           
 25406                           ;stkvar	_ff2 @ sp[(0)+-8]
 25407  018A78  50E1               	movf	fsr1l,w,c
 25408  018A7A  0FF8               	addlw	-8
 25409  018A7C  6ED9               	movwf	fsr2l,c
 25410  018A7E  50E2               	movf	fsr1h,w,c
 25411  018A80  6EDA               	movwf	fsr2h,c
 25412  018A82  0EFF               	movlw	255
 25413  018A84  22DA               	addwfc	fsr2h,f,c
 25414  018A86  0E00               	movlw	0
 25415  018A88  14DE               	andwf	postinc2,w,c
 25416  018A8A  6E2E               	movwf	(btemp+8)^0,c
 25417  018A8C  0E00               	movlw	0
 25418  018A8E  14DE               	andwf	postinc2,w,c
 25419  018A90  6E2F               	movwf	(btemp+9)^0,c
 25420  018A92  0E80               	movlw	128
 25421  018A94  14DE               	andwf	postinc2,w,c
 25422  018A96  6E30               	movwf	(btemp+10)^0,c
 25423  018A98  0E7F               	movlw	127
 25424  018A9A  14DE               	andwf	postinc2,w,c
 25425  018A9C  6E31               	movwf	(btemp+11)^0,c
 25426  018A9E  502E               	movf	(btemp+8)^0,w,c
 25427  018AA0  102F               	iorwf	(btemp+9)^0,w,c
 25428  018AA2  1030               	iorwf	(btemp+10)^0,w,c
 25429  018AA4  1031               	iorwf	(btemp+11)^0,w,c
 25430  018AA6  A4D8               	btfss	status,2,c
 25431  018AA8  D008               	goto	l2659
 25432                           
 25433                           ;stkvar	_ff2 @ sp[(0)+-8]
 25434  018AAA  0EF8               	movlw	-8
 25435  018AAC  6AE3               	clrf	plusw1,c
 25436  018AAE  0EF9               	movlw	-7
 25437  018AB0  6AE3               	clrf	plusw1,c
 25438  018AB2  0EFA               	movlw	-6
 25439  018AB4  6AE3               	clrf	plusw1,c
 25440  018AB6  0EFB               	movlw	-5
 25441  018AB8  6AE3               	clrf	plusw1,c
 25442  018ABA                     l2659:
 25443                           
 25444                           ;stkvar	_ff1 @ sp[(0)+-4]
 25445  018ABA  0EFF               	movlw	-1
 25446  018ABC  AEE3               	btfss	plusw1,7,c
 25447  018ABE  D024               	goto	l8485
 25448                           
 25449                           ;stkvar	_ff1 @ sp[(0)+-4]
 25450  018AC0  0E00               	movlw	0
 25451  018AC2  6E2E               	movwf	(btemp+8)^0,c
 25452  018AC4  0E00               	movlw	0
 25453  018AC6  6E2F               	movwf	(btemp+9)^0,c
 25454  018AC8  0E00               	movlw	0
 25455  018ACA  6E30               	movwf	(btemp+10)^0,c
 25456  018ACC  0E80               	movlw	128
 25457  018ACE  6E31               	movwf	(btemp+11)^0,c
 25458  018AD0  0EFC               	movlw	-4
 25459  018AD2  50E3               	movf	plusw1,w,c
 25460  018AD4  5E2E               	subwf	(btemp+8)^0,f,c
 25461  018AD6  0EFD               	movlw	-3
 25462  018AD8  50E3               	movf	plusw1,w,c
 25463  018ADA  5A2F               	subwfb	(btemp+9)^0,f,c
 25464  018ADC  0EFE               	movlw	-2
 25465  018ADE  50E3               	movf	plusw1,w,c
 25466  018AE0  5A30               	subwfb	(btemp+10)^0,f,c
 25467  018AE2  0EFF               	movlw	-1
 25468  018AE4  50E3               	movf	plusw1,w,c
 25469  018AE6  5A31               	subwfb	(btemp+11)^0,f,c
 25470                           
 25471                           ;stkvar	_ff1 @ sp[(0)+-4]
 25472  018AE8  0EFC               	movlw	-4
 25473  018AEA  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25474  018AF0  0EFD               	movlw	-3
 25475  018AF2  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25476  018AF8  0EFE               	movlw	-2
 25477  018AFA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25478  018B00  0EFF               	movlw	-1
 25479  018B02  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25480  018B08                     l8485:
 25481                           
 25482                           ;stkvar	_ff2 @ sp[(0)+-8]
 25483  018B08  0EFB               	movlw	-5
 25484  018B0A  AEE3               	btfss	plusw1,7,c
 25485  018B0C  D024               	goto	l8489
 25486                           
 25487                           ;stkvar	_ff2 @ sp[(0)+-8]
 25488  018B0E  0E00               	movlw	0
 25489  018B10  6E2E               	movwf	(btemp+8)^0,c
 25490  018B12  0E00               	movlw	0
 25491  018B14  6E2F               	movwf	(btemp+9)^0,c
 25492  018B16  0E00               	movlw	0
 25493  018B18  6E30               	movwf	(btemp+10)^0,c
 25494  018B1A  0E80               	movlw	128
 25495  018B1C  6E31               	movwf	(btemp+11)^0,c
 25496  018B1E  0EF8               	movlw	-8
 25497  018B20  50E3               	movf	plusw1,w,c
 25498  018B22  5E2E               	subwf	(btemp+8)^0,f,c
 25499  018B24  0EF9               	movlw	-7
 25500  018B26  50E3               	movf	plusw1,w,c
 25501  018B28  5A2F               	subwfb	(btemp+9)^0,f,c
 25502  018B2A  0EFA               	movlw	-6
 25503  018B2C  50E3               	movf	plusw1,w,c
 25504  018B2E  5A30               	subwfb	(btemp+10)^0,f,c
 25505  018B30  0EFB               	movlw	-5
 25506  018B32  50E3               	movf	plusw1,w,c
 25507  018B34  5A31               	subwfb	(btemp+11)^0,f,c
 25508                           
 25509                           ;stkvar	_ff2 @ sp[(0)+-8]
 25510  018B36  0EF8               	movlw	-8
 25511  018B38  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25512  018B3E  0EF9               	movlw	-7
 25513  018B40  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25514  018B46  0EFA               	movlw	-6
 25515  018B48  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25516  018B4E  0EFB               	movlw	-5
 25517  018B50  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25518  018B56                     l8489:
 25519                           
 25520                           ;stkvar	_ff1 @ sp[(0)+-4]
 25521  018B56  0EFF               	movlw	-1
 25522  018B58  7EE3               	btg	plusw1,7,c
 25523                           
 25524                           ;stkvar	_ff2 @ sp[(0)+-8]
 25525  018B5A  0EFB               	movlw	-5
 25526  018B5C  7EE3               	btg	plusw1,7,c
 25527                           
 25528                           ;stkvar	_ff2 @ sp[(0)+-8]
 25529                           ;stkvar	_ff1 @ sp[(0)+-4]
 25530  018B5E  50E1               	movf	fsr1l,w,c
 25531  018B60  0FFC               	addlw	-4
 25532  018B62  6ED9               	movwf	fsr2l,c
 25533  018B64  50E2               	movf	fsr1h,w,c
 25534  018B66  6EDA               	movwf	fsr2h,c
 25535  018B68  0EFF               	movlw	255
 25536  018B6A  22DA               	addwfc	fsr2h,f,c
 25537  018B6C  0EF8               	movlw	-8
 25538  018B6E  50E3               	movf	plusw1,w,c
 25539  018B70  5CDE               	subwf	postinc2,w,c
 25540  018B72  0EF9               	movlw	-7
 25541  018B74  50E3               	movf	plusw1,w,c
 25542  018B76  58DE               	subwfb	postinc2,w,c
 25543  018B78  0EFA               	movlw	-6
 25544  018B7A  50E3               	movf	plusw1,w,c
 25545  018B7C  58DE               	subwfb	postinc2,w,c
 25546  018B7E  0EFB               	movlw	-5
 25547  018B80  50E3               	movf	plusw1,w,c
 25548  018B82  58DE               	subwfb	postinc2,w,c
 25549  018B84  B0D8               	btfsc	status,0,c
 25550  018B86  D002               	goto	l8497
 25551  018B88  9026               	bcf	btemp& (0+255),0,c
 25552  018B8A  D001               	goto	l2666
 25553  018B8C                     l8497:
 25554  018B8C  8026               	bsf	btemp& (0+255),0,c
 25555  018B8E                     l2666:
 25556                           
 25557                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25558  018B8E  0EF8               	movlw	248
 25559  018B90  26E1               	addwf	fsr1l,f,c
 25560  018B92  0EFF               	movlw	255
 25561  018B94  22E2               	addwfc	fsr1h,f,c
 25562  018B96  0012               	return		;funcret
 25563  018B98                     __end_of___flge:
 25564                           	opt callstack 0
 25565                           
 25566 ;; *************** function _calc_model_data *****************
 25567 ;; Defined at:
 25568 ;;		line 67 in file "mbmc.c"
 25569 ;; Parameters:    Size  Location     Type
 25570 ;;		None
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;		None
 25573 ;; Return value:  Size  Location     Type
 25574 ;;                  1  [STACK] void 
 25575 ;; Registers used:
 25576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/1
 25579 ;;		On exit  : 3F/39
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25586 ;;Total ram usage:        0 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; Hardware stack levels required when called:   18
 25589 ;; This function calls:
 25590 ;;		___fladd
 25591 ;;		___flmul
 25592 ;;		___flsub
 25593 ;;		_lp_filter
 25594 ;;		_start_bsoc
 25595 ;;		_stop_bsoc
 25596 ;; This function is called by:
 25597 ;;		_main
 25598 ;; This function uses a reentrant model
 25599 ;;
 25600                           
 25601                           	psect	text100
 25602  01593C                     __ptext100:
 25603                           	opt callstack 0
 25604  01593C                     _calc_model_data:
 25605                           	opt callstack 12
 25606                           
 25607                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25608                           
 25609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25610                           ;incstack = 0
 25611  01593C  ECD4  F0DD         	call	_stop_bsoc	;wreg free
 25612                           
 25613                           ; BSR set to: 57
 25614                           ;mbmc.c: 72:  if (!V.calib) {
 25615  015940  0101               	movlb	1	; () banked
 25616  015942  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 25617  015944  A4D8               	btfss	status,2,c
 25618  015946  D219               	goto	l10869
 25619                           
 25620                           ; BSR set to: 1
 25621                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25622  015948  EE21  F2FF         	lfsr	2,_C
 25623  01594C  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25624  015952  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25625  015958  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25626  01595E  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25627                           
 25628                           ; BSR set to: 1
 25629                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25630  015964  0060  F21B  FFE6   	movff	calc_model_data@bcror,postinc1
 25631  01596A  0060  F21F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25632  015970  0060  F223  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25633  015976  0060  F227  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25634  01597C  EE21  F343         	lfsr	2,_C+68	;volatile
 25635  015980  006F FF7B FFE6     	movff	postinc2,postinc1
 25636  015986  006F FF7B FFE6     	movff	postinc2,postinc1
 25637  01598C  006F FF7B FFE6     	movff	postinc2,postinc1
 25638  015992  006F FF7B FFE6     	movff	postinc2,postinc1
 25639  015998  EC75  F0D7         	call	___flsub	;wreg free
 25640  01599C  0060  F098  F76F   	movff	btemp,_C+112	;volatile
 25641  0159A2  0060  F09C  F770   	movff	btemp+1,_C+113	;volatile
 25642  0159A8  0060  F0A0  F771   	movff	btemp+2,_C+114	;volatile
 25643  0159AE  0060  F0A4  F772   	movff	btemp+3,_C+115	;volatile
 25644                           
 25645                           ;mbmc.c: 75:   bcror = C.c_bat;
 25646  0159B4  C743  F086         	movff	_C+68,calc_model_data@bcror	;volatile
 25647  0159B8  C744  F087         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25648  0159BC  C745  F088         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25649  0159C0  C746  F089         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25650                           
 25651                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25652  0159C4  EE21  F303         	lfsr	2,_C+4	;volatile
 25653  0159C8  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25654  0159CE  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25655  0159D4  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25656  0159DA  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25657                           
 25658                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25659  0159E0  EE21  F30F         	lfsr	2,_C+16	;volatile
 25660  0159E4  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25661  0159EA  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25662  0159F0  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25663  0159F6  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25664                           
 25665                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25666  0159FC  EE21  F333         	lfsr	2,_C+52	;volatile
 25667  015A00  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25668  015A06  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25669  015A0C  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25670  015A12  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25671                           
 25672                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25673  015A18  0060  F22B  FFE6   	movff	calc_model_data@bvror,postinc1
 25674  015A1E  0060  F22F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25675  015A24  0060  F233  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25676  015A2A  0060  F237  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25677  015A30  EE21  F353         	lfsr	2,_C+84	;volatile
 25678  015A34  006F FF7B FFE6     	movff	postinc2,postinc1
 25679  015A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 25680  015A40  006F FF7B FFE6     	movff	postinc2,postinc1
 25681  015A46  006F FF7B FFE6     	movff	postinc2,postinc1
 25682  015A4C  EC75  F0D7         	call	___flsub	;wreg free
 25683  015A50  0060  F098  F76B   	movff	btemp,_C+108	;volatile
 25684  015A56  0060  F09C  F76C   	movff	btemp+1,_C+109	;volatile
 25685  015A5C  0060  F0A0  F76D   	movff	btemp+2,_C+110	;volatile
 25686  015A62  0060  F0A4  F76E   	movff	btemp+3,_C+111	;volatile
 25687                           
 25688                           ;mbmc.c: 80:   bvror = C.v_bat;
 25689  015A68  C753  F08A         	movff	_C+84,calc_model_data@bvror	;volatile
 25690  015A6C  C754  F08B         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25691  015A70  C755  F08C         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25692  015A74  C756  F08D         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25693                           
 25694                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25695  015A78  EE21  F313         	lfsr	2,_C+20	;volatile
 25696  015A7C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25697  015A82  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25698  015A88  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25699  015A8E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25700                           
 25701                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25702  015A94  EE21  F307         	lfsr	2,_C+8	;volatile
 25703  015A98  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25704  015A9E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25705  015AA4  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25706  015AAA  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25707                           
 25708                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25709  015AB0  EE21  F32F         	lfsr	2,_C+48	;volatile
 25710  015AB4  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25711  015ABA  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25712  015AC0  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25713  015AC6  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25714                           
 25715                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25716  015ACC  0E01               	movlw	1
 25717  015ACE  6EE6               	movwf	postinc1,c
 25718  015AD0  0E10               	movlw	16
 25719  015AD2  6EE6               	movwf	postinc1,c
 25720  015AD4  EE21  F2FF         	lfsr	2,_C
 25721  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 25722  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 25723  015AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 25724  015AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 25725  015AF0  EE21  F303         	lfsr	2,_C+4	;volatile
 25726  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 25727  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 25728  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 25729  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 25730  015B0C  EC75  F0D7         	call	___flsub	;wreg free
 25731  015B10  0060  F09B  FFE6   	movff	btemp,postinc1
 25732  015B16  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25733  015B1C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25734  015B22  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25735  015B28  EC7D  F0C0         	call	_lp_filter	;wreg free
 25736  015B2C  0060  F098  F73F   	movff	btemp,_C+64	;volatile
 25737  015B32  0060  F09C  F740   	movff	btemp+1,_C+65	;volatile
 25738  015B38  0060  F0A0  F741   	movff	btemp+2,_C+66	;volatile
 25739  015B3E  0060  F0A4  F742   	movff	btemp+3,_C+67	;volatile
 25740                           
 25741                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25742  015B44  0E01               	movlw	1
 25743  015B46  6EE6               	movwf	postinc1,c
 25744  015B48  0E11               	movlw	17
 25745  015B4A  6EE6               	movwf	postinc1,c
 25746  015B4C  EE21  F353         	lfsr	2,_C+84	;volatile
 25747  015B50  006F FF7B FFE6     	movff	postinc2,postinc1
 25748  015B56  006F FF7B FFE6     	movff	postinc2,postinc1
 25749  015B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 25750  015B62  006F FF7B FFE6     	movff	postinc2,postinc1
 25751  015B68  EE21  F33F         	lfsr	2,_C+64	;volatile
 25752  015B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 25753  015B72  006F FF7B FFE6     	movff	postinc2,postinc1
 25754  015B78  006F FF7B FFE6     	movff	postinc2,postinc1
 25755  015B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25756  015B84  ECA0  F099         	call	___flmul	;wreg free
 25757  015B88  0060  F09B  FFE6   	movff	btemp,postinc1
 25758  015B8E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25759  015B94  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25760  015B9A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25761  015BA0  EC7D  F0C0         	call	_lp_filter	;wreg free
 25762  015BA4  0060  F098  F773   	movff	btemp,_C+116	;volatile
 25763  015BAA  0060  F09C  F774   	movff	btemp+1,_C+117	;volatile
 25764  015BB0  0060  F0A0  F775   	movff	btemp+2,_C+118	;volatile
 25765  015BB6  0060  F0A4  F776   	movff	btemp+3,_C+119	;volatile
 25766                           
 25767                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25768  015BBC  0E01               	movlw	1
 25769  015BBE  6EE6               	movwf	postinc1,c
 25770  015BC0  0E12               	movlw	18
 25771  015BC2  6EE6               	movwf	postinc1,c
 25772  015BC4  EE21  F34F         	lfsr	2,_C+80	;volatile
 25773  015BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 25774  015BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 25775  015BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 25776  015BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 25777  015BE0  EE21  F347         	lfsr	2,_C+72	;volatile
 25778  015BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 25779  015BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 25780  015BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 25781  015BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25782  015BFC  ECA0  F099         	call	___flmul	;wreg free
 25783  015C00  0060  F09B  FFE6   	movff	btemp,postinc1
 25784  015C06  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25785  015C0C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25786  015C12  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25787  015C18  EC7D  F0C0         	call	_lp_filter	;wreg free
 25788  015C1C  0060  F098  F77B   	movff	btemp,_C+124	;volatile
 25789  015C22  0060  F09C  F77C   	movff	btemp+1,_C+125	;volatile
 25790  015C28  0060  F0A0  F77D   	movff	btemp+2,_C+126	;volatile
 25791  015C2E  0060  F0A4  F77E   	movff	btemp+3,_C+127	;volatile
 25792                           
 25793                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25794  015C34  0E01               	movlw	1
 25795  015C36  6EE6               	movwf	postinc1,c
 25796  015C38  0E13               	movlw	19
 25797  015C3A  6EE6               	movwf	postinc1,c
 25798  015C3C  0E00               	movlw	0
 25799  015C3E  6EE6               	movwf	postinc1,c
 25800  015C40  0E00               	movlw	0
 25801  015C42  6EE6               	movwf	postinc1,c
 25802  015C44  0E60               	movlw	96
 25803  015C46  6EE6               	movwf	postinc1,c
 25804  015C48  0EC1               	movlw	193
 25805  015C4A  6EE6               	movwf	postinc1,c
 25806  015C4C  EE21  F363         	lfsr	2,_C+100	;volatile
 25807  015C50  006F FF7B FFE6     	movff	postinc2,postinc1
 25808  015C56  006F FF7B FFE6     	movff	postinc2,postinc1
 25809  015C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 25810  015C62  006F FF7B FFE6     	movff	postinc2,postinc1
 25811  015C68  EE21  F33F         	lfsr	2,_C+64	;volatile
 25812  015C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 25813  015C72  006F FF7B FFE6     	movff	postinc2,postinc1
 25814  015C78  006F FF7B FFE6     	movff	postinc2,postinc1
 25815  015C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25816  015C84  ECA0  F099         	call	___flmul	;wreg free
 25817  015C88  0060  F09B  FFE6   	movff	btemp,postinc1
 25818  015C8E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25819  015C94  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25820  015C9A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25821  015CA0  ECB5  F09D         	call	___fladd	;wreg free
 25822  015CA4  0060  F09B  FFE6   	movff	btemp,postinc1
 25823  015CAA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25824  015CB0  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25825  015CB6  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25826  015CBC  EC7D  F0C0         	call	_lp_filter	;wreg free
 25827  015CC0  0060  F098  F777   	movff	btemp,_C+120	;volatile
 25828  015CC6  0060  F09C  F778   	movff	btemp+1,_C+121	;volatile
 25829  015CCC  0060  F0A0  F779   	movff	btemp+2,_C+122	;volatile
 25830  015CD2  0060  F0A4  F77A   	movff	btemp+3,_C+123	;volatile
 25831                           
 25832                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25833  015CD8  0E01               	movlw	1
 25834  015CDA  6EE6               	movwf	postinc1,c
 25835  015CDC  0E14               	movlw	20
 25836  015CDE  6EE6               	movwf	postinc1,c
 25837  015CE0  EE21  F353         	lfsr	2,_C+84	;volatile
 25838  015CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 25839  015CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 25840  015CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 25841  015CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25842  015CFC  EE21  F343         	lfsr	2,_C+68	;volatile
 25843  015D00  006F FF7B FFE6     	movff	postinc2,postinc1
 25844  015D06  006F FF7B FFE6     	movff	postinc2,postinc1
 25845  015D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 25846  015D12  006F FF7B FFE6     	movff	postinc2,postinc1
 25847  015D18  ECA0  F099         	call	___flmul	;wreg free
 25848  015D1C  0060  F09B  FFE6   	movff	btemp,postinc1
 25849  015D22  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25850  015D28  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25851  015D2E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25852  015D34  EC7D  F0C0         	call	_lp_filter	;wreg free
 25853  015D38  0060  F098  F77F   	movff	btemp,_C+128	;volatile
 25854  015D3E  0060  F09C  F780   	movff	btemp+1,_C+129	;volatile
 25855  015D44  0060  F0A0  F781   	movff	btemp+2,_C+130	;volatile
 25856  015D4A  0060  F0A4  F782   	movff	btemp+3,_C+131	;volatile
 25857                           
 25858                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 25859  015D50  EE21  F377         	lfsr	2,_C+120	;volatile
 25860  015D54  0E03               	movlw	3
 25861  015D56  AEDB               	btfss	plusw2,7,c
 25862  015D58  D010               	goto	l10869
 25863                           
 25864                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 25865  015D5A  0E17               	movlw	23
 25866  015D5C  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 25867  015D62  0EB7               	movlw	183
 25868  015D64  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 25869  015D6A  0ED1               	movlw	209
 25870  015D6C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 25871  015D72  0E38               	movlw	56
 25872  015D74  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 25873  015D7A                     l10869:
 25874                           
 25875                           ;mbmc.c: 95:  start_bsoc();
 25876  015D7A  EC45  F0DC         	call	_start_bsoc	;wreg free
 25877                           
 25878                           ; BSR set to: 57
 25879                           ;mbmc.c: 96:  C.update = 1;
 25880  015D7E  0E01               	movlw	1
 25881  015D80  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 25882                           
 25883                           ; BSR set to: 57
 25884                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25885  015D86  0012               	return		;funcret
 25886  015D88                     __end_of_calc_model_data:
 25887                           	opt callstack 0
 25888                           
 25889 ;; *************** function _stop_bsoc *****************
 25890 ;; Defined at:
 25891 ;;		line 114 in file "bsoc.c"
 25892 ;; Parameters:    Size  Location     Type
 25893 ;;		None
 25894 ;; Auto vars:     Size  Location     Type
 25895 ;;		None
 25896 ;; Return value:  Size  Location     Type
 25897 ;;                  1  [STACK] void 
 25898 ;; Registers used:
 25899 ;;		None
 25900 ;; Tracked objects:
 25901 ;;		On entry : 0/1
 25902 ;;		On exit  : 3F/39
 25903 ;;		Unchanged: 0/0
 25904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25909 ;;Total ram usage:        0 bytes
 25910 ;; Hardware stack levels used:    1
 25911 ;; Hardware stack levels required when called:   15
 25912 ;; This function calls:
 25913 ;;		Nothing
 25914 ;; This function is called by:
 25915 ;;		_calc_model_data
 25916 ;; This function uses a reentrant model
 25917 ;;
 25918                           
 25919                           	psect	text101
 25920  01BBA8                     __ptext101:
 25921                           	opt callstack 0
 25922  01BBA8                     _stop_bsoc:
 25923                           	opt callstack 14
 25924                           
 25925                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 25926                           
 25927                           ; BSR set to: 57
 25928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25929                           ;incstack = 0
 25930  01BBA8  0139               	movlb	57	; () banked
 25931  01BBAA  9D96               	bcf	150,6,b	;volatile
 25932                           
 25933                           ; BSR set to: 57
 25934                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25935  01BBAC  0012               	return		;funcret
 25936  01BBAE                     __end_of_stop_bsoc:
 25937                           	opt callstack 0
 25938                           
 25939 ;; *************** function _start_bsoc *****************
 25940 ;; Defined at:
 25941 ;;		line 105 in file "bsoc.c"
 25942 ;; Parameters:    Size  Location     Type
 25943 ;;		None
 25944 ;; Auto vars:     Size  Location     Type
 25945 ;;		None
 25946 ;; Return value:  Size  Location     Type
 25947 ;;                  1  [STACK] void 
 25948 ;; Registers used:
 25949 ;;		wreg, status,2, status,0, btemp+11
 25950 ;; Tracked objects:
 25951 ;;		On entry : 0/1
 25952 ;;		On exit  : 3F/39
 25953 ;;		Unchanged: 0/0
 25954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25959 ;;Total ram usage:        0 bytes
 25960 ;; Hardware stack levels used:    1
 25961 ;; Hardware stack levels required when called:   15
 25962 ;; This function calls:
 25963 ;;		Nothing
 25964 ;; This function is called by:
 25965 ;;		_calc_model_data
 25966 ;; This function uses a reentrant model
 25967 ;;
 25968                           
 25969                           	psect	text102
 25970  01B88A                     __ptext102:
 25971                           	opt callstack 0
 25972  01B88A                     _start_bsoc:
 25973                           	opt callstack 14
 25974                           
 25975                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 25976                           
 25977                           ; BSR set to: 57
 25978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25979                           ;incstack = 0
 25980  01B88A  0139               	movlb	57	; () banked
 25981  01B88C  8D96               	bsf	150,6,b	;volatile
 25982                           
 25983                           ; BSR set to: 57
 25984  01B88E  A4BE               	btfss	190,2,c	;volatile
 25985  01B890  D002               	goto	u9580
 25986  01B892  0E01               	movlw	1
 25987  01B894  D001               	goto	u9586
 25988  01B896                     u9580:
 25989  01B896  0E00               	movlw	0
 25990  01B898                     u9586:
 25991  01B898  0AFF               	xorlw	255
 25992  01B89A  6E31               	movwf	(btemp+11)^0,c
 25993  01B89C  4631               	rlncf	(btemp+11)^0,f,c
 25994  01B89E  4631               	rlncf	(btemp+11)^0,f,c
 25995  01B8A0  50BE               	movf	190,w,c	;volatile
 25996  01B8A2  1831               	xorwf	(btemp+11)^0,w,c
 25997  01B8A4  0BFB               	andlw	-5
 25998  01B8A6  1831               	xorwf	(btemp+11)^0,w,c
 25999  01B8A8  6EBE               	movwf	190,c	;volatile
 26000                           
 26001                           ; BSR set to: 57
 26002                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26003  01B8AA  0012               	return		;funcret
 26004  01B8AC                     __end_of_start_bsoc:
 26005                           	opt callstack 0
 26006                           
 26007 ;; *************** function _lp_filter *****************
 26008 ;; Defined at:
 26009 ;;		line 29 in file "mbmc.c"
 26010 ;; Parameters:    Size  Location     Type
 26011 ;;  new             4  [STACK] const float 
 26012 ;;  bn              1  [STACK] const unsigned char 
 26013 ;;  slow            1  [STACK] const char 
 26014 ;; Auto vars:     Size  Location     Type
 26015 ;;  lp_speed        4  [STACK] float 
 26016 ;; Return value:  Size  Location     Type
 26017 ;;                  4  [STACK] float 
 26018 ;; Registers used:
 26019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26020 ;; Tracked objects:
 26021 ;;		On entry : 0/1
 26022 ;;		On exit  : 0/0
 26023 ;;		Unchanged: 0/0
 26024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26029 ;;Total ram usage:        0 bytes
 26030 ;; Hardware stack levels used:    1
 26031 ;; Hardware stack levels required when called:   17
 26032 ;; This function calls:
 26033 ;;		___fladd
 26034 ;;		___flmul
 26035 ;;		___flsub
 26036 ;; This function is called by:
 26037 ;;		_main
 26038 ;;		_convert_adc_data
 26039 ;;		_calc_model_data
 26040 ;; This function uses a reentrant model
 26041 ;;
 26042                           
 26043                           	psect	text103
 26044  0180FA                     __ptext103:
 26045                           	opt callstack 0
 26046  0180FA                     _lp_filter:
 26047                           	opt callstack 0
 26048                           
 26049                           ; BSR set to: 57
 26050                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26051  0180FA  52E6               	movf	postinc1,f,c
 26052  0180FC  52E6               	movf	postinc1,f,c
 26053  0180FE  52E6               	movf	postinc1,f,c
 26054  018100  52E6               	movf	postinc1,f,c
 26055                           
 26056                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26057                           ;stkvar	_bn @ sp[(-4)+-5]
 26058                           
 26059                           ;incstack = 0
 26060  018102  0EF7               	movlw	-9
 26061  018104  006F FF8C  F026    	movff	plusw1,btemp
 26062  01810A  0E14               	movlw	20
 26063  01810C  6426               	cpfsgt	btemp^0,c
 26064  01810E  D011               	goto	l10291
 26065  018110                     u9490:
 26066                           
 26067                           ;mbmc.c: 35:   return new;
 26068                           ;stkvar	_new @ sp[(-4)+-4]
 26069  018110  0EF8               	movlw	-8
 26070  018112  006F FF8C  F026    	movff	plusw1,btemp
 26071  018118  0EF9               	movlw	-7
 26072  01811A  006F FF8C  F027    	movff	plusw1,btemp+1
 26073  018120  0EFA               	movlw	-6
 26074  018122  006F FF8C  F028    	movff	plusw1,btemp+2
 26075  018128  0EFB               	movlw	-5
 26076  01812A  006F FF8C  F029    	movff	plusw1,btemp+3
 26077  018130  D0BD               	goto	l1835
 26078  018132                     l10291:
 26079                           
 26080                           ;mbmc.c: 37:  if (slow == (-1)) {
 26081                           ;stkvar	_slow @ sp[(-4)+-6]
 26082  018132  0EF6               	movlw	-10
 26083  018134  28E3               	incf	plusw1,w,c
 26084  018136  A4D8               	btfss	status,2,c
 26085  018138  D012               	goto	l10299
 26086                           
 26087                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26088                           ;stkvar	_bn @ sp[(-4)+-5]
 26089  01813A  0EF7               	movlw	-9
 26090  01813C  50E3               	movf	plusw1,w,c
 26091  01813E  0D04               	mullw	4
 26092  018140  0E00               	movlw	low lp_filter@smooth
 26093  018142  24F3               	addwf	243,w,c
 26094  018144  6ED9               	movwf	fsr2l,c
 26095  018146  0E02               	movlw	high lp_filter@smooth
 26096  018148  20F4               	addwfc	prodh,w,c
 26097  01814A  6EDA               	movwf	fsr2h,c
 26098  01814C  0E00               	movlw	0
 26099  01814E  6EDE               	movwf	postinc2,c
 26100  018150  0E00               	movlw	0
 26101  018152  6EDE               	movwf	postinc2,c
 26102  018154  0E00               	movlw	0
 26103  018156  6EDE               	movwf	postinc2,c
 26104  018158  0E00               	movlw	0
 26105  01815A  6EDD               	movwf	postdec2,c
 26106  01815C  D7D9               	goto	u9490
 26107  01815E                     l10299:
 26108                           
 26109                           ;mbmc.c: 42:  if (slow) {
 26110                           ;stkvar	_slow @ sp[(-4)+-6]
 26111  01815E  0EF6               	movlw	-10
 26112  018160  50E3               	movf	plusw1,w,c
 26113  018162  B4D8               	btfsc	status,2,c
 26114  018164  D006               	goto	l10303
 26115                           
 26116                           ;mbmc.c: 43:   lp_speed = 0.033;
 26117  018166  0E02               	movlw	2
 26118  018168  6E2E               	movwf	(btemp+8)^0,c
 26119  01816A  0E2B               	movlw	43
 26120  01816C  6E2F               	movwf	(btemp+9)^0,c
 26121  01816E  0E07               	movlw	7
 26122  018170  D005               	goto	L31
 26123  018172                     l10303:
 26124                           
 26125                           ;mbmc.c: 45:   lp_speed = 0.066;
 26126  018172  0E02               	movlw	2
 26127  018174  6E2E               	movwf	(btemp+8)^0,c
 26128  018176  0E2B               	movlw	43
 26129  018178  6E2F               	movwf	(btemp+9)^0,c
 26130  01817A  0E87               	movlw	135
 26131  01817C                     L31:
 26132  01817C  6E30               	movwf	(btemp+10)^0,c
 26133  01817E  0E3D               	movlw	61
 26134  018180  6E31               	movwf	(btemp+11)^0,c
 26135                           
 26136                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26137  018182  0EFC               	movlw	-4
 26138  018184  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26139  01818A  0EFD               	movlw	-3
 26140  01818C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26141  018192  0EFE               	movlw	-2
 26142  018194  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26143  01819A  0EFF               	movlw	-1
 26144  01819C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26145                           
 26146                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26147                           ;stkvar	_bn @ sp[(-4)+-5]
 26148  0181A2  0EF7               	movlw	-9
 26149  0181A4  50E3               	movf	plusw1,w,c
 26150  0181A6  0D04               	mullw	4
 26151  0181A8  0E00               	movlw	low lp_filter@smooth
 26152  0181AA  24F3               	addwf	243,w,c
 26153  0181AC  6ED9               	movwf	fsr2l,c
 26154  0181AE  0E02               	movlw	high lp_filter@smooth
 26155  0181B0  20F4               	addwfc	prodh,w,c
 26156  0181B2  6EDA               	movwf	fsr2h,c
 26157  0181B4  006F FF7B FFE6     	movff	postinc2,postinc1
 26158  0181BA  006F FF7B FFE6     	movff	postinc2,postinc1
 26159  0181C0  006F FF7B FFE6     	movff	postinc2,postinc1
 26160  0181C6  006F FF7B FFE6     	movff	postinc2,postinc1
 26161                           
 26162                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26163  0181CC  0EF8               	movlw	-8
 26164  0181CE  006F FF8F FFE6     	movff	plusw1,postinc1
 26165  0181D4  006F FF8F FFE6     	movff	plusw1,postinc1
 26166  0181DA  006F FF8F FFE6     	movff	plusw1,postinc1
 26167  0181E0  006F FF8F FFE6     	movff	plusw1,postinc1
 26168                           
 26169                           ;stkvar	_bn @ sp[(-12)+-5]
 26170  0181E6  0EEF               	movlw	-17
 26171  0181E8  50E3               	movf	plusw1,w,c
 26172  0181EA  0D04               	mullw	4
 26173  0181EC  0E00               	movlw	low lp_filter@smooth
 26174  0181EE  24F3               	addwf	243,w,c
 26175  0181F0  6ED9               	movwf	fsr2l,c
 26176  0181F2  0E02               	movlw	high lp_filter@smooth
 26177  0181F4  20F4               	addwfc	prodh,w,c
 26178  0181F6  6EDA               	movwf	fsr2h,c
 26179  0181F8  006F FF7B FFE6     	movff	postinc2,postinc1
 26180  0181FE  006F FF7B FFE6     	movff	postinc2,postinc1
 26181  018204  006F FF7B FFE6     	movff	postinc2,postinc1
 26182  01820A  006F FF7B FFE6     	movff	postinc2,postinc1
 26183                           
 26184                           ;stkvar	_new @ sp[(-16)+-4]
 26185  018210  0EEC               	movlw	-20
 26186  018212  006F FF8F FFE6     	movff	plusw1,postinc1
 26187  018218  006F FF8F FFE6     	movff	plusw1,postinc1
 26188  01821E  006F FF8F FFE6     	movff	plusw1,postinc1
 26189  018224  006F FF8F FFE6     	movff	plusw1,postinc1
 26190  01822A  EC75  F0D7         	call	___flsub	;wreg free
 26191  01822E  0060  F09B  FFE6   	movff	btemp,postinc1
 26192  018234  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26193  01823A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26194  018240  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26195  018246  ECA0  F099         	call	___flmul	;wreg free
 26196  01824A  0060  F09B  FFE6   	movff	btemp,postinc1
 26197  018250  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26198  018256  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26199  01825C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26200  018262  ECB5  F09D         	call	___fladd	;wreg free
 26201                           
 26202                           ;stkvar	_bn @ sp[(-4)+-5]
 26203  018266  0EF7               	movlw	-9
 26204  018268  50E3               	movf	plusw1,w,c
 26205  01826A  0D04               	mullw	4
 26206  01826C  0E00               	movlw	low lp_filter@smooth
 26207  01826E  24F3               	addwf	243,w,c
 26208  018270  6ED9               	movwf	fsr2l,c
 26209  018272  0E02               	movlw	high lp_filter@smooth
 26210  018274  20F4               	addwfc	prodh,w,c
 26211  018276  6EDA               	movwf	fsr2h,c
 26212  018278  0060  F09B  FFDE   	movff	btemp,postinc2
 26213  01827E  0060  F09F  FFDE   	movff	btemp+1,postinc2
 26214  018284  0060  F0A3  FFDE   	movff	btemp+2,postinc2
 26215  01828A  0060  F0A7  FFDD   	movff	btemp+3,postdec2
 26216  018290  52DD               	movf	postdec2,f,c
 26217  018292  52DD               	movf	postdec2,f,c
 26218  018294  006F FF78  F026    	movff	postinc2,btemp
 26219  01829A  006F FF78  F027    	movff	postinc2,btemp+1
 26220  0182A0  006F FF78  F028    	movff	postinc2,btemp+2
 26221  0182A6  006F FF78  F029    	movff	postinc2,btemp+3
 26222  0182AC                     l1835:
 26223                           
 26224                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26225  0182AC  0EF6               	movlw	246
 26226  0182AE  26E1               	addwf	fsr1l,f,c
 26227  0182B0  0EFF               	movlw	255
 26228  0182B2  22E2               	addwfc	fsr1h,f,c
 26229  0182B4  0012               	return		;funcret
 26230  0182B6                     __end_of_lp_filter:
 26231                           	opt callstack 0
 26232                           
 26233 ;; *************** function ___flsub *****************
 26234 ;; Defined at:
 26235 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26236 ;; Parameters:    Size  Location     Type
 26237 ;;  b               4  [STACK] float 
 26238 ;;  a               4  [STACK] float 
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;		None
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  4  [STACK] float 
 26243 ;; Registers used:
 26244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26245 ;; Tracked objects:
 26246 ;;		On entry : 0/0
 26247 ;;		On exit  : 0/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;Total ram usage:        0 bytes
 26255 ;; Hardware stack levels used:    1
 26256 ;; Hardware stack levels required when called:   16
 26257 ;; This function calls:
 26258 ;;		___fladd
 26259 ;; This function is called by:
 26260 ;;		_conv_raw_result
 26261 ;;		_lp_filter
 26262 ;;		_calc_model_data
 26263 ;;		_calc_ror_data
 26264 ;;		_esr_check
 26265 ;;		_efgtoa
 26266 ;; This function uses a reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text104
 26270  01AEEA                     __ptext104:
 26271                           	opt callstack 0
 26272  01AEEA                     ___flsub:
 26273                           	opt callstack 0
 26274                           
 26275                           ;stkvar	_a @ sp[(0)+-8]
 26276                           
 26277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26278                           ;incstack = 0
 26279 ;; hardware stack exceeded
 26280  01AEEA  0EFB               	movlw	-5
 26281  01AEEC  7EE3               	btg	plusw1,7,c
 26282                           
 26283                           ;stkvar	_a @ sp[(0)+-8]
 26284  01AEEE  0EF8               	movlw	-8
 26285  01AEF0  006F FF8F FFE6     	movff	plusw1,postinc1
 26286  01AEF6  006F FF8F FFE6     	movff	plusw1,postinc1
 26287  01AEFC  006F FF8F FFE6     	movff	plusw1,postinc1
 26288  01AF02  006F FF8F FFE6     	movff	plusw1,postinc1
 26289                           
 26290                           ;stkvar	_b @ sp[(-4)+-4]
 26291  01AF08  0EF8               	movlw	-8
 26292  01AF0A  006F FF8F FFE6     	movff	plusw1,postinc1
 26293  01AF10  006F FF8F FFE6     	movff	plusw1,postinc1
 26294  01AF16  006F FF8F FFE6     	movff	plusw1,postinc1
 26295  01AF1C  006F FF8F FFE6     	movff	plusw1,postinc1
 26296  01AF22  ECB5  F09D         	call	___fladd	;wreg free
 26297                           
 26298                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26299  01AF26  0EF8               	movlw	248
 26300  01AF28  26E1               	addwf	fsr1l,f,c
 26301  01AF2A  0EFF               	movlw	255
 26302  01AF2C  22E2               	addwfc	fsr1h,f,c
 26303  01AF2E  0012               	return		;funcret
 26304  01AF30                     __end_of___flsub:
 26305                           	opt callstack 0
 26306                           
 26307 ;; *************** function ___fladd *****************
 26308 ;; Defined at:
 26309 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26310 ;; Parameters:    Size  Location     Type
 26311 ;;  b               4  [STACK] float 
 26312 ;;  a               4  [STACK] float 
 26313 ;; Auto vars:     Size  Location     Type
 26314 ;;  grs             1  [STACK] unsigned char 
 26315 ;;  bexp            1  [STACK] unsigned char 
 26316 ;;  aexp            1  [STACK] unsigned char 
 26317 ;;  signs           1  [STACK] unsigned char 
 26318 ;; Return value:  Size  Location     Type
 26319 ;;                  4  [STACK] unsigned char 
 26320 ;; Registers used:
 26321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26331 ;;Total ram usage:        0 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; Hardware stack levels required when called:   15
 26334 ;; This function calls:
 26335 ;;		Nothing
 26336 ;; This function is called by:
 26337 ;;		_main
 26338 ;;		_lp_filter
 26339 ;;		_calc_model_data
 26340 ;;		_efgtoa
 26341 ;;		___asfladd
 26342 ;;		___flsub
 26343 ;; This function uses a reentrant model
 26344 ;;
 26345                           
 26346                           	psect	text105
 26347  013B6A                     __ptext105:
 26348                           	opt callstack 0
 26349  013B6A                     ___fladd:
 26350                           	opt callstack 0
 26351                           
 26352                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26353  013B6A  52E6               	movf	postinc1,f,c
 26354  013B6C  52E6               	movf	postinc1,f,c
 26355  013B6E  52E6               	movf	postinc1,f,c
 26356  013B70  52E6               	movf	postinc1,f,c
 26357                           
 26358                           ;stkvar	_b @ sp[(-4)+-4]
 26359                           
 26360                           ;incstack = 0
 26361 ;; hardware stack exceeded
 26362  013B72  0EFB               	movlw	251
 26363  013B74  24E1               	addwf	fsr1l,w,c
 26364  013B76  6ED9               	movwf	fsr2l,c
 26365  013B78  0EFF               	movlw	255
 26366  013B7A  20E2               	addwfc	fsr1h,w,c
 26367  013B7C  6EDA               	movwf	fsr2h,c
 26368  013B7E  50DF               	movf	indf2,w,c
 26369  013B80  6E31               	movwf	(btemp+11)^0,c
 26370  013B82  0E80               	movlw	128
 26371  013B84  1631               	andwf	(btemp+11)^0,f,c
 26372                           
 26373                           ;stkvar	_signs @ sp[(-4)+3]
 26374  013B86  0EFF               	movlw	-1
 26375  013B88  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26376                           
 26377                           ;stkvar	_b @ sp[(-4)+-4]
 26378  013B8E  0EFB               	movlw	251
 26379  013B90  24E1               	addwf	fsr1l,w,c
 26380  013B92  6ED9               	movwf	fsr2l,c
 26381  013B94  0EFF               	movlw	255
 26382  013B96  20E2               	addwfc	fsr1h,w,c
 26383  013B98  6EDA               	movwf	fsr2h,c
 26384  013B9A  50DF               	movf	indf2,w,c
 26385  013B9C  6E31               	movwf	(btemp+11)^0,c
 26386  013B9E  90D8               	bcf	status,0,c
 26387  013BA0  3431               	rlcf	(btemp+11)^0,w,c
 26388  013BA2  6E30               	movwf	(btemp+10)^0,c
 26389                           
 26390                           ;stkvar	_bexp @ sp[(-4)+1]
 26391  013BA4  0EFD               	movlw	-3
 26392  013BA6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26393                           
 26394                           ;stkvar	_b @ sp[(-4)+-4]
 26395  013BAC  0EFA               	movlw	250
 26396  013BAE  24E1               	addwf	fsr1l,w,c
 26397  013BB0  6ED9               	movwf	fsr2l,c
 26398  013BB2  0EFF               	movlw	255
 26399  013BB4  20E2               	addwfc	fsr1h,w,c
 26400  013BB6  6EDA               	movwf	fsr2h,c
 26401  013BB8  AEDF               	btfss	indf2,7,c
 26402  013BBA  D002               	goto	l7629
 26403                           
 26404                           ;stkvar	_bexp @ sp[(-4)+1]
 26405  013BBC  0EFD               	movlw	-3
 26406  013BBE  80E3               	bsf	plusw1,0,c
 26407  013BC0                     l7629:
 26408                           
 26409                           ;stkvar	_bexp @ sp[(-4)+1]
 26410  013BC0  0EFD               	movlw	-3
 26411  013BC2  50E3               	movf	plusw1,w,c
 26412  013BC4  B4D8               	btfsc	status,2,c
 26413  013BC6  D027               	goto	l7639
 26414                           
 26415                           ;stkvar	_bexp @ sp[(-4)+1]
 26416  013BC8  0EFD               	movlw	-3
 26417  013BCA  28E3               	incf	plusw1,w,c
 26418  013BCC  A4D8               	btfss	status,2,c
 26419  013BCE  D018               	goto	l7635
 26420  013BD0  0E00               	movlw	0
 26421  013BD2  6E2E               	movwf	(btemp+8)^0,c
 26422  013BD4  0E00               	movlw	0
 26423  013BD6  6E2F               	movwf	(btemp+9)^0,c
 26424  013BD8  0E00               	movlw	0
 26425  013BDA  6E30               	movwf	(btemp+10)^0,c
 26426  013BDC  0E00               	movlw	0
 26427  013BDE  6E31               	movwf	(btemp+11)^0,c
 26428                           
 26429                           ;stkvar	_b @ sp[(-4)+-4]
 26430  013BE0  0EF8               	movlw	-8
 26431  013BE2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26432  013BE8  0EF9               	movlw	-7
 26433  013BEA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26434  013BF0  0EFA               	movlw	-6
 26435  013BF2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26436  013BF8  0EFB               	movlw	-5
 26437  013BFA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26438  013C00                     l7635:
 26439                           
 26440                           ;stkvar	_b @ sp[(-4)+-4]
 26441  013C00  0EFA               	movlw	-6
 26442  013C02  8EE3               	bsf	plusw1,7,c
 26443                           
 26444                           ;stkvar	_b @ sp[(-4)+-4]
 26445  013C04  0EFB               	movlw	251
 26446  013C06  24E1               	addwf	fsr1l,w,c
 26447  013C08  6ED9               	movwf	fsr2l,c
 26448  013C0A  0EFF               	movlw	255
 26449  013C0C  20E2               	addwfc	fsr1h,w,c
 26450  013C0E  6EDA               	movwf	fsr2h,c
 26451  013C10  0E00               	movlw	0
 26452  013C12  6EDF               	movwf	indf2,c
 26453  013C14  D018               	goto	l7641
 26454  013C16                     l7639:
 26455  013C16  0E00               	movlw	0
 26456  013C18  6E2E               	movwf	(btemp+8)^0,c
 26457  013C1A  0E00               	movlw	0
 26458  013C1C  6E2F               	movwf	(btemp+9)^0,c
 26459  013C1E  0E00               	movlw	0
 26460  013C20  6E30               	movwf	(btemp+10)^0,c
 26461  013C22  0E00               	movlw	0
 26462  013C24  6E31               	movwf	(btemp+11)^0,c
 26463                           
 26464                           ;stkvar	_b @ sp[(-4)+-4]
 26465  013C26  0EF8               	movlw	-8
 26466  013C28  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26467  013C2E  0EF9               	movlw	-7
 26468  013C30  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26469  013C36  0EFA               	movlw	-6
 26470  013C38  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26471  013C3E  0EFB               	movlw	-5
 26472  013C40  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26473  013C46                     l7641:
 26474                           
 26475                           ;stkvar	_a @ sp[(-4)+-8]
 26476  013C46  0EF7               	movlw	247
 26477  013C48  24E1               	addwf	fsr1l,w,c
 26478  013C4A  6ED9               	movwf	fsr2l,c
 26479  013C4C  0EFF               	movlw	255
 26480  013C4E  20E2               	addwfc	fsr1h,w,c
 26481  013C50  6EDA               	movwf	fsr2h,c
 26482  013C52  50DF               	movf	indf2,w,c
 26483  013C54  6E31               	movwf	(btemp+11)^0,c
 26484  013C56  0E80               	movlw	128
 26485  013C58  1631               	andwf	(btemp+11)^0,f,c
 26486                           
 26487                           ;stkvar	_aexp @ sp[(-4)+2]
 26488  013C5A  0EFE               	movlw	-2
 26489  013C5C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26490                           
 26491                           ;stkvar	_signs @ sp[(-4)+3]
 26492                           ;stkvar	_aexp @ sp[(-4)+2]
 26493  013C62  50E1               	movf	fsr1l,w,c
 26494  013C64  0FFE               	addlw	-2
 26495  013C66  6ED9               	movwf	fsr2l,c
 26496  013C68  50E2               	movf	fsr1h,w,c
 26497  013C6A  6EDA               	movwf	fsr2h,c
 26498  013C6C  0EFF               	movlw	255
 26499  013C6E  22DA               	addwfc	fsr2h,f,c
 26500  013C70  0EFF               	movlw	-1
 26501  013C72  50E3               	movf	plusw1,w,c
 26502  013C74  18DE               	xorwf	postinc2,w,c
 26503  013C76  B4D8               	btfsc	status,2,c
 26504  013C78  D002               	goto	l7647
 26505                           
 26506                           ;stkvar	_signs @ sp[(-4)+3]
 26507  013C7A  0EFF               	movlw	-1
 26508  013C7C  8CE3               	bsf	plusw1,6,c
 26509  013C7E                     l7647:
 26510                           
 26511                           ;stkvar	_a @ sp[(-4)+-8]
 26512  013C7E  0EF7               	movlw	247
 26513  013C80  24E1               	addwf	fsr1l,w,c
 26514  013C82  6ED9               	movwf	fsr2l,c
 26515  013C84  0EFF               	movlw	255
 26516  013C86  20E2               	addwfc	fsr1h,w,c
 26517  013C88  6EDA               	movwf	fsr2h,c
 26518  013C8A  50DF               	movf	indf2,w,c
 26519  013C8C  6E31               	movwf	(btemp+11)^0,c
 26520  013C8E  90D8               	bcf	status,0,c
 26521  013C90  3431               	rlcf	(btemp+11)^0,w,c
 26522  013C92  6E30               	movwf	(btemp+10)^0,c
 26523                           
 26524                           ;stkvar	_aexp @ sp[(-4)+2]
 26525  013C94  0EFE               	movlw	-2
 26526  013C96  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26527                           
 26528                           ;stkvar	_a @ sp[(-4)+-8]
 26529  013C9C  0EF6               	movlw	246
 26530  013C9E  24E1               	addwf	fsr1l,w,c
 26531  013CA0  6ED9               	movwf	fsr2l,c
 26532  013CA2  0EFF               	movlw	255
 26533  013CA4  20E2               	addwfc	fsr1h,w,c
 26534  013CA6  6EDA               	movwf	fsr2h,c
 26535  013CA8  AEDF               	btfss	indf2,7,c
 26536  013CAA  D002               	goto	l7653
 26537                           
 26538                           ;stkvar	_aexp @ sp[(-4)+2]
 26539  013CAC  0EFE               	movlw	-2
 26540  013CAE  80E3               	bsf	plusw1,0,c
 26541  013CB0                     l7653:
 26542                           
 26543                           ;stkvar	_aexp @ sp[(-4)+2]
 26544  013CB0  0EFE               	movlw	-2
 26545  013CB2  50E3               	movf	plusw1,w,c
 26546  013CB4  B4D8               	btfsc	status,2,c
 26547  013CB6  D027               	goto	l7663
 26548                           
 26549                           ;stkvar	_aexp @ sp[(-4)+2]
 26550  013CB8  0EFE               	movlw	-2
 26551  013CBA  28E3               	incf	plusw1,w,c
 26552  013CBC  A4D8               	btfss	status,2,c
 26553  013CBE  D018               	goto	l7659
 26554  013CC0  0E00               	movlw	0
 26555  013CC2  6E2E               	movwf	(btemp+8)^0,c
 26556  013CC4  0E00               	movlw	0
 26557  013CC6  6E2F               	movwf	(btemp+9)^0,c
 26558  013CC8  0E00               	movlw	0
 26559  013CCA  6E30               	movwf	(btemp+10)^0,c
 26560  013CCC  0E00               	movlw	0
 26561  013CCE  6E31               	movwf	(btemp+11)^0,c
 26562                           
 26563                           ;stkvar	_a @ sp[(-4)+-8]
 26564  013CD0  0EF4               	movlw	-12
 26565  013CD2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26566  013CD8  0EF5               	movlw	-11
 26567  013CDA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26568  013CE0  0EF6               	movlw	-10
 26569  013CE2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26570  013CE8  0EF7               	movlw	-9
 26571  013CEA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26572  013CF0                     l7659:
 26573                           
 26574                           ;stkvar	_a @ sp[(-4)+-8]
 26575  013CF0  0EF6               	movlw	-10
 26576  013CF2  8EE3               	bsf	plusw1,7,c
 26577                           
 26578                           ;stkvar	_a @ sp[(-4)+-8]
 26579  013CF4  0EF7               	movlw	247
 26580  013CF6  24E1               	addwf	fsr1l,w,c
 26581  013CF8  6ED9               	movwf	fsr2l,c
 26582  013CFA  0EFF               	movlw	255
 26583  013CFC  20E2               	addwfc	fsr1h,w,c
 26584  013CFE  6EDA               	movwf	fsr2h,c
 26585  013D00  0E00               	movlw	0
 26586  013D02  6EDF               	movwf	indf2,c
 26587  013D04  D018               	goto	l7665
 26588  013D06                     l7663:
 26589  013D06  0E00               	movlw	0
 26590  013D08  6E2E               	movwf	(btemp+8)^0,c
 26591  013D0A  0E00               	movlw	0
 26592  013D0C  6E2F               	movwf	(btemp+9)^0,c
 26593  013D0E  0E00               	movlw	0
 26594  013D10  6E30               	movwf	(btemp+10)^0,c
 26595  013D12  0E00               	movlw	0
 26596  013D14  6E31               	movwf	(btemp+11)^0,c
 26597                           
 26598                           ;stkvar	_a @ sp[(-4)+-8]
 26599  013D16  0EF4               	movlw	-12
 26600  013D18  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26601  013D1E  0EF5               	movlw	-11
 26602  013D20  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26603  013D26  0EF6               	movlw	-10
 26604  013D28  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26605  013D2E  0EF7               	movlw	-9
 26606  013D30  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26607  013D36                     l7665:
 26608                           
 26609                           ;stkvar	_bexp @ sp[(-4)+1]
 26610                           ;stkvar	_aexp @ sp[(-4)+2]
 26611  013D36  50E1               	movf	fsr1l,w,c
 26612  013D38  0FFE               	addlw	-2
 26613  013D3A  6ED9               	movwf	fsr2l,c
 26614  013D3C  50E2               	movf	fsr1h,w,c
 26615  013D3E  6EDA               	movwf	fsr2h,c
 26616  013D40  0EFF               	movlw	255
 26617  013D42  22DA               	addwfc	fsr2h,f,c
 26618  013D44  0EFD               	movlw	-3
 26619  013D46  50E3               	movf	plusw1,w,c
 26620  013D48  5CDE               	subwf	postinc2,w,c
 26621  013D4A  B0D8               	btfsc	status,0,c
 26622  013D4C  D0A4               	goto	l7701
 26623                           
 26624                           ;stkvar	_signs @ sp[(-4)+3]
 26625  013D4E  0EFF               	movlw	-1
 26626  013D50  ACE3               	btfss	plusw1,6,c
 26627  013D52  D002               	goto	l7671
 26628                           
 26629                           ;stkvar	_signs @ sp[(-4)+3]
 26630  013D54  0EFF               	movlw	-1
 26631  013D56  7EE3               	btg	plusw1,7,c
 26632  013D58                     l7671:
 26633                           
 26634                           ;stkvar	_bexp @ sp[(-4)+1]
 26635                           ;stkvar	_grs @ sp[(-4)+0]
 26636  013D58  0EFD               	movlw	-3
 26637  013D5A  006F FF8C  F026    	movff	plusw1,btemp
 26638  013D60  0EFC               	movlw	-4
 26639  013D62  0060  F09B  FFE3   	movff	btemp,plusw1
 26640                           
 26641                           ;stkvar	_aexp @ sp[(-4)+2]
 26642                           ;stkvar	_bexp @ sp[(-4)+1]
 26643  013D68  0EFE               	movlw	-2
 26644  013D6A  006F FF8C  F026    	movff	plusw1,btemp
 26645  013D70  0EFD               	movlw	-3
 26646  013D72  0060  F09B  FFE3   	movff	btemp,plusw1
 26647                           
 26648                           ;stkvar	_grs @ sp[(-4)+0]
 26649                           ;stkvar	_aexp @ sp[(-4)+2]
 26650  013D78  0EFC               	movlw	-4
 26651  013D7A  006F FF8C  F026    	movff	plusw1,btemp
 26652  013D80  0EFE               	movlw	-2
 26653  013D82  0060  F09B  FFE3   	movff	btemp,plusw1
 26654                           
 26655                           ;stkvar	_b @ sp[(-4)+-4]
 26656                           ;stkvar	_grs @ sp[(-4)+0]
 26657  013D88  0EF8               	movlw	-8
 26658  013D8A  006F FF8C  F026    	movff	plusw1,btemp
 26659  013D90  0EFC               	movlw	-4
 26660  013D92  0060  F09B  FFE3   	movff	btemp,plusw1
 26661                           
 26662                           ;stkvar	_a @ sp[(-4)+-8]
 26663                           ;stkvar	_b @ sp[(-4)+-4]
 26664  013D98  0EF4               	movlw	-12
 26665  013D9A  006F FF8C  F026    	movff	plusw1,btemp
 26666  013DA0  0EF8               	movlw	-8
 26667  013DA2  0060  F09B  FFE3   	movff	btemp,plusw1
 26668                           
 26669                           ;stkvar	_grs @ sp[(-4)+0]
 26670                           ;stkvar	_a @ sp[(-4)+-8]
 26671  013DA8  0EFC               	movlw	-4
 26672  013DAA  006F FF8C  F026    	movff	plusw1,btemp
 26673  013DB0  0EF4               	movlw	-12
 26674  013DB2  0060  F09B  FFE3   	movff	btemp,plusw1
 26675                           
 26676                           ;stkvar	_b @ sp[(-4)+-4]
 26677  013DB8  0EF9               	movlw	249
 26678  013DBA  24E1               	addwf	fsr1l,w,c
 26679  013DBC  6ED9               	movwf	fsr2l,c
 26680  013DBE  0EFF               	movlw	255
 26681  013DC0  20E2               	addwfc	fsr1h,w,c
 26682  013DC2  6EDA               	movwf	fsr2h,c
 26683  013DC4  50DF               	movf	indf2,w,c
 26684  013DC6  6E31               	movwf	(btemp+11)^0,c
 26685                           
 26686                           ;stkvar	_grs @ sp[(-4)+0]
 26687  013DC8  0EFC               	movlw	-4
 26688  013DCA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26689                           
 26690                           ;stkvar	_a @ sp[(-4)+-8]
 26691  013DD0  0EF5               	movlw	245
 26692  013DD2  24E1               	addwf	fsr1l,w,c
 26693  013DD4  6ED9               	movwf	fsr2l,c
 26694  013DD6  0EFF               	movlw	255
 26695  013DD8  20E2               	addwfc	fsr1h,w,c
 26696  013DDA  6EDA               	movwf	fsr2h,c
 26697                           
 26698                           ;stkvar	_b @ sp[(-4)+-4]
 26699  013DDC  0EF9               	movlw	249
 26700  013DDE  24E1               	addwf	fsr1l,w,c
 26701  013DE0  6EE9               	movwf	fsr0l,c
 26702  013DE2  0EFF               	movlw	255
 26703  013DE4  20E2               	addwfc	fsr1h,w,c
 26704  013DE6  6EEA               	movwf	fsr0h,c
 26705  013DE8  006F FF7F FFEF     	movff	indf2,indf0
 26706                           
 26707                           ;stkvar	_grs @ sp[(-4)+0]
 26708                           ;stkvar	_a @ sp[(-4)+-8]
 26709  013DEE  0EF5               	movlw	245
 26710  013DF0  24E1               	addwf	fsr1l,w,c
 26711  013DF2  6ED9               	movwf	fsr2l,c
 26712  013DF4  0EFF               	movlw	255
 26713  013DF6  20E2               	addwfc	fsr1h,w,c
 26714  013DF8  6EDA               	movwf	fsr2h,c
 26715  013DFA  0EFC               	movlw	-4
 26716  013DFC  006F FF8F FFDF     	movff	plusw1,indf2
 26717                           
 26718                           ;stkvar	_b @ sp[(-4)+-4]
 26719  013E02  0EFA               	movlw	250
 26720  013E04  24E1               	addwf	fsr1l,w,c
 26721  013E06  6ED9               	movwf	fsr2l,c
 26722  013E08  0EFF               	movlw	255
 26723  013E0A  20E2               	addwfc	fsr1h,w,c
 26724  013E0C  6EDA               	movwf	fsr2h,c
 26725  013E0E  50DF               	movf	indf2,w,c
 26726  013E10  6E31               	movwf	(btemp+11)^0,c
 26727                           
 26728                           ;stkvar	_grs @ sp[(-4)+0]
 26729  013E12  0EFC               	movlw	-4
 26730  013E14  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26731                           
 26732                           ;stkvar	_a @ sp[(-4)+-8]
 26733  013E1A  0EF6               	movlw	246
 26734  013E1C  24E1               	addwf	fsr1l,w,c
 26735  013E1E  6ED9               	movwf	fsr2l,c
 26736  013E20  0EFF               	movlw	255
 26737  013E22  20E2               	addwfc	fsr1h,w,c
 26738  013E24  6EDA               	movwf	fsr2h,c
 26739                           
 26740                           ;stkvar	_b @ sp[(-4)+-4]
 26741  013E26  0EFA               	movlw	250
 26742  013E28  24E1               	addwf	fsr1l,w,c
 26743  013E2A  6EE9               	movwf	fsr0l,c
 26744  013E2C  0EFF               	movlw	255
 26745  013E2E  20E2               	addwfc	fsr1h,w,c
 26746  013E30  6EEA               	movwf	fsr0h,c
 26747  013E32  006F FF7F FFEF     	movff	indf2,indf0
 26748                           
 26749                           ;stkvar	_grs @ sp[(-4)+0]
 26750                           ;stkvar	_a @ sp[(-4)+-8]
 26751  013E38  0EF6               	movlw	246
 26752  013E3A  24E1               	addwf	fsr1l,w,c
 26753  013E3C  6ED9               	movwf	fsr2l,c
 26754  013E3E  0EFF               	movlw	255
 26755  013E40  20E2               	addwfc	fsr1h,w,c
 26756  013E42  6EDA               	movwf	fsr2h,c
 26757  013E44  0EFC               	movlw	-4
 26758  013E46  006F FF8F FFDF     	movff	plusw1,indf2
 26759                           
 26760                           ;stkvar	_b @ sp[(-4)+-4]
 26761  013E4C  0EFB               	movlw	251
 26762  013E4E  24E1               	addwf	fsr1l,w,c
 26763  013E50  6ED9               	movwf	fsr2l,c
 26764  013E52  0EFF               	movlw	255
 26765  013E54  20E2               	addwfc	fsr1h,w,c
 26766  013E56  6EDA               	movwf	fsr2h,c
 26767  013E58  50DF               	movf	indf2,w,c
 26768  013E5A  6E31               	movwf	(btemp+11)^0,c
 26769                           
 26770                           ;stkvar	_grs @ sp[(-4)+0]
 26771  013E5C  0EFC               	movlw	-4
 26772  013E5E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26773                           
 26774                           ;stkvar	_a @ sp[(-4)+-8]
 26775  013E64  0EF7               	movlw	247
 26776  013E66  24E1               	addwf	fsr1l,w,c
 26777  013E68  6ED9               	movwf	fsr2l,c
 26778  013E6A  0EFF               	movlw	255
 26779  013E6C  20E2               	addwfc	fsr1h,w,c
 26780  013E6E  6EDA               	movwf	fsr2h,c
 26781                           
 26782                           ;stkvar	_b @ sp[(-4)+-4]
 26783  013E70  0EFB               	movlw	251
 26784  013E72  24E1               	addwf	fsr1l,w,c
 26785  013E74  6EE9               	movwf	fsr0l,c
 26786  013E76  0EFF               	movlw	255
 26787  013E78  20E2               	addwfc	fsr1h,w,c
 26788  013E7A  6EEA               	movwf	fsr0h,c
 26789  013E7C  006F FF7F FFEF     	movff	indf2,indf0
 26790                           
 26791                           ;stkvar	_grs @ sp[(-4)+0]
 26792                           ;stkvar	_a @ sp[(-4)+-8]
 26793  013E82  0EF7               	movlw	247
 26794  013E84  24E1               	addwf	fsr1l,w,c
 26795  013E86  6ED9               	movwf	fsr2l,c
 26796  013E88  0EFF               	movlw	255
 26797  013E8A  20E2               	addwfc	fsr1h,w,c
 26798  013E8C  6EDA               	movwf	fsr2h,c
 26799  013E8E  0EFC               	movlw	-4
 26800  013E90  006F FF8F FFDF     	movff	plusw1,indf2
 26801  013E96                     l7701:
 26802                           
 26803                           ;stkvar	_grs @ sp[(-4)+0]
 26804  013E96  0EFC               	movlw	-4
 26805  013E98  6AE3               	clrf	plusw1,c
 26806                           
 26807                           ;stkvar	_aexp @ sp[(-4)+2]
 26808  013E9A  0EFE               	movlw	-2
 26809  013E9C  50E3               	movf	plusw1,w,c
 26810  013E9E  6E30               	movwf	(btemp+10)^0,c
 26811  013EA0  6A31               	clrf	(btemp+11)^0,c
 26812                           
 26813                           ;stkvar	_bexp @ sp[(-4)+1]
 26814  013EA2  0EFD               	movlw	-3
 26815  013EA4  50E3               	movf	plusw1,w,c
 26816  013EA6  5E30               	subwf	(btemp+10)^0,f,c
 26817  013EA8  0E00               	movlw	0
 26818  013EAA  5A31               	subwfb	(btemp+11)^0,f,c
 26819  013EAC  BE31               	btfsc	(btemp+11)^0,7,c
 26820  013EAE  D062               	goto	l7725
 26821  013EB0  5031               	movf	(btemp+11)^0,w,c
 26822  013EB2  E104               	bnz	u5510
 26823  013EB4  0E1A               	movlw	26
 26824  013EB6  5C30               	subwf	(btemp+10)^0,w,c
 26825  013EB8  A0D8               	btfss	status,0,c
 26826  013EBA  D05C               	goto	l7725
 26827  013EBC                     u5510:
 26828                           
 26829                           ;stkvar	_b @ sp[(-4)+-4]
 26830  013EBC  0EF8               	movlw	-8
 26831  013EBE  50E3               	movf	plusw1,w,c
 26832  013EC0  E10A               	bnz	u5521
 26833  013EC2  0EF9               	movlw	-7
 26834  013EC4  50E3               	movf	plusw1,w,c
 26835  013EC6  E107               	bnz	u5521
 26836  013EC8  0EFA               	movlw	-6
 26837  013ECA  50E3               	movf	plusw1,w,c
 26838  013ECC  E104               	bnz	u5521
 26839  013ECE  0EFB               	movlw	-5
 26840  013ED0  50E3               	movf	plusw1,w,c
 26841  013ED2  B4D8               	btfsc	status,2,c
 26842  013ED4  D003               	goto	u5520
 26843  013ED6                     u5521:
 26844  013ED6  6A31               	clrf	(btemp+11)^0,c
 26845  013ED8  2A31               	incf	(btemp+11)^0,f,c
 26846  013EDA  D001               	goto	u5538
 26847  013EDC                     u5520:
 26848  013EDC  6A31               	clrf	(btemp+11)^0,c
 26849  013EDE                     u5538:
 26850                           
 26851                           ;stkvar	_grs @ sp[(-4)+0]
 26852  013EDE  0EFC               	movlw	-4
 26853  013EE0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26854                           
 26855                           ;stkvar	_b @ sp[(-4)+-4]
 26856  013EE6  0EF8               	movlw	-8
 26857  013EE8  6AE3               	clrf	plusw1,c
 26858  013EEA  0EF9               	movlw	-7
 26859  013EEC  6AE3               	clrf	plusw1,c
 26860  013EEE  0EFA               	movlw	-6
 26861  013EF0  6AE3               	clrf	plusw1,c
 26862  013EF2  0EFB               	movlw	-5
 26863  013EF4  6AE3               	clrf	plusw1,c
 26864                           
 26865                           ;stkvar	_aexp @ sp[(-4)+2]
 26866                           ;stkvar	_bexp @ sp[(-4)+1]
 26867  013EF6  0EFE               	movlw	-2
 26868  013EF8  006F FF8C  F026    	movff	plusw1,btemp
 26869  013EFE  0EFD               	movlw	-3
 26870  013F00  0060  F09B  FFE3   	movff	btemp,plusw1
 26871  013F06  D042               	goto	u5570
 26872  013F08                     l7711:
 26873                           
 26874                           ;stkvar	_grs @ sp[(-4)+0]
 26875  013F08  0EFC               	movlw	-4
 26876  013F0A  A0E3               	btfss	plusw1,0,c
 26877  013F0C  D00D               	goto	l7715
 26878                           
 26879                           ;stkvar	_grs @ sp[(-4)+0]
 26880  013F0E  0EFC               	movlw	-4
 26881  013F10  006F FF8C  F031    	movff	plusw1,btemp+11
 26882  013F16  90D8               	bcf	status,0,c
 26883  013F18  3231               	rrcf	(btemp+11)^0,f,c
 26884  013F1A  0E01               	movlw	1
 26885  013F1C  1231               	iorwf	(btemp+11)^0,f,c
 26886                           
 26887                           ;stkvar	_grs @ sp[(-4)+0]
 26888  013F1E  0EFC               	movlw	-4
 26889  013F20  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26890  013F26  D009               	goto	l7717
 26891  013F28                     l7715:
 26892                           
 26893                           ;stkvar	_grs @ sp[(-4)+0]
 26894  013F28  50E1               	movf	fsr1l,w,c
 26895  013F2A  0FFC               	addlw	-4
 26896  013F2C  6ED9               	movwf	fsr2l,c
 26897  013F2E  50E2               	movf	fsr1h,w,c
 26898  013F30  6EDA               	movwf	fsr2h,c
 26899  013F32  0EFF               	movlw	255
 26900  013F34  22DA               	addwfc	fsr2h,f,c
 26901  013F36  90D8               	bcf	status,0,c
 26902  013F38  32DF               	rrcf	indf2,f,c
 26903  013F3A                     l7717:
 26904                           
 26905                           ;stkvar	_b @ sp[(-4)+-4]
 26906  013F3A  0EF8               	movlw	-8
 26907  013F3C  A0E3               	btfss	plusw1,0,c
 26908  013F3E  D002               	goto	l7721
 26909                           
 26910                           ;stkvar	_grs @ sp[(-4)+0]
 26911  013F40  0EFC               	movlw	-4
 26912  013F42  8EE3               	bsf	plusw1,7,c
 26913  013F44                     l7721:
 26914  013F44  0E01               	movlw	1
 26915  013F46  6E31               	movwf	(btemp+11)^0,c
 26916                           
 26917                           ;stkvar	_b @ sp[(-4)+-4]
 26918  013F48  50E1               	movf	fsr1l,w,c
 26919  013F4A  0FF8               	addlw	-8
 26920  013F4C  6ED9               	movwf	fsr2l,c
 26921  013F4E  50E2               	movf	fsr1h,w,c
 26922  013F50  6EDA               	movwf	fsr2h,c
 26923  013F52  0EFF               	movlw	255
 26924  013F54  22DA               	addwfc	fsr2h,f,c
 26925  013F56  2831               	incf	(btemp+11)^0,w,c
 26926  013F58  52DE               	movf	postinc2,f,c
 26927  013F5A  D008               	goto	u5560
 26928  013F5C                     u5565:
 26929  013F5C  52DE               	movf	postinc2,f,c
 26930  013F5E  90D8               	bcf	status,0,c
 26931  013F60  BEDC               	btfsc	preinc2,7,c
 26932  013F62  80D8               	bsf	status,0,c
 26933  013F64  32DD               	rrcf	postdec2,f,c
 26934  013F66  32DD               	rrcf	postdec2,f,c
 26935  013F68  32DD               	rrcf	postdec2,f,c
 26936  013F6A  32DE               	rrcf	postinc2,f,c
 26937  013F6C                     u5560:
 26938  013F6C  2EE8               	decfsz	wreg,f,c
 26939  013F6E  D7F6               	goto	u5565
 26940                           
 26941                           ;stkvar	_bexp @ sp[(-4)+1]
 26942  013F70  0EFD               	movlw	-3
 26943  013F72  2AE3               	incf	plusw1,f,c
 26944  013F74                     l7725:
 26945                           
 26946                           ;stkvar	_aexp @ sp[(-4)+2]
 26947                           ;stkvar	_bexp @ sp[(-4)+1]
 26948  013F74  50E1               	movf	fsr1l,w,c
 26949  013F76  0FFD               	addlw	-3
 26950  013F78  6ED9               	movwf	fsr2l,c
 26951  013F7A  50E2               	movf	fsr1h,w,c
 26952  013F7C  6EDA               	movwf	fsr2h,c
 26953  013F7E  0EFF               	movlw	255
 26954  013F80  22DA               	addwfc	fsr2h,f,c
 26955  013F82  0EFE               	movlw	-2
 26956  013F84  50E3               	movf	plusw1,w,c
 26957  013F86  5CDE               	subwf	postinc2,w,c
 26958  013F88  A0D8               	btfss	status,0,c
 26959  013F8A  D7BE               	goto	l7711
 26960  013F8C                     u5570:
 26961                           
 26962                           ;stkvar	_signs @ sp[(-4)+3]
 26963  013F8C  0EFF               	movlw	-1
 26964  013F8E  BCE3               	btfsc	plusw1,6,c
 26965  013F90  D066               	goto	l7753
 26966                           
 26967                           ;stkvar	_bexp @ sp[(-4)+1]
 26968  013F92  0EFD               	movlw	-3
 26969  013F94  50E3               	movf	plusw1,w,c
 26970  013F96  B4D8               	btfsc	status,2,c
 26971  013F98  D0F2               	goto	u5670
 26972                           
 26973                           ;stkvar	_a @ sp[(-4)+-8]
 26974                           ;stkvar	_b @ sp[(-4)+-4]
 26975  013F9A  0EF8               	movlw	-8
 26976  013F9C  50E3               	movf	plusw1,w,c
 26977  013F9E  6E26               	movwf	btemp^0,c
 26978  013FA0  0EF4               	movlw	-12
 26979  013FA2  50E3               	movf	plusw1,w,c
 26980  013FA4  2626               	addwf	btemp^0,f,c
 26981  013FA6  0EF8               	movlw	-8
 26982  013FA8  0060  F09B  FFE3   	movff	btemp,plusw1
 26983  013FAE  0EF9               	movlw	-7
 26984  013FB0  50E3               	movf	plusw1,w,c
 26985  013FB2  6E26               	movwf	btemp^0,c
 26986  013FB4  0EF5               	movlw	-11
 26987  013FB6  50E3               	movf	plusw1,w,c
 26988  013FB8  2226               	addwfc	btemp^0,f,c
 26989  013FBA  0EF9               	movlw	-7
 26990  013FBC  0060  F09B  FFE3   	movff	btemp,plusw1
 26991  013FC2  0EFA               	movlw	-6
 26992  013FC4  50E3               	movf	plusw1,w,c
 26993  013FC6  6E26               	movwf	btemp^0,c
 26994  013FC8  0EF6               	movlw	-10
 26995  013FCA  50E3               	movf	plusw1,w,c
 26996  013FCC  2226               	addwfc	btemp^0,f,c
 26997  013FCE  0EFA               	movlw	-6
 26998  013FD0  0060  F09B  FFE3   	movff	btemp,plusw1
 26999  013FD6  0EFB               	movlw	-5
 27000  013FD8  50E3               	movf	plusw1,w,c
 27001  013FDA  6E26               	movwf	btemp^0,c
 27002  013FDC  0EF7               	movlw	-9
 27003  013FDE  50E3               	movf	plusw1,w,c
 27004  013FE0  2226               	addwfc	btemp^0,f,c
 27005  013FE2  0EFB               	movlw	-5
 27006  013FE4  0060  F09B  FFE3   	movff	btemp,plusw1
 27007                           
 27008                           ;stkvar	_b @ sp[(-4)+-4]
 27009  013FEA  0EFB               	movlw	-5
 27010  013FEC  A0E3               	btfss	plusw1,0,c
 27011  013FEE  D101               	goto	u5710
 27012                           
 27013                           ;stkvar	_grs @ sp[(-4)+0]
 27014  013FF0  0EFC               	movlw	-4
 27015  013FF2  A0E3               	btfss	plusw1,0,c
 27016  013FF4  D00D               	goto	l7743
 27017                           
 27018                           ;stkvar	_grs @ sp[(-4)+0]
 27019  013FF6  0EFC               	movlw	-4
 27020  013FF8  006F FF8C  F031    	movff	plusw1,btemp+11
 27021  013FFE  90D8               	bcf	status,0,c
 27022  014000  3231               	rrcf	(btemp+11)^0,f,c
 27023  014002  0E01               	movlw	1
 27024  014004  1231               	iorwf	(btemp+11)^0,f,c
 27025                           
 27026                           ;stkvar	_grs @ sp[(-4)+0]
 27027  014006  0EFC               	movlw	-4
 27028  014008  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27029  01400E  D009               	goto	l7745
 27030  014010                     l7743:
 27031                           
 27032                           ;stkvar	_grs @ sp[(-4)+0]
 27033  014010  50E1               	movf	fsr1l,w,c
 27034  014012  0FFC               	addlw	-4
 27035  014014  6ED9               	movwf	fsr2l,c
 27036  014016  50E2               	movf	fsr1h,w,c
 27037  014018  6EDA               	movwf	fsr2h,c
 27038  01401A  0EFF               	movlw	255
 27039  01401C  22DA               	addwfc	fsr2h,f,c
 27040  01401E  90D8               	bcf	status,0,c
 27041  014020  32DF               	rrcf	indf2,f,c
 27042  014022                     l7745:
 27043                           
 27044                           ;stkvar	_b @ sp[(-4)+-4]
 27045  014022  0EF8               	movlw	-8
 27046  014024  A0E3               	btfss	plusw1,0,c
 27047  014026  D002               	goto	l7749
 27048                           
 27049                           ;stkvar	_grs @ sp[(-4)+0]
 27050  014028  0EFC               	movlw	-4
 27051  01402A  8EE3               	bsf	plusw1,7,c
 27052  01402C                     l7749:
 27053  01402C  0E01               	movlw	1
 27054  01402E  6E31               	movwf	(btemp+11)^0,c
 27055                           
 27056                           ;stkvar	_b @ sp[(-4)+-4]
 27057  014030  50E1               	movf	fsr1l,w,c
 27058  014032  0FF8               	addlw	-8
 27059  014034  6ED9               	movwf	fsr2l,c
 27060  014036  50E2               	movf	fsr1h,w,c
 27061  014038  6EDA               	movwf	fsr2h,c
 27062  01403A  0EFF               	movlw	255
 27063  01403C  22DA               	addwfc	fsr2h,f,c
 27064  01403E  2831               	incf	(btemp+11)^0,w,c
 27065  014040  52DE               	movf	postinc2,f,c
 27066  014042  D008               	goto	u5630
 27067  014044                     u5635:
 27068  014044  52DE               	movf	postinc2,f,c
 27069  014046  90D8               	bcf	status,0,c
 27070  014048  BEDC               	btfsc	preinc2,7,c
 27071  01404A  80D8               	bsf	status,0,c
 27072  01404C  32DD               	rrcf	postdec2,f,c
 27073  01404E  32DD               	rrcf	postdec2,f,c
 27074  014050  32DD               	rrcf	postdec2,f,c
 27075  014052  32DE               	rrcf	postinc2,f,c
 27076  014054                     u5630:
 27077  014054  2EE8               	decfsz	wreg,f,c
 27078  014056  D7F6               	goto	u5635
 27079                           
 27080                           ;stkvar	_bexp @ sp[(-4)+1]
 27081  014058  0EFD               	movlw	-3
 27082  01405A  2AE3               	incf	plusw1,f,c
 27083  01405C  D0CA               	goto	u5710
 27084  01405E                     l7753:
 27085                           
 27086                           ;stkvar	_a @ sp[(-4)+-8]
 27087                           ;stkvar	_b @ sp[(-4)+-4]
 27088  01405E  50E1               	movf	fsr1l,w,c
 27089  014060  0FF8               	addlw	-8
 27090  014062  6ED9               	movwf	fsr2l,c
 27091  014064  50E2               	movf	fsr1h,w,c
 27092  014066  6EDA               	movwf	fsr2h,c
 27093  014068  0EFF               	movlw	255
 27094  01406A  22DA               	addwfc	fsr2h,f,c
 27095  01406C  0EF4               	movlw	-12
 27096  01406E  50E3               	movf	plusw1,w,c
 27097  014070  5CDE               	subwf	postinc2,w,c
 27098  014072  0EF5               	movlw	-11
 27099  014074  50E3               	movf	plusw1,w,c
 27100  014076  58DE               	subwfb	postinc2,w,c
 27101  014078  0EF6               	movlw	-10
 27102  01407A  50E3               	movf	plusw1,w,c
 27103  01407C  58DE               	subwfb	postinc2,w,c
 27104  01407E  50DE               	movf	postinc2,w,c
 27105  014080  0A80               	xorlw	128
 27106  014082  6E26               	movwf	btemp^0,c
 27107  014084  0EF7               	movlw	-9
 27108  014086  50E3               	movf	plusw1,w,c
 27109  014088  0A80               	xorlw	128
 27110  01408A  5826               	subwfb	btemp^0,w,c
 27111  01408C  B0D8               	btfsc	status,0,c
 27112  01408E  D053               	goto	l7765
 27113                           
 27114                           ;stkvar	_b @ sp[(-4)+-4]
 27115                           ;stkvar	_a @ sp[(-4)+-8]
 27116  014090  0EF4               	movlw	-12
 27117  014092  006F FF8C  F02E    	movff	plusw1,btemp+8
 27118  014098  0EF5               	movlw	-11
 27119  01409A  006F FF8C  F02F    	movff	plusw1,btemp+9
 27120  0140A0  0EF6               	movlw	-10
 27121  0140A2  006F FF8C  F030    	movff	plusw1,btemp+10
 27122  0140A8  0EF7               	movlw	-9
 27123  0140AA  006F FF8C  F031    	movff	plusw1,btemp+11
 27124  0140B0  0EF8               	movlw	-8
 27125  0140B2  50E3               	movf	plusw1,w,c
 27126  0140B4  5E2E               	subwf	(btemp+8)^0,f,c
 27127  0140B6  0EF9               	movlw	-7
 27128  0140B8  50E3               	movf	plusw1,w,c
 27129  0140BA  5A2F               	subwfb	(btemp+9)^0,f,c
 27130  0140BC  0EFA               	movlw	-6
 27131  0140BE  50E3               	movf	plusw1,w,c
 27132  0140C0  5A30               	subwfb	(btemp+10)^0,f,c
 27133  0140C2  0EFB               	movlw	-5
 27134  0140C4  50E3               	movf	plusw1,w,c
 27135  0140C6  5A31               	subwfb	(btemp+11)^0,f,c
 27136  0140C8  0EFF               	movlw	255
 27137  0140CA  242E               	addwf	(btemp+8)^0,w,c
 27138  0140CC  6E2A               	movwf	(btemp+4)^0,c
 27139  0140CE  0EFF               	movlw	255
 27140  0140D0  202F               	addwfc	(btemp+9)^0,w,c
 27141  0140D2  6E2B               	movwf	(btemp+5)^0,c
 27142  0140D4  0EFF               	movlw	255
 27143  0140D6  2030               	addwfc	(btemp+10)^0,w,c
 27144  0140D8  6E2C               	movwf	(btemp+6)^0,c
 27145  0140DA  0EFF               	movlw	255
 27146  0140DC  2031               	addwfc	(btemp+11)^0,w,c
 27147  0140DE  6E2D               	movwf	(btemp+7)^0,c
 27148                           
 27149                           ;stkvar	_b @ sp[(-4)+-4]
 27150  0140E0  0EF8               	movlw	-8
 27151  0140E2  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27152  0140E8  0EF9               	movlw	-7
 27153  0140EA  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27154  0140F0  0EFA               	movlw	-6
 27155  0140F2  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27156  0140F8  0EFB               	movlw	-5
 27157  0140FA  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27158                           
 27159                           ;stkvar	_signs @ sp[(-4)+3]
 27160  014100  0EFF               	movlw	-1
 27161  014102  7EE3               	btg	plusw1,7,c
 27162                           
 27163                           ;stkvar	_grs @ sp[(-4)+0]
 27164  014104  0EFC               	movlw	-4
 27165  014106  50E3               	movf	plusw1,w,c
 27166  014108  0800               	sublw	0
 27167  01410A  6E31               	movwf	(btemp+11)^0,c
 27168                           
 27169                           ;stkvar	_grs @ sp[(-4)+0]
 27170  01410C  0EFC               	movlw	-4
 27171  01410E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27172                           
 27173                           ;stkvar	_grs @ sp[(-4)+0]
 27174  014114  0EFC               	movlw	-4
 27175  014116  50E3               	movf	plusw1,w,c
 27176  014118  A4D8               	btfss	status,2,c
 27177  01411A  D020               	goto	l7767
 27178                           
 27179                           ;stkvar	_b @ sp[(-4)+-4]
 27180  01411C  50E1               	movf	fsr1l,w,c
 27181  01411E  0FF8               	addlw	-8
 27182  014120  6ED9               	movwf	fsr2l,c
 27183  014122  50E2               	movf	fsr1h,w,c
 27184  014124  6EDA               	movwf	fsr2h,c
 27185  014126  0EFF               	movlw	255
 27186  014128  22DA               	addwfc	fsr2h,f,c
 27187  01412A  2ADE               	incf	postinc2,f,c
 27188  01412C  0E00               	movlw	0
 27189  01412E  22DE               	addwfc	postinc2,f,c
 27190  014130  22DE               	addwfc	postinc2,f,c
 27191  014132  22DE               	addwfc	postinc2,f,c
 27192  014134  D013               	goto	l7767
 27193  014136                     l7765:
 27194                           
 27195                           ;stkvar	_a @ sp[(-4)+-8]
 27196                           ;stkvar	_b @ sp[(-4)+-4]
 27197  014136  50E1               	movf	fsr1l,w,c
 27198  014138  0FF8               	addlw	-8
 27199  01413A  6ED9               	movwf	fsr2l,c
 27200  01413C  50E2               	movf	fsr1h,w,c
 27201  01413E  6EDA               	movwf	fsr2h,c
 27202  014140  0EFF               	movlw	255
 27203  014142  22DA               	addwfc	fsr2h,f,c
 27204  014144  0EF4               	movlw	-12
 27205  014146  50E3               	movf	plusw1,w,c
 27206  014148  5EDE               	subwf	postinc2,f,c
 27207  01414A  0EF5               	movlw	-11
 27208  01414C  50E3               	movf	plusw1,w,c
 27209  01414E  5ADE               	subwfb	postinc2,f,c
 27210  014150  0EF6               	movlw	-10
 27211  014152  50E3               	movf	plusw1,w,c
 27212  014154  5ADE               	subwfb	postinc2,f,c
 27213  014156  0EF7               	movlw	-9
 27214  014158  50E3               	movf	plusw1,w,c
 27215  01415A  5ADE               	subwfb	postinc2,f,c
 27216  01415C                     l7767:
 27217                           
 27218                           ;stkvar	_b @ sp[(-4)+-4]
 27219  01415C  0EF8               	movlw	-8
 27220  01415E  50E3               	movf	plusw1,w,c
 27221  014160  E145               	bnz	l7789
 27222  014162  0EF9               	movlw	-7
 27223  014164  50E3               	movf	plusw1,w,c
 27224  014166  E142               	bnz	l7789
 27225  014168  0EFA               	movlw	-6
 27226  01416A  50E3               	movf	plusw1,w,c
 27227  01416C  E13F               	bnz	l7789
 27228  01416E  0EFB               	movlw	-5
 27229  014170  50E3               	movf	plusw1,w,c
 27230  014172  A4D8               	btfss	status,2,c
 27231  014174  D03B               	goto	l7789
 27232                           
 27233                           ;stkvar	_grs @ sp[(-4)+0]
 27234  014176  0EFC               	movlw	-4
 27235  014178  50E3               	movf	plusw1,w,c
 27236  01417A  A4D8               	btfss	status,2,c
 27237  01417C  D037               	goto	l7789
 27238  01417E                     u5670:
 27239  01417E  0E00               	movlw	0
 27240  014180  6E26               	movwf	btemp^0,c
 27241  014182  0E00               	movlw	0
 27242  014184  6E27               	movwf	(btemp+1)^0,c
 27243  014186  0E00               	movlw	0
 27244  014188  6E28               	movwf	(btemp+2)^0,c
 27245  01418A  0E00               	movlw	0
 27246  01418C  6E29               	movwf	(btemp+3)^0,c
 27247  01418E  D0C6               	goto	l2933
 27248  014190                     l7775:
 27249                           
 27250                           ;stkvar	_b @ sp[(-4)+-4]
 27251  014190  90D8               	bcf	status,0,c
 27252  014192  0EF8               	movlw	-8
 27253  014194  36E3               	rlcf	plusw1,f,c
 27254  014196  0EF9               	movlw	-7
 27255  014198  36E3               	rlcf	plusw1,f,c
 27256  01419A  0EFA               	movlw	-6
 27257  01419C  36E3               	rlcf	plusw1,f,c
 27258  01419E  0EFB               	movlw	-5
 27259  0141A0  36E3               	rlcf	plusw1,f,c
 27260                           
 27261                           ;stkvar	_grs @ sp[(-4)+0]
 27262  0141A2  0EFC               	movlw	-4
 27263  0141A4  AEE3               	btfss	plusw1,7,c
 27264  0141A6  D002               	goto	l2945
 27265                           
 27266                           ;stkvar	_b @ sp[(-4)+-4]
 27267  0141A8  0EF8               	movlw	-8
 27268  0141AA  80E3               	bsf	plusw1,0,c
 27269  0141AC                     l2945:
 27270                           
 27271                           ;stkvar	_grs @ sp[(-4)+0]
 27272  0141AC  0EFC               	movlw	-4
 27273  0141AE  A0E3               	btfss	plusw1,0,c
 27274  0141B0  D00E               	goto	l7783
 27275                           
 27276                           ;stkvar	_grs @ sp[(-4)+0]
 27277  0141B2  0EFC               	movlw	-4
 27278  0141B4  006F FF8C  F031    	movff	plusw1,btemp+11
 27279  0141BA  90D8               	bcf	status,0,c
 27280  0141BC  3431               	rlcf	(btemp+11)^0,w,c
 27281  0141BE  6E30               	movwf	(btemp+10)^0,c
 27282  0141C0  0E01               	movlw	1
 27283  0141C2  1230               	iorwf	(btemp+10)^0,f,c
 27284                           
 27285                           ;stkvar	_grs @ sp[(-4)+0]
 27286  0141C4  0EFC               	movlw	-4
 27287  0141C6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27288  0141CC  D009               	goto	l7785
 27289  0141CE                     l7783:
 27290                           
 27291                           ;stkvar	_grs @ sp[(-4)+0]
 27292  0141CE  50E1               	movf	fsr1l,w,c
 27293  0141D0  0FFC               	addlw	-4
 27294  0141D2  6ED9               	movwf	fsr2l,c
 27295  0141D4  50E2               	movf	fsr1h,w,c
 27296  0141D6  6EDA               	movwf	fsr2h,c
 27297  0141D8  0EFF               	movlw	255
 27298  0141DA  22DA               	addwfc	fsr2h,f,c
 27299  0141DC  90D8               	bcf	status,0,c
 27300  0141DE  36DF               	rlcf	indf2,f,c
 27301  0141E0                     l7785:
 27302                           
 27303                           ;stkvar	_bexp @ sp[(-4)+1]
 27304  0141E0  0EFD               	movlw	-3
 27305  0141E2  50E3               	movf	plusw1,w,c
 27306  0141E4  B4D8               	btfsc	status,2,c
 27307  0141E6  D002               	goto	l7789
 27308                           
 27309                           ;stkvar	_bexp @ sp[(-4)+1]
 27310  0141E8  0EFD               	movlw	-3
 27311  0141EA  06E3               	decf	plusw1,f,c
 27312  0141EC                     l7789:
 27313                           
 27314                           ;stkvar	_b @ sp[(-4)+-4]
 27315  0141EC  0EFA               	movlw	-6
 27316  0141EE  AEE3               	btfss	plusw1,7,c
 27317  0141F0  D7CF               	goto	l7775
 27318  0141F2                     u5710:
 27319                           
 27320                           ;stkvar	_aexp @ sp[(-4)+2]
 27321  0141F2  0EFE               	movlw	-2
 27322  0141F4  6AE3               	clrf	plusw1,c
 27323                           
 27324                           ;stkvar	_grs @ sp[(-4)+0]
 27325  0141F6  0EFC               	movlw	-4
 27326  0141F8  AEE3               	btfss	plusw1,7,c
 27327  0141FA  D00F               	goto	l7803
 27328                           
 27329                           ;stkvar	_grs @ sp[(-4)+0]
 27330  0141FC  0EFC               	movlw	-4
 27331  0141FE  006F FF8C  F031    	movff	plusw1,btemp+11
 27332  014204  0E7F               	movlw	127
 27333  014206  1631               	andwf	(btemp+11)^0,f,c
 27334  014208  B4D8               	btfsc	status,2,c
 27335  01420A  D004               	goto	l7799
 27336  01420C                     u5730:
 27337                           
 27338                           ;stkvar	_aexp @ sp[(-4)+2]
 27339  01420C  0EFE               	movlw	-2
 27340  01420E  6AE3               	clrf	plusw1,c
 27341  014210  2AE3               	incf	plusw1,f,c
 27342  014212  D003               	goto	l7803
 27343  014214                     l7799:
 27344                           
 27345                           ;stkvar	_b @ sp[(-4)+-4]
 27346  014214  0EF8               	movlw	-8
 27347  014216  B0E3               	btfsc	plusw1,0,c
 27348  014218  D7F9               	goto	u5730
 27349  01421A                     l7803:
 27350                           
 27351                           ;stkvar	_aexp @ sp[(-4)+2]
 27352  01421A  0EFE               	movlw	-2
 27353  01421C  50E3               	movf	plusw1,w,c
 27354  01421E  B4D8               	btfsc	status,2,c
 27355  014220  D02B               	goto	l7815
 27356                           
 27357                           ;stkvar	_b @ sp[(-4)+-4]
 27358  014222  50E1               	movf	fsr1l,w,c
 27359  014224  0FF8               	addlw	-8
 27360  014226  6ED9               	movwf	fsr2l,c
 27361  014228  50E2               	movf	fsr1h,w,c
 27362  01422A  6EDA               	movwf	fsr2h,c
 27363  01422C  0EFF               	movlw	255
 27364  01422E  22DA               	addwfc	fsr2h,f,c
 27365  014230  2ADE               	incf	postinc2,f,c
 27366  014232  0E00               	movlw	0
 27367  014234  22DE               	addwfc	postinc2,f,c
 27368  014236  22DE               	addwfc	postinc2,f,c
 27369  014238  22DE               	addwfc	postinc2,f,c
 27370                           
 27371                           ;stkvar	_b @ sp[(-4)+-4]
 27372  01423A  0EFB               	movlw	-5
 27373  01423C  A0E3               	btfss	plusw1,0,c
 27374  01423E  D01C               	goto	l7815
 27375  014240  0E01               	movlw	1
 27376  014242  6E31               	movwf	(btemp+11)^0,c
 27377                           
 27378                           ;stkvar	_b @ sp[(-4)+-4]
 27379  014244  50E1               	movf	fsr1l,w,c
 27380  014246  0FF8               	addlw	-8
 27381  014248  6ED9               	movwf	fsr2l,c
 27382  01424A  50E2               	movf	fsr1h,w,c
 27383  01424C  6EDA               	movwf	fsr2h,c
 27384  01424E  0EFF               	movlw	255
 27385  014250  22DA               	addwfc	fsr2h,f,c
 27386  014252  2831               	incf	(btemp+11)^0,w,c
 27387  014254  52DE               	movf	postinc2,f,c
 27388  014256  D008               	goto	u5770
 27389  014258                     u5775:
 27390  014258  52DE               	movf	postinc2,f,c
 27391  01425A  90D8               	bcf	status,0,c
 27392  01425C  BEDC               	btfsc	preinc2,7,c
 27393  01425E  80D8               	bsf	status,0,c
 27394  014260  32DD               	rrcf	postdec2,f,c
 27395  014262  32DD               	rrcf	postdec2,f,c
 27396  014264  32DD               	rrcf	postdec2,f,c
 27397  014266  32DE               	rrcf	postinc2,f,c
 27398  014268                     u5770:
 27399  014268  2EE8               	decfsz	wreg,f,c
 27400  01426A  D7F6               	goto	u5775
 27401                           
 27402                           ;stkvar	_bexp @ sp[(-4)+1]
 27403  01426C  0EFD               	movlw	-3
 27404  01426E  28E3               	incf	plusw1,w,c
 27405  014270  B4D8               	btfsc	status,2,c
 27406  014272  D002               	goto	l7815
 27407                           
 27408                           ;stkvar	_bexp @ sp[(-4)+1]
 27409  014274  0EFD               	movlw	-3
 27410  014276  2AE3               	incf	plusw1,f,c
 27411  014278                     l7815:
 27412                           
 27413                           ;stkvar	_bexp @ sp[(-4)+1]
 27414  014278  0EFD               	movlw	-3
 27415  01427A  28E3               	incf	plusw1,w,c
 27416  01427C  B4D8               	btfsc	status,2,c
 27417  01427E  D004               	goto	u5800
 27418                           
 27419                           ;stkvar	_bexp @ sp[(-4)+1]
 27420  014280  0EFD               	movlw	-3
 27421  014282  50E3               	movf	plusw1,w,c
 27422  014284  A4D8               	btfss	status,2,c
 27423  014286  D00E               	goto	l7825
 27424  014288                     u5800:
 27425                           
 27426                           ;stkvar	_b @ sp[(-4)+-4]
 27427  014288  0EF8               	movlw	-8
 27428  01428A  6AE3               	clrf	plusw1,c
 27429  01428C  0EF9               	movlw	-7
 27430  01428E  6AE3               	clrf	plusw1,c
 27431  014290  0EFA               	movlw	-6
 27432  014292  6AE3               	clrf	plusw1,c
 27433  014294  0EFB               	movlw	-5
 27434  014296  6AE3               	clrf	plusw1,c
 27435                           
 27436                           ;stkvar	_bexp @ sp[(-4)+1]
 27437  014298  0EFD               	movlw	-3
 27438  01429A  50E3               	movf	plusw1,w,c
 27439  01429C  A4D8               	btfss	status,2,c
 27440  01429E  D002               	goto	l7825
 27441                           
 27442                           ;stkvar	_signs @ sp[(-4)+3]
 27443  0142A0  0EFF               	movlw	-1
 27444  0142A2  6AE3               	clrf	plusw1,c
 27445  0142A4                     l7825:
 27446                           
 27447                           ;stkvar	_bexp @ sp[(-4)+1]
 27448  0142A4  0EFD               	movlw	-3
 27449  0142A6  A0E3               	btfss	plusw1,0,c
 27450  0142A8  D009               	goto	l7829
 27451                           
 27452                           ;stkvar	_b @ sp[(-4)+-4]
 27453  0142AA  0EFA               	movlw	250
 27454  0142AC  24E1               	addwf	fsr1l,w,c
 27455  0142AE  6ED9               	movwf	fsr2l,c
 27456  0142B0  0EFF               	movlw	255
 27457  0142B2  20E2               	addwfc	fsr1h,w,c
 27458  0142B4  6EDA               	movwf	fsr2h,c
 27459  0142B6  0E00               	movlw	0
 27460  0142B8  8EDB               	bsf	plusw2,7,c
 27461  0142BA  D008               	goto	l7831
 27462  0142BC                     l7829:
 27463                           
 27464                           ;stkvar	_b @ sp[(-4)+-4]
 27465  0142BC  0EFA               	movlw	250
 27466  0142BE  24E1               	addwf	fsr1l,w,c
 27467  0142C0  6ED9               	movwf	fsr2l,c
 27468  0142C2  0EFF               	movlw	255
 27469  0142C4  20E2               	addwfc	fsr1h,w,c
 27470  0142C6  6EDA               	movwf	fsr2h,c
 27471  0142C8  0E7F               	movlw	127
 27472  0142CA  16DF               	andwf	indf2,f,c
 27473  0142CC                     l7831:
 27474                           
 27475                           ;stkvar	_b @ sp[(-4)+-4]
 27476  0142CC  0EFB               	movlw	251
 27477  0142CE  24E1               	addwf	fsr1l,w,c
 27478  0142D0  6ED9               	movwf	fsr2l,c
 27479  0142D2  0EFF               	movlw	255
 27480  0142D4  20E2               	addwfc	fsr1h,w,c
 27481  0142D6  6EDA               	movwf	fsr2h,c
 27482                           
 27483                           ;stkvar	_bexp @ sp[(-4)+1]
 27484  0142D8  0EFD               	movlw	-3
 27485  0142DA  006F FF8C  F031    	movff	plusw1,btemp+11
 27486  0142E0  90D8               	bcf	status,0,c
 27487  0142E2  3031               	rrcf	(btemp+11)^0,w,c
 27488  0142E4  6EDF               	movwf	indf2,c
 27489                           
 27490                           ;stkvar	_signs @ sp[(-4)+3]
 27491  0142E6  0EFF               	movlw	-1
 27492  0142E8  AEE3               	btfss	plusw1,7,c
 27493  0142EA  D008               	goto	l7837
 27494                           
 27495                           ;stkvar	_b @ sp[(-4)+-4]
 27496  0142EC  0EFB               	movlw	251
 27497  0142EE  24E1               	addwf	fsr1l,w,c
 27498  0142F0  6ED9               	movwf	fsr2l,c
 27499  0142F2  0EFF               	movlw	255
 27500  0142F4  20E2               	addwfc	fsr1h,w,c
 27501  0142F6  6EDA               	movwf	fsr2h,c
 27502  0142F8  0E00               	movlw	0
 27503  0142FA  8EDB               	bsf	plusw2,7,c
 27504  0142FC                     l7837:
 27505                           
 27506                           ;stkvar	_b @ sp[(-4)+-4]
 27507  0142FC  0EF8               	movlw	-8
 27508  0142FE  006F FF8C  F026    	movff	plusw1,btemp
 27509  014304  0EF9               	movlw	-7
 27510  014306  006F FF8C  F027    	movff	plusw1,btemp+1
 27511  01430C  0EFA               	movlw	-6
 27512  01430E  006F FF8C  F028    	movff	plusw1,btemp+2
 27513  014314  0EFB               	movlw	-5
 27514  014316  006F FF8C  F029    	movff	plusw1,btemp+3
 27515  01431C                     l2933:
 27516                           
 27517                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27518  01431C  0EF4               	movlw	244
 27519  01431E  26E1               	addwf	fsr1l,f,c
 27520  014320  0EFF               	movlw	255
 27521  014322  22E2               	addwfc	fsr1h,f,c
 27522  014324  0012               	return		;funcret
 27523  014326                     __end_of___fladd:
 27524                           	opt callstack 0
 27525                           
 27526 ;; *************** function ___flmul *****************
 27527 ;; Defined at:
 27528 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27529 ;; Parameters:    Size  Location     Type
 27530 ;;  b               4  [STACK] unsigned char 
 27531 ;;  a               4  [STACK] unsigned char 
 27532 ;; Auto vars:     Size  Location     Type
 27533 ;;  prod            4  [STACK] struct .
 27534 ;;  grs             4  [STACK] unsigned long 
 27535 ;;  temp            2  [STACK] struct .
 27536 ;;  bexp            1  [STACK] unsigned char 
 27537 ;;  aexp            1  [STACK] unsigned char 
 27538 ;;  sign            1  [STACK] unsigned char 
 27539 ;; Return value:  Size  Location     Type
 27540 ;;                  4  [STACK] unsigned char 
 27541 ;; Registers used:
 27542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27543 ;; Tracked objects:
 27544 ;;		On entry : 0/0
 27545 ;;		On exit  : 0/0
 27546 ;;		Unchanged: 0/0
 27547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27552 ;;Total ram usage:        0 bytes
 27553 ;; Hardware stack levels used:    1
 27554 ;; Hardware stack levels required when called:   15
 27555 ;; This function calls:
 27556 ;;		Nothing
 27557 ;; This function is called by:
 27558 ;;		_conv_raw_result
 27559 ;;		_lp_filter
 27560 ;;		_calc_model_data
 27561 ;;		_calc_bsoc
 27562 ;;		_init_bsoc
 27563 ;;		_efgtoa
 27564 ;; This function uses a reentrant model
 27565 ;;
 27566                           
 27567                           	psect	text106
 27568  013340                     __ptext106:
 27569                           	opt callstack 0
 27570  013340                     ___flmul:
 27571                           	opt callstack 0
 27572                           
 27573                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27574  013340  0E0D               	movlw	13
 27575  013342  26E1               	addwf	fsr1l,f,c
 27576  013344  0E00               	movlw	0
 27577  013346  22E2               	addwfc	fsr1h,f,c
 27578                           
 27579                           ;stkvar	_b @ sp[(-13)+-4]
 27580                           
 27581                           ;incstack = 0
 27582 ;; hardware stack exceeded
 27583  013348  0EF2               	movlw	242
 27584  01334A  24E1               	addwf	fsr1l,w,c
 27585  01334C  6ED9               	movwf	fsr2l,c
 27586  01334E  0EFF               	movlw	255
 27587  013350  20E2               	addwfc	fsr1h,w,c
 27588  013352  6EDA               	movwf	fsr2h,c
 27589  013354  50DF               	movf	indf2,w,c
 27590  013356  6E31               	movwf	(btemp+11)^0,c
 27591  013358  0E80               	movlw	128
 27592  01335A  1631               	andwf	(btemp+11)^0,f,c
 27593                           
 27594                           ;stkvar	_sign @ sp[(-13)+12]
 27595  01335C  0EFF               	movlw	-1
 27596  01335E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27597                           
 27598                           ;stkvar	_b @ sp[(-13)+-4]
 27599  013364  0EF2               	movlw	242
 27600  013366  24E1               	addwf	fsr1l,w,c
 27601  013368  6ED9               	movwf	fsr2l,c
 27602  01336A  0EFF               	movlw	255
 27603  01336C  20E2               	addwfc	fsr1h,w,c
 27604  01336E  6EDA               	movwf	fsr2h,c
 27605  013370  50DF               	movf	indf2,w,c
 27606  013372  6E31               	movwf	(btemp+11)^0,c
 27607  013374  90D8               	bcf	status,0,c
 27608  013376  3431               	rlcf	(btemp+11)^0,w,c
 27609  013378  6E30               	movwf	(btemp+10)^0,c
 27610                           
 27611                           ;stkvar	_bexp @ sp[(-13)+10]
 27612  01337A  0EFD               	movlw	-3
 27613  01337C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27614                           
 27615                           ;stkvar	_b @ sp[(-13)+-4]
 27616  013382  0EF1               	movlw	241
 27617  013384  24E1               	addwf	fsr1l,w,c
 27618  013386  6ED9               	movwf	fsr2l,c
 27619  013388  0EFF               	movlw	255
 27620  01338A  20E2               	addwfc	fsr1h,w,c
 27621  01338C  6EDA               	movwf	fsr2h,c
 27622  01338E  AEDF               	btfss	indf2,7,c
 27623  013390  D002               	goto	l8221
 27624                           
 27625                           ;stkvar	_bexp @ sp[(-13)+10]
 27626  013392  0EFD               	movlw	-3
 27627  013394  80E3               	bsf	plusw1,0,c
 27628  013396                     l8221:
 27629                           
 27630                           ;stkvar	_bexp @ sp[(-13)+10]
 27631  013396  0EFD               	movlw	-3
 27632  013398  50E3               	movf	plusw1,w,c
 27633  01339A  B4D8               	btfsc	status,2,c
 27634  01339C  D01F               	goto	l8229
 27635                           
 27636                           ;stkvar	_bexp @ sp[(-13)+10]
 27637  01339E  0EFD               	movlw	-3
 27638  0133A0  28E3               	incf	plusw1,w,c
 27639  0133A2  A4D8               	btfss	status,2,c
 27640  0133A4  D018               	goto	l8227
 27641  0133A6  0E00               	movlw	0
 27642  0133A8  6E2E               	movwf	(btemp+8)^0,c
 27643  0133AA  0E00               	movlw	0
 27644  0133AC  6E2F               	movwf	(btemp+9)^0,c
 27645  0133AE  0E00               	movlw	0
 27646  0133B0  6E30               	movwf	(btemp+10)^0,c
 27647  0133B2  0E00               	movlw	0
 27648  0133B4  6E31               	movwf	(btemp+11)^0,c
 27649                           
 27650                           ;stkvar	_b @ sp[(-13)+-4]
 27651  0133B6  0EEF               	movlw	-17
 27652  0133B8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27653  0133BE  0EF0               	movlw	-16
 27654  0133C0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27655  0133C6  0EF1               	movlw	-15
 27656  0133C8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27657  0133CE  0EF2               	movlw	-14
 27658  0133D0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27659  0133D6                     l8227:
 27660                           
 27661                           ;stkvar	_b @ sp[(-13)+-4]
 27662  0133D6  0EF1               	movlw	-15
 27663  0133D8  8EE3               	bsf	plusw1,7,c
 27664  0133DA  D018               	goto	l8231
 27665  0133DC                     l8229:
 27666  0133DC  0E00               	movlw	0
 27667  0133DE  6E2E               	movwf	(btemp+8)^0,c
 27668  0133E0  0E00               	movlw	0
 27669  0133E2  6E2F               	movwf	(btemp+9)^0,c
 27670  0133E4  0E00               	movlw	0
 27671  0133E6  6E30               	movwf	(btemp+10)^0,c
 27672  0133E8  0E00               	movlw	0
 27673  0133EA  6E31               	movwf	(btemp+11)^0,c
 27674                           
 27675                           ;stkvar	_b @ sp[(-13)+-4]
 27676  0133EC  0EEF               	movlw	-17
 27677  0133EE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27678  0133F4  0EF0               	movlw	-16
 27679  0133F6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27680  0133FC  0EF1               	movlw	-15
 27681  0133FE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27682  013404  0EF2               	movlw	-14
 27683  013406  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27684  01340C                     l8231:
 27685                           
 27686                           ;stkvar	_a @ sp[(-13)+-8]
 27687  01340C  0EEE               	movlw	238
 27688  01340E  24E1               	addwf	fsr1l,w,c
 27689  013410  6ED9               	movwf	fsr2l,c
 27690  013412  0EFF               	movlw	255
 27691  013414  20E2               	addwfc	fsr1h,w,c
 27692  013416  6EDA               	movwf	fsr2h,c
 27693  013418  50DF               	movf	indf2,w,c
 27694  01341A  6E31               	movwf	(btemp+11)^0,c
 27695  01341C  0E80               	movlw	128
 27696  01341E  1631               	andwf	(btemp+11)^0,f,c
 27697                           
 27698                           ;stkvar	_sign @ sp[(-13)+12]
 27699  013420  50E1               	movf	fsr1l,w,c
 27700  013422  0FFF               	addlw	-1
 27701  013424  6ED9               	movwf	fsr2l,c
 27702  013426  50E2               	movf	fsr1h,w,c
 27703  013428  6EDA               	movwf	fsr2h,c
 27704  01342A  0EFF               	movlw	255
 27705  01342C  22DA               	addwfc	fsr2h,f,c
 27706  01342E  5031               	movf	(btemp+11)^0,w,c
 27707  013430  1ADF               	xorwf	indf2,f,c
 27708                           
 27709                           ;stkvar	_a @ sp[(-13)+-8]
 27710  013432  0EEE               	movlw	238
 27711  013434  24E1               	addwf	fsr1l,w,c
 27712  013436  6ED9               	movwf	fsr2l,c
 27713  013438  0EFF               	movlw	255
 27714  01343A  20E2               	addwfc	fsr1h,w,c
 27715  01343C  6EDA               	movwf	fsr2h,c
 27716  01343E  50DF               	movf	indf2,w,c
 27717  013440  6E31               	movwf	(btemp+11)^0,c
 27718  013442  90D8               	bcf	status,0,c
 27719  013444  3431               	rlcf	(btemp+11)^0,w,c
 27720  013446  6E30               	movwf	(btemp+10)^0,c
 27721                           
 27722                           ;stkvar	_aexp @ sp[(-13)+11]
 27723  013448  0EFE               	movlw	-2
 27724  01344A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27725                           
 27726                           ;stkvar	_a @ sp[(-13)+-8]
 27727  013450  0EED               	movlw	237
 27728  013452  24E1               	addwf	fsr1l,w,c
 27729  013454  6ED9               	movwf	fsr2l,c
 27730  013456  0EFF               	movlw	255
 27731  013458  20E2               	addwfc	fsr1h,w,c
 27732  01345A  6EDA               	movwf	fsr2h,c
 27733  01345C  AEDF               	btfss	indf2,7,c
 27734  01345E  D002               	goto	l8239
 27735                           
 27736                           ;stkvar	_aexp @ sp[(-13)+11]
 27737  013460  0EFE               	movlw	-2
 27738  013462  80E3               	bsf	plusw1,0,c
 27739  013464                     l8239:
 27740                           
 27741                           ;stkvar	_aexp @ sp[(-13)+11]
 27742  013464  0EFE               	movlw	-2
 27743  013466  50E3               	movf	plusw1,w,c
 27744  013468  B4D8               	btfsc	status,2,c
 27745  01346A  D01F               	goto	l8247
 27746                           
 27747                           ;stkvar	_aexp @ sp[(-13)+11]
 27748  01346C  0EFE               	movlw	-2
 27749  01346E  28E3               	incf	plusw1,w,c
 27750  013470  A4D8               	btfss	status,2,c
 27751  013472  D018               	goto	l8245
 27752  013474  0E00               	movlw	0
 27753  013476  6E2E               	movwf	(btemp+8)^0,c
 27754  013478  0E00               	movlw	0
 27755  01347A  6E2F               	movwf	(btemp+9)^0,c
 27756  01347C  0E00               	movlw	0
 27757  01347E  6E30               	movwf	(btemp+10)^0,c
 27758  013480  0E00               	movlw	0
 27759  013482  6E31               	movwf	(btemp+11)^0,c
 27760                           
 27761                           ;stkvar	_a @ sp[(-13)+-8]
 27762  013484  0EEB               	movlw	-21
 27763  013486  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27764  01348C  0EEC               	movlw	-20
 27765  01348E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27766  013494  0EED               	movlw	-19
 27767  013496  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27768  01349C  0EEE               	movlw	-18
 27769  01349E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27770  0134A4                     l8245:
 27771                           
 27772                           ;stkvar	_a @ sp[(-13)+-8]
 27773  0134A4  0EED               	movlw	-19
 27774  0134A6  8EE3               	bsf	plusw1,7,c
 27775  0134A8  D018               	goto	l8249
 27776  0134AA                     l8247:
 27777  0134AA  0E00               	movlw	0
 27778  0134AC  6E2E               	movwf	(btemp+8)^0,c
 27779  0134AE  0E00               	movlw	0
 27780  0134B0  6E2F               	movwf	(btemp+9)^0,c
 27781  0134B2  0E00               	movlw	0
 27782  0134B4  6E30               	movwf	(btemp+10)^0,c
 27783  0134B6  0E00               	movlw	0
 27784  0134B8  6E31               	movwf	(btemp+11)^0,c
 27785                           
 27786                           ;stkvar	_a @ sp[(-13)+-8]
 27787  0134BA  0EEB               	movlw	-21
 27788  0134BC  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27789  0134C2  0EEC               	movlw	-20
 27790  0134C4  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27791  0134CA  0EED               	movlw	-19
 27792  0134CC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27793  0134D2  0EEE               	movlw	-18
 27794  0134D4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27795  0134DA                     l8249:
 27796                           
 27797                           ;stkvar	_aexp @ sp[(-13)+11]
 27798  0134DA  0EFE               	movlw	-2
 27799  0134DC  50E3               	movf	plusw1,w,c
 27800  0134DE  B4D8               	btfsc	status,2,c
 27801  0134E0  D004               	goto	u6740
 27802                           
 27803                           ;stkvar	_bexp @ sp[(-13)+10]
 27804  0134E2  0EFD               	movlw	-3
 27805  0134E4  50E3               	movf	plusw1,w,c
 27806  0134E6  A4D8               	btfss	status,2,c
 27807  0134E8  D009               	goto	l8257
 27808  0134EA                     u6740:
 27809  0134EA  0E00               	movlw	0
 27810  0134EC  6E26               	movwf	btemp^0,c
 27811  0134EE  0E00               	movlw	0
 27812  0134F0  6E27               	movwf	(btemp+1)^0,c
 27813  0134F2  0E00               	movlw	0
 27814  0134F4  6E28               	movwf	(btemp+2)^0,c
 27815  0134F6  0E00               	movlw	0
 27816  0134F8  6E29               	movwf	(btemp+3)^0,c
 27817  0134FA  D332               	goto	l3014
 27818  0134FC                     l8257:
 27819                           
 27820                           ;stkvar	_b @ sp[(-13)+-4]
 27821  0134FC  0EEF               	movlw	-17
 27822  0134FE  006F FF8C  F031    	movff	plusw1,btemp+11
 27823                           
 27824                           ;stkvar	_a @ sp[(-13)+-8]
 27825  013504  0EED               	movlw	237
 27826  013506  24E1               	addwf	fsr1l,w,c
 27827  013508  6ED9               	movwf	fsr2l,c
 27828  01350A  0EFF               	movlw	255
 27829  01350C  20E2               	addwfc	fsr1h,w,c
 27830  01350E  6EDA               	movwf	fsr2h,c
 27831  013510  50DF               	movf	indf2,w,c
 27832  013512  0231               	mulwf	(btemp+11)^0,c
 27833                           
 27834                           ;stkvar	_temp @ sp[(-13)+8]
 27835  013514  0EFB               	movlw	-5
 27836  013516  006F FFCF FFE3     	movff	prodl,plusw1
 27837  01351C  0EFC               	movlw	-4
 27838  01351E  006F FFD3 FFE3     	movff	prodh,plusw1
 27839                           
 27840                           ;stkvar	_temp @ sp[(-13)+8]
 27841  013524  0EFB               	movlw	-5
 27842  013526  006F FF8C  F031    	movff	plusw1,btemp+11
 27843  01352C  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27844  013532  6A2B               	clrf	(btemp+5)^0,c
 27845  013534  6A2C               	clrf	(btemp+6)^0,c
 27846  013536  6A2D               	clrf	(btemp+7)^0,c
 27847                           
 27848                           ;stkvar	_grs @ sp[(-13)+4]
 27849  013538  0EF7               	movlw	-9
 27850  01353A  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27851  013540  0EF8               	movlw	-8
 27852  013542  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27853  013548  0EF9               	movlw	-7
 27854  01354A  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27855  013550  0EFA               	movlw	-6
 27856  013552  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27857                           
 27858                           ;stkvar	_temp @ sp[(-13)+8]
 27859  013558  0EFC               	movlw	252
 27860  01355A  24E1               	addwf	fsr1l,w,c
 27861  01355C  6ED9               	movwf	fsr2l,c
 27862  01355E  0EFF               	movlw	255
 27863  013560  20E2               	addwfc	fsr1h,w,c
 27864  013562  6EDA               	movwf	fsr2h,c
 27865  013564  50DF               	movf	indf2,w,c
 27866  013566  6E31               	movwf	(btemp+11)^0,c
 27867  013568  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27868  01356E  6A2B               	clrf	(btemp+5)^0,c
 27869  013570  6A2C               	clrf	(btemp+6)^0,c
 27870  013572  6A2D               	clrf	(btemp+7)^0,c
 27871                           
 27872                           ;stkvar	_prod @ sp[(-13)+0]
 27873  013574  0EF3               	movlw	-13
 27874  013576  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27875  01357C  0EF4               	movlw	-12
 27876  01357E  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27877  013584  0EF5               	movlw	-11
 27878  013586  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27879  01358C  0EF6               	movlw	-10
 27880  01358E  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27881                           
 27882                           ;stkvar	_b @ sp[(-13)+-4]
 27883  013594  0EF0               	movlw	240
 27884  013596  24E1               	addwf	fsr1l,w,c
 27885  013598  6ED9               	movwf	fsr2l,c
 27886  01359A  0EFF               	movlw	255
 27887  01359C  20E2               	addwfc	fsr1h,w,c
 27888  01359E  6EDA               	movwf	fsr2h,c
 27889  0135A0  50DF               	movf	indf2,w,c
 27890  0135A2  6E31               	movwf	(btemp+11)^0,c
 27891                           
 27892                           ;stkvar	_a @ sp[(-13)+-8]
 27893  0135A4  0EEC               	movlw	236
 27894  0135A6  24E1               	addwf	fsr1l,w,c
 27895  0135A8  6ED9               	movwf	fsr2l,c
 27896  0135AA  0EFF               	movlw	255
 27897  0135AC  20E2               	addwfc	fsr1h,w,c
 27898  0135AE  6EDA               	movwf	fsr2h,c
 27899  0135B0  50DF               	movf	indf2,w,c
 27900  0135B2  0231               	mulwf	(btemp+11)^0,c
 27901                           
 27902                           ;stkvar	_temp @ sp[(-13)+8]
 27903  0135B4  0EFB               	movlw	-5
 27904  0135B6  006F FFCF FFE3     	movff	prodl,plusw1
 27905  0135BC  0EFC               	movlw	-4
 27906  0135BE  006F FFD3 FFE3     	movff	prodh,plusw1
 27907                           
 27908                           ;stkvar	_grs @ sp[(-13)+4]
 27909  0135C4  50E1               	movf	fsr1l,w,c
 27910  0135C6  0FF7               	addlw	-9
 27911  0135C8  6ED9               	movwf	fsr2l,c
 27912  0135CA  50E2               	movf	fsr1h,w,c
 27913  0135CC  6EDA               	movwf	fsr2h,c
 27914  0135CE  0EFF               	movlw	255
 27915  0135D0  22DA               	addwfc	fsr2h,f,c
 27916                           
 27917                           ;stkvar	_temp @ sp[(-13)+8]
 27918  0135D2  0EFB               	movlw	-5
 27919  0135D4  50E3               	movf	plusw1,w,c
 27920  0135D6  26DE               	addwf	postinc2,f,c
 27921  0135D8  0E00               	movlw	0
 27922  0135DA  22DE               	addwfc	postinc2,f,c
 27923  0135DC  22DE               	addwfc	postinc2,f,c
 27924  0135DE  22DE               	addwfc	postinc2,f,c
 27925                           
 27926                           ;stkvar	_prod @ sp[(-13)+0]
 27927  0135E0  50E1               	movf	fsr1l,w,c
 27928  0135E2  0FF3               	addlw	-13
 27929  0135E4  6ED9               	movwf	fsr2l,c
 27930  0135E6  50E2               	movf	fsr1h,w,c
 27931  0135E8  6EDA               	movwf	fsr2h,c
 27932  0135EA  0EFF               	movlw	255
 27933  0135EC  22DA               	addwfc	fsr2h,f,c
 27934                           
 27935                           ;stkvar	_temp @ sp[(-13)+8]
 27936  0135EE  0EFC               	movlw	252
 27937  0135F0  24E1               	addwf	fsr1l,w,c
 27938  0135F2  6EE9               	movwf	fsr0l,c
 27939  0135F4  0EFF               	movlw	255
 27940  0135F6  20E2               	addwfc	fsr1h,w,c
 27941  0135F8  6EEA               	movwf	fsr0h,c
 27942  0135FA  50EF               	movf	indf0,w,c
 27943  0135FC  26DE               	addwf	postinc2,f,c
 27944  0135FE  0E00               	movlw	0
 27945  013600  22DE               	addwfc	postinc2,f,c
 27946  013602  22DE               	addwfc	postinc2,f,c
 27947  013604  22DE               	addwfc	postinc2,f,c
 27948                           
 27949                           ;stkvar	_b @ sp[(-13)+-4]
 27950  013606  0EF1               	movlw	241
 27951  013608  24E1               	addwf	fsr1l,w,c
 27952  01360A  6ED9               	movwf	fsr2l,c
 27953  01360C  0EFF               	movlw	255
 27954  01360E  20E2               	addwfc	fsr1h,w,c
 27955  013610  6EDA               	movwf	fsr2h,c
 27956  013612  50DF               	movf	indf2,w,c
 27957  013614  6E31               	movwf	(btemp+11)^0,c
 27958                           
 27959                           ;stkvar	_a @ sp[(-13)+-8]
 27960  013616  0EEB               	movlw	-21
 27961  013618  50E3               	movf	plusw1,w,c
 27962  01361A  0231               	mulwf	(btemp+11)^0,c
 27963                           
 27964                           ;stkvar	_temp @ sp[(-13)+8]
 27965  01361C  0EFB               	movlw	-5
 27966  01361E  006F FFCF FFE3     	movff	prodl,plusw1
 27967  013624  0EFC               	movlw	-4
 27968  013626  006F FFD3 FFE3     	movff	prodh,plusw1
 27969                           
 27970                           ;stkvar	_grs @ sp[(-13)+4]
 27971  01362C  50E1               	movf	fsr1l,w,c
 27972  01362E  0FF7               	addlw	-9
 27973  013630  6ED9               	movwf	fsr2l,c
 27974  013632  50E2               	movf	fsr1h,w,c
 27975  013634  6EDA               	movwf	fsr2h,c
 27976  013636  0EFF               	movlw	255
 27977  013638  22DA               	addwfc	fsr2h,f,c
 27978                           
 27979                           ;stkvar	_temp @ sp[(-13)+8]
 27980  01363A  0EFB               	movlw	-5
 27981  01363C  50E3               	movf	plusw1,w,c
 27982  01363E  26DE               	addwf	postinc2,f,c
 27983  013640  0E00               	movlw	0
 27984  013642  22DE               	addwfc	postinc2,f,c
 27985  013644  22DE               	addwfc	postinc2,f,c
 27986  013646  22DE               	addwfc	postinc2,f,c
 27987                           
 27988                           ;stkvar	_prod @ sp[(-13)+0]
 27989  013648  50E1               	movf	fsr1l,w,c
 27990  01364A  0FF3               	addlw	-13
 27991  01364C  6ED9               	movwf	fsr2l,c
 27992  01364E  50E2               	movf	fsr1h,w,c
 27993  013650  6EDA               	movwf	fsr2h,c
 27994  013652  0EFF               	movlw	255
 27995  013654  22DA               	addwfc	fsr2h,f,c
 27996                           
 27997                           ;stkvar	_temp @ sp[(-13)+8]
 27998  013656  0EFC               	movlw	252
 27999  013658  24E1               	addwf	fsr1l,w,c
 28000  01365A  6EE9               	movwf	fsr0l,c
 28001  01365C  0EFF               	movlw	255
 28002  01365E  20E2               	addwfc	fsr1h,w,c
 28003  013660  6EEA               	movwf	fsr0h,c
 28004  013662  50EF               	movf	indf0,w,c
 28005  013664  26DE               	addwf	postinc2,f,c
 28006  013666  0E00               	movlw	0
 28007  013668  22DE               	addwfc	postinc2,f,c
 28008  01366A  22DE               	addwfc	postinc2,f,c
 28009  01366C  22DE               	addwfc	postinc2,f,c
 28010                           
 28011                           ;stkvar	_grs @ sp[(-13)+4]
 28012  01366E  50E1               	movf	fsr1l,w,c
 28013  013670  0FF7               	addlw	-9
 28014  013672  6ED9               	movwf	fsr2l,c
 28015  013674  50E2               	movf	fsr1h,w,c
 28016  013676  6EDA               	movwf	fsr2h,c
 28017  013678  0EFF               	movlw	255
 28018  01367A  22DA               	addwfc	fsr2h,f,c
 28019  01367C  0E08               	movlw	8
 28020  01367E                     u6755:
 28021  01367E  90D8               	bcf	status,0,c
 28022  013680  36DE               	rlcf	postinc2,f,c
 28023  013682  36DE               	rlcf	postinc2,f,c
 28024  013684  36DE               	rlcf	postinc2,f,c
 28025  013686  36DD               	rlcf	postdec2,f,c
 28026  013688  52DD               	movf	postdec2,f,c
 28027  01368A  52DD               	movf	postdec2,f,c
 28028  01368C  2EE8               	decfsz	wreg,f,c
 28029  01368E  D7F7               	goto	u6755
 28030                           
 28031                           ;stkvar	_b @ sp[(-13)+-4]
 28032  013690  0EF0               	movlw	240
 28033  013692  24E1               	addwf	fsr1l,w,c
 28034  013694  6ED9               	movwf	fsr2l,c
 28035  013696  0EFF               	movlw	255
 28036  013698  20E2               	addwfc	fsr1h,w,c
 28037  01369A  6EDA               	movwf	fsr2h,c
 28038  01369C  50DF               	movf	indf2,w,c
 28039  01369E  6E31               	movwf	(btemp+11)^0,c
 28040                           
 28041                           ;stkvar	_a @ sp[(-13)+-8]
 28042  0136A0  0EEB               	movlw	-21
 28043  0136A2  50E3               	movf	plusw1,w,c
 28044  0136A4  0231               	mulwf	(btemp+11)^0,c
 28045                           
 28046                           ;stkvar	_temp @ sp[(-13)+8]
 28047  0136A6  0EFB               	movlw	-5
 28048  0136A8  006F FFCF FFE3     	movff	prodl,plusw1
 28049  0136AE  0EFC               	movlw	-4
 28050  0136B0  006F FFD3 FFE3     	movff	prodh,plusw1
 28051                           
 28052                           ;stkvar	_temp @ sp[(-13)+8]
 28053  0136B6  0EFB               	movlw	-5
 28054  0136B8  006F FF8C  F030    	movff	plusw1,btemp+10
 28055  0136BE  0EFC               	movlw	-4
 28056  0136C0  006F FF8C  F031    	movff	plusw1,btemp+11
 28057                           
 28058                           ;stkvar	_grs @ sp[(-13)+4]
 28059  0136C6  50E1               	movf	fsr1l,w,c
 28060  0136C8  0FF7               	addlw	-9
 28061  0136CA  6ED9               	movwf	fsr2l,c
 28062  0136CC  50E2               	movf	fsr1h,w,c
 28063  0136CE  6EDA               	movwf	fsr2h,c
 28064  0136D0  0EFF               	movlw	255
 28065  0136D2  22DA               	addwfc	fsr2h,f,c
 28066  0136D4  5030               	movf	(btemp+10)^0,w,c
 28067  0136D6  26DE               	addwf	postinc2,f,c
 28068  0136D8  5031               	movf	(btemp+11)^0,w,c
 28069  0136DA  22DE               	addwfc	postinc2,f,c
 28070  0136DC  0E00               	movlw	0
 28071  0136DE  22DE               	addwfc	postinc2,f,c
 28072  0136E0  22DE               	addwfc	postinc2,f,c
 28073                           
 28074                           ;stkvar	_b @ sp[(-13)+-4]
 28075  0136E2  0EEF               	movlw	-17
 28076  0136E4  006F FF8C  F031    	movff	plusw1,btemp+11
 28077                           
 28078                           ;stkvar	_a @ sp[(-13)+-8]
 28079  0136EA  0EEC               	movlw	236
 28080  0136EC  24E1               	addwf	fsr1l,w,c
 28081  0136EE  6ED9               	movwf	fsr2l,c
 28082  0136F0  0EFF               	movlw	255
 28083  0136F2  20E2               	addwfc	fsr1h,w,c
 28084  0136F4  6EDA               	movwf	fsr2h,c
 28085  0136F6  50DF               	movf	indf2,w,c
 28086  0136F8  0231               	mulwf	(btemp+11)^0,c
 28087                           
 28088                           ;stkvar	_temp @ sp[(-13)+8]
 28089  0136FA  0EFB               	movlw	-5
 28090  0136FC  006F FFCF FFE3     	movff	prodl,plusw1
 28091  013702  0EFC               	movlw	-4
 28092  013704  006F FFD3 FFE3     	movff	prodh,plusw1
 28093                           
 28094                           ;stkvar	_temp @ sp[(-13)+8]
 28095  01370A  0EFB               	movlw	-5
 28096  01370C  006F FF8C  F030    	movff	plusw1,btemp+10
 28097  013712  0EFC               	movlw	-4
 28098  013714  006F FF8C  F031    	movff	plusw1,btemp+11
 28099                           
 28100                           ;stkvar	_grs @ sp[(-13)+4]
 28101  01371A  50E1               	movf	fsr1l,w,c
 28102  01371C  0FF7               	addlw	-9
 28103  01371E  6ED9               	movwf	fsr2l,c
 28104  013720  50E2               	movf	fsr1h,w,c
 28105  013722  6EDA               	movwf	fsr2h,c
 28106  013724  0EFF               	movlw	255
 28107  013726  22DA               	addwfc	fsr2h,f,c
 28108  013728  5030               	movf	(btemp+10)^0,w,c
 28109  01372A  26DE               	addwf	postinc2,f,c
 28110  01372C  5031               	movf	(btemp+11)^0,w,c
 28111  01372E  22DE               	addwfc	postinc2,f,c
 28112  013730  0E00               	movlw	0
 28113  013732  22DE               	addwfc	postinc2,f,c
 28114  013734  22DE               	addwfc	postinc2,f,c
 28115                           
 28116                           ;stkvar	_grs @ sp[(-13)+4]
 28117  013736  50E1               	movf	fsr1l,w,c
 28118  013738  0FF7               	addlw	-9
 28119  01373A  6ED9               	movwf	fsr2l,c
 28120  01373C  50E2               	movf	fsr1h,w,c
 28121  01373E  6EDA               	movwf	fsr2h,c
 28122  013740  0EFF               	movlw	255
 28123  013742  22DA               	addwfc	fsr2h,f,c
 28124  013744  0E08               	movlw	8
 28125  013746                     u6765:
 28126  013746  90D8               	bcf	status,0,c
 28127  013748  36DE               	rlcf	postinc2,f,c
 28128  01374A  36DE               	rlcf	postinc2,f,c
 28129  01374C  36DE               	rlcf	postinc2,f,c
 28130  01374E  36DD               	rlcf	postdec2,f,c
 28131  013750  52DD               	movf	postdec2,f,c
 28132  013752  52DD               	movf	postdec2,f,c
 28133  013754  2EE8               	decfsz	wreg,f,c
 28134  013756  D7F7               	goto	u6765
 28135                           
 28136                           ;stkvar	_b @ sp[(-13)+-4]
 28137  013758  0EEF               	movlw	-17
 28138  01375A  006F FF8C  F031    	movff	plusw1,btemp+11
 28139                           
 28140                           ;stkvar	_a @ sp[(-13)+-8]
 28141  013760  0EEB               	movlw	-21
 28142  013762  50E3               	movf	plusw1,w,c
 28143  013764  0231               	mulwf	(btemp+11)^0,c
 28144                           
 28145                           ;stkvar	_temp @ sp[(-13)+8]
 28146  013766  0EFB               	movlw	-5
 28147  013768  006F FFCF FFE3     	movff	prodl,plusw1
 28148  01376E  0EFC               	movlw	-4
 28149  013770  006F FFD3 FFE3     	movff	prodh,plusw1
 28150                           
 28151                           ;stkvar	_temp @ sp[(-13)+8]
 28152  013776  0EFB               	movlw	-5
 28153  013778  006F FF8C  F030    	movff	plusw1,btemp+10
 28154  01377E  0EFC               	movlw	-4
 28155  013780  006F FF8C  F031    	movff	plusw1,btemp+11
 28156                           
 28157                           ;stkvar	_grs @ sp[(-13)+4]
 28158  013786  50E1               	movf	fsr1l,w,c
 28159  013788  0FF7               	addlw	-9
 28160  01378A  6ED9               	movwf	fsr2l,c
 28161  01378C  50E2               	movf	fsr1h,w,c
 28162  01378E  6EDA               	movwf	fsr2h,c
 28163  013790  0EFF               	movlw	255
 28164  013792  22DA               	addwfc	fsr2h,f,c
 28165  013794  5030               	movf	(btemp+10)^0,w,c
 28166  013796  26DE               	addwf	postinc2,f,c
 28167  013798  5031               	movf	(btemp+11)^0,w,c
 28168  01379A  22DE               	addwfc	postinc2,f,c
 28169  01379C  0E00               	movlw	0
 28170  01379E  22DE               	addwfc	postinc2,f,c
 28171  0137A0  22DE               	addwfc	postinc2,f,c
 28172                           
 28173                           ;stkvar	_b @ sp[(-13)+-4]
 28174  0137A2  0EF0               	movlw	240
 28175  0137A4  24E1               	addwf	fsr1l,w,c
 28176  0137A6  6ED9               	movwf	fsr2l,c
 28177  0137A8  0EFF               	movlw	255
 28178  0137AA  20E2               	addwfc	fsr1h,w,c
 28179  0137AC  6EDA               	movwf	fsr2h,c
 28180  0137AE  50DF               	movf	indf2,w,c
 28181  0137B0  6E31               	movwf	(btemp+11)^0,c
 28182                           
 28183                           ;stkvar	_a @ sp[(-13)+-8]
 28184  0137B2  0EED               	movlw	237
 28185  0137B4  24E1               	addwf	fsr1l,w,c
 28186  0137B6  6ED9               	movwf	fsr2l,c
 28187  0137B8  0EFF               	movlw	255
 28188  0137BA  20E2               	addwfc	fsr1h,w,c
 28189  0137BC  6EDA               	movwf	fsr2h,c
 28190  0137BE  50DF               	movf	indf2,w,c
 28191  0137C0  0231               	mulwf	(btemp+11)^0,c
 28192                           
 28193                           ;stkvar	_temp @ sp[(-13)+8]
 28194  0137C2  0EFB               	movlw	-5
 28195  0137C4  006F FFCF FFE3     	movff	prodl,plusw1
 28196  0137CA  0EFC               	movlw	-4
 28197  0137CC  006F FFD3 FFE3     	movff	prodh,plusw1
 28198                           
 28199                           ;stkvar	_temp @ sp[(-13)+8]
 28200  0137D2  0EFB               	movlw	-5
 28201  0137D4  006F FF8C  F030    	movff	plusw1,btemp+10
 28202  0137DA  0EFC               	movlw	-4
 28203  0137DC  006F FF8C  F031    	movff	plusw1,btemp+11
 28204                           
 28205                           ;stkvar	_prod @ sp[(-13)+0]
 28206  0137E2  50E1               	movf	fsr1l,w,c
 28207  0137E4  0FF3               	addlw	-13
 28208  0137E6  6ED9               	movwf	fsr2l,c
 28209  0137E8  50E2               	movf	fsr1h,w,c
 28210  0137EA  6EDA               	movwf	fsr2h,c
 28211  0137EC  0EFF               	movlw	255
 28212  0137EE  22DA               	addwfc	fsr2h,f,c
 28213  0137F0  5030               	movf	(btemp+10)^0,w,c
 28214  0137F2  26DE               	addwf	postinc2,f,c
 28215  0137F4  5031               	movf	(btemp+11)^0,w,c
 28216  0137F6  22DE               	addwfc	postinc2,f,c
 28217  0137F8  0E00               	movlw	0
 28218  0137FA  22DE               	addwfc	postinc2,f,c
 28219  0137FC  22DE               	addwfc	postinc2,f,c
 28220                           
 28221                           ;stkvar	_b @ sp[(-13)+-4]
 28222  0137FE  0EF1               	movlw	241
 28223  013800  24E1               	addwf	fsr1l,w,c
 28224  013802  6ED9               	movwf	fsr2l,c
 28225  013804  0EFF               	movlw	255
 28226  013806  20E2               	addwfc	fsr1h,w,c
 28227  013808  6EDA               	movwf	fsr2h,c
 28228  01380A  50DF               	movf	indf2,w,c
 28229  01380C  6E31               	movwf	(btemp+11)^0,c
 28230                           
 28231                           ;stkvar	_a @ sp[(-13)+-8]
 28232  01380E  0EEC               	movlw	236
 28233  013810  24E1               	addwf	fsr1l,w,c
 28234  013812  6ED9               	movwf	fsr2l,c
 28235  013814  0EFF               	movlw	255
 28236  013816  20E2               	addwfc	fsr1h,w,c
 28237  013818  6EDA               	movwf	fsr2h,c
 28238  01381A  50DF               	movf	indf2,w,c
 28239  01381C  0231               	mulwf	(btemp+11)^0,c
 28240                           
 28241                           ;stkvar	_temp @ sp[(-13)+8]
 28242  01381E  0EFB               	movlw	-5
 28243  013820  006F FFCF FFE3     	movff	prodl,plusw1
 28244  013826  0EFC               	movlw	-4
 28245  013828  006F FFD3 FFE3     	movff	prodh,plusw1
 28246                           
 28247                           ;stkvar	_temp @ sp[(-13)+8]
 28248  01382E  0EFB               	movlw	-5
 28249  013830  006F FF8C  F030    	movff	plusw1,btemp+10
 28250  013836  0EFC               	movlw	-4
 28251  013838  006F FF8C  F031    	movff	plusw1,btemp+11
 28252                           
 28253                           ;stkvar	_prod @ sp[(-13)+0]
 28254  01383E  50E1               	movf	fsr1l,w,c
 28255  013840  0FF3               	addlw	-13
 28256  013842  6ED9               	movwf	fsr2l,c
 28257  013844  50E2               	movf	fsr1h,w,c
 28258  013846  6EDA               	movwf	fsr2h,c
 28259  013848  0EFF               	movlw	255
 28260  01384A  22DA               	addwfc	fsr2h,f,c
 28261  01384C  5030               	movf	(btemp+10)^0,w,c
 28262  01384E  26DE               	addwf	postinc2,f,c
 28263  013850  5031               	movf	(btemp+11)^0,w,c
 28264  013852  22DE               	addwfc	postinc2,f,c
 28265  013854  0E00               	movlw	0
 28266  013856  22DE               	addwfc	postinc2,f,c
 28267  013858  22DE               	addwfc	postinc2,f,c
 28268                           
 28269                           ;stkvar	_b @ sp[(-13)+-4]
 28270  01385A  0EF1               	movlw	241
 28271  01385C  24E1               	addwf	fsr1l,w,c
 28272  01385E  6ED9               	movwf	fsr2l,c
 28273  013860  0EFF               	movlw	255
 28274  013862  20E2               	addwfc	fsr1h,w,c
 28275  013864  6EDA               	movwf	fsr2h,c
 28276  013866  50DF               	movf	indf2,w,c
 28277  013868  6E31               	movwf	(btemp+11)^0,c
 28278                           
 28279                           ;stkvar	_a @ sp[(-13)+-8]
 28280  01386A  0EED               	movlw	237
 28281  01386C  24E1               	addwf	fsr1l,w,c
 28282  01386E  6ED9               	movwf	fsr2l,c
 28283  013870  0EFF               	movlw	255
 28284  013872  20E2               	addwfc	fsr1h,w,c
 28285  013874  6EDA               	movwf	fsr2h,c
 28286  013876  50DF               	movf	indf2,w,c
 28287  013878  0231               	mulwf	(btemp+11)^0,c
 28288                           
 28289                           ;stkvar	_temp @ sp[(-13)+8]
 28290  01387A  0EFB               	movlw	-5
 28291  01387C  006F FFCF FFE3     	movff	prodl,plusw1
 28292  013882  0EFC               	movlw	-4
 28293  013884  006F FFD3 FFE3     	movff	prodh,plusw1
 28294                           
 28295                           ;stkvar	_temp @ sp[(-13)+8]
 28296  01388A  0EFB               	movlw	-5
 28297  01388C  006F FF8C  F030    	movff	plusw1,btemp+10
 28298  013892  0EFC               	movlw	-4
 28299  013894  006F FF8C  F031    	movff	plusw1,btemp+11
 28300  01389A  5030               	movf	(btemp+10)^0,w,c
 28301  01389C  6E2A               	movwf	(btemp+4)^0,c
 28302  01389E  5031               	movf	(btemp+11)^0,w,c
 28303  0138A0  6E2B               	movwf	(btemp+5)^0,c
 28304  0138A2  6A2C               	clrf	(btemp+6)^0,c
 28305  0138A4  6A2D               	clrf	(btemp+7)^0,c
 28306  0138A6  0060  F0B0  F02D   	movff	btemp+6,btemp+7
 28307  0138AC  0060  F0AC  F02C   	movff	btemp+5,btemp+6
 28308  0138B2  0060  F0A8  F02B   	movff	btemp+4,btemp+5
 28309  0138B8  6A2A               	clrf	(btemp+4)^0,c
 28310                           
 28311                           ;stkvar	_prod @ sp[(-13)+0]
 28312  0138BA  50E1               	movf	fsr1l,w,c
 28313  0138BC  0FF3               	addlw	-13
 28314  0138BE  6ED9               	movwf	fsr2l,c
 28315  0138C0  50E2               	movf	fsr1h,w,c
 28316  0138C2  6EDA               	movwf	fsr2h,c
 28317  0138C4  0EFF               	movlw	255
 28318  0138C6  22DA               	addwfc	fsr2h,f,c
 28319  0138C8  502A               	movf	(btemp+4)^0,w,c
 28320  0138CA  26DE               	addwf	postinc2,f,c
 28321  0138CC  502B               	movf	(btemp+5)^0,w,c
 28322  0138CE  22DE               	addwfc	postinc2,f,c
 28323  0138D0  502C               	movf	(btemp+6)^0,w,c
 28324  0138D2  22DE               	addwfc	postinc2,f,c
 28325  0138D4  502D               	movf	(btemp+7)^0,w,c
 28326  0138D6  22DE               	addwfc	postinc2,f,c
 28327                           
 28328                           ;stkvar	_prod @ sp[(-13)+0]
 28329  0138D8  50E1               	movf	fsr1l,w,c
 28330  0138DA  0FF3               	addlw	-13
 28331  0138DC  6ED9               	movwf	fsr2l,c
 28332  0138DE  50E2               	movf	fsr1h,w,c
 28333  0138E0  6EDA               	movwf	fsr2h,c
 28334  0138E2  0EFF               	movlw	255
 28335  0138E4  22DA               	addwfc	fsr2h,f,c
 28336                           
 28337                           ;stkvar	_grs @ sp[(-13)+4]
 28338  0138E6  0EFA               	movlw	250
 28339  0138E8  24E1               	addwf	fsr1l,w,c
 28340  0138EA  6EE9               	movwf	fsr0l,c
 28341  0138EC  0EFF               	movlw	255
 28342  0138EE  20E2               	addwfc	fsr1h,w,c
 28343  0138F0  6EEA               	movwf	fsr0h,c
 28344  0138F2  50EF               	movf	indf0,w,c
 28345  0138F4  26DE               	addwf	postinc2,f,c
 28346  0138F6  0E00               	movlw	0
 28347  0138F8  22DE               	addwfc	postinc2,f,c
 28348  0138FA  22DE               	addwfc	postinc2,f,c
 28349  0138FC  22DE               	addwfc	postinc2,f,c
 28350                           
 28351                           ;stkvar	_grs @ sp[(-13)+4]
 28352  0138FE  50E1               	movf	fsr1l,w,c
 28353  013900  0FF7               	addlw	-9
 28354  013902  6ED9               	movwf	fsr2l,c
 28355  013904  50E2               	movf	fsr1h,w,c
 28356  013906  6EDA               	movwf	fsr2h,c
 28357  013908  0EFF               	movlw	255
 28358  01390A  22DA               	addwfc	fsr2h,f,c
 28359  01390C  0E08               	movlw	8
 28360  01390E                     u6775:
 28361  01390E  90D8               	bcf	status,0,c
 28362  013910  36DE               	rlcf	postinc2,f,c
 28363  013912  36DE               	rlcf	postinc2,f,c
 28364  013914  36DE               	rlcf	postinc2,f,c
 28365  013916  36DD               	rlcf	postdec2,f,c
 28366  013918  52DD               	movf	postdec2,f,c
 28367  01391A  52DD               	movf	postdec2,f,c
 28368  01391C  2EE8               	decfsz	wreg,f,c
 28369  01391E  D7F7               	goto	u6775
 28370  013920  0E82               	movlw	130
 28371  013922  6E30               	movwf	(btemp+10)^0,c
 28372  013924  0EFF               	movlw	255
 28373  013926  6E31               	movwf	(btemp+11)^0,c
 28374                           
 28375                           ;stkvar	_bexp @ sp[(-13)+10]
 28376  013928  0EFD               	movlw	-3
 28377  01392A  50E3               	movf	plusw1,w,c
 28378  01392C  6E2E               	movwf	(btemp+8)^0,c
 28379  01392E  6A2F               	clrf	(btemp+9)^0,c
 28380                           
 28381                           ;stkvar	_aexp @ sp[(-13)+11]
 28382  013930  0EFE               	movlw	-2
 28383  013932  50E3               	movf	plusw1,w,c
 28384  013934  262E               	addwf	(btemp+8)^0,f,c
 28385  013936  0E00               	movlw	0
 28386  013938  222F               	addwfc	(btemp+9)^0,f,c
 28387  01393A  5030               	movf	(btemp+10)^0,w,c
 28388  01393C  262E               	addwf	(btemp+8)^0,f,c
 28389  01393E  5031               	movf	(btemp+11)^0,w,c
 28390  013940  222F               	addwfc	(btemp+9)^0,f,c
 28391                           
 28392                           ;stkvar	_temp @ sp[(-13)+8]
 28393  013942  0EFB               	movlw	-5
 28394  013944  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28395  01394A  0EFC               	movlw	-4
 28396  01394C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28397  013952  D021               	goto	l8319
 28398  013954                     l8309:
 28399                           
 28400                           ;stkvar	_prod @ sp[(-13)+0]
 28401  013954  90D8               	bcf	status,0,c
 28402  013956  0EF3               	movlw	-13
 28403  013958  36E3               	rlcf	plusw1,f,c
 28404  01395A  0EF4               	movlw	-12
 28405  01395C  36E3               	rlcf	plusw1,f,c
 28406  01395E  0EF5               	movlw	-11
 28407  013960  36E3               	rlcf	plusw1,f,c
 28408  013962  0EF6               	movlw	-10
 28409  013964  36E3               	rlcf	plusw1,f,c
 28410                           
 28411                           ;stkvar	_grs @ sp[(-13)+4]
 28412  013966  0EFA               	movlw	-6
 28413  013968  AEE3               	btfss	plusw1,7,c
 28414  01396A  D002               	goto	l8315
 28415                           
 28416                           ;stkvar	_prod @ sp[(-13)+0]
 28417  01396C  0EF3               	movlw	-13
 28418  01396E  80E3               	bsf	plusw1,0,c
 28419  013970                     l8315:
 28420                           
 28421                           ;stkvar	_grs @ sp[(-13)+4]
 28422  013970  90D8               	bcf	status,0,c
 28423  013972  0EF7               	movlw	-9
 28424  013974  36E3               	rlcf	plusw1,f,c
 28425  013976  0EF8               	movlw	-8
 28426  013978  36E3               	rlcf	plusw1,f,c
 28427  01397A  0EF9               	movlw	-7
 28428  01397C  36E3               	rlcf	plusw1,f,c
 28429  01397E  0EFA               	movlw	-6
 28430  013980  36E3               	rlcf	plusw1,f,c
 28431                           
 28432                           ;stkvar	_temp @ sp[(-13)+8]
 28433  013982  50E1               	movf	fsr1l,w,c
 28434  013984  0FFB               	addlw	-5
 28435  013986  6ED9               	movwf	fsr2l,c
 28436  013988  50E2               	movf	fsr1h,w,c
 28437  01398A  6EDA               	movwf	fsr2h,c
 28438  01398C  0EFF               	movlw	255
 28439  01398E  22DA               	addwfc	fsr2h,f,c
 28440  013990  06DE               	decf	postinc2,f,c
 28441  013992  0E00               	movlw	0
 28442  013994  5ADD               	subwfb	postdec2,f,c
 28443  013996                     l8319:
 28444                           
 28445                           ;stkvar	_prod @ sp[(-13)+0]
 28446  013996  0EF5               	movlw	-11
 28447  013998  AEE3               	btfss	plusw1,7,c
 28448  01399A  D7DC               	goto	l8309
 28449                           
 28450                           ;stkvar	_aexp @ sp[(-13)+11]
 28451  01399C  0EFE               	movlw	-2
 28452  01399E  6AE3               	clrf	plusw1,c
 28453                           
 28454                           ;stkvar	_grs @ sp[(-13)+4]
 28455  0139A0  0EFA               	movlw	-6
 28456  0139A2  AEE3               	btfss	plusw1,7,c
 28457  0139A4  D020               	goto	l8333
 28458                           
 28459                           ;stkvar	_grs @ sp[(-13)+4]
 28460  0139A6  50E1               	movf	fsr1l,w,c
 28461  0139A8  0FF7               	addlw	-9
 28462  0139AA  6ED9               	movwf	fsr2l,c
 28463  0139AC  50E2               	movf	fsr1h,w,c
 28464  0139AE  6EDA               	movwf	fsr2h,c
 28465  0139B0  0EFF               	movlw	255
 28466  0139B2  22DA               	addwfc	fsr2h,f,c
 28467  0139B4  0EFF               	movlw	255
 28468  0139B6  14DE               	andwf	postinc2,w,c
 28469  0139B8  6E2E               	movwf	(btemp+8)^0,c
 28470  0139BA  0EFF               	movlw	255
 28471  0139BC  14DE               	andwf	postinc2,w,c
 28472  0139BE  6E2F               	movwf	(btemp+9)^0,c
 28473  0139C0  0EFF               	movlw	255
 28474  0139C2  14DE               	andwf	postinc2,w,c
 28475  0139C4  6E30               	movwf	(btemp+10)^0,c
 28476  0139C6  0E7F               	movlw	127
 28477  0139C8  14DE               	andwf	postinc2,w,c
 28478  0139CA  6E31               	movwf	(btemp+11)^0,c
 28479  0139CC  502E               	movf	(btemp+8)^0,w,c
 28480  0139CE  102F               	iorwf	(btemp+9)^0,w,c
 28481  0139D0  1030               	iorwf	(btemp+10)^0,w,c
 28482  0139D2  1031               	iorwf	(btemp+11)^0,w,c
 28483  0139D4  B4D8               	btfsc	status,2,c
 28484  0139D6  D004               	goto	l8329
 28485  0139D8                     u6810:
 28486                           
 28487                           ;stkvar	_aexp @ sp[(-13)+11]
 28488  0139D8  0EFE               	movlw	-2
 28489  0139DA  6AE3               	clrf	plusw1,c
 28490  0139DC  2AE3               	incf	plusw1,f,c
 28491  0139DE  D003               	goto	l8333
 28492  0139E0                     l8329:
 28493                           
 28494                           ;stkvar	_prod @ sp[(-13)+0]
 28495  0139E0  0EF3               	movlw	-13
 28496  0139E2  B0E3               	btfsc	plusw1,0,c
 28497  0139E4  D7F9               	goto	u6810
 28498  0139E6                     l8333:
 28499                           
 28500                           ;stkvar	_aexp @ sp[(-13)+11]
 28501  0139E6  0EFE               	movlw	-2
 28502  0139E8  50E3               	movf	plusw1,w,c
 28503  0139EA  B4D8               	btfsc	status,2,c
 28504  0139EC  D036               	goto	l8343
 28505                           
 28506                           ;stkvar	_prod @ sp[(-13)+0]
 28507  0139EE  50E1               	movf	fsr1l,w,c
 28508  0139F0  0FF3               	addlw	-13
 28509  0139F2  6ED9               	movwf	fsr2l,c
 28510  0139F4  50E2               	movf	fsr1h,w,c
 28511  0139F6  6EDA               	movwf	fsr2h,c
 28512  0139F8  0EFF               	movlw	255
 28513  0139FA  22DA               	addwfc	fsr2h,f,c
 28514  0139FC  2ADE               	incf	postinc2,f,c
 28515  0139FE  0E00               	movlw	0
 28516  013A00  22DE               	addwfc	postinc2,f,c
 28517  013A02  22DE               	addwfc	postinc2,f,c
 28518  013A04  22DE               	addwfc	postinc2,f,c
 28519                           
 28520                           ;stkvar	_prod @ sp[(-13)+0]
 28521  013A06  0EF6               	movlw	-10
 28522  013A08  A0E3               	btfss	plusw1,0,c
 28523  013A0A  D027               	goto	l8343
 28524  013A0C  0E01               	movlw	1
 28525  013A0E  6E31               	movwf	(btemp+11)^0,c
 28526                           
 28527                           ;stkvar	_prod @ sp[(-13)+0]
 28528  013A10  50E1               	movf	fsr1l,w,c
 28529  013A12  0FF3               	addlw	-13
 28530  013A14  6ED9               	movwf	fsr2l,c
 28531  013A16  50E2               	movf	fsr1h,w,c
 28532  013A18  6EDA               	movwf	fsr2h,c
 28533  013A1A  0EFF               	movlw	255
 28534  013A1C  22DA               	addwfc	fsr2h,f,c
 28535  013A1E  2831               	incf	(btemp+11)^0,w,c
 28536  013A20  52DE               	movf	postinc2,f,c
 28537  013A22  D008               	goto	u6850
 28538  013A24                     u6855:
 28539  013A24  52DE               	movf	postinc2,f,c
 28540  013A26  90D8               	bcf	status,0,c
 28541  013A28  BEDC               	btfsc	preinc2,7,c
 28542  013A2A  80D8               	bsf	status,0,c
 28543  013A2C  32DD               	rrcf	postdec2,f,c
 28544  013A2E  32DD               	rrcf	postdec2,f,c
 28545  013A30  32DD               	rrcf	postdec2,f,c
 28546  013A32  32DE               	rrcf	postinc2,f,c
 28547  013A34                     u6850:
 28548  013A34  2EE8               	decfsz	wreg,f,c
 28549  013A36  D7F6               	goto	u6855
 28550                           
 28551                           ;stkvar	_temp @ sp[(-13)+8]
 28552  013A38  0EFB               	movlw	-5
 28553  013A3A  50E3               	movf	plusw1,w,c
 28554  013A3C  0F01               	addlw	1
 28555  013A3E  6E26               	movwf	btemp^0,c
 28556  013A40  0EFB               	movlw	-5
 28557  013A42  0060  F09B  FFE3   	movff	btemp,plusw1
 28558  013A48  6A26               	clrf	btemp^0,c
 28559  013A4A  0EFC               	movlw	-4
 28560  013A4C  50E3               	movf	plusw1,w,c
 28561  013A4E  2026               	addwfc	btemp^0,w,c
 28562  013A50  6E26               	movwf	btemp^0,c
 28563  013A52  0EFC               	movlw	-4
 28564  013A54  0060  F09B  FFE3   	movff	btemp,plusw1
 28565  013A5A                     l8343:
 28566                           
 28567                           ;stkvar	_temp @ sp[(-13)+8]
 28568  013A5A  0EFC               	movlw	-4
 28569  013A5C  BEE3               	btfsc	plusw1,7,c
 28570  013A5E  D020               	goto	l8347
 28571  013A60  0EFC               	movlw	-4
 28572  013A62  50E3               	movf	plusw1,w,c
 28573  013A64  E104               	bnz	u6860
 28574  013A66  0EFB               	movlw	-5
 28575  013A68  28E3               	incf	plusw1,w,c
 28576  013A6A  A0D8               	btfss	status,0,c
 28577  013A6C  D019               	goto	l8347
 28578  013A6E                     u6860:
 28579  013A6E  0E00               	movlw	0
 28580  013A70  6E2E               	movwf	(btemp+8)^0,c
 28581  013A72  0E00               	movlw	0
 28582  013A74  6E2F               	movwf	(btemp+9)^0,c
 28583  013A76  0E80               	movlw	128
 28584  013A78  6E30               	movwf	(btemp+10)^0,c
 28585  013A7A  0E7F               	movlw	127
 28586  013A7C  6E31               	movwf	(btemp+11)^0,c
 28587                           
 28588                           ;stkvar	_prod @ sp[(-13)+0]
 28589  013A7E  0EF3               	movlw	-13
 28590  013A80  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28591  013A86  0EF4               	movlw	-12
 28592  013A88  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28593  013A8E  0EF5               	movlw	-11
 28594  013A90  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 28595  013A96  0EF6               	movlw	-10
 28596  013A98  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 28597  013A9E  D044               	goto	l8363
 28598  013AA0                     l8347:
 28599                           
 28600                           ;stkvar	_temp @ sp[(-13)+8]
 28601  013AA0  0EFC               	movlw	-4
 28602  013AA2  BEE3               	btfsc	plusw1,7,c
 28603  013AA4  D007               	goto	u6870
 28604  013AA6  0EFC               	movlw	-4
 28605  013AA8  50E3               	movf	plusw1,w,c
 28606  013AAA  E10F               	bnz	l8353
 28607  013AAC  0EFB               	movlw	-5
 28608  013AAE  04E3               	decf	plusw1,w,c
 28609  013AB0  B0D8               	btfsc	status,0,c
 28610  013AB2  D00B               	goto	l8353
 28611  013AB4                     u6870:
 28612                           
 28613                           ;stkvar	_prod @ sp[(-13)+0]
 28614  013AB4  0EF3               	movlw	-13
 28615  013AB6  6AE3               	clrf	plusw1,c
 28616  013AB8  0EF4               	movlw	-12
 28617  013ABA  6AE3               	clrf	plusw1,c
 28618  013ABC  0EF5               	movlw	-11
 28619  013ABE  6AE3               	clrf	plusw1,c
 28620  013AC0  0EF6               	movlw	-10
 28621  013AC2  6AE3               	clrf	plusw1,c
 28622                           
 28623                           ;stkvar	_sign @ sp[(-13)+12]
 28624  013AC4  0EFF               	movlw	-1
 28625  013AC6  6AE3               	clrf	plusw1,c
 28626  013AC8  D02F               	goto	l8363
 28627  013ACA                     l8353:
 28628                           
 28629                           ;stkvar	_temp @ sp[(-13)+8]
 28630                           ;stkvar	_bexp @ sp[(-13)+10]
 28631  013ACA  0EFB               	movlw	-5
 28632  013ACC  006F FF8C  F026    	movff	plusw1,btemp
 28633  013AD2  0EFD               	movlw	-3
 28634  013AD4  0060  F09B  FFE3   	movff	btemp,plusw1
 28635                           
 28636                           ;stkvar	_prod @ sp[(-13)+0]
 28637  013ADA  50E1               	movf	fsr1l,w,c
 28638  013ADC  0FF3               	addlw	-13
 28639  013ADE  6ED9               	movwf	fsr2l,c
 28640  013AE0  50E2               	movf	fsr1h,w,c
 28641  013AE2  6EDA               	movwf	fsr2h,c
 28642  013AE4  0EFF               	movlw	255
 28643  013AE6  22DA               	addwfc	fsr2h,f,c
 28644  013AE8  0EFF               	movlw	255
 28645  013AEA  16DE               	andwf	postinc2,f,c
 28646  013AEC  0EFF               	movlw	255
 28647  013AEE  16DE               	andwf	postinc2,f,c
 28648  013AF0  0E7F               	movlw	127
 28649  013AF2  16DE               	andwf	postinc2,f,c
 28650  013AF4  0E00               	movlw	0
 28651  013AF6  16DE               	andwf	postinc2,f,c
 28652                           
 28653                           ;stkvar	_bexp @ sp[(-13)+10]
 28654  013AF8  0EFD               	movlw	-3
 28655  013AFA  A0E3               	btfss	plusw1,0,c
 28656  013AFC  D008               	goto	l8361
 28657                           
 28658                           ;stkvar	_prod @ sp[(-13)+0]
 28659  013AFE  0EF5               	movlw	245
 28660  013B00  24E1               	addwf	fsr1l,w,c
 28661  013B02  6ED9               	movwf	fsr2l,c
 28662  013B04  0EFF               	movlw	255
 28663  013B06  20E2               	addwfc	fsr1h,w,c
 28664  013B08  6EDA               	movwf	fsr2h,c
 28665  013B0A  0E00               	movlw	0
 28666  013B0C  8EDB               	bsf	plusw2,7,c
 28667  013B0E                     l8361:
 28668                           
 28669                           ;stkvar	_prod @ sp[(-13)+0]
 28670  013B0E  0EF6               	movlw	246
 28671  013B10  24E1               	addwf	fsr1l,w,c
 28672  013B12  6ED9               	movwf	fsr2l,c
 28673  013B14  0EFF               	movlw	255
 28674  013B16  20E2               	addwfc	fsr1h,w,c
 28675  013B18  6EDA               	movwf	fsr2h,c
 28676                           
 28677                           ;stkvar	_bexp @ sp[(-13)+10]
 28678  013B1A  0EFD               	movlw	-3
 28679  013B1C  006F FF8C  F031    	movff	plusw1,btemp+11
 28680  013B22  90D8               	bcf	status,0,c
 28681  013B24  3031               	rrcf	(btemp+11)^0,w,c
 28682  013B26  6EDF               	movwf	indf2,c
 28683  013B28                     l8363:
 28684                           
 28685                           ;stkvar	_sign @ sp[(-13)+12]
 28686  013B28  0EFF               	movlw	-1
 28687  013B2A  006F FF8C  F031    	movff	plusw1,btemp+11
 28688                           
 28689                           ;stkvar	_prod @ sp[(-13)+0]
 28690  013B30  0EF6               	movlw	246
 28691  013B32  24E1               	addwf	fsr1l,w,c
 28692  013B34  6ED9               	movwf	fsr2l,c
 28693  013B36  0EFF               	movlw	255
 28694  013B38  20E2               	addwfc	fsr1h,w,c
 28695  013B3A  6EDA               	movwf	fsr2h,c
 28696  013B3C  5031               	movf	(btemp+11)^0,w,c
 28697  013B3E  12DF               	iorwf	indf2,f,c
 28698                           
 28699                           ;stkvar	_prod @ sp[(-13)+0]
 28700  013B40  0EF3               	movlw	-13
 28701  013B42  006F FF8C  F026    	movff	plusw1,btemp
 28702  013B48  0EF4               	movlw	-12
 28703  013B4A  006F FF8C  F027    	movff	plusw1,btemp+1
 28704  013B50  0EF5               	movlw	-11
 28705  013B52  006F FF8C  F028    	movff	plusw1,btemp+2
 28706  013B58  0EF6               	movlw	-10
 28707  013B5A  006F FF8C  F029    	movff	plusw1,btemp+3
 28708  013B60                     l3014:
 28709                           
 28710                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28711  013B60  0EEB               	movlw	235
 28712  013B62  26E1               	addwf	fsr1l,f,c
 28713  013B64  0EFF               	movlw	255
 28714  013B66  22E2               	addwfc	fsr1h,f,c
 28715  013B68  0012               	return		;funcret
 28716  013B6A                     __end_of___flmul:
 28717                           	opt callstack 0
 28718                           
 28719 ;; *************** function _SYSTEM_Initialize *****************
 28720 ;; Defined at:
 28721 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28722 ;; Parameters:    Size  Location     Type
 28723 ;;		None
 28724 ;; Auto vars:     Size  Location     Type
 28725 ;;		None
 28726 ;; Return value:  Size  Location     Type
 28727 ;;                  1  [STACK] void 
 28728 ;; Registers used:
 28729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28730 ;; Tracked objects:
 28731 ;;		On entry : 0/0
 28732 ;;		On exit  : 3F/3C
 28733 ;;		Unchanged: 0/0
 28734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28739 ;;Total ram usage:        0 bytes
 28740 ;; Hardware stack levels used:    1
 28741 ;; Hardware stack levels required when called:   17
 28742 ;; This function calls:
 28743 ;;		_ADCC_Initialize
 28744 ;;		_CLKREF_Initialize
 28745 ;;		_DMA1_Initialize
 28746 ;;		_DMA2_Initialize
 28747 ;;		_EXT_INT_Initialize
 28748 ;;		_FVR_Initialize
 28749 ;;		_INTERRUPT_Initialize
 28750 ;;		_OSCILLATOR_Initialize
 28751 ;;		_PIN_MANAGER_Initialize
 28752 ;;		_PMD_Initialize
 28753 ;;		_PWM8_Initialize
 28754 ;;		_SPI1_Initialize
 28755 ;;		_TMR2_Initialize
 28756 ;;		_TMR3_Initialize
 28757 ;;		_TMR5_Initialize
 28758 ;;		_TMR6_Initialize
 28759 ;;		_UART1_Initialize
 28760 ;;		_UART2_Initialize
 28761 ;; This function is called by:
 28762 ;;		_main
 28763 ;; This function uses a reentrant model
 28764 ;;
 28765                           
 28766                           	psect	text107
 28767  01AE12                     __ptext107:
 28768                           	opt callstack 0
 28769  01AE12                     _SYSTEM_Initialize:
 28770                           	opt callstack 13
 28771                           
 28772                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28773                           
 28774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28775                           ;incstack = 0
 28776  01AE12  EC17  F0D5         	call	_INTERRUPT_Initialize	;wreg free
 28777                           
 28778                           ; BSR set to: 57
 28779                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28780  01AE16  EC44  F0DD         	call	_PMD_Initialize	;wreg free
 28781                           
 28782                           ; BSR set to: 57
 28783                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28784  01AE1A  EC5A  F0D2         	call	_PIN_MANAGER_Initialize	;wreg free
 28785                           
 28786                           ; BSR set to: 58
 28787                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28788  01AE1E  EC39  F0DD         	call	_OSCILLATOR_Initialize	;wreg free
 28789                           
 28790                           ; BSR set to: 57
 28791                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28792  01AE22  ECC7  F0DD         	call	_FVR_Initialize	;wreg free
 28793                           
 28794                           ; BSR set to: 62
 28795                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28796  01AE26  ECAD  F0D4         	call	_ADCC_Initialize	;wreg free
 28797                           
 28798                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28799  01AE2A  EC17  F0DD         	call	_TMR2_Initialize	;wreg free
 28800                           
 28801                           ; BSR set to: 57
 28802                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28803  01AE2E  EC2E  F0DD         	call	_PWM8_Initialize	;wreg free
 28804                           
 28805                           ; BSR set to: 63
 28806                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28807  01AE32  ECA8  F0D9         	call	_EXT_INT_Initialize	;wreg free
 28808                           
 28809                           ; BSR set to: 57
 28810                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28811  01AE36  EC94  F0DA         	call	_TMR6_Initialize	;wreg free
 28812                           
 28813                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28814  01AE3A  ECDE  F0D7         	call	_TMR3_Initialize	;wreg free
 28815                           
 28816                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28817  01AE3E  ECBB  F0D7         	call	_TMR5_Initialize	;wreg free
 28818                           
 28819                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28820  01AE42  EC98  F0D7         	call	_UART1_Initialize	;wreg free
 28821                           
 28822                           ; BSR set to: 57
 28823                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28824  01AE46  ECDE  F0D5         	call	_UART2_Initialize	;wreg free
 28825                           
 28826                           ; BSR set to: 57
 28827                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28828  01AE4A  EC23  F0DD         	call	_SPI1_Initialize	;wreg free
 28829                           
 28830                           ; BSR set to: 61
 28831                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28832  01AE4E  EC3A  F0D6         	call	_DMA2_Initialize	;wreg free
 28833                           
 28834                           ; BSR set to: 59
 28835                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28836  01AE52  EC78  F0D4         	call	_DMA1_Initialize	;wreg free
 28837                           
 28838                           ; BSR set to: 59
 28839                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28840  01AE56  EC9B  F0DD         	call	_CLKREF_Initialize	;wreg free
 28841                           
 28842                           ; BSR set to: 60
 28843                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28844  01AE5A  0012               	return		;funcret
 28845  01AE5C                     __end_of_SYSTEM_Initialize:
 28846                           	opt callstack 0
 28847                           
 28848 ;; *************** function _UART2_Initialize *****************
 28849 ;; Defined at:
 28850 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28851 ;; Parameters:    Size  Location     Type
 28852 ;;		None
 28853 ;; Auto vars:     Size  Location     Type
 28854 ;;		None
 28855 ;; Return value:  Size  Location     Type
 28856 ;;                  1  [STACK] void 
 28857 ;; Registers used:
 28858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28859 ;; Tracked objects:
 28860 ;;		On entry : 3F/39
 28861 ;;		On exit  : 3F/39
 28862 ;;		Unchanged: 0/0
 28863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28868 ;;Total ram usage:        0 bytes
 28869 ;; Hardware stack levels used:    1
 28870 ;; Hardware stack levels required when called:   16
 28871 ;; This function calls:
 28872 ;;		_UART2_SetRxInterruptHandler
 28873 ;;		_UART2_SetTxInterruptHandler
 28874 ;; This function is called by:
 28875 ;;		_SYSTEM_Initialize
 28876 ;; This function uses a reentrant model
 28877 ;;
 28878                           
 28879                           	psect	text108
 28880  01ABBC                     __ptext108:
 28881                           	opt callstack 0
 28882  01ABBC                     _UART2_Initialize:
 28883                           	opt callstack 13
 28884                           
 28885                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28886                           
 28887                           ; BSR set to: 60
 28888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28889                           ;incstack = 0
 28890  01ABBC  0139               	movlb	57	; () banked
 28891  01ABBE  9596               	bcf	150,2,b	;volatile
 28892                           
 28893                           ; BSR set to: 57
 28894                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28895  01ABC0  0EA8               	movlw	low _UART2_Receive_ISR
 28896  01ABC2  6EE6               	movwf	postinc1,c
 28897  01ABC4  0EB9               	movlw	high _UART2_Receive_ISR
 28898  01ABC6  6EE6               	movwf	postinc1,c
 28899  01ABC8  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28900  01ABCA  6EE6               	movwf	postinc1,c
 28901  01ABCC  EC0D  F0DB         	call	_UART2_SetRxInterruptHandler	;wreg free
 28902                           
 28903                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28904  01ABD0  0139               	movlb	57	; () banked
 28905  01ABD2  9796               	bcf	150,3,b	;volatile
 28906                           
 28907                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28908  01ABD4  0EFC               	movlw	low _UART2_Transmit_ISR
 28909  01ABD6  6EE6               	movwf	postinc1,c
 28910  01ABD8  0EB4               	movlw	high _UART2_Transmit_ISR
 28911  01ABDA  6EE6               	movwf	postinc1,c
 28912  01ABDC  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28913  01ABDE  6EE6               	movwf	postinc1,c
 28914  01ABE0  ECF9  F0DA         	call	_UART2_SetTxInterruptHandler	;wreg free
 28915                           
 28916                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28917  01ABE4  013D               	movlb	61	; () banked
 28918  01ABE6  6BD4               	clrf	212,b	;volatile
 28919                           
 28920                           ; BSR set to: 61
 28921                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28922  01ABE8  6BD6               	clrf	214,b	;volatile
 28923                           
 28924                           ; BSR set to: 61
 28925                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28926  01ABEA  6BD8               	clrf	216,b	;volatile
 28927                           
 28928                           ; BSR set to: 61
 28929                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28930  01ABEC  0EB0               	movlw	176
 28931  01ABEE  6FDA               	movwf	218,b	;volatile
 28932                           
 28933                           ; BSR set to: 61
 28934                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28935  01ABF0  0E80               	movlw	128
 28936  01ABF2  6FDB               	movwf	219,b	;volatile
 28937                           
 28938                           ; BSR set to: 61
 28939                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28940  01ABF4  6BDC               	clrf	220,b	;volatile
 28941                           
 28942                           ; BSR set to: 61
 28943                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28944  01ABF6  0E82               	movlw	130
 28945  01ABF8  6FDD               	movwf	221,b	;volatile
 28946                           
 28947                           ; BSR set to: 61
 28948                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28949  01ABFA  0E06               	movlw	6
 28950  01ABFC  6FDE               	movwf	222,b	;volatile
 28951                           
 28952                           ; BSR set to: 61
 28953                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28954  01ABFE  6BDF               	clrf	223,b	;volatile
 28955                           
 28956                           ; BSR set to: 61
 28957                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28958  01AC00  6BE0               	clrf	224,b	;volatile
 28959                           
 28960                           ; BSR set to: 61
 28961                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28962  01AC02  6BE1               	clrf	225,b	;volatile
 28963                           
 28964                           ; BSR set to: 61
 28965                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28966  01AC04  6BE2               	clrf	226,b	;volatile
 28967                           
 28968                           ; BSR set to: 61
 28969                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28970  01AC06  6A22               	clrf	_uart2TxHead^0,c	;volatile
 28971                           
 28972                           ; BSR set to: 61
 28973                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28974  01AC08  6A21               	clrf	_uart2TxTail^0,c	;volatile
 28975                           
 28976                           ; BSR set to: 61
 28977                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28978  01AC0A  0E40               	movlw	64
 28979  01AC0C  6E20               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28980                           
 28981                           ; BSR set to: 61
 28982                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28983  01AC0E  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 28984                           
 28985                           ; BSR set to: 61
 28986                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28987  01AC10  6A1E               	clrf	_uart2RxTail^0,c	;volatile
 28988                           
 28989                           ; BSR set to: 61
 28990                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28991  01AC12  6A1D               	clrf	_uart2RxCount^0,c	;volatile
 28992                           
 28993                           ; BSR set to: 61
 28994                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28995  01AC14  0139               	movlb	57	; () banked
 28996  01AC16  8596               	bsf	150,2,b	;volatile
 28997                           
 28998                           ; BSR set to: 57
 28999                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29000  01AC18  0012               	return		;funcret
 29001  01AC1A                     __end_of_UART2_Initialize:
 29002                           	opt callstack 0
 29003                           
 29004 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29005 ;; Defined at:
 29006 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29007 ;; Parameters:    Size  Location     Type
 29008 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29009 ;;		 -> UART2_Transmit_ISR(1), 
 29010 ;; Auto vars:     Size  Location     Type
 29011 ;;		None
 29012 ;; Return value:  Size  Location     Type
 29013 ;;                  1  [STACK] void 
 29014 ;; Registers used:
 29015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29016 ;; Tracked objects:
 29017 ;;		On entry : 3F/39
 29018 ;;		On exit  : 0/0
 29019 ;;		Unchanged: 0/0
 29020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29025 ;;Total ram usage:        0 bytes
 29026 ;; Hardware stack levels used:    1
 29027 ;; Hardware stack levels required when called:   15
 29028 ;; This function calls:
 29029 ;;		Nothing
 29030 ;; This function is called by:
 29031 ;;		_UART2_Initialize
 29032 ;; This function uses a reentrant model
 29033 ;;
 29034                           
 29035                           	psect	text109
 29036  01B5F2                     __ptext109:
 29037                           	opt callstack 0
 29038  01B5F2                     _UART2_SetTxInterruptHandler:
 29039                           	opt callstack 13
 29040                           
 29041                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29042                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29043                           
 29044                           ; BSR set to: 57
 29045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29046                           ;incstack = 0
 29047  01B5F2  50E1               	movf	fsr1l,w,c
 29048  01B5F4  0FFD               	addlw	-3
 29049  01B5F6  6ED9               	movwf	fsr2l,c
 29050  01B5F8  50E2               	movf	fsr1h,w,c
 29051  01B5FA  6EDA               	movwf	fsr2h,c
 29052  01B5FC  0EFF               	movlw	255
 29053  01B5FE  22DA               	addwfc	fsr2h,f,c
 29054  01B600  006F FF78  F0AC    	movff	postinc2,_UART2_TxInterruptHandler
 29055  01B606  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler+1
 29056  01B60C  006F FF74  F0AE    	movff	postdec2,_UART2_TxInterruptHandler+2
 29057                           
 29058                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29059  01B612  52E5               	movf	postdec1,f,c
 29060  01B614  52E5               	movf	postdec1,f,c
 29061  01B616  52E5               	movf	postdec1,f,c
 29062  01B618  0012               	return		;funcret
 29063  01B61A                     __end_of_UART2_SetTxInterruptHandler:
 29064                           	opt callstack 0
 29065                           
 29066 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29067 ;; Defined at:
 29068 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29069 ;; Parameters:    Size  Location     Type
 29070 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29071 ;;		 -> UART2_Receive_ISR(1), 
 29072 ;; Auto vars:     Size  Location     Type
 29073 ;;		None
 29074 ;; Return value:  Size  Location     Type
 29075 ;;                  1  [STACK] void 
 29076 ;; Registers used:
 29077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29078 ;; Tracked objects:
 29079 ;;		On entry : 3F/39
 29080 ;;		On exit  : 0/0
 29081 ;;		Unchanged: 0/0
 29082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;Total ram usage:        0 bytes
 29088 ;; Hardware stack levels used:    1
 29089 ;; Hardware stack levels required when called:   15
 29090 ;; This function calls:
 29091 ;;		Nothing
 29092 ;; This function is called by:
 29093 ;;		_UART2_Initialize
 29094 ;; This function uses a reentrant model
 29095 ;;
 29096                           
 29097                           	psect	text110
 29098  01B61A                     __ptext110:
 29099                           	opt callstack 0
 29100  01B61A                     _UART2_SetRxInterruptHandler:
 29101                           	opt callstack 13
 29102                           
 29103                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29104                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29105                           
 29106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29107                           ;incstack = 0
 29108  01B61A  50E1               	movf	fsr1l,w,c
 29109  01B61C  0FFD               	addlw	-3
 29110  01B61E  6ED9               	movwf	fsr2l,c
 29111  01B620  50E2               	movf	fsr1h,w,c
 29112  01B622  6EDA               	movwf	fsr2h,c
 29113  01B624  0EFF               	movlw	255
 29114  01B626  22DA               	addwfc	fsr2h,f,c
 29115  01B628  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 29116  01B62E  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 29117  01B634  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 29118                           
 29119                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29120  01B63A  52E5               	movf	postdec1,f,c
 29121  01B63C  52E5               	movf	postdec1,f,c
 29122  01B63E  52E5               	movf	postdec1,f,c
 29123  01B640  0012               	return		;funcret
 29124  01B642                     __end_of_UART2_SetRxInterruptHandler:
 29125                           	opt callstack 0
 29126                           
 29127 ;; *************** function _UART1_Initialize *****************
 29128 ;; Defined at:
 29129 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29130 ;; Parameters:    Size  Location     Type
 29131 ;;		None
 29132 ;; Auto vars:     Size  Location     Type
 29133 ;;		None
 29134 ;; Return value:  Size  Location     Type
 29135 ;;                  1  [STACK] void 
 29136 ;; Registers used:
 29137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29138 ;; Tracked objects:
 29139 ;;		On entry : 0/39
 29140 ;;		On exit  : 3F/39
 29141 ;;		Unchanged: 0/0
 29142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29147 ;;Total ram usage:        0 bytes
 29148 ;; Hardware stack levels used:    1
 29149 ;; Hardware stack levels required when called:   16
 29150 ;; This function calls:
 29151 ;;		_UART1_SetRxInterruptHandler
 29152 ;; This function is called by:
 29153 ;;		_SYSTEM_Initialize
 29154 ;; This function uses a reentrant model
 29155 ;;
 29156                           
 29157                           	psect	text111
 29158  01AF30                     __ptext111:
 29159                           	opt callstack 0
 29160  01AF30                     _UART1_Initialize:
 29161                           	opt callstack 13
 29162                           
 29163                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29164                           
 29165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29166                           ;incstack = 0
 29167  01AF30  0139               	movlb	57	; () banked
 29168  01AF32  9793               	bcf	147,3,b	;volatile
 29169                           
 29170                           ; BSR set to: 57
 29171                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29172  01AF34  0E10               	movlw	low _UART1_Receive_ISR
 29173  01AF36  6EE6               	movwf	postinc1,c
 29174  01AF38  0EB9               	movlw	high _UART1_Receive_ISR
 29175  01AF3A  6EE6               	movwf	postinc1,c
 29176  01AF3C  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29177  01AF3E  6EE6               	movwf	postinc1,c
 29178  01AF40  EC21  F0DB         	call	_UART1_SetRxInterruptHandler	;wreg free
 29179                           
 29180                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29181  01AF44  013D               	movlb	61	; () banked
 29182  01AF46  6BEC               	clrf	236,b	;volatile
 29183                           
 29184                           ; BSR set to: 61
 29185                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29186  01AF48  6BED               	clrf	237,b	;volatile
 29187                           
 29188                           ; BSR set to: 61
 29189                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29190  01AF4A  6BEE               	clrf	238,b	;volatile
 29191                           
 29192                           ; BSR set to: 61
 29193                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29194  01AF4C  6BEF               	clrf	239,b	;volatile
 29195                           
 29196                           ; BSR set to: 61
 29197                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29198  01AF4E  6BF0               	clrf	240,b	;volatile
 29199                           
 29200                           ; BSR set to: 61
 29201                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29202  01AF50  6BF1               	clrf	241,b	;volatile
 29203                           
 29204                           ; BSR set to: 61
 29205                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29206  01AF52  0EB0               	movlw	176
 29207  01AF54  6FF2               	movwf	242,b	;volatile
 29208                           
 29209                           ; BSR set to: 61
 29210                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29211  01AF56  0E80               	movlw	128
 29212  01AF58  6FF3               	movwf	243,b	;volatile
 29213                           
 29214                           ; BSR set to: 61
 29215                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29216  01AF5A  6BF4               	clrf	244,b	;volatile
 29217                           
 29218                           ; BSR set to: 61
 29219                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29220  01AF5C  0E8A               	movlw	138
 29221  01AF5E  6FF5               	movwf	245,b	;volatile
 29222                           
 29223                           ; BSR set to: 61
 29224                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29225  01AF60  6BF6               	clrf	246,b	;volatile
 29226                           
 29227                           ; BSR set to: 61
 29228                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29229  01AF62  6BF7               	clrf	247,b	;volatile
 29230                           
 29231                           ; BSR set to: 61
 29232                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29233  01AF64  6BF8               	clrf	248,b	;volatile
 29234                           
 29235                           ; BSR set to: 61
 29236                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29237  01AF66  6BF9               	clrf	249,b	;volatile
 29238                           
 29239                           ; BSR set to: 61
 29240                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29241  01AF68  6BFA               	clrf	250,b	;volatile
 29242                           
 29243                           ; BSR set to: 61
 29244                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29245  01AF6A  6A25               	clrf	_uart1RxHead^0,c	;volatile
 29246                           
 29247                           ; BSR set to: 61
 29248                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29249  01AF6C  6A24               	clrf	_uart1RxTail^0,c	;volatile
 29250                           
 29251                           ; BSR set to: 61
 29252                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29253  01AF6E  6A23               	clrf	_uart1RxCount^0,c	;volatile
 29254                           
 29255                           ; BSR set to: 61
 29256                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29257  01AF70  0139               	movlb	57	; () banked
 29258  01AF72  8793               	bsf	147,3,b	;volatile
 29259                           
 29260                           ; BSR set to: 57
 29261                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29262  01AF74  0012               	return		;funcret
 29263  01AF76                     __end_of_UART1_Initialize:
 29264                           	opt callstack 0
 29265                           
 29266 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29267 ;; Defined at:
 29268 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29271 ;;		 -> UART1_Receive_ISR(1), 
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;		None
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  1  [STACK] void 
 29276 ;; Registers used:
 29277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29278 ;; Tracked objects:
 29279 ;;		On entry : 3F/39
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29287 ;;Total ram usage:        0 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; Hardware stack levels required when called:   15
 29290 ;; This function calls:
 29291 ;;		Nothing
 29292 ;; This function is called by:
 29293 ;;		_UART1_Initialize
 29294 ;; This function uses a reentrant model
 29295 ;;
 29296                           
 29297                           	psect	text112
 29298  01B642                     __ptext112:
 29299                           	opt callstack 0
 29300  01B642                     _UART1_SetRxInterruptHandler:
 29301                           	opt callstack 13
 29302                           
 29303                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29304                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29305                           
 29306                           ; BSR set to: 57
 29307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29308                           ;incstack = 0
 29309  01B642  50E1               	movf	fsr1l,w,c
 29310  01B644  0FFD               	addlw	-3
 29311  01B646  6ED9               	movwf	fsr2l,c
 29312  01B648  50E2               	movf	fsr1h,w,c
 29313  01B64A  6EDA               	movwf	fsr2h,c
 29314  01B64C  0EFF               	movlw	255
 29315  01B64E  22DA               	addwfc	fsr2h,f,c
 29316  01B650  006F FF78  F0A9    	movff	postinc2,_UART1_RxInterruptHandler
 29317  01B656  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler+1
 29318  01B65C  006F FF74  F0AB    	movff	postdec2,_UART1_RxInterruptHandler+2
 29319                           
 29320                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29321  01B662  52E5               	movf	postdec1,f,c
 29322  01B664  52E5               	movf	postdec1,f,c
 29323  01B666  52E5               	movf	postdec1,f,c
 29324  01B668  0012               	return		;funcret
 29325  01B66A                     __end_of_UART1_SetRxInterruptHandler:
 29326                           	opt callstack 0
 29327                           
 29328 ;; *************** function _TMR6_Initialize *****************
 29329 ;; Defined at:
 29330 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29331 ;; Parameters:    Size  Location     Type
 29332 ;;		None
 29333 ;; Auto vars:     Size  Location     Type
 29334 ;;		None
 29335 ;; Return value:  Size  Location     Type
 29336 ;;                  1  [STACK] void 
 29337 ;; Registers used:
 29338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29339 ;; Tracked objects:
 29340 ;;		On entry : 3F/39
 29341 ;;		On exit  : 0/0
 29342 ;;		Unchanged: 0/0
 29343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29348 ;;Total ram usage:        0 bytes
 29349 ;; Hardware stack levels used:    1
 29350 ;; Hardware stack levels required when called:   16
 29351 ;; This function calls:
 29352 ;;		_TMR6_SetInterruptHandler
 29353 ;; This function is called by:
 29354 ;;		_SYSTEM_Initialize
 29355 ;; This function uses a reentrant model
 29356 ;;
 29357                           
 29358                           	psect	text113
 29359  01B528                     __ptext113:
 29360                           	opt callstack 0
 29361  01B528                     _TMR6_Initialize:
 29362                           	opt callstack 13
 29363                           
 29364                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29365                           
 29366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29367                           ;incstack = 0
 29368  01B528  0E01               	movlw	1
 29369  01B52A  6E96               	movwf	150,c	;volatile
 29370                           
 29371                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29372  01B52C  6A95               	clrf	149,c	;volatile
 29373                           
 29374                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29375  01B52E  6A97               	clrf	151,c	;volatile
 29376                           
 29377                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29378  01B530  0E7C               	movlw	124
 29379  01B532  6E93               	movwf	147,c	;volatile
 29380                           
 29381                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29382  01B534  6A92               	clrf	146,c	;volatile
 29383                           
 29384                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29385  01B536  0139               	movlb	57	; () banked
 29386  01B538  91A9               	bcf	169,0,b	;volatile
 29387                           
 29388                           ; BSR set to: 57
 29389                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29390  01B53A  8199               	bsf	153,0,b	;volatile
 29391                           
 29392                           ; BSR set to: 57
 29393                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29394  01B53C  0EC4               	movlw	low _TMR6_DefaultInterruptHandler
 29395  01B53E  6EE6               	movwf	postinc1,c
 29396  01B540  0EAD               	movlw	high _TMR6_DefaultInterruptHandler
 29397  01B542  6EE6               	movwf	postinc1,c
 29398  01B544  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29399  01B546  6EE6               	movwf	postinc1,c
 29400  01B548  EC35  F0DB         	call	_TMR6_SetInterruptHandler	;wreg free
 29401                           
 29402                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29403  01B54C  0EE0               	movlw	224
 29404  01B54E  6E94               	movwf	148,c	;volatile
 29405                           
 29406                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29407  01B550  0012               	return		;funcret
 29408  01B552                     __end_of_TMR6_Initialize:
 29409                           	opt callstack 0
 29410                           
 29411 ;; *************** function _TMR6_SetInterruptHandler *****************
 29412 ;; Defined at:
 29413 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29414 ;; Parameters:    Size  Location     Type
 29415 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29416 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29417 ;; Auto vars:     Size  Location     Type
 29418 ;;		None
 29419 ;; Return value:  Size  Location     Type
 29420 ;;                  1  [STACK] void 
 29421 ;; Registers used:
 29422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29423 ;; Tracked objects:
 29424 ;;		On entry : 3F/39
 29425 ;;		On exit  : 0/0
 29426 ;;		Unchanged: 0/0
 29427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29432 ;;Total ram usage:        0 bytes
 29433 ;; Hardware stack levels used:    1
 29434 ;; Hardware stack levels required when called:   15
 29435 ;; This function calls:
 29436 ;;		Nothing
 29437 ;; This function is called by:
 29438 ;;		_TMR6_Initialize
 29439 ;; This function uses a reentrant model
 29440 ;;
 29441                           
 29442                           	psect	text114
 29443  01B66A                     __ptext114:
 29444                           	opt callstack 0
 29445  01B66A                     _TMR6_SetInterruptHandler:
 29446                           	opt callstack 13
 29447                           
 29448                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29449                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29450                           
 29451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29452                           ;incstack = 0
 29453  01B66A  50E1               	movf	fsr1l,w,c
 29454  01B66C  0FFD               	addlw	-3
 29455  01B66E  6ED9               	movwf	fsr2l,c
 29456  01B670  50E2               	movf	fsr1h,w,c
 29457  01B672  6EDA               	movwf	fsr2h,c
 29458  01B674  0EFF               	movlw	255
 29459  01B676  22DA               	addwfc	fsr2h,f,c
 29460  01B678  006F FF78  F0A0    	movff	postinc2,_TMR6_InterruptHandler
 29461  01B67E  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler+1
 29462  01B684  006F FF74  F0A2    	movff	postdec2,_TMR6_InterruptHandler+2
 29463                           
 29464                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29465  01B68A  52E5               	movf	postdec1,f,c
 29466  01B68C  52E5               	movf	postdec1,f,c
 29467  01B68E  52E5               	movf	postdec1,f,c
 29468  01B690  0012               	return		;funcret
 29469  01B692                     __end_of_TMR6_SetInterruptHandler:
 29470                           	opt callstack 0
 29471                           
 29472 ;; *************** function _TMR5_Initialize *****************
 29473 ;; Defined at:
 29474 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29475 ;; Parameters:    Size  Location     Type
 29476 ;;		None
 29477 ;; Auto vars:     Size  Location     Type
 29478 ;;		None
 29479 ;; Return value:  Size  Location     Type
 29480 ;;                  1  [STACK] void 
 29481 ;; Registers used:
 29482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29483 ;; Tracked objects:
 29484 ;;		On entry : 0/39
 29485 ;;		On exit  : 0/0
 29486 ;;		Unchanged: 0/0
 29487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29492 ;;Total ram usage:        0 bytes
 29493 ;; Hardware stack levels used:    1
 29494 ;; Hardware stack levels required when called:   16
 29495 ;; This function calls:
 29496 ;;		_TMR5_SetInterruptHandler
 29497 ;; This function is called by:
 29498 ;;		_SYSTEM_Initialize
 29499 ;; This function uses a reentrant model
 29500 ;;
 29501                           
 29502                           	psect	text115
 29503  01AF76                     __ptext115:
 29504                           	opt callstack 0
 29505  01AF76                     _TMR5_Initialize:
 29506                           	opt callstack 13
 29507                           
 29508                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29509                           
 29510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29511                           ;incstack = 0
 29512  01AF76  6A9B               	clrf	155,c	;volatile
 29513                           
 29514                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29515  01AF78  6A9C               	clrf	156,c	;volatile
 29516                           
 29517                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29518  01AF7A  0E01               	movlw	1
 29519  01AF7C  6E9D               	movwf	157,c	;volatile
 29520                           
 29521                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29522  01AF7E  0E63               	movlw	99
 29523  01AF80  6E99               	movwf	153,c	;volatile
 29524                           
 29525                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29526  01AF82  0EC0               	movlw	192
 29527  01AF84  6E98               	movwf	152,c	;volatile
 29528                           
 29529                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29530  01AF86  5098               	movf	152,w,c	;volatile
 29531  01AF88  006F FE64  F026    	movff	16281,btemp	;volatile
 29532  01AF8E  6A27               	clrf	(btemp+1)^0,c
 29533  01AF90  0060  F098  F027   	movff	btemp,btemp+1
 29534  01AF96  6A26               	clrf	btemp^0,c
 29535  01AF98  1026               	iorwf	btemp^0,w,c
 29536  01AF9A  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 29537  01AF9C  5027               	movf	(btemp+1)^0,w,c
 29538  01AF9E  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29539                           
 29540                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29541  01AFA0  0139               	movlb	57	; () banked
 29542  01AFA2  9DA8               	bcf	168,6,b	;volatile
 29543                           
 29544                           ; BSR set to: 57
 29545                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29546  01AFA4  8D98               	bsf	152,6,b	;volatile
 29547                           
 29548                           ; BSR set to: 57
 29549                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29550  01AFA6  0E78               	movlw	low _TMR5_DefaultInterruptHandler
 29551  01AFA8  6EE6               	movwf	postinc1,c
 29552  01AFAA  0EB2               	movlw	high _TMR5_DefaultInterruptHandler
 29553  01AFAC  6EE6               	movwf	postinc1,c
 29554  01AFAE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29555  01AFB0  6EE6               	movwf	postinc1,c
 29556  01AFB2  EC49  F0DB         	call	_TMR5_SetInterruptHandler	;wreg free
 29557                           
 29558                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29559  01AFB6  0E31               	movlw	49
 29560  01AFB8  6E9A               	movwf	154,c	;volatile
 29561                           
 29562                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29563  01AFBA  0012               	return		;funcret
 29564  01AFBC                     __end_of_TMR5_Initialize:
 29565                           	opt callstack 0
 29566                           
 29567 ;; *************** function _TMR5_SetInterruptHandler *****************
 29568 ;; Defined at:
 29569 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29570 ;; Parameters:    Size  Location     Type
 29571 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29572 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29573 ;; Auto vars:     Size  Location     Type
 29574 ;;		None
 29575 ;; Return value:  Size  Location     Type
 29576 ;;                  1  [STACK] void 
 29577 ;; Registers used:
 29578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29579 ;; Tracked objects:
 29580 ;;		On entry : 3F/39
 29581 ;;		On exit  : 0/0
 29582 ;;		Unchanged: 0/0
 29583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29588 ;;Total ram usage:        0 bytes
 29589 ;; Hardware stack levels used:    1
 29590 ;; Hardware stack levels required when called:   15
 29591 ;; This function calls:
 29592 ;;		Nothing
 29593 ;; This function is called by:
 29594 ;;		_TMR5_Initialize
 29595 ;; This function uses a reentrant model
 29596 ;;
 29597                           
 29598                           	psect	text116
 29599  01B692                     __ptext116:
 29600                           	opt callstack 0
 29601  01B692                     _TMR5_SetInterruptHandler:
 29602                           	opt callstack 13
 29603                           
 29604                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29605                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29606                           
 29607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29608                           ;incstack = 0
 29609  01B692  50E1               	movf	fsr1l,w,c
 29610  01B694  0FFD               	addlw	-3
 29611  01B696  6ED9               	movwf	fsr2l,c
 29612  01B698  50E2               	movf	fsr1h,w,c
 29613  01B69A  6EDA               	movwf	fsr2h,c
 29614  01B69C  0EFF               	movlw	255
 29615  01B69E  22DA               	addwfc	fsr2h,f,c
 29616  01B6A0  006F FF78  F09D    	movff	postinc2,_TMR5_InterruptHandler
 29617  01B6A6  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler+1
 29618  01B6AC  006F FF74  F09F    	movff	postdec2,_TMR5_InterruptHandler+2
 29619                           
 29620                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29621  01B6B2  52E5               	movf	postdec1,f,c
 29622  01B6B4  52E5               	movf	postdec1,f,c
 29623  01B6B6  52E5               	movf	postdec1,f,c
 29624  01B6B8  0012               	return		;funcret
 29625  01B6BA                     __end_of_TMR5_SetInterruptHandler:
 29626                           	opt callstack 0
 29627                           
 29628 ;; *************** function _TMR3_Initialize *****************
 29629 ;; Defined at:
 29630 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29631 ;; Parameters:    Size  Location     Type
 29632 ;;		None
 29633 ;; Auto vars:     Size  Location     Type
 29634 ;;		None
 29635 ;; Return value:  Size  Location     Type
 29636 ;;                  1  [STACK] void 
 29637 ;; Registers used:
 29638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29639 ;; Tracked objects:
 29640 ;;		On entry : 0/39
 29641 ;;		On exit  : 0/0
 29642 ;;		Unchanged: 0/0
 29643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29648 ;;Total ram usage:        0 bytes
 29649 ;; Hardware stack levels used:    1
 29650 ;; Hardware stack levels required when called:   16
 29651 ;; This function calls:
 29652 ;;		_TMR3_SetInterruptHandler
 29653 ;; This function is called by:
 29654 ;;		_SYSTEM_Initialize
 29655 ;; This function uses a reentrant model
 29656 ;;
 29657                           
 29658                           	psect	text117
 29659  01AFBC                     __ptext117:
 29660                           	opt callstack 0
 29661  01AFBC                     _TMR3_Initialize:
 29662                           	opt callstack 13
 29663                           
 29664                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29665                           
 29666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29667                           ;incstack = 0
 29668  01AFBC  6AA7               	clrf	167,c	;volatile
 29669                           
 29670                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29671  01AFBE  6AA8               	clrf	168,c	;volatile
 29672                           
 29673                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29674  01AFC0  0E01               	movlw	1
 29675  01AFC2  6EA9               	movwf	169,c	;volatile
 29676                           
 29677                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29678  01AFC4  0E3C               	movlw	60
 29679  01AFC6  6EA5               	movwf	165,c	;volatile
 29680                           
 29681                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29682  01AFC8  0EB0               	movlw	176
 29683  01AFCA  6EA4               	movwf	164,c	;volatile
 29684                           
 29685                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29686  01AFCC  50A4               	movf	164,w,c	;volatile
 29687  01AFCE  006F FE94  F026    	movff	16293,btemp	;volatile
 29688  01AFD4  6A27               	clrf	(btemp+1)^0,c
 29689  01AFD6  0060  F098  F027   	movff	btemp,btemp+1
 29690  01AFDC  6A26               	clrf	btemp^0,c
 29691  01AFDE  1026               	iorwf	btemp^0,w,c
 29692  01AFE0  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 29693  01AFE2  5027               	movf	(btemp+1)^0,w,c
 29694  01AFE4  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29695                           
 29696                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29697  01AFE6  0139               	movlb	57	; () banked
 29698  01AFE8  9DA6               	bcf	166,6,b	;volatile
 29699                           
 29700                           ; BSR set to: 57
 29701                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29702  01AFEA  8D96               	bsf	150,6,b	;volatile
 29703                           
 29704                           ; BSR set to: 57
 29705                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29706  01AFEC  0EB8               	movlw	low _TMR3_DefaultInterruptHandler
 29707  01AFEE  6EE6               	movwf	postinc1,c
 29708  01AFF0  0EBB               	movlw	high _TMR3_DefaultInterruptHandler
 29709  01AFF2  6EE6               	movwf	postinc1,c
 29710  01AFF4  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29711  01AFF6  6EE6               	movwf	postinc1,c
 29712  01AFF8  EC5D  F0DB         	call	_TMR3_SetInterruptHandler	;wreg free
 29713                           
 29714                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29715  01AFFC  0E31               	movlw	49
 29716  01AFFE  6EA6               	movwf	166,c	;volatile
 29717                           
 29718                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29719  01B000  0012               	return		;funcret
 29720  01B002                     __end_of_TMR3_Initialize:
 29721                           	opt callstack 0
 29722                           
 29723 ;; *************** function _TMR3_SetInterruptHandler *****************
 29724 ;; Defined at:
 29725 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29726 ;; Parameters:    Size  Location     Type
 29727 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29728 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29729 ;; Auto vars:     Size  Location     Type
 29730 ;;		None
 29731 ;; Return value:  Size  Location     Type
 29732 ;;                  1  [STACK] void 
 29733 ;; Registers used:
 29734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29735 ;; Tracked objects:
 29736 ;;		On entry : 0/0
 29737 ;;		On exit  : 0/0
 29738 ;;		Unchanged: 0/0
 29739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29744 ;;Total ram usage:        0 bytes
 29745 ;; Hardware stack levels used:    1
 29746 ;; Hardware stack levels required when called:   15
 29747 ;; This function calls:
 29748 ;;		Nothing
 29749 ;; This function is called by:
 29750 ;;		_TMR3_Initialize
 29751 ;;		_init_bsoc
 29752 ;; This function uses a reentrant model
 29753 ;;
 29754                           
 29755                           	psect	text118
 29756  01B6BA                     __ptext118:
 29757                           	opt callstack 0
 29758  01B6BA                     _TMR3_SetInterruptHandler:
 29759                           	opt callstack 14
 29760                           
 29761                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29762                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29763                           
 29764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29765                           ;incstack = 0
 29766  01B6BA  50E1               	movf	fsr1l,w,c
 29767  01B6BC  0FFD               	addlw	-3
 29768  01B6BE  6ED9               	movwf	fsr2l,c
 29769  01B6C0  50E2               	movf	fsr1h,w,c
 29770  01B6C2  6EDA               	movwf	fsr2h,c
 29771  01B6C4  0EFF               	movlw	255
 29772  01B6C6  22DA               	addwfc	fsr2h,f,c
 29773  01B6C8  006F FF78  F09A    	movff	postinc2,_TMR3_InterruptHandler
 29774  01B6CE  006F FF78  F09B    	movff	postinc2,_TMR3_InterruptHandler+1
 29775  01B6D4  006F FF74  F09C    	movff	postdec2,_TMR3_InterruptHandler+2
 29776                           
 29777                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29778  01B6DA  52E5               	movf	postdec1,f,c
 29779  01B6DC  52E5               	movf	postdec1,f,c
 29780  01B6DE  52E5               	movf	postdec1,f,c
 29781  01B6E0  0012               	return		;funcret
 29782  01B6E2                     __end_of_TMR3_SetInterruptHandler:
 29783                           	opt callstack 0
 29784                           
 29785 ;; *************** function _TMR2_Initialize *****************
 29786 ;; Defined at:
 29787 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29788 ;; Parameters:    Size  Location     Type
 29789 ;;		None
 29790 ;; Auto vars:     Size  Location     Type
 29791 ;;		None
 29792 ;; Return value:  Size  Location     Type
 29793 ;;                  1  [STACK] void 
 29794 ;; Registers used:
 29795 ;;		wreg, status,2
 29796 ;; Tracked objects:
 29797 ;;		On entry : 0/3E
 29798 ;;		On exit  : 3F/39
 29799 ;;		Unchanged: 0/0
 29800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29805 ;;Total ram usage:        0 bytes
 29806 ;; Hardware stack levels used:    1
 29807 ;; Hardware stack levels required when called:   15
 29808 ;; This function calls:
 29809 ;;		Nothing
 29810 ;; This function is called by:
 29811 ;;		_SYSTEM_Initialize
 29812 ;; This function uses a reentrant model
 29813 ;;
 29814                           
 29815                           	psect	text119
 29816  01BA2E                     __ptext119:
 29817                           	opt callstack 0
 29818  01BA2E                     _TMR2_Initialize:
 29819                           	opt callstack 14
 29820                           
 29821                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29822                           
 29823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29824                           ;incstack = 0
 29825  01BA2E  0E01               	movlw	1
 29826  01BA30  6EAE               	movwf	174,c	;volatile
 29827                           
 29828                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29829  01BA32  6AAD               	clrf	173,c	;volatile
 29830                           
 29831                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29832  01BA34  6AAF               	clrf	175,c	;volatile
 29833                           
 29834                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29835  01BA36  0E63               	movlw	99
 29836  01BA38  6EAB               	movwf	171,c	;volatile
 29837                           
 29838                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29839  01BA3A  6AAA               	clrf	170,c	;volatile
 29840                           
 29841                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29842  01BA3C  0139               	movlb	57	; () banked
 29843  01BA3E  95A4               	bcf	164,2,b	;volatile
 29844                           
 29845                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29846  01BA40  0EC0               	movlw	192
 29847  01BA42  6EAC               	movwf	172,c	;volatile
 29848                           
 29849                           ; BSR set to: 57
 29850                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29851  01BA44  0012               	return		;funcret
 29852  01BA46                     __end_of_TMR2_Initialize:
 29853                           	opt callstack 0
 29854                           
 29855 ;; *************** function _SPI1_Initialize *****************
 29856 ;; Defined at:
 29857 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29858 ;; Parameters:    Size  Location     Type
 29859 ;;		None
 29860 ;; Auto vars:     Size  Location     Type
 29861 ;;		None
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  1  [STACK] void 
 29864 ;; Registers used:
 29865 ;;		wreg, status,2
 29866 ;; Tracked objects:
 29867 ;;		On entry : 3F/39
 29868 ;;		On exit  : 3F/3D
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;Total ram usage:        0 bytes
 29876 ;; Hardware stack levels used:    1
 29877 ;; Hardware stack levels required when called:   15
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_SYSTEM_Initialize
 29882 ;; This function uses a reentrant model
 29883 ;;
 29884                           
 29885                           	psect	text120
 29886  01BA46                     __ptext120:
 29887                           	opt callstack 0
 29888  01BA46                     _SPI1_Initialize:
 29889                           	opt callstack 14
 29890                           
 29891                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29892                           
 29893                           ; BSR set to: 57
 29894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29895                           ;incstack = 0
 29896  01BA46  0E40               	movlw	64
 29897  01BA48  013D               	movlb	61	; () banked
 29898  01BA4A  6F15               	movwf	21,b	;volatile
 29899                           
 29900                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29901  01BA4C  0E03               	movlw	3
 29902  01BA4E  6F16               	movwf	22,b	;volatile
 29903                           
 29904                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29905  01BA50  0E4F               	movlw	79
 29906  01BA52  6F19               	movwf	25,b	;volatile
 29907                           
 29908                           ; BSR set to: 61
 29909                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29910  01BA54  6B1C               	clrf	28,b	;volatile
 29911                           
 29912                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29913  01BA56  0E83               	movlw	131
 29914  01BA58  6F14               	movwf	20,b	;volatile
 29915                           
 29916                           ; BSR set to: 61
 29917                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29918  01BA5A  0012               	return		;funcret
 29919  01BA5C                     __end_of_SPI1_Initialize:
 29920                           	opt callstack 0
 29921                           
 29922 ;; *************** function _PWM8_Initialize *****************
 29923 ;; Defined at:
 29924 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29925 ;; Parameters:    Size  Location     Type
 29926 ;;		None
 29927 ;; Auto vars:     Size  Location     Type
 29928 ;;		None
 29929 ;; Return value:  Size  Location     Type
 29930 ;;                  1  [STACK] void 
 29931 ;; Registers used:
 29932 ;;		wreg, status,2
 29933 ;; Tracked objects:
 29934 ;;		On entry : 3F/39
 29935 ;;		On exit  : 3F/3F
 29936 ;;		Unchanged: 0/0
 29937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29942 ;;Total ram usage:        0 bytes
 29943 ;; Hardware stack levels used:    1
 29944 ;; Hardware stack levels required when called:   15
 29945 ;; This function calls:
 29946 ;;		Nothing
 29947 ;; This function is called by:
 29948 ;;		_SYSTEM_Initialize
 29949 ;; This function uses a reentrant model
 29950 ;;
 29951                           
 29952                           	psect	text121
 29953  01BA5C                     __ptext121:
 29954                           	opt callstack 0
 29955  01BA5C                     _PWM8_Initialize:
 29956                           	opt callstack 14
 29957                           
 29958                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29959                           
 29960                           ; BSR set to: 61
 29961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29962                           ;incstack = 0
 29963  01BA5C  0E80               	movlw	128
 29964  01BA5E  6E62               	movwf	98,c	;volatile
 29965                           
 29966                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29967  01BA60  6A61               	clrf	97,c	;volatile
 29968                           
 29969                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29970  01BA62  0E40               	movlw	64
 29971  01BA64  6E60               	movwf	96,c	;volatile
 29972                           
 29973                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29974  01BA66  013F               	movlb	63	; () banked
 29975  01BA68  515F               	movf	95,w,b	;volatile
 29976  01BA6A  0B3F               	andlw	-193
 29977  01BA6C  0940               	iorlw	64
 29978  01BA6E  6F5F               	movwf	95,b	;volatile
 29979                           
 29980                           ; BSR set to: 63
 29981                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29982  01BA70  0012               	return		;funcret
 29983  01BA72                     __end_of_PWM8_Initialize:
 29984                           	opt callstack 0
 29985                           
 29986 ;; *************** function _PMD_Initialize *****************
 29987 ;; Defined at:
 29988 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29989 ;; Parameters:    Size  Location     Type
 29990 ;;		None
 29991 ;; Auto vars:     Size  Location     Type
 29992 ;;		None
 29993 ;; Return value:  Size  Location     Type
 29994 ;;                  1  [STACK] void 
 29995 ;; Registers used:
 29996 ;;		None
 29997 ;; Tracked objects:
 29998 ;;		On entry : 3F/39
 29999 ;;		On exit  : 3F/39
 30000 ;;		Unchanged: 0/0
 30001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30006 ;;Total ram usage:        0 bytes
 30007 ;; Hardware stack levels used:    1
 30008 ;; Hardware stack levels required when called:   15
 30009 ;; This function calls:
 30010 ;;		Nothing
 30011 ;; This function is called by:
 30012 ;;		_SYSTEM_Initialize
 30013 ;; This function uses a reentrant model
 30014 ;;
 30015                           
 30016                           	psect	text122
 30017  01BA88                     __ptext122:
 30018                           	opt callstack 0
 30019  01BA88                     _PMD_Initialize:
 30020                           	opt callstack 14
 30021                           
 30022                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30023                           
 30024                           ; BSR set to: 63
 30025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30026                           ;incstack = 0
 30027  01BA88  0139               	movlb	57	; () banked
 30028  01BA8A  6BC0               	clrf	192,b	;volatile
 30029                           
 30030                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30031  01BA8C  6BC1               	clrf	193,b	;volatile
 30032                           
 30033                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30034  01BA8E  6BC2               	clrf	194,b	;volatile
 30035                           
 30036                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30037  01BA90  6BC3               	clrf	195,b	;volatile
 30038                           
 30039                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30040  01BA92  6BC4               	clrf	196,b	;volatile
 30041                           
 30042                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30043  01BA94  6BC5               	clrf	197,b	;volatile
 30044                           
 30045                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30046  01BA96  6BC6               	clrf	198,b	;volatile
 30047                           
 30048                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30049  01BA98  6BC7               	clrf	199,b	;volatile
 30050                           
 30051                           ; BSR set to: 57
 30052                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30053  01BA9A  0012               	return		;funcret
 30054  01BA9C                     __end_of_PMD_Initialize:
 30055                           	opt callstack 0
 30056                           
 30057 ;; *************** function _PIN_MANAGER_Initialize *****************
 30058 ;; Defined at:
 30059 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30060 ;; Parameters:    Size  Location     Type
 30061 ;;		None
 30062 ;; Auto vars:     Size  Location     Type
 30063 ;;		None
 30064 ;; Return value:  Size  Location     Type
 30065 ;;                  1  [STACK] void 
 30066 ;; Registers used:
 30067 ;;		wreg, status,2
 30068 ;; Tracked objects:
 30069 ;;		On entry : 3F/39
 30070 ;;		On exit  : 3F/3A
 30071 ;;		Unchanged: 0/0
 30072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30077 ;;Total ram usage:        0 bytes
 30078 ;; Hardware stack levels used:    1
 30079 ;; Hardware stack levels required when called:   15
 30080 ;; This function calls:
 30081 ;;		Nothing
 30082 ;; This function is called by:
 30083 ;;		_SYSTEM_Initialize
 30084 ;; This function uses a reentrant model
 30085 ;;
 30086                           
 30087                           	psect	text123
 30088  01A4B4                     __ptext123:
 30089                           	opt callstack 0
 30090  01A4B4                     _PIN_MANAGER_Initialize:
 30091                           	opt callstack 14
 30092                           
 30093                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30094                           
 30095                           ; BSR set to: 57
 30096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30097                           ;incstack = 0
 30098  01A4B4  0E07               	movlw	7
 30099  01A4B6  6EBE               	movwf	190,c	;volatile
 30100                           
 30101                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30102  01A4B8  0E80               	movlw	128
 30103  01A4BA  6EBD               	movwf	189,c	;volatile
 30104                           
 30105                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30106  01A4BC  6ABA               	clrf	186,c	;volatile
 30107                           
 30108                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30109  01A4BE  0E20               	movlw	32
 30110  01A4C0  6EBF               	movwf	191,c	;volatile
 30111                           
 30112                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30113  01A4C2  6ABB               	clrf	187,c	;volatile
 30114                           
 30115                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30116  01A4C4  0E07               	movlw	7
 30117  01A4C6  6EBC               	movwf	188,c	;volatile
 30118                           
 30119                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30120  01A4C8  6AC6               	clrf	198,c	;volatile
 30121                           
 30122                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30123  01A4CA  0E0F               	movlw	15
 30124  01A4CC  6EC7               	movwf	199,c	;volatile
 30125                           
 30126                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30127  01A4CE  68C2               	setf	194,c	;volatile
 30128                           
 30129                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30130  01A4D0  0EBF               	movlw	191
 30131  01A4D2  6EC3               	movwf	195,c	;volatile
 30132                           
 30133                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30134  01A4D4  0E90               	movlw	144
 30135  01A4D6  6EC4               	movwf	196,c	;volatile
 30136                           
 30137                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30138  01A4D8  0E0C               	movlw	12
 30139  01A4DA  6EC5               	movwf	197,c	;volatile
 30140                           
 30141                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30142  01A4DC  013A               	movlb	58	; () banked
 30143  01A4DE  6B70               	clrf	112,b	;volatile
 30144                           
 30145                           ; BSR set to: 58
 30146                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30147  01A4E0  6B60               	clrf	96,b	;volatile
 30148                           
 30149                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30150  01A4E2  0E3C               	movlw	60
 30151  01A4E4  6F50               	movwf	80,b	;volatile
 30152                           
 30153                           ; BSR set to: 58
 30154                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30155  01A4E6  6B80               	clrf	128,b	;volatile
 30156                           
 30157                           ; BSR set to: 58
 30158                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30159  01A4E8  6B90               	clrf	144,b	;volatile
 30160                           
 30161                           ; BSR set to: 58
 30162                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30163  01A4EA  6940               	setf	64,b	;volatile
 30164                           
 30165                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30166  01A4EC  0E0C               	movlw	12
 30167  01A4EE  6F71               	movwf	113,b	;volatile
 30168                           
 30169                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30170  01A4F0  0E0F               	movlw	15
 30171  01A4F2  6F91               	movwf	145,b	;volatile
 30172                           
 30173                           ; BSR set to: 58
 30174                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30175  01A4F4  6B81               	clrf	129,b	;volatile
 30176                           
 30177                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30178  01A4F6  0E83               	movlw	131
 30179  01A4F8  6F51               	movwf	81,b	;volatile
 30180                           
 30181                           ; BSR set to: 58
 30182                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30183  01A4FA  6B41               	clrf	65,b	;volatile
 30184                           
 30185                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30186  01A4FC  0E97               	movlw	151
 30187  01A4FE  6F61               	movwf	97,b	;volatile
 30188                           
 30189                           ; BSR set to: 58
 30190                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30191  01A500  6B82               	clrf	130,b	;volatile
 30192                           
 30193                           ; BSR set to: 58
 30194                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30195  01A502  6B92               	clrf	146,b	;volatile
 30196                           
 30197                           ; BSR set to: 58
 30198                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30199  01A504  6B42               	clrf	66,b	;volatile
 30200                           
 30201                           ; BSR set to: 58
 30202                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30203  01A506  6B52               	clrf	82,b	;volatile
 30204                           
 30205                           ; BSR set to: 58
 30206                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30207  01A508  6B62               	clrf	98,b	;volatile
 30208                           
 30209                           ; BSR set to: 58
 30210                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30211  01A50A  6B72               	clrf	114,b	;volatile
 30212                           
 30213                           ; BSR set to: 58
 30214                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30215  01A50C  6943               	setf	67,b	;volatile
 30216                           
 30217                           ; BSR set to: 58
 30218                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30219  01A50E  6953               	setf	83,b	;volatile
 30220                           
 30221                           ; BSR set to: 58
 30222                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30223  01A510  6963               	setf	99,b	;volatile
 30224                           
 30225                           ; BSR set to: 58
 30226                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30227  01A512  6973               	setf	115,b	;volatile
 30228                           
 30229                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30230  01A514  0E07               	movlw	7
 30231  01A516  6F83               	movwf	131,b	;volatile
 30232                           
 30233                           ; BSR set to: 58
 30234                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30235  01A518  6993               	setf	147,b	;volatile
 30236                           
 30237                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30238  01A51A  0E0F               	movlw	15
 30239  01A51C  6FE8               	movwf	232,b	;volatile
 30240                           
 30241                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30242  01A51E  0E13               	movlw	19
 30243  01A520  6FDE               	movwf	222,b	;volatile
 30244                           
 30245                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30246  01A522  0E16               	movlw	22
 30247  01A524  6F0E               	movwf	14,b	;volatile
 30248                           
 30249                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30250  01A526  0E1E               	movlw	30
 30251  01A528  6F13               	movwf	19,b	;volatile
 30252                           
 30253                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30254  01A52A  0E08               	movlw	8
 30255  01A52C  6FC0               	movwf	192,b	;volatile
 30256                           
 30257                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30258  01A52E  0E10               	movlw	16
 30259  01A530  6F19               	movwf	25,b	;volatile
 30260                           
 30261                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30262  01A532  0E09               	movlw	9
 30263  01A534  6FC1               	movwf	193,b	;volatile
 30264                           
 30265                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30266  01A536  0E1F               	movlw	31
 30267  01A538  6F15               	movwf	21,b	;volatile
 30268                           
 30269                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30270  01A53A  0E13               	movlw	19
 30271  01A53C  6F16               	movwf	22,b	;volatile
 30272                           
 30273                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30274  01A53E  0E17               	movlw	23
 30275  01A540  6FE5               	movwf	229,b	;volatile
 30276                           
 30277                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30278  01A542  0E14               	movlw	20
 30279  01A544  6FDF               	movwf	223,b	;volatile
 30280                           
 30281                           ; BSR set to: 58
 30282                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30283  01A546  0012               	return		;funcret
 30284  01A548                     __end_of_PIN_MANAGER_Initialize:
 30285                           	opt callstack 0
 30286                           
 30287 ;; *************** function _OSCILLATOR_Initialize *****************
 30288 ;; Defined at:
 30289 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30290 ;; Parameters:    Size  Location     Type
 30291 ;;		None
 30292 ;; Auto vars:     Size  Location     Type
 30293 ;;		None
 30294 ;; Return value:  Size  Location     Type
 30295 ;;                  1  [STACK] void 
 30296 ;; Registers used:
 30297 ;;		wreg, status,2
 30298 ;; Tracked objects:
 30299 ;;		On entry : 3F/3A
 30300 ;;		On exit  : 3F/39
 30301 ;;		Unchanged: 0/0
 30302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30307 ;;Total ram usage:        0 bytes
 30308 ;; Hardware stack levels used:    1
 30309 ;; Hardware stack levels required when called:   15
 30310 ;; This function calls:
 30311 ;;		Nothing
 30312 ;; This function is called by:
 30313 ;;		_SYSTEM_Initialize
 30314 ;; This function uses a reentrant model
 30315 ;;
 30316                           
 30317                           	psect	text124
 30318  01BA72                     __ptext124:
 30319                           	opt callstack 0
 30320  01BA72                     _OSCILLATOR_Initialize:
 30321                           	opt callstack 14
 30322                           
 30323                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30324                           
 30325                           ; BSR set to: 58
 30326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30327                           ;incstack = 0
 30328  01BA72  0E20               	movlw	32
 30329  01BA74  0139               	movlb	57	; () banked
 30330  01BA76  6FD9               	movwf	217,b	;volatile
 30331                           
 30332                           ; BSR set to: 57
 30333                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30334  01BA78  6BDB               	clrf	219,b	;volatile
 30335                           
 30336                           ; BSR set to: 57
 30337                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30338  01BA7A  6BDD               	clrf	221,b	;volatile
 30339                           
 30340                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30341  01BA7C  0E02               	movlw	2
 30342  01BA7E  6FDF               	movwf	223,b	;volatile
 30343                           
 30344                           ; BSR set to: 57
 30345                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30346  01BA80  6BDE               	clrf	222,b	;volatile
 30347  01BA82                     l169:
 30348                           
 30349                           ; BSR set to: 57
 30350                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30351  01BA82  B1DC               	btfsc	220,0,b	;volatile
 30352  01BA84  0012               	return	
 30353  01BA86  D7FD               	goto	l169
 30354  01BA88                     __end_of_OSCILLATOR_Initialize:
 30355                           	opt callstack 0
 30356                           
 30357 ;; *************** function _INTERRUPT_Initialize *****************
 30358 ;; Defined at:
 30359 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30360 ;; Parameters:    Size  Location     Type
 30361 ;;		None
 30362 ;; Auto vars:     Size  Location     Type
 30363 ;;  state           1  [STACK] _Bool 
 30364 ;; Return value:  Size  Location     Type
 30365 ;;                  1  [STACK] void 
 30366 ;; Registers used:
 30367 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30368 ;; Tracked objects:
 30369 ;;		On entry : 0/0
 30370 ;;		On exit  : 3F/39
 30371 ;;		Unchanged: 0/0
 30372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30377 ;;Total ram usage:        0 bytes
 30378 ;; Hardware stack levels used:    1
 30379 ;; Hardware stack levels required when called:   15
 30380 ;; This function calls:
 30381 ;;		Nothing
 30382 ;; This function is called by:
 30383 ;;		_SYSTEM_Initialize
 30384 ;; This function uses a reentrant model
 30385 ;;
 30386                           
 30387                           	psect	text125
 30388  01AA2E                     __ptext125:
 30389                           	opt callstack 0
 30390  01AA2E                     _INTERRUPT_Initialize:
 30391                           	opt callstack 0
 30392                           
 30393                           ; BSR set to: 57
 30394                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30395  01AA2E  52E6               	movf	postinc1,f,c
 30396                           
 30397                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30398                           
 30399                           ;incstack = 0
 30400  01AA30  8AD2               	bsf	210,5,c	;volatile
 30401                           
 30402                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30403  01AA32  AED2               	btfss	16338,7,c	;volatile
 30404  01AA34  D003               	goto	u9370
 30405  01AA36  6A31               	clrf	(btemp+11)^0,c
 30406  01AA38  2A31               	incf	(btemp+11)^0,f,c
 30407  01AA3A  D001               	goto	u9388
 30408  01AA3C                     u9370:
 30409  01AA3C  6A31               	clrf	(btemp+11)^0,c
 30410  01AA3E                     u9388:
 30411                           
 30412                           ;stkvar	_state @ sp[(-1)+0]
 30413  01AA3E  0EFF               	movlw	-1
 30414  01AA40  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 30415                           
 30416                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30417  01AA46  9ED2               	bcf	16338,7,c	;volatile
 30418                           
 30419                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30420  01AA48  0E55               	movlw	85
 30421  01AA4A  6ED4               	movwf	212,c	;volatile
 30422                           
 30423                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30424  01AA4C  0EAA               	movlw	170
 30425  01AA4E  6ED4               	movwf	212,c	;volatile
 30426                           
 30427                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30428  01AA50  90D4               	bcf	212,0,c	;volatile
 30429                           
 30430                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30431  01AA52  0138               	movlb	56	; () banked
 30432  01AA54  6B9F               	clrf	159,b	;volatile
 30433                           
 30434                           ; BSR set to: 56
 30435                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30436  01AA56  6B9E               	clrf	158,b	;volatile
 30437                           
 30438                           ; BSR set to: 56
 30439                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30440  01AA58  0E08               	movlw	8
 30441  01AA5A  6F9D               	movwf	157,b	;volatile
 30442                           
 30443                           ; BSR set to: 56
 30444                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30445  01AA5C  0E55               	movlw	85
 30446  01AA5E  6ED4               	movwf	212,c	;volatile
 30447                           
 30448                           ; BSR set to: 56
 30449                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30450  01AA60  0EAA               	movlw	170
 30451  01AA62  6ED4               	movwf	212,c	;volatile
 30452                           
 30453                           ; BSR set to: 56
 30454                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30455  01AA64  80D4               	bsf	212,0,c	;volatile
 30456                           
 30457                           ; BSR set to: 56
 30458                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30459                           ;stkvar	_state @ sp[(-1)+0]
 30460  01AA66  0EFF               	movlw	-1
 30461  01AA68  B0E3               	btfsc	plusw1,0,c
 30462  01AA6A  D002               	bra	u9395
 30463  01AA6C  9ED2               	bcf	16338,7,c	;volatile
 30464  01AA6E  D001               	bra	u9396
 30465  01AA70                     u9395:
 30466  01AA70  8ED2               	bsf	16338,7,c	;volatile
 30467  01AA72                     u9396:
 30468                           
 30469                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30470  01AA72  0139               	movlb	57	; () banked
 30471  01AA74  8782               	bsf	130,3,b	;volatile
 30472                           
 30473                           ; BSR set to: 57
 30474                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30475  01AA76  8382               	bsf	130,1,b	;volatile
 30476                           
 30477                           ; BSR set to: 57
 30478                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30479  01AA78  8182               	bsf	130,0,b	;volatile
 30480                           
 30481                           ; BSR set to: 57
 30482                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30483  01AA7A  8582               	bsf	130,2,b	;volatile
 30484                           
 30485                           ; BSR set to: 57
 30486                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30487  01AA7C  8786               	bsf	134,3,b	;volatile
 30488                           
 30489                           ; BSR set to: 57
 30490                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30491  01AA7E  8586               	bsf	134,2,b	;volatile
 30492                           
 30493                           ; BSR set to: 57
 30494                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30495  01AA80  8783               	bsf	131,3,b	;volatile
 30496                           
 30497                           ; BSR set to: 57
 30498                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30499  01AA82  8181               	bsf	129,0,b	;volatile
 30500                           
 30501                           ; BSR set to: 57
 30502                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30503  01AA84  9185               	bcf	133,0,b	;volatile
 30504                           
 30505                           ; BSR set to: 57
 30506                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30507  01AA86  8189               	bsf	137,0,b	;volatile
 30508                           
 30509                           ; BSR set to: 57
 30510                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30511  01AA88  9D88               	bcf	136,6,b	;volatile
 30512                           
 30513                           ; BSR set to: 57
 30514                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30515  01AA8A  8581               	bsf	129,2,b	;volatile
 30516                           
 30517                           ; BSR set to: 57
 30518                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30519  01AA8C  8781               	bsf	129,3,b	;volatile
 30520                           
 30521                           ; BSR set to: 57
 30522                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30523  01AA8E  9D86               	bcf	134,6,b	;volatile
 30524                           
 30525                           ; BSR set to: 57
 30526                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30527  01AA90  52E5               	movf	postdec1,f,c
 30528  01AA92  0012               	return		;funcret
 30529  01AA94                     __end_of_INTERRUPT_Initialize:
 30530                           	opt callstack 0
 30531                           
 30532 ;; *************** function _FVR_Initialize *****************
 30533 ;; Defined at:
 30534 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30535 ;; Parameters:    Size  Location     Type
 30536 ;;		None
 30537 ;; Auto vars:     Size  Location     Type
 30538 ;;		None
 30539 ;; Return value:  Size  Location     Type
 30540 ;;                  1  [STACK] void 
 30541 ;; Registers used:
 30542 ;;		wreg, status,2
 30543 ;; Tracked objects:
 30544 ;;		On entry : 3F/39
 30545 ;;		On exit  : 3F/3E
 30546 ;;		Unchanged: 0/0
 30547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30552 ;;Total ram usage:        0 bytes
 30553 ;; Hardware stack levels used:    1
 30554 ;; Hardware stack levels required when called:   15
 30555 ;; This function calls:
 30556 ;;		Nothing
 30557 ;; This function is called by:
 30558 ;;		_SYSTEM_Initialize
 30559 ;; This function uses a reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text126
 30563  01BB8E                     __ptext126:
 30564                           	opt callstack 0
 30565  01BB8E                     _FVR_Initialize:
 30566                           	opt callstack 14
 30567                           
 30568                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30569                           
 30570                           ; BSR set to: 57
 30571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30572                           ;incstack = 0
 30573  01BB8E  0EAF               	movlw	175
 30574  01BB90  013E               	movlb	62	; () banked
 30575  01BB92  6FC1               	movwf	193,b	;volatile
 30576                           
 30577                           ; BSR set to: 62
 30578                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30579  01BB94  0012               	return		;funcret
 30580  01BB96                     __end_of_FVR_Initialize:
 30581                           	opt callstack 0
 30582                           
 30583 ;; *************** function _EXT_INT_Initialize *****************
 30584 ;; Defined at:
 30585 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30586 ;; Parameters:    Size  Location     Type
 30587 ;;		None
 30588 ;; Auto vars:     Size  Location     Type
 30589 ;;		None
 30590 ;; Return value:  Size  Location     Type
 30591 ;;                  1  [STACK] void 
 30592 ;; Registers used:
 30593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30594 ;; Tracked objects:
 30595 ;;		On entry : 3F/3F
 30596 ;;		On exit  : 3F/39
 30597 ;;		Unchanged: 0/0
 30598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30603 ;;Total ram usage:        0 bytes
 30604 ;; Hardware stack levels used:    1
 30605 ;; Hardware stack levels required when called:   16
 30606 ;; This function calls:
 30607 ;;		_INT0_SetInterruptHandler
 30608 ;;		_INT1_SetInterruptHandler
 30609 ;; This function is called by:
 30610 ;;		_SYSTEM_Initialize
 30611 ;; This function uses a reentrant model
 30612 ;;
 30613                           
 30614                           	psect	text127
 30615  01B350                     __ptext127:
 30616                           	opt callstack 0
 30617  01B350                     _EXT_INT_Initialize:
 30618                           	opt callstack 13
 30619                           
 30620                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30621                           
 30622                           ; BSR set to: 62
 30623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30624                           ;incstack = 0
 30625  01B350  0139               	movlb	57	; () banked
 30626  01B352  91A1               	bcf	161,0,b	;volatile
 30627                           
 30628                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30629  01B354  90D2               	bcf	210,0,c	;volatile
 30630                           
 30631                           ; BSR set to: 57
 30632                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30633  01B356  0EBA               	movlw	low _INT0_DefaultInterruptHandler
 30634  01B358  6EE6               	movwf	postinc1,c
 30635  01B35A  0EBB               	movlw	high _INT0_DefaultInterruptHandler
 30636  01B35C  6EE6               	movwf	postinc1,c
 30637  01B35E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30638  01B360  6EE6               	movwf	postinc1,c
 30639  01B362  EC85  F0DB         	call	_INT0_SetInterruptHandler	;wreg free
 30640                           
 30641                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30642  01B366  0139               	movlb	57	; () banked
 30643  01B368  8191               	bsf	145,0,b	;volatile
 30644                           
 30645                           ; BSR set to: 57
 30646                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30647  01B36A  91A5               	bcf	165,0,b	;volatile
 30648                           
 30649                           ; BSR set to: 57
 30650                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30651  01B36C  92D2               	bcf	210,1,c	;volatile
 30652                           
 30653                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30654  01B36E  0EB6               	movlw	low _INT1_DefaultInterruptHandler
 30655  01B370  6EE6               	movwf	postinc1,c
 30656  01B372  0EBB               	movlw	high _INT1_DefaultInterruptHandler
 30657  01B374  6EE6               	movwf	postinc1,c
 30658  01B376  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30659  01B378  6EE6               	movwf	postinc1,c
 30660  01B37A  EC71  F0DB         	call	_INT1_SetInterruptHandler	;wreg free
 30661                           
 30662                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30663  01B37E  0139               	movlb	57	; () banked
 30664  01B380  8195               	bsf	149,0,b	;volatile
 30665                           
 30666                           ; BSR set to: 57
 30667                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30668  01B382  0012               	return		;funcret
 30669  01B384                     __end_of_EXT_INT_Initialize:
 30670                           	opt callstack 0
 30671                           
 30672 ;; *************** function _INT1_SetInterruptHandler *****************
 30673 ;; Defined at:
 30674 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30675 ;; Parameters:    Size  Location     Type
 30676 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30677 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30678 ;; Auto vars:     Size  Location     Type
 30679 ;;		None
 30680 ;; Return value:  Size  Location     Type
 30681 ;;                  1  [STACK] void 
 30682 ;; Registers used:
 30683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30684 ;; Tracked objects:
 30685 ;;		On entry : 3F/39
 30686 ;;		On exit  : 0/0
 30687 ;;		Unchanged: 0/0
 30688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30693 ;;Total ram usage:        0 bytes
 30694 ;; Hardware stack levels used:    1
 30695 ;; Hardware stack levels required when called:   15
 30696 ;; This function calls:
 30697 ;;		Nothing
 30698 ;; This function is called by:
 30699 ;;		_EXT_INT_Initialize
 30700 ;;		_start_switch_handler
 30701 ;; This function uses a reentrant model
 30702 ;;
 30703                           
 30704                           	psect	text128
 30705  01B6E2                     __ptext128:
 30706                           	opt callstack 0
 30707  01B6E2                     _INT1_SetInterruptHandler:
 30708                           	opt callstack 14
 30709                           
 30710                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30711                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30712                           
 30713                           ; BSR set to: 57
 30714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30715                           ;incstack = 0
 30716  01B6E2  50E1               	movf	fsr1l,w,c
 30717  01B6E4  0FFD               	addlw	-3
 30718  01B6E6  6ED9               	movwf	fsr2l,c
 30719  01B6E8  50E2               	movf	fsr1h,w,c
 30720  01B6EA  6EDA               	movwf	fsr2h,c
 30721  01B6EC  0EFF               	movlw	255
 30722  01B6EE  22DA               	addwfc	fsr2h,f,c
 30723  01B6F0  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 30724  01B6F6  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 30725  01B6FC  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 30726                           
 30727                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30728  01B702  52E5               	movf	postdec1,f,c
 30729  01B704  52E5               	movf	postdec1,f,c
 30730  01B706  52E5               	movf	postdec1,f,c
 30731  01B708  0012               	return		;funcret
 30732  01B70A                     __end_of_INT1_SetInterruptHandler:
 30733                           	opt callstack 0
 30734                           
 30735 ;; *************** function _INT0_SetInterruptHandler *****************
 30736 ;; Defined at:
 30737 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30738 ;; Parameters:    Size  Location     Type
 30739 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30740 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30741 ;; Auto vars:     Size  Location     Type
 30742 ;;		None
 30743 ;; Return value:  Size  Location     Type
 30744 ;;                  1  [STACK] void 
 30745 ;; Registers used:
 30746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30747 ;; Tracked objects:
 30748 ;;		On entry : 3F/39
 30749 ;;		On exit  : 0/0
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30756 ;;Total ram usage:        0 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; Hardware stack levels required when called:   15
 30759 ;; This function calls:
 30760 ;;		Nothing
 30761 ;; This function is called by:
 30762 ;;		_EXT_INT_Initialize
 30763 ;; This function uses a reentrant model
 30764 ;;
 30765                           
 30766                           	psect	text129
 30767  01B70A                     __ptext129:
 30768                           	opt callstack 0
 30769  01B70A                     _INT0_SetInterruptHandler:
 30770                           	opt callstack 13
 30771                           
 30772                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30773                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30774                           
 30775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30776                           ;incstack = 0
 30777  01B70A  50E1               	movf	fsr1l,w,c
 30778  01B70C  0FFD               	addlw	-3
 30779  01B70E  6ED9               	movwf	fsr2l,c
 30780  01B710  50E2               	movf	fsr1h,w,c
 30781  01B712  6EDA               	movwf	fsr2h,c
 30782  01B714  0EFF               	movlw	255
 30783  01B716  22DA               	addwfc	fsr2h,f,c
 30784  01B718  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 30785  01B71E  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 30786  01B724  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 30787                           
 30788                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30789  01B72A  52E5               	movf	postdec1,f,c
 30790  01B72C  52E5               	movf	postdec1,f,c
 30791  01B72E  52E5               	movf	postdec1,f,c
 30792  01B730  0012               	return		;funcret
 30793  01B732                     __end_of_INT0_SetInterruptHandler:
 30794                           	opt callstack 0
 30795                           
 30796 ;; *************** function _DMA2_Initialize *****************
 30797 ;; Defined at:
 30798 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30799 ;; Parameters:    Size  Location     Type
 30800 ;;		None
 30801 ;; Auto vars:     Size  Location     Type
 30802 ;;		None
 30803 ;; Return value:  Size  Location     Type
 30804 ;;                  1  [STACK] void 
 30805 ;; Registers used:
 30806 ;;		wreg, status,2
 30807 ;; Tracked objects:
 30808 ;;		On entry : 3F/3D
 30809 ;;		On exit  : 3F/3B
 30810 ;;		Unchanged: 0/0
 30811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30816 ;;Total ram usage:        0 bytes
 30817 ;; Hardware stack levels used:    1
 30818 ;; Hardware stack levels required when called:   15
 30819 ;; This function calls:
 30820 ;;		Nothing
 30821 ;; This function is called by:
 30822 ;;		_SYSTEM_Initialize
 30823 ;; This function uses a reentrant model
 30824 ;;
 30825                           
 30826                           	psect	text130
 30827  01AC74                     __ptext130:
 30828                           	opt callstack 0
 30829  01AC74                     _DMA2_Initialize:
 30830                           	opt callstack 14
 30831                           
 30832                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30833                           
 30834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30835                           ;incstack = 0
 30836  01AC74  0E00               	movlw	0
 30837  01AC76  013B               	movlb	59	; () banked
 30838  01AC78  6FD9               	movwf	217,b	;volatile
 30839  01AC7A  0E10               	movlw	16
 30840  01AC7C  6FDA               	movwf	218,b	;volatile
 30841  01AC7E  0E00               	movlw	0
 30842  01AC80  6FDB               	movwf	219,b	;volatile
 30843                           
 30844                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30845  01AC82  0E3F               	movlw	63
 30846  01AC84  6FD1               	movwf	209,b	;volatile
 30847  01AC86  0EBB               	movlw	187
 30848  01AC88  6FD0               	movwf	208,b	;volatile
 30849                           
 30850                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30851  01AC8A  0E03               	movlw	3
 30852  01AC8C  6FDD               	movwf	221,b	;volatile
 30853                           
 30854                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30855  01AC8E  0E00               	movlw	0
 30856  01AC90  6FD8               	movwf	216,b	;volatile
 30857  01AC92  0E01               	movlw	1
 30858  01AC94  6FD7               	movwf	215,b	;volatile
 30859                           
 30860                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30861  01AC96  0E00               	movlw	0
 30862  01AC98  6FCF               	movwf	207,b	;volatile
 30863  01AC9A  0E01               	movlw	1
 30864  01AC9C  6FCE               	movwf	206,b	;volatile
 30865                           
 30866                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30867  01AC9E  0E1C               	movlw	28
 30868  01ACA0  6FDF               	movwf	223,b	;volatile
 30869                           
 30870                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30871  01ACA2  0E3D               	movlw	61
 30872  01ACA4  6FDE               	movwf	222,b	;volatile
 30873                           
 30874                           ; BSR set to: 59
 30875                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30876  01ACA6  0139               	movlb	57	; () banked
 30877  01ACA8  97A5               	bcf	165,3,b	;volatile
 30878                           
 30879                           ; BSR set to: 57
 30880                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30881  01ACAA  95A5               	bcf	165,2,b	;volatile
 30882                           
 30883                           ; BSR set to: 57
 30884                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30885  01ACAC  9BA5               	bcf	165,5,b	;volatile
 30886                           
 30887                           ; BSR set to: 57
 30888                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30889  01ACAE  99A5               	bcf	165,4,b	;volatile
 30890                           
 30891                           ; BSR set to: 57
 30892                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30893  01ACB0  9795               	bcf	149,3,b	;volatile
 30894                           
 30895                           ; BSR set to: 57
 30896                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30897  01ACB2  9595               	bcf	149,2,b	;volatile
 30898                           
 30899                           ; BSR set to: 57
 30900                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30901  01ACB4  9B95               	bcf	149,5,b	;volatile
 30902                           
 30903                           ; BSR set to: 57
 30904                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30905  01ACB6  9995               	bcf	149,4,b	;volatile
 30906  01ACB8  9ED2               	bcf	16338,7,c	;# 
 30907  01ACBA  0139               	banksel	14831	;# 
 30908  01ACBC  0E55               	movlw	85	;# 
 30909  01ACBE  6FEF               	movwf	14831,b	;# 
 30910  01ACC0  0EAA               	movlw	170	;# 
 30911  01ACC2  6FEF               	movwf	14831,b	;# 
 30912  01ACC4  81EF               	bsf	14831,0,b	;# 
 30913  01ACC6  8ED2               	bsf	16338,7,c	;# 
 30914                           
 30915                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30916  01ACC8  013B               	movlb	59	; () banked
 30917  01ACCA  6BDC               	clrf	220,b	;volatile
 30918                           
 30919                           ; BSR set to: 59
 30920                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30921  01ACCC  0012               	return		;funcret
 30922  01ACCE                     __end_of_DMA2_Initialize:
 30923                           	opt callstack 0
 30924                           
 30925 ;; *************** function _DMA1_Initialize *****************
 30926 ;; Defined at:
 30927 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30928 ;; Parameters:    Size  Location     Type
 30929 ;;		None
 30930 ;; Auto vars:     Size  Location     Type
 30931 ;;		None
 30932 ;; Return value:  Size  Location     Type
 30933 ;;                  1  [STACK] void 
 30934 ;; Registers used:
 30935 ;;		wreg, status,2
 30936 ;; Tracked objects:
 30937 ;;		On entry : 3F/3B
 30938 ;;		On exit  : 3F/3B
 30939 ;;		Unchanged: 0/0
 30940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30945 ;;Total ram usage:        0 bytes
 30946 ;; Hardware stack levels used:    1
 30947 ;; Hardware stack levels required when called:   15
 30948 ;; This function calls:
 30949 ;;		Nothing
 30950 ;; This function is called by:
 30951 ;;		_SYSTEM_Initialize
 30952 ;; This function uses a reentrant model
 30953 ;;
 30954                           
 30955                           	psect	text131
 30956  01A8F0                     __ptext131:
 30957                           	opt callstack 0
 30958  01A8F0                     _DMA1_Initialize:
 30959                           	opt callstack 14
 30960                           
 30961                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30962                           
 30963                           ; BSR set to: 59
 30964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30965                           ;incstack = 0
 30966  01A8F0  0E00               	movlw	0
 30967  01A8F2  013B               	movlb	59	; () banked
 30968  01A8F4  6FF9               	movwf	249,b	;volatile
 30969  01A8F6  0E10               	movlw	16
 30970  01A8F8  6FFA               	movwf	250,b	;volatile
 30971  01A8FA  0E00               	movlw	0
 30972  01A8FC  6FFB               	movwf	251,b	;volatile
 30973                           
 30974                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30975  01A8FE  0E3D               	movlw	61
 30976  01A900  6FF1               	movwf	241,b	;volatile
 30977  01A902  0E11               	movlw	17
 30978  01A904  6FF0               	movwf	240,b	;volatile
 30979                           
 30980                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30981  01A906  0E03               	movlw	3
 30982  01A908  6FFD               	movwf	253,b	;volatile
 30983                           
 30984                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30985  01A90A  0E00               	movlw	0
 30986  01A90C  6FF8               	movwf	248,b	;volatile
 30987  01A90E  0E01               	movlw	1
 30988  01A910  6FF7               	movwf	247,b	;volatile
 30989                           
 30990                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30991  01A912  0E00               	movlw	0
 30992  01A914  6FEF               	movwf	239,b	;volatile
 30993  01A916  0E01               	movlw	1
 30994  01A918  6FEE               	movwf	238,b	;volatile
 30995                           
 30996                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30997  01A91A  0E15               	movlw	21
 30998  01A91C  6FFF               	movwf	255,b	;volatile
 30999                           
 31000                           ; BSR set to: 59
 31001                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31002  01A91E  6BFE               	clrf	254,b	;volatile
 31003                           
 31004                           ; BSR set to: 59
 31005                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31006  01A920  0139               	movlb	57	; () banked
 31007  01A922  93A2               	bcf	162,1,b	;volatile
 31008                           
 31009                           ; BSR set to: 57
 31010                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31011  01A924  91A2               	bcf	162,0,b	;volatile
 31012                           
 31013                           ; BSR set to: 57
 31014                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31015  01A926  97A2               	bcf	162,3,b	;volatile
 31016                           
 31017                           ; BSR set to: 57
 31018                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31019  01A928  95A2               	bcf	162,2,b	;volatile
 31020                           
 31021                           ; BSR set to: 57
 31022                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31023  01A92A  8392               	bsf	146,1,b	;volatile
 31024                           
 31025                           ; BSR set to: 57
 31026                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31027  01A92C  8192               	bsf	146,0,b	;volatile
 31028                           
 31029                           ; BSR set to: 57
 31030                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31031  01A92E  8792               	bsf	146,3,b	;volatile
 31032                           
 31033                           ; BSR set to: 57
 31034                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31035  01A930  8592               	bsf	146,2,b	;volatile
 31036                           
 31037                           ; BSR set to: 57
 31038                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31039  01A932  6BF1               	clrf	241,b	;volatile
 31040                           
 31041                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31042  01A934  0E01               	movlw	1
 31043  01A936  6FF2               	movwf	242,b	;volatile
 31044                           
 31045                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31046  01A938  0E04               	movlw	4
 31047  01A93A  6FF3               	movwf	243,b	;volatile
 31048                           
 31049                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31050  01A93C  0E02               	movlw	2
 31051  01A93E  6FF4               	movwf	244,b	;volatile
 31052                           
 31053                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31054  01A940  0E03               	movlw	3
 31055  01A942  6FF7               	movwf	247,b	;volatile
 31056  01A944  9ED2               	bcf	16338,7,c	;# 
 31057  01A946  0139               	banksel	14831	;# 
 31058  01A948  0E55               	movlw	85	;# 
 31059  01A94A  6FEF               	movwf	14831,b	;# 
 31060  01A94C  0EAA               	movlw	170	;# 
 31061  01A94E  6FEF               	movwf	14831,b	;# 
 31062  01A950  81EF               	bsf	14831,0,b	;# 
 31063  01A952  8ED2               	bsf	16338,7,c	;# 
 31064                           
 31065                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31066  01A954  013B               	movlb	59	; () banked
 31067  01A956  6BFC               	clrf	252,b	;volatile
 31068                           
 31069                           ; BSR set to: 59
 31070                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31071  01A958  0012               	return		;funcret
 31072  01A95A                     __end_of_DMA1_Initialize:
 31073                           	opt callstack 0
 31074                           
 31075 ;; *************** function _CLKREF_Initialize *****************
 31076 ;; Defined at:
 31077 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31078 ;; Parameters:    Size  Location     Type
 31079 ;;		None
 31080 ;; Auto vars:     Size  Location     Type
 31081 ;;		None
 31082 ;; Return value:  Size  Location     Type
 31083 ;;                  1  [STACK] void 
 31084 ;; Registers used:
 31085 ;;		wreg, status,2
 31086 ;; Tracked objects:
 31087 ;;		On entry : 3F/3B
 31088 ;;		On exit  : 3F/3C
 31089 ;;		Unchanged: 0/0
 31090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31095 ;;Total ram usage:        0 bytes
 31096 ;; Hardware stack levels used:    1
 31097 ;; Hardware stack levels required when called:   15
 31098 ;; This function calls:
 31099 ;;		Nothing
 31100 ;; This function is called by:
 31101 ;;		_SYSTEM_Initialize
 31102 ;; This function uses a reentrant model
 31103 ;;
 31104                           
 31105                           	psect	text132
 31106  01BB36                     __ptext132:
 31107                           	opt callstack 0
 31108  01BB36                     _CLKREF_Initialize:
 31109                           	opt callstack 14
 31110                           
 31111                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31112                           
 31113                           ; BSR set to: 59
 31114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31115                           ;incstack = 0
 31116  01BB36  013C               	movlb	60	; () banked
 31117  01BB38  6BE6               	clrf	230,b	;volatile
 31118                           
 31119                           ; BSR set to: 60
 31120                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31121  01BB3A  0E94               	movlw	148
 31122  01BB3C  6FE5               	movwf	229,b	;volatile
 31123                           
 31124                           ; BSR set to: 60
 31125                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31126  01BB3E  0012               	return		;funcret
 31127  01BB40                     __end_of_CLKREF_Initialize:
 31128                           	opt callstack 0
 31129                           
 31130 ;; *************** function _ADCC_Initialize *****************
 31131 ;; Defined at:
 31132 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31133 ;; Parameters:    Size  Location     Type
 31134 ;;		None
 31135 ;; Auto vars:     Size  Location     Type
 31136 ;;		None
 31137 ;; Return value:  Size  Location     Type
 31138 ;;                  1  [STACK] void 
 31139 ;; Registers used:
 31140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31141 ;; Tracked objects:
 31142 ;;		On entry : 3F/3E
 31143 ;;		On exit  : 0/0
 31144 ;;		Unchanged: 0/0
 31145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31150 ;;Total ram usage:        0 bytes
 31151 ;; Hardware stack levels used:    1
 31152 ;; Hardware stack levels required when called:   16
 31153 ;; This function calls:
 31154 ;;		_ADCC_SetADIInterruptHandler
 31155 ;;		_ADCC_SetADTIInterruptHandler
 31156 ;; This function is called by:
 31157 ;;		_SYSTEM_Initialize
 31158 ;; This function uses a reentrant model
 31159 ;;
 31160                           
 31161                           	psect	text133
 31162  01A95A                     __ptext133:
 31163                           	opt callstack 0
 31164  01A95A                     _ADCC_Initialize:
 31165                           	opt callstack 13
 31166                           
 31167                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31168                           
 31169                           ; BSR set to: 60
 31170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31171                           ;incstack = 0
 31172  01A95A  013E               	movlb	62	; () banked
 31173  01A95C  6BDE               	clrf	222,b	;volatile
 31174                           
 31175                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31176  01A95E  6BDF               	clrf	223,b	;volatile
 31177                           
 31178                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31179  01A960  6BE0               	clrf	224,b	;volatile
 31180                           
 31181                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31182  01A962  6BE1               	clrf	225,b	;volatile
 31183                           
 31184                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31185  01A964  6BE4               	clrf	228,b	;volatile
 31186                           
 31187                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31188  01A966  6BE5               	clrf	229,b	;volatile
 31189                           
 31190                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31191  01A968  6BEA               	clrf	234,b	;volatile
 31192                           
 31193                           ; BSR set to: 62
 31194                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31195  01A96A  0E40               	movlw	64
 31196  01A96C  6FEC               	movwf	236,b	;volatile
 31197                           
 31198                           ; BSR set to: 62
 31199                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31200  01A96E  6BF1               	clrf	241,b	;volatile
 31201                           
 31202                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31203  01A970  0E20               	movlw	32
 31204  01A972  6FF3               	movwf	243,b	;volatile
 31205                           
 31206                           ; BSR set to: 62
 31207                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31208  01A974  6BF4               	clrf	244,b	;volatile
 31209                           
 31210                           ; BSR set to: 62
 31211                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31212  01A976  6BF5               	clrf	245,b	;volatile
 31213                           
 31214                           ; BSR set to: 62
 31215                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31216  01A978  6BF6               	clrf	246,b	;volatile
 31217                           
 31218                           ; BSR set to: 62
 31219                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31220  01A97A  6BF7               	clrf	247,b	;volatile
 31221                           
 31222                           ; BSR set to: 62
 31223                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31224  01A97C  6BF9               	clrf	249,b	;volatile
 31225                           
 31226                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31227  01A97E  0E5B               	movlw	91
 31228  01A980  6FFA               	movwf	250,b	;volatile
 31229                           
 31230                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31231  01A982  0E27               	movlw	39
 31232  01A984  6FFB               	movwf	251,b	;volatile
 31233                           
 31234                           ; BSR set to: 62
 31235                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31236  01A986  6BFC               	clrf	252,b	;volatile
 31237                           
 31238                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31239  01A988  0E02               	movlw	2
 31240  01A98A  6FFD               	movwf	253,b	;volatile
 31241                           
 31242                           ; BSR set to: 62
 31243                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31244  01A98C  6BFE               	clrf	254,b	;volatile
 31245                           
 31246                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31247  01A98E  0E07               	movlw	7
 31248  01A990  6FFF               	movwf	255,b	;volatile
 31249                           
 31250                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31251  01A992  0E84               	movlw	132
 31252  01A994  6FF8               	movwf	248,b	;volatile
 31253                           
 31254                           ; BSR set to: 62
 31255                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31256  01A996  0139               	movlb	57	; () banked
 31257  01A998  95A1               	bcf	161,2,b	;volatile
 31258                           
 31259                           ; BSR set to: 57
 31260                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31261  01A99A  8591               	bsf	145,2,b	;volatile
 31262                           
 31263                           ; BSR set to: 57
 31264                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31265  01A99C  0EBC               	movlw	low _ADCC_DefaultInterruptHandler
 31266  01A99E  6EE6               	movwf	postinc1,c
 31267  01A9A0  0EBB               	movlw	high _ADCC_DefaultInterruptHandler
 31268  01A9A2  6EE6               	movwf	postinc1,c
 31269  01A9A4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31270  01A9A6  6EE6               	movwf	postinc1,c
 31271  01A9A8  ECAD  F0DB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31272                           
 31273                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31274  01A9AC  0139               	movlb	57	; () banked
 31275  01A9AE  97A1               	bcf	161,3,b	;volatile
 31276                           
 31277                           ; BSR set to: 57
 31278                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31279  01A9B0  8791               	bsf	145,3,b	;volatile
 31280                           
 31281                           ; BSR set to: 57
 31282                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31283  01A9B2  0EBC               	movlw	low _ADCC_DefaultInterruptHandler
 31284  01A9B4  6EE6               	movwf	postinc1,c
 31285  01A9B6  0EBB               	movlw	high _ADCC_DefaultInterruptHandler
 31286  01A9B8  6EE6               	movwf	postinc1,c
 31287  01A9BA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31288  01A9BC  6EE6               	movwf	postinc1,c
 31289  01A9BE  EC99  F0DB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31290                           
 31291                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31292  01A9C2  0012               	return		;funcret
 31293  01A9C4                     __end_of_ADCC_Initialize:
 31294                           	opt callstack 0
 31295                           
 31296 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31297 ;; Defined at:
 31298 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31301 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;		None
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  1  [STACK] void 
 31306 ;; Registers used:
 31307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31308 ;; Tracked objects:
 31309 ;;		On entry : 0/0
 31310 ;;		On exit  : 0/0
 31311 ;;		Unchanged: 0/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31317 ;;Total ram usage:        0 bytes
 31318 ;; Hardware stack levels used:    1
 31319 ;; Hardware stack levels required when called:   15
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_ADCC_Initialize
 31324 ;;		_start_adc_scan
 31325 ;; This function uses a reentrant model
 31326 ;;
 31327                           
 31328                           	psect	text134
 31329  01B732                     __ptext134:
 31330                           	opt callstack 0
 31331  01B732                     _ADCC_SetADTIInterruptHandler:
 31332                           	opt callstack 14
 31333                           
 31334                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31335                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31336                           
 31337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31338                           ;incstack = 0
 31339  01B732  50E1               	movf	fsr1l,w,c
 31340  01B734  0FFD               	addlw	-3
 31341  01B736  6ED9               	movwf	fsr2l,c
 31342  01B738  50E2               	movf	fsr1h,w,c
 31343  01B73A  6EDA               	movwf	fsr2h,c
 31344  01B73C  0EFF               	movlw	255
 31345  01B73E  22DA               	addwfc	fsr2h,f,c
 31346  01B740  006F FF78  F0A3    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31347  01B746  006F FF78  F0A4    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31348  01B74C  006F FF74  F0A5    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31349                           
 31350                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31351  01B752  52E5               	movf	postdec1,f,c
 31352  01B754  52E5               	movf	postdec1,f,c
 31353  01B756  52E5               	movf	postdec1,f,c
 31354  01B758  0012               	return		;funcret
 31355  01B75A                     __end_of_ADCC_SetADTIInterruptHandler:
 31356                           	opt callstack 0
 31357                           
 31358 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31359 ;; Defined at:
 31360 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31361 ;; Parameters:    Size  Location     Type
 31362 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31363 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31364 ;; Auto vars:     Size  Location     Type
 31365 ;;		None
 31366 ;; Return value:  Size  Location     Type
 31367 ;;                  1  [STACK] void 
 31368 ;; Registers used:
 31369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31370 ;; Tracked objects:
 31371 ;;		On entry : 6/0
 31372 ;;		On exit  : 0/0
 31373 ;;		Unchanged: 0/0
 31374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31379 ;;Total ram usage:        0 bytes
 31380 ;; Hardware stack levels used:    1
 31381 ;; Hardware stack levels required when called:   15
 31382 ;; This function calls:
 31383 ;;		Nothing
 31384 ;; This function is called by:
 31385 ;;		_ADCC_Initialize
 31386 ;;		_start_adc_scan
 31387 ;; This function uses a reentrant model
 31388 ;;
 31389                           
 31390                           	psect	text135
 31391  01B75A                     __ptext135:
 31392                           	opt callstack 0
 31393  01B75A                     _ADCC_SetADIInterruptHandler:
 31394                           	opt callstack 14
 31395                           
 31396                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31397                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31398                           
 31399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31400                           ;incstack = 0
 31401  01B75A  50E1               	movf	fsr1l,w,c
 31402  01B75C  0FFD               	addlw	-3
 31403  01B75E  6ED9               	movwf	fsr2l,c
 31404  01B760  50E2               	movf	fsr1h,w,c
 31405  01B762  6EDA               	movwf	fsr2h,c
 31406  01B764  0EFF               	movlw	255
 31407  01B766  22DA               	addwfc	fsr2h,f,c
 31408  01B768  006F FF78  F0A6    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31409  01B76E  006F FF78  F0A7    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31410  01B774  006F FF74  F0A8    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31411                           
 31412                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31413  01B77A  52E5               	movf	postdec1,f,c
 31414  01B77C  52E5               	movf	postdec1,f,c
 31415  01B77E  52E5               	movf	postdec1,f,c
 31416  01B780  0012               	return		;funcret
 31417  01B782                     __end_of_ADCC_SetADIInterruptHandler:
 31418                           	opt callstack 0
 31419                           
 31420 ;; *************** function _INT1_ISR *****************
 31421 ;; Defined at:
 31422 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31423 ;; Parameters:    Size  Location     Type
 31424 ;;		None
 31425 ;; Auto vars:     Size  Location     Type
 31426 ;;		None
 31427 ;; Return value:  Size  Location     Type
 31428 ;;                  1    wreg      void 
 31429 ;; Registers used:
 31430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31431 ;; Tracked objects:
 31432 ;;		On entry : 0/0
 31433 ;;		On exit  : 0/0
 31434 ;;		Unchanged: 0/0
 31435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31440 ;;Total ram usage:        4 bytes
 31441 ;; Hardware stack levels used:    1
 31442 ;; Hardware stack levels required when called:    5
 31443 ;; This function calls:
 31444 ;;		_INT1_CallBack
 31445 ;; This function is called by:
 31446 ;;		Interrupt level 1
 31447 ;; This function uses a non-reentrant model
 31448 ;;
 31449                           
 31450                           	psect	text136
 31451  01B1C8                     __ptext136:
 31452                           	opt callstack 0
 31453  01B1C8                     _INT1_ISR:
 31454                           	opt callstack 12
 31455                           
 31456                           ;incstack = 0
 31457  01B1C8  006F FF60  F04C    	movff	status,??_INT1_ISR
 31458  01B1CE  0060  F098  F04D   	movff	btemp,??_INT1_ISR+1
 31459  01B1D4  0060  F0C0  F04E   	movff	btemp+10,??_INT1_ISR+2
 31460  01B1DA  0060  F0C4  F04F   	movff	btemp+11,??_INT1_ISR+3
 31461  01B1E0  EE16  F0AE         	lfsr	1,___intlo_sp
 31462                           
 31463                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31464  01B1E4  0139               	movlb	57	; () banked
 31465  01B1E6  91A5               	bcf	165,0,b	;volatile
 31466                           
 31467                           ; BSR set to: 57
 31468                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31469  01B1E8  EC56  F0DC         	call	_INT1_CallBack	;wreg free
 31470  01B1EC  0060  F13C  F031   	movff	??_INT1_ISR+3,btemp+11
 31471  01B1F2  0060  F138  F030   	movff	??_INT1_ISR+2,btemp+10
 31472  01B1F8  0060  F134  F026   	movff	??_INT1_ISR+1,btemp
 31473  01B1FE  0060  F133  FFD8   	movff	??_INT1_ISR,status
 31474  01B204  0011               	retfie		f
 31475  01B206                     __end_of_INT1_ISR:
 31476                           	opt callstack 0
 31477                           
 31478 ;; *************** function _INT1_CallBack *****************
 31479 ;; Defined at:
 31480 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31481 ;; Parameters:    Size  Location     Type
 31482 ;;		None
 31483 ;; Auto vars:     Size  Location     Type
 31484 ;;		None
 31485 ;; Return value:  Size  Location     Type
 31486 ;;                  1  [STACK] void 
 31487 ;; Registers used:
 31488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31489 ;; Tracked objects:
 31490 ;;		On entry : 3F/39
 31491 ;;		On exit  : 0/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31498 ;;Total ram usage:        0 bytes
 31499 ;; Hardware stack levels used:    1
 31500 ;; Hardware stack levels required when called:    4
 31501 ;; This function calls:
 31502 ;;		Absolute function
 31503 ;;		_INT1_DefaultInterruptHandler
 31504 ;;		_switch_handler
 31505 ;; This function is called by:
 31506 ;;		_INT1_ISR
 31507 ;; This function uses a reentrant model
 31508 ;;
 31509                           
 31510                           	psect	text137
 31511  01B8AC                     __ptext137:
 31512                           	opt callstack 0
 31513  01B8AC                     _INT1_CallBack:
 31514                           	opt callstack 12
 31515                           
 31516                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31517                           
 31518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31519                           ;incstack = 0
 31520  01B8AC  5004               	movf	_INT1_InterruptHandler^0,w,c
 31521  01B8AE  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 31522  01B8B0  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 31523  01B8B2  B4D8               	btfsc	status,2,c
 31524  01B8B4  0012               	return	
 31525                           
 31526                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31527  01B8B6  D801               	call	u987_28
 31528  01B8B8  0012               	return	
 31529  01B8BA                     u987_28:
 31530  01B8BA  0005               	push	
 31531  01B8BC  6EFA               	movwf	pclath,c
 31532  01B8BE  5004               	movf	_INT1_InterruptHandler^0,w,c
 31533  01B8C0  6EFD               	movwf	tosl,c
 31534  01B8C2  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 31535  01B8C4  6EFE               	movwf	tosh,c
 31536  01B8C6  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 31537  01B8C8  6EFF               	movwf	tosu,c
 31538  01B8CA  50FA               	movf	pclath,w,c
 31539  01B8CC  0012               	return		;indir
 31540  01B8CE                     __end_of_INT1_CallBack:
 31541                           	opt callstack 0
 31542                           
 31543 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31544 ;; Defined at:
 31545 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31546 ;; Parameters:    Size  Location     Type
 31547 ;;		None
 31548 ;; Auto vars:     Size  Location     Type
 31549 ;;		None
 31550 ;; Return value:  Size  Location     Type
 31551 ;;                  1  [STACK] void 
 31552 ;; Registers used:
 31553 ;;		None
 31554 ;; Tracked objects:
 31555 ;;		On entry : 0/39
 31556 ;;		On exit  : 0/0
 31557 ;;		Unchanged: 0/0
 31558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31563 ;;Total ram usage:        0 bytes
 31564 ;; Hardware stack levels used:    1
 31565 ;; Hardware stack levels required when called:    3
 31566 ;; This function calls:
 31567 ;;		Nothing
 31568 ;; This function is called by:
 31569 ;;		_EXT_INT_Initialize
 31570 ;;		_INT1_CallBack
 31571 ;; This function uses a reentrant model
 31572 ;;
 31573                           
 31574                           	psect	text138
 31575  01BBB6                     __ptext138:
 31576                           	opt callstack 0
 31577  01BBB6                     _INT1_DefaultInterruptHandler:
 31578                           	opt callstack 12
 31579                           
 31580                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31581                           
 31582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31583                           ;incstack = 0
 31584  01BBB6  0012               	return		;funcret
 31585  01BBB8                     __end_of_INT1_DefaultInterruptHandler:
 31586                           	opt callstack 0
 31587                           
 31588 ;; *************** function _switch_handler *****************
 31589 ;; Defined at:
 31590 ;;		line 58 in file "dio.c"
 31591 ;; Parameters:    Size  Location     Type
 31592 ;;		None
 31593 ;; Auto vars:     Size  Location     Type
 31594 ;;  i               1  [STACK] unsigned char 
 31595 ;;  sw_value        1  [STACK] unsigned char 
 31596 ;; Return value:  Size  Location     Type
 31597 ;;                  1  [STACK] void 
 31598 ;; Registers used:
 31599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31600 ;; Tracked objects:
 31601 ;;		On entry : 0/39
 31602 ;;		On exit  : 0/0
 31603 ;;		Unchanged: 0/0
 31604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;Total ram usage:        0 bytes
 31610 ;; Hardware stack levels used:    1
 31611 ;; Hardware stack levels required when called:    3
 31612 ;; This function calls:
 31613 ;;		Nothing
 31614 ;; This function is called by:
 31615 ;;		_start_switch_handler
 31616 ;;		_INT1_CallBack
 31617 ;; This function uses a reentrant model
 31618 ;;
 31619                           
 31620                           	psect	text139
 31621  018F84                     __ptext139:
 31622                           	opt callstack 0
 31623  018F84                     _switch_handler:
 31624                           	opt callstack 0
 31625                           
 31626                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31627  018F84  52E6               	movf	postinc1,f,c
 31628  018F86  52E6               	movf	postinc1,f,c
 31629                           
 31630                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31631                           ;stkvar	_i @ sp[(-2)+0]
 31632                           
 31633                           ;incstack = 0
 31634  018F88  0EFE               	movlw	-2
 31635  018F8A  6AE3               	clrf	plusw1,c
 31636  018F8C  9EBD               	bcf	189,7,c	;volatile
 31637  018F8E  9ABF               	bcf	191,5,c	;volatile
 31638                           
 31639                           ;dio.c: 73:  __nop();
 31640  018F90  F000               	nop	
 31641                           
 31642                           ;dio.c: 74:  __nop();
 31643  018F92  F000               	nop	
 31644                           
 31645                           ;dio.c: 75:  __nop();
 31646  018F94  F000               	nop	
 31647  018F96  D019               	goto	l10415
 31648  018F98                     l10403:
 31649                           
 31650                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31651  018F98  A6CF               	btfss	207,3,c	;volatile
 31652  018F9A  D011               	goto	u962_20
 31653  018F9C  D00D               	goto	u962_21
 31654  018F9E                     u959_28:
 31655                           
 31656                           ;stkvar	_sw_value @ sp[(-2)+1]
 31657  018F9E  0EFF               	movlw	-1
 31658  018FA0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 31659                           
 31660                           ;dio.c: 81:    break;
 31661  018FA6  D027               	goto	l10417
 31662  018FA8                     l10405:
 31663                           
 31664                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31665  018FA8  A4CF               	btfss	207,2,c	;volatile
 31666  018FAA  D009               	goto	u962_20
 31667  018FAC  D005               	goto	u962_21
 31668  018FAE                     l10407:
 31669                           
 31670                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31671  018FAE  A2CF               	btfss	207,1,c	;volatile
 31672  018FB0  D006               	goto	u962_20
 31673  018FB2  D002               	goto	u962_21
 31674  018FB4                     l10409:
 31675                           
 31676                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31677  018FB4  A0CF               	btfss	207,0,c	;volatile
 31678  018FB6  D003               	goto	u962_20
 31679  018FB8                     u962_21:
 31680  018FB8  6A31               	clrf	(btemp+11)^0,c
 31681  018FBA  2A31               	incf	(btemp+11)^0,f,c
 31682  018FBC  D7F0               	goto	u959_28
 31683  018FBE                     u962_20:
 31684  018FBE  6A31               	clrf	(btemp+11)^0,c
 31685  018FC0  D7EE               	goto	u959_28
 31686  018FC2                     l10411:
 31687                           
 31688                           ;dio.c: 92:    sw_value = 1;
 31689                           ;stkvar	_sw_value @ sp[(-2)+1]
 31690  018FC2  0EFF               	movlw	-1
 31691  018FC4  6AE3               	clrf	plusw1,c
 31692  018FC6  2AE3               	incf	plusw1,f,c
 31693                           
 31694                           ;dio.c: 93:    break;
 31695  018FC8  D016               	goto	l10417
 31696  018FCA                     l10415:
 31697                           
 31698                           ;stkvar	_i @ sp[(-2)+0]
 31699  018FCA  0EFE               	movlw	-2
 31700  018FCC  50E3               	movf	plusw1,w,c
 31701  018FCE  6E30               	movwf	(btemp+10)^0,c
 31702  018FD0  6A31               	clrf	(btemp+11)^0,c
 31703                           
 31704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31705                           ; Switch size 1, requested type "simple"
 31706                           ; Number of cases is 1, Range of values is 0 to 0
 31707                           ; switch strategies available:
 31708                           ; Name         Instructions Cycles
 31709                           ; simple_byte            4     3 (average)
 31710                           ;	Chosen strategy is simple_byte
 31711  018FD2  5031               	movf	(btemp+11)^0,w,c
 31712  018FD4  0A00               	xorlw	0	; case 0
 31713  018FD6  A4D8               	btfss	status,2,c
 31714  018FD8  D7F4               	goto	l10411
 31715                           
 31716                           ; Switch size 1, requested type "simple"
 31717                           ; Number of cases is 4, Range of values is 0 to 3
 31718                           ; switch strategies available:
 31719                           ; Name         Instructions Cycles
 31720                           ; simple_byte           13     7 (average)
 31721                           ;	Chosen strategy is simple_byte
 31722  018FDA  5030               	movf	(btemp+10)^0,w,c
 31723  018FDC  0A00               	xorlw	0	; case 0
 31724  018FDE  B4D8               	btfsc	status,2,c
 31725  018FE0  D7E9               	goto	l10409
 31726  018FE2  0A01               	xorlw	1	; case 1
 31727  018FE4  B4D8               	btfsc	status,2,c
 31728  018FE6  D7E3               	goto	l10407
 31729  018FE8  0A03               	xorlw	3	; case 2
 31730  018FEA  B4D8               	btfsc	status,2,c
 31731  018FEC  D7DD               	goto	l10405
 31732  018FEE  0A01               	xorlw	1	; case 3
 31733  018FF0  B4D8               	btfsc	status,2,c
 31734  018FF2  D7D2               	goto	l10403
 31735  018FF4  D7E6               	goto	l10411
 31736  018FF6                     l10417:
 31737                           
 31738                           ;dio.c: 97:   if (sw_value) {
 31739                           ;stkvar	_sw_value @ sp[(-2)+1]
 31740  018FF6  0EFF               	movlw	-1
 31741  018FF8  50E3               	movf	plusw1,w,c
 31742  018FFA  B4D8               	btfsc	status,2,c
 31743  018FFC  D018               	goto	l10423
 31744                           
 31745                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31746                           ;stkvar	_i @ sp[(-2)+0]
 31747  018FFE  0EFE               	movlw	-2
 31748  019000  50E3               	movf	plusw1,w,c
 31749  019002  0D05               	mullw	5
 31750  019004  0EC6               	movlw	low _S
 31751  019006  24F3               	addwf	243,w,c
 31752  019008  6ED9               	movwf	fsr2l,c
 31753  01900A  0E01               	movlw	high _S
 31754  01900C  20F4               	addwfc	prodh,w,c
 31755  01900E  6EDA               	movwf	fsr2h,c
 31756  019010  04DE               	decf	postinc2,w,c
 31757  019012  A4D8               	btfss	status,2,c
 31758  019014  D049               	goto	l10431
 31759                           
 31760                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31761                           ;stkvar	_i @ sp[(-2)+0]
 31762  019016  0EFE               	movlw	-2
 31763  019018  50E3               	movf	plusw1,w,c
 31764  01901A  0D05               	mullw	5
 31765  01901C  0EC6               	movlw	low _S
 31766  01901E  24F3               	addwf	243,w,c
 31767  019020  6ED9               	movwf	fsr2l,c
 31768  019022  0E01               	movlw	high _S
 31769  019024  20F4               	addwfc	prodh,w,c
 31770  019026  6EDA               	movwf	fsr2h,c
 31771  019028  0E00               	movlw	0
 31772  01902A  6EDF               	movwf	indf2,c
 31773  01902C  D03D               	goto	l10431
 31774  01902E                     l10423:
 31775                           
 31776                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31777                           ;stkvar	_i @ sp[(-2)+0]
 31778  01902E  0EFE               	movlw	-2
 31779  019030  50E3               	movf	plusw1,w,c
 31780  019032  0D05               	mullw	5
 31781  019034  0EC6               	movlw	low _S
 31782  019036  24F3               	addwf	243,w,c
 31783  019038  6ED9               	movwf	fsr2l,c
 31784  01903A  0E01               	movlw	high _S
 31785  01903C  20F4               	addwfc	prodh,w,c
 31786  01903E  6EDA               	movwf	fsr2h,c
 31787  019040  50DF               	movf	indf2,w,c
 31788  019042  A4D8               	btfss	status,2,c
 31789  019044  D031               	goto	l10431
 31790                           
 31791                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31792                           ;stkvar	_i @ sp[(-2)+0]
 31793  019046  0EFE               	movlw	-2
 31794  019048  50E3               	movf	plusw1,w,c
 31795  01904A  0D05               	mullw	5
 31796  01904C  0EC6               	movlw	low _S
 31797  01904E  24F3               	addwf	243,w,c
 31798  019050  6ED9               	movwf	fsr2l,c
 31799  019052  0E01               	movlw	high _S
 31800  019054  20F4               	addwfc	prodh,w,c
 31801  019056  6EDA               	movwf	fsr2h,c
 31802  019058  0E01               	movlw	1
 31803  01905A  6EDF               	movwf	indf2,c
 31804                           
 31805                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31806  01905C  EE20  F1C2         	lfsr	2,_V+187	;volatile
 31807                           
 31808                           ;stkvar	_i @ sp[(-2)+0]
 31809  019060  0EFE               	movlw	-2
 31810  019062  50E3               	movf	plusw1,w,c
 31811  019064  0D05               	mullw	5
 31812  019066  0EC7               	movlw	low (_S+1)
 31813  019068  24F3               	addwf	243,w,c
 31814  01906A  6EE9               	movwf	fsr0l,c
 31815  01906C  0E01               	movlw	high (_S+1)
 31816  01906E  20F4               	addwfc	prodh,w,c
 31817  019070  6EEA               	movwf	fsr0h,c
 31818  019072  006F FF7B FFEE     	movff	postinc2,postinc0
 31819  019078  006F FF7B FFEE     	movff	postinc2,postinc0
 31820  01907E  006F FF7B FFEE     	movff	postinc2,postinc0
 31821  019084  006F FF7B FFEE     	movff	postinc2,postinc0
 31822                           
 31823                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31824                           ;stkvar	_i @ sp[(-2)+0]
 31825  01908A  0EFE               	movlw	-2
 31826  01908C  006F FF8C  F031    	movff	plusw1,btemp+11
 31827  019092  0E01               	movlw	1
 31828  019094  6E30               	movwf	(btemp+10)^0,c
 31829  019096  2A31               	incf	(btemp+11)^0,f,c
 31830  019098  D002               	goto	u966_24
 31831  01909A                     u966_25:
 31832  01909A  90D8               	bcf	status,0,c
 31833  01909C  3630               	rlcf	(btemp+10)^0,f,c
 31834  01909E                     u966_24:
 31835  01909E  2E31               	decfsz	(btemp+11)^0,f,c
 31836  0190A0  D7FC               	goto	u966_25
 31837  0190A2  5030               	movf	(btemp+10)^0,w,c
 31838  0190A4  0101               	movlb	1	; () banked
 31839  0190A6  13EE               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31840  0190A8                     l10431:
 31841                           
 31842                           ;dio.c: 108:  } while (++i < 4);
 31843                           ;stkvar	_i @ sp[(-2)+0]
 31844  0190A8  0EFE               	movlw	-2
 31845  0190AA  2AE3               	incf	plusw1,f,c
 31846  0190AC  0EFE               	movlw	-2
 31847  0190AE  006F FF8C  F026    	movff	plusw1,btemp
 31848  0190B4  0E03               	movlw	3
 31849  0190B6  6426               	cpfsgt	btemp^0,c
 31850  0190B8  D788               	goto	l10415
 31851                           
 31852                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31853  0190BA  8EBD               	bsf	189,7,c	;volatile
 31854                           
 31855                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31856  0190BC  8ABF               	bsf	191,5,c	;volatile
 31857                           
 31858                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31859  0190BE  52E5               	movf	postdec1,f,c
 31860  0190C0  52E5               	movf	postdec1,f,c
 31861  0190C2  0012               	return		;funcret
 31862  0190C4                     __end_of_switch_handler:
 31863                           	opt callstack 0
 31864                           
 31865 ;; *************** function _TMR5_ISR *****************
 31866 ;; Defined at:
 31867 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31868 ;; Parameters:    Size  Location     Type
 31869 ;;		None
 31870 ;; Auto vars:     Size  Location     Type
 31871 ;;		None
 31872 ;; Return value:  Size  Location     Type
 31873 ;;                  1    wreg      void 
 31874 ;; Registers used:
 31875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31876 ;; Tracked objects:
 31877 ;;		On entry : 0/0
 31878 ;;		On exit  : 0/0
 31879 ;;		Unchanged: 0/0
 31880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31883 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31884 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31885 ;;Total ram usage:       15 bytes
 31886 ;; Hardware stack levels used:    1
 31887 ;; Hardware stack levels required when called:    9
 31888 ;; This function calls:
 31889 ;;		_TMR5_CallBack
 31890 ;;		_TMR5_WriteTimer
 31891 ;; This function is called by:
 31892 ;;		Interrupt level 1
 31893 ;; This function uses a non-reentrant model
 31894 ;;
 31895                           
 31896                           	psect	text140
 31897  019C34                     __ptext140:
 31898                           	opt callstack 0
 31899  019C34                     _TMR5_ISR:
 31900                           	opt callstack 8
 31901                           
 31902                           ;incstack = 0
 31903  019C34  006F FF60  F052    	movff	status,??_TMR5_ISR+2
 31904  019C3A  0060  F098  F053   	movff	btemp,??_TMR5_ISR+3
 31905  019C40  0060  F09C  F054   	movff	btemp+1,??_TMR5_ISR+4
 31906  019C46  0060  F0A0  F055   	movff	btemp+2,??_TMR5_ISR+5
 31907  019C4C  0060  F0A4  F056   	movff	btemp+3,??_TMR5_ISR+6
 31908  019C52  0060  F0A8  F057   	movff	btemp+4,??_TMR5_ISR+7
 31909  019C58  0060  F0AC  F058   	movff	btemp+5,??_TMR5_ISR+8
 31910  019C5E  0060  F0B0  F059   	movff	btemp+6,??_TMR5_ISR+9
 31911  019C64  0060  F0B4  F05A   	movff	btemp+7,??_TMR5_ISR+10
 31912  019C6A  0060  F0B8  F05B   	movff	btemp+8,??_TMR5_ISR+11
 31913  019C70  0060  F0BC  F05C   	movff	btemp+9,??_TMR5_ISR+12
 31914  019C76  0060  F0C0  F05D   	movff	btemp+10,??_TMR5_ISR+13
 31915  019C7C  0060  F0C4  F05E   	movff	btemp+11,??_TMR5_ISR+14
 31916  019C82  EE16  F0AE         	lfsr	1,___intlo_sp
 31917                           
 31918                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 31919  019C86  0139               	movlb	57	; () banked
 31920  019C88  9DA8               	bcf	168,6,b	;volatile
 31921                           
 31922                           ; BSR set to: 57
 31923                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 31924  019C8A  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 31925  019C90  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31926  019C96  EC84  F0D8         	call	_TMR5_WriteTimer	;wreg free
 31927                           
 31928                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 31929  019C9A  0101               	movlb	1	; () banked
 31930  019C9C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 31931  019C9E  6E50               	movwf	??_TMR5_ISR^0,c
 31932  019CA0  6A51               	clrf	(??_TMR5_ISR+1)^0,c
 31933  019CA2  0E05               	movlw	5
 31934  019CA4  2650               	addwf	??_TMR5_ISR^0,f,c
 31935  019CA6  0E00               	movlw	0
 31936  019CA8  2251               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31937  019CAA  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31938  019CAC  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31939  019CAE  5050               	movf	??_TMR5_ISR^0,w,c
 31940  019CB0  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31941  019CB2  5051               	movf	(??_TMR5_ISR+1)^0,w,c
 31942  019CB4  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31943  019CB6  A0D8               	btfss	status,0,c
 31944  019CB8  D004               	goto	i1l1019
 31945                           
 31946                           ; BSR set to: 1
 31947                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 31948  019CBA  EC0F  F0DC         	call	_TMR5_CallBack	;wreg free
 31949                           
 31950                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 31951  019CBE  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31952  019CC0  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31953  019CC2                     i1l1019:
 31954  019CC2  0060  F178  F031   	movff	??_TMR5_ISR+14,btemp+11
 31955  019CC8  0060  F174  F030   	movff	??_TMR5_ISR+13,btemp+10
 31956  019CCE  0060  F170  F02F   	movff	??_TMR5_ISR+12,btemp+9
 31957  019CD4  0060  F16C  F02E   	movff	??_TMR5_ISR+11,btemp+8
 31958  019CDA  0060  F168  F02D   	movff	??_TMR5_ISR+10,btemp+7
 31959  019CE0  0060  F164  F02C   	movff	??_TMR5_ISR+9,btemp+6
 31960  019CE6  0060  F160  F02B   	movff	??_TMR5_ISR+8,btemp+5
 31961  019CEC  0060  F15C  F02A   	movff	??_TMR5_ISR+7,btemp+4
 31962  019CF2  0060  F158  F029   	movff	??_TMR5_ISR+6,btemp+3
 31963  019CF8  0060  F154  F028   	movff	??_TMR5_ISR+5,btemp+2
 31964  019CFE  0060  F150  F027   	movff	??_TMR5_ISR+4,btemp+1
 31965  019D04  0060  F14C  F026   	movff	??_TMR5_ISR+3,btemp
 31966  019D0A  0060  F14B  FFD8   	movff	??_TMR5_ISR+2,status
 31967  019D10  0011               	retfie		f
 31968  019D12                     __end_of_TMR5_ISR:
 31969                           	opt callstack 0
 31970                           
 31971 ;; *************** function _TMR5_WriteTimer *****************
 31972 ;; Defined at:
 31973 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 31974 ;; Parameters:    Size  Location     Type
 31975 ;;  timerVal        2  [STACK] unsigned short 
 31976 ;; Auto vars:     Size  Location     Type
 31977 ;;		None
 31978 ;; Return value:  Size  Location     Type
 31979 ;;                  1  [STACK] void 
 31980 ;; Registers used:
 31981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31982 ;; Tracked objects:
 31983 ;;		On entry : 3F/39
 31984 ;;		On exit  : 0/0
 31985 ;;		Unchanged: 0/0
 31986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31991 ;;Total ram usage:        0 bytes
 31992 ;; Hardware stack levels used:    1
 31993 ;; Hardware stack levels required when called:    3
 31994 ;; This function calls:
 31995 ;;		Nothing
 31996 ;; This function is called by:
 31997 ;;		_TMR5_ISR
 31998 ;; This function uses a reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text141
 32002  01B108                     __ptext141:
 32003                           	opt callstack 0
 32004  01B108                     _TMR5_WriteTimer:
 32005                           	opt callstack 13
 32006                           
 32007                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32008                           
 32009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32010                           ;incstack = 0
 32011  01B108  A49A               	btfss	154,2,c	;volatile
 32012  01B10A  D00F               	goto	l10605
 32013                           
 32014                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32015  01B10C  909A               	bcf	154,0,c	;volatile
 32016                           
 32017                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32018                           ;stkvar	_timerVal @ sp[(0)+-2]
 32019  01B10E  0EFF               	movlw	255
 32020  01B110  24E1               	addwf	fsr1l,w,c
 32021  01B112  6ED9               	movwf	fsr2l,c
 32022  01B114  0EFF               	movlw	255
 32023  01B116  20E2               	addwfc	fsr1h,w,c
 32024  01B118  6EDA               	movwf	fsr2h,c
 32025  01B11A  50DF               	movf	indf2,w,c
 32026  01B11C  6E99               	movwf	153,c	;volatile
 32027                           
 32028                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32029                           ;stkvar	_timerVal @ sp[(0)+-2]
 32030  01B11E  0EFE               	movlw	-2
 32031  01B120  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32032                           
 32033                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32034  01B126  809A               	bsf	154,0,c	;volatile
 32035                           
 32036                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32037  01B128  D00C               	goto	l1002
 32038  01B12A                     l10605:
 32039                           
 32040                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32041                           ;stkvar	_timerVal @ sp[(0)+-2]
 32042  01B12A  0EFF               	movlw	255
 32043  01B12C  24E1               	addwf	fsr1l,w,c
 32044  01B12E  6ED9               	movwf	fsr2l,c
 32045  01B130  0EFF               	movlw	255
 32046  01B132  20E2               	addwfc	fsr1h,w,c
 32047  01B134  6EDA               	movwf	fsr2h,c
 32048  01B136  50DF               	movf	indf2,w,c
 32049  01B138  6E99               	movwf	153,c	;volatile
 32050                           
 32051                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32052                           ;stkvar	_timerVal @ sp[(0)+-2]
 32053  01B13A  0EFE               	movlw	-2
 32054  01B13C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32055  01B142                     l1002:
 32056                           
 32057                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32058  01B142  52E5               	movf	postdec1,f,c
 32059  01B144  52E5               	movf	postdec1,f,c
 32060  01B146  0012               	return		;funcret
 32061  01B148                     __end_of_TMR5_WriteTimer:
 32062                           	opt callstack 0
 32063                           
 32064 ;; *************** function _TMR5_CallBack *****************
 32065 ;; Defined at:
 32066 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32067 ;; Parameters:    Size  Location     Type
 32068 ;;		None
 32069 ;; Auto vars:     Size  Location     Type
 32070 ;;		None
 32071 ;; Return value:  Size  Location     Type
 32072 ;;                  1  [STACK] void 
 32073 ;; Registers used:
 32074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32075 ;; Tracked objects:
 32076 ;;		On entry : 3F/1
 32077 ;;		On exit  : 0/0
 32078 ;;		Unchanged: 0/0
 32079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32084 ;;Total ram usage:        0 bytes
 32085 ;; Hardware stack levels used:    1
 32086 ;; Hardware stack levels required when called:    8
 32087 ;; This function calls:
 32088 ;;		Absolute function
 32089 ;;		_TMR5_DefaultInterruptHandler
 32090 ;; This function is called by:
 32091 ;;		_TMR5_ISR
 32092 ;; This function uses a reentrant model
 32093 ;;
 32094                           
 32095                           	psect	text142
 32096  01B81E                     __ptext142:
 32097                           	opt callstack 0
 32098  01B81E                     _TMR5_CallBack:
 32099                           	opt callstack 8
 32100                           
 32101                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32102                           
 32103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32104                           ;incstack = 0
 32105  01B81E  0100               	movlb	0	; () banked
 32106  01B820  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32107  01B822  119E               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32108  01B824  119F               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32109  01B826  B4D8               	btfsc	status,2,c
 32110  01B828  0012               	return	
 32111                           
 32112                           ; BSR set to: 0
 32113                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32114  01B82A  D801               	call	u996_28
 32115  01B82C  0012               	return	
 32116  01B82E                     u996_28:
 32117  01B82E  0005               	push	
 32118  01B830  6EFA               	movwf	pclath,c
 32119  01B832  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32120  01B834  6EFD               	movwf	tosl,c
 32121  01B836  519E               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32122  01B838  6EFE               	movwf	tosh,c
 32123  01B83A  519F               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32124  01B83C  6EFF               	movwf	tosu,c
 32125  01B83E  50FA               	movf	pclath,w,c
 32126  01B840  0012               	return		;indir
 32127  01B842                     __end_of_TMR5_CallBack:
 32128                           	opt callstack 0
 32129                           
 32130 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32131 ;; Defined at:
 32132 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32133 ;; Parameters:    Size  Location     Type
 32134 ;;		None
 32135 ;; Auto vars:     Size  Location     Type
 32136 ;;		None
 32137 ;; Return value:  Size  Location     Type
 32138 ;;                  1  [STACK] void 
 32139 ;; Registers used:
 32140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32141 ;; Tracked objects:
 32142 ;;		On entry : 3F/0
 32143 ;;		On exit  : 0/0
 32144 ;;		Unchanged: 0/0
 32145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32150 ;;Total ram usage:        0 bytes
 32151 ;; Hardware stack levels used:    1
 32152 ;; Hardware stack levels required when called:    7
 32153 ;; This function calls:
 32154 ;;		_check_day_time
 32155 ;; This function is called by:
 32156 ;;		_TMR5_Initialize
 32157 ;;		_TMR5_CallBack
 32158 ;; This function uses a reentrant model
 32159 ;;
 32160                           
 32161                           	psect	text143
 32162  01B278                     __ptext143:
 32163                           	opt callstack 0
 32164  01B278                     _TMR5_DefaultInterruptHandler:
 32165                           	opt callstack 8
 32166                           
 32167                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32168                           
 32169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32170                           ;incstack = 0
 32171  01B278  A0BE               	btfss	190,0,c	;volatile
 32172  01B27A  D002               	goto	u943_20
 32173  01B27C  0E01               	movlw	1
 32174  01B27E  D001               	goto	u943_26
 32175  01B280                     u943_20:
 32176  01B280  0E00               	movlw	0
 32177  01B282                     u943_26:
 32178  01B282  0AFF               	xorlw	255
 32179  01B284  6E31               	movwf	(btemp+11)^0,c
 32180  01B286  50BE               	movf	190,w,c	;volatile
 32181  01B288  1831               	xorwf	(btemp+11)^0,w,c
 32182  01B28A  0BFE               	andlw	-2
 32183  01B28C  1831               	xorwf	(btemp+11)^0,w,c
 32184  01B28E  6EBE               	movwf	190,c	;volatile
 32185                           
 32186                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32187  01B290  0E01               	movlw	1
 32188  01B292  0101               	movlb	1	; () banked
 32189  01B294  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 32190  01B296  0E00               	movlw	0
 32191  01B298  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32192  01B29A  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32193  01B29C  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32194                           
 32195                           ; BSR set to: 1
 32196                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32197  01B29E  0E01               	movlw	1
 32198  01B2A0  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 32199  01B2A2  0E00               	movlw	0
 32200  01B2A4  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32201  01B2A6  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32202  01B2A8  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32203                           
 32204                           ; BSR set to: 1
 32205                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32206  01B2AA  ECF9  F0C8         	call	_check_day_time	;wreg free
 32207                           
 32208                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32209  01B2AE  0012               	return		;funcret
 32210  01B2B0                     __end_of_TMR5_DefaultInterruptHandler:
 32211                           	opt callstack 0
 32212                           
 32213 ;; *************** function _check_day_time *****************
 32214 ;; Defined at:
 32215 ;;		line 164 in file "mbmc.c"
 32216 ;; Parameters:    Size  Location     Type
 32217 ;;		None
 32218 ;; Auto vars:     Size  Location     Type
 32219 ;;		None
 32220 ;; Return value:  Size  Location     Type
 32221 ;;                  1  [STACK] _Bool 
 32222 ;; Registers used:
 32223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32224 ;; Tracked objects:
 32225 ;;		On entry : 3F/1
 32226 ;;		On exit  : 0/0
 32227 ;;		Unchanged: 0/0
 32228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32233 ;;Total ram usage:        0 bytes
 32234 ;; Hardware stack levels used:    1
 32235 ;; Hardware stack levels required when called:    6
 32236 ;; This function calls:
 32237 ;;		___flge
 32238 ;;		_conv_raw_result
 32239 ;;		_get_ac_charger_relay
 32240 ;;		_set_ac_charger_relay
 32241 ;; This function is called by:
 32242 ;;		_TMR5_DefaultInterruptHandler
 32243 ;; This function uses a reentrant model
 32244 ;;
 32245                           
 32246                           	psect	text144
 32247  0191F2                     __ptext144:
 32248                           	opt callstack 0
 32249  0191F2                     _check_day_time:
 32250                           	opt callstack 8
 32251                           
 32252                           ;mbmc.c: 166:  static uint8_t day_delay = 0;;mbmc.c: 168:  if (!day_delay++) {
 32253                           
 32254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32255                           ;incstack = 0
 32256  0191F2  2A1B               	incf	check_day_time@day_delay^0,f,c
 32257  0191F4  041B               	decf	check_day_time@day_delay^0,w,c
 32258  0191F6  A4D8               	btfss	status,2,c
 32259  0191F8  D08A               	goto	l9763
 32260                           
 32261                           ;mbmc.c: 169:   if (!C.day) {
 32262  0191FA  EE22  F01D         	lfsr	2,_C+286	;volatile
 32263  0191FE  50DF               	movf	indf2,w,c
 32264  019200  A4D8               	btfss	status,2,c
 32265  019202  D03E               	goto	l9747
 32266                           
 32267                           ;mbmc.c: 170:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) > 22.0) {
 32268  019204  0E00               	movlw	0
 32269  019206  6EE6               	movwf	postinc1,c
 32270  019208  0E0D               	movlw	13
 32271  01920A  6EE6               	movwf	postinc1,c
 32272  01920C  EC08  F0A8         	call	_conv_raw_result	;wreg free
 32273  019210  0060  F09B  FFE6   	movff	btemp,postinc1
 32274  019216  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32275  01921C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32276  019222  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32277  019228  0E00               	movlw	0
 32278  01922A  6EE6               	movwf	postinc1,c
 32279  01922C  0E00               	movlw	0
 32280  01922E  6EE6               	movwf	postinc1,c
 32281  019230  0EB0               	movlw	176
 32282  019232  6EE6               	movwf	postinc1,c
 32283  019234  0E41               	movlw	65
 32284  019236  6EE6               	movwf	postinc1,c
 32285  019238  EC1B  F0C5         	call	___flge	;wreg free
 32286  01923C  B026               	btfsc	btemp& (0+255),0,c
 32287  01923E  D067               	goto	l9763
 32288                           
 32289                           ;mbmc.c: 171:     C.day = 1;
 32290  019240  0E01               	movlw	1
 32291  019242  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32292                           
 32293                           ;mbmc.c: 172:     C.day_start = V.ticks;
 32294  019248  EE20  F188         	lfsr	2,_V+129	;volatile
 32295  01924C  006F FF78  F81E    	movff	postinc2,_C+287	;volatile
 32296  019252  006F FF78  F81F    	movff	postinc2,_C+288	;volatile
 32297  019258  006F FF78  F820    	movff	postinc2,_C+289	;volatile
 32298  01925E  006F FF74  F821    	movff	postdec2,_C+290	;volatile
 32299                           
 32300                           ;mbmc.c: 173:     if (get_ac_charger_relay() && V.system_stable) {
 32301  019264  EC85  F0DD         	call	_get_ac_charger_relay	;wreg free
 32302  019268  5026               	movf	btemp^0,w,c
 32303  01926A  B4D8               	btfsc	status,2,c
 32304  01926C  0012               	return	
 32305  01926E  0101               	movlb	1	; () banked
 32306  019270  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 32307  019272  B4D8               	btfsc	status,2,c
 32308  019274  0012               	return	
 32309                           
 32310                           ; BSR set to: 1
 32311                           ;mbmc.c: 174:      set_ac_charger_relay(0);
 32312  019276  0E00               	movlw	0
 32313  019278  6EE6               	movwf	postinc1,c
 32314  01927A  EC6F  F0DD         	call	_set_ac_charger_relay	;wreg free
 32315  01927E  0012               	return	
 32316  019280                     l9747:
 32317                           
 32318                           ;mbmc.c: 179:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) < 12.0) {
 32319  019280  0E00               	movlw	0
 32320  019282  6EE6               	movwf	postinc1,c
 32321  019284  0E00               	movlw	0
 32322  019286  6EE6               	movwf	postinc1,c
 32323  019288  0E40               	movlw	64
 32324  01928A  6EE6               	movwf	postinc1,c
 32325  01928C  0E41               	movlw	65
 32326  01928E  6EE6               	movwf	postinc1,c
 32327  019290  0E00               	movlw	0
 32328  019292  6EE6               	movwf	postinc1,c
 32329  019294  0E0D               	movlw	13
 32330  019296  6EE6               	movwf	postinc1,c
 32331  019298  EC08  F0A8         	call	_conv_raw_result	;wreg free
 32332  01929C  0060  F09B  FFE6   	movff	btemp,postinc1
 32333  0192A2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32334  0192A8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32335  0192AE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32336  0192B4  EC1B  F0C5         	call	___flge	;wreg free
 32337  0192B8  B026               	btfsc	btemp& (0+255),0,c
 32338  0192BA  D029               	goto	l9763
 32339                           
 32340                           ;mbmc.c: 180:     C.day = 0;
 32341  0192BC  0E00               	movlw	0
 32342  0192BE  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32343                           
 32344                           ;mbmc.c: 181:     C.day_end = V.ticks;
 32345  0192C4  EE20  F188         	lfsr	2,_V+129	;volatile
 32346  0192C8  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32347  0192CE  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32348  0192D4  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32349  0192DA  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32350                           
 32351                           ;mbmc.c: 185:     if (!get_ac_charger_relay() && V.system_stable && (C.soc < 50)) {
 32352  0192E0  EC85  F0DD         	call	_get_ac_charger_relay	;wreg free
 32353  0192E4  5026               	movf	btemp^0,w,c
 32354  0192E6  A4D8               	btfss	status,2,c
 32355  0192E8  0012               	return	
 32356  0192EA  0101               	movlb	1	; () banked
 32357  0192EC  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 32358  0192EE  B4D8               	btfsc	status,2,c
 32359  0192F0  0012               	return	
 32360                           
 32361                           ; BSR set to: 1
 32362  0192F2  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32363  0192F6  0E01               	movlw	1
 32364  0192F8  50DB               	movf	plusw2,w,c
 32365  0192FA  E10D               	bnz	l1894
 32366  0192FC  0E32               	movlw	50
 32367  0192FE  5CDE               	subwf	postinc2,w,c
 32368  019300  B0D8               	btfsc	status,0,c
 32369  019302  0012               	return	
 32370                           
 32371                           ; BSR set to: 1
 32372                           ;mbmc.c: 186:      set_ac_charger_relay(1);
 32373  019304  0E01               	movlw	1
 32374  019306  6EE6               	movwf	postinc1,c
 32375  019308  EC6F  F0DD         	call	_set_ac_charger_relay	;wreg free
 32376  01930C  0012               	return	
 32377  01930E                     l9763:
 32378                           
 32379                           ;mbmc.c: 192:  if (day_delay >= 240)
 32380  01930E  0EEF               	movlw	239
 32381  019310  641B               	cpfsgt	check_day_time@day_delay^0,c
 32382  019312  0012               	return	
 32383                           
 32384                           ;mbmc.c: 193:   day_delay = 0;
 32385  019314  6A1B               	clrf	check_day_time@day_delay^0,c
 32386  019316                     l1894:
 32387                           
 32388                           ; _check_day_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32389  019316  0012               	return		;funcret
 32390  019318                     __end_of_check_day_time:
 32391                           	opt callstack 0
 32392                           
 32393 ;; *************** function _set_ac_charger_relay *****************
 32394 ;; Defined at:
 32395 ;;		line 134 in file "mbmc.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;  mode            1  [STACK] _Bool 
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;		None
 32400 ;; Return value:  Size  Location     Type
 32401 ;;                  1  [STACK] void 
 32402 ;; Registers used:
 32403 ;;		wreg, fsr1l, fsr1h
 32404 ;; Tracked objects:
 32405 ;;		On entry : 3F/1
 32406 ;;		On exit  : 0/0
 32407 ;;		Unchanged: 0/0
 32408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32413 ;;Total ram usage:        0 bytes
 32414 ;; Hardware stack levels used:    1
 32415 ;; Hardware stack levels required when called:    3
 32416 ;; This function calls:
 32417 ;;		Nothing
 32418 ;; This function is called by:
 32419 ;;		_check_day_time
 32420 ;; This function uses a reentrant model
 32421 ;;
 32422                           
 32423                           	psect	text145
 32424  01BADE                     __ptext145:
 32425                           	opt callstack 0
 32426  01BADE                     _set_ac_charger_relay:
 32427                           	opt callstack 10
 32428                           
 32429                           ;mbmc.c: 134: void set_ac_charger_relay(_Bool mode);mbmc.c: 135: {;mbmc.c: 136:  LATDbit
      +                          s.LATD6 = mode;
 32430                           ;stkvar	_mode @ sp[(0)+-1]
 32431                           
 32432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32433                           ;incstack = 0
 32434  01BADE  0EFF               	movlw	-1
 32435  01BAE0  B0E3               	btfsc	plusw1,0,c
 32436  01BAE2  D002               	bra	u918_25
 32437  01BAE4  9CBD               	bcf	189,6,c	;volatile
 32438  01BAE6  D001               	bra	u918_26
 32439  01BAE8                     u918_25:
 32440  01BAE8  8CBD               	bsf	189,6,c	;volatile
 32441  01BAEA                     u918_26:
 32442                           
 32443                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32444  01BAEA  52E5               	movf	postdec1,f,c
 32445  01BAEC  0012               	return		;funcret
 32446  01BAEE                     __end_of_set_ac_charger_relay:
 32447                           	opt callstack 0
 32448                           
 32449 ;; *************** function _get_ac_charger_relay *****************
 32450 ;; Defined at:
 32451 ;;		line 139 in file "mbmc.c"
 32452 ;; Parameters:    Size  Location     Type
 32453 ;;		None
 32454 ;; Auto vars:     Size  Location     Type
 32455 ;;		None
 32456 ;; Return value:  Size  Location     Type
 32457 ;;                  1  [STACK] _Bool 
 32458 ;; Registers used:
 32459 ;;		btemp
 32460 ;; Tracked objects:
 32461 ;;		On entry : 0/1
 32462 ;;		On exit  : 0/0
 32463 ;;		Unchanged: 0/0
 32464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32469 ;;Total ram usage:        0 bytes
 32470 ;; Hardware stack levels used:    1
 32471 ;; Hardware stack levels required when called:    3
 32472 ;; This function calls:
 32473 ;;		Nothing
 32474 ;; This function is called by:
 32475 ;;		_check_day_time
 32476 ;; This function uses a reentrant model
 32477 ;;
 32478                           
 32479                           	psect	text146
 32480  01BB0A                     __ptext146:
 32481                           	opt callstack 0
 32482  01BB0A                     _get_ac_charger_relay:
 32483                           	opt callstack 10
 32484                           
 32485                           ;mbmc.c: 141:  return LATDbits.LATD6;
 32486                           
 32487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32488                           ;incstack = 0
 32489  01BB0A  ACBD               	btfss	189,6,c	;volatile
 32490  01BB0C  D003               	goto	u919_20
 32491  01BB0E  6A26               	clrf	btemp^0,c
 32492  01BB10  2A26               	incf	btemp^0,f,c
 32493  01BB12  0012               	return	
 32494  01BB14                     u919_20:
 32495  01BB14  6A26               	clrf	btemp^0,c
 32496                           
 32497                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32498  01BB16  0012               	return		;funcret
 32499  01BB18                     __end_of_get_ac_charger_relay:
 32500                           	opt callstack 0
 32501                           
 32502 ;; *************** function _TMR3_ISR *****************
 32503 ;; Defined at:
 32504 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32505 ;; Parameters:    Size  Location     Type
 32506 ;;		None
 32507 ;; Auto vars:     Size  Location     Type
 32508 ;;		None
 32509 ;; Return value:  Size  Location     Type
 32510 ;;                  1    wreg      void 
 32511 ;; Registers used:
 32512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32513 ;; Tracked objects:
 32514 ;;		On entry : 0/0
 32515 ;;		On exit  : 0/0
 32516 ;;		Unchanged: 0/0
 32517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32520 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32521 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32522 ;;Total ram usage:       25 bytes
 32523 ;; Hardware stack levels used:    1
 32524 ;; Hardware stack levels required when called:   14
 32525 ;; This function calls:
 32526 ;;		_TMR3_CallBack
 32527 ;;		_TMR3_WriteTimer
 32528 ;; This function is called by:
 32529 ;;		Interrupt level 1
 32530 ;; This function uses a non-reentrant model
 32531 ;;
 32532                           
 32533                           	psect	text147
 32534  018B98                     __ptext147:
 32535                           	opt callstack 0
 32536  018B98                     _TMR3_ISR:
 32537                           	opt callstack 3
 32538                           
 32539                           ;incstack = 0
 32540  018B98  006F FF60  F0E0    	movff	status,??_TMR3_ISR
 32541  018B9E  006F FFD8  F0E1    	movff	tblptrl,??_TMR3_ISR+1
 32542  018BA4  006F FFDC  F0E2    	movff	tblptrh,??_TMR3_ISR+2
 32543  018BAA  006F FFE0  F0E3    	movff	tblptru,??_TMR3_ISR+3
 32544  018BB0  006F FFD4  F0E4    	movff	tablat,??_TMR3_ISR+4
 32545  018BB6  0060  F098  F0E5   	movff	btemp,??_TMR3_ISR+5
 32546  018BBC  0060  F09C  F0E6   	movff	btemp+1,??_TMR3_ISR+6
 32547  018BC2  0060  F0A0  F0E7   	movff	btemp+2,??_TMR3_ISR+7
 32548  018BC8  0060  F0A4  F0E8   	movff	btemp+3,??_TMR3_ISR+8
 32549  018BCE  0060  F0A8  F0E9   	movff	btemp+4,??_TMR3_ISR+9
 32550  018BD4  0060  F0AC  F0EA   	movff	btemp+5,??_TMR3_ISR+10
 32551  018BDA  0060  F0B0  F0EB   	movff	btemp+6,??_TMR3_ISR+11
 32552  018BE0  0060  F0B4  F0EC   	movff	btemp+7,??_TMR3_ISR+12
 32553  018BE6  0060  F0B8  F0ED   	movff	btemp+8,??_TMR3_ISR+13
 32554  018BEC  0060  F0BC  F0EE   	movff	btemp+9,??_TMR3_ISR+14
 32555  018BF2  0060  F0C0  F0EF   	movff	btemp+10,??_TMR3_ISR+15
 32556  018BF8  0060  F0C4  F0F0   	movff	btemp+11,??_TMR3_ISR+16
 32557  018BFE  0060  F0D8  F0F1   	movff	btemp+16,??_TMR3_ISR+17
 32558  018C04  0060  F0DC  F0F2   	movff	btemp+17,??_TMR3_ISR+18
 32559  018C0A  0060  F0E0  F0F3   	movff	btemp+18,??_TMR3_ISR+19
 32560  018C10  0060  F0E4  F0F4   	movff	btemp+19,??_TMR3_ISR+20
 32561  018C16  0060  F0E8  F0F5   	movff	btemp+20,??_TMR3_ISR+21
 32562  018C1C  0060  F0EC  F0F6   	movff	btemp+21,??_TMR3_ISR+22
 32563  018C22  0060  F0F0  F0F7   	movff	btemp+22,??_TMR3_ISR+23
 32564  018C28  0060  F0F4  F0F8   	movff	btemp+23,??_TMR3_ISR+24
 32565  018C2E  EE16  F0AE         	lfsr	1,___intlo_sp
 32566                           
 32567                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32568  018C32  0139               	movlb	57	; () banked
 32569  018C34  9DA6               	bcf	166,6,b	;volatile
 32570                           
 32571                           ; BSR set to: 57
 32572                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32573  018C36  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 32574  018C3C  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32575  018C42  ECA4  F0D8         	call	_TMR3_WriteTimer	;wreg free
 32576                           
 32577                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32578  018C46  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 32579  018C48  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 32580  018C4A  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 32581  018C4C  E104               	bnz	i1u1242_20
 32582  018C4E  0E28               	movlw	40
 32583  018C50  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 32584  018C52  A0D8               	btfss	status,0,c
 32585  018C54  D004               	goto	i1l1207
 32586  018C56                     i1u1242_20:
 32587                           
 32588                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32589  018C56  EC21  F0DC         	call	_TMR3_CallBack	;wreg free
 32590                           
 32591                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32592  018C5A  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 32593  018C5C  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 32594  018C5E                     i1l1207:
 32595  018C5E  0060  F3E0  F03D   	movff	??_TMR3_ISR+24,btemp+23
 32596  018C64  0060  F3DC  F03C   	movff	??_TMR3_ISR+23,btemp+22
 32597  018C6A  0060  F3D8  F03B   	movff	??_TMR3_ISR+22,btemp+21
 32598  018C70  0060  F3D4  F03A   	movff	??_TMR3_ISR+21,btemp+20
 32599  018C76  0060  F3D0  F039   	movff	??_TMR3_ISR+20,btemp+19
 32600  018C7C  0060  F3CC  F038   	movff	??_TMR3_ISR+19,btemp+18
 32601  018C82  0060  F3C8  F037   	movff	??_TMR3_ISR+18,btemp+17
 32602  018C88  0060  F3C4  F036   	movff	??_TMR3_ISR+17,btemp+16
 32603  018C8E  0060  F3C0  F031   	movff	??_TMR3_ISR+16,btemp+11
 32604  018C94  0060  F3BC  F030   	movff	??_TMR3_ISR+15,btemp+10
 32605  018C9A  0060  F3B8  F02F   	movff	??_TMR3_ISR+14,btemp+9
 32606  018CA0  0060  F3B4  F02E   	movff	??_TMR3_ISR+13,btemp+8
 32607  018CA6  0060  F3B0  F02D   	movff	??_TMR3_ISR+12,btemp+7
 32608  018CAC  0060  F3AC  F02C   	movff	??_TMR3_ISR+11,btemp+6
 32609  018CB2  0060  F3A8  F02B   	movff	??_TMR3_ISR+10,btemp+5
 32610  018CB8  0060  F3A4  F02A   	movff	??_TMR3_ISR+9,btemp+4
 32611  018CBE  0060  F3A0  F029   	movff	??_TMR3_ISR+8,btemp+3
 32612  018CC4  0060  F39C  F028   	movff	??_TMR3_ISR+7,btemp+2
 32613  018CCA  0060  F398  F027   	movff	??_TMR3_ISR+6,btemp+1
 32614  018CD0  0060  F394  F026   	movff	??_TMR3_ISR+5,btemp
 32615  018CD6  0060  F393  FFF5   	movff	??_TMR3_ISR+4,tablat
 32616  018CDC  0060  F38F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32617  018CE2  0060  F38B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32618  018CE8  0060  F387  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32619  018CEE  0060  F383  FFD8   	movff	??_TMR3_ISR,status
 32620  018CF4  0011               	retfie		f
 32621  018CF6                     __end_of_TMR3_ISR:
 32622                           	opt callstack 0
 32623                           
 32624 ;; *************** function _TMR3_WriteTimer *****************
 32625 ;; Defined at:
 32626 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32627 ;; Parameters:    Size  Location     Type
 32628 ;;  timerVal        2  [STACK] unsigned short 
 32629 ;; Auto vars:     Size  Location     Type
 32630 ;;		None
 32631 ;; Return value:  Size  Location     Type
 32632 ;;                  1  [STACK] void 
 32633 ;; Registers used:
 32634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32635 ;; Tracked objects:
 32636 ;;		On entry : 3F/39
 32637 ;;		On exit  : 0/0
 32638 ;;		Unchanged: 0/0
 32639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32644 ;;Total ram usage:        0 bytes
 32645 ;; Hardware stack levels used:    1
 32646 ;; Hardware stack levels required when called:    3
 32647 ;; This function calls:
 32648 ;;		Nothing
 32649 ;; This function is called by:
 32650 ;;		_TMR3_ISR
 32651 ;; This function uses a reentrant model
 32652 ;;
 32653                           
 32654                           	psect	text148
 32655  01B148                     __ptext148:
 32656                           	opt callstack 0
 32657  01B148                     _TMR3_WriteTimer:
 32658                           	opt callstack 13
 32659                           
 32660                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32661                           
 32662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32663                           ;incstack = 0
 32664  01B148  A4A6               	btfss	166,2,c	;volatile
 32665  01B14A  D00F               	goto	l6563
 32666                           
 32667                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32668  01B14C  90A6               	bcf	166,0,c	;volatile
 32669                           
 32670                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32671                           ;stkvar	_timerVal @ sp[(0)+-2]
 32672  01B14E  0EFF               	movlw	255
 32673  01B150  24E1               	addwf	fsr1l,w,c
 32674  01B152  6ED9               	movwf	fsr2l,c
 32675  01B154  0EFF               	movlw	255
 32676  01B156  20E2               	addwfc	fsr1h,w,c
 32677  01B158  6EDA               	movwf	fsr2h,c
 32678  01B15A  50DF               	movf	indf2,w,c
 32679  01B15C  6EA5               	movwf	165,c	;volatile
 32680                           
 32681                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32682                           ;stkvar	_timerVal @ sp[(0)+-2]
 32683  01B15E  0EFE               	movlw	-2
 32684  01B160  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32685                           
 32686                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32687  01B166  80A6               	bsf	166,0,c	;volatile
 32688                           
 32689                           ;mcc_generated_files/tmr3.c: 141:     }
 32690  01B168  D00C               	goto	l1190
 32691  01B16A                     l6563:
 32692                           
 32693                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32694                           ;stkvar	_timerVal @ sp[(0)+-2]
 32695  01B16A  0EFF               	movlw	255
 32696  01B16C  24E1               	addwf	fsr1l,w,c
 32697  01B16E  6ED9               	movwf	fsr2l,c
 32698  01B170  0EFF               	movlw	255
 32699  01B172  20E2               	addwfc	fsr1h,w,c
 32700  01B174  6EDA               	movwf	fsr2h,c
 32701  01B176  50DF               	movf	indf2,w,c
 32702  01B178  6EA5               	movwf	165,c	;volatile
 32703                           
 32704                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32705                           ;stkvar	_timerVal @ sp[(0)+-2]
 32706  01B17A  0EFE               	movlw	-2
 32707  01B17C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32708  01B182                     l1190:
 32709                           
 32710                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32711  01B182  52E5               	movf	postdec1,f,c
 32712  01B184  52E5               	movf	postdec1,f,c
 32713  01B186  0012               	return		;funcret
 32714  01B188                     __end_of_TMR3_WriteTimer:
 32715                           	opt callstack 0
 32716                           
 32717 ;; *************** function _TMR3_CallBack *****************
 32718 ;; Defined at:
 32719 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32720 ;; Parameters:    Size  Location     Type
 32721 ;;		None
 32722 ;; Auto vars:     Size  Location     Type
 32723 ;;		None
 32724 ;; Return value:  Size  Location     Type
 32725 ;;                  1  [STACK] void 
 32726 ;; Registers used:
 32727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32728 ;; Tracked objects:
 32729 ;;		On entry : 0/39
 32730 ;;		On exit  : 0/0
 32731 ;;		Unchanged: 0/0
 32732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32737 ;;Total ram usage:        0 bytes
 32738 ;; Hardware stack levels used:    1
 32739 ;; Hardware stack levels required when called:   13
 32740 ;; This function calls:
 32741 ;;		Absolute function
 32742 ;;		_TMR3_DefaultInterruptHandler
 32743 ;;		_calc_bsoc
 32744 ;; This function is called by:
 32745 ;;		_TMR3_ISR
 32746 ;; This function uses a reentrant model
 32747 ;;
 32748                           
 32749                           	psect	text149
 32750  01B842                     __ptext149:
 32751                           	opt callstack 0
 32752  01B842                     _TMR3_CallBack:
 32753                           	opt callstack 3
 32754                           
 32755                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32756                           
 32757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32758                           ;incstack = 0
 32759  01B842  0100               	movlb	0	; () banked
 32760  01B844  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32761  01B846  119B               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32762  01B848  119C               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32763  01B84A  B4D8               	btfsc	status,2,c
 32764  01B84C  0012               	return	
 32765                           
 32766                           ; BSR set to: 0
 32767                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32768  01B84E  D801               	call	u1231_28
 32769  01B850  0012               	return	
 32770  01B852                     u1231_28:
 32771  01B852  0005               	push	
 32772  01B854  6EFA               	movwf	pclath,c
 32773  01B856  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32774  01B858  6EFD               	movwf	tosl,c
 32775  01B85A  519B               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32776  01B85C  6EFE               	movwf	tosh,c
 32777  01B85E  519C               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32778  01B860  6EFF               	movwf	tosu,c
 32779  01B862  50FA               	movf	pclath,w,c
 32780  01B864  0012               	return		;indir
 32781  01B866                     __end_of_TMR3_CallBack:
 32782                           	opt callstack 0
 32783                           
 32784 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32785 ;; Defined at:
 32786 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32787 ;; Parameters:    Size  Location     Type
 32788 ;;		None
 32789 ;; Auto vars:     Size  Location     Type
 32790 ;;		None
 32791 ;; Return value:  Size  Location     Type
 32792 ;;                  1  [STACK] void 
 32793 ;; Registers used:
 32794 ;;		None
 32795 ;; Tracked objects:
 32796 ;;		On entry : 3F/0
 32797 ;;		On exit  : 0/0
 32798 ;;		Unchanged: 0/0
 32799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32804 ;;Total ram usage:        0 bytes
 32805 ;; Hardware stack levels used:    1
 32806 ;; Hardware stack levels required when called:    3
 32807 ;; This function calls:
 32808 ;;		Nothing
 32809 ;; This function is called by:
 32810 ;;		_TMR3_Initialize
 32811 ;;		_TMR3_CallBack
 32812 ;; This function uses a reentrant model
 32813 ;;
 32814                           
 32815                           	psect	text150
 32816  01BBB8                     __ptext150:
 32817                           	opt callstack 0
 32818  01BBB8                     _TMR3_DefaultInterruptHandler:
 32819                           	opt callstack 12
 32820                           
 32821                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32822                           
 32823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32824                           ;incstack = 0
 32825  01BBB8  0012               	return		;funcret
 32826  01BBBA                     __end_of_TMR3_DefaultInterruptHandler:
 32827                           	opt callstack 0
 32828                           
 32829 ;; *************** function _calc_bsoc *****************
 32830 ;; Defined at:
 32831 ;;		line 39 in file "bsoc.c"
 32832 ;; Parameters:    Size  Location     Type
 32833 ;;		None
 32834 ;; Auto vars:     Size  Location     Type
 32835 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32836 ;;		 -> port_data(512), 
 32837 ;; Return value:  Size  Location     Type
 32838 ;;                  1  [STACK] void 
 32839 ;; Registers used:
 32840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32841 ;; Tracked objects:
 32842 ;;		On entry : 3F/0
 32843 ;;		On exit  : 5/1
 32844 ;;		Unchanged: 0/0
 32845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32850 ;;Total ram usage:        0 bytes
 32851 ;; Hardware stack levels used:    1
 32852 ;; Hardware stack levels required when called:   12
 32853 ;; This function calls:
 32854 ;;		_StartTimer
 32855 ;;		___asfladd
 32856 ;;		___fldiv
 32857 ;;		___flge
 32858 ;;		___flmul
 32859 ;;		___flneg
 32860 ;;		___fltol
 32861 ;;		_fabsf
 32862 ;;		_port_data_dma_ptr
 32863 ;;		_send_port_data_dma
 32864 ;;		_sprintf
 32865 ;;		_strlen
 32866 ;; This function is called by:
 32867 ;;		_init_bsoc
 32868 ;;		_TMR3_CallBack
 32869 ;; This function uses a reentrant model
 32870 ;;
 32871                           
 32872                           	psect	text151
 32873  014326                     __ptext151:
 32874                           	opt callstack 0
 32875  014326                     _calc_bsoc:
 32876                           	opt callstack 0
 32877                           
 32878                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32879  014326  52E6               	movf	postinc1,f,c
 32880  014328  52E6               	movf	postinc1,f,c
 32881                           
 32882                           ;incstack = 0
 32883                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 32884  01432A  82BE               	bsf	190,1,c	;volatile
 32885                           
 32886                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 32887  01432C  0E00               	movlw	0
 32888  01432E  6EE6               	movwf	postinc1,c
 32889  014330  0E00               	movlw	0
 32890  014332  6EE6               	movwf	postinc1,c
 32891  014334  0E61               	movlw	97
 32892  014336  6EE6               	movwf	postinc1,c
 32893  014338  0E45               	movlw	69
 32894  01433A  6EE6               	movwf	postinc1,c
 32895  01433C  EE21  F343         	lfsr	2,_C+68	;volatile
 32896  014340  006F FF7B FFE6     	movff	postinc2,postinc1
 32897  014346  006F FF7B FFE6     	movff	postinc2,postinc1
 32898  01434C  006F FF7B FFE6     	movff	postinc2,postinc1
 32899  014352  006F FF7B FFE6     	movff	postinc2,postinc1
 32900  014358  EC4B  F0A5         	call	___fldiv	;wreg free
 32901  01435C  0060  F09B  FFE6   	movff	btemp,postinc1
 32902  014362  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32903  014368  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32904  01436E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32905  014374  0E8F               	movlw	low (_C+144)
 32906  014376  6EE6               	movwf	postinc1,c
 32907  014378  0E07               	movlw	high (_C+144)
 32908  01437A  6EE6               	movwf	postinc1,c
 32909  01437C  EC3C  F0D4         	call	___asfladd	;wreg free
 32910                           
 32911                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 32912  014380  EE21  F38F         	lfsr	2,_C+144	;volatile
 32913  014384  006F FF7B FFE6     	movff	postinc2,postinc1
 32914  01438A  006F FF7B FFE6     	movff	postinc2,postinc1
 32915  014390  006F FF7B FFE6     	movff	postinc2,postinc1
 32916  014396  006F FF7B FFE6     	movff	postinc2,postinc1
 32917  01439C  EE21  F38B         	lfsr	2,_C+140	;volatile
 32918  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 32919  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 32920  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 32921  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 32922  0143B8  EC1B  F0C5         	call	___flge	;wreg free
 32923  0143BC  B026               	btfsc	btemp& (0+255),0,c
 32924  0143BE  D00E               	goto	l12599
 32925                           
 32926                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 32927  0143C0  EE21  F38B         	lfsr	2,_C+140	;volatile
 32928  0143C4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 32929  0143CA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 32930  0143D0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 32931  0143D6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 32932  0143DC                     l12599:
 32933                           
 32934                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 32935  0143DC  0ECD               	movlw	205
 32936  0143DE  6EE6               	movwf	postinc1,c
 32937  0143E0  0ECC               	movlw	204
 32938  0143E2  6EE6               	movwf	postinc1,c
 32939  0143E4  0ECC               	movlw	204
 32940  0143E6  6EE6               	movwf	postinc1,c
 32941  0143E8  0E3D               	movlw	61
 32942  0143EA  6EE6               	movwf	postinc1,c
 32943  0143EC  EE21  F38F         	lfsr	2,_C+144	;volatile
 32944  0143F0  006F FF7B FFE6     	movff	postinc2,postinc1
 32945  0143F6  006F FF7B FFE6     	movff	postinc2,postinc1
 32946  0143FC  006F FF7B FFE6     	movff	postinc2,postinc1
 32947  014402  006F FF7B FFE6     	movff	postinc2,postinc1
 32948  014408  EC1B  F0C5         	call	___flge	;wreg free
 32949  01440C  B026               	btfsc	btemp& (0+255),0,c
 32950  01440E  D010               	goto	l12603
 32951                           
 32952                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 32953  014410  0ECD               	movlw	205
 32954  014412  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 32955  014418  0ECC               	movlw	204
 32956  01441A  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 32957  014420  0ECC               	movlw	204
 32958  014422  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 32959  014428  0E3D               	movlw	61
 32960  01442A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 32961  014430                     l12603:
 32962                           
 32963                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 32964  014430  0E00               	movlw	0
 32965  014432  6EE6               	movwf	postinc1,c
 32966  014434  0E00               	movlw	0
 32967  014436  6EE6               	movwf	postinc1,c
 32968  014438  0E61               	movlw	97
 32969  01443A  6EE6               	movwf	postinc1,c
 32970  01443C  0E45               	movlw	69
 32971  01443E  6EE6               	movwf	postinc1,c
 32972  014440  EE21  F347         	lfsr	2,_C+72	;volatile
 32973  014444  006F FF7B FFE6     	movff	postinc2,postinc1
 32974  01444A  006F FF7B FFE6     	movff	postinc2,postinc1
 32975  014450  006F FF7B FFE6     	movff	postinc2,postinc1
 32976  014456  006F FF7B FFE6     	movff	postinc2,postinc1
 32977  01445C  EC4B  F0A5         	call	___fldiv	;wreg free
 32978  014460  0060  F09B  FFE6   	movff	btemp,postinc1
 32979  014466  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32980  01446C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32981  014472  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32982  014478  0E93               	movlw	low (_C+148)
 32983  01447A  6EE6               	movwf	postinc1,c
 32984  01447C  0E07               	movlw	high (_C+148)
 32985  01447E  6EE6               	movwf	postinc1,c
 32986  014480  EC3C  F0D4         	call	___asfladd	;wreg free
 32987                           
 32988                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 32989  014484  0E00               	movlw	0
 32990  014486  6EE6               	movwf	postinc1,c
 32991  014488  0E00               	movlw	0
 32992  01448A  6EE6               	movwf	postinc1,c
 32993  01448C  0E61               	movlw	97
 32994  01448E  6EE6               	movwf	postinc1,c
 32995  014490  0E45               	movlw	69
 32996  014492  6EE6               	movwf	postinc1,c
 32997  014494  EE21  F37B         	lfsr	2,_C+124	;volatile
 32998  014498  006F FF7B FFE6     	movff	postinc2,postinc1
 32999  01449E  006F FF7B FFE6     	movff	postinc2,postinc1
 33000  0144A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33001  0144AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33002  0144B0  EC4B  F0A5         	call	___fldiv	;wreg free
 33003  0144B4  0060  F09B  FFE6   	movff	btemp,postinc1
 33004  0144BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33005  0144C0  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33006  0144C6  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33007  0144CC  0EA3               	movlw	low (_C+164)
 33008  0144CE  6EE6               	movwf	postinc1,c
 33009  0144D0  0E07               	movlw	high (_C+164)
 33010  0144D2  6EE6               	movwf	postinc1,c
 33011  0144D4  EC3C  F0D4         	call	___asfladd	;wreg free
 33012                           
 33013                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 33014  0144D8  0E00               	movlw	0
 33015  0144DA  6EE6               	movwf	postinc1,c
 33016  0144DC  0E00               	movlw	0
 33017  0144DE  6EE6               	movwf	postinc1,c
 33018  0144E0  0E61               	movlw	97
 33019  0144E2  6EE6               	movwf	postinc1,c
 33020  0144E4  0E45               	movlw	69
 33021  0144E6  6EE6               	movwf	postinc1,c
 33022  0144E8  EE21  F377         	lfsr	2,_C+120	;volatile
 33023  0144EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33024  0144F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33025  0144F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33026  0144FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33027  014504  EC4B  F0A5         	call	___fldiv	;wreg free
 33028  014508  0060  F09B  FFE6   	movff	btemp,postinc1
 33029  01450E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33030  014514  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33031  01451A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33032  014520  0EA7               	movlw	low (_C+168)
 33033  014522  6EE6               	movwf	postinc1,c
 33034  014524  0E07               	movlw	high (_C+168)
 33035  014526  6EE6               	movwf	postinc1,c
 33036  014528  EC3C  F0D4         	call	___asfladd	;wreg free
 33037                           
 33038                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 33039  01452C  0E00               	movlw	0
 33040  01452E  6EE6               	movwf	postinc1,c
 33041  014530  0E00               	movlw	0
 33042  014532  6EE6               	movwf	postinc1,c
 33043  014534  0E61               	movlw	97
 33044  014536  6EE6               	movwf	postinc1,c
 33045  014538  0E45               	movlw	69
 33046  01453A  6EE6               	movwf	postinc1,c
 33047  01453C  EE21  F373         	lfsr	2,_C+116	;volatile
 33048  014540  006F FF7B FFE6     	movff	postinc2,postinc1
 33049  014546  006F FF7B FFE6     	movff	postinc2,postinc1
 33050  01454C  006F FF7B FFE6     	movff	postinc2,postinc1
 33051  014552  006F FF7B FFE6     	movff	postinc2,postinc1
 33052  014558  EC4B  F0A5         	call	___fldiv	;wreg free
 33053  01455C  0060  F09B  FFE6   	movff	btemp,postinc1
 33054  014562  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33055  014568  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33056  01456E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33057  014574  0EAB               	movlw	low (_C+172)
 33058  014576  6EE6               	movwf	postinc1,c
 33059  014578  0E07               	movlw	high (_C+172)
 33060  01457A  6EE6               	movwf	postinc1,c
 33061  01457C  EC3C  F0D4         	call	___asfladd	;wreg free
 33062                           
 33063                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 33064  014580  EE21  F37F         	lfsr	2,_C+128	;volatile
 33065  014584  006F FF7B FFE6     	movff	postinc2,postinc1
 33066  01458A  006F FF7B FFE6     	movff	postinc2,postinc1
 33067  014590  006F FF7B FFE6     	movff	postinc2,postinc1
 33068  014596  006F FF7B FFE6     	movff	postinc2,postinc1
 33069  01459C  0E00               	movlw	0
 33070  01459E  6EE6               	movwf	postinc1,c
 33071  0145A0  0E00               	movlw	0
 33072  0145A2  6EE6               	movwf	postinc1,c
 33073  0145A4  0E00               	movlw	0
 33074  0145A6  6EE6               	movwf	postinc1,c
 33075  0145A8  0E00               	movlw	0
 33076  0145AA  6EE6               	movwf	postinc1,c
 33077  0145AC  EC1B  F0C5         	call	___flge	;wreg free
 33078  0145B0  B026               	btfsc	btemp& (0+255),0,c
 33079  0145B2  D02A               	goto	l12609
 33080                           
 33081                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 33082  0145B4  0E00               	movlw	0
 33083  0145B6  6EE6               	movwf	postinc1,c
 33084  0145B8  0E00               	movlw	0
 33085  0145BA  6EE6               	movwf	postinc1,c
 33086  0145BC  0E61               	movlw	97
 33087  0145BE  6EE6               	movwf	postinc1,c
 33088  0145C0  0E45               	movlw	69
 33089  0145C2  6EE6               	movwf	postinc1,c
 33090  0145C4  EE21  F37F         	lfsr	2,_C+128	;volatile
 33091  0145C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33092  0145CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33093  0145D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33094  0145DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33095  0145E0  EC4B  F0A5         	call	___fldiv	;wreg free
 33096  0145E4  0060  F09B  FFE6   	movff	btemp,postinc1
 33097  0145EA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33098  0145F0  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33099  0145F6  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33100  0145FC  0E9B               	movlw	low (_C+156)
 33101  0145FE  6EE6               	movwf	postinc1,c
 33102  014600  0E07               	movlw	high (_C+156)
 33103  014602  6EE6               	movwf	postinc1,c
 33104  014604  EC3C  F0D4         	call	___asfladd	;wreg free
 33105  014608                     l12609:
 33106                           
 33107                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33108  014608  EE21  F37F         	lfsr	2,_C+128	;volatile
 33109  01460C  0E03               	movlw	3
 33110  01460E  AEDB               	btfss	plusw2,7,c
 33111  014610  D038               	goto	l12613
 33112                           
 33113                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33114  014612  0E00               	movlw	0
 33115  014614  6EE6               	movwf	postinc1,c
 33116  014616  0E00               	movlw	0
 33117  014618  6EE6               	movwf	postinc1,c
 33118  01461A  0E61               	movlw	97
 33119  01461C  6EE6               	movwf	postinc1,c
 33120  01461E  0E45               	movlw	69
 33121  014620  6EE6               	movwf	postinc1,c
 33122  014622  EE21  F37F         	lfsr	2,_C+128	;volatile
 33123  014626  006F FF7B FFE6     	movff	postinc2,postinc1
 33124  01462C  006F FF7B FFE6     	movff	postinc2,postinc1
 33125  014632  006F FF7B FFE6     	movff	postinc2,postinc1
 33126  014638  006F FF7B FFE6     	movff	postinc2,postinc1
 33127  01463E  EC4B  F0A5         	call	___fldiv	;wreg free
 33128  014642  0060  F09B  FFE6   	movff	btemp,postinc1
 33129  014648  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33130  01464E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33131  014654  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33132  01465A  EC14  F0D0         	call	_fabsf	;wreg free
 33133  01465E  0060  F09B  FFE6   	movff	btemp,postinc1
 33134  014664  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33135  01466A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33136  014670  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33137  014676  0E9F               	movlw	low (_C+160)
 33138  014678  6EE6               	movwf	postinc1,c
 33139  01467A  0E07               	movlw	high (_C+160)
 33140  01467C  6EE6               	movwf	postinc1,c
 33141  01467E  EC3C  F0D4         	call	___asfladd	;wreg free
 33142  014682                     l12613:
 33143                           
 33144                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33145  014682  0E00               	movlw	0
 33146  014684  6EE6               	movwf	postinc1,c
 33147  014686  0E00               	movlw	0
 33148  014688  6EE6               	movwf	postinc1,c
 33149  01468A  0EC8               	movlw	200
 33150  01468C  6EE6               	movwf	postinc1,c
 33151  01468E  0E42               	movlw	66
 33152  014690  6EE6               	movwf	postinc1,c
 33153  014692  EE21  F38B         	lfsr	2,_C+140	;volatile
 33154  014696  006F FF7B FFE6     	movff	postinc2,postinc1
 33155  01469C  006F FF7B FFE6     	movff	postinc2,postinc1
 33156  0146A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33157  0146A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33158  0146AE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33159  0146B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33160  0146B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33161  0146BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33162  0146C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33163  0146CA  EC4B  F0A5         	call	___fldiv	;wreg free
 33164  0146CE  0060  F09B  FFE6   	movff	btemp,postinc1
 33165  0146D4  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33166  0146DA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33167  0146E0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33168  0146E6  ECA0  F099         	call	___flmul	;wreg free
 33169  0146EA  0060  F09B  FFE6   	movff	btemp,postinc1
 33170  0146F0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33171  0146F6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33172  0146FC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33173  014702  EC62  F0C4         	call	___fltol	;wreg free
 33174  014706  0060  F098  F030   	movff	btemp,btemp+10
 33175  01470C  0060  F09C  F031   	movff	btemp+1,btemp+11
 33176  014712  0E01               	movlw	1
 33177  014714  2630               	addwf	(btemp+10)^0,f,c
 33178  014716  0E00               	movlw	0
 33179  014718  2231               	addwfc	(btemp+11)^0,f,c
 33180  01471A  0060  F0C0  F7B1   	movff	btemp+10,_C+178	;volatile
 33181  014720  0060  F0C4  F7B2   	movff	btemp+11,_C+179	;volatile
 33182                           
 33183                           ;bsoc.c: 62:  if (C.soc > 100)
 33184  014726  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33185  01472A  0E01               	movlw	1
 33186  01472C  50DB               	movf	plusw2,w,c
 33187  01472E  E104               	bnz	u1223_20
 33188  014730  0E65               	movlw	101
 33189  014732  5CDE               	subwf	postinc2,w,c
 33190  014734  A0D8               	btfss	status,0,c
 33191  014736  D008               	goto	l12619
 33192  014738                     u1223_20:
 33193                           
 33194                           ;bsoc.c: 63:   C.soc = 100;
 33195  014738  0E64               	movlw	100
 33196  01473A  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
 33197  014740  0E00               	movlw	0
 33198  014742  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
 33199  014748                     l12619:
 33200                           
 33201                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33202  014748  EE21  F343         	lfsr	2,_C+68	;volatile
 33203  01474C  0E03               	movlw	3
 33204  01474E  AEDB               	btfss	plusw2,7,c
 33205  014750  D047               	goto	l2032
 33206                           
 33207                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33208  014752  EE21  F343         	lfsr	2,_C+68	;volatile
 33209  014756  006F FF7B FFE6     	movff	postinc2,postinc1
 33210  01475C  006F FF7B FFE6     	movff	postinc2,postinc1
 33211  014762  006F FF7B FFE6     	movff	postinc2,postinc1
 33212  014768  006F FF7B FFE6     	movff	postinc2,postinc1
 33213  01476E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33214  014772  006F FF7B FFE6     	movff	postinc2,postinc1
 33215  014778  006F FF7B FFE6     	movff	postinc2,postinc1
 33216  01477E  006F FF7B FFE6     	movff	postinc2,postinc1
 33217  014784  006F FF7B FFE6     	movff	postinc2,postinc1
 33218  01478A  EC4B  F0A5         	call	___fldiv	;wreg free
 33219  01478E  0060  F09B  FFE6   	movff	btemp,postinc1
 33220  014794  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33221  01479A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33222  0147A0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33223  0147A6  EC2E  F0D7         	call	___flneg	;wreg free
 33224  0147AA  0060  F09B  FFE6   	movff	btemp,postinc1
 33225  0147B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33226  0147B6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33227  0147BC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33228  0147C2  EC62  F0C4         	call	___fltol	;wreg free
 33229  0147C6  0060  F098  F030   	movff	btemp,btemp+10
 33230  0147CC  0060  F09C  F031   	movff	btemp+1,btemp+11
 33231  0147D2  0060  F0C0  F7AF   	movff	btemp+10,_C+176	;volatile
 33232  0147D8  0060  F0C4  F7B0   	movff	btemp+11,_C+177	;volatile
 33233                           
 33234                           ;bsoc.c: 67:  } else {
 33235  0147DE  D008               	goto	l12623
 33236  0147E0                     l2032:
 33237                           
 33238                           ;bsoc.c: 68:   C.runtime = 120;
 33239  0147E0  0E78               	movlw	120
 33240  0147E2  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33241  0147E8  0E00               	movlw	0
 33242  0147EA  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33243  0147F0                     l12623:
 33244                           
 33245                           ;bsoc.c: 70:  if (C.runtime > 120)
 33246  0147F0  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33247  0147F4  0E01               	movlw	1
 33248  0147F6  50DB               	movf	plusw2,w,c
 33249  0147F8  E104               	bnz	u1225_20
 33250  0147FA  0E79               	movlw	121
 33251  0147FC  5CDE               	subwf	postinc2,w,c
 33252  0147FE  A0D8               	btfss	status,0,c
 33253  014800  D008               	goto	l12627
 33254  014802                     u1225_20:
 33255                           
 33256                           ;bsoc.c: 71:   C.runtime = 120;
 33257  014802  0E78               	movlw	120
 33258  014804  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33259  01480A  0E00               	movlw	0
 33260  01480C  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33261  014812                     l12627:
 33262                           
 33263                           ;bsoc.c: 73:  V.lowint_count++;
 33264  014812  0E01               	movlw	1
 33265  014814  0101               	movlb	1	; () banked
 33266  014816  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 33267  014818  0E00               	movlw	0
 33268  01481A  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33269  01481C  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33270  01481E  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33271                           
 33272                           ;bsoc.c: 75:  if (!log_update_wait++ && V.system_stable) {
 33273  014820  2A1A               	incf	calc_bsoc@log_update_wait^0,f,c
 33274  014822  041A               	decf	calc_bsoc@log_update_wait^0,w,c
 33275  014824  A4D8               	btfss	status,2,c
 33276  014826  D12B               	goto	l12639
 33277                           
 33278                           ; BSR set to: 1
 33279  014828  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33280  01482A  B4D8               	btfsc	status,2,c
 33281  01482C  D128               	goto	l12639
 33282                           
 33283                           ; BSR set to: 1
 33284                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33285  01482E  ECA0  F0DD         	call	_port_data_dma_ptr	;wreg free
 33286                           
 33287                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33288  014832  0EFF               	movlw	-1
 33289  014834  0060  F09F  FFE3   	movff	btemp+1,plusw1
 33290  01483A  0EFE               	movlw	-2
 33291  01483C  0060  F09B  FFE3   	movff	btemp,plusw1
 33292                           
 33293                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f,%4.3f,%d,%lu,%lu\r\n",
 33294  014842  EE22  F022         	lfsr	2,_C+291	;volatile
 33295  014846  006F FF7B FFE6     	movff	postinc2,postinc1
 33296  01484C  006F FF7B FFE6     	movff	postinc2,postinc1
 33297  014852  006F FF7B FFE6     	movff	postinc2,postinc1
 33298  014858  006F FF7B FFE6     	movff	postinc2,postinc1
 33299  01485E  EE22  F01E         	lfsr	2,_C+287	;volatile
 33300  014862  006F FF7B FFE6     	movff	postinc2,postinc1
 33301  014868  006F FF7B FFE6     	movff	postinc2,postinc1
 33302  01486E  006F FF7B FFE6     	movff	postinc2,postinc1
 33303  014874  006F FF7B FFE6     	movff	postinc2,postinc1
 33304  01487A  EE22  F01D         	lfsr	2,_C+286	;volatile
 33305  01487E  50DF               	movf	indf2,w,c
 33306  014880  6EE6               	movwf	postinc1,c
 33307  014882  0E00               	movlw	0
 33308  014884  6EE6               	movwf	postinc1,c
 33309  014886  EE21  F367         	lfsr	2,_C+104	;volatile
 33310  01488A  006F FF7B FFE6     	movff	postinc2,postinc1
 33311  014890  006F FF7B FFE6     	movff	postinc2,postinc1
 33312  014896  006F FF7B FFE6     	movff	postinc2,postinc1
 33313  01489C  006F FF7B FFE6     	movff	postinc2,postinc1
 33314  0148A2  EE21  F387         	lfsr	2,_C+136	;volatile
 33315  0148A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33316  0148AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33317  0148B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33318  0148B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33319  0148BE  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33320  0148C2  006F FF78  F030    	movff	postinc2,btemp+10
 33321  0148C8  006F FF74  F031    	movff	postdec2,btemp+11
 33322  0148CE  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 33323  0148D4  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 33324  0148DA  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33325  0148DE  006F FF78  F030    	movff	postinc2,btemp+10
 33326  0148E4  006F FF74  F031    	movff	postdec2,btemp+11
 33327  0148EA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 33328  0148F0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 33329  0148F6  EE21  F393         	lfsr	2,_C+148	;volatile
 33330  0148FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33331  014900  006F FF7B FFE6     	movff	postinc2,postinc1
 33332  014906  006F FF7B FFE6     	movff	postinc2,postinc1
 33333  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 33334  014912  EE21  F38F         	lfsr	2,_C+144	;volatile
 33335  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 33336  01491C  006F FF7B FFE6     	movff	postinc2,postinc1
 33337  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 33338  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 33339  01492E  EE21  F377         	lfsr	2,_C+120	;volatile
 33340  014932  006F FF7B FFE6     	movff	postinc2,postinc1
 33341  014938  006F FF7B FFE6     	movff	postinc2,postinc1
 33342  01493E  006F FF7B FFE6     	movff	postinc2,postinc1
 33343  014944  006F FF7B FFE6     	movff	postinc2,postinc1
 33344  01494A  EE21  F373         	lfsr	2,_C+116	;volatile
 33345  01494E  006F FF7B FFE6     	movff	postinc2,postinc1
 33346  014954  006F FF7B FFE6     	movff	postinc2,postinc1
 33347  01495A  006F FF7B FFE6     	movff	postinc2,postinc1
 33348  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 33349  014966  EE21  F37B         	lfsr	2,_C+124	;volatile
 33350  01496A  006F FF7B FFE6     	movff	postinc2,postinc1
 33351  014970  006F FF7B FFE6     	movff	postinc2,postinc1
 33352  014976  006F FF7B FFE6     	movff	postinc2,postinc1
 33353  01497C  006F FF7B FFE6     	movff	postinc2,postinc1
 33354  014982  EE21  F37F         	lfsr	2,_C+128	;volatile
 33355  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 33356  01498C  006F FF7B FFE6     	movff	postinc2,postinc1
 33357  014992  006F FF7B FFE6     	movff	postinc2,postinc1
 33358  014998  006F FF7B FFE6     	movff	postinc2,postinc1
 33359  01499E  EE21  F363         	lfsr	2,_C+100	;volatile
 33360  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33361  0149A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33362  0149AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33363  0149B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33364  0149BA  EE21  F34B         	lfsr	2,_C+76	;volatile
 33365  0149BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33366  0149C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33367  0149CA  006F FF7B FFE6     	movff	postinc2,postinc1
 33368  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 33369  0149D6  EE21  F34F         	lfsr	2,_C+80	;volatile
 33370  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33371  0149E0  006F FF7B FFE6     	movff	postinc2,postinc1
 33372  0149E6  006F FF7B FFE6     	movff	postinc2,postinc1
 33373  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33374  0149F2  EE21  F353         	lfsr	2,_C+84	;volatile
 33375  0149F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33376  0149FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33377  014A02  006F FF7B FFE6     	movff	postinc2,postinc1
 33378  014A08  006F FF7B FFE6     	movff	postinc2,postinc1
 33379  014A0E  0060  F623  FFE6   	movff	_V+129,postinc1
 33380  014A14  0060  F627  FFE6   	movff	_V+130,postinc1
 33381  014A1A  0060  F62B  FFE6   	movff	_V+131,postinc1
 33382  014A20  0060  F62F  FFE6   	movff	_V+132,postinc1
 33383  014A26  0E31               	movlw	49
 33384  014A28  6EE6               	movwf	postinc1,c
 33385  014A2A  0E00               	movlw	0
 33386  014A2C  6EE6               	movwf	postinc1,c
 33387  014A2E  0E4F               	movlw	low STR_65
 33388  014A30  6EE6               	movwf	postinc1,c
 33389  014A32  0EFC               	movlw	high STR_65
 33390  014A34  6EE6               	movwf	postinc1,c
 33391                           
 33392                           ;stkvar	_log_ptr @ sp[(-72)+0]
 33393  014A36  0EB8               	movlw	-72
 33394  014A38  006F FF8F FFE6     	movff	plusw1,postinc1
 33395  014A3E  006F FF8F FFE6     	movff	plusw1,postinc1
 33396  014A44  0E48               	movlw	72
 33397  014A46  6EE6               	movwf	postinc1,c
 33398  014A48  ECBC  F0CB         	call	_sprintf	;wreg free
 33399                           
 33400                           ; BSR set to: 0
 33401                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33402  014A4C  0E7D               	movlw	125
 33403  014A4E  6EE6               	movwf	postinc1,c
 33404  014A50  0E00               	movlw	0
 33405  014A52  6EE6               	movwf	postinc1,c
 33406  014A54  0E0A               	movlw	10
 33407  014A56  6EE6               	movwf	postinc1,c
 33408  014A58  EC44  F0D8         	call	_StartTimer	;wreg free
 33409                           
 33410                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33411                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33412  014A5C  0EFE               	movlw	-2
 33413  014A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 33414  014A64  006F FF8F FFE6     	movff	plusw1,postinc1
 33415  014A6A  ECBD  F0D1         	call	_strlen	;wreg free
 33416  014A6E  0060  F09B  FFE6   	movff	btemp,postinc1
 33417  014A74  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33418  014A7A  ECB9  F0D6         	call	_send_port_data_dma	;wreg free
 33419  014A7E                     l12639:
 33420                           
 33421                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33422  014A7E  0E09               	movlw	9
 33423  014A80  641A               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33424  014A82  D001               	goto	l2036
 33425                           
 33426                           ;bsoc.c: 87:   log_update_wait = 0;
 33427  014A84  6A1A               	clrf	calc_bsoc@log_update_wait^0,c
 33428  014A86                     l2036:
 33429                           
 33430                           ;bsoc.c: 89:  C.update = 0;
 33431  014A86  0E00               	movlw	0
 33432  014A88  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33433                           
 33434                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33435  014A8E  92BE               	bcf	190,1,c	;volatile
 33436                           
 33437                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33438  014A90  52E5               	movf	postdec1,f,c
 33439  014A92  52E5               	movf	postdec1,f,c
 33440  014A94  0012               	return		;funcret
 33441  014A96                     __end_of_calc_bsoc:
 33442                           	opt callstack 0
 33443                           
 33444 ;; *************** function _send_port_data_dma *****************
 33445 ;; Defined at:
 33446 ;;		line 258 in file "eadog.c"
 33447 ;; Parameters:    Size  Location     Type
 33448 ;;  dsize           2  [STACK] unsigned short 
 33449 ;; Auto vars:     Size  Location     Type
 33450 ;;		None
 33451 ;; Return value:  Size  Location     Type
 33452 ;;                  1  [STACK] void 
 33453 ;; Registers used:
 33454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33455 ;; Tracked objects:
 33456 ;;		On entry : 0/0
 33457 ;;		On exit  : 3F/3B
 33458 ;;		Unchanged: 0/0
 33459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33464 ;;Total ram usage:        0 bytes
 33465 ;; Hardware stack levels used:    1
 33466 ;; Hardware stack levels required when called:    3
 33467 ;; This function calls:
 33468 ;;		Nothing
 33469 ;; This function is called by:
 33470 ;;		_calc_bsoc
 33471 ;; This function uses a reentrant model
 33472 ;;
 33473                           
 33474                           	psect	text152
 33475  01AD72                     __ptext152:
 33476                           	opt callstack 0
 33477  01AD72                     _send_port_data_dma:
 33478                           	opt callstack 11
 33479                           
 33480                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33481                           ;stkvar	_dsize @ sp[(0)+-2]
 33482                           
 33483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33484                           ;incstack = 0
 33485  01AD72  0EFE               	movlw	-2
 33486  01AD74  04E3               	decf	plusw1,w,c
 33487  01AD76  0EFF               	movlw	-1
 33488  01AD78  006F FF8C  F026    	movff	plusw1,btemp
 33489  01AD7E  0E02               	movlw	2
 33490  01AD80  5A26               	subwfb	btemp^0,f,c
 33491  01AD82  A0D8               	btfss	status,0,c
 33492  01AD84  D00C               	goto	l9841
 33493                           
 33494                           ;eadog.c: 261:   dsize = 512;
 33495  01AD86  0E00               	movlw	0
 33496  01AD88  6E30               	movwf	(btemp+10)^0,c
 33497  01AD8A  0E02               	movlw	2
 33498  01AD8C  6E31               	movwf	(btemp+11)^0,c
 33499                           
 33500                           ;stkvar	_dsize @ sp[(0)+-2]
 33501  01AD8E  0EFE               	movlw	-2
 33502  01AD90  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 33503  01AD96  0EFF               	movlw	-1
 33504  01AD98  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 33505  01AD9E                     l9841:
 33506                           
 33507                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33508  01AD9E  013B               	movlb	59	; () banked
 33509  01ADA0  9FDC               	bcf	220,7,b	;volatile
 33510                           
 33511                           ; BSR set to: 59
 33512                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33513                           ;stkvar	_dsize @ sp[(0)+-2]
 33514  01ADA2  0EFE               	movlw	-2
 33515  01ADA4  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33516  01ADAA  0EFF               	movlw	-1
 33517  01ADAC  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33518                           
 33519                           ; BSR set to: 59
 33520                           ;eadog.c: 265:  DMA2DSZ = 1;
 33521  01ADB2  0E00               	movlw	0
 33522  01ADB4  6FCF               	movwf	207,b	;volatile
 33523  01ADB6  0E01               	movlw	1
 33524  01ADB8  6FCE               	movwf	206,b	;volatile
 33525                           
 33526                           ; BSR set to: 59
 33527                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33528  01ADBA  8FDC               	bsf	220,7,b	;volatile
 33529                           
 33530                           ; BSR set to: 59
 33531                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33532  01ADBC  8DDC               	bsf	220,6,b	;volatile
 33533                           
 33534                           ; BSR set to: 59
 33535                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33536  01ADBE  52E5               	movf	postdec1,f,c
 33537  01ADC0  52E5               	movf	postdec1,f,c
 33538  01ADC2  0012               	return		;funcret
 33539  01ADC4                     __end_of_send_port_data_dma:
 33540                           	opt callstack 0
 33541                           
 33542 ;; *************** function _port_data_dma_ptr *****************
 33543 ;; Defined at:
 33544 ;;		line 273 in file "eadog.c"
 33545 ;; Parameters:    Size  Location     Type
 33546 ;;		None
 33547 ;; Auto vars:     Size  Location     Type
 33548 ;;		None
 33549 ;; Return value:  Size  Location     Type
 33550 ;;                  2  [STACK] PTR unsigned char 
 33551 ;; Registers used:
 33552 ;;		wreg, status,2, status,0, btemp, btemp+1
 33553 ;; Tracked objects:
 33554 ;;		On entry : 3F/1
 33555 ;;		On exit  : 0/0
 33556 ;;		Unchanged: 0/0
 33557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33562 ;;Total ram usage:        0 bytes
 33563 ;; Hardware stack levels used:    1
 33564 ;; Hardware stack levels required when called:    3
 33565 ;; This function calls:
 33566 ;;		Nothing
 33567 ;; This function is called by:
 33568 ;;		_calc_bsoc
 33569 ;; This function uses a reentrant model
 33570 ;;
 33571                           
 33572                           	psect	text153
 33573  01BB40                     __ptext153:
 33574                           	opt callstack 0
 33575  01BB40                     _port_data_dma_ptr:
 33576                           	opt callstack 11
 33577                           
 33578                           ;eadog.c: 275:  return port_data;
 33579                           
 33580                           ; BSR set to: 59
 33581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33582                           ;incstack = 0
 33583  01BB40  0EFF               	movlw	low _port_data
 33584  01BB42  6E26               	movwf	btemp^0,c
 33585  01BB44  0E04               	movlw	high _port_data
 33586  01BB46  6E27               	movwf	(btemp+1)^0,c
 33587                           
 33588                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33589  01BB48  0012               	return		;funcret
 33590  01BB4A                     __end_of_port_data_dma_ptr:
 33591                           	opt callstack 0
 33592                           
 33593 ;; *************** function ___asfladd *****************
 33594 ;; Defined at:
 33595 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 33596 ;; Parameters:    Size  Location     Type
 33597 ;;  f1p             2  [STACK] PTR 
 33598 ;;		 -> C(295), 
 33599 ;;  f2              4  [STACK] PTR 
 33600 ;; Auto vars:     Size  Location     Type
 33601 ;;		None
 33602 ;; Return value:  Size  Location     Type
 33603 ;;                  4  [STACK] PTR 
 33604 ;; Registers used:
 33605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33606 ;; Tracked objects:
 33607 ;;		On entry : 0/0
 33608 ;;		On exit  : 0/0
 33609 ;;		Unchanged: 0/0
 33610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33615 ;;Total ram usage:        0 bytes
 33616 ;; Hardware stack levels used:    1
 33617 ;; Hardware stack levels required when called:    4
 33618 ;; This function calls:
 33619 ;;		___fladd
 33620 ;; This function is called by:
 33621 ;;		_calc_bsoc
 33622 ;; This function uses a reentrant model
 33623 ;;
 33624                           
 33625                           	psect	text154
 33626  01A878                     __ptext154:
 33627                           	opt callstack 0
 33628  01A878                     ___asfladd:
 33629                           	opt callstack 10
 33630                           
 33631                           ;	Return value of ___asfladd is never used
 33632                           ;stkvar	_f2 @ sp[(0)+-6]
 33633                           
 33634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33635                           ;incstack = 0
 33636  01A878  0EFA               	movlw	-6
 33637  01A87A  006F FF8F FFE6     	movff	plusw1,postinc1
 33638  01A880  006F FF8F FFE6     	movff	plusw1,postinc1
 33639  01A886  006F FF8F FFE6     	movff	plusw1,postinc1
 33640  01A88C  006F FF8F FFE6     	movff	plusw1,postinc1
 33641                           
 33642                           ;stkvar	_f1p @ sp[(-4)+-2]
 33643  01A892  0EFA               	movlw	-6
 33644  01A894  006F FF8F FFD9     	movff	plusw1,fsr2l
 33645  01A89A  0EFB               	movlw	-5
 33646  01A89C  006F FF8F FFDA     	movff	plusw1,fsr2h
 33647  01A8A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33648  01A8A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33649  01A8AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33650  01A8B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33651  01A8BA  ECB5  F09D         	call	___fladd	;wreg free
 33652                           
 33653                           ;stkvar	_f1p @ sp[(0)+-2]
 33654  01A8BE  0EFE               	movlw	-2
 33655  01A8C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 33656  01A8C6  0EFF               	movlw	-1
 33657  01A8C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 33658  01A8CE  0060  F09B  FFDE   	movff	btemp,postinc2
 33659  01A8D4  0060  F09F  FFDE   	movff	btemp+1,postinc2
 33660  01A8DA  0060  F0A3  FFDE   	movff	btemp+2,postinc2
 33661  01A8E0  0060  F0A7  FFDE   	movff	btemp+3,postinc2
 33662                           
 33663                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 33664  01A8E6  0EFA               	movlw	250
 33665  01A8E8  26E1               	addwf	fsr1l,f,c
 33666  01A8EA  0EFF               	movlw	255
 33667  01A8EC  22E2               	addwfc	fsr1h,f,c
 33668  01A8EE  0012               	return		;funcret
 33669  01A8F0                     __end_of___asfladd:
 33670                           	opt callstack 0
 33671                           
 33672 ;; *************** function _INT0_ISR *****************
 33673 ;; Defined at:
 33674 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33675 ;; Parameters:    Size  Location     Type
 33676 ;;		None
 33677 ;; Auto vars:     Size  Location     Type
 33678 ;;		None
 33679 ;; Return value:  Size  Location     Type
 33680 ;;                  1    wreg      void 
 33681 ;; Registers used:
 33682 ;;		wreg, status,2, status,0, pclath, tosl
 33683 ;; Tracked objects:
 33684 ;;		On entry : 0/0
 33685 ;;		On exit  : 0/0
 33686 ;;		Unchanged: 0/0
 33687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33692 ;;Total ram usage:        0 bytes
 33693 ;; Hardware stack levels used:    1
 33694 ;; Hardware stack levels required when called:    2
 33695 ;; This function calls:
 33696 ;;		_INT0_CallBack
 33697 ;; This function is called by:
 33698 ;;		Interrupt level 2
 33699 ;; This function uses a non-reentrant model
 33700 ;;
 33701                           
 33702                           	psect	text155
 33703  01BB18                     __ptext155:
 33704                           	opt callstack 0
 33705  01BB18                     _INT0_ISR:
 33706                           	opt callstack 3
 33707                           
 33708                           ;incstack = 0
 33709  01BB18  EE14  F15C         	lfsr	1,___inthi_sp
 33710                           
 33711                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33712  01BB1C  0139               	movlb	57	; () banked
 33713  01BB1E  91A1               	bcf	161,0,b	;volatile
 33714                           
 33715                           ; BSR set to: 57
 33716                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33717  01BB20  EC67  F0DC         	call	_INT0_CallBack	;wreg free
 33718  01BB24  0011               	retfie		f
 33719  01BB26                     __end_of_INT0_ISR:
 33720                           	opt callstack 0
 33721                           
 33722 ;; *************** function _INT0_CallBack *****************
 33723 ;; Defined at:
 33724 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33725 ;; Parameters:    Size  Location     Type
 33726 ;;		None
 33727 ;; Auto vars:     Size  Location     Type
 33728 ;;		None
 33729 ;; Return value:  Size  Location     Type
 33730 ;;                  1  [STACK] void 
 33731 ;; Registers used:
 33732 ;;		wreg, status,2, status,0, pclath, tosl
 33733 ;; Tracked objects:
 33734 ;;		On entry : 3F/39
 33735 ;;		On exit  : 0/0
 33736 ;;		Unchanged: 0/0
 33737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33742 ;;Total ram usage:        0 bytes
 33743 ;; Hardware stack levels used:    1
 33744 ;; Hardware stack levels required when called:    1
 33745 ;; This function calls:
 33746 ;;		Absolute function
 33747 ;;		_INT0_DefaultInterruptHandler
 33748 ;; This function is called by:
 33749 ;;		_INT0_ISR
 33750 ;; This function uses a reentrant model
 33751 ;;
 33752                           
 33753                           	psect	text156
 33754  01B8CE                     __ptext156:
 33755                           	opt callstack 0
 33756  01B8CE                     _INT0_CallBack:
 33757                           	opt callstack 3
 33758                           
 33759                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33760                           
 33761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33762                           ;incstack = 0
 33763  01B8CE  5007               	movf	_INT0_InterruptHandler^0,w,c
 33764  01B8D0  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 33765  01B8D2  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 33766  01B8D4  B4D8               	btfsc	status,2,c
 33767  01B8D6  0012               	return	
 33768                           
 33769                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33770  01B8D8  D801               	call	u456_48
 33771  01B8DA  0012               	return	
 33772  01B8DC                     u456_48:
 33773  01B8DC  0005               	push	
 33774  01B8DE  6EFA               	movwf	pclath,c
 33775  01B8E0  5007               	movf	_INT0_InterruptHandler^0,w,c
 33776  01B8E2  6EFD               	movwf	tosl,c
 33777  01B8E4  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 33778  01B8E6  6EFE               	movwf	tosh,c
 33779  01B8E8  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 33780  01B8EA  6EFF               	movwf	tosu,c
 33781  01B8EC  50FA               	movf	pclath,w,c
 33782  01B8EE  0012               	return		;indir
 33783  01B8F0                     __end_of_INT0_CallBack:
 33784                           	opt callstack 0
 33785                           
 33786 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33787 ;; Defined at:
 33788 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33789 ;; Parameters:    Size  Location     Type
 33790 ;;		None
 33791 ;; Auto vars:     Size  Location     Type
 33792 ;;		None
 33793 ;; Return value:  Size  Location     Type
 33794 ;;                  1  [STACK] void 
 33795 ;; Registers used:
 33796 ;;		None
 33797 ;; Tracked objects:
 33798 ;;		On entry : 0/39
 33799 ;;		On exit  : 0/0
 33800 ;;		Unchanged: 0/0
 33801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33806 ;;Total ram usage:        0 bytes
 33807 ;; Hardware stack levels used:    1
 33808 ;; This function calls:
 33809 ;;		Nothing
 33810 ;; This function is called by:
 33811 ;;		_EXT_INT_Initialize
 33812 ;;		_INT0_CallBack
 33813 ;; This function uses a reentrant model
 33814 ;;
 33815                           
 33816                           	psect	text157
 33817  01BBBA                     __ptext157:
 33818                           	opt callstack 0
 33819  01BBBA                     _INT0_DefaultInterruptHandler:
 33820                           	opt callstack 3
 33821                           
 33822                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33823                           
 33824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33825                           ;incstack = 0
 33826  01BBBA  0012               	return		;funcret
 33827  01BBBC                     __end_of_INT0_DefaultInterruptHandler:
 33828                           	opt callstack 0
 33829                           
 33830 ;; *************** function _Default_ISR *****************
 33831 ;; Defined at:
 33832 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33833 ;; Parameters:    Size  Location     Type
 33834 ;;		None
 33835 ;; Auto vars:     Size  Location     Type
 33836 ;;		None
 33837 ;; Return value:  Size  Location     Type
 33838 ;;                  1    wreg      void 
 33839 ;; Registers used:
 33840 ;;		None
 33841 ;; Tracked objects:
 33842 ;;		On entry : 0/0
 33843 ;;		On exit  : 0/0
 33844 ;;		Unchanged: 0/0
 33845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33850 ;;Total ram usage:        0 bytes
 33851 ;; Hardware stack levels used:    1
 33852 ;; This function calls:
 33853 ;;		Nothing
 33854 ;; This function is called by:
 33855 ;;		Interrupt level 2
 33856 ;; This function uses a non-reentrant model
 33857 ;;
 33858                           
 33859                           	psect	text158
 33860  01BBB0                     __ptext158:
 33861                           	opt callstack 0
 33862  01BBB0                     _Default_ISR:
 33863                           	opt callstack 5
 33864                           
 33865                           ;incstack = 0
 33866  01BBB0  EE14  F15C         	lfsr	1,___inthi_sp
 33867  01BBB4  0011               	retfie		f
 33868  01BBB6                     __end_of_Default_ISR:
 33869                           	opt callstack 0
 33870                           
 33871 ;; *************** function _ADCC_ISR *****************
 33872 ;; Defined at:
 33873 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33874 ;; Parameters:    Size  Location     Type
 33875 ;;		None
 33876 ;; Auto vars:     Size  Location     Type
 33877 ;;		None
 33878 ;; Return value:  Size  Location     Type
 33879 ;;                  1    wreg      void 
 33880 ;; Registers used:
 33881 ;;		wreg, status,2, status,0, pclath, tosl
 33882 ;; Tracked objects:
 33883 ;;		On entry : 0/0
 33884 ;;		On exit  : 0/0
 33885 ;;		Unchanged: 0/0
 33886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33891 ;;Total ram usage:        0 bytes
 33892 ;; Hardware stack levels used:    1
 33893 ;; Hardware stack levels required when called:    1
 33894 ;; This function calls:
 33895 ;;		Absolute function
 33896 ;;		_ADCC_DefaultInterruptHandler
 33897 ;;		_adc_int_handler
 33898 ;; This function is called by:
 33899 ;;		Interrupt level 2
 33900 ;; This function uses a non-reentrant model
 33901 ;;
 33902                           
 33903                           	psect	text159
 33904  01B4D0                     __ptext159:
 33905                           	opt callstack 0
 33906  01B4D0                     _ADCC_ISR:
 33907                           	opt callstack 4
 33908                           
 33909                           ;incstack = 0
 33910  01B4D0  EE14  F15C         	lfsr	1,___inthi_sp
 33911                           
 33912                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33913  01B4D4  0139               	movlb	57	; () banked
 33914  01B4D6  95A1               	bcf	161,2,b	;volatile
 33915                           
 33916                           ; BSR set to: 57
 33917                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33918  01B4D8  0100               	movlb	0	; () banked
 33919  01B4DA  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33920  01B4DC  11A7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33921  01B4DE  11A8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33922  01B4E0  B4D8               	btfsc	status,2,c
 33923  01B4E2  0011               	retfie		f
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33927  01B4E4  D801               	call	i2u1027_48
 33928  01B4E6  0011               	retfie		f
 33929  01B4E8                     i2u1027_48:
 33930  01B4E8  0005               	push	
 33931  01B4EA  6EFA               	movwf	pclath,c
 33932  01B4EC  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33933  01B4EE  6EFD               	movwf	tosl,c
 33934  01B4F0  51A7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33935  01B4F2  6EFE               	movwf	tosh,c
 33936  01B4F4  51A8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33937  01B4F6  6EFF               	movwf	tosu,c
 33938  01B4F8  50FA               	movf	pclath,w,c
 33939  01B4FA  0012               	return		;indir
 33940  01B4FC                     __end_of_ADCC_ISR:
 33941                           	opt callstack 0
 33942                           
 33943 ;; *************** function _adc_int_t_handler *****************
 33944 ;; Defined at:
 33945 ;;		line 143 in file "daq.c"
 33946 ;; Parameters:    Size  Location     Type
 33947 ;;		None
 33948 ;; Auto vars:     Size  Location     Type
 33949 ;;		None
 33950 ;; Return value:  Size  Location     Type
 33951 ;;                  1  [STACK] void 
 33952 ;; Registers used:
 33953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33954 ;; Tracked objects:
 33955 ;;		On entry : 3F/0
 33956 ;;		On exit  : 1/0
 33957 ;;		Unchanged: 0/0
 33958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33963 ;;Total ram usage:        0 bytes
 33964 ;; Hardware stack levels used:    1
 33965 ;; Hardware stack levels required when called:    1
 33966 ;; This function calls:
 33967 ;;		_ADCC_DischargeSampleCapacitor
 33968 ;;		_ADCC_StartConversion
 33969 ;; This function is called by:
 33970 ;;		_start_adc_scan
 33971 ;;		_ADCC_ThresholdISR
 33972 ;; This function uses a reentrant model
 33973 ;;
 33974                           
 33975                           	psect	text160
 33976  01A7FA                     __ptext160:
 33977                           	opt callstack 0
 33978  01A7FA                     _adc_int_t_handler:
 33979                           	opt callstack 3
 33980                           
 33981                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33982                           
 33983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33984                           ;incstack = 0
 33985  01A7FA  013E               	movlb	62	; () banked
 33986  01A7FC  51E6               	movf	230,w,b	;volatile
 33987  01A7FE  006F FB9C  F026    	movff	16103,btemp	;volatile
 33988  01A804  6A27               	clrf	(btemp+1)^0,c
 33989  01A806  0060  F098  F027   	movff	btemp,btemp+1
 33990  01A80C  6A26               	clrf	btemp^0,c
 33991  01A80E  2626               	addwf	btemp^0,f,c
 33992  01A810  0E00               	movlw	0
 33993  01A812  2227               	addwfc	(btemp+1)^0,f,c
 33994  01A814  0100               	movlb	0	; () banked
 33995  01A816  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33996  01A818  0D02               	mullw	2
 33997  01A81A  50F3               	movf	243,w,c
 33998  01A81C  0FB1               	addlw	low _R
 33999  01A81E  6ED9               	movwf	fsr2l,c
 34000  01A820  6ADA               	clrf	fsr2h,c
 34001  01A822  0060  F09B  FFDE   	movff	btemp,postinc2
 34002  01A828  0060  F09F  FFDD   	movff	btemp+1,postdec2
 34003  01A82E                     l10975:
 34004                           
 34005                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 34006  01A82E  0100               	movlb	0	; () banked
 34007  01A830  2BD5               	incf	(_R+36)& (0+255),f,b	;volatile
 34008  01A832  0E0D               	movlw	13
 34009  01A834  65D5               	cpfsgt	(_R+36)& (0+255),b	;volatile
 34010  01A836  D003               	goto	l10981
 34011                           
 34012                           ; BSR set to: 0
 34013                           ;daq.c: 151:    R.done = 1;
 34014  01A838  0E01               	movlw	1
 34015  01A83A  6FD8               	movwf	(_R+39)& (0+255),b	;volatile
 34016  01A83C  0012               	return	
 34017  01A83E                     l10981:
 34018                           
 34019                           ; BSR set to: 0
 34020                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34021  01A83E  0060  F354  F031   	movff	_R+36,btemp+11	;volatile
 34022  01A844  EE20  F0D6         	lfsr	2,_R+37	;volatile
 34023  01A848  006F FF78  F02E    	movff	postinc2,btemp+8
 34024  01A84E  006F FF74  F02F    	movff	postdec2,btemp+9
 34025  01A854  2A31               	incf	(btemp+11)^0,f,c
 34026  01A856  D003               	goto	u1024_44
 34027  01A858                     u1024_45:
 34028  01A858  90D8               	bcf	status,0,c
 34029  01A85A  322F               	rrcf	(btemp+9)^0,f,c
 34030  01A85C  322E               	rrcf	(btemp+8)^0,f,c
 34031  01A85E                     u1024_44:
 34032  01A85E  2E31               	decfsz	(btemp+11)^0,f,c
 34033  01A860  D7FB               	goto	u1024_45
 34034  01A862  A02E               	btfss	(btemp+8)^0,0,c
 34035  01A864  D7E4               	goto	l10975
 34036                           
 34037                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 34038  01A866  ECB7  F0DD         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34039                           
 34040                           ; BSR set to: 62
 34041                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 34042  01A86A  0100               	movlb	0	; () banked
 34043  01A86C  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 34044  01A86E  0B0F               	andlw	15
 34045  01A870  6EE6               	movwf	postinc1,c
 34046  01A872  EC4E  F0DD         	call	_ADCC_StartConversion	;wreg free
 34047                           
 34048                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34049  01A876  0012               	return		;funcret
 34050  01A878                     __end_of_adc_int_t_handler:
 34051                           	opt callstack 0
 34052                           
 34053 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34054 ;; Defined at:
 34055 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34056 ;; Parameters:    Size  Location     Type
 34057 ;;		None
 34058 ;; Auto vars:     Size  Location     Type
 34059 ;;		None
 34060 ;; Return value:  Size  Location     Type
 34061 ;;                  1  [STACK] void 
 34062 ;; Registers used:
 34063 ;;		None
 34064 ;; Tracked objects:
 34065 ;;		On entry : 3F/0
 34066 ;;		On exit  : 0/0
 34067 ;;		Unchanged: 0/0
 34068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34073 ;;Total ram usage:        0 bytes
 34074 ;; Hardware stack levels used:    1
 34075 ;; This function calls:
 34076 ;;		Nothing
 34077 ;; This function is called by:
 34078 ;;		_ADCC_Initialize
 34079 ;;		_ADCC_ISR
 34080 ;;		_ADCC_ThresholdISR
 34081 ;; This function uses a reentrant model
 34082 ;;
 34083                           
 34084                           	psect	text161
 34085  01BBBC                     __ptext161:
 34086                           	opt callstack 0
 34087  01BBBC                     _ADCC_DefaultInterruptHandler:
 34088                           	opt callstack 4
 34089                           
 34090                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34091                           
 34092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34093                           ;incstack = 0
 34094  01BBBC  0012               	return		;funcret
 34095  01BBBE                     __end_of_ADCC_DefaultInterruptHandler:
 34096                           	opt callstack 0
 34097                           
 34098 ;; *************** function _adc_int_handler *****************
 34099 ;; Defined at:
 34100 ;;		line 133 in file "daq.c"
 34101 ;; Parameters:    Size  Location     Type
 34102 ;;		None
 34103 ;; Auto vars:     Size  Location     Type
 34104 ;;		None
 34105 ;; Return value:  Size  Location     Type
 34106 ;;                  1  [STACK] void 
 34107 ;; Registers used:
 34108 ;;		None
 34109 ;; Tracked objects:
 34110 ;;		On entry : 3F/0
 34111 ;;		On exit  : 0/0
 34112 ;;		Unchanged: 0/0
 34113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34118 ;;Total ram usage:        0 bytes
 34119 ;; Hardware stack levels used:    1
 34120 ;; This function calls:
 34121 ;;		Nothing
 34122 ;; This function is called by:
 34123 ;;		_start_adc_scan
 34124 ;;		_ADCC_ISR
 34125 ;; This function uses a reentrant model
 34126 ;;
 34127                           
 34128                           	psect	text162
 34129  01BBBE                     __ptext162:
 34130                           	opt callstack 0
 34131  01BBBE                     _adc_int_handler:
 34132                           	opt callstack 4
 34133                           
 34134                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34135                           
 34136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34137                           ;incstack = 0
 34138  01BBBE  0012               	return		;funcret
 34139  01BBC0                     __end_of_adc_int_handler:
 34140                           	opt callstack 0
 34141                           
 34142 ;; *************** function _ADCC_ThresholdISR *****************
 34143 ;; Defined at:
 34144 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34145 ;; Parameters:    Size  Location     Type
 34146 ;;		None
 34147 ;; Auto vars:     Size  Location     Type
 34148 ;;		None
 34149 ;; Return value:  Size  Location     Type
 34150 ;;                  1    wreg      void 
 34151 ;; Registers used:
 34152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34153 ;; Tracked objects:
 34154 ;;		On entry : 0/0
 34155 ;;		On exit  : 0/0
 34156 ;;		Unchanged: 0/0
 34157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34160 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34161 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34162 ;;Total ram usage:        5 bytes
 34163 ;; Hardware stack levels used:    1
 34164 ;; Hardware stack levels required when called:    2
 34165 ;; This function calls:
 34166 ;;		Absolute function
 34167 ;;		_ADCC_DefaultInterruptHandler
 34168 ;;		_adc_int_t_handler
 34169 ;; This function is called by:
 34170 ;;		Interrupt level 2
 34171 ;; This function uses a non-reentrant model
 34172 ;;
 34173                           
 34174                           	psect	text163
 34175  01A9C4                     __ptext163:
 34176                           	opt callstack 0
 34177  01A9C4                     _ADCC_ThresholdISR:
 34178                           	opt callstack 3
 34179                           
 34180                           ;incstack = 0
 34181  01A9C4  0060  F098  F046   	movff	btemp,??_ADCC_ThresholdISR
 34182  01A9CA  0060  F09C  F047   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34183  01A9D0  0060  F0B8  F048   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34184  01A9D6  0060  F0BC  F049   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34185  01A9DC  0060  F0C4  F04A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34186  01A9E2  EE14  F15C         	lfsr	1,___inthi_sp
 34187                           
 34188                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34189  01A9E6  0139               	movlb	57	; () banked
 34190  01A9E8  97A1               	bcf	161,3,b	;volatile
 34191                           
 34192                           ; BSR set to: 57
 34193                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34194  01A9EA  0100               	movlb	0	; () banked
 34195  01A9EC  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34196  01A9EE  11A4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34197  01A9F0  11A5               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34198  01A9F2  B4D8               	btfsc	status,2,c
 34199  01A9F4  D00C               	goto	i2u1029_49
 34200                           
 34201                           ; BSR set to: 0
 34202                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34203  01A9F6  D801               	call	i2u1029_48
 34204  01A9F8  D00A               	goto	i2u1029_49
 34205  01A9FA                     i2u1029_48:
 34206  01A9FA  0005               	push	
 34207  01A9FC  6EFA               	movwf	pclath,c
 34208  01A9FE  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34209  01AA00  6EFD               	movwf	tosl,c
 34210  01AA02  51A4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34211  01AA04  6EFE               	movwf	tosh,c
 34212  01AA06  51A5               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34213  01AA08  6EFF               	movwf	tosu,c
 34214  01AA0A  50FA               	movf	pclath,w,c
 34215  01AA0C  0012               	return		;indir
 34216  01AA0E                     i2u1029_49:
 34217  01AA0E  0060  F128  F031   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34218  01AA14  0060  F124  F02F   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34219  01AA1A  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34220  01AA20  0060  F11C  F027   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34221  01AA26  0060  F118  F026   	movff	??_ADCC_ThresholdISR,btemp
 34222  01AA2C  0011               	retfie		f
 34223  01AA2E                     __end_of_ADCC_ThresholdISR:
 34224                           	opt callstack 0
 34225                           
 34226 ;; *************** function _UART1_rx_vect_isr *****************
 34227 ;; Defined at:
 34228 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34229 ;; Parameters:    Size  Location     Type
 34230 ;;		None
 34231 ;; Auto vars:     Size  Location     Type
 34232 ;;		None
 34233 ;; Return value:  Size  Location     Type
 34234 ;;                  1    wreg      void 
 34235 ;; Registers used:
 34236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34237 ;; Tracked objects:
 34238 ;;		On entry : 0/0
 34239 ;;		On exit  : 0/0
 34240 ;;		Unchanged: 0/0
 34241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34246 ;;Total ram usage:        0 bytes
 34247 ;; Hardware stack levels used:    1
 34248 ;; Hardware stack levels required when called:    1
 34249 ;; This function calls:
 34250 ;;		Absolute function
 34251 ;;		_UART1_Receive_ISR
 34252 ;; This function is called by:
 34253 ;;		Interrupt level 2
 34254 ;; This function uses a non-reentrant model
 34255 ;;
 34256                           
 34257                           	psect	text164
 34258  01B784                     __ptext164:
 34259                           	opt callstack 0
 34260  01B784                     _UART1_rx_vect_isr:
 34261                           	opt callstack 4
 34262                           
 34263                           ;incstack = 0
 34264  01B784  EE14  F15C         	lfsr	1,___inthi_sp
 34265                           
 34266                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34267  01B788  0100               	movlb	0	; () banked
 34268  01B78A  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34269  01B78C  11AA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34270  01B78E  11AB               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34271  01B790  B4D8               	btfsc	status,2,c
 34272  01B792  0011               	retfie		f
 34273                           
 34274                           ; BSR set to: 0
 34275                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34276  01B794  D801               	call	i2u1241_48
 34277  01B796  0011               	retfie		f
 34278  01B798                     i2u1241_48:
 34279  01B798  0005               	push	
 34280  01B79A  6EFA               	movwf	pclath,c
 34281  01B79C  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34282  01B79E  6EFD               	movwf	tosl,c
 34283  01B7A0  51AA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34284  01B7A2  6EFE               	movwf	tosh,c
 34285  01B7A4  51AB               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34286  01B7A6  6EFF               	movwf	tosu,c
 34287  01B7A8  50FA               	movf	pclath,w,c
 34288  01B7AA  0012               	return		;indir
 34289  01B7AC                     __end_of_UART1_rx_vect_isr:
 34290                           	opt callstack 0
 34291                           
 34292 ;; *************** function _UART1_Receive_ISR *****************
 34293 ;; Defined at:
 34294 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34295 ;; Parameters:    Size  Location     Type
 34296 ;;		None
 34297 ;; Auto vars:     Size  Location     Type
 34298 ;;		None
 34299 ;; Return value:  Size  Location     Type
 34300 ;;                  1  [STACK] void 
 34301 ;; Registers used:
 34302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34303 ;; Tracked objects:
 34304 ;;		On entry : 3F/0
 34305 ;;		On exit  : 0/0
 34306 ;;		Unchanged: 0/0
 34307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;Total ram usage:        0 bytes
 34313 ;; Hardware stack levels used:    1
 34314 ;; This function calls:
 34315 ;;		Nothing
 34316 ;; This function is called by:
 34317 ;;		_UART1_Initialize
 34318 ;;		_UART1_rx_vect_isr
 34319 ;; This function uses a reentrant model
 34320 ;;
 34321                           
 34322                           	psect	text165
 34323  01B910                     __ptext165:
 34324                           	opt callstack 0
 34325  01B910                     _UART1_Receive_ISR:
 34326                           	opt callstack 4
 34327                           
 34328                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34329                           
 34330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34331                           ;incstack = 0
 34332  01B910  0EEF               	movlw	low _uart1RxBuffer
 34333  01B912  2425               	addwf	_uart1RxHead^0,w,c	;volatile
 34334  01B914  6ED9               	movwf	fsr2l,c
 34335  01B916  6ADA               	clrf	fsr2h,c
 34336  01B918  0E01               	movlw	high _uart1RxBuffer
 34337  01B91A  22DA               	addwfc	fsr2h,f,c
 34338  01B91C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34339  01B922  2A25               	incf	_uart1RxHead^0,f,c	;volatile
 34340                           
 34341                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34342  01B924  0E07               	movlw	7
 34343  01B926  6425               	cpfsgt	_uart1RxHead^0,c
 34344  01B928  D001               	goto	l12687
 34345                           
 34346                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34347  01B92A  6A25               	clrf	_uart1RxHead^0,c	;volatile
 34348  01B92C                     l12687:
 34349                           
 34350                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34351  01B92C  2A23               	incf	_uart1RxCount^0,f,c	;volatile
 34352                           
 34353                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34354  01B92E  0012               	return		;funcret
 34355  01B930                     __end_of_UART1_Receive_ISR:
 34356                           	opt callstack 0
 34357                           
 34358 ;; *************** function _UART2_tx_vect_isr *****************
 34359 ;; Defined at:
 34360 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34361 ;; Parameters:    Size  Location     Type
 34362 ;;		None
 34363 ;; Auto vars:     Size  Location     Type
 34364 ;;		None
 34365 ;; Return value:  Size  Location     Type
 34366 ;;                  1    wreg      void 
 34367 ;; Registers used:
 34368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34369 ;; Tracked objects:
 34370 ;;		On entry : 0/0
 34371 ;;		On exit  : 0/0
 34372 ;;		Unchanged: 0/0
 34373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34378 ;;Total ram usage:        0 bytes
 34379 ;; Hardware stack levels used:    1
 34380 ;; Hardware stack levels required when called:    1
 34381 ;; This function calls:
 34382 ;;		Absolute function
 34383 ;;		_UART2_Transmit_ISR
 34384 ;; This function is called by:
 34385 ;;		Interrupt level 2
 34386 ;; This function uses a non-reentrant model
 34387 ;;
 34388                           
 34389                           	psect	text166
 34390  01B7AC                     __ptext166:
 34391                           	opt callstack 0
 34392  01B7AC                     _UART2_tx_vect_isr:
 34393                           	opt callstack 4
 34394                           
 34395                           ;incstack = 0
 34396  01B7AC  EE14  F15C         	lfsr	1,___inthi_sp
 34397                           
 34398                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34399  01B7B0  0100               	movlb	0	; () banked
 34400  01B7B2  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34401  01B7B4  11AD               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34402  01B7B6  11AE               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34403  01B7B8  B4D8               	btfsc	status,2,c
 34404  01B7BA  0011               	retfie		f
 34405                           
 34406                           ; BSR set to: 0
 34407                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34408  01B7BC  D801               	call	i2u1033_48
 34409  01B7BE  0011               	retfie		f
 34410  01B7C0                     i2u1033_48:
 34411  01B7C0  0005               	push	
 34412  01B7C2  6EFA               	movwf	pclath,c
 34413  01B7C4  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34414  01B7C6  6EFD               	movwf	tosl,c
 34415  01B7C8  51AD               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34416  01B7CA  6EFE               	movwf	tosh,c
 34417  01B7CC  51AE               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34418  01B7CE  6EFF               	movwf	tosu,c
 34419  01B7D0  50FA               	movf	pclath,w,c
 34420  01B7D2  0012               	return		;indir
 34421  01B7D4                     __end_of_UART2_tx_vect_isr:
 34422                           	opt callstack 0
 34423                           
 34424 ;; *************** function _UART2_Transmit_ISR *****************
 34425 ;; Defined at:
 34426 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34427 ;; Parameters:    Size  Location     Type
 34428 ;;		None
 34429 ;; Auto vars:     Size  Location     Type
 34430 ;;		None
 34431 ;; Return value:  Size  Location     Type
 34432 ;;                  1  [STACK] void 
 34433 ;; Registers used:
 34434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34435 ;; Tracked objects:
 34436 ;;		On entry : 3F/0
 34437 ;;		On exit  : 3B/39
 34438 ;;		Unchanged: 0/0
 34439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34444 ;;Total ram usage:        0 bytes
 34445 ;; Hardware stack levels used:    1
 34446 ;; This function calls:
 34447 ;;		Nothing
 34448 ;; This function is called by:
 34449 ;;		_UART2_Initialize
 34450 ;;		_UART2_tx_vect_isr
 34451 ;; This function uses a reentrant model
 34452 ;;
 34453                           
 34454                           	psect	text167
 34455  01B4FC                     __ptext167:
 34456                           	opt callstack 0
 34457  01B4FC                     _UART2_Transmit_ISR:
 34458                           	opt callstack 4
 34459                           
 34460                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34461                           
 34462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34463                           ;incstack = 0
 34464  01B4FC  0E40               	movlw	64
 34465  01B4FE  6020               	cpfslt	_uart2TxBufferRemaining^0,c
 34466  01B500  D010               	goto	l673
 34467                           
 34468                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34469  01B502  0E54               	movlw	low _uart2TxBuffer
 34470  01B504  2421               	addwf	_uart2TxTail^0,w,c	;volatile
 34471  01B506  6ED9               	movwf	fsr2l,c
 34472  01B508  6ADA               	clrf	fsr2h,c
 34473  01B50A  0E02               	movlw	high _uart2TxBuffer
 34474  01B50C  22DA               	addwfc	fsr2h,f,c
 34475  01B50E  50DF               	movf	indf2,w,c
 34476  01B510  013D               	movlb	61	; () banked
 34477  01B512  6FD2               	movwf	210,b	;volatile
 34478                           
 34479                           ; BSR set to: 61
 34480  01B514  2A21               	incf	_uart2TxTail^0,f,c	;volatile
 34481                           
 34482                           ; BSR set to: 61
 34483                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34484  01B516  0E3F               	movlw	63
 34485  01B518  6421               	cpfsgt	_uart2TxTail^0,c
 34486  01B51A  D001               	goto	l10579
 34487                           
 34488                           ; BSR set to: 61
 34489                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34490  01B51C  6A21               	clrf	_uart2TxTail^0,c	;volatile
 34491  01B51E                     l10579:
 34492                           
 34493                           ; BSR set to: 61
 34494                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34495  01B51E  2A20               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34496                           
 34497                           ;mcc_generated_files/uart2.c: 224:     }
 34498  01B520  0012               	return	
 34499  01B522                     l673:
 34500                           
 34501                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34502  01B522  0139               	movlb	57	; () banked
 34503  01B524  9796               	bcf	150,3,b	;volatile
 34504                           
 34505                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34506  01B526  0012               	return		;funcret
 34507  01B528                     __end_of_UART2_Transmit_ISR:
 34508                           	opt callstack 0
 34509                           
 34510 ;; *************** function _UART2_rx_vect_isr *****************
 34511 ;; Defined at:
 34512 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34513 ;; Parameters:    Size  Location     Type
 34514 ;;		None
 34515 ;; Auto vars:     Size  Location     Type
 34516 ;;		None
 34517 ;; Return value:  Size  Location     Type
 34518 ;;                  1    wreg      void 
 34519 ;; Registers used:
 34520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34521 ;; Tracked objects:
 34522 ;;		On entry : 0/0
 34523 ;;		On exit  : 0/0
 34524 ;;		Unchanged: 0/0
 34525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;Total ram usage:        0 bytes
 34531 ;; Hardware stack levels used:    1
 34532 ;; Hardware stack levels required when called:    1
 34533 ;; This function calls:
 34534 ;;		Absolute function
 34535 ;;		_UART2_Receive_ISR
 34536 ;; This function is called by:
 34537 ;;		Interrupt level 2
 34538 ;; This function uses a non-reentrant model
 34539 ;;
 34540                           
 34541                           	psect	text168
 34542  01B7D4                     __ptext168:
 34543                           	opt callstack 0
 34544  01B7D4                     _UART2_rx_vect_isr:
 34545                           	opt callstack 4
 34546                           
 34547                           ;incstack = 0
 34548  01B7D4  EE14  F15C         	lfsr	1,___inthi_sp
 34549                           
 34550                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34551  01B7D8  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34552  01B7DA  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 34553  01B7DC  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 34554  01B7DE  B4D8               	btfsc	status,2,c
 34555  01B7E0  0011               	retfie		f
 34556                           
 34557                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34558  01B7E2  D801               	call	i2u1035_48
 34559  01B7E4  0011               	retfie		f
 34560  01B7E6                     i2u1035_48:
 34561  01B7E6  0005               	push	
 34562  01B7E8  6EFA               	movwf	pclath,c
 34563  01B7EA  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34564  01B7EC  6EFD               	movwf	tosl,c
 34565  01B7EE  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 34566  01B7F0  6EFE               	movwf	tosh,c
 34567  01B7F2  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 34568  01B7F4  6EFF               	movwf	tosu,c
 34569  01B7F6  50FA               	movf	pclath,w,c
 34570  01B7F8  0012               	return		;indir
 34571  01B7FA                     __end_of_UART2_rx_vect_isr:
 34572                           	opt callstack 0
 34573                           
 34574 ;; *************** function _UART2_Receive_ISR *****************
 34575 ;; Defined at:
 34576 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34577 ;; Parameters:    Size  Location     Type
 34578 ;;		None
 34579 ;; Auto vars:     Size  Location     Type
 34580 ;;		None
 34581 ;; Return value:  Size  Location     Type
 34582 ;;                  1  [STACK] void 
 34583 ;; Registers used:
 34584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34585 ;; Tracked objects:
 34586 ;;		On entry : 0/0
 34587 ;;		On exit  : 0/0
 34588 ;;		Unchanged: 0/0
 34589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34594 ;;Total ram usage:        0 bytes
 34595 ;; Hardware stack levels used:    1
 34596 ;; This function calls:
 34597 ;;		Nothing
 34598 ;; This function is called by:
 34599 ;;		_UART2_Initialize
 34600 ;;		_UART2_rx_vect_isr
 34601 ;; This function uses a reentrant model
 34602 ;;
 34603                           
 34604                           	psect	text169
 34605  01B9A8                     __ptext169:
 34606                           	opt callstack 0
 34607  01B9A8                     _UART2_Receive_ISR:
 34608                           	opt callstack 4
 34609                           
 34610                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34611                           
 34612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34613                           ;incstack = 0
 34614  01B9A8  0E00               	movlw	low _uart2RxBuffer
 34615  01B9AA  241F               	addwf	_uart2RxHead^0,w,c	;volatile
 34616  01B9AC  6ED9               	movwf	fsr2l,c
 34617  01B9AE  6ADA               	clrf	fsr2h,c
 34618  01B9B0  0E04               	movlw	high _uart2RxBuffer
 34619  01B9B2  22DA               	addwfc	fsr2h,f,c
 34620  01B9B4  006F F743 FFDF     	movff	15824,indf2	;volatile
 34621  01B9BA  2A1F               	incf	_uart2RxHead^0,f,c	;volatile
 34622                           
 34623                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34624  01B9BC  281F               	incf	_uart2RxHead^0,w,c
 34625  01B9BE  B4D8               	btfsc	status,2,c
 34626                           
 34627                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34628  01B9C0  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 34629                           
 34630                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34631  01B9C2  2A1D               	incf	_uart2RxCount^0,f,c	;volatile
 34632                           
 34633                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34634  01B9C4  0012               	return		;funcret
 34635  01B9C6                     __end_of_UART2_Receive_ISR:
 34636                           	opt callstack 0
 34637                           
 34638 ;; *************** function _TMR6_ISR *****************
 34639 ;; Defined at:
 34640 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34641 ;; Parameters:    Size  Location     Type
 34642 ;;		None
 34643 ;; Auto vars:     Size  Location     Type
 34644 ;;		None
 34645 ;; Return value:  Size  Location     Type
 34646 ;;                  1    wreg      void 
 34647 ;; Registers used:
 34648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34649 ;; Tracked objects:
 34650 ;;		On entry : 0/0
 34651 ;;		On exit  : 0/0
 34652 ;;		Unchanged: 0/0
 34653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34658 ;;Total ram usage:        1 bytes
 34659 ;; Hardware stack levels used:    1
 34660 ;; Hardware stack levels required when called:    2
 34661 ;; This function calls:
 34662 ;;		_TMR6_CallBack
 34663 ;; This function is called by:
 34664 ;;		Interrupt level 2
 34665 ;; This function uses a non-reentrant model
 34666 ;;
 34667                           
 34668                           	psect	text170
 34669  01B9FC                     __ptext170:
 34670                           	opt callstack 0
 34671  01B9FC                     _TMR6_ISR:
 34672                           	opt callstack 3
 34673                           
 34674                           ;incstack = 0
 34675  01B9FC  0060  F098  F04B   	movff	btemp,??_TMR6_ISR
 34676  01BA02  EE14  F15C         	lfsr	1,___inthi_sp
 34677                           
 34678                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34679  01BA06  0139               	movlb	57	; () banked
 34680  01BA08  91A9               	bcf	169,0,b	;volatile
 34681                           
 34682                           ; BSR set to: 57
 34683                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34684  01BA0A  EC33  F0DC         	call	_TMR6_CallBack	;wreg free
 34685  01BA0E  0060  F12C  F026   	movff	??_TMR6_ISR,btemp
 34686  01BA14  0011               	retfie		f
 34687  01BA16                     __end_of_TMR6_ISR:
 34688                           	opt callstack 0
 34689                           
 34690 ;; *************** function _TMR6_CallBack *****************
 34691 ;; Defined at:
 34692 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34693 ;; Parameters:    Size  Location     Type
 34694 ;;		None
 34695 ;; Auto vars:     Size  Location     Type
 34696 ;;		None
 34697 ;; Return value:  Size  Location     Type
 34698 ;;                  1  [STACK] void 
 34699 ;; Registers used:
 34700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34701 ;; Tracked objects:
 34702 ;;		On entry : 3F/39
 34703 ;;		On exit  : 0/0
 34704 ;;		Unchanged: 0/0
 34705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34710 ;;Total ram usage:        0 bytes
 34711 ;; Hardware stack levels used:    1
 34712 ;; Hardware stack levels required when called:    1
 34713 ;; This function calls:
 34714 ;;		Absolute function
 34715 ;;		_TMR6_DefaultInterruptHandler
 34716 ;; This function is called by:
 34717 ;;		_TMR6_ISR
 34718 ;; This function uses a reentrant model
 34719 ;;
 34720                           
 34721                           	psect	text171
 34722  01B866                     __ptext171:
 34723                           	opt callstack 0
 34724  01B866                     _TMR6_CallBack:
 34725                           	opt callstack 3
 34726                           
 34727                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34728                           
 34729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34730                           ;incstack = 0
 34731  01B866  0100               	movlb	0	; () banked
 34732  01B868  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34733  01B86A  11A1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34734  01B86C  11A2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34735  01B86E  B4D8               	btfsc	status,2,c
 34736  01B870  0012               	return	
 34737                           
 34738                           ; BSR set to: 0
 34739                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34740  01B872  D801               	call	u993_48
 34741  01B874  0012               	return	
 34742  01B876                     u993_48:
 34743  01B876  0005               	push	
 34744  01B878  6EFA               	movwf	pclath,c
 34745  01B87A  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34746  01B87C  6EFD               	movwf	tosl,c
 34747  01B87E  51A1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34748  01B880  6EFE               	movwf	tosh,c
 34749  01B882  51A2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34750  01B884  6EFF               	movwf	tosu,c
 34751  01B886  50FA               	movf	pclath,w,c
 34752  01B888  0012               	return		;indir
 34753  01B88A                     __end_of_TMR6_CallBack:
 34754                           	opt callstack 0
 34755                           
 34756 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34757 ;; Defined at:
 34758 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34759 ;; Parameters:    Size  Location     Type
 34760 ;;		None
 34761 ;; Auto vars:     Size  Location     Type
 34762 ;;  i               1  [STACK] unsigned char 
 34763 ;; Return value:  Size  Location     Type
 34764 ;;                  1  [STACK] void 
 34765 ;; Registers used:
 34766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34767 ;; Tracked objects:
 34768 ;;		On entry : 3F/0
 34769 ;;		On exit  : 0/0
 34770 ;;		Unchanged: 0/0
 34771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34776 ;;Total ram usage:        0 bytes
 34777 ;; Hardware stack levels used:    1
 34778 ;; This function calls:
 34779 ;;		Nothing
 34780 ;; This function is called by:
 34781 ;;		_TMR6_Initialize
 34782 ;;		_TMR6_CallBack
 34783 ;; This function uses a reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text172
 34787  01ADC4                     __ptext172:
 34788                           	opt callstack 0
 34789  01ADC4                     _TMR6_DefaultInterruptHandler:
 34790                           	opt callstack 0
 34791                           
 34792                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34793  01ADC4  52E6               	movf	postinc1,f,c
 34794                           
 34795                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34796                           ;stkvar	_i @ sp[(-1)+0]
 34797                           
 34798                           ;incstack = 0
 34799  01ADC6  0EFF               	movlw	-1
 34800  01ADC8  6AE3               	clrf	plusw1,c
 34801  01ADCA                     l10227:
 34802                           
 34803                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34804                           ;stkvar	_i @ sp[(-1)+0]
 34805  01ADCA  0EFF               	movlw	-1
 34806  01ADCC  50E3               	movf	plusw1,w,c
 34807  01ADCE  0D02               	mullw	2
 34808  01ADD0  0E94               	movlw	low _tickCount
 34809  01ADD2  24F3               	addwf	243,w,c
 34810  01ADD4  6ED9               	movwf	fsr2l,c
 34811  01ADD6  0E02               	movlw	high _tickCount
 34812  01ADD8  20F4               	addwfc	prodh,w,c
 34813  01ADDA  6EDA               	movwf	fsr2h,c
 34814  01ADDC  50DE               	movf	postinc2,w,c
 34815  01ADDE  10DE               	iorwf	postinc2,w,c
 34816  01ADE0  B4D8               	btfsc	status,2,c
 34817  01ADE2  D00C               	goto	l10231
 34818                           
 34819                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34820                           ;stkvar	_i @ sp[(-1)+0]
 34821  01ADE4  0EFF               	movlw	-1
 34822  01ADE6  50E3               	movf	plusw1,w,c
 34823  01ADE8  0D02               	mullw	2
 34824  01ADEA  0E94               	movlw	low _tickCount
 34825  01ADEC  24F3               	addwf	243,w,c
 34826  01ADEE  6ED9               	movwf	fsr2l,c
 34827  01ADF0  0E02               	movlw	high _tickCount
 34828  01ADF2  20F4               	addwfc	prodh,w,c
 34829  01ADF4  6EDA               	movwf	fsr2h,c
 34830  01ADF6  06DE               	decf	postinc2,f,c
 34831  01ADF8  0E00               	movlw	0
 34832  01ADFA  5ADD               	subwfb	postdec2,f,c
 34833  01ADFC                     l10231:
 34834                           
 34835                           ;mcc_generated_files/tmr6.c: 207:  }
 34836                           ;stkvar	_i @ sp[(-1)+0]
 34837  01ADFC  0EFF               	movlw	-1
 34838  01ADFE  2AE3               	incf	plusw1,f,c
 34839                           
 34840                           ;stkvar	_i @ sp[(-1)+0]
 34841  01AE00  0EFF               	movlw	-1
 34842  01AE02  006F FF8C  F026    	movff	plusw1,btemp
 34843  01AE08  0E0C               	movlw	12
 34844  01AE0A  6426               	cpfsgt	btemp^0,c
 34845  01AE0C  D7DE               	goto	l10227
 34846                           
 34847                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34848  01AE0E  52E5               	movf	postdec1,f,c
 34849  01AE10  0012               	return		;funcret
 34850  01AE12                     __end_of_TMR6_DefaultInterruptHandler:
 34851                           	opt callstack 0
 34852                           
 34853 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34854 ;; Defined at:
 34855 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34856 ;; Parameters:    Size  Location     Type
 34857 ;;		None
 34858 ;; Auto vars:     Size  Location     Type
 34859 ;;		None
 34860 ;; Return value:  Size  Location     Type
 34861 ;;                  1    wreg      void 
 34862 ;; Registers used:
 34863 ;;		None
 34864 ;; Tracked objects:
 34865 ;;		On entry : 0/0
 34866 ;;		On exit  : 3F/0
 34867 ;;		Unchanged: 0/0
 34868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34873 ;;Total ram usage:        0 bytes
 34874 ;; Hardware stack levels used:    1
 34875 ;; This function calls:
 34876 ;;		Nothing
 34877 ;; This function is called by:
 34878 ;;		Interrupt level 2
 34879 ;; This function uses a non-reentrant model
 34880 ;;
 34881                           
 34882                           	psect	text173
 34883  01BB28                     __ptext173:
 34884                           	opt callstack 0
 34885  01BB28                     _DMA1_DMASCNT_ISR:
 34886                           	opt callstack 5
 34887                           
 34888                           ;incstack = 0
 34889  01BB28  EE14  F15C         	lfsr	1,___inthi_sp
 34890                           
 34891                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34892  01BB2C  0139               	movlb	57	; () banked
 34893  01BB2E  91A2               	bcf	162,0,b	;volatile
 34894                           
 34895                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34896  01BB30  0100               	movlb	0	; () banked
 34897  01BB32  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34898                           
 34899                           ; BSR set to: 0
 34900  01BB34  0011               	retfie		f
 34901  01BB36                     __end_of_DMA1_DMASCNT_ISR:
 34902                           	opt callstack 0
 34903                           
 34904 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34905 ;; Defined at:
 34906 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34907 ;; Parameters:    Size  Location     Type
 34908 ;;		None
 34909 ;; Auto vars:     Size  Location     Type
 34910 ;;		None
 34911 ;; Return value:  Size  Location     Type
 34912 ;;                  1    wreg      void 
 34913 ;; Registers used:
 34914 ;;		None
 34915 ;; Tracked objects:
 34916 ;;		On entry : 0/0
 34917 ;;		On exit  : 3F/39
 34918 ;;		Unchanged: 0/0
 34919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34924 ;;Total ram usage:        0 bytes
 34925 ;; Hardware stack levels used:    1
 34926 ;; This function calls:
 34927 ;;		Nothing
 34928 ;; This function is called by:
 34929 ;;		Interrupt level 2
 34930 ;; This function uses a non-reentrant model
 34931 ;;
 34932                           
 34933                           	psect	text174
 34934  01BB4C                     __ptext174:
 34935                           	opt callstack 0
 34936  01BB4C                     _DMA1_DMADCNT_ISR:
 34937                           	opt callstack 5
 34938                           
 34939                           ; BSR set to: 0
 34940                           ;incstack = 0
 34941  01BB4C  EE14  F15C         	lfsr	1,___inthi_sp
 34942                           
 34943                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34944  01BB50  0139               	movlb	57	; () banked
 34945  01BB52  93A2               	bcf	162,1,b	;volatile
 34946                           
 34947                           ; BSR set to: 57
 34948  01BB54  0011               	retfie		f
 34949  01BB56                     __end_of_DMA1_DMADCNT_ISR:
 34950                           	opt callstack 0
 34951                           
 34952 ;; *************** function _DMA1_DMAA_ISR *****************
 34953 ;; Defined at:
 34954 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34955 ;; Parameters:    Size  Location     Type
 34956 ;;		None
 34957 ;; Auto vars:     Size  Location     Type
 34958 ;;		None
 34959 ;; Return value:  Size  Location     Type
 34960 ;;                  1    wreg      void 
 34961 ;; Registers used:
 34962 ;;		None
 34963 ;; Tracked objects:
 34964 ;;		On entry : 0/0
 34965 ;;		On exit  : 3F/39
 34966 ;;		Unchanged: 0/0
 34967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34972 ;;Total ram usage:        0 bytes
 34973 ;; Hardware stack levels used:    1
 34974 ;; This function calls:
 34975 ;;		Nothing
 34976 ;; This function is called by:
 34977 ;;		Interrupt level 2
 34978 ;; This function uses a non-reentrant model
 34979 ;;
 34980                           
 34981                           	psect	text175
 34982  01BB58                     __ptext175:
 34983                           	opt callstack 0
 34984  01BB58                     _DMA1_DMAA_ISR:
 34985                           	opt callstack 5
 34986                           
 34987                           ; BSR set to: 57
 34988                           ;incstack = 0
 34989  01BB58  EE14  F15C         	lfsr	1,___inthi_sp
 34990                           
 34991                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34992  01BB5C  0139               	movlb	57	; () banked
 34993  01BB5E  97A2               	bcf	162,3,b	;volatile
 34994                           
 34995                           ; BSR set to: 57
 34996  01BB60  0011               	retfie		f
 34997  01BB62                     __end_of_DMA1_DMAA_ISR:
 34998                           	opt callstack 0
 34999                           
 35000 ;; *************** function _DMA1_DMAOR_ISR *****************
 35001 ;; Defined at:
 35002 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35003 ;; Parameters:    Size  Location     Type
 35004 ;;		None
 35005 ;; Auto vars:     Size  Location     Type
 35006 ;;		None
 35007 ;; Return value:  Size  Location     Type
 35008 ;;                  1    wreg      void 
 35009 ;; Registers used:
 35010 ;;		None
 35011 ;; Tracked objects:
 35012 ;;		On entry : 0/0
 35013 ;;		On exit  : 3F/39
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35020 ;;Total ram usage:        0 bytes
 35021 ;; Hardware stack levels used:    1
 35022 ;; This function calls:
 35023 ;;		Nothing
 35024 ;; This function is called by:
 35025 ;;		Interrupt level 2
 35026 ;; This function uses a non-reentrant model
 35027 ;;
 35028                           
 35029                           	psect	text176
 35030  01BB64                     __ptext176:
 35031                           	opt callstack 0
 35032  01BB64                     _DMA1_DMAOR_ISR:
 35033                           	opt callstack 5
 35034                           
 35035                           ; BSR set to: 57
 35036                           ;incstack = 0
 35037  01BB64  EE14  F15C         	lfsr	1,___inthi_sp
 35038                           
 35039                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35040  01BB68  0139               	movlb	57	; () banked
 35041  01BB6A  95A2               	bcf	162,2,b	;volatile
 35042                           
 35043                           ; BSR set to: 57
 35044  01BB6C  0011               	retfie		f
 35045  01BB6E                     __end_of_DMA1_DMAOR_ISR:
 35046                           	opt callstack 0
 35047                           
 35048                           ;
 35049                           ; Interrupt Vector Table @ 0x8
 35050                           ;
 35051                           
 35052                           	psect	ivt0x8
 35053  000008                     __pivt0x8:
 35054                           	opt callstack 0
 35055  000008                     ivt0x8_base:
 35056                           	opt callstack 0
 35057                           
 35058                           ; Vector 0 : SWINT
 35059  000008  6EEC               	dw	_Default_ISR shr (0+2)
 35060                           
 35061                           ; Vector 1 : HLVD
 35062  00000A  6EEC               	dw	_Default_ISR shr (0+2)
 35063                           
 35064                           ; Vector 2 : OSF
 35065  00000C  6EEC               	dw	_Default_ISR shr (0+2)
 35066                           
 35067                           ; Vector 3 : CSW
 35068  00000E  6EEC               	dw	_Default_ISR shr (0+2)
 35069                           
 35070                           ; Vector 4 : NVM
 35071  000010  6EEC               	dw	_Default_ISR shr (0+2)
 35072                           
 35073                           ; Vector 5 : SCAN
 35074  000012  6EEC               	dw	_Default_ISR shr (0+2)
 35075                           
 35076                           ; Vector 6 : CRC
 35077  000014  6EEC               	dw	_Default_ISR shr (0+2)
 35078                           
 35079                           ; Vector 7 : IOC
 35080  000016  6EEC               	dw	_Default_ISR shr (0+2)
 35081                           
 35082                           ; Vector 8 : INT0
 35083  000018  6EC6               	dw	_INT0_ISR shr (0+2)
 35084                           
 35085                           ; Vector 9 : ZCD
 35086  00001A  6EEC               	dw	_Default_ISR shr (0+2)
 35087                           
 35088                           ; Vector 10 : AD
 35089  00001C  6D34               	dw	_ADCC_ISR shr (0+2)
 35090                           
 35091                           ; Vector 11 : ADT
 35092  00001E  6A71               	dw	_ADCC_ThresholdISR shr (0+2)
 35093                           
 35094                           ; Vector 12 : CMP1
 35095  000020  6EEC               	dw	_Default_ISR shr (0+2)
 35096                           
 35097                           ; Vector 13 : SMT1
 35098  000022  6EEC               	dw	_Default_ISR shr (0+2)
 35099                           
 35100                           ; Vector 14 : SMT1PRA
 35101  000024  6EEC               	dw	_Default_ISR shr (0+2)
 35102                           
 35103                           ; Vector 15 : SMT1PRW
 35104  000026  6EEC               	dw	_Default_ISR shr (0+2)
 35105                           
 35106                           ; Vector 16 : DMA1SCNT
 35107  000028  6ECA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35108                           
 35109                           ; Vector 17 : DMA1DCNT
 35110  00002A  6ED3               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35111                           
 35112                           ; Vector 18 : DMA1OR
 35113  00002C  6ED9               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35114                           
 35115                           ; Vector 19 : DMA1A
 35116  00002E  6ED6               	dw	_DMA1_DMAA_ISR shr (0+2)
 35117                           
 35118                           ; Vector 20 : SPI1RX
 35119  000030  6EEC               	dw	_Default_ISR shr (0+2)
 35120                           
 35121                           ; Vector 21 : SPI1TX
 35122  000032  6EEC               	dw	_Default_ISR shr (0+2)
 35123                           
 35124                           ; Vector 22 : SPI1
 35125  000034  6EEC               	dw	_Default_ISR shr (0+2)
 35126                           
 35127                           ; Vector 23 : I2C1RX
 35128  000036  6EEC               	dw	_Default_ISR shr (0+2)
 35129                           
 35130                           ; Vector 24 : I2C1TX
 35131  000038  6EEC               	dw	_Default_ISR shr (0+2)
 35132                           
 35133                           ; Vector 25 : I2C1
 35134  00003A  6EEC               	dw	_Default_ISR shr (0+2)
 35135                           
 35136                           ; Vector 26 : I2C1E
 35137  00003C  6EEC               	dw	_Default_ISR shr (0+2)
 35138                           
 35139                           ; Vector 27 : U1RX
 35140  00003E  6DE1               	dw	_UART1_rx_vect_isr shr (0+2)
 35141                           
 35142                           ; Vector 28 : U1TX
 35143  000040  6EEC               	dw	_Default_ISR shr (0+2)
 35144                           
 35145                           ; Vector 29 : U1E
 35146  000042  6EEC               	dw	_Default_ISR shr (0+2)
 35147                           
 35148                           ; Vector 30 : U1
 35149  000044  6EEC               	dw	_Default_ISR shr (0+2)
 35150                           
 35151                           ; Vector 31 : TMR0
 35152  000046  6EEC               	dw	_Default_ISR shr (0+2)
 35153                           
 35154                           ; Vector 32 : TMR1
 35155  000048  6EEC               	dw	_Default_ISR shr (0+2)
 35156                           
 35157                           ; Vector 33 : TMR1G
 35158  00004A  6EEC               	dw	_Default_ISR shr (0+2)
 35159                           
 35160                           ; Vector 34 : TMR2
 35161  00004C  6EEC               	dw	_Default_ISR shr (0+2)
 35162                           
 35163                           ; Vector 35 : CCP1
 35164  00004E  6EEC               	dw	_Default_ISR shr (0+2)
 35165                           
 35166                           ; Vector 36 : Undefined
 35167  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35168                           
 35169                           ; Vector 37 : NCO1
 35170  000052  6EEC               	dw	_Default_ISR shr (0+2)
 35171                           
 35172                           ; Vector 38 : CWG1
 35173  000054  6EEC               	dw	_Default_ISR shr (0+2)
 35174                           
 35175                           ; Vector 39 : CLC1
 35176  000056  6EEC               	dw	_Default_ISR shr (0+2)
 35177                           
 35178                           ; Vector 40 : INT1
 35179  000058  6C72               	dw	_INT1_ISR shr (0+2)
 35180                           
 35181                           ; Vector 41 : CMP2
 35182  00005A  6EEC               	dw	_Default_ISR shr (0+2)
 35183                           
 35184                           ; Vector 42 : DMA2SCNT
 35185  00005C  6EEC               	dw	_Default_ISR shr (0+2)
 35186                           
 35187                           ; Vector 43 : DMA2DCNT
 35188  00005E  6EEC               	dw	_Default_ISR shr (0+2)
 35189                           
 35190                           ; Vector 44 : DMA2OR
 35191  000060  6EEC               	dw	_Default_ISR shr (0+2)
 35192                           
 35193                           ; Vector 45 : DMA2A
 35194  000062  6EEC               	dw	_Default_ISR shr (0+2)
 35195                           
 35196                           ; Vector 46 : I2C2RX
 35197  000064  6EEC               	dw	_Default_ISR shr (0+2)
 35198                           
 35199                           ; Vector 47 : I2C2TX
 35200  000066  6EEC               	dw	_Default_ISR shr (0+2)
 35201                           
 35202                           ; Vector 48 : I2C2
 35203  000068  6EEC               	dw	_Default_ISR shr (0+2)
 35204                           
 35205                           ; Vector 49 : I2C2E
 35206  00006A  6EEC               	dw	_Default_ISR shr (0+2)
 35207                           
 35208                           ; Vector 50 : U2RX
 35209  00006C  6DF5               	dw	_UART2_rx_vect_isr shr (0+2)
 35210                           
 35211                           ; Vector 51 : U2TX
 35212  00006E  6DEB               	dw	_UART2_tx_vect_isr shr (0+2)
 35213                           
 35214                           ; Vector 52 : U2E
 35215  000070  6EEC               	dw	_Default_ISR shr (0+2)
 35216                           
 35217                           ; Vector 53 : U2
 35218  000072  6EEC               	dw	_Default_ISR shr (0+2)
 35219                           
 35220                           ; Vector 54 : TMR3
 35221  000074  62E6               	dw	_TMR3_ISR shr (0+2)
 35222                           
 35223                           ; Vector 55 : TMR3G
 35224  000076  6EEC               	dw	_Default_ISR shr (0+2)
 35225                           
 35226                           ; Vector 56 : TMR4
 35227  000078  6EEC               	dw	_Default_ISR shr (0+2)
 35228                           
 35229                           ; Vector 57 : CCP2
 35230  00007A  6EEC               	dw	_Default_ISR shr (0+2)
 35231                           
 35232                           ; Vector 58 : Undefined
 35233  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35234                           
 35235                           ; Vector 59 : CWG2
 35236  00007E  6EEC               	dw	_Default_ISR shr (0+2)
 35237                           
 35238                           ; Vector 60 : CLC2
 35239  000080  6EEC               	dw	_Default_ISR shr (0+2)
 35240                           
 35241                           ; Vector 61 : INT2
 35242  000082  6EEC               	dw	_Default_ISR shr (0+2)
 35243                           
 35244                           ; Vector 62 : Undefined
 35245  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35246                           
 35247                           ; Vector 63 : Undefined
 35248  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35249                           
 35250                           ; Vector 64 : Undefined
 35251  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35252                           
 35253                           ; Vector 65 : Undefined
 35254  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35255                           
 35256                           ; Vector 66 : Undefined
 35257  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35258                           
 35259                           ; Vector 67 : Undefined
 35260  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35261                           
 35262                           ; Vector 68 : Undefined
 35263  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35264                           
 35265                           ; Vector 69 : Undefined
 35266  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35267                           
 35268                           ; Vector 70 : TMR5
 35269  000094  670D               	dw	_TMR5_ISR shr (0+2)
 35270                           
 35271                           ; Vector 71 : TMR5G
 35272  000096  6EEC               	dw	_Default_ISR shr (0+2)
 35273                           
 35274                           ; Vector 72 : TMR6
 35275  000098  6E7F               	dw	_TMR6_ISR shr (0+2)
 35276                           
 35277                           ; Vector 73 : CCP3
 35278  00009A  6EEC               	dw	_Default_ISR shr (0+2)
 35279                           
 35280                           ; Vector 74 : CWG3
 35281  00009C  6EEC               	dw	_Default_ISR shr (0+2)
 35282                           
 35283                           ; Vector 75 : CLC3
 35284  00009E  6EEC               	dw	_Default_ISR shr (0+2)
 35285                           
 35286                           ; Vector 76 : Undefined
 35287  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35288                           
 35289                           ; Vector 77 : Undefined
 35290  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35291                           
 35292                           ; Vector 78 : Undefined
 35293  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35294                           
 35295                           ; Vector 79 : Undefined
 35296  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35297                           
 35298                           ; Vector 80 : CCP4
 35299  0000A8  6EEC               	dw	_Default_ISR shr (0+2)
 35300                           
 35301                           ; Vector 81 : CLC4
 35302  0000AA  6EEC               	dw	_Default_ISR shr (0+2)
 35303  0000AC                     ivt0x8_undefint:
 35304                           	opt callstack 0
 35305  0000AC  00FF               	reset	
 35306                           
 35307                           	psect	text177
 35308  000000                     __ptext177:
 35309                           	opt callstack 0
 35310                           
 35311                           	psect	rparam
 35312  0000                     
 35313                           	psect	temp
 35314  000026                     btemp:
 35315                           	opt callstack 0
 35316  000026                     	ds	32
 35317  0000                     wtemp0	set	btemp
 35318  0000                     wtemp1	set	btemp+2
 35319  0000                     wtemp2	set	btemp+4
 35320  0000                     wtemp3	set	btemp+6
 35321  0000                     wtemp4	set	btemp+8
 35322  0000                     wtemp5	set	btemp+10
 35323  0000                     wtemp8	set	btemp+1
 35324  0000                     ttemp0	set	btemp
 35325  0000                     ttemp1	set	btemp+3
 35326  0000                     ttemp2	set	btemp+6
 35327  0000                     ttemp3	set	btemp+9
 35328  0000                     ttemp5	set	btemp+1
 35329  0000                     ttemp6	set	btemp+4
 35330  0000                     ttemp7	set	btemp+8
 35331  0000                     ltemp0	set	btemp
 35332  0000                     ltemp1	set	btemp+4
 35333  0000                     ltemp2	set	btemp+8
 35334  0000                     lltemp0	set	btemp
 35335  0000                     lltemp1	set	btemp+8
 35336  0000                     lltemp2	set	btemp+16
 35337  0000                     lltemp3	set	btemp+24
 35338                           tosu	equ	0x3FFF
 35339                           tosh	equ	0x3FFE
 35340                           tosl	equ	0x3FFD
 35341                           stkptr	equ	0x3FFC
 35342                           pclatu	equ	0x3FFB
 35343                           pclath	equ	0x3FFA
 35344                           pcl	equ	0x3FF9
 35345                           tblptru	equ	0x3FF8
 35346                           tblptrh	equ	0x3FF7
 35347                           tblptrl	equ	0x3FF6
 35348                           tablat	equ	0x3FF5
 35349                           prodh	equ	0x3FF4
 35350                           prodl	equ	0x3FF3
 35351                           indf0	equ	0x3FEF
 35352                           postinc0	equ	0x3FEE
 35353                           postdec0	equ	0x3FED
 35354                           preinc0	equ	0x3FEC
 35355                           plusw0	equ	0x3FEB
 35356                           fsr0h	equ	0x3FEA
 35357                           fsr0l	equ	0x3FE9
 35358                           wreg	equ	0x3FE8
 35359                           indf1	equ	0x3FE7
 35360                           postinc1	equ	0x3FE6
 35361                           postdec1	equ	0x3FE5
 35362                           preinc1	equ	0x3FE4
 35363                           plusw1	equ	0x3FE3
 35364                           fsr1h	equ	0x3FE2
 35365                           fsr1l	equ	0x3FE1
 35366                           bsr	equ	0x3FE0
 35367                           indf2	equ	0x3FDF
 35368                           postinc2	equ	0x3FDE
 35369                           postdec2	equ	0x3FDD
 35370                           preinc2	equ	0x3FDC
 35371                           plusw2	equ	0x3FDB
 35372                           fsr2h	equ	0x3FDA
 35373                           fsr2l	equ	0x3FD9
 35374                           status	equ	0x3FD8


Data Sizes:
    Strings     943
    Constant    492
    Data        1052
    BSS         1300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      62
    BANK0           160     25     153
    BANK1           256      0     255
    BANK2           256      0     254
    BANK3           256      0     134
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 106
		 -> ct(STACK[3]), STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 106
		 -> ct(STACK[3]), STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 106
		 -> STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6127_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 106
		 -> STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 295
		 -> C(BIGRAM[295]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 106
		 -> STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 106
		 -> STR_65(CODE[106]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[7]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4548tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  373928
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            82    10     72   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5476
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5386
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5386
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      0     0      0    5386
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35516
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35456
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35456
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            82    10     72   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     509      69       15.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      86      11       52.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     459      58        0.0%
DATA                 0      0     962       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 21 23:22:25 2019

                     _SPI1_Exchange8bit B930                __end_of_set_display_info B98A  
                                     _C 06FF                                       _D 0826  
                                     _H 00D9                                       _P 0096  
                                     _R 00B1                                       _S 01C6  
                                     _T FB33                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler B6BA            __end_of_start_switch_handler B910  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC3B                  __end_of_FVR_Initialize BB96  
                        _check_day_time 91F2                             __CFG_LVP$ON 000000  
                                   l169 BA82                                     l807 B93E  
                                   l673 B522                                     _GIE 01FE97  
                                   _abs AEA4                                     _pad 9554  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BA2E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack B8CE  
                     _update_adc_result B206                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00A8                           _INT1_CallBack B8AC  
                          __CFG_ZCD$OFF 000000                                    l1002 B142  
                                  l2032 47E0                                    l2036 4A86  
                                  l1340 190A                                    l1324 12A2  
                                  l1190 B182                                    l3014 3B60  
                                  l1350 19AC                                    l1342 1910  
                                  l2224 066A                                    l2080 70CE  
                                  l1360 1BB2                                    l2313 5DCC  
                                  l1361 1DDC                                    l2139 95B0  
                       _timer3ReloadVal 0012                                    l3116 787A  
                                  l3054 80F0                                    l1606 B2C8  
                                  l1366 2354                                    l2159 559A  
                                  l2239 0B1A                                    l1447 AC24  
                                  l1722 B986                                    l2195 123A  
                                  l2363 3336                                    l3085 AEE4  
                                  l3077 8442                                    l2277 71BC  
                                  l1591 A5D2                                    l1665 B25C  
                                  l3185 9432                                    l2298 64F2  
                                  l1682 9774                                    l1674 7D96  
                                  l1835 82AC                                    l1587 A224  
                                  l1675 7EF2                                    l3452 7CDA  
                  _ADCC_StartConversion BA9C                                    l2655 9F66  
                                  l1784 54B6                                    l3480 A76C  
                                  l2666 8B8E                                    l1882 9A82  
                                  l2659 8ABA                                    l3467 A7F0  
                                  l1963 A666                                    l1972 9980  
                                  l2933 431C                                    l2693 8A2C  
                                  l1894 9316                                    l2945 41AC  
                                  l8103 4C8E                                    l8009 755E  
                                  l2978 5006                                    l8203 4FDA  
                                  l8221 3396                                    l8205 4FEA  
                                  l8117 4CE2                                    l8109 4CC8  
                                  l8045 7A16                                    l8037 796A  
                                  l8029 78E2                                    l8231 340C  
                                  l8151 4E40                                    l8143 4E0E  
                                  l8135 4DA8                                    l8127 4D72  
                                  l8071 4B2C                                    l8161 4E82  
                                  l8137 4DBA                                    l8145 4E12  
                                  l8065 4AEC                                    l7601 A3A0  
                                  l6563 B16A                                    l8315 3970  
                                  l8227 33D6                                    l8171 4ECC  
                                  l8091 4C0A                                    l8075 4B42  
                                  l9211 764C                                    l7603 A3C2  
                                  l8333 39E6                                    l8309 3954  
                                  l8245 34A4                                    l8229 33DC  
                                  l7701 3E96                                    l8157 4E5C  
                                  l8085 4BCA                                    l8077 4B72  
                                  l8343 3A5A                                    l8319 3996  
                                  l8247 34AA                                    l8239 3464  
                                  l7711 3F08                                    l8191 4F82  
                                  l8175 4ED2                                    l8095 4C20  
                                  l9231 7766                                    l8361 3B0E  
                                  l8353 3ACA                                    l8329 39E0  
                                  l8257 34FC                                    l8249 34DA  
                                  l7721 3F44                                    l7641 3C46  
                                  l8185 4F46                                    l8097 4C50  
                                  l9225 76EC                                    l9209 762A  
                                  l8417 8E2A                                    l8409 8DF6  
                                  l8433 946E                                    l8505 AE7A  
                                  l8363 3B28                                    l8347 3AA0  
                                  l7803 421A                                    l7715 3F28  
                                  l7635 3C00                                    l8603 AD62  
                                  l9235 77CE                                    l9227 7704  
                                  l9219 76C0                                    l8531 8998  
                                  l8515 8916                                    l7717 3F3A  
                                  l7725 3F74                                    l7653 3CB0  
                                  l7629 3BC0                                    l8197 4FB2  
                                  l9245 786A                                    l9229 7728  
                                  l8437 9486                                    l8429 945C  
                                  l8541 89DA                                    l8533 89B4  
                                  l9261 7B4C                                    l7831 42CC  
                                  l7815 4278                                    l7743 4010  
                                  l7671 3D58                                    l7663 3D06  
                                  l7647 3C7E                                    l7639 3C16  
                                  l8383 8D1A                                    l8455 953A  
                                  l8447 9506                                    l8471 9F64  
                                  l8463 9EEE                                    l9263 7BB8  
                                  l7825 42A4                                    l7745 4022  
                                  l7753 405E                                    l7665 3D36  
                                  l7913 A7E0                                    l7659 3CF0  
                                  l9531 7FD0                                    l9611 53E8  
                                  l9603 5308                                    l8395 8D50  
                                  l8467 9F30                                    l8539 89C4  
                                  l8555 8620                                    l7837 42FC  
                                  l7829 42BC                                    l7765 4136  
                                  l7749 402C                                    l8485 8B08  
                                  l9541 803A                                    l9533 7FEE  
                                  l8389 8D30                                    l7941 637E  
                                  l7783 41CE                                    l7775 4190  
                                  l7767 415C                                    l8479 8A78  
                                  l9551 806E                                    l9543 8050  
                                  l9527 7FAC                                    l9519 7F40  
                                  l7871 AED4                                    l7951 6484  
                                  l7943 63CE                                    l7927 6260  
                                  l8567 86F2                                    l7785 41E0  
                                  l8497 8B8C                                    l8489 8B56  
                                  l9561 80D0                                    l9529 7FBA  
                                  l9617 5484                                    l9625 5496  
                                  l9539 801C                                    l9571 5012  
                                  l9643 B5EA                                    l7947 6416  
                                  l8587 8F2A                                    l8579 8E7E  
                                  l7789 41EC                                    l7885 83E0  
                                  l7799 4214                                    l9591 523A  
                                  l7991 7446                                    l7895 843A  
                                  l9841 AD9E                                    l9577 5042  
                                  l7985 73F2                                    l7889 83E4  
                                  l7969 A75C                                    l9833 B4B4  
                                  l9747 9280                                    l9763 930E  
                                  l9587 5160                                    l7997 748C  
                                  l9599 526C                                    l9775 B2D2  
                                  STR_1 FF4F                                    STR_2 FFA1  
                                  STR_3 FFCF                                    STR_4 FF1C  
                                  STR_5 FE15                                    STR_6 FE15  
                                  STR_7 FE15                                    STR_8 FF0A  
                                  STR_9 FD05                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 A79E                                    u6010 A7A0  
                                  u6100 63FC                                    u6030 61F8  
                                  u6040 6244                                    u5400 B408  
                                  u6105 63F2                                    u6210 73EC  
                                  u7010 9526                                    u5410 B40A  
                                  u6130 B03A                                    _T6PR 003F93  
                                  u6035 61EE                                    u6300 75E8  
                                  u6140 B03C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5510 3EBC  
                                  u6230 7442                                    u7110 AE76  
                                  u6150 A71A                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3EDC  
                                  u7120 88F6                                    u6080 6324  
                                  u6160 A71C                                    _PMD4 0039C4  
                                  u5521 3ED6                                    u6241 744C  
                                  u6065 627E                                    _PMD5 0039C5  
                                  u5370 A3F0                                    u6250 7486  
                                  u6410 7AA0                                    u6330 78DC  
                                  u7050 9F60                                    u7210 8A0C  
                                  u7130 890A                                    u6066 6284  
                                  _PMD6 0039C6                                    u6067 6292  
                                  _PMD7 0039C7                                    u6180 B438  
                                  u6260 74B8                                    u7140 8944  
                                  u7125 88EC                                    u6085 631A  
                                  u7221 85E0                                    u5710 41F2  
                                  u5630 4054                                    u6190 B43A  
                                  u6350 7932                                    u7230 861A  
                                  u7310 8F62                                    u5800 4288  
                                  u5560 3F6C                                    u9000 8064  
                                  u6280 7596                                    u6360 7964  
                                  u7240 864C                                    u5377 A3E2  
                                  u7145 893A                                    u5730 420C  
                                  u5570 3F8C                                    u5538 3EDE  
                                  u7330 AD3E                                    u6370 7996  
                                  u5635 4044                                    u7340 AD5E  
                                  u5900 AEB8                                    u7260 872A  
                                  u5565 3F5C                                    u5670 417E  
                                  u6630 4F20                                    u6550 4E3A  
                                  u6390 7A4E                                    u7190 89E2  
                                  u5910 8364                                    u6640 4F5A  
                                  u9104 5254                                    u7280 8E78  
                                  u5840 B3D8                                    u9105 524E  
                                  u6810 39D8                                    u5770 4268  
                                  u6650 4F96                                    u7290 8EAA  
                                  u5850 B3DA                                    u6635 4F10  
                                  u5915 835A                                    u6740 34EA  
                                  u9124 5322                                    u9044 502C  
                                  u8500 7814                                    u9125 531C  
                                  u9045 5026                                    u6590 4EC4  
                                  u9150 534C                                    u8510 7816  
                                  u5775 4258                                    u9144 5344  
                                  u9064 505C                                    u6920 8D7C  
                                  u5960 8432                                    u8600 7CAE  
                                  u9145 533E                                    u9065 5056  
                                  u6850 3A34                                    u5970 8434  
                                  u6755 367E                                    u5955 8414  
                                  u6860 3A6E                                    u9084 507E  
                                  u6940 8E16                                    u6765 3746  
                                  u9085 5078                                    u9325 B076  
                                  u6870 3AB4                                    u8550 7BE6  
                                  u6855 3A24                                    u6775 390E  
                                  u8607 7CA0                                    u8480 76BC  
                                  u9370 AA3C                                    u8557 7BD8  
                                  u9445 BAC8                                    u6990 94B2  
                                  u8590 7C80                                    u9446 BACA  
                                  u9455 BAB8                                    u9456 BABA  
                                  u9720 A652                                    u9490 8110  
                                  _PLLR 01CEE0                                    u9395 AA70  
                                  u8595 7C7A                                    u9396 AA72  
                                  u9388 AA3E                                    u9580 B896  
                                  u9708 A60E                                    u8597 7C6C  
                                  u9586 B898                                    u9738 A654  
                                  u9690 A60C                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B4FC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AE  
                                  _cp_h FC4B                                    _cp_l FC47  
                                  _atoi 7610                                    _ctoa A66A  
                                  _main 1244                                    _dtoa 54BC  
                                  _nanf AB5A                                    _seed 01F7  
                                  _prec 000C                                    _nout 00AF  
                                  _spin FBC3                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 70D2                                    btemp 0026  
                                  _utoa 64AE                                    _xtoa 5D88  
                __end_of_check_adc_scan BB7E                           ___fpclassifyf 82B6  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0016  
             __end_of_SPI1_Exchange8bit B94E               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AFBC             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B784                            ___param_bank 000000  
                __end_of_check_day_time 9318                      ?_UART1_rx_vect_isr 0046  
                      __end_of_INT0_ISR BB26                        __end_of_INT1_ISR B206  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A22C  
         __end_of_OSCILLATOR_Initialize BA88                                   l10231 ADFC  
                                 l10303 8172                                   l10227 ADCA  
                                 l10411 8FC2                                   l10403 8F98  
                                 l10405 8FA8                                   l12005 0FD6  
                                 l12101 7350                                   l10431 90A8  
                                 l10423 902E                                   l10407 8FAE  
                                 l10415 8FCA                                   l12007 0FF0  
                                 l10511 A2B2                                   l10409 8FB4  
                                 l10417 8FF6                                   l10337 B272  
                                 l12017 1092                                   l10291 8132  
                                 l12043 119A                                   l12027 10E2  
                                 l12123 653E                                   l12115 64E2  
                                 l10443 A620                                   l10507 A23E  
                                 l10605 B12A                                   l12133 6734  
                                 l12301 2844                                   l13021 1ABE  
                                 l12063 713E                                   l12215 60F8  
                                 l10705 85AC                                   l11601 A46A  
                                 l12161 5DF6                                   l12401 312C  
                                 l12313 2984                                   l10713 9A9E  
                                 l13105 2380                                   l13033 1FFE  
                                 l13009 19BE                                   l10299 815E  
                                 l11611 95A8                                   l12083 722E  
                                 l12155 5DBC                                   l12251 24B0  
                                 l10379 B226                                   l10811 70BE  
                                 l11621 9640                                   l11613 95BA  
                                 l11701 558A                                   l12093 72E8  
                                 l12421 32BE                                   l12333 2B96  
                                 l12325 2ADE                                   l12309 2930  
                                 l12253 24C6                                   l10821 9F76  
                                 l10741 6E1C                                   l13037 2060  
                                 l11607 9580                                   l12087 725E  
                                 l12079 71F2                                   l12191 5F88  
                                 l12175 5E92                                   l12167 5E32  
                                 l12415 3264                                   l12271 25F8  
                                 l12431 32E2                                   l10751 6E60  
                                 l10743 6E2C                                   l10719 9B44  
                                 l13063 225A                                   l13047 21DC  
                                 l11617 95F6                                   l11713 55F2  
                                 l12097 7314                                   l12425 32C2  
                                 l12337 2BCA                                   l12273 2632  
                                 l12249 2476                                   l10825 9FB4  
                                 l10761 6E96                                   l10745 6E30  
                                 l10809 7096                                   l13049 2208  
                                 l10579 B51E                                   l12603 4430  
                                 l10915 B100                                   l11723 5804  
                                 l11627 9D5A                                   l12291 27AC  
                                 l12275 2648                                   l11643 6BAE  
                                 l10771 6ECA                                   l10755 6E6C  
                                 l13091 2304                                   l13083 22CE  
                                 l13067 227E                                   l12613 4682  
                                 l11709 55D4                                   l12357 2D2A  
                                 l13085 22E6                                   l13077 22BC  
                                 PRLOCK 0039EF                                   l12623 47F0  
                                 l11743 58B6                                   l11831 0470  
                                 l12199 600E                                   l12367 2DD8  
                                 l11663 6D84                                   l11655 6CD6  
                                 l12471 A32C                                   l10767 6EBE  
                                 l13095 232A                                   l12609 4608  
                                 l11585 9348                                   l11905 0926  
                                 l11825 0396                                   l11809 02FC  
                                 l11817 032A                                   l11761 00AC  
                                 l12377 2EFA                                   l11649 6C6C  
                                 l12627 4812                                   l12619 4748  
                                 l11675 A688                                   l11747 58F2  
                                 l11851 057C                                   l11835 04D2  
                                 l12387 2FB0                                   l10787 6F3E  
                                 l10779 6F18                                   l10875 988E  
                                 l10981 A83E                                   l10869 5D7A  
                                 l11597 A42C                                   l11677 A6B4  
                                 l11853 058E                                   l11829 0406  
                                 l11773 00F0                                   l11781 0146  
                                 l12485 A102                                   l10975 A82E  
                                 l12639 4A7E                                   l11943 0C32  
                                 l11927 0B12                                   l11919 0A48  
                                 l11847 0554                                   l11791 01EA  
                                 l12487 A144                                   l12559 968C  
                                 l10887 98EA                                   l11929 0B34  
                                 l11793 0216                                   l10897 995A  
                                 l11955 0CBA                                   l11963 0D24  
                                 l11971 0D90                                   l11867 05F6  
                                 l11859 0594                                   l11795 022C  
                                 l12907 146E                                   l12851 128C  
                                 l11885 06B8                                   l11869 0602  
                                 l12687 B92C                                   l12599 43DC  
                                 l11991 0F3A                                   l11895 077A  
                                 l11799 0258                                   l12783 7D66  
                                 l12855 12AA                                   l11889 06F0  
                                 l12857 12BC                                   l12849 1284  
                                 l11979 0EA2                                   l12955 16E2  
                                 l12797 7E8E                                   l12991 1976  
                                 l12967 17BC                                   l12977 1914  
                                 l12979 1942                                   l12999 199C  
                       __end_of___aodiv 7610                            _Volts_to_SOC A22C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4326                                   _ADCLK 003EFF  
                       __end_of___aomod 7AC4                                   _ADPCH 003EF1  
                       __end_of___fldiv 5010                                   _ADREF 003EFD  
                       __end_of___awdiv 8E44                         __end_of___flneg AEA4  
                                 STR_10 FD32                                   STR_11 FD48  
                                 STR_12 FF2D                                   STR_21 FF60  
                                 STR_13 FF3E                                   STR_14 FF71  
                                 STR_30 FEE4                                   STR_22 FDEB  
                                 STR_23 FEBE                                   STR_31 FE4C  
                                 STR_15 FD5E                                   STR_40 FF82  
                                 STR_24 FEAB                                   STR_32 FE5F  
                                 STR_16 FD1C                                   STR_41 FF82  
                                 STR_33 FE72                                   STR_25 FD9B  
                                 STR_17 FCB9                           __CFG_WDTE$OFF 000000  
                                 STR_42 FF60                                   STR_50 FFBC  
                                 STR_26 FE98                                   STR_34 FDAF  
                                 STR_18 FCD3                                   STR_51 FFBC  
                                 STR_43 FFFB                                   STR_19 FF82  
                                 STR_27 FE85                                   STR_35 FDFF  
                                 STR_44 FFF8                                   STR_52 FF92  
                                 STR_28 FEF7                                   STR_36 FD87  
                       __end_of___awmod 9554                                   STR_53 FF92  
                                 STR_29 FED1                                   STR_37 FD73  
                                 STR_54 FF92                                   STR_70 FFDA  
                                 STR_46 FFB0                                   STR_38 FDC3  
                                 STR_71 FFE2                                   STR_47 FFC6  
                                 STR_39 FDD7                                   STR_55 FCED  
                                 STR_64 FCB8                                   STR_80 FFEF  
                                 STR_48 FE26                                   _ADRPT 003EEC  
                                 STR_49 FE26                                   STR_57 FE39  
                                 STR_65 FC4F                                   STR_90 FFF2  
                                 STR_74 FFE9                                   STR_66 FFD6  
                                 STR_58 FE13                                   STR_83 FFEC  
                                 STR_67 FFDE                                   STR_76 FFE9  
                                 STR_85 FFEC                                   STR_93 FFF5  
                                 STR_78 FFEF                                   STR_95 FFF5  
                                 STR_88 FFF2                         __end_of___flmul 3B6A  
                                 STR_97 FFE6                                   STR_99 FFE6  
                       __end_of___flsub AF30                         __end_of___fltol 8A36  
                                 u11000 0194                                   u11010 0196  
                                 u11120 0562                                   u11040 02A6  
                                 u11050 02A8                                   u12010 2A0C  
                                 u11150 05C6                                   u12110 3004  
                                 u12040 2C84                                   u11090 050E  
                                 u12130 31B4                                   u12050 2C86  
                       __end_of___lodiv 8752                                   u10620 933C  
                                 u10700 9DD4                                   u11420 10B8  
                                 u11260 0A18                                   u11190 0648  
                                 u12150 A30C                                   u10640 93B8  
                                 u10800 54EE                                   u11440 116E  
                                 u11360 0EE4                                   u11520 7254  
                                 u11450 1170                                   u11530 729A  
                                 _U1P1H 003DED                                   u10707 9DC6  
                                 u11611 6776                                   u10900 5872  
                                 u10820 555E                                   u11620 678C  
                                 u11700 5EDE                                   _U1P2H 003DEF  
                                 u11621 678A                                   u10910 5876  
                                 u11630 67A0                                   u11710 5EE0  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10840 5570  
                                 u11560 7376                                   u11640 67A4  
                                 u11800 6084                                   u10760 6DF8  
                                 u12600 2276                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11537 728C  
                                 u10930 588C                                   u11810 6088  
                                 u11730 5F3E                                   _U1P3L 003DF0  
                                 u10860 55C0                                   u11580 64C8  
                                 u11740 5F40                                   u11660 5DA2  
                                 u12380 7EDE                                   u12460 1594  
                                 u10870 5818                                   u10790 54EC  
                                 u12390 7EE0                                   u12606 2278  
                                 _U2P1L 003DD4                                   u11760 600A  
                                 u11920 2690                                   u12480 17EA  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10881 5848                                   u10890 585E  
                                 u10970 00DA                                   u11770 602A  
                                 u11690 5E8A                                   u11930 2692  
                                 _U2P3L 003DD8                                   u10891 585C  
                                 u11940 26B8                                   u12580 224A  
                                 u11781 605A                                   u11765 5FEC  
                                 u11790 6070                                   u11870 250E  
                                 u12590 2264                                   u11791 606E  
                                 _T5CLK 003F9D                                   u11880 2510  
                       __end_of___lomod 8F84                                   u11890 2536  
                                 u12586 224C                                   u12596 2266  
                                 _T2HLT 003FAD                                   u11990 2898  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00A3                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004B                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B240  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR BBB0                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 8CF6  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 9D12                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR BA16                            _DMA1CON1bits 003BFD  
                                 _fabsf A028                                   _flags 000E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay BB18  
                                 _fputc 9318              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha B046                                   _fputs A41C  
                       __end_of_isdigit B444                         __end_of_ivln2_h FC47  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand B31C  
                                 _width 000A                                   _putch B9E2  
          __end_of_set_ac_charger_relay BAEE                         __end_of_islower B3E4  
                       __end_of_isspace AD72                _INT1_SetInterruptHandler B6E2  
                       __end_of_isupper B414                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0026  
                                 ltemp1 002A                                   ltemp2 002E  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0026  
                                 ttemp1 0029                                   ttemp2 002C  
                                 ttemp3 002F                                   ttemp5 0027  
                                 ttemp6 002A                                   ttemp7 002E  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler B66A  
           _UART1_SetRxInterruptHandler B642                                   wtemp0 0026  
                                 wtemp1 0028                                   wtemp2 002A  
                                 wtemp3 002C                                   wtemp4 002E  
                                 wtemp5 0030                                   wtemp8 0027  
                       __end_of_sprintf 9882                         __end_of_tolower A7FA  
                       __end_of_strncmp 7CE4                         __end_of_toupper A776  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr B7AC  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize AF76  
                 __end_of_ringBufS_init B5CA                         __initialization 9B54  
                     _UART2_rx_vect_isr B7D4                            __end_of_cp_h FC4F  
                          __end_of_cp_l FC4B                            __end_of_atoi 7884  
                          __end_of_ctoa A6F2                            __end_of_main 2394  
                          __end_of_dtoa 593C                            __end_of_nanf ABBC  
                          __end_of_spin FC3B                            __end_of_stoa 7390  
                          __end_of_utoa 67EE                            __end_of_xtoa 6142  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0046  
               __end_of_TMR2_Initialize BA46                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B108                _TMR5_SetInterruptHandler B692  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 009A                       _port_data_dma_ptr BB40  
                    esr_check@esr_state 0018                     ??_UART2_rx_vect_isr 004B  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize B528  
                       _PWM8_Initialize BA5C                        _UART1_Initialize AF30  
                     _UART2_tx_vect_isr B7AC                      _UART2_Transmit_ISR B4FC  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan AA94  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B046  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0046                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 9CC2                                  _RB6PPS 003A0E  
                                i1l1207 8C5E                    _start_switch_handler B8F0  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B002                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright BAFC  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  u456_48 B8DC  
                                _OSCFRQ 0039DF                                  u918_25 BAE8  
                                u918_26 BAEA                                  u919_20 BB14  
                                u943_20 B280                                  u943_26 B282  
                                u962_20 8FBE                                  u962_21 8FB8  
                  __size_of_hid_display 0102                                  u966_24 909E  
                                u966_25 909A                                  u959_28 8F9E  
                                u993_48 B876                                  u987_28 B8BA  
                                u996_28 B82E                        __end_of___xxtofl 80FA  
 __end_of_ADCC_DischargeSampleCapacitor BB76  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor BB6E                __end_of_send_lcd_cmd_dma AD20  
                       _TMR3_WriteTimer B148                     ??_UART2_tx_vect_isr 004B  
             __end_of_UART2_rx_vect_isr B7FA              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize BB36                        _UART2_Initialize ABBC  
                                _WaitMs B2B0                         _conv_raw_result 5010  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8A36                                  ___fleq 9EAC  
                     _ADCC_ThresholdISR A9C4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A548                                  _efgtoa 0000  
                                _floorf 6142                      ?_ADCC_ThresholdISR 0046  
                                _memset 6B16                    __size_of_help_button 0038  
                                clear_0 9BC6                                  clear_1 9BDA  
                                clear_2 9BEC                                  clear_3 9BF8  
                                clear_4 9C04                                  clear_5 9C10  
                                clear_6 9C1C               __end_of_port_data_dma_ptr BB4A  
                                _printf AAF8                      _eaDogM_WriteString A2D4  
                                _strcpy 9D12                               ?_ADCC_ISR 0046  
                                _strlen A37A                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize A95A  
                        _PMD_Initialize BA88              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B7D4                                  lltemp0 0026  
                                lltemp1 002E                                  lltemp2 0036  
                                lltemp3 003E                     ??_ADCC_ThresholdISR 0046  
                __end_of_start_adc_scan AAF8                            __mediumconst FA62  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay AC74  
                      __end_of_spinners 9B54                        __end_of_vfprintf A182  
                            _StartTimer B088                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AFBC  
                     _SYSTEM_Initialize AE12                              __accesstop 0060  
               __end_of__initialization 9C2E                               ?_INT0_ISR 0046  
                             ?_INT1_ISR 0046                    __end_of_display_help BB8E  
                  __end_of_display_info BB86               __end_of_CLKREF_Initialize BB40  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B108                   _set_temp_display_help BACE  
                      _clear_hid_pflags B7FA                   __end_of_TMR3_CallBack B866  
             __end_of_ADCC_ThresholdISR AA2E                      __size_of_calc_bsoc 0770  
                __end_of_ringBufS_flush A5DA                          __pcstackCOMRAM 0046  
                            ___inthi_sp 115C                              ___intlo_sp 18AE  
                          __pidataBANK0 B444                            __pidataBANK1 9DE6  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A0D6  
                             ?_TMR3_ISR 0046                               ?_TMR5_ISR 0046  
                             ?_TMR6_ISR 0046                          ivt0x8_undefint 00AC  
                         __end_of_fputc 943C                           __end_of_fputs A4B4  
                  _get_ac_charger_relay BB0A                           __end_of_srand B350  
                 __end_of_TMR5_CallBack B842                           __end_of_putch B9FC  
                  _set_ac_charger_relay BADE                 __end_of_PWM8_Initialize BA72  
               __end_of_TMR6_Initialize B552                       _adc_int_t_handler A7FA  
                __end_of_PMD_Initialize BA9C                              __end_of_bp FC43  
                            ??_ADCC_ISR 0046                   __end_of_TMR6_CallBack B88A  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 001A  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR BB58  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan BB96  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize AE5C  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B188                              __pbssBANK0 0060  
                            __pbssBANK1 01C6                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 7CE4                 __end_of_conv_raw_result 54BC  
                    __size_of_esr_check 02D0                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0046                              ??_INT1_ISR 004C  
                     __end_of_TimerDone B5F2                        _DMA1_DMADCNT_ISR BB4C  
                    __size_of_init_bsoc 0172              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B384                   __end_of_wait_lcd_done B9E2  
      __end_of_TMR3_SetInterruptHandler B6E2                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler B692                              ??_TMR3_ISR 00E0  
               __end_of_ADCC_Initialize A9C4                              ??_TMR5_ISR 0050  
             __end_of_adc_int_t_handler A878                              ??_TMR6_ISR 004B  
                     __end_of___asfladd A8F0                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B75A  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B732  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B910  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan BB9C                                 u1024_44 A85E  
                               u1024_45 A858                                 u1223_20 4738  
                        ?_DMA1_DMAA_ISR 0046                        _DMA1_DMASCNT_ISR BB28  
                               u1231_28 B852                                 u1225_20 4802  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0046              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4A96                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch B4A2                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer B148                 __size_of_switch_handler 0140  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one BACE  
            __end_of_set_load_relay_two BABE       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 844C  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim BA16  
                               __Lparam 0000                __end_of_UART1_Initialize AF76  
                     __end_of_hid_input A66A                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7390                                 ___fladd 3B6A  
                               ___aomod 7884                                 ___fldiv 4A96  
                               ___awdiv 8CF6                                 ___flneg AE5C  
                               ___awmod 943C                                 ___flmul 3340  
                               ___flsub AEEA                                 ___fltol 88C4  
                               ___lodiv 85D2                                 ___lomod 8E44  
             __end_of_UART1_Receive_ISR B930                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 9A6E  
                               __pcinit 9B54                __end_of_mode_lamp_bright BB0A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand BAEE                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B188  
                               __ptext2 B8F0                                 __ptext3 B31C  
                               __ptext4 9A6E                                 __ptext5 B384  
                               __ptext6 9984                                 __ptext7 B552  
                               __ptext8 B57A                                 __ptext9 B930  
                     __end_of_esr_check 70D2                       _UART2_Receive_ISR B9A8  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize BA72                                 us631999 75FA  
                          __size_of_abs 0046                                 us642999 7AB2  
                               us732999 8F74                            __size_of_pad 0114  
                     __end_of_init_bsoc 88C4                                 _isalpha B002  
                               us727999 873C                                 _isdigit B414  
                               _ivln2_h FC43                               _T3CONbits 003FA6  
                               _mode_sw 001C                       __end_of_lp_filter 82B6  
                               _islower B3B4                                 _isspace AD20  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize AC1A                                 _isupper B3E4  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9778  
                               _tolower A776                   __size_of_display_help 0008  
                               _utctime 008E                   __size_of_display_info 0008  
                               _strncmp 7AC4                                 _toupper A6F2  
                  end_of_initialization 9C2E               __size_of_convert_adc_data 00B8  
                    _check_enter_button B0C8                               i1u1242_20 8C56  
   __end_of_UART2_SetRxInterruptHandler B642             _UART2_SetRxInterruptHandler B61A  
                             i2u1033_48 B7C0                               i2u1035_48 B7E6  
                             i2u1027_48 B4E8                               i2u1029_48 A9FA  
                             i2u1029_49 AA0E                               i2u1241_48 B798  
               check_day_time@day_delay 001B                       __end_of_set_vterm B96C  
                     __end_of_vfpfcnvrt 3340                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd BBA8               __end_of_UART2_Receive_ISR B9C6  
                        wdtdelay@dcount 0092                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004C                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc BBAE  
              _TMR3_SetInterruptHandler B6BA                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B66A                            _display_help BB86  
                 _TMR5_InterruptHandler 009D                            _display_info BB7E  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B81E  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B782  
           _ADCC_SetADIInterruptHandler B75A                              _update_lcd 9668  
                       _calc_model_data 593C                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B188  
                       _DMA1_Initialize A8F0                              _start_bsoc B88A  
                       _SPI1_Initialize BA46                   __end_of_get_vterm_ptr B4A2  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B2E6            __end_of_INTERRUPT_Initialize AA94  
                            _vterm_dump 90C4                          __end_of___flge 8B98  
                        __end_of___fleq 9F70    __end_of_INT0_DefaultInterruptHandler BBBC  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler BBBA  
            __size_of_UART1_Receive_ISR 0020                         _DMA2_Initialize AC74  
                         __pidataBIGRAM 67EE                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 015E                       __size_of_TMR5_ISR 00DE  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 64AE             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0072                          __end_of_memset 6E02  
                        __end_of_printf AB5A                __end_of_DMA1_DMADCNT_ISR BB56  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B8F0  
                        __end_of_strcpy 9DE6                          __end_of_strlen A41C  
                   start_initialization 9B54    __end_of_TMR5_DefaultInterruptHandler B2B0  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B278  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs AEEA  
                 __end_of_INT1_CallBack B8CE               __size_of_set_display_info 001E  
                           __end_of_pad 9668                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B5A2                          _switch_handler 8F84  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01EF                   __end_of___fpclassifyf 844C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR BB36  
                         _uart2TxBuffer 0254                          _DMA1_DMAOR_ISR BB64  
                   __end_of_hid_display 9984              __end_of_send_port_data_dma ADC4  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B5CA  
                         _ringBufS_init B5A2                             __pdataBANK0 00B1  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B384  
               __end_of_calc_model_data 5D88                     __end_of_help_button B278  
       __end_of_eaDogM_WriteStringAtPos B31C                     __end_of_BVSOC_TABLE FB33  
                             ___asfladd A878                    calc_model_data@bcror 0086  
                           __pbssBIGRAM 0826                 __end_of_DMA1_Initialize A95A  
                  calc_model_data@bvror 008A                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler B732                           __pcstackBANK0 00E0  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 90C4                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BA5C                _UART1_RxInterruptHandler 00A9  
              _UART2_TxInterruptHandler 00AC                               __end_of_T FBC3  
                      _convert_adc_data 9F70                               _calc_bsoc 4326  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9984  
                __end_of_DMA1_DMAOR_ISR BB6E                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A0                      calc_ror_data@bcror 007E  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize ACCE  
                    calc_ror_data@bvror 0082                  _PIN_MANAGER_Initialize A4B4  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set BBA2  
                         __pmediumconst FA62                               __ptext100 593C  
                             __ptext101 BBA8                               __ptext110 B61A  
                             __ptext102 B88A                               __ptext111 AF30  
                             __ptext103 80FA                               __ptext120 BA46  
                             __ptext112 B642                               __ptext104 AEEA  
                             __ptext121 BA5C                               __ptext113 B528  
                             __ptext105 3B6A                               __ptext130 AC74  
                             __ptext122 BA88                               __ptext114 B66A  
                             __ptext106 3340                               __ptext131 A8F0  
                             __ptext123 A4B4                               __ptext115 AF76  
                             __ptext107 AE12                               __ptext140 9C34  
                             __ptext132 BB36                               __ptext124 BA72  
                             __ptext116 B692                               __ptext108 ABBC  
                             __ptext141 B108                               __ptext133 A95A  
                             __ptext125 AA2E                               __ptext117 AFBC  
                             __ptext109 B5F2                               __ptext150 BBB8  
                             __ptext142 B81E                               __ptext134 B732  
                             __ptext126 BB8E                               __ptext118 B6BA  
                             __ptext151 4326                               __ptext143 B278  
                             __ptext135 B75A                               __ptext127 B350  
                             __ptext119 BA2E                               __ptext160 A7FA  
                             __ptext152 AD72                               __ptext144 91F2  
                             __ptext136 B1C8                               __ptext128 B6E2  
                             __ptext161 BBBC                               __ptext153 BB40  
                             __ptext145 BADE                               __ptext137 B8AC  
                             __ptext129 B70A                               __ptext170 B9FC  
                             __ptext162 BBBE                               __ptext154 A878  
                             __ptext146 BB0A                               __ptext138 BBB6  
                             __ptext171 B866                               __ptext163 A9C4  
                             __ptext155 BB18                               __ptext147 8B98  
                             __ptext139 8F84                               __ptext172 ADC4  
                             __ptext164 B784                               __ptext156 B8CE  
                             __ptext148 B148                               __ptext173 BB28  
                             __ptext165 B910                               __ptext157 BBBA  
                             __ptext149 B842                               __ptext174 BB4C  
                             __ptext166 B7AC                               __ptext158 BBB0  
                             __ptext175 BB58                               __ptext167 B4FC  
                             __ptext159 B4D0                               __ptext176 BB64  
                             __ptext168 B7D4                               __ptext177 0000  
                             __ptext169 B9A8                               _hid_input A5DA  
                    __end_of_StartTimer B0C8                      _set_load_relay_one BABE  
                    _set_load_relay_two BAAE                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B4D0                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0076                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6E02  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8752                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 80FA  
                           _hid_display 9882                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize AA2E  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0046                                _INT0_ISR BB18  
                              _INT1_ISR B1C8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0294  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0343                               _ring_buf2 0300  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B842  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                               _set_vterm B94E  
                   __size_of_update_lcd 0110                             _help_button B240  
                              _TMR3_ISR 8B98                             _BVSOC_TABLE FA63  
                              _TMR5_ISR 9C34                                _TMR6_ISR B9FC  
                             _port_data 04FF                     __size_of_static_soc 003E  
                             _vfpfcnvrt 2394                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B81E  
                            _ADCON0bits 003EF8                      __end_of_check_help 7EF6  
                             _start_lcd BBA2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B866  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc BBA8                        _set_display_info B96C  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9B68  
                             copy_data1 9B8E                               copy_data2 9BB0  
              _INT0_SetInterruptHandler B70A                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler B61A             _UART2_SetTxInterruptHandler B5F2  
                          _uart1RxCount 0023                            _uart2RxCount 001D  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done B9C6                            _send_lcd_cmd B57A  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler BBBE                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch B4CE  
               __size_of_check_day_time 0126                   __end_of_DMA1_DMAA_ISR BB62  
                    ___fpclassifyf@F463 007A    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 7EF6  
                     ?_DMA1_DMADCNT_ISR 0046             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand BAFC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 004C  
                              __ptext10 B5A2                                __ptext11 8752  
                              __ptext20 BB6E                                __ptext12 A22C  
                              __ptext21 BB96                                __ptext13 9882  
                              __ptext30 9778                                __ptext22 BB76  
                              __ptext14 A5DA                                __ptext31 B474  
                              __ptext23 BAAE                                __ptext15 B4A2  
                              __ptext40 BBA2                                __ptext32 B2B0  
                              __ptext24 BABE                                __ptext16 6E02  
                              __ptext41 A548                                __ptext33 9668  
                              __ptext25 BAEE                                __ptext17 B206  
                              __ptext50 64AE                                __ptext42 6B16  
                              __ptext34 B2E6                                __ptext26 9F70  
                              __ptext18 AA94                                __ptext51 8E44  
                              __ptext43 AAF8                                __ptext35 ACCE  
                              __ptext27 B7FA                                __ptext19 BA9C  
                              __ptext60 82B6                                __ptext52 85D2  
                              __ptext44 A0D6                                __ptext36 B9C6  
                              __ptext28 7CE4                                __ptext61 88C4  
                              __ptext53 7AC4                                __ptext45 2394  
                              __ptext37 AC1A                                __ptext29 90C4  
                              __ptext70 A66A                                __ptext62 AE5C  
                              __ptext54 70D2                                __ptext46 5D88  
                              __ptext38 A2D4                                __ptext71 9554  
                              __ptext63 9EAC                                __ptext55 0000  
                              __ptext47 A6F2                                __ptext39 BB9C  
                              __ptext80 B94E                                __ptext72 A37A  
                              __ptext64 943C                                __ptext56 A776  
                              __ptext48 B3B4                                __ptext81 BACE  
                              __ptext73 A41C                                __ptext65 8CF6  
                              __ptext57 B3E4                                __ptext49 B002  
                              __ptext90 BB86                                __ptext82 B96C  
                              __ptext74 9318                                __ptext66 54BC  
                              __ptext58 9D12                                __ptext91 B0C8  
                              __ptext83 BA16                                __ptext75 B9E2  
                              __ptext67 AEA4                                __ptext59 6142  
                              __ptext92 844C                                __ptext84 BAFC  
                              __ptext76 A182                                __ptext68 7884  
                              __ptext93 A028                                __ptext85 B046  
                              __ptext77 7610                                __ptext69 7390  
                              __ptext94 5010                                __ptext86 B240  
                              __ptext78 AD20                                __ptext95 AB5A  
                              __ptext87 B5CA                                __ptext79 B414  
                              __ptext96 B98A                                __ptext88 B088  
                              __ptext97 7EF6                                __ptext89 BB7E  
                              __ptext98 4A96                                __ptext99 8A36  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1147999 70E4  
                              us1078999 54D6                                us1159999 6514  
                              us1168999 5E08                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A182  
                  __end_of_Volts_to_SOC A2D4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1150  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0046  
                 __end_of_init_port_dma B3B4                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00A6  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 004C  
          __end_of_ADCC_StartConversion BAAE                                _spi_link 0060  
                              _wdtdelay AC1A              __end_of_UART2_Transmit_ISR B528  
                              _spinners 9A6E                                _vfprintf A0D6  
              __end_of_convert_adc_data A028              __end_of_PWM8_LoadDutyValue B088  
  __end_of_TMR3_DefaultInterruptHandler BBBA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler BBB8    __end_of_INT1_DefaultInterruptHandler BBB8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler BBB6  
                    _send_port_data_dma AD72                           ??_Default_ISR 0046  
                           _uart1RxHead 0025                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 001F                             _uart1RxTail 0024  
                        _get_raw_result B98A                             _uart2TxHead 0022  
                           _uart2RxTail 001E                               spinners@s 006C  
                           _uart2TxTail 0021                            _wait_lcd_set BB9C  
                      Volts_to_SOC@slot 0019                      _EXT_INT_Initialize B350  
  __end_of_TMR6_DefaultInterruptHandler AE12   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler ADC4    __end_of_ADCC_DefaultInterruptHandler BBBE  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler BBBC  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B552          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help BADE                   __end_of_calc_ror_data 85D2  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A37A  
                 __end_of_mode_lamp_dim BA2E                 __end_of_adc_int_handler BBC0  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 9778                  _uart2TxBufferRemaining 0020  
                    __end_of_static_soc B1C6                      __end_of_start_bsoc B8AC  
                        _FVR_Initialize BB8E                  __end_of_get_raw_result B9A8  
                      _send_lcd_cmd_dma ACCE                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0014        __end_of_INT1_SetInterruptHandler B70A  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 004C  
             __end_of_send_lcd_cmd_long B57A                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR BBB6          __end_of_PIN_MANAGER_Initialize A548  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 91F2  
               _eaDogM_WriteStringAtPos B2E6                           _get_vterm_ptr B474  
                        _check_adc_scan BB76               __size_of_UART2_Initialize 005E  
